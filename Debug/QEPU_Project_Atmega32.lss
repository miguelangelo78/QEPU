
QEPU_Project_Atmega32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000654a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000a8  00800060  0000654a  000065fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800108  00800108  000066a6  2**0
                  ALLOC
  3 .eeprom       00000002  00810000  00810000  000066a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  000066a8  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000002b8  00000000  00000000  00006704  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000cd91  00000000  00000000  000069bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000100a  00000000  00000000  0001374d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f64  00000000  00000000  00014757  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000010c8  00000000  00000000  000156bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cbf  00000000  00000000  00016784  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000058e2  00000000  00000000  00017443  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002e8  00000000  00000000  0001cd25  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c8 00 	jmp	0x190	; 0x190 <__ctors_end>
       4:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
       8:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
       c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      10:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      14:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      18:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      1c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      20:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      24:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      28:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      2c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      30:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      34:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      38:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      3c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      40:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      44:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      48:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      4c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      50:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      54:	84 20       	and	r8, r4
      56:	a1 20       	and	r10, r1
      58:	94 25       	eor	r25, r4
      5a:	94 25       	eor	r25, r4
      5c:	a8 20       	and	r10, r8
      5e:	94 25       	eor	r25, r4
      60:	94 25       	eor	r25, r4
      62:	94 25       	eor	r25, r4
      64:	a9 20       	and	r10, r9
      66:	aa 20       	and	r10, r10
      68:	94 25       	eor	r25, r4
      6a:	94 25       	eor	r25, r4
      6c:	94 25       	eor	r25, r4
      6e:	b0 20       	and	r11, r0
      70:	b9 20       	and	r11, r9
      72:	c2 20       	and	r12, r2
      74:	e9 20       	and	r14, r9
      76:	10 21       	and	r17, r0
      78:	37 21       	and	r19, r7
      7a:	5e 21       	and	r21, r14
      7c:	85 21       	and	r24, r5
      7e:	ac 21       	and	r26, r12
      80:	f8 21       	and	r31, r8
      82:	44 22       	and	r4, r20
      84:	90 22       	and	r9, r16
      86:	dc 22       	and	r13, r28
      88:	28 23       	and	r18, r24
      8a:	98 23       	and	r25, r24
      8c:	08 24       	eor	r0, r8
      8e:	82 24       	eor	r8, r2
      90:	ce 24       	eor	r12, r14
      92:	1a 25       	eor	r17, r10
      94:	43 25       	eor	r20, r3
      96:	6c 25       	eor	r22, r12
      98:	08 4a       	sbci	r16, 0xA8	; 168
      9a:	d7 3b       	cpi	r29, 0xB7	; 183
      9c:	3b ce       	rjmp	.-906    	; 0xfffffd14 <__eeprom_end+0xff7efd12>
      9e:	01 6e       	ori	r16, 0xE1	; 225
      a0:	84 bc       	out	0x24, r8	; 36
      a2:	bf fd       	.word	0xfdbf	; ????
      a4:	c1 2f       	mov	r28, r17
      a6:	3d 6c       	ori	r19, 0xCD	; 205
      a8:	74 31       	cpi	r23, 0x14	; 20
      aa:	9a bd       	out	0x2a, r25	; 42
      ac:	56 83       	std	Z+6, r21	; 0x06
      ae:	3d da       	rcall	.-2950   	; 0xfffff52a <__eeprom_end+0xff7ef528>
      b0:	3d 00       	.word	0x003d	; ????
      b2:	c7 7f       	andi	r28, 0xF7	; 247
      b4:	11 be       	out	0x31, r1	; 49
      b6:	d9 e4       	ldi	r29, 0x49	; 73
      b8:	bb 4c       	sbci	r27, 0xCB	; 203
      ba:	3e 91       	ld	r19, -X
      bc:	6b aa       	std	Y+51, r6	; 0x33
      be:	aa be       	out	0x3a, r10	; 58
      c0:	00 00       	nop
      c2:	00 80       	ld	r0, Z
      c4:	3f 07       	cpc	r19, r31
      c6:	63 42       	sbci	r22, 0x23	; 35
      c8:	36 b7       	in	r19, 0x36	; 54
      ca:	9b d8       	rcall	.-3786   	; 0xfffff202 <__eeprom_end+0xff7ef200>
      cc:	a7 1a       	sub	r10, r23
      ce:	39 68       	ori	r19, 0x89	; 137
      d0:	56 18       	sub	r5, r6
      d2:	ae ba       	out	0x1e, r10	; 30
      d4:	ab 55       	subi	r26, 0x5B	; 91
      d6:	8c 1d       	adc	r24, r12
      d8:	3c b7       	in	r19, 0x3c	; 60
      da:	cc 57       	subi	r28, 0x7C	; 124
      dc:	63 bd       	out	0x23, r22	; 35
      de:	6d ed       	ldi	r22, 0xDD	; 221
      e0:	fd 75       	andi	r31, 0x5D	; 93
      e2:	3e f6       	brtc	.-114    	; 0x72 <__SREG__+0x33>
      e4:	17 72       	andi	r17, 0x27	; 39
      e6:	31 bf       	out	0x31, r19	; 49
      e8:	00 00       	nop
      ea:	00 80       	ld	r0, Z
      ec:	3f 07       	cpc	r19, r31
      ee:	2c 7a       	andi	r18, 0xAC	; 172
      f0:	a5 ba       	out	0x15, r10	; 21
      f2:	6c c5       	rjmp	.+2776   	; 0xbcc <_ZN5Gates8ampl2vecEiPiS0_+0x10a>
      f4:	90 da       	rcall	.-2784   	; 0xfffff616 <__eeprom_end+0xff7ef614>
      f6:	3b 93       	.word	0x933b	; ????
      f8:	65 fc       	sbrc	r6, 5
      fa:	8b bc       	out	0x2b, r8	; 43
      fc:	53 f8       	bld	r5, 3
      fe:	10 fd       	sbrc	r17, 0
     100:	3c 56       	subi	r19, 0x6C	; 108
     102:	92 83       	std	Z+2, r25	; 0x02
     104:	4d bd       	out	0x2d, r20	; 45
     106:	87 9d       	mul	r24, r7
     108:	3a b6       	in	r3, 0x3a	; 58
     10a:	3d cb       	rjmp	.-2438   	; 0xfffff786 <__eeprom_end+0xff7ef784>
     10c:	c9 bf       	out	0x39, r28	; 57
     10e:	5b be       	out	0x3b, r5	; 59
     110:	73 da       	rcall	.-2842   	; 0xfffff5f8 <__eeprom_end+0xff7ef5f6>
     112:	0f c9       	rjmp	.-3554   	; 0xfffff332 <__eeprom_end+0xff7ef330>
     114:	3f 05       	cpc	r19, r15
     116:	a8 4c       	sbci	r26, 0xC8	; 200
     118:	cd b2       	in	r12, 0x1d	; 29
     11a:	d4 4e       	sbci	r29, 0xE4	; 228
     11c:	b9 38       	cpi	r27, 0x89	; 137
     11e:	36 a9       	ldd	r19, Z+54	; 0x36
     120:	02 0c       	add	r0, r2
     122:	50 b9       	out	0x00, r21	; 0
     124:	91 86       	std	Z+9, r9	; 0x09
     126:	88 08       	sbc	r8, r8
     128:	3c a6       	std	Y+44, r3	; 0x2c
     12a:	aa aa       	std	Y+50, r10	; 0x32
     12c:	2a be       	out	0x3a, r2	; 58
     12e:	00 00       	nop
     130:	00 80       	ld	r0, Z
     132:	3f 08       	sbc	r3, r15
     134:	00 00       	nop
     136:	00 be       	out	0x30, r0	; 48
     138:	92 24       	eor	r9, r2
     13a:	49 12       	cpse	r4, r25
     13c:	3e ab       	std	Y+54, r19	; 0x36
     13e:	aa aa       	std	Y+50, r10	; 0x32
     140:	2a be       	out	0x3a, r2	; 58
     142:	cd cc       	rjmp	.-1638   	; 0xfffffade <__eeprom_end+0xff7efadc>
     144:	cc 4c       	sbci	r28, 0xCC	; 204
     146:	3e 00       	.word	0x003e	; ????
     148:	00 00       	nop
     14a:	80 be       	out	0x30, r8	; 48
     14c:	ab aa       	std	Y+51, r10	; 0x33
     14e:	aa aa       	std	Y+50, r10	; 0x32
     150:	3e 00       	.word	0x003e	; ????
     152:	00 00       	nop
     154:	00 bf       	out	0x30, r16	; 48
     156:	00 00       	nop
     158:	00 80       	ld	r0, Z
     15a:	3f 00       	.word	0x003f	; ????
     15c:	00 00       	nop
     15e:	00 00       	nop
     160:	08 41       	sbci	r16, 0x18	; 24
     162:	78 d3       	rcall	.+1776   	; 0x854 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x1a2>
     164:	bb 43       	sbci	r27, 0x3B	; 59
     166:	87 d1       	rcall	.+782    	; 0x476 <_ZN6EEProm4readEj+0x4a>
     168:	13 3d       	cpi	r17, 0xD3	; 211
     16a:	19 0e       	add	r1, r25
     16c:	3c c3       	rjmp	.+1656   	; 0x7e6 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x134>
     16e:	bd 42       	sbci	r27, 0x2D	; 45
     170:	82 ad       	ldd	r24, Z+58	; 0x3a
     172:	2b 3e       	cpi	r18, 0xEB	; 235
     174:	68 ec       	ldi	r22, 0xC8	; 200
     176:	82 76       	andi	r24, 0x62	; 98
     178:	be d9       	rcall	.-3204   	; 0xfffff4f6 <__eeprom_end+0xff7ef4f4>
     17a:	8f e1       	ldi	r24, 0x1F	; 31
     17c:	a9 3e       	cpi	r26, 0xE9	; 233
     17e:	4c 80       	ldd	r4, Y+4	; 0x04
     180:	ef ff       	.word	0xffef	; ????
     182:	be 01       	movw	r22, r28
     184:	c4 ff       	sbrs	r28, 4
     186:	7f 3f       	cpi	r23, 0xFF	; 255
     188:	00 00       	nop
     18a:	00 00       	nop
	...

0000018e <__ctors_start>:
     18e:	b7 1d       	adc	r27, r7

00000190 <__ctors_end>:
     190:	11 24       	eor	r1, r1
     192:	1f be       	out	0x3f, r1	; 63
     194:	cf e5       	ldi	r28, 0x5F	; 95
     196:	d8 e0       	ldi	r29, 0x08	; 8
     198:	de bf       	out	0x3e, r29	; 62
     19a:	cd bf       	out	0x3d, r28	; 61

0000019c <__do_copy_data>:
     19c:	11 e0       	ldi	r17, 0x01	; 1
     19e:	a0 e6       	ldi	r26, 0x60	; 96
     1a0:	b0 e0       	ldi	r27, 0x00	; 0
     1a2:	ea e4       	ldi	r30, 0x4A	; 74
     1a4:	f5 e6       	ldi	r31, 0x65	; 101
     1a6:	02 c0       	rjmp	.+4      	; 0x1ac <__do_copy_data+0x10>
     1a8:	05 90       	lpm	r0, Z+
     1aa:	0d 92       	st	X+, r0
     1ac:	a8 30       	cpi	r26, 0x08	; 8
     1ae:	b1 07       	cpc	r27, r17
     1b0:	d9 f7       	brne	.-10     	; 0x1a8 <__do_copy_data+0xc>

000001b2 <__do_clear_bss>:
     1b2:	21 e0       	ldi	r18, 0x01	; 1
     1b4:	a8 e0       	ldi	r26, 0x08	; 8
     1b6:	b1 e0       	ldi	r27, 0x01	; 1
     1b8:	01 c0       	rjmp	.+2      	; 0x1bc <.do_clear_bss_start>

000001ba <.do_clear_bss_loop>:
     1ba:	1d 92       	st	X+, r1

000001bc <.do_clear_bss_start>:
     1bc:	a0 31       	cpi	r26, 0x10	; 16
     1be:	b2 07       	cpc	r27, r18
     1c0:	e1 f7       	brne	.-8      	; 0x1ba <.do_clear_bss_loop>

000001c2 <__do_global_ctors>:
     1c2:	11 e0       	ldi	r17, 0x01	; 1
     1c4:	c0 e9       	ldi	r28, 0x90	; 144
     1c6:	d1 e0       	ldi	r29, 0x01	; 1
     1c8:	04 c0       	rjmp	.+8      	; 0x1d2 <__do_global_ctors+0x10>
     1ca:	22 97       	sbiw	r28, 0x02	; 2
     1cc:	fe 01       	movw	r30, r28
     1ce:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <__tablejump__>
     1d2:	ce 38       	cpi	r28, 0x8E	; 142
     1d4:	d1 07       	cpc	r29, r17
     1d6:	c9 f7       	brne	.-14     	; 0x1ca <__do_global_ctors+0x8>
     1d8:	0e 94 e4 27 	call	0x4fc8	; 0x4fc8 <main>
     1dc:	0c 94 a3 32 	jmp	0x6546	; 0x6546 <_exit>

000001e0 <__bad_interrupt>:
     1e0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001e4 <_ZN7ComplexC1Eff>:
     1e4:	0f 93       	push	r16
     1e6:	1f 93       	push	r17
     1e8:	fc 01       	movw	r30, r24
     1ea:	40 83       	st	Z, r20
     1ec:	51 83       	std	Z+1, r21	; 0x01
     1ee:	62 83       	std	Z+2, r22	; 0x02
     1f0:	73 83       	std	Z+3, r23	; 0x03
     1f2:	04 83       	std	Z+4, r16	; 0x04
     1f4:	15 83       	std	Z+5, r17	; 0x05
     1f6:	26 83       	std	Z+6, r18	; 0x06
     1f8:	37 83       	std	Z+7, r19	; 0x07
     1fa:	1f 91       	pop	r17
     1fc:	0f 91       	pop	r16
     1fe:	08 95       	ret

00000200 <_ZN7ComplexC1Ev>:
     200:	fc 01       	movw	r30, r24
     202:	10 82       	st	Z, r1
     204:	11 82       	std	Z+1, r1	; 0x01
     206:	12 82       	std	Z+2, r1	; 0x02
     208:	13 82       	std	Z+3, r1	; 0x03
     20a:	14 82       	std	Z+4, r1	; 0x04
     20c:	15 82       	std	Z+5, r1	; 0x05
     20e:	16 82       	std	Z+6, r1	; 0x06
     210:	17 82       	std	Z+7, r1	; 0x07
     212:	08 95       	ret

00000214 <_ZN7Complex3addES_>:
     214:	af 92       	push	r10
     216:	bf 92       	push	r11
     218:	cf 92       	push	r12
     21a:	df 92       	push	r13
     21c:	ef 92       	push	r14
     21e:	ff 92       	push	r15
     220:	0f 93       	push	r16
     222:	1f 93       	push	r17
     224:	cf 93       	push	r28
     226:	df 93       	push	r29
     228:	cd b7       	in	r28, 0x3d	; 61
     22a:	de b7       	in	r29, 0x3e	; 62
     22c:	68 97       	sbiw	r28, 0x18	; 24
     22e:	0f b6       	in	r0, 0x3f	; 63
     230:	f8 94       	cli
     232:	de bf       	out	0x3e, r29	; 62
     234:	0f be       	out	0x3f, r0	; 63
     236:	cd bf       	out	0x3d, r28	; 61
     238:	5c 01       	movw	r10, r24
     23a:	09 8b       	std	Y+17, r16	; 0x11
     23c:	1a 8b       	std	Y+18, r17	; 0x12
     23e:	2b 8b       	std	Y+19, r18	; 0x13
     240:	3c 8b       	std	Y+20, r19	; 0x14
     242:	4d 8b       	std	Y+21, r20	; 0x15
     244:	5e 8b       	std	Y+22, r21	; 0x16
     246:	6f 8b       	std	Y+23, r22	; 0x17
     248:	78 8f       	std	Y+24, r23	; 0x18
     24a:	2d 89       	ldd	r18, Y+21	; 0x15
     24c:	3e 89       	ldd	r19, Y+22	; 0x16
     24e:	4f 89       	ldd	r20, Y+23	; 0x17
     250:	58 8d       	ldd	r21, Y+24	; 0x18
     252:	fc 01       	movw	r30, r24
     254:	64 81       	ldd	r22, Z+4	; 0x04
     256:	75 81       	ldd	r23, Z+5	; 0x05
     258:	86 81       	ldd	r24, Z+6	; 0x06
     25a:	97 81       	ldd	r25, Z+7	; 0x07
     25c:	0e 94 30 28 	call	0x5060	; 0x5060 <__addsf3>
     260:	6b 01       	movw	r12, r22
     262:	7c 01       	movw	r14, r24
     264:	29 89       	ldd	r18, Y+17	; 0x11
     266:	3a 89       	ldd	r19, Y+18	; 0x12
     268:	4b 89       	ldd	r20, Y+19	; 0x13
     26a:	5c 89       	ldd	r21, Y+20	; 0x14
     26c:	f5 01       	movw	r30, r10
     26e:	60 81       	ld	r22, Z
     270:	71 81       	ldd	r23, Z+1	; 0x01
     272:	82 81       	ldd	r24, Z+2	; 0x02
     274:	93 81       	ldd	r25, Z+3	; 0x03
     276:	0e 94 30 28 	call	0x5060	; 0x5060 <__addsf3>
     27a:	ab 01       	movw	r20, r22
     27c:	bc 01       	movw	r22, r24
     27e:	97 01       	movw	r18, r14
     280:	86 01       	movw	r16, r12
     282:	ce 01       	movw	r24, r28
     284:	01 96       	adiw	r24, 0x01	; 1
     286:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     28a:	88 e0       	ldi	r24, 0x08	; 8
     28c:	fe 01       	movw	r30, r28
     28e:	31 96       	adiw	r30, 0x01	; 1
     290:	de 01       	movw	r26, r28
     292:	19 96       	adiw	r26, 0x09	; 9
     294:	01 90       	ld	r0, Z+
     296:	0d 92       	st	X+, r0
     298:	8a 95       	dec	r24
     29a:	e1 f7       	brne	.-8      	; 0x294 <_ZN7Complex3addES_+0x80>
     29c:	29 85       	ldd	r18, Y+9	; 0x09
     29e:	3a 85       	ldd	r19, Y+10	; 0x0a
     2a0:	4b 85       	ldd	r20, Y+11	; 0x0b
     2a2:	5c 85       	ldd	r21, Y+12	; 0x0c
     2a4:	6d 85       	ldd	r22, Y+13	; 0x0d
     2a6:	7e 85       	ldd	r23, Y+14	; 0x0e
     2a8:	8f 85       	ldd	r24, Y+15	; 0x0f
     2aa:	98 89       	ldd	r25, Y+16	; 0x10
     2ac:	68 96       	adiw	r28, 0x18	; 24
     2ae:	0f b6       	in	r0, 0x3f	; 63
     2b0:	f8 94       	cli
     2b2:	de bf       	out	0x3e, r29	; 62
     2b4:	0f be       	out	0x3f, r0	; 63
     2b6:	cd bf       	out	0x3d, r28	; 61
     2b8:	df 91       	pop	r29
     2ba:	cf 91       	pop	r28
     2bc:	1f 91       	pop	r17
     2be:	0f 91       	pop	r16
     2c0:	ff 90       	pop	r15
     2c2:	ef 90       	pop	r14
     2c4:	df 90       	pop	r13
     2c6:	cf 90       	pop	r12
     2c8:	bf 90       	pop	r11
     2ca:	af 90       	pop	r10
     2cc:	08 95       	ret

000002ce <_ZN7Complex3mulES_>:
     2ce:	4f 92       	push	r4
     2d0:	5f 92       	push	r5
     2d2:	6f 92       	push	r6
     2d4:	7f 92       	push	r7
     2d6:	8f 92       	push	r8
     2d8:	9f 92       	push	r9
     2da:	af 92       	push	r10
     2dc:	bf 92       	push	r11
     2de:	cf 92       	push	r12
     2e0:	df 92       	push	r13
     2e2:	ef 92       	push	r14
     2e4:	ff 92       	push	r15
     2e6:	0f 93       	push	r16
     2e8:	1f 93       	push	r17
     2ea:	cf 93       	push	r28
     2ec:	df 93       	push	r29
     2ee:	cd b7       	in	r28, 0x3d	; 61
     2f0:	de b7       	in	r29, 0x3e	; 62
     2f2:	a0 97       	sbiw	r28, 0x20	; 32
     2f4:	0f b6       	in	r0, 0x3f	; 63
     2f6:	f8 94       	cli
     2f8:	de bf       	out	0x3e, r29	; 62
     2fa:	0f be       	out	0x3f, r0	; 63
     2fc:	cd bf       	out	0x3d, r28	; 61
     2fe:	09 8b       	std	Y+17, r16	; 0x11
     300:	1a 8b       	std	Y+18, r17	; 0x12
     302:	2b 8b       	std	Y+19, r18	; 0x13
     304:	3c 8b       	std	Y+20, r19	; 0x14
     306:	4d 8b       	std	Y+21, r20	; 0x15
     308:	5e 8b       	std	Y+22, r21	; 0x16
     30a:	6f 8b       	std	Y+23, r22	; 0x17
     30c:	78 8f       	std	Y+24, r23	; 0x18
     30e:	89 88       	ldd	r8, Y+17	; 0x11
     310:	9a 88       	ldd	r9, Y+18	; 0x12
     312:	ab 88       	ldd	r10, Y+19	; 0x13
     314:	bc 88       	ldd	r11, Y+20	; 0x14
     316:	2d 89       	ldd	r18, Y+21	; 0x15
     318:	3e 89       	ldd	r19, Y+22	; 0x16
     31a:	4f 89       	ldd	r20, Y+23	; 0x17
     31c:	58 8d       	ldd	r21, Y+24	; 0x18
     31e:	2d 8f       	std	Y+29, r18	; 0x1d
     320:	3e 8f       	std	Y+30, r19	; 0x1e
     322:	4f 8f       	std	Y+31, r20	; 0x1f
     324:	58 a3       	std	Y+32, r21	; 0x20
     326:	fc 01       	movw	r30, r24
     328:	c0 80       	ld	r12, Z
     32a:	d1 80       	ldd	r13, Z+1	; 0x01
     32c:	e2 80       	ldd	r14, Z+2	; 0x02
     32e:	f3 80       	ldd	r15, Z+3	; 0x03
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	29 8f       	std	Y+25, r18	; 0x19
     33a:	3a 8f       	std	Y+26, r19	; 0x1a
     33c:	4b 8f       	std	Y+27, r20	; 0x1b
     33e:	5c 8f       	std	Y+28, r21	; 0x1c
     340:	2d 8d       	ldd	r18, Y+29	; 0x1d
     342:	3e 8d       	ldd	r19, Y+30	; 0x1e
     344:	4f 8d       	ldd	r20, Y+31	; 0x1f
     346:	58 a1       	ldd	r21, Y+32	; 0x20
     348:	c7 01       	movw	r24, r14
     34a:	b6 01       	movw	r22, r12
     34c:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     350:	2b 01       	movw	r4, r22
     352:	3c 01       	movw	r6, r24
     354:	a5 01       	movw	r20, r10
     356:	94 01       	movw	r18, r8
     358:	69 8d       	ldd	r22, Y+25	; 0x19
     35a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     35c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     35e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     360:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     364:	9b 01       	movw	r18, r22
     366:	ac 01       	movw	r20, r24
     368:	c3 01       	movw	r24, r6
     36a:	b2 01       	movw	r22, r4
     36c:	0e 94 30 28 	call	0x5060	; 0x5060 <__addsf3>
     370:	2b 01       	movw	r4, r22
     372:	3c 01       	movw	r6, r24
     374:	a5 01       	movw	r20, r10
     376:	94 01       	movw	r18, r8
     378:	c7 01       	movw	r24, r14
     37a:	b6 01       	movw	r22, r12
     37c:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     380:	6b 01       	movw	r12, r22
     382:	7c 01       	movw	r14, r24
     384:	2d 8d       	ldd	r18, Y+29	; 0x1d
     386:	3e 8d       	ldd	r19, Y+30	; 0x1e
     388:	4f 8d       	ldd	r20, Y+31	; 0x1f
     38a:	58 a1       	ldd	r21, Y+32	; 0x20
     38c:	69 8d       	ldd	r22, Y+25	; 0x19
     38e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     390:	8b 8d       	ldd	r24, Y+27	; 0x1b
     392:	9c 8d       	ldd	r25, Y+28	; 0x1c
     394:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     398:	9b 01       	movw	r18, r22
     39a:	ac 01       	movw	r20, r24
     39c:	c7 01       	movw	r24, r14
     39e:	b6 01       	movw	r22, r12
     3a0:	0e 94 2f 28 	call	0x505e	; 0x505e <__subsf3>
     3a4:	ab 01       	movw	r20, r22
     3a6:	bc 01       	movw	r22, r24
     3a8:	93 01       	movw	r18, r6
     3aa:	82 01       	movw	r16, r4
     3ac:	ce 01       	movw	r24, r28
     3ae:	01 96       	adiw	r24, 0x01	; 1
     3b0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     3b4:	88 e0       	ldi	r24, 0x08	; 8
     3b6:	fe 01       	movw	r30, r28
     3b8:	31 96       	adiw	r30, 0x01	; 1
     3ba:	de 01       	movw	r26, r28
     3bc:	19 96       	adiw	r26, 0x09	; 9
     3be:	01 90       	ld	r0, Z+
     3c0:	0d 92       	st	X+, r0
     3c2:	8a 95       	dec	r24
     3c4:	e1 f7       	brne	.-8      	; 0x3be <_ZN7Complex3mulES_+0xf0>
     3c6:	29 85       	ldd	r18, Y+9	; 0x09
     3c8:	3a 85       	ldd	r19, Y+10	; 0x0a
     3ca:	4b 85       	ldd	r20, Y+11	; 0x0b
     3cc:	5c 85       	ldd	r21, Y+12	; 0x0c
     3ce:	6d 85       	ldd	r22, Y+13	; 0x0d
     3d0:	7e 85       	ldd	r23, Y+14	; 0x0e
     3d2:	8f 85       	ldd	r24, Y+15	; 0x0f
     3d4:	98 89       	ldd	r25, Y+16	; 0x10
     3d6:	a0 96       	adiw	r28, 0x20	; 32
     3d8:	0f b6       	in	r0, 0x3f	; 63
     3da:	f8 94       	cli
     3dc:	de bf       	out	0x3e, r29	; 62
     3de:	0f be       	out	0x3f, r0	; 63
     3e0:	cd bf       	out	0x3d, r28	; 61
     3e2:	df 91       	pop	r29
     3e4:	cf 91       	pop	r28
     3e6:	1f 91       	pop	r17
     3e8:	0f 91       	pop	r16
     3ea:	ff 90       	pop	r15
     3ec:	ef 90       	pop	r14
     3ee:	df 90       	pop	r13
     3f0:	cf 90       	pop	r12
     3f2:	bf 90       	pop	r11
     3f4:	af 90       	pop	r10
     3f6:	9f 90       	pop	r9
     3f8:	8f 90       	pop	r8
     3fa:	7f 90       	pop	r7
     3fc:	6f 90       	pop	r6
     3fe:	5f 90       	pop	r5
     400:	4f 90       	pop	r4
     402:	08 95       	ret

00000404 <_ZN7Complex3argEv>:
     404:	fc 01       	movw	r30, r24
     406:	20 81       	ld	r18, Z
     408:	31 81       	ldd	r19, Z+1	; 0x01
     40a:	42 81       	ldd	r20, Z+2	; 0x02
     40c:	53 81       	ldd	r21, Z+3	; 0x03
     40e:	64 81       	ldd	r22, Z+4	; 0x04
     410:	75 81       	ldd	r23, Z+5	; 0x05
     412:	86 81       	ldd	r24, Z+6	; 0x06
     414:	97 81       	ldd	r25, Z+7	; 0x07
     416:	0e 94 c3 28 	call	0x5186	; 0x5186 <__divsf3>
     41a:	0e 94 94 28 	call	0x5128	; 0x5128 <atan>
     41e:	08 95       	ret

00000420 <_ZN6EEPromC1Ev>:
     420:	85 e0       	ldi	r24, 0x05	; 5
     422:	80 b9       	out	0x00, r24	; 0
     424:	81 b1       	in	r24, 0x01	; 1
     426:	8c 7f       	andi	r24, 0xFC	; 252
     428:	81 b9       	out	0x01, r24	; 1
     42a:	08 95       	ret

0000042c <_ZN6EEProm4readEj>:
     42c:	94 ea       	ldi	r25, 0xA4	; 164
     42e:	30 ea       	ldi	r19, 0xA0	; 160
     430:	24 e8       	ldi	r18, 0x84	; 132
     432:	96 bf       	out	0x36, r25	; 54
     434:	06 b6       	in	r0, 0x36	; 54
     436:	07 fe       	sbrs	r0, 7
     438:	fd cf       	rjmp	.-6      	; 0x434 <_ZN6EEProm4readEj+0x8>
     43a:	81 b1       	in	r24, 0x01	; 1
     43c:	88 7f       	andi	r24, 0xF8	; 248
     43e:	88 30       	cpi	r24, 0x08	; 8
     440:	09 f0       	breq	.+2      	; 0x444 <_ZN6EEProm4readEj+0x18>
     442:	41 c0       	rjmp	.+130    	; 0x4c6 <_ZN6EEProm4readEj+0x9a>
     444:	33 b9       	out	0x03, r19	; 3
     446:	26 bf       	out	0x36, r18	; 54
     448:	06 b6       	in	r0, 0x36	; 54
     44a:	07 fe       	sbrs	r0, 7
     44c:	fd cf       	rjmp	.-6      	; 0x448 <_ZN6EEProm4readEj+0x1c>
     44e:	81 b1       	in	r24, 0x01	; 1
     450:	88 7f       	andi	r24, 0xF8	; 248
     452:	88 31       	cpi	r24, 0x18	; 24
     454:	71 f7       	brne	.-36     	; 0x432 <_ZN6EEProm4readEj+0x6>
     456:	73 b9       	out	0x03, r23	; 3
     458:	84 e8       	ldi	r24, 0x84	; 132
     45a:	86 bf       	out	0x36, r24	; 54
     45c:	06 b6       	in	r0, 0x36	; 54
     45e:	07 fe       	sbrs	r0, 7
     460:	fd cf       	rjmp	.-6      	; 0x45c <_ZN6EEProm4readEj+0x30>
     462:	81 b1       	in	r24, 0x01	; 1
     464:	88 7f       	andi	r24, 0xF8	; 248
     466:	88 32       	cpi	r24, 0x28	; 40
     468:	81 f5       	brne	.+96     	; 0x4ca <_ZN6EEProm4readEj+0x9e>
     46a:	63 b9       	out	0x03, r22	; 3
     46c:	84 e8       	ldi	r24, 0x84	; 132
     46e:	86 bf       	out	0x36, r24	; 54
     470:	06 b6       	in	r0, 0x36	; 54
     472:	07 fe       	sbrs	r0, 7
     474:	fd cf       	rjmp	.-6      	; 0x470 <_ZN6EEProm4readEj+0x44>
     476:	81 b1       	in	r24, 0x01	; 1
     478:	88 7f       	andi	r24, 0xF8	; 248
     47a:	88 32       	cpi	r24, 0x28	; 40
     47c:	41 f5       	brne	.+80     	; 0x4ce <_ZN6EEProm4readEj+0xa2>
     47e:	84 ea       	ldi	r24, 0xA4	; 164
     480:	86 bf       	out	0x36, r24	; 54
     482:	06 b6       	in	r0, 0x36	; 54
     484:	07 fe       	sbrs	r0, 7
     486:	fd cf       	rjmp	.-6      	; 0x482 <_ZN6EEProm4readEj+0x56>
     488:	81 b1       	in	r24, 0x01	; 1
     48a:	88 7f       	andi	r24, 0xF8	; 248
     48c:	80 31       	cpi	r24, 0x10	; 16
     48e:	09 f5       	brne	.+66     	; 0x4d2 <_ZN6EEProm4readEj+0xa6>
     490:	81 ea       	ldi	r24, 0xA1	; 161
     492:	83 b9       	out	0x03, r24	; 3
     494:	84 e8       	ldi	r24, 0x84	; 132
     496:	86 bf       	out	0x36, r24	; 54
     498:	06 b6       	in	r0, 0x36	; 54
     49a:	07 fe       	sbrs	r0, 7
     49c:	fd cf       	rjmp	.-6      	; 0x498 <_ZN6EEProm4readEj+0x6c>
     49e:	81 b1       	in	r24, 0x01	; 1
     4a0:	88 7f       	andi	r24, 0xF8	; 248
     4a2:	80 34       	cpi	r24, 0x40	; 64
     4a4:	c1 f4       	brne	.+48     	; 0x4d6 <_ZN6EEProm4readEj+0xaa>
     4a6:	84 e8       	ldi	r24, 0x84	; 132
     4a8:	86 bf       	out	0x36, r24	; 54
     4aa:	06 b6       	in	r0, 0x36	; 54
     4ac:	07 fe       	sbrs	r0, 7
     4ae:	fd cf       	rjmp	.-6      	; 0x4aa <_ZN6EEProm4readEj+0x7e>
     4b0:	81 b1       	in	r24, 0x01	; 1
     4b2:	88 7f       	andi	r24, 0xF8	; 248
     4b4:	88 35       	cpi	r24, 0x58	; 88
     4b6:	89 f4       	brne	.+34     	; 0x4da <_ZN6EEProm4readEj+0xae>
     4b8:	83 b1       	in	r24, 0x03	; 3
     4ba:	94 e9       	ldi	r25, 0x94	; 148
     4bc:	96 bf       	out	0x36, r25	; 54
     4be:	06 b6       	in	r0, 0x36	; 54
     4c0:	04 fc       	sbrc	r0, 4
     4c2:	fd cf       	rjmp	.-6      	; 0x4be <_ZN6EEProm4readEj+0x92>
     4c4:	08 95       	ret
     4c6:	80 e0       	ldi	r24, 0x00	; 0
     4c8:	08 95       	ret
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	08 95       	ret
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	08 95       	ret
     4d2:	80 e0       	ldi	r24, 0x00	; 0
     4d4:	08 95       	ret
     4d6:	80 e0       	ldi	r24, 0x00	; 0
     4d8:	08 95       	ret
     4da:	80 e0       	ldi	r24, 0x00	; 0
     4dc:	08 95       	ret

000004de <_ZN6EEProm7readallEv>:
     4de:	cf 92       	push	r12
     4e0:	df 92       	push	r13
     4e2:	ef 92       	push	r14
     4e4:	ff 92       	push	r15
     4e6:	0f 93       	push	r16
     4e8:	1f 93       	push	r17
     4ea:	cf 93       	push	r28
     4ec:	df 93       	push	r29
     4ee:	cd b7       	in	r28, 0x3d	; 61
     4f0:	de b7       	in	r29, 0x3e	; 62
     4f2:	c4 56       	subi	r28, 0x64	; 100
     4f4:	d1 09       	sbc	r29, r1
     4f6:	0f b6       	in	r0, 0x3f	; 63
     4f8:	f8 94       	cli
     4fa:	de bf       	out	0x3e, r29	; 62
     4fc:	0f be       	out	0x3f, r0	; 63
     4fe:	cd bf       	out	0x3d, r28	; 61
     500:	6c 01       	movw	r12, r24
     502:	ce 01       	movw	r24, r28
     504:	01 96       	adiw	r24, 0x01	; 1
     506:	7c 01       	movw	r14, r24
     508:	00 e0       	ldi	r16, 0x00	; 0
     50a:	10 e0       	ldi	r17, 0x00	; 0
     50c:	b8 01       	movw	r22, r16
     50e:	c6 01       	movw	r24, r12
     510:	0e 94 16 02 	call	0x42c	; 0x42c <_ZN6EEProm4readEj>
     514:	f7 01       	movw	r30, r14
     516:	81 93       	st	Z+, r24
     518:	7f 01       	movw	r14, r30
     51a:	8f 3f       	cpi	r24, 0xFF	; 255
     51c:	81 f4       	brne	.+32     	; 0x53e <_ZN6EEProm7readallEv+0x60>
     51e:	32 97       	sbiw	r30, 0x02	; 2
     520:	20 81       	ld	r18, Z
     522:	2f 3f       	cpi	r18, 0xFF	; 255
     524:	61 f4       	brne	.+24     	; 0x53e <_ZN6EEProm7readallEv+0x60>
     526:	31 97       	sbiw	r30, 0x01	; 1
     528:	20 81       	ld	r18, Z
     52a:	2f 3f       	cpi	r18, 0xFF	; 255
     52c:	41 f4       	brne	.+16     	; 0x53e <_ZN6EEProm7readallEv+0x60>
     52e:	31 97       	sbiw	r30, 0x01	; 1
     530:	20 81       	ld	r18, Z
     532:	2f 3f       	cpi	r18, 0xFF	; 255
     534:	21 f4       	brne	.+8      	; 0x53e <_ZN6EEProm7readallEv+0x60>
     536:	31 97       	sbiw	r30, 0x01	; 1
     538:	80 81       	ld	r24, Z
     53a:	8f 3f       	cpi	r24, 0xFF	; 255
     53c:	19 f0       	breq	.+6      	; 0x544 <_ZN6EEProm7readallEv+0x66>
     53e:	0f 5f       	subi	r16, 0xFF	; 255
     540:	1f 4f       	sbci	r17, 0xFF	; 255
     542:	e4 cf       	rjmp	.-56     	; 0x50c <_ZN6EEProm7readallEv+0x2e>
     544:	ce 01       	movw	r24, r28
     546:	01 96       	adiw	r24, 0x01	; 1
     548:	cc 59       	subi	r28, 0x9C	; 156
     54a:	df 4f       	sbci	r29, 0xFF	; 255
     54c:	0f b6       	in	r0, 0x3f	; 63
     54e:	f8 94       	cli
     550:	de bf       	out	0x3e, r29	; 62
     552:	0f be       	out	0x3f, r0	; 63
     554:	cd bf       	out	0x3d, r28	; 61
     556:	df 91       	pop	r29
     558:	cf 91       	pop	r28
     55a:	1f 91       	pop	r17
     55c:	0f 91       	pop	r16
     55e:	ff 90       	pop	r15
     560:	ef 90       	pop	r14
     562:	df 90       	pop	r13
     564:	cf 90       	pop	r12
     566:	08 95       	ret

00000568 <_Z12print_statesiP7ComplexPc>:

Serial s;
QEPU::Utils utils;
uint16_t EEMEM randinit;

void print_states(int qb_count,Complex * vec,char* message){
     568:	ef 92       	push	r14
     56a:	ff 92       	push	r15
     56c:	0f 93       	push	r16
     56e:	1f 93       	push	r17
     570:	cf 93       	push	r28
     572:	df 93       	push	r29
     574:	7c 01       	movw	r14, r24
     576:	06 2f       	mov	r16, r22
     578:	17 2f       	mov	r17, r23
	s.writestrln(message);
     57a:	ba 01       	movw	r22, r20
     57c:	89 e0       	ldi	r24, 0x09	; 9
     57e:	91 e0       	ldi	r25, 0x01	; 1
     580:	0e 94 15 28 	call	0x502a	; 0x502a <_ZN6Serial10writestrlnEPc>
	for(int i=0;i<qb_count;i++){
     584:	1e 14       	cp	r1, r14
     586:	1f 04       	cpc	r1, r15
     588:	0c f0       	brlt	.+2      	; 0x58c <_Z12print_statesiP7ComplexPc+0x24>
     58a:	47 c0       	rjmp	.+142    	; 0x61a <_Z12print_statesiP7ComplexPc+0xb2>
     58c:	c0 2f       	mov	r28, r16
     58e:	d1 2f       	mov	r29, r17
     590:	00 e0       	ldi	r16, 0x00	; 0
     592:	10 e0       	ldi	r17, 0x00	; 0
		s.writestr("R: "); s.writestr(utils.int2str(vec[i].re*1000));
     594:	6a e6       	ldi	r22, 0x6A	; 106
     596:	70 e0       	ldi	r23, 0x00	; 0
     598:	89 e0       	ldi	r24, 0x09	; 9
     59a:	91 e0       	ldi	r25, 0x01	; 1
     59c:	0e 94 00 28 	call	0x5000	; 0x5000 <_ZN6Serial8writestrEPc>
     5a0:	20 e0       	ldi	r18, 0x00	; 0
     5a2:	30 e0       	ldi	r19, 0x00	; 0
     5a4:	4a e7       	ldi	r20, 0x7A	; 122
     5a6:	54 e4       	ldi	r21, 0x44	; 68
     5a8:	68 81       	ld	r22, Y
     5aa:	79 81       	ldd	r23, Y+1	; 0x01
     5ac:	8a 81       	ldd	r24, Y+2	; 0x02
     5ae:	9b 81       	ldd	r25, Y+3	; 0x03
     5b0:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     5b4:	0e 94 5c 29 	call	0x52b8	; 0x52b8 <__fixsfsi>
     5b8:	88 e0       	ldi	r24, 0x08	; 8
     5ba:	91 e0       	ldi	r25, 0x01	; 1
     5bc:	0e 94 98 1e 	call	0x3d30	; 0x3d30 <_ZN4QEPU5Utils7int2strEi>
     5c0:	bc 01       	movw	r22, r24
     5c2:	89 e0       	ldi	r24, 0x09	; 9
     5c4:	91 e0       	ldi	r25, 0x01	; 1
     5c6:	0e 94 00 28 	call	0x5000	; 0x5000 <_ZN6Serial8writestrEPc>
		s.writestr(" . I: "); s.writestr(utils.int2str(vec[i].im*1000));
     5ca:	6e e6       	ldi	r22, 0x6E	; 110
     5cc:	70 e0       	ldi	r23, 0x00	; 0
     5ce:	89 e0       	ldi	r24, 0x09	; 9
     5d0:	91 e0       	ldi	r25, 0x01	; 1
     5d2:	0e 94 00 28 	call	0x5000	; 0x5000 <_ZN6Serial8writestrEPc>
     5d6:	20 e0       	ldi	r18, 0x00	; 0
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	4a e7       	ldi	r20, 0x7A	; 122
     5dc:	54 e4       	ldi	r21, 0x44	; 68
     5de:	6c 81       	ldd	r22, Y+4	; 0x04
     5e0:	7d 81       	ldd	r23, Y+5	; 0x05
     5e2:	8e 81       	ldd	r24, Y+6	; 0x06
     5e4:	9f 81       	ldd	r25, Y+7	; 0x07
     5e6:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     5ea:	0e 94 5c 29 	call	0x52b8	; 0x52b8 <__fixsfsi>
     5ee:	88 e0       	ldi	r24, 0x08	; 8
     5f0:	91 e0       	ldi	r25, 0x01	; 1
     5f2:	0e 94 98 1e 	call	0x3d30	; 0x3d30 <_ZN4QEPU5Utils7int2strEi>
     5f6:	bc 01       	movw	r22, r24
     5f8:	89 e0       	ldi	r24, 0x09	; 9
     5fa:	91 e0       	ldi	r25, 0x01	; 1
     5fc:	0e 94 00 28 	call	0x5000	; 0x5000 <_ZN6Serial8writestrEPc>
		s.writestrln("");
     600:	63 ec       	ldi	r22, 0xC3	; 195
     602:	70 e0       	ldi	r23, 0x00	; 0
     604:	89 e0       	ldi	r24, 0x09	; 9
     606:	91 e0       	ldi	r25, 0x01	; 1
     608:	0e 94 15 28 	call	0x502a	; 0x502a <_ZN6Serial10writestrlnEPc>
QEPU::Utils utils;
uint16_t EEMEM randinit;

void print_states(int qb_count,Complex * vec,char* message){
	s.writestrln(message);
	for(int i=0;i<qb_count;i++){
     60c:	0f 5f       	subi	r16, 0xFF	; 255
     60e:	1f 4f       	sbci	r17, 0xFF	; 255
     610:	28 96       	adiw	r28, 0x08	; 8
     612:	0e 15       	cp	r16, r14
     614:	1f 05       	cpc	r17, r15
     616:	09 f0       	breq	.+2      	; 0x61a <_Z12print_statesiP7ComplexPc+0xb2>
     618:	bd cf       	rjmp	.-134    	; 0x594 <_Z12print_statesiP7ComplexPc+0x2c>
		s.writestr("R: "); s.writestr(utils.int2str(vec[i].re*1000));
		s.writestr(" . I: "); s.writestr(utils.int2str(vec[i].im*1000));
		s.writestrln("");
	}
}
     61a:	df 91       	pop	r29
     61c:	cf 91       	pop	r28
     61e:	1f 91       	pop	r17
     620:	0f 91       	pop	r16
     622:	ff 90       	pop	r15
     624:	ef 90       	pop	r14
     626:	08 95       	ret

00000628 <_ZN5Gates10setup_seedEv>:

void Gates::setup_seed(){
	srand(eeprom_read_word(&randinit));
     628:	80 e0       	ldi	r24, 0x00	; 0
     62a:	90 e0       	ldi	r25, 0x00	; 0
     62c:	0e 94 28 31 	call	0x6250	; 0x6250 <__eerd_word_m32>
     630:	0e 94 ed 2d 	call	0x5bda	; 0x5bda <srand>
	eeprom_write_word(&randinit,rand()%10000);
     634:	0e 94 e8 2d 	call	0x5bd0	; 0x5bd0 <rand>
     638:	60 e1       	ldi	r22, 0x10	; 16
     63a:	77 e2       	ldi	r23, 0x27	; 39
     63c:	0e 94 45 2c 	call	0x588a	; 0x588a <__divmodhi4>
     640:	bc 01       	movw	r22, r24
     642:	80 e0       	ldi	r24, 0x00	; 0
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	0e 94 2e 31 	call	0x625c	; 0x625c <__eewr_word_m32>
     64a:	08 95       	ret

0000064c <_ZN5GatesC1Ev>:
#include "uart.h"
#include "qepu.h"
#include <stdarg.h>
#include <stdlib.h>
#include <avr/eeprom.h>
Gates::Gates(){setup_seed();}
     64c:	0e 94 14 03 	call	0x628	; 0x628 <_ZN5Gates10setup_seedEv>
     650:	08 95       	ret

00000652 <_ZN5Gates5touchEd>:
void Gates::setup_seed(){
	srand(eeprom_read_word(&randinit));
	eeprom_write_word(&randinit,rand()%10000);
}

int Gates::touch(double probability){
     652:	cf 92       	push	r12
     654:	df 92       	push	r13
     656:	ef 92       	push	r14
     658:	ff 92       	push	r15
     65a:	cf 93       	push	r28
     65c:	df 93       	push	r29
     65e:	6a 01       	movw	r12, r20
     660:	7b 01       	movw	r14, r22
	return RAND_MAX*probability>=rand();
     662:	0e 94 e8 2d 	call	0x5bd0	; 0x5bd0 <rand>
     666:	ec 01       	movw	r28, r24
     668:	20 e0       	ldi	r18, 0x00	; 0
     66a:	3e ef       	ldi	r19, 0xFE	; 254
     66c:	4f ef       	ldi	r20, 0xFF	; 255
     66e:	56 e4       	ldi	r21, 0x46	; 70
     670:	c7 01       	movw	r24, r14
     672:	b6 01       	movw	r22, r12
     674:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     678:	6b 01       	movw	r12, r22
     67a:	7c 01       	movw	r14, r24
     67c:	be 01       	movw	r22, r28
     67e:	88 27       	eor	r24, r24
     680:	77 fd       	sbrc	r23, 7
     682:	80 95       	com	r24
     684:	98 2f       	mov	r25, r24
     686:	0e 94 8f 29 	call	0x531e	; 0x531e <__floatsisf>
     68a:	9b 01       	movw	r18, r22
     68c:	ac 01       	movw	r20, r24
     68e:	c1 e0       	ldi	r28, 0x01	; 1
     690:	d0 e0       	ldi	r29, 0x00	; 0
     692:	c7 01       	movw	r24, r14
     694:	b6 01       	movw	r22, r12
     696:	0e 94 b8 2a 	call	0x5570	; 0x5570 <__gesf2>
     69a:	88 23       	and	r24, r24
     69c:	14 f4       	brge	.+4      	; 0x6a2 <_ZN5Gates5touchEd+0x50>
     69e:	c0 e0       	ldi	r28, 0x00	; 0
     6a0:	d0 e0       	ldi	r29, 0x00	; 0
}
     6a2:	ce 01       	movw	r24, r28
     6a4:	df 91       	pop	r29
     6a6:	cf 91       	pop	r28
     6a8:	ff 90       	pop	r15
     6aa:	ef 90       	pop	r14
     6ac:	df 90       	pop	r13
     6ae:	cf 90       	pop	r12
     6b0:	08 95       	ret

000006b2 <_ZN5Gates17reverse_kroneckerEP7Complexi>:
int Gates::custom_pow(int base,int exp){
	int result=1; for(int i=0;i<exp;i++) result*=base;
	return result;
}

Complex * Gates::reverse_kronecker(Complex * kron,int kron_size){
     6b2:	4f 92       	push	r4
     6b4:	5f 92       	push	r5
     6b6:	6f 92       	push	r6
     6b8:	7f 92       	push	r7
     6ba:	8f 92       	push	r8
     6bc:	9f 92       	push	r9
     6be:	af 92       	push	r10
     6c0:	bf 92       	push	r11
     6c2:	cf 92       	push	r12
     6c4:	df 92       	push	r13
     6c6:	ef 92       	push	r14
     6c8:	ff 92       	push	r15
     6ca:	0f 93       	push	r16
     6cc:	1f 93       	push	r17
     6ce:	cf 93       	push	r28
     6d0:	df 93       	push	r29
     6d2:	cd b7       	in	r28, 0x3d	; 61
     6d4:	de b7       	in	r29, 0x3e	; 62
     6d6:	a4 97       	sbiw	r28, 0x24	; 36
     6d8:	0f b6       	in	r0, 0x3f	; 63
     6da:	f8 94       	cli
     6dc:	de bf       	out	0x3e, r29	; 62
     6de:	0f be       	out	0x3f, r0	; 63
     6e0:	cd bf       	out	0x3d, r28	; 61
     6e2:	6b 01       	movw	r12, r22
     6e4:	5a 01       	movw	r10, r20
	int reversed_kron_size=(log(kron_size)/log(2))*2;
     6e6:	ba 01       	movw	r22, r20
     6e8:	88 27       	eor	r24, r24
     6ea:	77 fd       	sbrc	r23, 7
     6ec:	80 95       	com	r24
     6ee:	98 2f       	mov	r25, r24
     6f0:	0e 94 8f 29 	call	0x531e	; 0x531e <__floatsisf>
     6f4:	0e 94 fe 2a 	call	0x55fc	; 0x55fc <log>
     6f8:	28 e1       	ldi	r18, 0x18	; 24
     6fa:	32 e7       	ldi	r19, 0x72	; 114
     6fc:	41 e3       	ldi	r20, 0x31	; 49
     6fe:	5f e3       	ldi	r21, 0x3F	; 63
     700:	0e 94 c3 28 	call	0x5186	; 0x5186 <__divsf3>
     704:	2b 01       	movw	r4, r22
     706:	3c 01       	movw	r6, r24
     708:	9b 01       	movw	r18, r22
     70a:	ac 01       	movw	r20, r24
     70c:	0e 94 30 28 	call	0x5060	; 0x5060 <__addsf3>
     710:	0e 94 5c 29 	call	0x52b8	; 0x52b8 <__fixsfsi>
     714:	69 a3       	std	Y+33, r22	; 0x21
     716:	7a a3       	std	Y+34, r23	; 0x22
     718:	8b a3       	std	Y+35, r24	; 0x23
     71a:	9c a3       	std	Y+36, r25	; 0x24
     71c:	09 a1       	ldd	r16, Y+33	; 0x21
     71e:	1a a1       	ldd	r17, Y+34	; 0x22
	Complex * reversed_kronecker=(Complex*)malloc(sizeof(Complex)*reversed_kron_size);
     720:	c8 01       	movw	r24, r16
     722:	88 0f       	add	r24, r24
     724:	99 1f       	adc	r25, r25
     726:	88 0f       	add	r24, r24
     728:	99 1f       	adc	r25, r25
     72a:	88 0f       	add	r24, r24
     72c:	99 1f       	adc	r25, r25
     72e:	0e 94 73 2c 	call	0x58e6	; 0x58e6 <malloc>
     732:	4c 01       	movw	r8, r24
		
	for(int i=0;i<kron_size;i++)
     734:	1a 14       	cp	r1, r10
     736:	1b 04       	cpc	r1, r11
     738:	0c f0       	brlt	.+2      	; 0x73c <_ZN5Gates17reverse_kroneckerEP7Complexi+0x8a>
     73a:	9e c0       	rjmp	.+316    	; 0x878 <__stack+0x19>
		if(kron[i].re==1){
     73c:	20 e0       	ldi	r18, 0x00	; 0
     73e:	30 e0       	ldi	r19, 0x00	; 0
     740:	40 e8       	ldi	r20, 0x80	; 128
     742:	5f e3       	ldi	r21, 0x3F	; 63
     744:	f6 01       	movw	r30, r12
     746:	60 81       	ld	r22, Z
     748:	71 81       	ldd	r23, Z+1	; 0x01
     74a:	82 81       	ldd	r24, Z+2	; 0x02
     74c:	93 81       	ldd	r25, Z+3	; 0x03
     74e:	0e 94 bc 28 	call	0x5178	; 0x5178 <__cmpsf2>
     752:	81 11       	cpse	r24, r1
     754:	88 c0       	rjmp	.+272    	; 0x866 <__stack+0x7>
     756:	11 c0       	rjmp	.+34     	; 0x77a <_ZN5Gates17reverse_kroneckerEP7Complexi+0xc8>
     758:	f8 e0       	ldi	r31, 0x08	; 8
     75a:	cf 0e       	add	r12, r31
     75c:	d1 1c       	adc	r13, r1
     75e:	20 e0       	ldi	r18, 0x00	; 0
     760:	30 e0       	ldi	r19, 0x00	; 0
     762:	40 e8       	ldi	r20, 0x80	; 128
     764:	5f e3       	ldi	r21, 0x3F	; 63
     766:	f6 01       	movw	r30, r12
     768:	60 81       	ld	r22, Z
     76a:	71 81       	ldd	r23, Z+1	; 0x01
     76c:	82 81       	ldd	r24, Z+2	; 0x02
     76e:	93 81       	ldd	r25, Z+3	; 0x03
     770:	0e 94 bc 28 	call	0x5178	; 0x5178 <__cmpsf2>
     774:	81 11       	cpse	r24, r1
     776:	79 c0       	rjmp	.+242    	; 0x86a <__stack+0xb>
     778:	02 c0       	rjmp	.+4      	; 0x77e <_ZN5Gates17reverse_kroneckerEP7Complexi+0xcc>

Complex * Gates::reverse_kronecker(Complex * kron,int kron_size){
	int reversed_kron_size=(log(kron_size)/log(2))*2;
	Complex * reversed_kronecker=(Complex*)malloc(sizeof(Complex)*reversed_kron_size);
		
	for(int i=0;i<kron_size;i++)
     77a:	e1 2c       	mov	r14, r1
     77c:	f1 2c       	mov	r15, r1
		if(kron[i].re==1){
			char *toBin=utils.int2binstr(i,log(kron_size)/log(2));
     77e:	c3 01       	movw	r24, r6
     780:	b2 01       	movw	r22, r4
     782:	0e 94 5c 29 	call	0x52b8	; 0x52b8 <__fixsfsi>
     786:	ab 01       	movw	r20, r22
     788:	b7 01       	movw	r22, r14
     78a:	88 e0       	ldi	r24, 0x08	; 8
     78c:	91 e0       	ldi	r25, 0x01	; 1
     78e:	0e 94 10 1e 	call	0x3c20	; 0x3c20 <_ZN4QEPU5Utils10int2binstrEii>
			int index_rev_kro=0; //USE ITS OWN INDEX BECAUSE J IS THE INDEX OF TOBIN AN TOBIN HAS TO GO REVERSED
			for(int j=0;j<reversed_kron_size;j++){
     792:	10 16       	cp	r1, r16
     794:	11 06       	cpc	r1, r17
     796:	0c f0       	brlt	.+2      	; 0x79a <_ZN5Gates17reverse_kroneckerEP7Complexi+0xe8>
     798:	6f c0       	rjmp	.+222    	; 0x878 <__stack+0x19>
     79a:	7c 01       	movw	r14, r24
     79c:	54 01       	movw	r10, r8
     79e:	64 01       	movw	r12, r8
     7a0:	f8 e0       	ldi	r31, 0x08	; 8
     7a2:	cf 0e       	add	r12, r31
     7a4:	d1 1c       	adc	r13, r1
     7a6:	49 a0       	ldd	r4, Y+33	; 0x21
     7a8:	5a a0       	ldd	r5, Y+34	; 0x22
     7aa:	48 0e       	add	r4, r24
     7ac:	59 1e       	adc	r5, r25
				if(toBin[j]=='1'){
					reversed_kronecker[index_rev_kro]=Complex(0,0); reversed_kronecker[index_rev_kro+1]=Complex(1,0);
				}else{
					reversed_kronecker[index_rev_kro]=Complex(1,0); reversed_kronecker[index_rev_kro+1]=Complex(0,0);
     7ae:	68 94       	set
     7b0:	77 24       	eor	r7, r7
     7b2:	73 f8       	bld	r7, 3
	for(int i=0;i<kron_size;i++)
		if(kron[i].re==1){
			char *toBin=utils.int2binstr(i,log(kron_size)/log(2));
			int index_rev_kro=0; //USE ITS OWN INDEX BECAUSE J IS THE INDEX OF TOBIN AN TOBIN HAS TO GO REVERSED
			for(int j=0;j<reversed_kron_size;j++){
				if(toBin[j]=='1'){
     7b4:	f7 01       	movw	r30, r14
     7b6:	81 91       	ld	r24, Z+
     7b8:	7f 01       	movw	r14, r30
     7ba:	81 33       	cpi	r24, 0x31	; 49
     7bc:	29 f5       	brne	.+74     	; 0x808 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x156>
					reversed_kronecker[index_rev_kro]=Complex(0,0); reversed_kronecker[index_rev_kro+1]=Complex(1,0);
     7be:	00 e0       	ldi	r16, 0x00	; 0
     7c0:	10 e0       	ldi	r17, 0x00	; 0
     7c2:	98 01       	movw	r18, r16
     7c4:	b9 01       	movw	r22, r18
     7c6:	a8 01       	movw	r20, r16
     7c8:	ce 01       	movw	r24, r28
     7ca:	49 96       	adiw	r24, 0x19	; 25
     7cc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     7d0:	fe 01       	movw	r30, r28
     7d2:	79 96       	adiw	r30, 0x19	; 25
     7d4:	d5 01       	movw	r26, r10
     7d6:	87 2d       	mov	r24, r7
     7d8:	01 90       	ld	r0, Z+
     7da:	0d 92       	st	X+, r0
     7dc:	8a 95       	dec	r24
     7de:	e1 f7       	brne	.-8      	; 0x7d8 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x126>
     7e0:	00 e0       	ldi	r16, 0x00	; 0
     7e2:	10 e0       	ldi	r17, 0x00	; 0
     7e4:	98 01       	movw	r18, r16
     7e6:	40 e0       	ldi	r20, 0x00	; 0
     7e8:	50 e0       	ldi	r21, 0x00	; 0
     7ea:	60 e8       	ldi	r22, 0x80	; 128
     7ec:	7f e3       	ldi	r23, 0x3F	; 63
     7ee:	ce 01       	movw	r24, r28
     7f0:	41 96       	adiw	r24, 0x11	; 17
     7f2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     7f6:	fe 01       	movw	r30, r28
     7f8:	71 96       	adiw	r30, 0x11	; 17
     7fa:	d6 01       	movw	r26, r12
     7fc:	87 2d       	mov	r24, r7
     7fe:	01 90       	ld	r0, Z+
     800:	0d 92       	st	X+, r0
     802:	8a 95       	dec	r24
     804:	e1 f7       	brne	.-8      	; 0x7fe <_ZN5Gates17reverse_kroneckerEP7Complexi+0x14c>
     806:	24 c0       	rjmp	.+72     	; 0x850 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x19e>
				}else{
					reversed_kronecker[index_rev_kro]=Complex(1,0); reversed_kronecker[index_rev_kro+1]=Complex(0,0);
     808:	00 e0       	ldi	r16, 0x00	; 0
     80a:	10 e0       	ldi	r17, 0x00	; 0
     80c:	98 01       	movw	r18, r16
     80e:	40 e0       	ldi	r20, 0x00	; 0
     810:	50 e0       	ldi	r21, 0x00	; 0
     812:	60 e8       	ldi	r22, 0x80	; 128
     814:	7f e3       	ldi	r23, 0x3F	; 63
     816:	ce 01       	movw	r24, r28
     818:	09 96       	adiw	r24, 0x09	; 9
     81a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     81e:	fe 01       	movw	r30, r28
     820:	39 96       	adiw	r30, 0x09	; 9
     822:	d5 01       	movw	r26, r10
     824:	87 2d       	mov	r24, r7
     826:	01 90       	ld	r0, Z+
     828:	0d 92       	st	X+, r0
     82a:	8a 95       	dec	r24
     82c:	e1 f7       	brne	.-8      	; 0x826 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x174>
     82e:	00 e0       	ldi	r16, 0x00	; 0
     830:	10 e0       	ldi	r17, 0x00	; 0
     832:	98 01       	movw	r18, r16
     834:	b9 01       	movw	r22, r18
     836:	a8 01       	movw	r20, r16
     838:	ce 01       	movw	r24, r28
     83a:	01 96       	adiw	r24, 0x01	; 1
     83c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     840:	fe 01       	movw	r30, r28
     842:	31 96       	adiw	r30, 0x01	; 1
     844:	d6 01       	movw	r26, r12
     846:	87 2d       	mov	r24, r7
     848:	01 90       	ld	r0, Z+
     84a:	0d 92       	st	X+, r0
     84c:	8a 95       	dec	r24
     84e:	e1 f7       	brne	.-8      	; 0x848 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x196>
     850:	f0 e1       	ldi	r31, 0x10	; 16
     852:	af 0e       	add	r10, r31
     854:	b1 1c       	adc	r11, r1
     856:	20 e1       	ldi	r18, 0x10	; 16
     858:	c2 0e       	add	r12, r18
     85a:	d1 1c       	adc	r13, r1
		
	for(int i=0;i<kron_size;i++)
		if(kron[i].re==1){
			char *toBin=utils.int2binstr(i,log(kron_size)/log(2));
			int index_rev_kro=0; //USE ITS OWN INDEX BECAUSE J IS THE INDEX OF TOBIN AN TOBIN HAS TO GO REVERSED
			for(int j=0;j<reversed_kron_size;j++){
     85c:	e4 14       	cp	r14, r4
     85e:	f5 04       	cpc	r15, r5
     860:	09 f0       	breq	.+2      	; 0x864 <__stack+0x5>
     862:	a8 cf       	rjmp	.-176    	; 0x7b4 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x102>
     864:	09 c0       	rjmp	.+18     	; 0x878 <__stack+0x19>

Complex * Gates::reverse_kronecker(Complex * kron,int kron_size){
	int reversed_kron_size=(log(kron_size)/log(2))*2;
	Complex * reversed_kronecker=(Complex*)malloc(sizeof(Complex)*reversed_kron_size);
		
	for(int i=0;i<kron_size;i++)
     866:	e1 2c       	mov	r14, r1
     868:	f1 2c       	mov	r15, r1
     86a:	8f ef       	ldi	r24, 0xFF	; 255
     86c:	e8 1a       	sub	r14, r24
     86e:	f8 0a       	sbc	r15, r24
     870:	ea 14       	cp	r14, r10
     872:	fb 04       	cpc	r15, r11
     874:	09 f0       	breq	.+2      	; 0x878 <__stack+0x19>
     876:	70 cf       	rjmp	.-288    	; 0x758 <_ZN5Gates17reverse_kroneckerEP7Complexi+0xa6>
			}
			break;
		}
	//print_states(reversed_kron_size,reversed_kronecker,"Reversed kronecker AFTER mul: ");
	return reversed_kronecker;
}
     878:	c4 01       	movw	r24, r8
     87a:	a4 96       	adiw	r28, 0x24	; 36
     87c:	0f b6       	in	r0, 0x3f	; 63
     87e:	f8 94       	cli
     880:	de bf       	out	0x3e, r29	; 62
     882:	0f be       	out	0x3f, r0	; 63
     884:	cd bf       	out	0x3d, r28	; 61
     886:	df 91       	pop	r29
     888:	cf 91       	pop	r28
     88a:	1f 91       	pop	r17
     88c:	0f 91       	pop	r16
     88e:	ff 90       	pop	r15
     890:	ef 90       	pop	r14
     892:	df 90       	pop	r13
     894:	cf 90       	pop	r12
     896:	bf 90       	pop	r11
     898:	af 90       	pop	r10
     89a:	9f 90       	pop	r9
     89c:	8f 90       	pop	r8
     89e:	7f 90       	pop	r7
     8a0:	6f 90       	pop	r6
     8a2:	5f 90       	pop	r5
     8a4:	4f 90       	pop	r4
     8a6:	08 95       	ret

000008a8 <_ZN5Gates9kroneckerEP7Complexii>:

Complex * Gates::kronecker(Complex * vec,int qb_count,int touch_enable){
     8a8:	2f 92       	push	r2
     8aa:	3f 92       	push	r3
     8ac:	4f 92       	push	r4
     8ae:	5f 92       	push	r5
     8b0:	6f 92       	push	r6
     8b2:	7f 92       	push	r7
     8b4:	8f 92       	push	r8
     8b6:	9f 92       	push	r9
     8b8:	af 92       	push	r10
     8ba:	bf 92       	push	r11
     8bc:	cf 92       	push	r12
     8be:	df 92       	push	r13
     8c0:	ef 92       	push	r14
     8c2:	ff 92       	push	r15
     8c4:	0f 93       	push	r16
     8c6:	1f 93       	push	r17
     8c8:	cf 93       	push	r28
     8ca:	df 93       	push	r29
     8cc:	00 d0       	rcall	.+0      	; 0x8ce <_ZN5Gates9kroneckerEP7Complexii+0x26>
     8ce:	00 d0       	rcall	.+0      	; 0x8d0 <_ZN5Gates9kroneckerEP7Complexii+0x28>
     8d0:	00 d0       	rcall	.+0      	; 0x8d2 <_ZN5Gates9kroneckerEP7Complexii+0x2a>
     8d2:	cd b7       	in	r28, 0x3d	; 61
     8d4:	de b7       	in	r29, 0x3e	; 62
     8d6:	7c 01       	movw	r14, r24
     8d8:	5b 01       	movw	r10, r22
     8da:	8a 01       	movw	r16, r20
     8dc:	3c 83       	std	Y+4, r19	; 0x04
     8de:	2b 83       	std	Y+3, r18	; 0x03
	if(qb_count==1) return vec;
     8e0:	41 30       	cpi	r20, 0x01	; 1
     8e2:	51 05       	cpc	r21, r1
     8e4:	09 f4       	brne	.+2      	; 0x8e8 <_ZN5Gates9kroneckerEP7Complexii+0x40>
     8e6:	b5 c0       	rjmp	.+362    	; 0xa52 <_ZN5Gates9kroneckerEP7Complexii+0x1aa>
int Gates::touch(double probability){
	return RAND_MAX*probability>=rand();
}

int Gates::custom_pow(int base,int exp){
	int result=1; for(int i=0;i<exp;i++) result*=base;
     8e8:	14 16       	cp	r1, r20
     8ea:	15 06       	cpc	r1, r21
     8ec:	0c f0       	brlt	.+2      	; 0x8f0 <_ZN5Gates9kroneckerEP7Complexii+0x48>
     8ee:	b4 c0       	rjmp	.+360    	; 0xa58 <_ZN5Gates9kroneckerEP7Complexii+0x1b0>
     8f0:	80 e0       	ldi	r24, 0x00	; 0
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	21 e0       	ldi	r18, 0x01	; 1
     8f6:	30 e0       	ldi	r19, 0x00	; 0
     8f8:	22 0f       	add	r18, r18
     8fa:	33 1f       	adc	r19, r19
     8fc:	01 96       	adiw	r24, 0x01	; 1
     8fe:	80 17       	cp	r24, r16
     900:	91 07       	cpc	r25, r17
     902:	d1 f7       	brne	.-12     	; 0x8f8 <_ZN5Gates9kroneckerEP7Complexii+0x50>
     904:	3e 83       	std	Y+6, r19	; 0x06
     906:	2d 83       	std	Y+5, r18	; 0x05
}

Complex * Gates::kronecker(Complex * vec,int qb_count,int touch_enable){
	if(qb_count==1) return vec;
	int kron_size=custom_pow(2,qb_count);
	Complex * kronvec=(Complex*)malloc(sizeof(Complex)*kron_size);
     908:	c9 01       	movw	r24, r18
     90a:	88 0f       	add	r24, r24
     90c:	99 1f       	adc	r25, r25
     90e:	88 0f       	add	r24, r24
     910:	99 1f       	adc	r25, r25
     912:	88 0f       	add	r24, r24
     914:	99 1f       	adc	r25, r25
     916:	0e 94 73 2c 	call	0x58e6	; 0x58e6 <malloc>
     91a:	89 83       	std	Y+1, r24	; 0x01
     91c:	9a 83       	std	Y+2, r25	; 0x02
	
	int vec1i=0;
	int vec2i_default=VECTOR_QUBIT_SIZE;
	int vec2i=vec2i_default;
	for(int i=0;i<kron_size;i++){
     91e:	8d 81       	ldd	r24, Y+5	; 0x05
     920:	9e 81       	ldd	r25, Y+6	; 0x06
     922:	18 16       	cp	r1, r24
     924:	19 06       	cpc	r1, r25
     926:	0c f4       	brge	.+2      	; 0x92a <_ZN5Gates9kroneckerEP7Complexii+0x82>
     928:	a1 c0       	rjmp	.+322    	; 0xa6c <_ZN5Gates9kroneckerEP7Complexii+0x1c4>
     92a:	42 c0       	rjmp	.+132    	; 0x9b0 <_ZN5Gates9kroneckerEP7Complexii+0x108>
    	if(vec2i==qb_count*2){vec2i=vec2i_default;vec1i++;}
     92c:	2e 16       	cp	r2, r30
     92e:	3f 06       	cpc	r3, r31
     930:	29 f4       	brne	.+10     	; 0x93c <_ZN5Gates9kroneckerEP7Complexii+0x94>
     932:	9f ef       	ldi	r25, 0xFF	; 255
     934:	49 1a       	sub	r4, r25
     936:	59 0a       	sbc	r5, r25
     938:	e2 e0       	ldi	r30, 0x02	; 2
     93a:	f0 e0       	ldi	r31, 0x00	; 0
		kronvec[i]=vec[vec1i].mul(vec[vec2i++]);
     93c:	7f 01       	movw	r14, r30
     93e:	2f ef       	ldi	r18, 0xFF	; 255
     940:	e2 1a       	sub	r14, r18
     942:	f2 0a       	sbc	r15, r18
     944:	ee 0f       	add	r30, r30
     946:	ff 1f       	adc	r31, r31
     948:	ee 0f       	add	r30, r30
     94a:	ff 1f       	adc	r31, r31
     94c:	ee 0f       	add	r30, r30
     94e:	ff 1f       	adc	r31, r31
     950:	ea 0d       	add	r30, r10
     952:	fb 1d       	adc	r31, r11
     954:	00 81       	ld	r16, Z
     956:	11 81       	ldd	r17, Z+1	; 0x01
     958:	22 81       	ldd	r18, Z+2	; 0x02
     95a:	33 81       	ldd	r19, Z+3	; 0x03
     95c:	44 81       	ldd	r20, Z+4	; 0x04
     95e:	55 81       	ldd	r21, Z+5	; 0x05
     960:	66 81       	ldd	r22, Z+6	; 0x06
     962:	77 81       	ldd	r23, Z+7	; 0x07
     964:	c2 01       	movw	r24, r4
     966:	88 0f       	add	r24, r24
     968:	99 1f       	adc	r25, r25
     96a:	88 0f       	add	r24, r24
     96c:	99 1f       	adc	r25, r25
     96e:	88 0f       	add	r24, r24
     970:	99 1f       	adc	r25, r25
     972:	8a 0d       	add	r24, r10
     974:	9b 1d       	adc	r25, r11
     976:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN7Complex3mulES_>
     97a:	ed 81       	ldd	r30, Y+5	; 0x05
     97c:	fe 81       	ldd	r31, Y+6	; 0x06
     97e:	20 83       	st	Z, r18
     980:	31 83       	std	Z+1, r19	; 0x01
     982:	42 83       	std	Z+2, r20	; 0x02
     984:	53 83       	std	Z+3, r21	; 0x03
     986:	64 83       	std	Z+4, r22	; 0x04
     988:	75 83       	std	Z+5, r23	; 0x05
     98a:	86 83       	std	Z+6, r24	; 0x06
     98c:	97 83       	std	Z+7, r25	; 0x07
	Complex * kronvec=(Complex*)malloc(sizeof(Complex)*kron_size);
	
	int vec1i=0;
	int vec2i_default=VECTOR_QUBIT_SIZE;
	int vec2i=vec2i_default;
	for(int i=0;i<kron_size;i++){
     98e:	ff ef       	ldi	r31, 0xFF	; 255
     990:	6f 1a       	sub	r6, r31
     992:	7f 0a       	sbc	r7, r31
     994:	2d 81       	ldd	r18, Y+5	; 0x05
     996:	3e 81       	ldd	r19, Y+6	; 0x06
     998:	28 5f       	subi	r18, 0xF8	; 248
     99a:	3f 4f       	sbci	r19, 0xFF	; 255
     99c:	3e 83       	std	Y+6, r19	; 0x06
     99e:	2d 83       	std	Y+5, r18	; 0x05
     9a0:	6c 14       	cp	r6, r12
     9a2:	7d 04       	cpc	r7, r13
     9a4:	14 f4       	brge	.+4      	; 0x9aa <_ZN5Gates9kroneckerEP7Complexii+0x102>
    	if(vec2i==qb_count*2){vec2i=vec2i_default;vec1i++;}
		kronvec[i]=vec[vec1i].mul(vec[vec2i++]);
     9a6:	f7 01       	movw	r30, r14
     9a8:	c1 cf       	rjmp	.-126    	; 0x92c <_ZN5Gates9kroneckerEP7Complexii+0x84>
     9aa:	de 82       	std	Y+6, r13	; 0x06
     9ac:	cd 82       	std	Y+5, r12	; 0x05
     9ae:	74 01       	movw	r14, r8
	}
	
	if(touch_enable){
     9b0:	8b 81       	ldd	r24, Y+3	; 0x03
     9b2:	9c 81       	ldd	r25, Y+4	; 0x04
     9b4:	89 2b       	or	r24, r25
     9b6:	e9 f5       	brne	.+122    	; 0xa32 <_ZN5Gates9kroneckerEP7Complexii+0x18a>
     9b8:	89 81       	ldd	r24, Y+1	; 0x01
     9ba:	9a 81       	ldd	r25, Y+2	; 0x02
     9bc:	69 c0       	rjmp	.+210    	; 0xa90 <_ZN5Gates9kroneckerEP7Complexii+0x1e8>
		//TOUCH THE ENTANGLED/SUPERPOSITIONED QUBIT BEFORE GIVING IT TO A MATRIX:
		int binary_touch=1;
		while(binary_touch)	for(int i=0;i<kron_size;i++)
			if(touch(kronvec[i].re)==binary_touch){
     9be:	51 01       	movw	r10, r2
     9c0:	f1 01       	movw	r30, r2
     9c2:	40 81       	ld	r20, Z
     9c4:	51 81       	ldd	r21, Z+1	; 0x01
     9c6:	62 81       	ldd	r22, Z+2	; 0x02
     9c8:	73 81       	ldd	r23, Z+3	; 0x03
     9ca:	c7 01       	movw	r24, r14
     9cc:	0e 94 29 03 	call	0x652	; 0x652 <_ZN5Gates5touchEd>
     9d0:	01 97       	sbiw	r24, 0x01	; 1
     9d2:	29 f5       	brne	.+74     	; 0xa1e <_ZN5Gates9kroneckerEP7Complexii+0x176>
     9d4:	9e 82       	std	Y+6, r9	; 0x06
     9d6:	8d 82       	std	Y+5, r8	; 0x05
     9d8:	8d 81       	ldd	r24, Y+5	; 0x05
     9da:	9e 81       	ldd	r25, Y+6	; 0x06
     9dc:	88 0f       	add	r24, r24
     9de:	99 1f       	adc	r25, r25
     9e0:	88 0f       	add	r24, r24
     9e2:	99 1f       	adc	r25, r25
     9e4:	88 0f       	add	r24, r24
     9e6:	99 1f       	adc	r25, r25
     9e8:	86 0d       	add	r24, r6
     9ea:	97 1d       	adc	r25, r7
     9ec:	f3 01       	movw	r30, r6
				for(int j=0;j<kron_size;j++){kronvec[j].re=0; kronvec[j].im=0;}
     9ee:	10 82       	st	Z, r1
     9f0:	11 82       	std	Z+1, r1	; 0x01
     9f2:	12 82       	std	Z+2, r1	; 0x02
     9f4:	13 82       	std	Z+3, r1	; 0x03
     9f6:	14 82       	std	Z+4, r1	; 0x04
     9f8:	15 82       	std	Z+5, r1	; 0x05
     9fa:	16 82       	std	Z+6, r1	; 0x06
     9fc:	17 82       	std	Z+7, r1	; 0x07
     9fe:	38 96       	adiw	r30, 0x08	; 8
     a00:	e8 17       	cp	r30, r24
     a02:	f9 07       	cpc	r31, r25
     a04:	a1 f7       	brne	.-24     	; 0x9ee <_ZN5Gates9kroneckerEP7Complexii+0x146>
				kronvec[i].re=binary_touch;
     a06:	80 e0       	ldi	r24, 0x00	; 0
     a08:	90 e0       	ldi	r25, 0x00	; 0
     a0a:	a0 e8       	ldi	r26, 0x80	; 128
     a0c:	bf e3       	ldi	r27, 0x3F	; 63
     a0e:	f5 01       	movw	r30, r10
     a10:	80 83       	st	Z, r24
     a12:	91 83       	std	Z+1, r25	; 0x01
     a14:	a2 83       	std	Z+2, r26	; 0x02
     a16:	b3 83       	std	Z+3, r27	; 0x03
     a18:	89 81       	ldd	r24, Y+1	; 0x01
     a1a:	9a 81       	ldd	r25, Y+2	; 0x02
     a1c:	39 c0       	rjmp	.+114    	; 0xa90 <_ZN5Gates9kroneckerEP7Complexii+0x1e8>
	}
	
	if(touch_enable){
		//TOUCH THE ENTANGLED/SUPERPOSITIONED QUBIT BEFORE GIVING IT TO A MATRIX:
		int binary_touch=1;
		while(binary_touch)	for(int i=0;i<kron_size;i++)
     a1e:	ff ef       	ldi	r31, 0xFF	; 255
     a20:	cf 1a       	sub	r12, r31
     a22:	df 0a       	sbc	r13, r31
     a24:	28 e0       	ldi	r18, 0x08	; 8
     a26:	22 0e       	add	r2, r18
     a28:	31 1c       	adc	r3, r1
     a2a:	c8 14       	cp	r12, r8
     a2c:	d9 04       	cpc	r13, r9
     a2e:	39 f6       	brne	.-114    	; 0x9be <_ZN5Gates9kroneckerEP7Complexii+0x116>
     a30:	06 c0       	rjmp	.+12     	; 0xa3e <_ZN5Gates9kroneckerEP7Complexii+0x196>
     a32:	49 80       	ldd	r4, Y+1	; 0x01
     a34:	5a 80       	ldd	r5, Y+2	; 0x02
     a36:	00 e0       	ldi	r16, 0x00	; 0
     a38:	10 e0       	ldi	r17, 0x00	; 0
     a3a:	8d 80       	ldd	r8, Y+5	; 0x05
     a3c:	9e 80       	ldd	r9, Y+6	; 0x06
     a3e:	18 14       	cp	r1, r8
     a40:	19 04       	cpc	r1, r9
     a42:	ec f7       	brge	.-6      	; 0xa3e <_ZN5Gates9kroneckerEP7Complexii+0x196>
     a44:	64 2c       	mov	r6, r4
     a46:	75 2c       	mov	r7, r5
     a48:	24 2c       	mov	r2, r4
     a4a:	35 2c       	mov	r3, r5
     a4c:	c0 2e       	mov	r12, r16
     a4e:	d1 2e       	mov	r13, r17
     a50:	b6 cf       	rjmp	.-148    	; 0x9be <_ZN5Gates9kroneckerEP7Complexii+0x116>
	//print_states(reversed_kron_size,reversed_kronecker,"Reversed kronecker AFTER mul: ");
	return reversed_kronecker;
}

Complex * Gates::kronecker(Complex * vec,int qb_count,int touch_enable){
	if(qb_count==1) return vec;
     a52:	86 2f       	mov	r24, r22
     a54:	9b 2d       	mov	r25, r11
     a56:	1c c0       	rjmp	.+56     	; 0xa90 <_ZN5Gates9kroneckerEP7Complexii+0x1e8>
	int kron_size=custom_pow(2,qb_count);
	Complex * kronvec=(Complex*)malloc(sizeof(Complex)*kron_size);
     a58:	88 e0       	ldi	r24, 0x08	; 8
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	0e 94 73 2c 	call	0x58e6	; 0x58e6 <malloc>
     a60:	89 83       	std	Y+1, r24	; 0x01
     a62:	9a 83       	std	Y+2, r25	; 0x02
     a64:	81 e0       	ldi	r24, 0x01	; 1
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	9e 83       	std	Y+6, r25	; 0x06
     a6a:	8d 83       	std	Y+5, r24	; 0x05
	
	int vec1i=0;
	int vec2i_default=VECTOR_QUBIT_SIZE;
	int vec2i=vec2i_default;
	for(int i=0;i<kron_size;i++){
    	if(vec2i==qb_count*2){vec2i=vec2i_default;vec1i++;}
     a6c:	18 01       	movw	r2, r16
     a6e:	22 0c       	add	r2, r2
     a70:	33 1c       	adc	r3, r3
     a72:	c9 80       	ldd	r12, Y+1	; 0x01
     a74:	da 80       	ldd	r13, Y+2	; 0x02
     a76:	61 2c       	mov	r6, r1
     a78:	71 2c       	mov	r7, r1
     a7a:	e2 e0       	ldi	r30, 0x02	; 2
     a7c:	f0 e0       	ldi	r31, 0x00	; 0
     a7e:	41 2c       	mov	r4, r1
     a80:	51 2c       	mov	r5, r1
     a82:	c6 01       	movw	r24, r12
     a84:	cd 80       	ldd	r12, Y+5	; 0x05
     a86:	de 80       	ldd	r13, Y+6	; 0x06
     a88:	47 01       	movw	r8, r14
     a8a:	9e 83       	std	Y+6, r25	; 0x06
     a8c:	8d 83       	std	Y+5, r24	; 0x05
     a8e:	4e cf       	rjmp	.-356    	; 0x92c <_ZN5Gates9kroneckerEP7Complexii+0x84>
				break;
			}
	}
	//print_states(kron_size,kronvec,"Kronecker: ");
	return kronvec;
}
     a90:	26 96       	adiw	r28, 0x06	; 6
     a92:	0f b6       	in	r0, 0x3f	; 63
     a94:	f8 94       	cli
     a96:	de bf       	out	0x3e, r29	; 62
     a98:	0f be       	out	0x3f, r0	; 63
     a9a:	cd bf       	out	0x3d, r28	; 61
     a9c:	df 91       	pop	r29
     a9e:	cf 91       	pop	r28
     aa0:	1f 91       	pop	r17
     aa2:	0f 91       	pop	r16
     aa4:	ff 90       	pop	r15
     aa6:	ef 90       	pop	r14
     aa8:	df 90       	pop	r13
     aaa:	cf 90       	pop	r12
     aac:	bf 90       	pop	r11
     aae:	af 90       	pop	r10
     ab0:	9f 90       	pop	r9
     ab2:	8f 90       	pop	r8
     ab4:	7f 90       	pop	r7
     ab6:	6f 90       	pop	r6
     ab8:	5f 90       	pop	r5
     aba:	4f 90       	pop	r4
     abc:	3f 90       	pop	r3
     abe:	2f 90       	pop	r2
     ac0:	08 95       	ret

00000ac2 <_ZN5Gates8ampl2vecEiPiS0_>:

Complex * Gates::ampl2vec(int qb_count,int theta_list[6],int phi_list[6]){
     ac2:	2f 92       	push	r2
     ac4:	3f 92       	push	r3
     ac6:	4f 92       	push	r4
     ac8:	5f 92       	push	r5
     aca:	6f 92       	push	r6
     acc:	7f 92       	push	r7
     ace:	8f 92       	push	r8
     ad0:	9f 92       	push	r9
     ad2:	af 92       	push	r10
     ad4:	bf 92       	push	r11
     ad6:	cf 92       	push	r12
     ad8:	df 92       	push	r13
     ada:	ef 92       	push	r14
     adc:	ff 92       	push	r15
     ade:	0f 93       	push	r16
     ae0:	1f 93       	push	r17
     ae2:	cf 93       	push	r28
     ae4:	df 93       	push	r29
     ae6:	cd b7       	in	r28, 0x3d	; 61
     ae8:	de b7       	in	r29, 0x3e	; 62
     aea:	28 97       	sbiw	r28, 0x08	; 8
     aec:	0f b6       	in	r0, 0x3f	; 63
     aee:	f8 94       	cli
     af0:	de bf       	out	0x3e, r29	; 62
     af2:	0f be       	out	0x3f, r0	; 63
     af4:	cd bf       	out	0x3d, r28	; 61
     af6:	9e 83       	std	Y+6, r25	; 0x06
     af8:	8d 83       	std	Y+5, r24	; 0x05
     afa:	7a 83       	std	Y+2, r23	; 0x02
     afc:	69 83       	std	Y+1, r22	; 0x01
     afe:	04 2f       	mov	r16, r20
     b00:	15 2f       	mov	r17, r21
     b02:	c2 2e       	mov	r12, r18
     b04:	d3 2e       	mov	r13, r19
	Complex* vec=(Complex*)malloc(sizeof(Complex)*(qb_count*2));
     b06:	cb 01       	movw	r24, r22
     b08:	82 95       	swap	r24
     b0a:	92 95       	swap	r25
     b0c:	90 7f       	andi	r25, 0xF0	; 240
     b0e:	98 27       	eor	r25, r24
     b10:	80 7f       	andi	r24, 0xF0	; 240
     b12:	98 27       	eor	r25, r24
     b14:	0e 94 73 2c 	call	0x58e6	; 0x58e6 <malloc>
     b18:	8b 83       	std	Y+3, r24	; 0x03
     b1a:	9c 83       	std	Y+4, r25	; 0x04
	int thephi_index=0;
	for(int i=0;i<qb_count*2;i+=2){
     b1c:	29 80       	ldd	r2, Y+1	; 0x01
     b1e:	3a 80       	ldd	r3, Y+2	; 0x02
     b20:	22 0c       	add	r2, r2
     b22:	33 1c       	adc	r3, r3
     b24:	12 14       	cp	r1, r2
     b26:	13 04       	cpc	r1, r3
     b28:	0c f0       	brlt	.+2      	; 0xb2c <_ZN5Gates8ampl2vecEiPiS0_+0x6a>
     b2a:	ac c0       	rjmp	.+344    	; 0xc84 <_ZN5Gates8ampl2vecEiPiS0_+0x1c2>
     b2c:	a8 2e       	mov	r10, r24
     b2e:	b9 2e       	mov	r11, r25
     b30:	e0 2e       	mov	r14, r16
     b32:	f1 2e       	mov	r15, r17
     b34:	0c 2d       	mov	r16, r12
     b36:	1d 2d       	mov	r17, r13
     b38:	81 2c       	mov	r8, r1
     b3a:	91 2c       	mov	r9, r1
     b3c:	b8 86       	std	Y+8, r11	; 0x08
     b3e:	af 82       	std	Y+7, r10	; 0x07
     b40:	67 01       	movw	r12, r14
		vec[i].re=cos(theta_list[thephi_index]*M_PI/360);												// ALPHA RE (IM=0)
     b42:	f7 01       	movw	r30, r14
     b44:	41 90       	ld	r4, Z+
     b46:	51 90       	ld	r5, Z+
     b48:	7f 01       	movw	r14, r30
     b4a:	66 24       	eor	r6, r6
     b4c:	57 fc       	sbrc	r5, 7
     b4e:	60 94       	com	r6
     b50:	76 2c       	mov	r7, r6
     b52:	c3 01       	movw	r24, r6
     b54:	b2 01       	movw	r22, r4
     b56:	0e 94 8f 29 	call	0x531e	; 0x531e <__floatsisf>
     b5a:	2b ed       	ldi	r18, 0xDB	; 219
     b5c:	3f e0       	ldi	r19, 0x0F	; 15
     b5e:	49 e4       	ldi	r20, 0x49	; 73
     b60:	50 e4       	ldi	r21, 0x40	; 64
     b62:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     b66:	20 e0       	ldi	r18, 0x00	; 0
     b68:	30 e0       	ldi	r19, 0x00	; 0
     b6a:	44 eb       	ldi	r20, 0xB4	; 180
     b6c:	53 e4       	ldi	r21, 0x43	; 67
     b6e:	0e 94 c3 28 	call	0x5186	; 0x5186 <__divsf3>
     b72:	0e 94 c0 28 	call	0x5180	; 0x5180 <cos>
     b76:	ef 81       	ldd	r30, Y+7	; 0x07
     b78:	f8 85       	ldd	r31, Y+8	; 0x08
     b7a:	60 83       	st	Z, r22
     b7c:	71 83       	std	Z+1, r23	; 0x01
     b7e:	82 83       	std	Z+2, r24	; 0x02
     b80:	93 83       	std	Z+3, r25	; 0x03
		vec[i+1].re=sin((theta_list[thephi_index]*M_PI)/360)*cos((phi_list[thephi_index]*M_PI)/180);	// BETA RE
     b82:	c3 01       	movw	r24, r6
     b84:	b2 01       	movw	r22, r4
     b86:	0e 94 8f 29 	call	0x531e	; 0x531e <__floatsisf>
     b8a:	2b ed       	ldi	r18, 0xDB	; 219
     b8c:	3f e0       	ldi	r19, 0x0F	; 15
     b8e:	49 e4       	ldi	r20, 0x49	; 73
     b90:	50 e4       	ldi	r21, 0x40	; 64
     b92:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     b96:	20 e0       	ldi	r18, 0x00	; 0
     b98:	30 e0       	ldi	r19, 0x00	; 0
     b9a:	44 eb       	ldi	r20, 0xB4	; 180
     b9c:	53 e4       	ldi	r21, 0x43	; 67
     b9e:	0e 94 c3 28 	call	0x5186	; 0x5186 <__divsf3>
     ba2:	0e 94 d4 2b 	call	0x57a8	; 0x57a8 <sin>
     ba6:	2b 01       	movw	r4, r22
     ba8:	3c 01       	movw	r6, r24
     baa:	58 01       	movw	r10, r16
     bac:	f8 01       	movw	r30, r16
     bae:	61 91       	ld	r22, Z+
     bb0:	71 91       	ld	r23, Z+
     bb2:	8f 01       	movw	r16, r30
     bb4:	88 27       	eor	r24, r24
     bb6:	77 fd       	sbrc	r23, 7
     bb8:	80 95       	com	r24
     bba:	98 2f       	mov	r25, r24
     bbc:	0e 94 8f 29 	call	0x531e	; 0x531e <__floatsisf>
     bc0:	2b ed       	ldi	r18, 0xDB	; 219
     bc2:	3f e0       	ldi	r19, 0x0F	; 15
     bc4:	49 e4       	ldi	r20, 0x49	; 73
     bc6:	50 e4       	ldi	r21, 0x40	; 64
     bc8:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     bcc:	20 e0       	ldi	r18, 0x00	; 0
     bce:	30 e0       	ldi	r19, 0x00	; 0
     bd0:	44 e3       	ldi	r20, 0x34	; 52
     bd2:	53 e4       	ldi	r21, 0x43	; 67
     bd4:	0e 94 c3 28 	call	0x5186	; 0x5186 <__divsf3>
     bd8:	0e 94 c0 28 	call	0x5180	; 0x5180 <cos>
     bdc:	9b 01       	movw	r18, r22
     bde:	ac 01       	movw	r20, r24
     be0:	c3 01       	movw	r24, r6
     be2:	b2 01       	movw	r22, r4
     be4:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     be8:	ef 81       	ldd	r30, Y+7	; 0x07
     bea:	f8 85       	ldd	r31, Y+8	; 0x08
     bec:	60 87       	std	Z+8, r22	; 0x08
     bee:	71 87       	std	Z+9, r23	; 0x09
     bf0:	82 87       	std	Z+10, r24	; 0x0a
     bf2:	93 87       	std	Z+11, r25	; 0x0b
		vec[i+1].im=sin((theta_list[thephi_index]*M_PI)/360)*sin((phi_list[thephi_index++]*M_PI)/180);  // BETA IM
     bf4:	f6 01       	movw	r30, r12
     bf6:	60 81       	ld	r22, Z
     bf8:	71 81       	ldd	r23, Z+1	; 0x01
     bfa:	88 27       	eor	r24, r24
     bfc:	77 fd       	sbrc	r23, 7
     bfe:	80 95       	com	r24
     c00:	98 2f       	mov	r25, r24
     c02:	0e 94 8f 29 	call	0x531e	; 0x531e <__floatsisf>
     c06:	2b ed       	ldi	r18, 0xDB	; 219
     c08:	3f e0       	ldi	r19, 0x0F	; 15
     c0a:	49 e4       	ldi	r20, 0x49	; 73
     c0c:	50 e4       	ldi	r21, 0x40	; 64
     c0e:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     c12:	20 e0       	ldi	r18, 0x00	; 0
     c14:	30 e0       	ldi	r19, 0x00	; 0
     c16:	44 eb       	ldi	r20, 0xB4	; 180
     c18:	53 e4       	ldi	r21, 0x43	; 67
     c1a:	0e 94 c3 28 	call	0x5186	; 0x5186 <__divsf3>
     c1e:	0e 94 d4 2b 	call	0x57a8	; 0x57a8 <sin>
     c22:	2b 01       	movw	r4, r22
     c24:	3c 01       	movw	r6, r24
     c26:	f5 01       	movw	r30, r10
     c28:	60 81       	ld	r22, Z
     c2a:	71 81       	ldd	r23, Z+1	; 0x01
     c2c:	88 27       	eor	r24, r24
     c2e:	77 fd       	sbrc	r23, 7
     c30:	80 95       	com	r24
     c32:	98 2f       	mov	r25, r24
     c34:	0e 94 8f 29 	call	0x531e	; 0x531e <__floatsisf>
     c38:	2b ed       	ldi	r18, 0xDB	; 219
     c3a:	3f e0       	ldi	r19, 0x0F	; 15
     c3c:	49 e4       	ldi	r20, 0x49	; 73
     c3e:	50 e4       	ldi	r21, 0x40	; 64
     c40:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     c44:	20 e0       	ldi	r18, 0x00	; 0
     c46:	30 e0       	ldi	r19, 0x00	; 0
     c48:	44 e3       	ldi	r20, 0x34	; 52
     c4a:	53 e4       	ldi	r21, 0x43	; 67
     c4c:	0e 94 c3 28 	call	0x5186	; 0x5186 <__divsf3>
     c50:	0e 94 d4 2b 	call	0x57a8	; 0x57a8 <sin>
     c54:	9b 01       	movw	r18, r22
     c56:	ac 01       	movw	r20, r24
     c58:	c3 01       	movw	r24, r6
     c5a:	b2 01       	movw	r22, r4
     c5c:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     c60:	ef 81       	ldd	r30, Y+7	; 0x07
     c62:	f8 85       	ldd	r31, Y+8	; 0x08
     c64:	64 87       	std	Z+12, r22	; 0x0c
     c66:	75 87       	std	Z+13, r23	; 0x0d
     c68:	86 87       	std	Z+14, r24	; 0x0e
     c6a:	97 87       	std	Z+15, r25	; 0x0f
}

Complex * Gates::ampl2vec(int qb_count,int theta_list[6],int phi_list[6]){
	Complex* vec=(Complex*)malloc(sizeof(Complex)*(qb_count*2));
	int thephi_index=0;
	for(int i=0;i<qb_count*2;i+=2){
     c6c:	f2 e0       	ldi	r31, 0x02	; 2
     c6e:	8f 0e       	add	r8, r31
     c70:	91 1c       	adc	r9, r1
     c72:	8f 81       	ldd	r24, Y+7	; 0x07
     c74:	98 85       	ldd	r25, Y+8	; 0x08
     c76:	40 96       	adiw	r24, 0x10	; 16
     c78:	98 87       	std	Y+8, r25	; 0x08
     c7a:	8f 83       	std	Y+7, r24	; 0x07
     c7c:	82 14       	cp	r8, r2
     c7e:	93 04       	cpc	r9, r3
     c80:	0c f4       	brge	.+2      	; 0xc84 <_ZN5Gates8ampl2vecEiPiS0_+0x1c2>
     c82:	5e cf       	rjmp	.-324    	; 0xb40 <_ZN5Gates8ampl2vecEiPiS0_+0x7e>
		vec[i].re=cos(theta_list[thephi_index]*M_PI/360);												// ALPHA RE (IM=0)
		vec[i+1].re=sin((theta_list[thephi_index]*M_PI)/360)*cos((phi_list[thephi_index]*M_PI)/180);	// BETA RE
		vec[i+1].im=sin((theta_list[thephi_index]*M_PI)/360)*sin((phi_list[thephi_index++]*M_PI)/180);  // BETA IM
	}
	print_states(qb_count*2,vec,"Before: ");
     c84:	45 e7       	ldi	r20, 0x75	; 117
     c86:	50 e0       	ldi	r21, 0x00	; 0
     c88:	6b 81       	ldd	r22, Y+3	; 0x03
     c8a:	7c 81       	ldd	r23, Y+4	; 0x04
     c8c:	c1 01       	movw	r24, r2
     c8e:	0e 94 b4 02 	call	0x568	; 0x568 <_Z12print_statesiP7ComplexPc>
	return kronecker(vec,qb_count,true); // PUT VEC INTO KRONECKER AND RETURN THE RESULT
     c92:	21 e0       	ldi	r18, 0x01	; 1
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	49 81       	ldd	r20, Y+1	; 0x01
     c98:	5a 81       	ldd	r21, Y+2	; 0x02
     c9a:	6b 81       	ldd	r22, Y+3	; 0x03
     c9c:	7c 81       	ldd	r23, Y+4	; 0x04
     c9e:	8d 81       	ldd	r24, Y+5	; 0x05
     ca0:	9e 81       	ldd	r25, Y+6	; 0x06
     ca2:	0e 94 54 04 	call	0x8a8	; 0x8a8 <_ZN5Gates9kroneckerEP7Complexii>
}
     ca6:	28 96       	adiw	r28, 0x08	; 8
     ca8:	0f b6       	in	r0, 0x3f	; 63
     caa:	f8 94       	cli
     cac:	de bf       	out	0x3e, r29	; 62
     cae:	0f be       	out	0x3f, r0	; 63
     cb0:	cd bf       	out	0x3d, r28	; 61
     cb2:	df 91       	pop	r29
     cb4:	cf 91       	pop	r28
     cb6:	1f 91       	pop	r17
     cb8:	0f 91       	pop	r16
     cba:	ff 90       	pop	r15
     cbc:	ef 90       	pop	r14
     cbe:	df 90       	pop	r13
     cc0:	cf 90       	pop	r12
     cc2:	bf 90       	pop	r11
     cc4:	af 90       	pop	r10
     cc6:	9f 90       	pop	r9
     cc8:	8f 90       	pop	r8
     cca:	7f 90       	pop	r7
     ccc:	6f 90       	pop	r6
     cce:	5f 90       	pop	r5
     cd0:	4f 90       	pop	r4
     cd2:	3f 90       	pop	r3
     cd4:	2f 90       	pop	r2
     cd6:	08 95       	ret

00000cd8 <_ZN5Gates8vec2amplEP7Complexi>:
int * Gates::vec2ampl(Complex * vec,int qb_count){
     cd8:	6f 92       	push	r6
     cda:	7f 92       	push	r7
     cdc:	8f 92       	push	r8
     cde:	9f 92       	push	r9
     ce0:	af 92       	push	r10
     ce2:	bf 92       	push	r11
     ce4:	cf 92       	push	r12
     ce6:	df 92       	push	r13
     ce8:	ef 92       	push	r14
     cea:	ff 92       	push	r15
     cec:	0f 93       	push	r16
     cee:	1f 93       	push	r17
     cf0:	cf 93       	push	r28
     cf2:	df 93       	push	r29
     cf4:	86 2e       	mov	r8, r22
     cf6:	97 2e       	mov	r9, r23
     cf8:	5a 01       	movw	r10, r20
int Gates::touch(double probability){
	return RAND_MAX*probability>=rand();
}

int Gates::custom_pow(int base,int exp){
	int result=1; for(int i=0;i<exp;i++) result*=base;
     cfa:	14 16       	cp	r1, r20
     cfc:	15 06       	cpc	r1, r21
     cfe:	6c f4       	brge	.+26     	; 0xd1a <_ZN5Gates8vec2amplEP7Complexi+0x42>
     d00:	20 e0       	ldi	r18, 0x00	; 0
     d02:	30 e0       	ldi	r19, 0x00	; 0
     d04:	cc 24       	eor	r12, r12
     d06:	c3 94       	inc	r12
     d08:	d1 2c       	mov	r13, r1
     d0a:	cc 0c       	add	r12, r12
     d0c:	dd 1c       	adc	r13, r13
     d0e:	2f 5f       	subi	r18, 0xFF	; 255
     d10:	3f 4f       	sbci	r19, 0xFF	; 255
     d12:	2a 15       	cp	r18, r10
     d14:	3b 05       	cpc	r19, r11
     d16:	c9 f7       	brne	.-14     	; 0xd0a <_ZN5Gates8vec2amplEP7Complexi+0x32>
     d18:	03 c0       	rjmp	.+6      	; 0xd20 <_ZN5Gates8vec2amplEP7Complexi+0x48>
     d1a:	cc 24       	eor	r12, r12
     d1c:	c3 94       	inc	r12
     d1e:	d1 2c       	mov	r13, r1
	print_states(qb_count*2,vec,"Before: ");
	return kronecker(vec,qb_count,true); // PUT VEC INTO KRONECKER AND RETURN THE RESULT
}
int * Gates::vec2ampl(Complex * vec,int qb_count){
	int kron_size=custom_pow(2,qb_count);
	if(qb_count>1) vec=reverse_kronecker(vec,kron_size);
     d20:	22 e0       	ldi	r18, 0x02	; 2
     d22:	a2 16       	cp	r10, r18
     d24:	b1 04       	cpc	r11, r1
     d26:	3c f0       	brlt	.+14     	; 0xd36 <_ZN5Gates8vec2amplEP7Complexi+0x5e>
     d28:	a6 01       	movw	r20, r12
     d2a:	68 2d       	mov	r22, r8
     d2c:	79 2d       	mov	r23, r9
     d2e:	0e 94 59 03 	call	0x6b2	; 0x6b2 <_ZN5Gates17reverse_kroneckerEP7Complexi>
     d32:	88 2e       	mov	r8, r24
     d34:	99 2e       	mov	r9, r25
	
	int* newthephi=(int*)malloc(sizeof(int)*(qb_count*2));
     d36:	c5 01       	movw	r24, r10
     d38:	88 0f       	add	r24, r24
     d3a:	99 1f       	adc	r25, r25
     d3c:	88 0f       	add	r24, r24
     d3e:	99 1f       	adc	r25, r25
     d40:	0e 94 73 2c 	call	0x58e6	; 0x58e6 <malloc>
     d44:	68 2e       	mov	r6, r24
     d46:	79 2e       	mov	r7, r25
	for(int i=0;i<qb_count*2;i++) if(i%2==0) newthephi[i]=(360*acos(vec[i].re))/M_PI; else newthephi[i]=(180*vec[i].arg())/M_PI;
     d48:	aa 0c       	add	r10, r10
     d4a:	bb 1c       	adc	r11, r11
     d4c:	1a 14       	cp	r1, r10
     d4e:	1b 04       	cpc	r1, r11
     d50:	f4 f5       	brge	.+124    	; 0xdce <_ZN5Gates8vec2amplEP7Complexi+0xf6>
     d52:	e8 2c       	mov	r14, r8
     d54:	f9 2c       	mov	r15, r9
     d56:	08 2f       	mov	r16, r24
     d58:	19 2f       	mov	r17, r25
     d5a:	c0 e0       	ldi	r28, 0x00	; 0
     d5c:	d0 e0       	ldi	r29, 0x00	; 0
     d5e:	c0 fd       	sbrc	r28, 0
     d60:	19 c0       	rjmp	.+50     	; 0xd94 <_ZN5Gates8vec2amplEP7Complexi+0xbc>
     d62:	f7 01       	movw	r30, r14
     d64:	60 81       	ld	r22, Z
     d66:	71 81       	ldd	r23, Z+1	; 0x01
     d68:	82 81       	ldd	r24, Z+2	; 0x02
     d6a:	93 81       	ldd	r25, Z+3	; 0x03
     d6c:	0e 94 21 28 	call	0x5042	; 0x5042 <acos>
     d70:	20 e0       	ldi	r18, 0x00	; 0
     d72:	30 e0       	ldi	r19, 0x00	; 0
     d74:	44 eb       	ldi	r20, 0xB4	; 180
     d76:	53 e4       	ldi	r21, 0x43	; 67
     d78:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     d7c:	2b ed       	ldi	r18, 0xDB	; 219
     d7e:	3f e0       	ldi	r19, 0x0F	; 15
     d80:	49 e4       	ldi	r20, 0x49	; 73
     d82:	50 e4       	ldi	r21, 0x40	; 64
     d84:	0e 94 c3 28 	call	0x5186	; 0x5186 <__divsf3>
     d88:	0e 94 5c 29 	call	0x52b8	; 0x52b8 <__fixsfsi>
     d8c:	f8 01       	movw	r30, r16
     d8e:	71 83       	std	Z+1, r23	; 0x01
     d90:	60 83       	st	Z, r22
     d92:	14 c0       	rjmp	.+40     	; 0xdbc <_ZN5Gates8vec2amplEP7Complexi+0xe4>
     d94:	c7 01       	movw	r24, r14
     d96:	0e 94 02 02 	call	0x404	; 0x404 <_ZN7Complex3argEv>
     d9a:	20 e0       	ldi	r18, 0x00	; 0
     d9c:	30 e0       	ldi	r19, 0x00	; 0
     d9e:	44 e3       	ldi	r20, 0x34	; 52
     da0:	53 e4       	ldi	r21, 0x43	; 67
     da2:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
     da6:	2b ed       	ldi	r18, 0xDB	; 219
     da8:	3f e0       	ldi	r19, 0x0F	; 15
     daa:	49 e4       	ldi	r20, 0x49	; 73
     dac:	50 e4       	ldi	r21, 0x40	; 64
     dae:	0e 94 c3 28 	call	0x5186	; 0x5186 <__divsf3>
     db2:	0e 94 5c 29 	call	0x52b8	; 0x52b8 <__fixsfsi>
     db6:	f8 01       	movw	r30, r16
     db8:	71 83       	std	Z+1, r23	; 0x01
     dba:	60 83       	st	Z, r22
     dbc:	21 96       	adiw	r28, 0x01	; 1
     dbe:	f8 e0       	ldi	r31, 0x08	; 8
     dc0:	ef 0e       	add	r14, r31
     dc2:	f1 1c       	adc	r15, r1
     dc4:	0e 5f       	subi	r16, 0xFE	; 254
     dc6:	1f 4f       	sbci	r17, 0xFF	; 255
     dc8:	ca 15       	cp	r28, r10
     dca:	db 05       	cpc	r29, r11
     dcc:	41 f6       	brne	.-112    	; 0xd5e <_ZN5Gates8vec2amplEP7Complexi+0x86>
	
	print_states(kron_size,vec,"After: ");
     dce:	4e e7       	ldi	r20, 0x7E	; 126
     dd0:	50 e0       	ldi	r21, 0x00	; 0
     dd2:	68 2d       	mov	r22, r8
     dd4:	79 2d       	mov	r23, r9
     dd6:	c6 01       	movw	r24, r12
     dd8:	0e 94 b4 02 	call	0x568	; 0x568 <_Z12print_statesiP7ComplexPc>
	return newthephi;
}
     ddc:	86 2d       	mov	r24, r6
     dde:	97 2d       	mov	r25, r7
     de0:	df 91       	pop	r29
     de2:	cf 91       	pop	r28
     de4:	1f 91       	pop	r17
     de6:	0f 91       	pop	r16
     de8:	ff 90       	pop	r15
     dea:	ef 90       	pop	r14
     dec:	df 90       	pop	r13
     dee:	cf 90       	pop	r12
     df0:	bf 90       	pop	r11
     df2:	af 90       	pop	r10
     df4:	9f 90       	pop	r9
     df6:	8f 90       	pop	r8
     df8:	7f 90       	pop	r7
     dfa:	6f 90       	pop	r6
     dfc:	08 95       	ret

00000dfe <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>:

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
     dfe:	2f 92       	push	r2
     e00:	3f 92       	push	r3
     e02:	4f 92       	push	r4
     e04:	5f 92       	push	r5
     e06:	6f 92       	push	r6
     e08:	7f 92       	push	r7
     e0a:	8f 92       	push	r8
     e0c:	9f 92       	push	r9
     e0e:	af 92       	push	r10
     e10:	bf 92       	push	r11
     e12:	cf 92       	push	r12
     e14:	df 92       	push	r13
     e16:	ef 92       	push	r14
     e18:	ff 92       	push	r15
     e1a:	0f 93       	push	r16
     e1c:	1f 93       	push	r17
     e1e:	cf 93       	push	r28
     e20:	df 93       	push	r29
     e22:	cd b7       	in	r28, 0x3d	; 61
     e24:	de b7       	in	r29, 0x3e	; 62
     e26:	60 97       	sbiw	r28, 0x10	; 16
     e28:	0f b6       	in	r0, 0x3f	; 63
     e2a:	f8 94       	cli
     e2c:	de bf       	out	0x3e, r29	; 62
     e2e:	0f be       	out	0x3f, r0	; 63
     e30:	cd bf       	out	0x3d, r28	; 61
     e32:	4b 01       	movw	r8, r22
     e34:	3a 01       	movw	r6, r20
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
     e36:	80 e1       	ldi	r24, 0x10	; 16
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	0e 94 73 2c 	call	0x58e6	; 0x58e6 <malloc>
     e3e:	38 2e       	mov	r3, r24
     e40:	29 2e       	mov	r2, r25
     e42:	c8 2e       	mov	r12, r24
     e44:	d9 2e       	mov	r13, r25
	for(int i=0;i<qb_size;i++){
     e46:	a1 2c       	mov	r10, r1
     e48:	b1 2c       	mov	r11, r1
		Complex tmp;
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
     e4a:	24 01       	movw	r4, r8
     e4c:	88 e0       	ldi	r24, 0x08	; 8
     e4e:	48 0e       	add	r4, r24
     e50:	51 1c       	adc	r5, r1

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
		Complex tmp;
     e52:	ce 01       	movw	r24, r28
     e54:	09 96       	adiw	r24, 0x09	; 9
     e56:	0e 94 00 01 	call	0x200	; 0x200 <_ZN7ComplexC1Ev>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
     e5a:	75 01       	movw	r14, r10
     e5c:	ee 0c       	add	r14, r14
     e5e:	ff 1c       	adc	r15, r15
     e60:	ee 0c       	add	r14, r14
     e62:	ff 1c       	adc	r15, r15
     e64:	ee 0c       	add	r14, r14
     e66:	ff 1c       	adc	r15, r15
     e68:	e6 0c       	add	r14, r6
     e6a:	f7 1c       	adc	r15, r7
     e6c:	d7 01       	movw	r26, r14
     e6e:	0c 91       	ld	r16, X
     e70:	11 96       	adiw	r26, 0x01	; 1
     e72:	1c 91       	ld	r17, X
     e74:	11 97       	sbiw	r26, 0x01	; 1
     e76:	12 96       	adiw	r26, 0x02	; 2
     e78:	2c 91       	ld	r18, X
     e7a:	12 97       	sbiw	r26, 0x02	; 2
     e7c:	13 96       	adiw	r26, 0x03	; 3
     e7e:	3c 91       	ld	r19, X
     e80:	13 97       	sbiw	r26, 0x03	; 3
     e82:	14 96       	adiw	r26, 0x04	; 4
     e84:	4c 91       	ld	r20, X
     e86:	14 97       	sbiw	r26, 0x04	; 4
     e88:	15 96       	adiw	r26, 0x05	; 5
     e8a:	5c 91       	ld	r21, X
     e8c:	15 97       	sbiw	r26, 0x05	; 5
     e8e:	16 96       	adiw	r26, 0x06	; 6
     e90:	6c 91       	ld	r22, X
     e92:	16 97       	sbiw	r26, 0x06	; 6
     e94:	17 96       	adiw	r26, 0x07	; 7
     e96:	7c 91       	ld	r23, X
     e98:	c4 01       	movw	r24, r8
     e9a:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN7Complex3mulES_>
     e9e:	02 2f       	mov	r16, r18
     ea0:	13 2f       	mov	r17, r19
     ea2:	24 2f       	mov	r18, r20
     ea4:	35 2f       	mov	r19, r21
     ea6:	46 2f       	mov	r20, r22
     ea8:	57 2f       	mov	r21, r23
     eaa:	68 2f       	mov	r22, r24
     eac:	79 2f       	mov	r23, r25
     eae:	ce 01       	movw	r24, r28
     eb0:	09 96       	adiw	r24, 0x09	; 9
     eb2:	0e 94 0a 01 	call	0x214	; 0x214 <_ZN7Complex3addES_>
     eb6:	29 87       	std	Y+9, r18	; 0x09
     eb8:	3a 87       	std	Y+10, r19	; 0x0a
     eba:	4b 87       	std	Y+11, r20	; 0x0b
     ebc:	5c 87       	std	Y+12, r21	; 0x0c
     ebe:	6d 87       	std	Y+13, r22	; 0x0d
     ec0:	7e 87       	std	Y+14, r23	; 0x0e
     ec2:	8f 87       	std	Y+15, r24	; 0x0f
     ec4:	98 8b       	std	Y+16, r25	; 0x10
     ec6:	f7 01       	movw	r30, r14
     ec8:	70 96       	adiw	r30, 0x10	; 16
     eca:	d7 01       	movw	r26, r14
     ecc:	50 96       	adiw	r26, 0x10	; 16
     ece:	0c 91       	ld	r16, X
     ed0:	11 81       	ldd	r17, Z+1	; 0x01
     ed2:	22 81       	ldd	r18, Z+2	; 0x02
     ed4:	33 81       	ldd	r19, Z+3	; 0x03
     ed6:	44 81       	ldd	r20, Z+4	; 0x04
     ed8:	55 81       	ldd	r21, Z+5	; 0x05
     eda:	66 81       	ldd	r22, Z+6	; 0x06
     edc:	77 81       	ldd	r23, Z+7	; 0x07
     ede:	c2 01       	movw	r24, r4
     ee0:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN7Complex3mulES_>
     ee4:	02 2f       	mov	r16, r18
     ee6:	13 2f       	mov	r17, r19
     ee8:	24 2f       	mov	r18, r20
     eea:	35 2f       	mov	r19, r21
     eec:	46 2f       	mov	r20, r22
     eee:	57 2f       	mov	r21, r23
     ef0:	68 2f       	mov	r22, r24
     ef2:	79 2f       	mov	r23, r25
     ef4:	ce 01       	movw	r24, r28
     ef6:	09 96       	adiw	r24, 0x09	; 9
     ef8:	0e 94 0a 01 	call	0x214	; 0x214 <_ZN7Complex3addES_>
     efc:	29 87       	std	Y+9, r18	; 0x09
     efe:	3a 87       	std	Y+10, r19	; 0x0a
     f00:	4b 87       	std	Y+11, r20	; 0x0b
     f02:	5c 87       	std	Y+12, r21	; 0x0c
     f04:	6d 87       	std	Y+13, r22	; 0x0d
     f06:	7e 87       	std	Y+14, r23	; 0x0e
     f08:	8f 87       	std	Y+15, r24	; 0x0f
     f0a:	98 8b       	std	Y+16, r25	; 0x10
		result[i].re=tmp.re;
     f0c:	89 85       	ldd	r24, Y+9	; 0x09
     f0e:	9a 85       	ldd	r25, Y+10	; 0x0a
     f10:	ab 85       	ldd	r26, Y+11	; 0x0b
     f12:	bc 85       	ldd	r27, Y+12	; 0x0c
     f14:	f6 01       	movw	r30, r12
     f16:	80 83       	st	Z, r24
     f18:	91 83       	std	Z+1, r25	; 0x01
     f1a:	a2 83       	std	Z+2, r26	; 0x02
     f1c:	b3 83       	std	Z+3, r27	; 0x03
		result[i].im=tmp.im;
     f1e:	8d 85       	ldd	r24, Y+13	; 0x0d
     f20:	9e 85       	ldd	r25, Y+14	; 0x0e
     f22:	af 85       	ldd	r26, Y+15	; 0x0f
     f24:	b8 89       	ldd	r27, Y+16	; 0x10
     f26:	84 83       	std	Z+4, r24	; 0x04
     f28:	95 83       	std	Z+5, r25	; 0x05
     f2a:	a6 83       	std	Z+6, r26	; 0x06
     f2c:	b7 83       	std	Z+7, r27	; 0x07
}

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
     f2e:	ff ef       	ldi	r31, 0xFF	; 255
     f30:	af 1a       	sub	r10, r31
     f32:	bf 0a       	sbc	r11, r31
     f34:	88 e0       	ldi	r24, 0x08	; 8
     f36:	c8 0e       	add	r12, r24
     f38:	d1 1c       	adc	r13, r1
     f3a:	a2 e0       	ldi	r26, 0x02	; 2
     f3c:	aa 16       	cp	r10, r26
     f3e:	b1 04       	cpc	r11, r1
     f40:	09 f0       	breq	.+2      	; 0xf44 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_+0x146>
     f42:	87 cf       	rjmp	.-242    	; 0xe52 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_+0x54>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
		result[i].re=tmp.re;
		result[i].im=tmp.im;
	}
	return result;
}
     f44:	83 2d       	mov	r24, r3
     f46:	92 2d       	mov	r25, r2
     f48:	60 96       	adiw	r28, 0x10	; 16
     f4a:	0f b6       	in	r0, 0x3f	; 63
     f4c:	f8 94       	cli
     f4e:	de bf       	out	0x3e, r29	; 62
     f50:	0f be       	out	0x3f, r0	; 63
     f52:	cd bf       	out	0x3d, r28	; 61
     f54:	df 91       	pop	r29
     f56:	cf 91       	pop	r28
     f58:	1f 91       	pop	r17
     f5a:	0f 91       	pop	r16
     f5c:	ff 90       	pop	r15
     f5e:	ef 90       	pop	r14
     f60:	df 90       	pop	r13
     f62:	cf 90       	pop	r12
     f64:	bf 90       	pop	r11
     f66:	af 90       	pop	r10
     f68:	9f 90       	pop	r9
     f6a:	8f 90       	pop	r8
     f6c:	7f 90       	pop	r7
     f6e:	6f 90       	pop	r6
     f70:	5f 90       	pop	r5
     f72:	4f 90       	pop	r4
     f74:	3f 90       	pop	r3
     f76:	2f 90       	pop	r2
     f78:	08 95       	ret

00000f7a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>:
Complex * Gates::multiply4x4(Complex *q,Complex matrix[4][4]){
     f7a:	2f 92       	push	r2
     f7c:	3f 92       	push	r3
     f7e:	4f 92       	push	r4
     f80:	5f 92       	push	r5
     f82:	6f 92       	push	r6
     f84:	7f 92       	push	r7
     f86:	8f 92       	push	r8
     f88:	9f 92       	push	r9
     f8a:	af 92       	push	r10
     f8c:	bf 92       	push	r11
     f8e:	cf 92       	push	r12
     f90:	df 92       	push	r13
     f92:	ef 92       	push	r14
     f94:	ff 92       	push	r15
     f96:	0f 93       	push	r16
     f98:	1f 93       	push	r17
     f9a:	cf 93       	push	r28
     f9c:	df 93       	push	r29
     f9e:	cd b7       	in	r28, 0x3d	; 61
     fa0:	de b7       	in	r29, 0x3e	; 62
     fa2:	64 97       	sbiw	r28, 0x14	; 20
     fa4:	0f b6       	in	r0, 0x3f	; 63
     fa6:	f8 94       	cli
     fa8:	de bf       	out	0x3e, r29	; 62
     faa:	0f be       	out	0x3f, r0	; 63
     fac:	cd bf       	out	0x3d, r28	; 61
     fae:	3b 01       	movw	r6, r22
     fb0:	e4 2e       	mov	r14, r20
     fb2:	f5 2e       	mov	r15, r21
	int qb_size=4;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
     fb4:	80 e2       	ldi	r24, 0x20	; 32
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	0e 94 73 2c 	call	0x58e6	; 0x58e6 <malloc>
     fbc:	8b 8b       	std	Y+19, r24	; 0x13
     fbe:	9c 8b       	std	Y+20, r25	; 0x14
     fc0:	48 2e       	mov	r4, r24
     fc2:	59 2e       	mov	r5, r25
	for(int i=0;i<qb_size;i++){
     fc4:	81 2c       	mov	r8, r1
     fc6:	91 2c       	mov	r9, r1
     fc8:	e9 8a       	std	Y+17, r14	; 0x11
     fca:	fa 8a       	std	Y+18, r15	; 0x12
		Complex tmp;
     fcc:	21 2c       	mov	r2, r1
     fce:	31 2c       	mov	r3, r1
     fd0:	ce 01       	movw	r24, r28
     fd2:	09 96       	adiw	r24, 0x09	; 9
     fd4:	0e 94 00 01 	call	0x200	; 0x200 <_ZN7ComplexC1Ev>
     fd8:	c9 88       	ldd	r12, Y+17	; 0x11
     fda:	da 88       	ldd	r13, Y+18	; 0x12
     fdc:	e2 2c       	mov	r14, r2
     fde:	f3 2c       	mov	r15, r3
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
     fe0:	54 01       	movw	r10, r8
     fe2:	aa 0c       	add	r10, r10
     fe4:	bb 1c       	adc	r11, r11
     fe6:	aa 0c       	add	r10, r10
     fe8:	bb 1c       	adc	r11, r11
     fea:	aa 0c       	add	r10, r10
     fec:	bb 1c       	adc	r11, r11
     fee:	f5 01       	movw	r30, r10
     ff0:	ec 0d       	add	r30, r12
     ff2:	fd 1d       	adc	r31, r13
     ff4:	00 81       	ld	r16, Z
     ff6:	11 81       	ldd	r17, Z+1	; 0x01
     ff8:	22 81       	ldd	r18, Z+2	; 0x02
     ffa:	33 81       	ldd	r19, Z+3	; 0x03
     ffc:	44 81       	ldd	r20, Z+4	; 0x04
     ffe:	55 81       	ldd	r21, Z+5	; 0x05
    1000:	66 81       	ldd	r22, Z+6	; 0x06
    1002:	77 81       	ldd	r23, Z+7	; 0x07
    1004:	c3 01       	movw	r24, r6
    1006:	8e 0d       	add	r24, r14
    1008:	9f 1d       	adc	r25, r15
    100a:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN7Complex3mulES_>
    100e:	29 83       	std	Y+1, r18	; 0x01
    1010:	3a 83       	std	Y+2, r19	; 0x02
    1012:	4b 83       	std	Y+3, r20	; 0x03
    1014:	5c 83       	std	Y+4, r21	; 0x04
    1016:	6d 83       	std	Y+5, r22	; 0x05
    1018:	7e 83       	std	Y+6, r23	; 0x06
    101a:	8f 83       	std	Y+7, r24	; 0x07
    101c:	98 87       	std	Y+8, r25	; 0x08
    101e:	02 2f       	mov	r16, r18
    1020:	13 2f       	mov	r17, r19
    1022:	24 2f       	mov	r18, r20
    1024:	35 2f       	mov	r19, r21
    1026:	46 2f       	mov	r20, r22
    1028:	57 2f       	mov	r21, r23
    102a:	68 2f       	mov	r22, r24
    102c:	79 2f       	mov	r23, r25
    102e:	ce 01       	movw	r24, r28
    1030:	09 96       	adiw	r24, 0x09	; 9
    1032:	0e 94 0a 01 	call	0x214	; 0x214 <_ZN7Complex3addES_>
    1036:	29 87       	std	Y+9, r18	; 0x09
    1038:	3a 87       	std	Y+10, r19	; 0x0a
    103a:	4b 87       	std	Y+11, r20	; 0x0b
    103c:	5c 87       	std	Y+12, r21	; 0x0c
    103e:	6d 87       	std	Y+13, r22	; 0x0d
    1040:	7e 87       	std	Y+14, r23	; 0x0e
    1042:	8f 87       	std	Y+15, r24	; 0x0f
    1044:	98 8b       	std	Y+16, r25	; 0x10
    1046:	88 e0       	ldi	r24, 0x08	; 8
    1048:	e8 0e       	add	r14, r24
    104a:	f1 1c       	adc	r15, r1
    104c:	e0 e2       	ldi	r30, 0x20	; 32
    104e:	ce 0e       	add	r12, r30
    1050:	d1 1c       	adc	r13, r1
    1052:	f0 e2       	ldi	r31, 0x20	; 32
    1054:	ef 16       	cp	r14, r31
    1056:	f1 04       	cpc	r15, r1
    1058:	51 f6       	brne	.-108    	; 0xfee <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_+0x74>
		result[i].re=tmp.re;
    105a:	89 85       	ldd	r24, Y+9	; 0x09
    105c:	9a 85       	ldd	r25, Y+10	; 0x0a
    105e:	ab 85       	ldd	r26, Y+11	; 0x0b
    1060:	bc 85       	ldd	r27, Y+12	; 0x0c
    1062:	f2 01       	movw	r30, r4
    1064:	80 83       	st	Z, r24
    1066:	91 83       	std	Z+1, r25	; 0x01
    1068:	a2 83       	std	Z+2, r26	; 0x02
    106a:	b3 83       	std	Z+3, r27	; 0x03
		result[i].im=tmp.im;
    106c:	8d 85       	ldd	r24, Y+13	; 0x0d
    106e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1070:	af 85       	ldd	r26, Y+15	; 0x0f
    1072:	b8 89       	ldd	r27, Y+16	; 0x10
    1074:	84 83       	std	Z+4, r24	; 0x04
    1076:	95 83       	std	Z+5, r25	; 0x05
    1078:	a6 83       	std	Z+6, r26	; 0x06
    107a:	b7 83       	std	Z+7, r27	; 0x07
	return result;
}
Complex * Gates::multiply4x4(Complex *q,Complex matrix[4][4]){
	int qb_size=4;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
    107c:	ff ef       	ldi	r31, 0xFF	; 255
    107e:	8f 1a       	sub	r8, r31
    1080:	9f 0a       	sbc	r9, r31
    1082:	88 e0       	ldi	r24, 0x08	; 8
    1084:	48 0e       	add	r4, r24
    1086:	51 1c       	adc	r5, r1
    1088:	e4 e0       	ldi	r30, 0x04	; 4
    108a:	8e 16       	cp	r8, r30
    108c:	91 04       	cpc	r9, r1
    108e:	09 f0       	breq	.+2      	; 0x1092 <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_+0x118>
    1090:	9f cf       	rjmp	.-194    	; 0xfd0 <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_+0x56>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
		result[i].re=tmp.re;
		result[i].im=tmp.im;
	}
	return result;
}
    1092:	8b 89       	ldd	r24, Y+19	; 0x13
    1094:	9c 89       	ldd	r25, Y+20	; 0x14
    1096:	64 96       	adiw	r28, 0x14	; 20
    1098:	0f b6       	in	r0, 0x3f	; 63
    109a:	f8 94       	cli
    109c:	de bf       	out	0x3e, r29	; 62
    109e:	0f be       	out	0x3f, r0	; 63
    10a0:	cd bf       	out	0x3d, r28	; 61
    10a2:	df 91       	pop	r29
    10a4:	cf 91       	pop	r28
    10a6:	1f 91       	pop	r17
    10a8:	0f 91       	pop	r16
    10aa:	ff 90       	pop	r15
    10ac:	ef 90       	pop	r14
    10ae:	df 90       	pop	r13
    10b0:	cf 90       	pop	r12
    10b2:	bf 90       	pop	r11
    10b4:	af 90       	pop	r10
    10b6:	9f 90       	pop	r9
    10b8:	8f 90       	pop	r8
    10ba:	7f 90       	pop	r7
    10bc:	6f 90       	pop	r6
    10be:	5f 90       	pop	r5
    10c0:	4f 90       	pop	r4
    10c2:	3f 90       	pop	r3
    10c4:	2f 90       	pop	r2
    10c6:	08 95       	ret

000010c8 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_>:
Complex * Gates::multiply8x8(Complex *q,Complex matrix[8][8]){
    10c8:	2f 92       	push	r2
    10ca:	3f 92       	push	r3
    10cc:	4f 92       	push	r4
    10ce:	5f 92       	push	r5
    10d0:	6f 92       	push	r6
    10d2:	7f 92       	push	r7
    10d4:	8f 92       	push	r8
    10d6:	9f 92       	push	r9
    10d8:	af 92       	push	r10
    10da:	bf 92       	push	r11
    10dc:	cf 92       	push	r12
    10de:	df 92       	push	r13
    10e0:	ef 92       	push	r14
    10e2:	ff 92       	push	r15
    10e4:	0f 93       	push	r16
    10e6:	1f 93       	push	r17
    10e8:	cf 93       	push	r28
    10ea:	df 93       	push	r29
    10ec:	cd b7       	in	r28, 0x3d	; 61
    10ee:	de b7       	in	r29, 0x3e	; 62
    10f0:	62 97       	sbiw	r28, 0x12	; 18
    10f2:	0f b6       	in	r0, 0x3f	; 63
    10f4:	f8 94       	cli
    10f6:	de bf       	out	0x3e, r29	; 62
    10f8:	0f be       	out	0x3f, r0	; 63
    10fa:	cd bf       	out	0x3d, r28	; 61
    10fc:	4b 01       	movw	r8, r22
    10fe:	34 2e       	mov	r3, r20
    1100:	25 2e       	mov	r2, r21
	int qb_size=8;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
    1102:	80 e4       	ldi	r24, 0x40	; 64
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	0e 94 73 2c 	call	0x58e6	; 0x58e6 <malloc>
    110a:	89 8b       	std	Y+17, r24	; 0x11
    110c:	9a 8b       	std	Y+18, r25	; 0x12
    110e:	48 2e       	mov	r4, r24
    1110:	59 2e       	mov	r5, r25
	for(int i=0;i<qb_size;i++){
    1112:	61 2c       	mov	r6, r1
    1114:	71 2c       	mov	r7, r1
		Complex tmp;
    1116:	ce 01       	movw	r24, r28
    1118:	09 96       	adiw	r24, 0x09	; 9
    111a:	0e 94 00 01 	call	0x200	; 0x200 <_ZN7ComplexC1Ev>
    111e:	c3 2c       	mov	r12, r3
    1120:	d2 2c       	mov	r13, r2
    1122:	e1 2c       	mov	r14, r1
    1124:	f1 2c       	mov	r15, r1
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
    1126:	53 01       	movw	r10, r6
    1128:	aa 0c       	add	r10, r10
    112a:	bb 1c       	adc	r11, r11
    112c:	aa 0c       	add	r10, r10
    112e:	bb 1c       	adc	r11, r11
    1130:	aa 0c       	add	r10, r10
    1132:	bb 1c       	adc	r11, r11
    1134:	f5 01       	movw	r30, r10
    1136:	ec 0d       	add	r30, r12
    1138:	fd 1d       	adc	r31, r13
    113a:	00 81       	ld	r16, Z
    113c:	11 81       	ldd	r17, Z+1	; 0x01
    113e:	22 81       	ldd	r18, Z+2	; 0x02
    1140:	33 81       	ldd	r19, Z+3	; 0x03
    1142:	44 81       	ldd	r20, Z+4	; 0x04
    1144:	55 81       	ldd	r21, Z+5	; 0x05
    1146:	66 81       	ldd	r22, Z+6	; 0x06
    1148:	77 81       	ldd	r23, Z+7	; 0x07
    114a:	c4 01       	movw	r24, r8
    114c:	8e 0d       	add	r24, r14
    114e:	9f 1d       	adc	r25, r15
    1150:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN7Complex3mulES_>
    1154:	29 83       	std	Y+1, r18	; 0x01
    1156:	3a 83       	std	Y+2, r19	; 0x02
    1158:	4b 83       	std	Y+3, r20	; 0x03
    115a:	5c 83       	std	Y+4, r21	; 0x04
    115c:	6d 83       	std	Y+5, r22	; 0x05
    115e:	7e 83       	std	Y+6, r23	; 0x06
    1160:	8f 83       	std	Y+7, r24	; 0x07
    1162:	98 87       	std	Y+8, r25	; 0x08
    1164:	02 2f       	mov	r16, r18
    1166:	13 2f       	mov	r17, r19
    1168:	24 2f       	mov	r18, r20
    116a:	35 2f       	mov	r19, r21
    116c:	46 2f       	mov	r20, r22
    116e:	57 2f       	mov	r21, r23
    1170:	68 2f       	mov	r22, r24
    1172:	79 2f       	mov	r23, r25
    1174:	ce 01       	movw	r24, r28
    1176:	09 96       	adiw	r24, 0x09	; 9
    1178:	0e 94 0a 01 	call	0x214	; 0x214 <_ZN7Complex3addES_>
    117c:	29 87       	std	Y+9, r18	; 0x09
    117e:	3a 87       	std	Y+10, r19	; 0x0a
    1180:	4b 87       	std	Y+11, r20	; 0x0b
    1182:	5c 87       	std	Y+12, r21	; 0x0c
    1184:	6d 87       	std	Y+13, r22	; 0x0d
    1186:	7e 87       	std	Y+14, r23	; 0x0e
    1188:	8f 87       	std	Y+15, r24	; 0x0f
    118a:	98 8b       	std	Y+16, r25	; 0x10
    118c:	88 e0       	ldi	r24, 0x08	; 8
    118e:	e8 0e       	add	r14, r24
    1190:	f1 1c       	adc	r15, r1
    1192:	e0 e4       	ldi	r30, 0x40	; 64
    1194:	ce 0e       	add	r12, r30
    1196:	d1 1c       	adc	r13, r1
    1198:	f0 e4       	ldi	r31, 0x40	; 64
    119a:	ef 16       	cp	r14, r31
    119c:	f1 04       	cpc	r15, r1
    119e:	51 f6       	brne	.-108    	; 0x1134 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_+0x6c>
		result[i].re=tmp.re;
    11a0:	89 85       	ldd	r24, Y+9	; 0x09
    11a2:	9a 85       	ldd	r25, Y+10	; 0x0a
    11a4:	ab 85       	ldd	r26, Y+11	; 0x0b
    11a6:	bc 85       	ldd	r27, Y+12	; 0x0c
    11a8:	f2 01       	movw	r30, r4
    11aa:	80 83       	st	Z, r24
    11ac:	91 83       	std	Z+1, r25	; 0x01
    11ae:	a2 83       	std	Z+2, r26	; 0x02
    11b0:	b3 83       	std	Z+3, r27	; 0x03
		result[i].im=tmp.im;
    11b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    11b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    11b6:	af 85       	ldd	r26, Y+15	; 0x0f
    11b8:	b8 89       	ldd	r27, Y+16	; 0x10
    11ba:	84 83       	std	Z+4, r24	; 0x04
    11bc:	95 83       	std	Z+5, r25	; 0x05
    11be:	a6 83       	std	Z+6, r26	; 0x06
    11c0:	b7 83       	std	Z+7, r27	; 0x07
	return result;
}
Complex * Gates::multiply8x8(Complex *q,Complex matrix[8][8]){
	int qb_size=8;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
    11c2:	ff ef       	ldi	r31, 0xFF	; 255
    11c4:	6f 1a       	sub	r6, r31
    11c6:	7f 0a       	sbc	r7, r31
    11c8:	88 e0       	ldi	r24, 0x08	; 8
    11ca:	48 0e       	add	r4, r24
    11cc:	51 1c       	adc	r5, r1
    11ce:	e8 e0       	ldi	r30, 0x08	; 8
    11d0:	6e 16       	cp	r6, r30
    11d2:	71 04       	cpc	r7, r1
    11d4:	09 f0       	breq	.+2      	; 0x11d8 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_+0x110>
    11d6:	9f cf       	rjmp	.-194    	; 0x1116 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_+0x4e>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
		result[i].re=tmp.re;
		result[i].im=tmp.im;
	}
	return result;
}
    11d8:	89 89       	ldd	r24, Y+17	; 0x11
    11da:	9a 89       	ldd	r25, Y+18	; 0x12
    11dc:	62 96       	adiw	r28, 0x12	; 18
    11de:	0f b6       	in	r0, 0x3f	; 63
    11e0:	f8 94       	cli
    11e2:	de bf       	out	0x3e, r29	; 62
    11e4:	0f be       	out	0x3f, r0	; 63
    11e6:	cd bf       	out	0x3d, r28	; 61
    11e8:	df 91       	pop	r29
    11ea:	cf 91       	pop	r28
    11ec:	1f 91       	pop	r17
    11ee:	0f 91       	pop	r16
    11f0:	ff 90       	pop	r15
    11f2:	ef 90       	pop	r14
    11f4:	df 90       	pop	r13
    11f6:	cf 90       	pop	r12
    11f8:	bf 90       	pop	r11
    11fa:	af 90       	pop	r10
    11fc:	9f 90       	pop	r9
    11fe:	8f 90       	pop	r8
    1200:	7f 90       	pop	r7
    1202:	6f 90       	pop	r6
    1204:	5f 90       	pop	r5
    1206:	4f 90       	pop	r4
    1208:	3f 90       	pop	r3
    120a:	2f 90       	pop	r2
    120c:	08 95       	ret

0000120e <_ZN5Gates1XEii>:

int * Gates::X(int theta,int phi){
    120e:	af 92       	push	r10
    1210:	bf 92       	push	r11
    1212:	cf 92       	push	r12
    1214:	df 92       	push	r13
    1216:	ef 92       	push	r14
    1218:	ff 92       	push	r15
    121a:	0f 93       	push	r16
    121c:	1f 93       	push	r17
    121e:	cf 93       	push	r28
    1220:	df 93       	push	r29
    1222:	cd b7       	in	r28, 0x3d	; 61
    1224:	de b7       	in	r29, 0x3e	; 62
    1226:	a4 97       	sbiw	r28, 0x24	; 36
    1228:	0f b6       	in	r0, 0x3f	; 63
    122a:	f8 94       	cli
    122c:	de bf       	out	0x3e, r29	; 62
    122e:	0f be       	out	0x3f, r0	; 63
    1230:	cd bf       	out	0x3d, r28	; 61
    1232:	7c 01       	movw	r14, r24
    1234:	5b 01       	movw	r10, r22
    1236:	6a 01       	movw	r12, r20
	Complex x_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(0,0),Complex(1,0)},
													   {Complex(1,0),Complex(0,0)}};
    1238:	00 e0       	ldi	r16, 0x00	; 0
    123a:	10 e0       	ldi	r17, 0x00	; 0
    123c:	98 01       	movw	r18, r16
    123e:	b9 01       	movw	r22, r18
    1240:	a8 01       	movw	r20, r16
    1242:	ce 01       	movw	r24, r28
    1244:	01 96       	adiw	r24, 0x01	; 1
    1246:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    124a:	00 e0       	ldi	r16, 0x00	; 0
    124c:	10 e0       	ldi	r17, 0x00	; 0
    124e:	98 01       	movw	r18, r16
    1250:	40 e0       	ldi	r20, 0x00	; 0
    1252:	50 e0       	ldi	r21, 0x00	; 0
    1254:	60 e8       	ldi	r22, 0x80	; 128
    1256:	7f e3       	ldi	r23, 0x3F	; 63
    1258:	ce 01       	movw	r24, r28
    125a:	09 96       	adiw	r24, 0x09	; 9
    125c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1260:	00 e0       	ldi	r16, 0x00	; 0
    1262:	10 e0       	ldi	r17, 0x00	; 0
    1264:	98 01       	movw	r18, r16
    1266:	40 e0       	ldi	r20, 0x00	; 0
    1268:	50 e0       	ldi	r21, 0x00	; 0
    126a:	60 e8       	ldi	r22, 0x80	; 128
    126c:	7f e3       	ldi	r23, 0x3F	; 63
    126e:	ce 01       	movw	r24, r28
    1270:	41 96       	adiw	r24, 0x11	; 17
    1272:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1276:	00 e0       	ldi	r16, 0x00	; 0
    1278:	10 e0       	ldi	r17, 0x00	; 0
    127a:	98 01       	movw	r18, r16
    127c:	b9 01       	movw	r22, r18
    127e:	a8 01       	movw	r20, r16
    1280:	ce 01       	movw	r24, r28
    1282:	49 96       	adiw	r24, 0x19	; 25
    1284:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[1]={phi};
    1288:	bc a2       	std	Y+36, r11	; 0x24
    128a:	ab a2       	std	Y+35, r10	; 0x23
    128c:	da a2       	std	Y+34, r13	; 0x22
    128e:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),x_matrix),QB_SIZE1);
    1290:	9e 01       	movw	r18, r28
    1292:	2f 5d       	subi	r18, 0xDF	; 223
    1294:	3f 4f       	sbci	r19, 0xFF	; 255
    1296:	ae 01       	movw	r20, r28
    1298:	4d 5d       	subi	r20, 0xDD	; 221
    129a:	5f 4f       	sbci	r21, 0xFF	; 255
    129c:	61 e0       	ldi	r22, 0x01	; 1
    129e:	70 e0       	ldi	r23, 0x00	; 0
    12a0:	c7 01       	movw	r24, r14
    12a2:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    12a6:	ae 01       	movw	r20, r28
    12a8:	4f 5f       	subi	r20, 0xFF	; 255
    12aa:	5f 4f       	sbci	r21, 0xFF	; 255
    12ac:	bc 01       	movw	r22, r24
    12ae:	c7 01       	movw	r24, r14
    12b0:	0e 94 ff 06 	call	0xdfe	; 0xdfe <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    12b4:	41 e0       	ldi	r20, 0x01	; 1
    12b6:	50 e0       	ldi	r21, 0x00	; 0
    12b8:	bc 01       	movw	r22, r24
    12ba:	c7 01       	movw	r24, r14
    12bc:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    12c0:	a4 96       	adiw	r28, 0x24	; 36
    12c2:	0f b6       	in	r0, 0x3f	; 63
    12c4:	f8 94       	cli
    12c6:	de bf       	out	0x3e, r29	; 62
    12c8:	0f be       	out	0x3f, r0	; 63
    12ca:	cd bf       	out	0x3d, r28	; 61
    12cc:	df 91       	pop	r29
    12ce:	cf 91       	pop	r28
    12d0:	1f 91       	pop	r17
    12d2:	0f 91       	pop	r16
    12d4:	ff 90       	pop	r15
    12d6:	ef 90       	pop	r14
    12d8:	df 90       	pop	r13
    12da:	cf 90       	pop	r12
    12dc:	bf 90       	pop	r11
    12de:	af 90       	pop	r10
    12e0:	08 95       	ret

000012e2 <_ZN5Gates1YEii>:
int * Gates::Y(int theta,int phi){
    12e2:	af 92       	push	r10
    12e4:	bf 92       	push	r11
    12e6:	cf 92       	push	r12
    12e8:	df 92       	push	r13
    12ea:	ef 92       	push	r14
    12ec:	ff 92       	push	r15
    12ee:	0f 93       	push	r16
    12f0:	1f 93       	push	r17
    12f2:	cf 93       	push	r28
    12f4:	df 93       	push	r29
    12f6:	cd b7       	in	r28, 0x3d	; 61
    12f8:	de b7       	in	r29, 0x3e	; 62
    12fa:	a4 97       	sbiw	r28, 0x24	; 36
    12fc:	0f b6       	in	r0, 0x3f	; 63
    12fe:	f8 94       	cli
    1300:	de bf       	out	0x3e, r29	; 62
    1302:	0f be       	out	0x3f, r0	; 63
    1304:	cd bf       	out	0x3d, r28	; 61
    1306:	7c 01       	movw	r14, r24
    1308:	5b 01       	movw	r10, r22
    130a:	6a 01       	movw	r12, r20
	Complex y_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(0,0),Complex(0,-1)},
													   {Complex(0,1),Complex(0,0)}};
    130c:	00 e0       	ldi	r16, 0x00	; 0
    130e:	10 e0       	ldi	r17, 0x00	; 0
    1310:	98 01       	movw	r18, r16
    1312:	b9 01       	movw	r22, r18
    1314:	a8 01       	movw	r20, r16
    1316:	ce 01       	movw	r24, r28
    1318:	01 96       	adiw	r24, 0x01	; 1
    131a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    131e:	00 e0       	ldi	r16, 0x00	; 0
    1320:	10 e0       	ldi	r17, 0x00	; 0
    1322:	20 e8       	ldi	r18, 0x80	; 128
    1324:	3f eb       	ldi	r19, 0xBF	; 191
    1326:	40 e0       	ldi	r20, 0x00	; 0
    1328:	50 e0       	ldi	r21, 0x00	; 0
    132a:	ba 01       	movw	r22, r20
    132c:	ce 01       	movw	r24, r28
    132e:	09 96       	adiw	r24, 0x09	; 9
    1330:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1334:	00 e0       	ldi	r16, 0x00	; 0
    1336:	10 e0       	ldi	r17, 0x00	; 0
    1338:	20 e8       	ldi	r18, 0x80	; 128
    133a:	3f e3       	ldi	r19, 0x3F	; 63
    133c:	40 e0       	ldi	r20, 0x00	; 0
    133e:	50 e0       	ldi	r21, 0x00	; 0
    1340:	ba 01       	movw	r22, r20
    1342:	ce 01       	movw	r24, r28
    1344:	41 96       	adiw	r24, 0x11	; 17
    1346:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    134a:	00 e0       	ldi	r16, 0x00	; 0
    134c:	10 e0       	ldi	r17, 0x00	; 0
    134e:	98 01       	movw	r18, r16
    1350:	b9 01       	movw	r22, r18
    1352:	a8 01       	movw	r20, r16
    1354:	ce 01       	movw	r24, r28
    1356:	49 96       	adiw	r24, 0x19	; 25
    1358:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    135c:	bc a2       	std	Y+36, r11	; 0x24
    135e:	ab a2       	std	Y+35, r10	; 0x23
    1360:	da a2       	std	Y+34, r13	; 0x22
    1362:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),y_matrix),QB_SIZE1);
    1364:	9e 01       	movw	r18, r28
    1366:	2f 5d       	subi	r18, 0xDF	; 223
    1368:	3f 4f       	sbci	r19, 0xFF	; 255
    136a:	ae 01       	movw	r20, r28
    136c:	4d 5d       	subi	r20, 0xDD	; 221
    136e:	5f 4f       	sbci	r21, 0xFF	; 255
    1370:	61 e0       	ldi	r22, 0x01	; 1
    1372:	70 e0       	ldi	r23, 0x00	; 0
    1374:	c7 01       	movw	r24, r14
    1376:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    137a:	ae 01       	movw	r20, r28
    137c:	4f 5f       	subi	r20, 0xFF	; 255
    137e:	5f 4f       	sbci	r21, 0xFF	; 255
    1380:	bc 01       	movw	r22, r24
    1382:	c7 01       	movw	r24, r14
    1384:	0e 94 ff 06 	call	0xdfe	; 0xdfe <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    1388:	41 e0       	ldi	r20, 0x01	; 1
    138a:	50 e0       	ldi	r21, 0x00	; 0
    138c:	bc 01       	movw	r22, r24
    138e:	c7 01       	movw	r24, r14
    1390:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1394:	a4 96       	adiw	r28, 0x24	; 36
    1396:	0f b6       	in	r0, 0x3f	; 63
    1398:	f8 94       	cli
    139a:	de bf       	out	0x3e, r29	; 62
    139c:	0f be       	out	0x3f, r0	; 63
    139e:	cd bf       	out	0x3d, r28	; 61
    13a0:	df 91       	pop	r29
    13a2:	cf 91       	pop	r28
    13a4:	1f 91       	pop	r17
    13a6:	0f 91       	pop	r16
    13a8:	ff 90       	pop	r15
    13aa:	ef 90       	pop	r14
    13ac:	df 90       	pop	r13
    13ae:	cf 90       	pop	r12
    13b0:	bf 90       	pop	r11
    13b2:	af 90       	pop	r10
    13b4:	08 95       	ret

000013b6 <_ZN5Gates1ZEii>:
int * Gates::Z(int theta,int phi){
    13b6:	af 92       	push	r10
    13b8:	bf 92       	push	r11
    13ba:	cf 92       	push	r12
    13bc:	df 92       	push	r13
    13be:	ef 92       	push	r14
    13c0:	ff 92       	push	r15
    13c2:	0f 93       	push	r16
    13c4:	1f 93       	push	r17
    13c6:	cf 93       	push	r28
    13c8:	df 93       	push	r29
    13ca:	cd b7       	in	r28, 0x3d	; 61
    13cc:	de b7       	in	r29, 0x3e	; 62
    13ce:	a4 97       	sbiw	r28, 0x24	; 36
    13d0:	0f b6       	in	r0, 0x3f	; 63
    13d2:	f8 94       	cli
    13d4:	de bf       	out	0x3e, r29	; 62
    13d6:	0f be       	out	0x3f, r0	; 63
    13d8:	cd bf       	out	0x3d, r28	; 61
    13da:	7c 01       	movw	r14, r24
    13dc:	5b 01       	movw	r10, r22
    13de:	6a 01       	movw	r12, r20
	Complex z_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(1,0),Complex(0,0)},
													   {Complex(0,0),Complex(-1,0)}};
    13e0:	00 e0       	ldi	r16, 0x00	; 0
    13e2:	10 e0       	ldi	r17, 0x00	; 0
    13e4:	98 01       	movw	r18, r16
    13e6:	40 e0       	ldi	r20, 0x00	; 0
    13e8:	50 e0       	ldi	r21, 0x00	; 0
    13ea:	60 e8       	ldi	r22, 0x80	; 128
    13ec:	7f e3       	ldi	r23, 0x3F	; 63
    13ee:	ce 01       	movw	r24, r28
    13f0:	01 96       	adiw	r24, 0x01	; 1
    13f2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    13f6:	00 e0       	ldi	r16, 0x00	; 0
    13f8:	10 e0       	ldi	r17, 0x00	; 0
    13fa:	98 01       	movw	r18, r16
    13fc:	b9 01       	movw	r22, r18
    13fe:	a8 01       	movw	r20, r16
    1400:	ce 01       	movw	r24, r28
    1402:	09 96       	adiw	r24, 0x09	; 9
    1404:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1408:	00 e0       	ldi	r16, 0x00	; 0
    140a:	10 e0       	ldi	r17, 0x00	; 0
    140c:	98 01       	movw	r18, r16
    140e:	b9 01       	movw	r22, r18
    1410:	a8 01       	movw	r20, r16
    1412:	ce 01       	movw	r24, r28
    1414:	41 96       	adiw	r24, 0x11	; 17
    1416:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    141a:	00 e0       	ldi	r16, 0x00	; 0
    141c:	10 e0       	ldi	r17, 0x00	; 0
    141e:	98 01       	movw	r18, r16
    1420:	40 e0       	ldi	r20, 0x00	; 0
    1422:	50 e0       	ldi	r21, 0x00	; 0
    1424:	60 e8       	ldi	r22, 0x80	; 128
    1426:	7f eb       	ldi	r23, 0xBF	; 191
    1428:	ce 01       	movw	r24, r28
    142a:	49 96       	adiw	r24, 0x19	; 25
    142c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    1430:	bc a2       	std	Y+36, r11	; 0x24
    1432:	ab a2       	std	Y+35, r10	; 0x23
    1434:	da a2       	std	Y+34, r13	; 0x22
    1436:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),z_matrix),QB_SIZE1);
    1438:	9e 01       	movw	r18, r28
    143a:	2f 5d       	subi	r18, 0xDF	; 223
    143c:	3f 4f       	sbci	r19, 0xFF	; 255
    143e:	ae 01       	movw	r20, r28
    1440:	4d 5d       	subi	r20, 0xDD	; 221
    1442:	5f 4f       	sbci	r21, 0xFF	; 255
    1444:	61 e0       	ldi	r22, 0x01	; 1
    1446:	70 e0       	ldi	r23, 0x00	; 0
    1448:	c7 01       	movw	r24, r14
    144a:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    144e:	ae 01       	movw	r20, r28
    1450:	4f 5f       	subi	r20, 0xFF	; 255
    1452:	5f 4f       	sbci	r21, 0xFF	; 255
    1454:	bc 01       	movw	r22, r24
    1456:	c7 01       	movw	r24, r14
    1458:	0e 94 ff 06 	call	0xdfe	; 0xdfe <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    145c:	41 e0       	ldi	r20, 0x01	; 1
    145e:	50 e0       	ldi	r21, 0x00	; 0
    1460:	bc 01       	movw	r22, r24
    1462:	c7 01       	movw	r24, r14
    1464:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1468:	a4 96       	adiw	r28, 0x24	; 36
    146a:	0f b6       	in	r0, 0x3f	; 63
    146c:	f8 94       	cli
    146e:	de bf       	out	0x3e, r29	; 62
    1470:	0f be       	out	0x3f, r0	; 63
    1472:	cd bf       	out	0x3d, r28	; 61
    1474:	df 91       	pop	r29
    1476:	cf 91       	pop	r28
    1478:	1f 91       	pop	r17
    147a:	0f 91       	pop	r16
    147c:	ff 90       	pop	r15
    147e:	ef 90       	pop	r14
    1480:	df 90       	pop	r13
    1482:	cf 90       	pop	r12
    1484:	bf 90       	pop	r11
    1486:	af 90       	pop	r10
    1488:	08 95       	ret

0000148a <_ZN5Gates1HEii>:
int * Gates::H(int theta,int phi){
    148a:	af 92       	push	r10
    148c:	bf 92       	push	r11
    148e:	cf 92       	push	r12
    1490:	df 92       	push	r13
    1492:	ef 92       	push	r14
    1494:	ff 92       	push	r15
    1496:	0f 93       	push	r16
    1498:	1f 93       	push	r17
    149a:	cf 93       	push	r28
    149c:	df 93       	push	r29
    149e:	cd b7       	in	r28, 0x3d	; 61
    14a0:	de b7       	in	r29, 0x3e	; 62
    14a2:	a4 97       	sbiw	r28, 0x24	; 36
    14a4:	0f b6       	in	r0, 0x3f	; 63
    14a6:	f8 94       	cli
    14a8:	de bf       	out	0x3e, r29	; 62
    14aa:	0f be       	out	0x3f, r0	; 63
    14ac:	cd bf       	out	0x3d, r28	; 61
    14ae:	7c 01       	movw	r14, r24
    14b0:	5b 01       	movw	r10, r22
    14b2:	6a 01       	movw	r12, r20
	Complex h_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(1/sqrt(2),0),Complex(1/sqrt(2),0)},
													   {Complex(1/sqrt(2),0),Complex(-1/sqrt(2),0)}};
    14b4:	00 e0       	ldi	r16, 0x00	; 0
    14b6:	10 e0       	ldi	r17, 0x00	; 0
    14b8:	98 01       	movw	r18, r16
    14ba:	43 ef       	ldi	r20, 0xF3	; 243
    14bc:	54 e0       	ldi	r21, 0x04	; 4
    14be:	65 e3       	ldi	r22, 0x35	; 53
    14c0:	7f e3       	ldi	r23, 0x3F	; 63
    14c2:	ce 01       	movw	r24, r28
    14c4:	01 96       	adiw	r24, 0x01	; 1
    14c6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    14ca:	00 e0       	ldi	r16, 0x00	; 0
    14cc:	10 e0       	ldi	r17, 0x00	; 0
    14ce:	98 01       	movw	r18, r16
    14d0:	43 ef       	ldi	r20, 0xF3	; 243
    14d2:	54 e0       	ldi	r21, 0x04	; 4
    14d4:	65 e3       	ldi	r22, 0x35	; 53
    14d6:	7f e3       	ldi	r23, 0x3F	; 63
    14d8:	ce 01       	movw	r24, r28
    14da:	09 96       	adiw	r24, 0x09	; 9
    14dc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    14e0:	00 e0       	ldi	r16, 0x00	; 0
    14e2:	10 e0       	ldi	r17, 0x00	; 0
    14e4:	98 01       	movw	r18, r16
    14e6:	43 ef       	ldi	r20, 0xF3	; 243
    14e8:	54 e0       	ldi	r21, 0x04	; 4
    14ea:	65 e3       	ldi	r22, 0x35	; 53
    14ec:	7f e3       	ldi	r23, 0x3F	; 63
    14ee:	ce 01       	movw	r24, r28
    14f0:	41 96       	adiw	r24, 0x11	; 17
    14f2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    14f6:	00 e0       	ldi	r16, 0x00	; 0
    14f8:	10 e0       	ldi	r17, 0x00	; 0
    14fa:	98 01       	movw	r18, r16
    14fc:	43 ef       	ldi	r20, 0xF3	; 243
    14fe:	54 e0       	ldi	r21, 0x04	; 4
    1500:	65 e3       	ldi	r22, 0x35	; 53
    1502:	7f eb       	ldi	r23, 0xBF	; 191
    1504:	ce 01       	movw	r24, r28
    1506:	49 96       	adiw	r24, 0x19	; 25
    1508:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    150c:	bc a2       	std	Y+36, r11	; 0x24
    150e:	ab a2       	std	Y+35, r10	; 0x23
    1510:	da a2       	std	Y+34, r13	; 0x22
    1512:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),h_matrix),QB_SIZE1);
    1514:	9e 01       	movw	r18, r28
    1516:	2f 5d       	subi	r18, 0xDF	; 223
    1518:	3f 4f       	sbci	r19, 0xFF	; 255
    151a:	ae 01       	movw	r20, r28
    151c:	4d 5d       	subi	r20, 0xDD	; 221
    151e:	5f 4f       	sbci	r21, 0xFF	; 255
    1520:	61 e0       	ldi	r22, 0x01	; 1
    1522:	70 e0       	ldi	r23, 0x00	; 0
    1524:	c7 01       	movw	r24, r14
    1526:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    152a:	ae 01       	movw	r20, r28
    152c:	4f 5f       	subi	r20, 0xFF	; 255
    152e:	5f 4f       	sbci	r21, 0xFF	; 255
    1530:	bc 01       	movw	r22, r24
    1532:	c7 01       	movw	r24, r14
    1534:	0e 94 ff 06 	call	0xdfe	; 0xdfe <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    1538:	41 e0       	ldi	r20, 0x01	; 1
    153a:	50 e0       	ldi	r21, 0x00	; 0
    153c:	bc 01       	movw	r22, r24
    153e:	c7 01       	movw	r24, r14
    1540:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1544:	a4 96       	adiw	r28, 0x24	; 36
    1546:	0f b6       	in	r0, 0x3f	; 63
    1548:	f8 94       	cli
    154a:	de bf       	out	0x3e, r29	; 62
    154c:	0f be       	out	0x3f, r0	; 63
    154e:	cd bf       	out	0x3d, r28	; 61
    1550:	df 91       	pop	r29
    1552:	cf 91       	pop	r28
    1554:	1f 91       	pop	r17
    1556:	0f 91       	pop	r16
    1558:	ff 90       	pop	r15
    155a:	ef 90       	pop	r14
    155c:	df 90       	pop	r13
    155e:	cf 90       	pop	r12
    1560:	bf 90       	pop	r11
    1562:	af 90       	pop	r10
    1564:	08 95       	ret

00001566 <_ZN5Gates1SEii>:
int * Gates::S(int theta,int phi){
    1566:	af 92       	push	r10
    1568:	bf 92       	push	r11
    156a:	cf 92       	push	r12
    156c:	df 92       	push	r13
    156e:	ef 92       	push	r14
    1570:	ff 92       	push	r15
    1572:	0f 93       	push	r16
    1574:	1f 93       	push	r17
    1576:	cf 93       	push	r28
    1578:	df 93       	push	r29
    157a:	cd b7       	in	r28, 0x3d	; 61
    157c:	de b7       	in	r29, 0x3e	; 62
    157e:	a4 97       	sbiw	r28, 0x24	; 36
    1580:	0f b6       	in	r0, 0x3f	; 63
    1582:	f8 94       	cli
    1584:	de bf       	out	0x3e, r29	; 62
    1586:	0f be       	out	0x3f, r0	; 63
    1588:	cd bf       	out	0x3d, r28	; 61
    158a:	7c 01       	movw	r14, r24
    158c:	5b 01       	movw	r10, r22
    158e:	6a 01       	movw	r12, r20
	Complex s_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(1,0),Complex(0,0)},
													   {Complex(0,0),Complex(0,1)}};
    1590:	00 e0       	ldi	r16, 0x00	; 0
    1592:	10 e0       	ldi	r17, 0x00	; 0
    1594:	98 01       	movw	r18, r16
    1596:	40 e0       	ldi	r20, 0x00	; 0
    1598:	50 e0       	ldi	r21, 0x00	; 0
    159a:	60 e8       	ldi	r22, 0x80	; 128
    159c:	7f e3       	ldi	r23, 0x3F	; 63
    159e:	ce 01       	movw	r24, r28
    15a0:	01 96       	adiw	r24, 0x01	; 1
    15a2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    15a6:	00 e0       	ldi	r16, 0x00	; 0
    15a8:	10 e0       	ldi	r17, 0x00	; 0
    15aa:	98 01       	movw	r18, r16
    15ac:	b9 01       	movw	r22, r18
    15ae:	a8 01       	movw	r20, r16
    15b0:	ce 01       	movw	r24, r28
    15b2:	09 96       	adiw	r24, 0x09	; 9
    15b4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    15b8:	00 e0       	ldi	r16, 0x00	; 0
    15ba:	10 e0       	ldi	r17, 0x00	; 0
    15bc:	98 01       	movw	r18, r16
    15be:	b9 01       	movw	r22, r18
    15c0:	a8 01       	movw	r20, r16
    15c2:	ce 01       	movw	r24, r28
    15c4:	41 96       	adiw	r24, 0x11	; 17
    15c6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    15ca:	00 e0       	ldi	r16, 0x00	; 0
    15cc:	10 e0       	ldi	r17, 0x00	; 0
    15ce:	20 e8       	ldi	r18, 0x80	; 128
    15d0:	3f e3       	ldi	r19, 0x3F	; 63
    15d2:	40 e0       	ldi	r20, 0x00	; 0
    15d4:	50 e0       	ldi	r21, 0x00	; 0
    15d6:	ba 01       	movw	r22, r20
    15d8:	ce 01       	movw	r24, r28
    15da:	49 96       	adiw	r24, 0x19	; 25
    15dc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    15e0:	bc a2       	std	Y+36, r11	; 0x24
    15e2:	ab a2       	std	Y+35, r10	; 0x23
    15e4:	da a2       	std	Y+34, r13	; 0x22
    15e6:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),s_matrix),QB_SIZE1);
    15e8:	9e 01       	movw	r18, r28
    15ea:	2f 5d       	subi	r18, 0xDF	; 223
    15ec:	3f 4f       	sbci	r19, 0xFF	; 255
    15ee:	ae 01       	movw	r20, r28
    15f0:	4d 5d       	subi	r20, 0xDD	; 221
    15f2:	5f 4f       	sbci	r21, 0xFF	; 255
    15f4:	61 e0       	ldi	r22, 0x01	; 1
    15f6:	70 e0       	ldi	r23, 0x00	; 0
    15f8:	c7 01       	movw	r24, r14
    15fa:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    15fe:	ae 01       	movw	r20, r28
    1600:	4f 5f       	subi	r20, 0xFF	; 255
    1602:	5f 4f       	sbci	r21, 0xFF	; 255
    1604:	bc 01       	movw	r22, r24
    1606:	c7 01       	movw	r24, r14
    1608:	0e 94 ff 06 	call	0xdfe	; 0xdfe <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    160c:	41 e0       	ldi	r20, 0x01	; 1
    160e:	50 e0       	ldi	r21, 0x00	; 0
    1610:	bc 01       	movw	r22, r24
    1612:	c7 01       	movw	r24, r14
    1614:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1618:	a4 96       	adiw	r28, 0x24	; 36
    161a:	0f b6       	in	r0, 0x3f	; 63
    161c:	f8 94       	cli
    161e:	de bf       	out	0x3e, r29	; 62
    1620:	0f be       	out	0x3f, r0	; 63
    1622:	cd bf       	out	0x3d, r28	; 61
    1624:	df 91       	pop	r29
    1626:	cf 91       	pop	r28
    1628:	1f 91       	pop	r17
    162a:	0f 91       	pop	r16
    162c:	ff 90       	pop	r15
    162e:	ef 90       	pop	r14
    1630:	df 90       	pop	r13
    1632:	cf 90       	pop	r12
    1634:	bf 90       	pop	r11
    1636:	af 90       	pop	r10
    1638:	08 95       	ret

0000163a <_ZN5Gates1TEii>:
int * Gates::T(int theta,int phi){
    163a:	af 92       	push	r10
    163c:	bf 92       	push	r11
    163e:	cf 92       	push	r12
    1640:	df 92       	push	r13
    1642:	ef 92       	push	r14
    1644:	ff 92       	push	r15
    1646:	0f 93       	push	r16
    1648:	1f 93       	push	r17
    164a:	cf 93       	push	r28
    164c:	df 93       	push	r29
    164e:	cd b7       	in	r28, 0x3d	; 61
    1650:	de b7       	in	r29, 0x3e	; 62
    1652:	a4 97       	sbiw	r28, 0x24	; 36
    1654:	0f b6       	in	r0, 0x3f	; 63
    1656:	f8 94       	cli
    1658:	de bf       	out	0x3e, r29	; 62
    165a:	0f be       	out	0x3f, r0	; 63
    165c:	cd bf       	out	0x3d, r28	; 61
    165e:	7c 01       	movw	r14, r24
    1660:	5b 01       	movw	r10, r22
    1662:	6a 01       	movw	r12, r20
	Complex t_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(1,0),Complex(0,0)},
													   {Complex(0,0),Complex(1/sqrt(2),1/sqrt(2))}};
    1664:	00 e0       	ldi	r16, 0x00	; 0
    1666:	10 e0       	ldi	r17, 0x00	; 0
    1668:	98 01       	movw	r18, r16
    166a:	40 e0       	ldi	r20, 0x00	; 0
    166c:	50 e0       	ldi	r21, 0x00	; 0
    166e:	60 e8       	ldi	r22, 0x80	; 128
    1670:	7f e3       	ldi	r23, 0x3F	; 63
    1672:	ce 01       	movw	r24, r28
    1674:	01 96       	adiw	r24, 0x01	; 1
    1676:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    167a:	00 e0       	ldi	r16, 0x00	; 0
    167c:	10 e0       	ldi	r17, 0x00	; 0
    167e:	98 01       	movw	r18, r16
    1680:	b9 01       	movw	r22, r18
    1682:	a8 01       	movw	r20, r16
    1684:	ce 01       	movw	r24, r28
    1686:	09 96       	adiw	r24, 0x09	; 9
    1688:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    168c:	00 e0       	ldi	r16, 0x00	; 0
    168e:	10 e0       	ldi	r17, 0x00	; 0
    1690:	98 01       	movw	r18, r16
    1692:	b9 01       	movw	r22, r18
    1694:	a8 01       	movw	r20, r16
    1696:	ce 01       	movw	r24, r28
    1698:	41 96       	adiw	r24, 0x11	; 17
    169a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    169e:	03 ef       	ldi	r16, 0xF3	; 243
    16a0:	14 e0       	ldi	r17, 0x04	; 4
    16a2:	25 e3       	ldi	r18, 0x35	; 53
    16a4:	3f e3       	ldi	r19, 0x3F	; 63
    16a6:	b9 01       	movw	r22, r18
    16a8:	a8 01       	movw	r20, r16
    16aa:	ce 01       	movw	r24, r28
    16ac:	49 96       	adiw	r24, 0x19	; 25
    16ae:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    16b2:	bc a2       	std	Y+36, r11	; 0x24
    16b4:	ab a2       	std	Y+35, r10	; 0x23
    16b6:	da a2       	std	Y+34, r13	; 0x22
    16b8:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),t_matrix),QB_SIZE1);
    16ba:	9e 01       	movw	r18, r28
    16bc:	2f 5d       	subi	r18, 0xDF	; 223
    16be:	3f 4f       	sbci	r19, 0xFF	; 255
    16c0:	ae 01       	movw	r20, r28
    16c2:	4d 5d       	subi	r20, 0xDD	; 221
    16c4:	5f 4f       	sbci	r21, 0xFF	; 255
    16c6:	61 e0       	ldi	r22, 0x01	; 1
    16c8:	70 e0       	ldi	r23, 0x00	; 0
    16ca:	c7 01       	movw	r24, r14
    16cc:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    16d0:	ae 01       	movw	r20, r28
    16d2:	4f 5f       	subi	r20, 0xFF	; 255
    16d4:	5f 4f       	sbci	r21, 0xFF	; 255
    16d6:	bc 01       	movw	r22, r24
    16d8:	c7 01       	movw	r24, r14
    16da:	0e 94 ff 06 	call	0xdfe	; 0xdfe <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    16de:	41 e0       	ldi	r20, 0x01	; 1
    16e0:	50 e0       	ldi	r21, 0x00	; 0
    16e2:	bc 01       	movw	r22, r24
    16e4:	c7 01       	movw	r24, r14
    16e6:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    16ea:	a4 96       	adiw	r28, 0x24	; 36
    16ec:	0f b6       	in	r0, 0x3f	; 63
    16ee:	f8 94       	cli
    16f0:	de bf       	out	0x3e, r29	; 62
    16f2:	0f be       	out	0x3f, r0	; 63
    16f4:	cd bf       	out	0x3d, r28	; 61
    16f6:	df 91       	pop	r29
    16f8:	cf 91       	pop	r28
    16fa:	1f 91       	pop	r17
    16fc:	0f 91       	pop	r16
    16fe:	ff 90       	pop	r15
    1700:	ef 90       	pop	r14
    1702:	df 90       	pop	r13
    1704:	cf 90       	pop	r12
    1706:	bf 90       	pop	r11
    1708:	af 90       	pop	r10
    170a:	08 95       	ret

0000170c <_ZN5Gates3CNOEiiii>:

int * Gates::CNO(int theta1, int phi1, int theta2,int phi2){
    170c:	6f 92       	push	r6
    170e:	7f 92       	push	r7
    1710:	8f 92       	push	r8
    1712:	9f 92       	push	r9
    1714:	af 92       	push	r10
    1716:	bf 92       	push	r11
    1718:	cf 92       	push	r12
    171a:	df 92       	push	r13
    171c:	ef 92       	push	r14
    171e:	ff 92       	push	r15
    1720:	0f 93       	push	r16
    1722:	1f 93       	push	r17
    1724:	cf 93       	push	r28
    1726:	df 93       	push	r29
    1728:	cd b7       	in	r28, 0x3d	; 61
    172a:	de b7       	in	r29, 0x3e	; 62
    172c:	c8 58       	subi	r28, 0x88	; 136
    172e:	d1 09       	sbc	r29, r1
    1730:	0f b6       	in	r0, 0x3f	; 63
    1732:	f8 94       	cli
    1734:	de bf       	out	0x3e, r29	; 62
    1736:	0f be       	out	0x3f, r0	; 63
    1738:	cd bf       	out	0x3d, r28	; 61
    173a:	7c 01       	movw	r14, r24
    173c:	3b 01       	movw	r6, r22
    173e:	5a 01       	movw	r10, r20
    1740:	49 01       	movw	r8, r18
    1742:	68 01       	movw	r12, r16
	Complex cno_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)}};
    1744:	00 e0       	ldi	r16, 0x00	; 0
    1746:	10 e0       	ldi	r17, 0x00	; 0
    1748:	98 01       	movw	r18, r16
    174a:	40 e0       	ldi	r20, 0x00	; 0
    174c:	50 e0       	ldi	r21, 0x00	; 0
    174e:	60 e8       	ldi	r22, 0x80	; 128
    1750:	7f e3       	ldi	r23, 0x3F	; 63
    1752:	ce 01       	movw	r24, r28
    1754:	01 96       	adiw	r24, 0x01	; 1
    1756:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    175a:	00 e0       	ldi	r16, 0x00	; 0
    175c:	10 e0       	ldi	r17, 0x00	; 0
    175e:	98 01       	movw	r18, r16
    1760:	b9 01       	movw	r22, r18
    1762:	a8 01       	movw	r20, r16
    1764:	ce 01       	movw	r24, r28
    1766:	09 96       	adiw	r24, 0x09	; 9
    1768:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    176c:	00 e0       	ldi	r16, 0x00	; 0
    176e:	10 e0       	ldi	r17, 0x00	; 0
    1770:	98 01       	movw	r18, r16
    1772:	b9 01       	movw	r22, r18
    1774:	a8 01       	movw	r20, r16
    1776:	ce 01       	movw	r24, r28
    1778:	41 96       	adiw	r24, 0x11	; 17
    177a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    177e:	00 e0       	ldi	r16, 0x00	; 0
    1780:	10 e0       	ldi	r17, 0x00	; 0
    1782:	98 01       	movw	r18, r16
    1784:	b9 01       	movw	r22, r18
    1786:	a8 01       	movw	r20, r16
    1788:	ce 01       	movw	r24, r28
    178a:	49 96       	adiw	r24, 0x19	; 25
    178c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1790:	00 e0       	ldi	r16, 0x00	; 0
    1792:	10 e0       	ldi	r17, 0x00	; 0
    1794:	98 01       	movw	r18, r16
    1796:	b9 01       	movw	r22, r18
    1798:	a8 01       	movw	r20, r16
    179a:	ce 01       	movw	r24, r28
    179c:	81 96       	adiw	r24, 0x21	; 33
    179e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    17a2:	00 e0       	ldi	r16, 0x00	; 0
    17a4:	10 e0       	ldi	r17, 0x00	; 0
    17a6:	98 01       	movw	r18, r16
    17a8:	40 e0       	ldi	r20, 0x00	; 0
    17aa:	50 e0       	ldi	r21, 0x00	; 0
    17ac:	60 e8       	ldi	r22, 0x80	; 128
    17ae:	7f e3       	ldi	r23, 0x3F	; 63
    17b0:	ce 01       	movw	r24, r28
    17b2:	89 96       	adiw	r24, 0x29	; 41
    17b4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    17b8:	00 e0       	ldi	r16, 0x00	; 0
    17ba:	10 e0       	ldi	r17, 0x00	; 0
    17bc:	98 01       	movw	r18, r16
    17be:	b9 01       	movw	r22, r18
    17c0:	a8 01       	movw	r20, r16
    17c2:	ce 01       	movw	r24, r28
    17c4:	c1 96       	adiw	r24, 0x31	; 49
    17c6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    17ca:	00 e0       	ldi	r16, 0x00	; 0
    17cc:	10 e0       	ldi	r17, 0x00	; 0
    17ce:	98 01       	movw	r18, r16
    17d0:	b9 01       	movw	r22, r18
    17d2:	a8 01       	movw	r20, r16
    17d4:	ce 01       	movw	r24, r28
    17d6:	c9 96       	adiw	r24, 0x39	; 57
    17d8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    17dc:	00 e0       	ldi	r16, 0x00	; 0
    17de:	10 e0       	ldi	r17, 0x00	; 0
    17e0:	98 01       	movw	r18, r16
    17e2:	b9 01       	movw	r22, r18
    17e4:	a8 01       	movw	r20, r16
    17e6:	ce 01       	movw	r24, r28
    17e8:	8f 5b       	subi	r24, 0xBF	; 191
    17ea:	9f 4f       	sbci	r25, 0xFF	; 255
    17ec:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    17f0:	00 e0       	ldi	r16, 0x00	; 0
    17f2:	10 e0       	ldi	r17, 0x00	; 0
    17f4:	98 01       	movw	r18, r16
    17f6:	b9 01       	movw	r22, r18
    17f8:	a8 01       	movw	r20, r16
    17fa:	ce 01       	movw	r24, r28
    17fc:	87 5b       	subi	r24, 0xB7	; 183
    17fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1800:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1804:	00 e0       	ldi	r16, 0x00	; 0
    1806:	10 e0       	ldi	r17, 0x00	; 0
    1808:	98 01       	movw	r18, r16
    180a:	b9 01       	movw	r22, r18
    180c:	a8 01       	movw	r20, r16
    180e:	ce 01       	movw	r24, r28
    1810:	8f 5a       	subi	r24, 0xAF	; 175
    1812:	9f 4f       	sbci	r25, 0xFF	; 255
    1814:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1818:	00 e0       	ldi	r16, 0x00	; 0
    181a:	10 e0       	ldi	r17, 0x00	; 0
    181c:	98 01       	movw	r18, r16
    181e:	40 e0       	ldi	r20, 0x00	; 0
    1820:	50 e0       	ldi	r21, 0x00	; 0
    1822:	60 e8       	ldi	r22, 0x80	; 128
    1824:	7f e3       	ldi	r23, 0x3F	; 63
    1826:	ce 01       	movw	r24, r28
    1828:	87 5a       	subi	r24, 0xA7	; 167
    182a:	9f 4f       	sbci	r25, 0xFF	; 255
    182c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1830:	00 e0       	ldi	r16, 0x00	; 0
    1832:	10 e0       	ldi	r17, 0x00	; 0
    1834:	98 01       	movw	r18, r16
    1836:	b9 01       	movw	r22, r18
    1838:	a8 01       	movw	r20, r16
    183a:	ce 01       	movw	r24, r28
    183c:	8f 59       	subi	r24, 0x9F	; 159
    183e:	9f 4f       	sbci	r25, 0xFF	; 255
    1840:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1844:	00 e0       	ldi	r16, 0x00	; 0
    1846:	10 e0       	ldi	r17, 0x00	; 0
    1848:	98 01       	movw	r18, r16
    184a:	b9 01       	movw	r22, r18
    184c:	a8 01       	movw	r20, r16
    184e:	ce 01       	movw	r24, r28
    1850:	87 59       	subi	r24, 0x97	; 151
    1852:	9f 4f       	sbci	r25, 0xFF	; 255
    1854:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1858:	00 e0       	ldi	r16, 0x00	; 0
    185a:	10 e0       	ldi	r17, 0x00	; 0
    185c:	98 01       	movw	r18, r16
    185e:	40 e0       	ldi	r20, 0x00	; 0
    1860:	50 e0       	ldi	r21, 0x00	; 0
    1862:	60 e8       	ldi	r22, 0x80	; 128
    1864:	7f e3       	ldi	r23, 0x3F	; 63
    1866:	ce 01       	movw	r24, r28
    1868:	8f 58       	subi	r24, 0x8F	; 143
    186a:	9f 4f       	sbci	r25, 0xFF	; 255
    186c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1870:	00 e0       	ldi	r16, 0x00	; 0
    1872:	10 e0       	ldi	r17, 0x00	; 0
    1874:	98 01       	movw	r18, r16
    1876:	b9 01       	movw	r22, r18
    1878:	a8 01       	movw	r20, r16
    187a:	ce 01       	movw	r24, r28
    187c:	87 58       	subi	r24, 0x87	; 135
    187e:	9f 4f       	sbci	r25, 0xFF	; 255
    1880:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};						
    1884:	cb 57       	subi	r28, 0x7B	; 123
    1886:	df 4f       	sbci	r29, 0xFF	; 255
    1888:	79 82       	std	Y+1, r7	; 0x01
    188a:	68 82       	st	Y, r6
    188c:	c5 58       	subi	r28, 0x85	; 133
    188e:	d0 40       	sbci	r29, 0x00	; 0
    1890:	c9 57       	subi	r28, 0x79	; 121
    1892:	df 4f       	sbci	r29, 0xFF	; 255
    1894:	99 82       	std	Y+1, r9	; 0x01
    1896:	88 82       	st	Y, r8
    1898:	c7 58       	subi	r28, 0x87	; 135
    189a:	d0 40       	sbci	r29, 0x00	; 0
    189c:	cf 57       	subi	r28, 0x7F	; 127
    189e:	df 4f       	sbci	r29, 0xFF	; 255
    18a0:	b9 82       	std	Y+1, r11	; 0x01
    18a2:	a8 82       	st	Y, r10
    18a4:	c1 58       	subi	r28, 0x81	; 129
    18a6:	d0 40       	sbci	r29, 0x00	; 0
    18a8:	cd 57       	subi	r28, 0x7D	; 125
    18aa:	df 4f       	sbci	r29, 0xFF	; 255
    18ac:	d9 82       	std	Y+1, r13	; 0x01
    18ae:	c8 82       	st	Y, r12
    18b0:	c3 58       	subi	r28, 0x83	; 131
    18b2:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),cno_matrix),QB_SIZE2);
    18b4:	9e 01       	movw	r18, r28
    18b6:	2f 57       	subi	r18, 0x7F	; 127
    18b8:	3f 4f       	sbci	r19, 0xFF	; 255
    18ba:	ae 01       	movw	r20, r28
    18bc:	4b 57       	subi	r20, 0x7B	; 123
    18be:	5f 4f       	sbci	r21, 0xFF	; 255
    18c0:	62 e0       	ldi	r22, 0x02	; 2
    18c2:	70 e0       	ldi	r23, 0x00	; 0
    18c4:	c7 01       	movw	r24, r14
    18c6:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    18ca:	ae 01       	movw	r20, r28
    18cc:	4f 5f       	subi	r20, 0xFF	; 255
    18ce:	5f 4f       	sbci	r21, 0xFF	; 255
    18d0:	bc 01       	movw	r22, r24
    18d2:	c7 01       	movw	r24, r14
    18d4:	0e 94 bd 07 	call	0xf7a	; 0xf7a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    18d8:	42 e0       	ldi	r20, 0x02	; 2
    18da:	50 e0       	ldi	r21, 0x00	; 0
    18dc:	bc 01       	movw	r22, r24
    18de:	c7 01       	movw	r24, r14
    18e0:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    18e4:	c8 57       	subi	r28, 0x78	; 120
    18e6:	df 4f       	sbci	r29, 0xFF	; 255
    18e8:	0f b6       	in	r0, 0x3f	; 63
    18ea:	f8 94       	cli
    18ec:	de bf       	out	0x3e, r29	; 62
    18ee:	0f be       	out	0x3f, r0	; 63
    18f0:	cd bf       	out	0x3d, r28	; 61
    18f2:	df 91       	pop	r29
    18f4:	cf 91       	pop	r28
    18f6:	1f 91       	pop	r17
    18f8:	0f 91       	pop	r16
    18fa:	ff 90       	pop	r15
    18fc:	ef 90       	pop	r14
    18fe:	df 90       	pop	r13
    1900:	cf 90       	pop	r12
    1902:	bf 90       	pop	r11
    1904:	af 90       	pop	r10
    1906:	9f 90       	pop	r9
    1908:	8f 90       	pop	r8
    190a:	7f 90       	pop	r7
    190c:	6f 90       	pop	r6
    190e:	08 95       	ret

00001910 <_ZN5Gates3CSIEiiii>:
int * Gates::CSI(int theta1, int phi1, int theta2,int phi2){
    1910:	6f 92       	push	r6
    1912:	7f 92       	push	r7
    1914:	8f 92       	push	r8
    1916:	9f 92       	push	r9
    1918:	af 92       	push	r10
    191a:	bf 92       	push	r11
    191c:	cf 92       	push	r12
    191e:	df 92       	push	r13
    1920:	ef 92       	push	r14
    1922:	ff 92       	push	r15
    1924:	0f 93       	push	r16
    1926:	1f 93       	push	r17
    1928:	cf 93       	push	r28
    192a:	df 93       	push	r29
    192c:	cd b7       	in	r28, 0x3d	; 61
    192e:	de b7       	in	r29, 0x3e	; 62
    1930:	c8 58       	subi	r28, 0x88	; 136
    1932:	d1 09       	sbc	r29, r1
    1934:	0f b6       	in	r0, 0x3f	; 63
    1936:	f8 94       	cli
    1938:	de bf       	out	0x3e, r29	; 62
    193a:	0f be       	out	0x3f, r0	; 63
    193c:	cd bf       	out	0x3d, r28	; 61
    193e:	7c 01       	movw	r14, r24
    1940:	3b 01       	movw	r6, r22
    1942:	5a 01       	movw	r10, r20
    1944:	49 01       	movw	r8, r18
    1946:	68 01       	movw	r12, r16
	Complex csi_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(-1,0)}};
    1948:	00 e0       	ldi	r16, 0x00	; 0
    194a:	10 e0       	ldi	r17, 0x00	; 0
    194c:	98 01       	movw	r18, r16
    194e:	40 e0       	ldi	r20, 0x00	; 0
    1950:	50 e0       	ldi	r21, 0x00	; 0
    1952:	60 e8       	ldi	r22, 0x80	; 128
    1954:	7f e3       	ldi	r23, 0x3F	; 63
    1956:	ce 01       	movw	r24, r28
    1958:	01 96       	adiw	r24, 0x01	; 1
    195a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    195e:	00 e0       	ldi	r16, 0x00	; 0
    1960:	10 e0       	ldi	r17, 0x00	; 0
    1962:	98 01       	movw	r18, r16
    1964:	b9 01       	movw	r22, r18
    1966:	a8 01       	movw	r20, r16
    1968:	ce 01       	movw	r24, r28
    196a:	09 96       	adiw	r24, 0x09	; 9
    196c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1970:	00 e0       	ldi	r16, 0x00	; 0
    1972:	10 e0       	ldi	r17, 0x00	; 0
    1974:	98 01       	movw	r18, r16
    1976:	b9 01       	movw	r22, r18
    1978:	a8 01       	movw	r20, r16
    197a:	ce 01       	movw	r24, r28
    197c:	41 96       	adiw	r24, 0x11	; 17
    197e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1982:	00 e0       	ldi	r16, 0x00	; 0
    1984:	10 e0       	ldi	r17, 0x00	; 0
    1986:	98 01       	movw	r18, r16
    1988:	b9 01       	movw	r22, r18
    198a:	a8 01       	movw	r20, r16
    198c:	ce 01       	movw	r24, r28
    198e:	49 96       	adiw	r24, 0x19	; 25
    1990:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1994:	00 e0       	ldi	r16, 0x00	; 0
    1996:	10 e0       	ldi	r17, 0x00	; 0
    1998:	98 01       	movw	r18, r16
    199a:	b9 01       	movw	r22, r18
    199c:	a8 01       	movw	r20, r16
    199e:	ce 01       	movw	r24, r28
    19a0:	81 96       	adiw	r24, 0x21	; 33
    19a2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    19a6:	00 e0       	ldi	r16, 0x00	; 0
    19a8:	10 e0       	ldi	r17, 0x00	; 0
    19aa:	98 01       	movw	r18, r16
    19ac:	40 e0       	ldi	r20, 0x00	; 0
    19ae:	50 e0       	ldi	r21, 0x00	; 0
    19b0:	60 e8       	ldi	r22, 0x80	; 128
    19b2:	7f e3       	ldi	r23, 0x3F	; 63
    19b4:	ce 01       	movw	r24, r28
    19b6:	89 96       	adiw	r24, 0x29	; 41
    19b8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    19bc:	00 e0       	ldi	r16, 0x00	; 0
    19be:	10 e0       	ldi	r17, 0x00	; 0
    19c0:	98 01       	movw	r18, r16
    19c2:	b9 01       	movw	r22, r18
    19c4:	a8 01       	movw	r20, r16
    19c6:	ce 01       	movw	r24, r28
    19c8:	c1 96       	adiw	r24, 0x31	; 49
    19ca:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    19ce:	00 e0       	ldi	r16, 0x00	; 0
    19d0:	10 e0       	ldi	r17, 0x00	; 0
    19d2:	98 01       	movw	r18, r16
    19d4:	b9 01       	movw	r22, r18
    19d6:	a8 01       	movw	r20, r16
    19d8:	ce 01       	movw	r24, r28
    19da:	c9 96       	adiw	r24, 0x39	; 57
    19dc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    19e0:	00 e0       	ldi	r16, 0x00	; 0
    19e2:	10 e0       	ldi	r17, 0x00	; 0
    19e4:	98 01       	movw	r18, r16
    19e6:	b9 01       	movw	r22, r18
    19e8:	a8 01       	movw	r20, r16
    19ea:	ce 01       	movw	r24, r28
    19ec:	8f 5b       	subi	r24, 0xBF	; 191
    19ee:	9f 4f       	sbci	r25, 0xFF	; 255
    19f0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    19f4:	00 e0       	ldi	r16, 0x00	; 0
    19f6:	10 e0       	ldi	r17, 0x00	; 0
    19f8:	98 01       	movw	r18, r16
    19fa:	b9 01       	movw	r22, r18
    19fc:	a8 01       	movw	r20, r16
    19fe:	ce 01       	movw	r24, r28
    1a00:	87 5b       	subi	r24, 0xB7	; 183
    1a02:	9f 4f       	sbci	r25, 0xFF	; 255
    1a04:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a08:	00 e0       	ldi	r16, 0x00	; 0
    1a0a:	10 e0       	ldi	r17, 0x00	; 0
    1a0c:	98 01       	movw	r18, r16
    1a0e:	40 e0       	ldi	r20, 0x00	; 0
    1a10:	50 e0       	ldi	r21, 0x00	; 0
    1a12:	60 e8       	ldi	r22, 0x80	; 128
    1a14:	7f e3       	ldi	r23, 0x3F	; 63
    1a16:	ce 01       	movw	r24, r28
    1a18:	8f 5a       	subi	r24, 0xAF	; 175
    1a1a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a1c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a20:	00 e0       	ldi	r16, 0x00	; 0
    1a22:	10 e0       	ldi	r17, 0x00	; 0
    1a24:	98 01       	movw	r18, r16
    1a26:	b9 01       	movw	r22, r18
    1a28:	a8 01       	movw	r20, r16
    1a2a:	ce 01       	movw	r24, r28
    1a2c:	87 5a       	subi	r24, 0xA7	; 167
    1a2e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a30:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a34:	00 e0       	ldi	r16, 0x00	; 0
    1a36:	10 e0       	ldi	r17, 0x00	; 0
    1a38:	98 01       	movw	r18, r16
    1a3a:	b9 01       	movw	r22, r18
    1a3c:	a8 01       	movw	r20, r16
    1a3e:	ce 01       	movw	r24, r28
    1a40:	8f 59       	subi	r24, 0x9F	; 159
    1a42:	9f 4f       	sbci	r25, 0xFF	; 255
    1a44:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a48:	00 e0       	ldi	r16, 0x00	; 0
    1a4a:	10 e0       	ldi	r17, 0x00	; 0
    1a4c:	98 01       	movw	r18, r16
    1a4e:	b9 01       	movw	r22, r18
    1a50:	a8 01       	movw	r20, r16
    1a52:	ce 01       	movw	r24, r28
    1a54:	87 59       	subi	r24, 0x97	; 151
    1a56:	9f 4f       	sbci	r25, 0xFF	; 255
    1a58:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a5c:	00 e0       	ldi	r16, 0x00	; 0
    1a5e:	10 e0       	ldi	r17, 0x00	; 0
    1a60:	98 01       	movw	r18, r16
    1a62:	b9 01       	movw	r22, r18
    1a64:	a8 01       	movw	r20, r16
    1a66:	ce 01       	movw	r24, r28
    1a68:	8f 58       	subi	r24, 0x8F	; 143
    1a6a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a6c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a70:	00 e0       	ldi	r16, 0x00	; 0
    1a72:	10 e0       	ldi	r17, 0x00	; 0
    1a74:	98 01       	movw	r18, r16
    1a76:	40 e0       	ldi	r20, 0x00	; 0
    1a78:	50 e0       	ldi	r21, 0x00	; 0
    1a7a:	60 e8       	ldi	r22, 0x80	; 128
    1a7c:	7f eb       	ldi	r23, 0xBF	; 191
    1a7e:	ce 01       	movw	r24, r28
    1a80:	87 58       	subi	r24, 0x87	; 135
    1a82:	9f 4f       	sbci	r25, 0xFF	; 255
    1a84:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    1a88:	cb 57       	subi	r28, 0x7B	; 123
    1a8a:	df 4f       	sbci	r29, 0xFF	; 255
    1a8c:	79 82       	std	Y+1, r7	; 0x01
    1a8e:	68 82       	st	Y, r6
    1a90:	c5 58       	subi	r28, 0x85	; 133
    1a92:	d0 40       	sbci	r29, 0x00	; 0
    1a94:	c9 57       	subi	r28, 0x79	; 121
    1a96:	df 4f       	sbci	r29, 0xFF	; 255
    1a98:	99 82       	std	Y+1, r9	; 0x01
    1a9a:	88 82       	st	Y, r8
    1a9c:	c7 58       	subi	r28, 0x87	; 135
    1a9e:	d0 40       	sbci	r29, 0x00	; 0
    1aa0:	cf 57       	subi	r28, 0x7F	; 127
    1aa2:	df 4f       	sbci	r29, 0xFF	; 255
    1aa4:	b9 82       	std	Y+1, r11	; 0x01
    1aa6:	a8 82       	st	Y, r10
    1aa8:	c1 58       	subi	r28, 0x81	; 129
    1aaa:	d0 40       	sbci	r29, 0x00	; 0
    1aac:	cd 57       	subi	r28, 0x7D	; 125
    1aae:	df 4f       	sbci	r29, 0xFF	; 255
    1ab0:	d9 82       	std	Y+1, r13	; 0x01
    1ab2:	c8 82       	st	Y, r12
    1ab4:	c3 58       	subi	r28, 0x83	; 131
    1ab6:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),csi_matrix),QB_SIZE2);
    1ab8:	9e 01       	movw	r18, r28
    1aba:	2f 57       	subi	r18, 0x7F	; 127
    1abc:	3f 4f       	sbci	r19, 0xFF	; 255
    1abe:	ae 01       	movw	r20, r28
    1ac0:	4b 57       	subi	r20, 0x7B	; 123
    1ac2:	5f 4f       	sbci	r21, 0xFF	; 255
    1ac4:	62 e0       	ldi	r22, 0x02	; 2
    1ac6:	70 e0       	ldi	r23, 0x00	; 0
    1ac8:	c7 01       	movw	r24, r14
    1aca:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    1ace:	ae 01       	movw	r20, r28
    1ad0:	4f 5f       	subi	r20, 0xFF	; 255
    1ad2:	5f 4f       	sbci	r21, 0xFF	; 255
    1ad4:	bc 01       	movw	r22, r24
    1ad6:	c7 01       	movw	r24, r14
    1ad8:	0e 94 bd 07 	call	0xf7a	; 0xf7a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    1adc:	42 e0       	ldi	r20, 0x02	; 2
    1ade:	50 e0       	ldi	r21, 0x00	; 0
    1ae0:	bc 01       	movw	r22, r24
    1ae2:	c7 01       	movw	r24, r14
    1ae4:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1ae8:	c8 57       	subi	r28, 0x78	; 120
    1aea:	df 4f       	sbci	r29, 0xFF	; 255
    1aec:	0f b6       	in	r0, 0x3f	; 63
    1aee:	f8 94       	cli
    1af0:	de bf       	out	0x3e, r29	; 62
    1af2:	0f be       	out	0x3f, r0	; 63
    1af4:	cd bf       	out	0x3d, r28	; 61
    1af6:	df 91       	pop	r29
    1af8:	cf 91       	pop	r28
    1afa:	1f 91       	pop	r17
    1afc:	0f 91       	pop	r16
    1afe:	ff 90       	pop	r15
    1b00:	ef 90       	pop	r14
    1b02:	df 90       	pop	r13
    1b04:	cf 90       	pop	r12
    1b06:	bf 90       	pop	r11
    1b08:	af 90       	pop	r10
    1b0a:	9f 90       	pop	r9
    1b0c:	8f 90       	pop	r8
    1b0e:	7f 90       	pop	r7
    1b10:	6f 90       	pop	r6
    1b12:	08 95       	ret

00001b14 <_ZN5Gates3SWAEiiii>:
int * Gates::SWA(int theta1, int phi1, int theta2,int phi2){
    1b14:	6f 92       	push	r6
    1b16:	7f 92       	push	r7
    1b18:	8f 92       	push	r8
    1b1a:	9f 92       	push	r9
    1b1c:	af 92       	push	r10
    1b1e:	bf 92       	push	r11
    1b20:	cf 92       	push	r12
    1b22:	df 92       	push	r13
    1b24:	ef 92       	push	r14
    1b26:	ff 92       	push	r15
    1b28:	0f 93       	push	r16
    1b2a:	1f 93       	push	r17
    1b2c:	cf 93       	push	r28
    1b2e:	df 93       	push	r29
    1b30:	cd b7       	in	r28, 0x3d	; 61
    1b32:	de b7       	in	r29, 0x3e	; 62
    1b34:	c8 58       	subi	r28, 0x88	; 136
    1b36:	d1 09       	sbc	r29, r1
    1b38:	0f b6       	in	r0, 0x3f	; 63
    1b3a:	f8 94       	cli
    1b3c:	de bf       	out	0x3e, r29	; 62
    1b3e:	0f be       	out	0x3f, r0	; 63
    1b40:	cd bf       	out	0x3d, r28	; 61
    1b42:	7c 01       	movw	r14, r24
    1b44:	3b 01       	movw	r6, r22
    1b46:	5a 01       	movw	r10, r20
    1b48:	49 01       	movw	r8, r18
    1b4a:	68 01       	movw	r12, r16
	Complex swa_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
													     {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)}};
    1b4c:	00 e0       	ldi	r16, 0x00	; 0
    1b4e:	10 e0       	ldi	r17, 0x00	; 0
    1b50:	98 01       	movw	r18, r16
    1b52:	40 e0       	ldi	r20, 0x00	; 0
    1b54:	50 e0       	ldi	r21, 0x00	; 0
    1b56:	60 e8       	ldi	r22, 0x80	; 128
    1b58:	7f e3       	ldi	r23, 0x3F	; 63
    1b5a:	ce 01       	movw	r24, r28
    1b5c:	01 96       	adiw	r24, 0x01	; 1
    1b5e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1b62:	00 e0       	ldi	r16, 0x00	; 0
    1b64:	10 e0       	ldi	r17, 0x00	; 0
    1b66:	98 01       	movw	r18, r16
    1b68:	b9 01       	movw	r22, r18
    1b6a:	a8 01       	movw	r20, r16
    1b6c:	ce 01       	movw	r24, r28
    1b6e:	09 96       	adiw	r24, 0x09	; 9
    1b70:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1b74:	00 e0       	ldi	r16, 0x00	; 0
    1b76:	10 e0       	ldi	r17, 0x00	; 0
    1b78:	98 01       	movw	r18, r16
    1b7a:	b9 01       	movw	r22, r18
    1b7c:	a8 01       	movw	r20, r16
    1b7e:	ce 01       	movw	r24, r28
    1b80:	41 96       	adiw	r24, 0x11	; 17
    1b82:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1b86:	00 e0       	ldi	r16, 0x00	; 0
    1b88:	10 e0       	ldi	r17, 0x00	; 0
    1b8a:	98 01       	movw	r18, r16
    1b8c:	b9 01       	movw	r22, r18
    1b8e:	a8 01       	movw	r20, r16
    1b90:	ce 01       	movw	r24, r28
    1b92:	49 96       	adiw	r24, 0x19	; 25
    1b94:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1b98:	00 e0       	ldi	r16, 0x00	; 0
    1b9a:	10 e0       	ldi	r17, 0x00	; 0
    1b9c:	98 01       	movw	r18, r16
    1b9e:	b9 01       	movw	r22, r18
    1ba0:	a8 01       	movw	r20, r16
    1ba2:	ce 01       	movw	r24, r28
    1ba4:	81 96       	adiw	r24, 0x21	; 33
    1ba6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1baa:	00 e0       	ldi	r16, 0x00	; 0
    1bac:	10 e0       	ldi	r17, 0x00	; 0
    1bae:	98 01       	movw	r18, r16
    1bb0:	b9 01       	movw	r22, r18
    1bb2:	a8 01       	movw	r20, r16
    1bb4:	ce 01       	movw	r24, r28
    1bb6:	89 96       	adiw	r24, 0x29	; 41
    1bb8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1bbc:	00 e0       	ldi	r16, 0x00	; 0
    1bbe:	10 e0       	ldi	r17, 0x00	; 0
    1bc0:	98 01       	movw	r18, r16
    1bc2:	40 e0       	ldi	r20, 0x00	; 0
    1bc4:	50 e0       	ldi	r21, 0x00	; 0
    1bc6:	60 e8       	ldi	r22, 0x80	; 128
    1bc8:	7f e3       	ldi	r23, 0x3F	; 63
    1bca:	ce 01       	movw	r24, r28
    1bcc:	c1 96       	adiw	r24, 0x31	; 49
    1bce:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1bd2:	00 e0       	ldi	r16, 0x00	; 0
    1bd4:	10 e0       	ldi	r17, 0x00	; 0
    1bd6:	98 01       	movw	r18, r16
    1bd8:	b9 01       	movw	r22, r18
    1bda:	a8 01       	movw	r20, r16
    1bdc:	ce 01       	movw	r24, r28
    1bde:	c9 96       	adiw	r24, 0x39	; 57
    1be0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1be4:	00 e0       	ldi	r16, 0x00	; 0
    1be6:	10 e0       	ldi	r17, 0x00	; 0
    1be8:	98 01       	movw	r18, r16
    1bea:	b9 01       	movw	r22, r18
    1bec:	a8 01       	movw	r20, r16
    1bee:	ce 01       	movw	r24, r28
    1bf0:	8f 5b       	subi	r24, 0xBF	; 191
    1bf2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bf4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1bf8:	00 e0       	ldi	r16, 0x00	; 0
    1bfa:	10 e0       	ldi	r17, 0x00	; 0
    1bfc:	98 01       	movw	r18, r16
    1bfe:	40 e0       	ldi	r20, 0x00	; 0
    1c00:	50 e0       	ldi	r21, 0x00	; 0
    1c02:	60 e8       	ldi	r22, 0x80	; 128
    1c04:	7f e3       	ldi	r23, 0x3F	; 63
    1c06:	ce 01       	movw	r24, r28
    1c08:	87 5b       	subi	r24, 0xB7	; 183
    1c0a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c0c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c10:	00 e0       	ldi	r16, 0x00	; 0
    1c12:	10 e0       	ldi	r17, 0x00	; 0
    1c14:	98 01       	movw	r18, r16
    1c16:	b9 01       	movw	r22, r18
    1c18:	a8 01       	movw	r20, r16
    1c1a:	ce 01       	movw	r24, r28
    1c1c:	8f 5a       	subi	r24, 0xAF	; 175
    1c1e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c20:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c24:	00 e0       	ldi	r16, 0x00	; 0
    1c26:	10 e0       	ldi	r17, 0x00	; 0
    1c28:	98 01       	movw	r18, r16
    1c2a:	b9 01       	movw	r22, r18
    1c2c:	a8 01       	movw	r20, r16
    1c2e:	ce 01       	movw	r24, r28
    1c30:	87 5a       	subi	r24, 0xA7	; 167
    1c32:	9f 4f       	sbci	r25, 0xFF	; 255
    1c34:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c38:	00 e0       	ldi	r16, 0x00	; 0
    1c3a:	10 e0       	ldi	r17, 0x00	; 0
    1c3c:	98 01       	movw	r18, r16
    1c3e:	b9 01       	movw	r22, r18
    1c40:	a8 01       	movw	r20, r16
    1c42:	ce 01       	movw	r24, r28
    1c44:	8f 59       	subi	r24, 0x9F	; 159
    1c46:	9f 4f       	sbci	r25, 0xFF	; 255
    1c48:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c4c:	00 e0       	ldi	r16, 0x00	; 0
    1c4e:	10 e0       	ldi	r17, 0x00	; 0
    1c50:	98 01       	movw	r18, r16
    1c52:	b9 01       	movw	r22, r18
    1c54:	a8 01       	movw	r20, r16
    1c56:	ce 01       	movw	r24, r28
    1c58:	87 59       	subi	r24, 0x97	; 151
    1c5a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c5c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c60:	00 e0       	ldi	r16, 0x00	; 0
    1c62:	10 e0       	ldi	r17, 0x00	; 0
    1c64:	98 01       	movw	r18, r16
    1c66:	b9 01       	movw	r22, r18
    1c68:	a8 01       	movw	r20, r16
    1c6a:	ce 01       	movw	r24, r28
    1c6c:	8f 58       	subi	r24, 0x8F	; 143
    1c6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c70:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c74:	00 e0       	ldi	r16, 0x00	; 0
    1c76:	10 e0       	ldi	r17, 0x00	; 0
    1c78:	98 01       	movw	r18, r16
    1c7a:	40 e0       	ldi	r20, 0x00	; 0
    1c7c:	50 e0       	ldi	r21, 0x00	; 0
    1c7e:	60 e8       	ldi	r22, 0x80	; 128
    1c80:	7f e3       	ldi	r23, 0x3F	; 63
    1c82:	ce 01       	movw	r24, r28
    1c84:	87 58       	subi	r24, 0x87	; 135
    1c86:	9f 4f       	sbci	r25, 0xFF	; 255
    1c88:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    1c8c:	cb 57       	subi	r28, 0x7B	; 123
    1c8e:	df 4f       	sbci	r29, 0xFF	; 255
    1c90:	79 82       	std	Y+1, r7	; 0x01
    1c92:	68 82       	st	Y, r6
    1c94:	c5 58       	subi	r28, 0x85	; 133
    1c96:	d0 40       	sbci	r29, 0x00	; 0
    1c98:	c9 57       	subi	r28, 0x79	; 121
    1c9a:	df 4f       	sbci	r29, 0xFF	; 255
    1c9c:	99 82       	std	Y+1, r9	; 0x01
    1c9e:	88 82       	st	Y, r8
    1ca0:	c7 58       	subi	r28, 0x87	; 135
    1ca2:	d0 40       	sbci	r29, 0x00	; 0
    1ca4:	cf 57       	subi	r28, 0x7F	; 127
    1ca6:	df 4f       	sbci	r29, 0xFF	; 255
    1ca8:	b9 82       	std	Y+1, r11	; 0x01
    1caa:	a8 82       	st	Y, r10
    1cac:	c1 58       	subi	r28, 0x81	; 129
    1cae:	d0 40       	sbci	r29, 0x00	; 0
    1cb0:	cd 57       	subi	r28, 0x7D	; 125
    1cb2:	df 4f       	sbci	r29, 0xFF	; 255
    1cb4:	d9 82       	std	Y+1, r13	; 0x01
    1cb6:	c8 82       	st	Y, r12
    1cb8:	c3 58       	subi	r28, 0x83	; 131
    1cba:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),swa_matrix),QB_SIZE2);	
    1cbc:	9e 01       	movw	r18, r28
    1cbe:	2f 57       	subi	r18, 0x7F	; 127
    1cc0:	3f 4f       	sbci	r19, 0xFF	; 255
    1cc2:	ae 01       	movw	r20, r28
    1cc4:	4b 57       	subi	r20, 0x7B	; 123
    1cc6:	5f 4f       	sbci	r21, 0xFF	; 255
    1cc8:	62 e0       	ldi	r22, 0x02	; 2
    1cca:	70 e0       	ldi	r23, 0x00	; 0
    1ccc:	c7 01       	movw	r24, r14
    1cce:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    1cd2:	ae 01       	movw	r20, r28
    1cd4:	4f 5f       	subi	r20, 0xFF	; 255
    1cd6:	5f 4f       	sbci	r21, 0xFF	; 255
    1cd8:	bc 01       	movw	r22, r24
    1cda:	c7 01       	movw	r24, r14
    1cdc:	0e 94 bd 07 	call	0xf7a	; 0xf7a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    1ce0:	42 e0       	ldi	r20, 0x02	; 2
    1ce2:	50 e0       	ldi	r21, 0x00	; 0
    1ce4:	bc 01       	movw	r22, r24
    1ce6:	c7 01       	movw	r24, r14
    1ce8:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1cec:	c8 57       	subi	r28, 0x78	; 120
    1cee:	df 4f       	sbci	r29, 0xFF	; 255
    1cf0:	0f b6       	in	r0, 0x3f	; 63
    1cf2:	f8 94       	cli
    1cf4:	de bf       	out	0x3e, r29	; 62
    1cf6:	0f be       	out	0x3f, r0	; 63
    1cf8:	cd bf       	out	0x3d, r28	; 61
    1cfa:	df 91       	pop	r29
    1cfc:	cf 91       	pop	r28
    1cfe:	1f 91       	pop	r17
    1d00:	0f 91       	pop	r16
    1d02:	ff 90       	pop	r15
    1d04:	ef 90       	pop	r14
    1d06:	df 90       	pop	r13
    1d08:	cf 90       	pop	r12
    1d0a:	bf 90       	pop	r11
    1d0c:	af 90       	pop	r10
    1d0e:	9f 90       	pop	r9
    1d10:	8f 90       	pop	r8
    1d12:	7f 90       	pop	r7
    1d14:	6f 90       	pop	r6
    1d16:	08 95       	ret

00001d18 <_ZN5Gates3INCEiiii>:
int * Gates::INC(int theta1, int phi1, int theta2,int phi2){
    1d18:	6f 92       	push	r6
    1d1a:	7f 92       	push	r7
    1d1c:	8f 92       	push	r8
    1d1e:	9f 92       	push	r9
    1d20:	af 92       	push	r10
    1d22:	bf 92       	push	r11
    1d24:	cf 92       	push	r12
    1d26:	df 92       	push	r13
    1d28:	ef 92       	push	r14
    1d2a:	ff 92       	push	r15
    1d2c:	0f 93       	push	r16
    1d2e:	1f 93       	push	r17
    1d30:	cf 93       	push	r28
    1d32:	df 93       	push	r29
    1d34:	cd b7       	in	r28, 0x3d	; 61
    1d36:	de b7       	in	r29, 0x3e	; 62
    1d38:	c8 58       	subi	r28, 0x88	; 136
    1d3a:	d1 09       	sbc	r29, r1
    1d3c:	0f b6       	in	r0, 0x3f	; 63
    1d3e:	f8 94       	cli
    1d40:	de bf       	out	0x3e, r29	; 62
    1d42:	0f be       	out	0x3f, r0	; 63
    1d44:	cd bf       	out	0x3d, r28	; 61
    1d46:	7c 01       	movw	r14, r24
    1d48:	3b 01       	movw	r6, r22
    1d4a:	5a 01       	movw	r10, r20
    1d4c:	49 01       	movw	r8, r18
    1d4e:	68 01       	movw	r12, r16
	Complex inc_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
													     {Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)}};
    1d50:	00 e0       	ldi	r16, 0x00	; 0
    1d52:	10 e0       	ldi	r17, 0x00	; 0
    1d54:	98 01       	movw	r18, r16
    1d56:	b9 01       	movw	r22, r18
    1d58:	a8 01       	movw	r20, r16
    1d5a:	ce 01       	movw	r24, r28
    1d5c:	01 96       	adiw	r24, 0x01	; 1
    1d5e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1d62:	00 e0       	ldi	r16, 0x00	; 0
    1d64:	10 e0       	ldi	r17, 0x00	; 0
    1d66:	98 01       	movw	r18, r16
    1d68:	40 e0       	ldi	r20, 0x00	; 0
    1d6a:	50 e0       	ldi	r21, 0x00	; 0
    1d6c:	60 e8       	ldi	r22, 0x80	; 128
    1d6e:	7f e3       	ldi	r23, 0x3F	; 63
    1d70:	ce 01       	movw	r24, r28
    1d72:	09 96       	adiw	r24, 0x09	; 9
    1d74:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1d78:	00 e0       	ldi	r16, 0x00	; 0
    1d7a:	10 e0       	ldi	r17, 0x00	; 0
    1d7c:	98 01       	movw	r18, r16
    1d7e:	b9 01       	movw	r22, r18
    1d80:	a8 01       	movw	r20, r16
    1d82:	ce 01       	movw	r24, r28
    1d84:	41 96       	adiw	r24, 0x11	; 17
    1d86:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1d8a:	00 e0       	ldi	r16, 0x00	; 0
    1d8c:	10 e0       	ldi	r17, 0x00	; 0
    1d8e:	98 01       	movw	r18, r16
    1d90:	b9 01       	movw	r22, r18
    1d92:	a8 01       	movw	r20, r16
    1d94:	ce 01       	movw	r24, r28
    1d96:	49 96       	adiw	r24, 0x19	; 25
    1d98:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1d9c:	00 e0       	ldi	r16, 0x00	; 0
    1d9e:	10 e0       	ldi	r17, 0x00	; 0
    1da0:	98 01       	movw	r18, r16
    1da2:	b9 01       	movw	r22, r18
    1da4:	a8 01       	movw	r20, r16
    1da6:	ce 01       	movw	r24, r28
    1da8:	81 96       	adiw	r24, 0x21	; 33
    1daa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1dae:	00 e0       	ldi	r16, 0x00	; 0
    1db0:	10 e0       	ldi	r17, 0x00	; 0
    1db2:	98 01       	movw	r18, r16
    1db4:	b9 01       	movw	r22, r18
    1db6:	a8 01       	movw	r20, r16
    1db8:	ce 01       	movw	r24, r28
    1dba:	89 96       	adiw	r24, 0x29	; 41
    1dbc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1dc0:	00 e0       	ldi	r16, 0x00	; 0
    1dc2:	10 e0       	ldi	r17, 0x00	; 0
    1dc4:	98 01       	movw	r18, r16
    1dc6:	40 e0       	ldi	r20, 0x00	; 0
    1dc8:	50 e0       	ldi	r21, 0x00	; 0
    1dca:	60 e8       	ldi	r22, 0x80	; 128
    1dcc:	7f e3       	ldi	r23, 0x3F	; 63
    1dce:	ce 01       	movw	r24, r28
    1dd0:	c1 96       	adiw	r24, 0x31	; 49
    1dd2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1dd6:	00 e0       	ldi	r16, 0x00	; 0
    1dd8:	10 e0       	ldi	r17, 0x00	; 0
    1dda:	98 01       	movw	r18, r16
    1ddc:	b9 01       	movw	r22, r18
    1dde:	a8 01       	movw	r20, r16
    1de0:	ce 01       	movw	r24, r28
    1de2:	c9 96       	adiw	r24, 0x39	; 57
    1de4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1de8:	00 e0       	ldi	r16, 0x00	; 0
    1dea:	10 e0       	ldi	r17, 0x00	; 0
    1dec:	98 01       	movw	r18, r16
    1dee:	b9 01       	movw	r22, r18
    1df0:	a8 01       	movw	r20, r16
    1df2:	ce 01       	movw	r24, r28
    1df4:	8f 5b       	subi	r24, 0xBF	; 191
    1df6:	9f 4f       	sbci	r25, 0xFF	; 255
    1df8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1dfc:	00 e0       	ldi	r16, 0x00	; 0
    1dfe:	10 e0       	ldi	r17, 0x00	; 0
    1e00:	98 01       	movw	r18, r16
    1e02:	b9 01       	movw	r22, r18
    1e04:	a8 01       	movw	r20, r16
    1e06:	ce 01       	movw	r24, r28
    1e08:	87 5b       	subi	r24, 0xB7	; 183
    1e0a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e0c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e10:	00 e0       	ldi	r16, 0x00	; 0
    1e12:	10 e0       	ldi	r17, 0x00	; 0
    1e14:	98 01       	movw	r18, r16
    1e16:	b9 01       	movw	r22, r18
    1e18:	a8 01       	movw	r20, r16
    1e1a:	ce 01       	movw	r24, r28
    1e1c:	8f 5a       	subi	r24, 0xAF	; 175
    1e1e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e20:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e24:	00 e0       	ldi	r16, 0x00	; 0
    1e26:	10 e0       	ldi	r17, 0x00	; 0
    1e28:	98 01       	movw	r18, r16
    1e2a:	40 e0       	ldi	r20, 0x00	; 0
    1e2c:	50 e0       	ldi	r21, 0x00	; 0
    1e2e:	60 e8       	ldi	r22, 0x80	; 128
    1e30:	7f e3       	ldi	r23, 0x3F	; 63
    1e32:	ce 01       	movw	r24, r28
    1e34:	87 5a       	subi	r24, 0xA7	; 167
    1e36:	9f 4f       	sbci	r25, 0xFF	; 255
    1e38:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e3c:	00 e0       	ldi	r16, 0x00	; 0
    1e3e:	10 e0       	ldi	r17, 0x00	; 0
    1e40:	98 01       	movw	r18, r16
    1e42:	40 e0       	ldi	r20, 0x00	; 0
    1e44:	50 e0       	ldi	r21, 0x00	; 0
    1e46:	60 e8       	ldi	r22, 0x80	; 128
    1e48:	7f e3       	ldi	r23, 0x3F	; 63
    1e4a:	ce 01       	movw	r24, r28
    1e4c:	8f 59       	subi	r24, 0x9F	; 159
    1e4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e50:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e54:	00 e0       	ldi	r16, 0x00	; 0
    1e56:	10 e0       	ldi	r17, 0x00	; 0
    1e58:	98 01       	movw	r18, r16
    1e5a:	b9 01       	movw	r22, r18
    1e5c:	a8 01       	movw	r20, r16
    1e5e:	ce 01       	movw	r24, r28
    1e60:	87 59       	subi	r24, 0x97	; 151
    1e62:	9f 4f       	sbci	r25, 0xFF	; 255
    1e64:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e68:	00 e0       	ldi	r16, 0x00	; 0
    1e6a:	10 e0       	ldi	r17, 0x00	; 0
    1e6c:	98 01       	movw	r18, r16
    1e6e:	b9 01       	movw	r22, r18
    1e70:	a8 01       	movw	r20, r16
    1e72:	ce 01       	movw	r24, r28
    1e74:	8f 58       	subi	r24, 0x8F	; 143
    1e76:	9f 4f       	sbci	r25, 0xFF	; 255
    1e78:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e7c:	00 e0       	ldi	r16, 0x00	; 0
    1e7e:	10 e0       	ldi	r17, 0x00	; 0
    1e80:	98 01       	movw	r18, r16
    1e82:	b9 01       	movw	r22, r18
    1e84:	a8 01       	movw	r20, r16
    1e86:	ce 01       	movw	r24, r28
    1e88:	87 58       	subi	r24, 0x87	; 135
    1e8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e8c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    1e90:	cb 57       	subi	r28, 0x7B	; 123
    1e92:	df 4f       	sbci	r29, 0xFF	; 255
    1e94:	79 82       	std	Y+1, r7	; 0x01
    1e96:	68 82       	st	Y, r6
    1e98:	c5 58       	subi	r28, 0x85	; 133
    1e9a:	d0 40       	sbci	r29, 0x00	; 0
    1e9c:	c9 57       	subi	r28, 0x79	; 121
    1e9e:	df 4f       	sbci	r29, 0xFF	; 255
    1ea0:	99 82       	std	Y+1, r9	; 0x01
    1ea2:	88 82       	st	Y, r8
    1ea4:	c7 58       	subi	r28, 0x87	; 135
    1ea6:	d0 40       	sbci	r29, 0x00	; 0
    1ea8:	cf 57       	subi	r28, 0x7F	; 127
    1eaa:	df 4f       	sbci	r29, 0xFF	; 255
    1eac:	b9 82       	std	Y+1, r11	; 0x01
    1eae:	a8 82       	st	Y, r10
    1eb0:	c1 58       	subi	r28, 0x81	; 129
    1eb2:	d0 40       	sbci	r29, 0x00	; 0
    1eb4:	cd 57       	subi	r28, 0x7D	; 125
    1eb6:	df 4f       	sbci	r29, 0xFF	; 255
    1eb8:	d9 82       	std	Y+1, r13	; 0x01
    1eba:	c8 82       	st	Y, r12
    1ebc:	c3 58       	subi	r28, 0x83	; 131
    1ebe:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),inc_matrix),QB_SIZE2);
    1ec0:	9e 01       	movw	r18, r28
    1ec2:	2f 57       	subi	r18, 0x7F	; 127
    1ec4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ec6:	ae 01       	movw	r20, r28
    1ec8:	4b 57       	subi	r20, 0x7B	; 123
    1eca:	5f 4f       	sbci	r21, 0xFF	; 255
    1ecc:	62 e0       	ldi	r22, 0x02	; 2
    1ece:	70 e0       	ldi	r23, 0x00	; 0
    1ed0:	c7 01       	movw	r24, r14
    1ed2:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    1ed6:	ae 01       	movw	r20, r28
    1ed8:	4f 5f       	subi	r20, 0xFF	; 255
    1eda:	5f 4f       	sbci	r21, 0xFF	; 255
    1edc:	bc 01       	movw	r22, r24
    1ede:	c7 01       	movw	r24, r14
    1ee0:	0e 94 bd 07 	call	0xf7a	; 0xf7a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    1ee4:	42 e0       	ldi	r20, 0x02	; 2
    1ee6:	50 e0       	ldi	r21, 0x00	; 0
    1ee8:	bc 01       	movw	r22, r24
    1eea:	c7 01       	movw	r24, r14
    1eec:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1ef0:	c8 57       	subi	r28, 0x78	; 120
    1ef2:	df 4f       	sbci	r29, 0xFF	; 255
    1ef4:	0f b6       	in	r0, 0x3f	; 63
    1ef6:	f8 94       	cli
    1ef8:	de bf       	out	0x3e, r29	; 62
    1efa:	0f be       	out	0x3f, r0	; 63
    1efc:	cd bf       	out	0x3d, r28	; 61
    1efe:	df 91       	pop	r29
    1f00:	cf 91       	pop	r28
    1f02:	1f 91       	pop	r17
    1f04:	0f 91       	pop	r16
    1f06:	ff 90       	pop	r15
    1f08:	ef 90       	pop	r14
    1f0a:	df 90       	pop	r13
    1f0c:	cf 90       	pop	r12
    1f0e:	bf 90       	pop	r11
    1f10:	af 90       	pop	r10
    1f12:	9f 90       	pop	r9
    1f14:	8f 90       	pop	r8
    1f16:	7f 90       	pop	r7
    1f18:	6f 90       	pop	r6
    1f1a:	08 95       	ret

00001f1c <_ZN5Gates3DECEiiii>:
int * Gates::DEC(int theta1, int phi1, int theta2,int phi2){
    1f1c:	6f 92       	push	r6
    1f1e:	7f 92       	push	r7
    1f20:	8f 92       	push	r8
    1f22:	9f 92       	push	r9
    1f24:	af 92       	push	r10
    1f26:	bf 92       	push	r11
    1f28:	cf 92       	push	r12
    1f2a:	df 92       	push	r13
    1f2c:	ef 92       	push	r14
    1f2e:	ff 92       	push	r15
    1f30:	0f 93       	push	r16
    1f32:	1f 93       	push	r17
    1f34:	cf 93       	push	r28
    1f36:	df 93       	push	r29
    1f38:	cd b7       	in	r28, 0x3d	; 61
    1f3a:	de b7       	in	r29, 0x3e	; 62
    1f3c:	c8 58       	subi	r28, 0x88	; 136
    1f3e:	d1 09       	sbc	r29, r1
    1f40:	0f b6       	in	r0, 0x3f	; 63
    1f42:	f8 94       	cli
    1f44:	de bf       	out	0x3e, r29	; 62
    1f46:	0f be       	out	0x3f, r0	; 63
    1f48:	cd bf       	out	0x3d, r28	; 61
    1f4a:	7c 01       	movw	r14, r24
    1f4c:	3b 01       	movw	r6, r22
    1f4e:	5a 01       	movw	r10, r20
    1f50:	49 01       	movw	r8, r18
    1f52:	68 01       	movw	r12, r16
	Complex dec_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
													     {Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)}};
    1f54:	00 e0       	ldi	r16, 0x00	; 0
    1f56:	10 e0       	ldi	r17, 0x00	; 0
    1f58:	98 01       	movw	r18, r16
    1f5a:	b9 01       	movw	r22, r18
    1f5c:	a8 01       	movw	r20, r16
    1f5e:	ce 01       	movw	r24, r28
    1f60:	01 96       	adiw	r24, 0x01	; 1
    1f62:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1f66:	00 e0       	ldi	r16, 0x00	; 0
    1f68:	10 e0       	ldi	r17, 0x00	; 0
    1f6a:	98 01       	movw	r18, r16
    1f6c:	b9 01       	movw	r22, r18
    1f6e:	a8 01       	movw	r20, r16
    1f70:	ce 01       	movw	r24, r28
    1f72:	09 96       	adiw	r24, 0x09	; 9
    1f74:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1f78:	00 e0       	ldi	r16, 0x00	; 0
    1f7a:	10 e0       	ldi	r17, 0x00	; 0
    1f7c:	98 01       	movw	r18, r16
    1f7e:	b9 01       	movw	r22, r18
    1f80:	a8 01       	movw	r20, r16
    1f82:	ce 01       	movw	r24, r28
    1f84:	41 96       	adiw	r24, 0x11	; 17
    1f86:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1f8a:	00 e0       	ldi	r16, 0x00	; 0
    1f8c:	10 e0       	ldi	r17, 0x00	; 0
    1f8e:	98 01       	movw	r18, r16
    1f90:	40 e0       	ldi	r20, 0x00	; 0
    1f92:	50 e0       	ldi	r21, 0x00	; 0
    1f94:	60 e8       	ldi	r22, 0x80	; 128
    1f96:	7f e3       	ldi	r23, 0x3F	; 63
    1f98:	ce 01       	movw	r24, r28
    1f9a:	49 96       	adiw	r24, 0x19	; 25
    1f9c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1fa0:	00 e0       	ldi	r16, 0x00	; 0
    1fa2:	10 e0       	ldi	r17, 0x00	; 0
    1fa4:	98 01       	movw	r18, r16
    1fa6:	40 e0       	ldi	r20, 0x00	; 0
    1fa8:	50 e0       	ldi	r21, 0x00	; 0
    1faa:	60 e8       	ldi	r22, 0x80	; 128
    1fac:	7f e3       	ldi	r23, 0x3F	; 63
    1fae:	ce 01       	movw	r24, r28
    1fb0:	81 96       	adiw	r24, 0x21	; 33
    1fb2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1fb6:	00 e0       	ldi	r16, 0x00	; 0
    1fb8:	10 e0       	ldi	r17, 0x00	; 0
    1fba:	98 01       	movw	r18, r16
    1fbc:	b9 01       	movw	r22, r18
    1fbe:	a8 01       	movw	r20, r16
    1fc0:	ce 01       	movw	r24, r28
    1fc2:	89 96       	adiw	r24, 0x29	; 41
    1fc4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1fc8:	00 e0       	ldi	r16, 0x00	; 0
    1fca:	10 e0       	ldi	r17, 0x00	; 0
    1fcc:	98 01       	movw	r18, r16
    1fce:	b9 01       	movw	r22, r18
    1fd0:	a8 01       	movw	r20, r16
    1fd2:	ce 01       	movw	r24, r28
    1fd4:	c1 96       	adiw	r24, 0x31	; 49
    1fd6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1fda:	00 e0       	ldi	r16, 0x00	; 0
    1fdc:	10 e0       	ldi	r17, 0x00	; 0
    1fde:	98 01       	movw	r18, r16
    1fe0:	b9 01       	movw	r22, r18
    1fe2:	a8 01       	movw	r20, r16
    1fe4:	ce 01       	movw	r24, r28
    1fe6:	c9 96       	adiw	r24, 0x39	; 57
    1fe8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1fec:	00 e0       	ldi	r16, 0x00	; 0
    1fee:	10 e0       	ldi	r17, 0x00	; 0
    1ff0:	98 01       	movw	r18, r16
    1ff2:	b9 01       	movw	r22, r18
    1ff4:	a8 01       	movw	r20, r16
    1ff6:	ce 01       	movw	r24, r28
    1ff8:	8f 5b       	subi	r24, 0xBF	; 191
    1ffa:	9f 4f       	sbci	r25, 0xFF	; 255
    1ffc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2000:	00 e0       	ldi	r16, 0x00	; 0
    2002:	10 e0       	ldi	r17, 0x00	; 0
    2004:	98 01       	movw	r18, r16
    2006:	40 e0       	ldi	r20, 0x00	; 0
    2008:	50 e0       	ldi	r21, 0x00	; 0
    200a:	60 e8       	ldi	r22, 0x80	; 128
    200c:	7f e3       	ldi	r23, 0x3F	; 63
    200e:	ce 01       	movw	r24, r28
    2010:	87 5b       	subi	r24, 0xB7	; 183
    2012:	9f 4f       	sbci	r25, 0xFF	; 255
    2014:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2018:	00 e0       	ldi	r16, 0x00	; 0
    201a:	10 e0       	ldi	r17, 0x00	; 0
    201c:	98 01       	movw	r18, r16
    201e:	b9 01       	movw	r22, r18
    2020:	a8 01       	movw	r20, r16
    2022:	ce 01       	movw	r24, r28
    2024:	8f 5a       	subi	r24, 0xAF	; 175
    2026:	9f 4f       	sbci	r25, 0xFF	; 255
    2028:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    202c:	00 e0       	ldi	r16, 0x00	; 0
    202e:	10 e0       	ldi	r17, 0x00	; 0
    2030:	98 01       	movw	r18, r16
    2032:	b9 01       	movw	r22, r18
    2034:	a8 01       	movw	r20, r16
    2036:	ce 01       	movw	r24, r28
    2038:	87 5a       	subi	r24, 0xA7	; 167
    203a:	9f 4f       	sbci	r25, 0xFF	; 255
    203c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2040:	00 e0       	ldi	r16, 0x00	; 0
    2042:	10 e0       	ldi	r17, 0x00	; 0
    2044:	98 01       	movw	r18, r16
    2046:	b9 01       	movw	r22, r18
    2048:	a8 01       	movw	r20, r16
    204a:	ce 01       	movw	r24, r28
    204c:	8f 59       	subi	r24, 0x9F	; 159
    204e:	9f 4f       	sbci	r25, 0xFF	; 255
    2050:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2054:	00 e0       	ldi	r16, 0x00	; 0
    2056:	10 e0       	ldi	r17, 0x00	; 0
    2058:	98 01       	movw	r18, r16
    205a:	b9 01       	movw	r22, r18
    205c:	a8 01       	movw	r20, r16
    205e:	ce 01       	movw	r24, r28
    2060:	87 59       	subi	r24, 0x97	; 151
    2062:	9f 4f       	sbci	r25, 0xFF	; 255
    2064:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2068:	00 e0       	ldi	r16, 0x00	; 0
    206a:	10 e0       	ldi	r17, 0x00	; 0
    206c:	98 01       	movw	r18, r16
    206e:	40 e0       	ldi	r20, 0x00	; 0
    2070:	50 e0       	ldi	r21, 0x00	; 0
    2072:	60 e8       	ldi	r22, 0x80	; 128
    2074:	7f e3       	ldi	r23, 0x3F	; 63
    2076:	ce 01       	movw	r24, r28
    2078:	8f 58       	subi	r24, 0x8F	; 143
    207a:	9f 4f       	sbci	r25, 0xFF	; 255
    207c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2080:	00 e0       	ldi	r16, 0x00	; 0
    2082:	10 e0       	ldi	r17, 0x00	; 0
    2084:	98 01       	movw	r18, r16
    2086:	b9 01       	movw	r22, r18
    2088:	a8 01       	movw	r20, r16
    208a:	ce 01       	movw	r24, r28
    208c:	87 58       	subi	r24, 0x87	; 135
    208e:	9f 4f       	sbci	r25, 0xFF	; 255
    2090:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    2094:	cb 57       	subi	r28, 0x7B	; 123
    2096:	df 4f       	sbci	r29, 0xFF	; 255
    2098:	79 82       	std	Y+1, r7	; 0x01
    209a:	68 82       	st	Y, r6
    209c:	c5 58       	subi	r28, 0x85	; 133
    209e:	d0 40       	sbci	r29, 0x00	; 0
    20a0:	c9 57       	subi	r28, 0x79	; 121
    20a2:	df 4f       	sbci	r29, 0xFF	; 255
    20a4:	99 82       	std	Y+1, r9	; 0x01
    20a6:	88 82       	st	Y, r8
    20a8:	c7 58       	subi	r28, 0x87	; 135
    20aa:	d0 40       	sbci	r29, 0x00	; 0
    20ac:	cf 57       	subi	r28, 0x7F	; 127
    20ae:	df 4f       	sbci	r29, 0xFF	; 255
    20b0:	b9 82       	std	Y+1, r11	; 0x01
    20b2:	a8 82       	st	Y, r10
    20b4:	c1 58       	subi	r28, 0x81	; 129
    20b6:	d0 40       	sbci	r29, 0x00	; 0
    20b8:	cd 57       	subi	r28, 0x7D	; 125
    20ba:	df 4f       	sbci	r29, 0xFF	; 255
    20bc:	d9 82       	std	Y+1, r13	; 0x01
    20be:	c8 82       	st	Y, r12
    20c0:	c3 58       	subi	r28, 0x83	; 131
    20c2:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),dec_matrix),QB_SIZE2);
    20c4:	9e 01       	movw	r18, r28
    20c6:	2f 57       	subi	r18, 0x7F	; 127
    20c8:	3f 4f       	sbci	r19, 0xFF	; 255
    20ca:	ae 01       	movw	r20, r28
    20cc:	4b 57       	subi	r20, 0x7B	; 123
    20ce:	5f 4f       	sbci	r21, 0xFF	; 255
    20d0:	62 e0       	ldi	r22, 0x02	; 2
    20d2:	70 e0       	ldi	r23, 0x00	; 0
    20d4:	c7 01       	movw	r24, r14
    20d6:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    20da:	ae 01       	movw	r20, r28
    20dc:	4f 5f       	subi	r20, 0xFF	; 255
    20de:	5f 4f       	sbci	r21, 0xFF	; 255
    20e0:	bc 01       	movw	r22, r24
    20e2:	c7 01       	movw	r24, r14
    20e4:	0e 94 bd 07 	call	0xf7a	; 0xf7a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    20e8:	42 e0       	ldi	r20, 0x02	; 2
    20ea:	50 e0       	ldi	r21, 0x00	; 0
    20ec:	bc 01       	movw	r22, r24
    20ee:	c7 01       	movw	r24, r14
    20f0:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    20f4:	c8 57       	subi	r28, 0x78	; 120
    20f6:	df 4f       	sbci	r29, 0xFF	; 255
    20f8:	0f b6       	in	r0, 0x3f	; 63
    20fa:	f8 94       	cli
    20fc:	de bf       	out	0x3e, r29	; 62
    20fe:	0f be       	out	0x3f, r0	; 63
    2100:	cd bf       	out	0x3d, r28	; 61
    2102:	df 91       	pop	r29
    2104:	cf 91       	pop	r28
    2106:	1f 91       	pop	r17
    2108:	0f 91       	pop	r16
    210a:	ff 90       	pop	r15
    210c:	ef 90       	pop	r14
    210e:	df 90       	pop	r13
    2110:	cf 90       	pop	r12
    2112:	bf 90       	pop	r11
    2114:	af 90       	pop	r10
    2116:	9f 90       	pop	r9
    2118:	8f 90       	pop	r8
    211a:	7f 90       	pop	r7
    211c:	6f 90       	pop	r6
    211e:	08 95       	ret

00002120 <_ZN5Gates3SWQEiiii>:
int * Gates::SWQ(int theta1, int phi1, int theta2,int phi2){
    2120:	6f 92       	push	r6
    2122:	7f 92       	push	r7
    2124:	8f 92       	push	r8
    2126:	9f 92       	push	r9
    2128:	af 92       	push	r10
    212a:	bf 92       	push	r11
    212c:	cf 92       	push	r12
    212e:	df 92       	push	r13
    2130:	ef 92       	push	r14
    2132:	ff 92       	push	r15
    2134:	0f 93       	push	r16
    2136:	1f 93       	push	r17
    2138:	cf 93       	push	r28
    213a:	df 93       	push	r29
    213c:	cd b7       	in	r28, 0x3d	; 61
    213e:	de b7       	in	r29, 0x3e	; 62
    2140:	c8 58       	subi	r28, 0x88	; 136
    2142:	d1 09       	sbc	r29, r1
    2144:	0f b6       	in	r0, 0x3f	; 63
    2146:	f8 94       	cli
    2148:	de bf       	out	0x3e, r29	; 62
    214a:	0f be       	out	0x3f, r0	; 63
    214c:	cd bf       	out	0x3d, r28	; 61
    214e:	7c 01       	movw	r14, r24
    2150:	3b 01       	movw	r6, r22
    2152:	5a 01       	movw	r10, r20
    2154:	49 01       	movw	r8, r18
    2156:	68 01       	movw	r12, r16
	Complex swq_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),   Complex(0,0),   Complex(0,0)},
	 												     {Complex(0,0),Complex(.5,.5), Complex(.5,-.5),Complex(0,0)},
													     {Complex(0,0),Complex(.5,-.5),Complex(.5,.5), Complex(0,0)},
													     {Complex(0,0),Complex(0,0),   Complex(0,0),   Complex(1,0)}};
    2158:	00 e0       	ldi	r16, 0x00	; 0
    215a:	10 e0       	ldi	r17, 0x00	; 0
    215c:	98 01       	movw	r18, r16
    215e:	40 e0       	ldi	r20, 0x00	; 0
    2160:	50 e0       	ldi	r21, 0x00	; 0
    2162:	60 e8       	ldi	r22, 0x80	; 128
    2164:	7f e3       	ldi	r23, 0x3F	; 63
    2166:	ce 01       	movw	r24, r28
    2168:	01 96       	adiw	r24, 0x01	; 1
    216a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    216e:	00 e0       	ldi	r16, 0x00	; 0
    2170:	10 e0       	ldi	r17, 0x00	; 0
    2172:	98 01       	movw	r18, r16
    2174:	b9 01       	movw	r22, r18
    2176:	a8 01       	movw	r20, r16
    2178:	ce 01       	movw	r24, r28
    217a:	09 96       	adiw	r24, 0x09	; 9
    217c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2180:	00 e0       	ldi	r16, 0x00	; 0
    2182:	10 e0       	ldi	r17, 0x00	; 0
    2184:	98 01       	movw	r18, r16
    2186:	b9 01       	movw	r22, r18
    2188:	a8 01       	movw	r20, r16
    218a:	ce 01       	movw	r24, r28
    218c:	41 96       	adiw	r24, 0x11	; 17
    218e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2192:	00 e0       	ldi	r16, 0x00	; 0
    2194:	10 e0       	ldi	r17, 0x00	; 0
    2196:	98 01       	movw	r18, r16
    2198:	b9 01       	movw	r22, r18
    219a:	a8 01       	movw	r20, r16
    219c:	ce 01       	movw	r24, r28
    219e:	49 96       	adiw	r24, 0x19	; 25
    21a0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    21a4:	00 e0       	ldi	r16, 0x00	; 0
    21a6:	10 e0       	ldi	r17, 0x00	; 0
    21a8:	98 01       	movw	r18, r16
    21aa:	b9 01       	movw	r22, r18
    21ac:	a8 01       	movw	r20, r16
    21ae:	ce 01       	movw	r24, r28
    21b0:	81 96       	adiw	r24, 0x21	; 33
    21b2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    21b6:	00 e0       	ldi	r16, 0x00	; 0
    21b8:	10 e0       	ldi	r17, 0x00	; 0
    21ba:	20 e0       	ldi	r18, 0x00	; 0
    21bc:	3f e3       	ldi	r19, 0x3F	; 63
    21be:	b9 01       	movw	r22, r18
    21c0:	a8 01       	movw	r20, r16
    21c2:	ce 01       	movw	r24, r28
    21c4:	89 96       	adiw	r24, 0x29	; 41
    21c6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    21ca:	00 e0       	ldi	r16, 0x00	; 0
    21cc:	10 e0       	ldi	r17, 0x00	; 0
    21ce:	20 e0       	ldi	r18, 0x00	; 0
    21d0:	3f eb       	ldi	r19, 0xBF	; 191
    21d2:	40 e0       	ldi	r20, 0x00	; 0
    21d4:	50 e0       	ldi	r21, 0x00	; 0
    21d6:	60 e0       	ldi	r22, 0x00	; 0
    21d8:	7f e3       	ldi	r23, 0x3F	; 63
    21da:	ce 01       	movw	r24, r28
    21dc:	c1 96       	adiw	r24, 0x31	; 49
    21de:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    21e2:	00 e0       	ldi	r16, 0x00	; 0
    21e4:	10 e0       	ldi	r17, 0x00	; 0
    21e6:	98 01       	movw	r18, r16
    21e8:	b9 01       	movw	r22, r18
    21ea:	a8 01       	movw	r20, r16
    21ec:	ce 01       	movw	r24, r28
    21ee:	c9 96       	adiw	r24, 0x39	; 57
    21f0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    21f4:	00 e0       	ldi	r16, 0x00	; 0
    21f6:	10 e0       	ldi	r17, 0x00	; 0
    21f8:	98 01       	movw	r18, r16
    21fa:	b9 01       	movw	r22, r18
    21fc:	a8 01       	movw	r20, r16
    21fe:	ce 01       	movw	r24, r28
    2200:	8f 5b       	subi	r24, 0xBF	; 191
    2202:	9f 4f       	sbci	r25, 0xFF	; 255
    2204:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2208:	00 e0       	ldi	r16, 0x00	; 0
    220a:	10 e0       	ldi	r17, 0x00	; 0
    220c:	20 e0       	ldi	r18, 0x00	; 0
    220e:	3f eb       	ldi	r19, 0xBF	; 191
    2210:	40 e0       	ldi	r20, 0x00	; 0
    2212:	50 e0       	ldi	r21, 0x00	; 0
    2214:	60 e0       	ldi	r22, 0x00	; 0
    2216:	7f e3       	ldi	r23, 0x3F	; 63
    2218:	ce 01       	movw	r24, r28
    221a:	87 5b       	subi	r24, 0xB7	; 183
    221c:	9f 4f       	sbci	r25, 0xFF	; 255
    221e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2222:	00 e0       	ldi	r16, 0x00	; 0
    2224:	10 e0       	ldi	r17, 0x00	; 0
    2226:	20 e0       	ldi	r18, 0x00	; 0
    2228:	3f e3       	ldi	r19, 0x3F	; 63
    222a:	b9 01       	movw	r22, r18
    222c:	a8 01       	movw	r20, r16
    222e:	ce 01       	movw	r24, r28
    2230:	8f 5a       	subi	r24, 0xAF	; 175
    2232:	9f 4f       	sbci	r25, 0xFF	; 255
    2234:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2238:	00 e0       	ldi	r16, 0x00	; 0
    223a:	10 e0       	ldi	r17, 0x00	; 0
    223c:	98 01       	movw	r18, r16
    223e:	b9 01       	movw	r22, r18
    2240:	a8 01       	movw	r20, r16
    2242:	ce 01       	movw	r24, r28
    2244:	87 5a       	subi	r24, 0xA7	; 167
    2246:	9f 4f       	sbci	r25, 0xFF	; 255
    2248:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    224c:	00 e0       	ldi	r16, 0x00	; 0
    224e:	10 e0       	ldi	r17, 0x00	; 0
    2250:	98 01       	movw	r18, r16
    2252:	b9 01       	movw	r22, r18
    2254:	a8 01       	movw	r20, r16
    2256:	ce 01       	movw	r24, r28
    2258:	8f 59       	subi	r24, 0x9F	; 159
    225a:	9f 4f       	sbci	r25, 0xFF	; 255
    225c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2260:	00 e0       	ldi	r16, 0x00	; 0
    2262:	10 e0       	ldi	r17, 0x00	; 0
    2264:	98 01       	movw	r18, r16
    2266:	b9 01       	movw	r22, r18
    2268:	a8 01       	movw	r20, r16
    226a:	ce 01       	movw	r24, r28
    226c:	87 59       	subi	r24, 0x97	; 151
    226e:	9f 4f       	sbci	r25, 0xFF	; 255
    2270:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2274:	00 e0       	ldi	r16, 0x00	; 0
    2276:	10 e0       	ldi	r17, 0x00	; 0
    2278:	98 01       	movw	r18, r16
    227a:	b9 01       	movw	r22, r18
    227c:	a8 01       	movw	r20, r16
    227e:	ce 01       	movw	r24, r28
    2280:	8f 58       	subi	r24, 0x8F	; 143
    2282:	9f 4f       	sbci	r25, 0xFF	; 255
    2284:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2288:	00 e0       	ldi	r16, 0x00	; 0
    228a:	10 e0       	ldi	r17, 0x00	; 0
    228c:	98 01       	movw	r18, r16
    228e:	40 e0       	ldi	r20, 0x00	; 0
    2290:	50 e0       	ldi	r21, 0x00	; 0
    2292:	60 e8       	ldi	r22, 0x80	; 128
    2294:	7f e3       	ldi	r23, 0x3F	; 63
    2296:	ce 01       	movw	r24, r28
    2298:	87 58       	subi	r24, 0x87	; 135
    229a:	9f 4f       	sbci	r25, 0xFF	; 255
    229c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    22a0:	cb 57       	subi	r28, 0x7B	; 123
    22a2:	df 4f       	sbci	r29, 0xFF	; 255
    22a4:	79 82       	std	Y+1, r7	; 0x01
    22a6:	68 82       	st	Y, r6
    22a8:	c5 58       	subi	r28, 0x85	; 133
    22aa:	d0 40       	sbci	r29, 0x00	; 0
    22ac:	c9 57       	subi	r28, 0x79	; 121
    22ae:	df 4f       	sbci	r29, 0xFF	; 255
    22b0:	99 82       	std	Y+1, r9	; 0x01
    22b2:	88 82       	st	Y, r8
    22b4:	c7 58       	subi	r28, 0x87	; 135
    22b6:	d0 40       	sbci	r29, 0x00	; 0
    22b8:	cf 57       	subi	r28, 0x7F	; 127
    22ba:	df 4f       	sbci	r29, 0xFF	; 255
    22bc:	b9 82       	std	Y+1, r11	; 0x01
    22be:	a8 82       	st	Y, r10
    22c0:	c1 58       	subi	r28, 0x81	; 129
    22c2:	d0 40       	sbci	r29, 0x00	; 0
    22c4:	cd 57       	subi	r28, 0x7D	; 125
    22c6:	df 4f       	sbci	r29, 0xFF	; 255
    22c8:	d9 82       	std	Y+1, r13	; 0x01
    22ca:	c8 82       	st	Y, r12
    22cc:	c3 58       	subi	r28, 0x83	; 131
    22ce:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),swq_matrix),QB_SIZE2);
    22d0:	9e 01       	movw	r18, r28
    22d2:	2f 57       	subi	r18, 0x7F	; 127
    22d4:	3f 4f       	sbci	r19, 0xFF	; 255
    22d6:	ae 01       	movw	r20, r28
    22d8:	4b 57       	subi	r20, 0x7B	; 123
    22da:	5f 4f       	sbci	r21, 0xFF	; 255
    22dc:	62 e0       	ldi	r22, 0x02	; 2
    22de:	70 e0       	ldi	r23, 0x00	; 0
    22e0:	c7 01       	movw	r24, r14
    22e2:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    22e6:	ae 01       	movw	r20, r28
    22e8:	4f 5f       	subi	r20, 0xFF	; 255
    22ea:	5f 4f       	sbci	r21, 0xFF	; 255
    22ec:	bc 01       	movw	r22, r24
    22ee:	c7 01       	movw	r24, r14
    22f0:	0e 94 bd 07 	call	0xf7a	; 0xf7a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    22f4:	42 e0       	ldi	r20, 0x02	; 2
    22f6:	50 e0       	ldi	r21, 0x00	; 0
    22f8:	bc 01       	movw	r22, r24
    22fa:	c7 01       	movw	r24, r14
    22fc:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    2300:	c8 57       	subi	r28, 0x78	; 120
    2302:	df 4f       	sbci	r29, 0xFF	; 255
    2304:	0f b6       	in	r0, 0x3f	; 63
    2306:	f8 94       	cli
    2308:	de bf       	out	0x3e, r29	; 62
    230a:	0f be       	out	0x3f, r0	; 63
    230c:	cd bf       	out	0x3d, r28	; 61
    230e:	df 91       	pop	r29
    2310:	cf 91       	pop	r28
    2312:	1f 91       	pop	r17
    2314:	0f 91       	pop	r16
    2316:	ff 90       	pop	r15
    2318:	ef 90       	pop	r14
    231a:	df 90       	pop	r13
    231c:	cf 90       	pop	r12
    231e:	bf 90       	pop	r11
    2320:	af 90       	pop	r10
    2322:	9f 90       	pop	r9
    2324:	8f 90       	pop	r8
    2326:	7f 90       	pop	r7
    2328:	6f 90       	pop	r6
    232a:	08 95       	ret

0000232c <_ZN5Gates3SWIEiiii>:
int * Gates::SWI(int theta1, int phi1, int theta2,int phi2){
    232c:	6f 92       	push	r6
    232e:	7f 92       	push	r7
    2330:	8f 92       	push	r8
    2332:	9f 92       	push	r9
    2334:	af 92       	push	r10
    2336:	bf 92       	push	r11
    2338:	cf 92       	push	r12
    233a:	df 92       	push	r13
    233c:	ef 92       	push	r14
    233e:	ff 92       	push	r15
    2340:	0f 93       	push	r16
    2342:	1f 93       	push	r17
    2344:	cf 93       	push	r28
    2346:	df 93       	push	r29
    2348:	cd b7       	in	r28, 0x3d	; 61
    234a:	de b7       	in	r29, 0x3e	; 62
    234c:	c8 58       	subi	r28, 0x88	; 136
    234e:	d1 09       	sbc	r29, r1
    2350:	0f b6       	in	r0, 0x3f	; 63
    2352:	f8 94       	cli
    2354:	de bf       	out	0x3e, r29	; 62
    2356:	0f be       	out	0x3f, r0	; 63
    2358:	cd bf       	out	0x3d, r28	; 61
    235a:	7c 01       	movw	r14, r24
    235c:	3b 01       	movw	r6, r22
    235e:	5a 01       	movw	r10, r20
    2360:	49 01       	movw	r8, r18
    2362:	68 01       	movw	r12, r16
	Complex dec_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,1),Complex(0,0)},
 													     {Complex(0,0),Complex(0,1),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)}};
    2364:	00 e0       	ldi	r16, 0x00	; 0
    2366:	10 e0       	ldi	r17, 0x00	; 0
    2368:	98 01       	movw	r18, r16
    236a:	40 e0       	ldi	r20, 0x00	; 0
    236c:	50 e0       	ldi	r21, 0x00	; 0
    236e:	60 e8       	ldi	r22, 0x80	; 128
    2370:	7f e3       	ldi	r23, 0x3F	; 63
    2372:	ce 01       	movw	r24, r28
    2374:	01 96       	adiw	r24, 0x01	; 1
    2376:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    237a:	00 e0       	ldi	r16, 0x00	; 0
    237c:	10 e0       	ldi	r17, 0x00	; 0
    237e:	98 01       	movw	r18, r16
    2380:	b9 01       	movw	r22, r18
    2382:	a8 01       	movw	r20, r16
    2384:	ce 01       	movw	r24, r28
    2386:	09 96       	adiw	r24, 0x09	; 9
    2388:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    238c:	00 e0       	ldi	r16, 0x00	; 0
    238e:	10 e0       	ldi	r17, 0x00	; 0
    2390:	98 01       	movw	r18, r16
    2392:	b9 01       	movw	r22, r18
    2394:	a8 01       	movw	r20, r16
    2396:	ce 01       	movw	r24, r28
    2398:	41 96       	adiw	r24, 0x11	; 17
    239a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    239e:	00 e0       	ldi	r16, 0x00	; 0
    23a0:	10 e0       	ldi	r17, 0x00	; 0
    23a2:	98 01       	movw	r18, r16
    23a4:	b9 01       	movw	r22, r18
    23a6:	a8 01       	movw	r20, r16
    23a8:	ce 01       	movw	r24, r28
    23aa:	49 96       	adiw	r24, 0x19	; 25
    23ac:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    23b0:	00 e0       	ldi	r16, 0x00	; 0
    23b2:	10 e0       	ldi	r17, 0x00	; 0
    23b4:	98 01       	movw	r18, r16
    23b6:	b9 01       	movw	r22, r18
    23b8:	a8 01       	movw	r20, r16
    23ba:	ce 01       	movw	r24, r28
    23bc:	81 96       	adiw	r24, 0x21	; 33
    23be:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    23c2:	00 e0       	ldi	r16, 0x00	; 0
    23c4:	10 e0       	ldi	r17, 0x00	; 0
    23c6:	98 01       	movw	r18, r16
    23c8:	b9 01       	movw	r22, r18
    23ca:	a8 01       	movw	r20, r16
    23cc:	ce 01       	movw	r24, r28
    23ce:	89 96       	adiw	r24, 0x29	; 41
    23d0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    23d4:	00 e0       	ldi	r16, 0x00	; 0
    23d6:	10 e0       	ldi	r17, 0x00	; 0
    23d8:	20 e8       	ldi	r18, 0x80	; 128
    23da:	3f e3       	ldi	r19, 0x3F	; 63
    23dc:	40 e0       	ldi	r20, 0x00	; 0
    23de:	50 e0       	ldi	r21, 0x00	; 0
    23e0:	ba 01       	movw	r22, r20
    23e2:	ce 01       	movw	r24, r28
    23e4:	c1 96       	adiw	r24, 0x31	; 49
    23e6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    23ea:	00 e0       	ldi	r16, 0x00	; 0
    23ec:	10 e0       	ldi	r17, 0x00	; 0
    23ee:	98 01       	movw	r18, r16
    23f0:	b9 01       	movw	r22, r18
    23f2:	a8 01       	movw	r20, r16
    23f4:	ce 01       	movw	r24, r28
    23f6:	c9 96       	adiw	r24, 0x39	; 57
    23f8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    23fc:	00 e0       	ldi	r16, 0x00	; 0
    23fe:	10 e0       	ldi	r17, 0x00	; 0
    2400:	98 01       	movw	r18, r16
    2402:	b9 01       	movw	r22, r18
    2404:	a8 01       	movw	r20, r16
    2406:	ce 01       	movw	r24, r28
    2408:	8f 5b       	subi	r24, 0xBF	; 191
    240a:	9f 4f       	sbci	r25, 0xFF	; 255
    240c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2410:	00 e0       	ldi	r16, 0x00	; 0
    2412:	10 e0       	ldi	r17, 0x00	; 0
    2414:	20 e8       	ldi	r18, 0x80	; 128
    2416:	3f e3       	ldi	r19, 0x3F	; 63
    2418:	40 e0       	ldi	r20, 0x00	; 0
    241a:	50 e0       	ldi	r21, 0x00	; 0
    241c:	ba 01       	movw	r22, r20
    241e:	ce 01       	movw	r24, r28
    2420:	87 5b       	subi	r24, 0xB7	; 183
    2422:	9f 4f       	sbci	r25, 0xFF	; 255
    2424:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2428:	00 e0       	ldi	r16, 0x00	; 0
    242a:	10 e0       	ldi	r17, 0x00	; 0
    242c:	98 01       	movw	r18, r16
    242e:	b9 01       	movw	r22, r18
    2430:	a8 01       	movw	r20, r16
    2432:	ce 01       	movw	r24, r28
    2434:	8f 5a       	subi	r24, 0xAF	; 175
    2436:	9f 4f       	sbci	r25, 0xFF	; 255
    2438:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    243c:	00 e0       	ldi	r16, 0x00	; 0
    243e:	10 e0       	ldi	r17, 0x00	; 0
    2440:	98 01       	movw	r18, r16
    2442:	b9 01       	movw	r22, r18
    2444:	a8 01       	movw	r20, r16
    2446:	ce 01       	movw	r24, r28
    2448:	87 5a       	subi	r24, 0xA7	; 167
    244a:	9f 4f       	sbci	r25, 0xFF	; 255
    244c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2450:	00 e0       	ldi	r16, 0x00	; 0
    2452:	10 e0       	ldi	r17, 0x00	; 0
    2454:	98 01       	movw	r18, r16
    2456:	b9 01       	movw	r22, r18
    2458:	a8 01       	movw	r20, r16
    245a:	ce 01       	movw	r24, r28
    245c:	8f 59       	subi	r24, 0x9F	; 159
    245e:	9f 4f       	sbci	r25, 0xFF	; 255
    2460:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2464:	00 e0       	ldi	r16, 0x00	; 0
    2466:	10 e0       	ldi	r17, 0x00	; 0
    2468:	98 01       	movw	r18, r16
    246a:	b9 01       	movw	r22, r18
    246c:	a8 01       	movw	r20, r16
    246e:	ce 01       	movw	r24, r28
    2470:	87 59       	subi	r24, 0x97	; 151
    2472:	9f 4f       	sbci	r25, 0xFF	; 255
    2474:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2478:	00 e0       	ldi	r16, 0x00	; 0
    247a:	10 e0       	ldi	r17, 0x00	; 0
    247c:	98 01       	movw	r18, r16
    247e:	b9 01       	movw	r22, r18
    2480:	a8 01       	movw	r20, r16
    2482:	ce 01       	movw	r24, r28
    2484:	8f 58       	subi	r24, 0x8F	; 143
    2486:	9f 4f       	sbci	r25, 0xFF	; 255
    2488:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    248c:	00 e0       	ldi	r16, 0x00	; 0
    248e:	10 e0       	ldi	r17, 0x00	; 0
    2490:	98 01       	movw	r18, r16
    2492:	40 e0       	ldi	r20, 0x00	; 0
    2494:	50 e0       	ldi	r21, 0x00	; 0
    2496:	60 e8       	ldi	r22, 0x80	; 128
    2498:	7f e3       	ldi	r23, 0x3F	; 63
    249a:	ce 01       	movw	r24, r28
    249c:	87 58       	subi	r24, 0x87	; 135
    249e:	9f 4f       	sbci	r25, 0xFF	; 255
    24a0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    24a4:	cb 57       	subi	r28, 0x7B	; 123
    24a6:	df 4f       	sbci	r29, 0xFF	; 255
    24a8:	79 82       	std	Y+1, r7	; 0x01
    24aa:	68 82       	st	Y, r6
    24ac:	c5 58       	subi	r28, 0x85	; 133
    24ae:	d0 40       	sbci	r29, 0x00	; 0
    24b0:	c9 57       	subi	r28, 0x79	; 121
    24b2:	df 4f       	sbci	r29, 0xFF	; 255
    24b4:	99 82       	std	Y+1, r9	; 0x01
    24b6:	88 82       	st	Y, r8
    24b8:	c7 58       	subi	r28, 0x87	; 135
    24ba:	d0 40       	sbci	r29, 0x00	; 0
    24bc:	cf 57       	subi	r28, 0x7F	; 127
    24be:	df 4f       	sbci	r29, 0xFF	; 255
    24c0:	b9 82       	std	Y+1, r11	; 0x01
    24c2:	a8 82       	st	Y, r10
    24c4:	c1 58       	subi	r28, 0x81	; 129
    24c6:	d0 40       	sbci	r29, 0x00	; 0
    24c8:	cd 57       	subi	r28, 0x7D	; 125
    24ca:	df 4f       	sbci	r29, 0xFF	; 255
    24cc:	d9 82       	std	Y+1, r13	; 0x01
    24ce:	c8 82       	st	Y, r12
    24d0:	c3 58       	subi	r28, 0x83	; 131
    24d2:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),dec_matrix),QB_SIZE2);
    24d4:	9e 01       	movw	r18, r28
    24d6:	2f 57       	subi	r18, 0x7F	; 127
    24d8:	3f 4f       	sbci	r19, 0xFF	; 255
    24da:	ae 01       	movw	r20, r28
    24dc:	4b 57       	subi	r20, 0x7B	; 123
    24de:	5f 4f       	sbci	r21, 0xFF	; 255
    24e0:	62 e0       	ldi	r22, 0x02	; 2
    24e2:	70 e0       	ldi	r23, 0x00	; 0
    24e4:	c7 01       	movw	r24, r14
    24e6:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    24ea:	ae 01       	movw	r20, r28
    24ec:	4f 5f       	subi	r20, 0xFF	; 255
    24ee:	5f 4f       	sbci	r21, 0xFF	; 255
    24f0:	bc 01       	movw	r22, r24
    24f2:	c7 01       	movw	r24, r14
    24f4:	0e 94 bd 07 	call	0xf7a	; 0xf7a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    24f8:	42 e0       	ldi	r20, 0x02	; 2
    24fa:	50 e0       	ldi	r21, 0x00	; 0
    24fc:	bc 01       	movw	r22, r24
    24fe:	c7 01       	movw	r24, r14
    2500:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    2504:	c8 57       	subi	r28, 0x78	; 120
    2506:	df 4f       	sbci	r29, 0xFF	; 255
    2508:	0f b6       	in	r0, 0x3f	; 63
    250a:	f8 94       	cli
    250c:	de bf       	out	0x3e, r29	; 62
    250e:	0f be       	out	0x3f, r0	; 63
    2510:	cd bf       	out	0x3d, r28	; 61
    2512:	df 91       	pop	r29
    2514:	cf 91       	pop	r28
    2516:	1f 91       	pop	r17
    2518:	0f 91       	pop	r16
    251a:	ff 90       	pop	r15
    251c:	ef 90       	pop	r14
    251e:	df 90       	pop	r13
    2520:	cf 90       	pop	r12
    2522:	bf 90       	pop	r11
    2524:	af 90       	pop	r10
    2526:	9f 90       	pop	r9
    2528:	8f 90       	pop	r8
    252a:	7f 90       	pop	r7
    252c:	6f 90       	pop	r6
    252e:	08 95       	ret

00002530 <_ZN5Gates3ROXEiii>:
int * Gates::ROX(int theta,int phi,int delta){
    2530:	2f 92       	push	r2
    2532:	3f 92       	push	r3
    2534:	4f 92       	push	r4
    2536:	5f 92       	push	r5
    2538:	6f 92       	push	r6
    253a:	7f 92       	push	r7
    253c:	8f 92       	push	r8
    253e:	9f 92       	push	r9
    2540:	af 92       	push	r10
    2542:	bf 92       	push	r11
    2544:	cf 92       	push	r12
    2546:	df 92       	push	r13
    2548:	ef 92       	push	r14
    254a:	ff 92       	push	r15
    254c:	0f 93       	push	r16
    254e:	1f 93       	push	r17
    2550:	cf 93       	push	r28
    2552:	df 93       	push	r29
    2554:	cd b7       	in	r28, 0x3d	; 61
    2556:	de b7       	in	r29, 0x3e	; 62
    2558:	a4 97       	sbiw	r28, 0x24	; 36
    255a:	0f b6       	in	r0, 0x3f	; 63
    255c:	f8 94       	cli
    255e:	de bf       	out	0x3e, r29	; 62
    2560:	0f be       	out	0x3f, r0	; 63
    2562:	cd bf       	out	0x3d, r28	; 61
    2564:	7c 01       	movw	r14, r24
    2566:	1b 01       	movw	r2, r22
    2568:	6a 01       	movw	r12, r20
	float delta_float=(delta*M_PI)/180;
    256a:	b9 01       	movw	r22, r18
    256c:	88 27       	eor	r24, r24
    256e:	77 fd       	sbrc	r23, 7
    2570:	80 95       	com	r24
    2572:	98 2f       	mov	r25, r24
    2574:	0e 94 8f 29 	call	0x531e	; 0x531e <__floatsisf>
    2578:	2b ed       	ldi	r18, 0xDB	; 219
    257a:	3f e0       	ldi	r19, 0x0F	; 15
    257c:	49 e4       	ldi	r20, 0x49	; 73
    257e:	50 e4       	ldi	r21, 0x40	; 64
    2580:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
    2584:	20 e0       	ldi	r18, 0x00	; 0
    2586:	30 e0       	ldi	r19, 0x00	; 0
    2588:	44 e3       	ldi	r20, 0x34	; 52
    258a:	53 e4       	ldi	r21, 0x43	; 67
    258c:	0e 94 c3 28 	call	0x5186	; 0x5186 <__divsf3>
	Complex rox_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(cos(delta_float/2),0), Complex(0,-sin(delta_float/2))},
    2590:	20 e0       	ldi	r18, 0x00	; 0
    2592:	30 e0       	ldi	r19, 0x00	; 0
    2594:	40 e0       	ldi	r20, 0x00	; 0
    2596:	5f e3       	ldi	r21, 0x3F	; 63
    2598:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
    259c:	4b 01       	movw	r8, r22
    259e:	5c 01       	movw	r10, r24
    25a0:	0e 94 c0 28 	call	0x5180	; 0x5180 <cos>
    25a4:	2b 01       	movw	r4, r22
    25a6:	3c 01       	movw	r6, r24
														 {Complex(0,-sin(delta_float/2)),Complex(cos(delta_float/2),0)}};
    25a8:	00 e0       	ldi	r16, 0x00	; 0
    25aa:	10 e0       	ldi	r17, 0x00	; 0
    25ac:	98 01       	movw	r18, r16
    25ae:	ab 01       	movw	r20, r22
    25b0:	bc 01       	movw	r22, r24
    25b2:	ce 01       	movw	r24, r28
    25b4:	01 96       	adiw	r24, 0x01	; 1
    25b6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),dec_matrix),QB_SIZE2);
}
int * Gates::ROX(int theta,int phi,int delta){
	float delta_float=(delta*M_PI)/180;
	Complex rox_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(cos(delta_float/2),0), Complex(0,-sin(delta_float/2))},
    25ba:	c5 01       	movw	r24, r10
    25bc:	b4 01       	movw	r22, r8
    25be:	0e 94 d4 2b 	call	0x57a8	; 0x57a8 <sin>
														 {Complex(0,-sin(delta_float/2)),Complex(cos(delta_float/2),0)}};
    25c2:	4b 01       	movw	r8, r22
    25c4:	5c 01       	movw	r10, r24
    25c6:	b7 fa       	bst	r11, 7
    25c8:	b0 94       	com	r11
    25ca:	b7 f8       	bld	r11, 7
    25cc:	b0 94       	com	r11
    25ce:	95 01       	movw	r18, r10
    25d0:	84 01       	movw	r16, r8
    25d2:	40 e0       	ldi	r20, 0x00	; 0
    25d4:	50 e0       	ldi	r21, 0x00	; 0
    25d6:	ba 01       	movw	r22, r20
    25d8:	ce 01       	movw	r24, r28
    25da:	09 96       	adiw	r24, 0x09	; 9
    25dc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    25e0:	95 01       	movw	r18, r10
    25e2:	84 01       	movw	r16, r8
    25e4:	40 e0       	ldi	r20, 0x00	; 0
    25e6:	50 e0       	ldi	r21, 0x00	; 0
    25e8:	ba 01       	movw	r22, r20
    25ea:	ce 01       	movw	r24, r28
    25ec:	41 96       	adiw	r24, 0x11	; 17
    25ee:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    25f2:	00 e0       	ldi	r16, 0x00	; 0
    25f4:	10 e0       	ldi	r17, 0x00	; 0
    25f6:	98 01       	movw	r18, r16
    25f8:	b3 01       	movw	r22, r6
    25fa:	a2 01       	movw	r20, r4
    25fc:	ce 01       	movw	r24, r28
    25fe:	49 96       	adiw	r24, 0x19	; 25
    2600:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    2604:	3c a2       	std	Y+36, r3	; 0x24
    2606:	2b a2       	std	Y+35, r2	; 0x23
    2608:	da a2       	std	Y+34, r13	; 0x22
    260a:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),rox_matrix),QB_SIZE1);		
    260c:	9e 01       	movw	r18, r28
    260e:	2f 5d       	subi	r18, 0xDF	; 223
    2610:	3f 4f       	sbci	r19, 0xFF	; 255
    2612:	ae 01       	movw	r20, r28
    2614:	4d 5d       	subi	r20, 0xDD	; 221
    2616:	5f 4f       	sbci	r21, 0xFF	; 255
    2618:	61 e0       	ldi	r22, 0x01	; 1
    261a:	70 e0       	ldi	r23, 0x00	; 0
    261c:	c7 01       	movw	r24, r14
    261e:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    2622:	ae 01       	movw	r20, r28
    2624:	4f 5f       	subi	r20, 0xFF	; 255
    2626:	5f 4f       	sbci	r21, 0xFF	; 255
    2628:	bc 01       	movw	r22, r24
    262a:	c7 01       	movw	r24, r14
    262c:	0e 94 ff 06 	call	0xdfe	; 0xdfe <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    2630:	41 e0       	ldi	r20, 0x01	; 1
    2632:	50 e0       	ldi	r21, 0x00	; 0
    2634:	bc 01       	movw	r22, r24
    2636:	c7 01       	movw	r24, r14
    2638:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    263c:	a4 96       	adiw	r28, 0x24	; 36
    263e:	0f b6       	in	r0, 0x3f	; 63
    2640:	f8 94       	cli
    2642:	de bf       	out	0x3e, r29	; 62
    2644:	0f be       	out	0x3f, r0	; 63
    2646:	cd bf       	out	0x3d, r28	; 61
    2648:	df 91       	pop	r29
    264a:	cf 91       	pop	r28
    264c:	1f 91       	pop	r17
    264e:	0f 91       	pop	r16
    2650:	ff 90       	pop	r15
    2652:	ef 90       	pop	r14
    2654:	df 90       	pop	r13
    2656:	cf 90       	pop	r12
    2658:	bf 90       	pop	r11
    265a:	af 90       	pop	r10
    265c:	9f 90       	pop	r9
    265e:	8f 90       	pop	r8
    2660:	7f 90       	pop	r7
    2662:	6f 90       	pop	r6
    2664:	5f 90       	pop	r5
    2666:	4f 90       	pop	r4
    2668:	3f 90       	pop	r3
    266a:	2f 90       	pop	r2
    266c:	08 95       	ret

0000266e <_ZN5Gates3ROYEiii>:
int * Gates::ROY(int theta,int phi,int delta){
    266e:	2f 92       	push	r2
    2670:	3f 92       	push	r3
    2672:	4f 92       	push	r4
    2674:	5f 92       	push	r5
    2676:	6f 92       	push	r6
    2678:	7f 92       	push	r7
    267a:	8f 92       	push	r8
    267c:	9f 92       	push	r9
    267e:	af 92       	push	r10
    2680:	bf 92       	push	r11
    2682:	cf 92       	push	r12
    2684:	df 92       	push	r13
    2686:	ef 92       	push	r14
    2688:	ff 92       	push	r15
    268a:	0f 93       	push	r16
    268c:	1f 93       	push	r17
    268e:	cf 93       	push	r28
    2690:	df 93       	push	r29
    2692:	cd b7       	in	r28, 0x3d	; 61
    2694:	de b7       	in	r29, 0x3e	; 62
    2696:	a4 97       	sbiw	r28, 0x24	; 36
    2698:	0f b6       	in	r0, 0x3f	; 63
    269a:	f8 94       	cli
    269c:	de bf       	out	0x3e, r29	; 62
    269e:	0f be       	out	0x3f, r0	; 63
    26a0:	cd bf       	out	0x3d, r28	; 61
    26a2:	7c 01       	movw	r14, r24
    26a4:	1b 01       	movw	r2, r22
    26a6:	6a 01       	movw	r12, r20
	float delta_float=(delta*M_PI)/180;
    26a8:	b9 01       	movw	r22, r18
    26aa:	88 27       	eor	r24, r24
    26ac:	77 fd       	sbrc	r23, 7
    26ae:	80 95       	com	r24
    26b0:	98 2f       	mov	r25, r24
    26b2:	0e 94 8f 29 	call	0x531e	; 0x531e <__floatsisf>
    26b6:	2b ed       	ldi	r18, 0xDB	; 219
    26b8:	3f e0       	ldi	r19, 0x0F	; 15
    26ba:	49 e4       	ldi	r20, 0x49	; 73
    26bc:	50 e4       	ldi	r21, 0x40	; 64
    26be:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
    26c2:	20 e0       	ldi	r18, 0x00	; 0
    26c4:	30 e0       	ldi	r19, 0x00	; 0
    26c6:	44 e3       	ldi	r20, 0x34	; 52
    26c8:	53 e4       	ldi	r21, 0x43	; 67
    26ca:	0e 94 c3 28 	call	0x5186	; 0x5186 <__divsf3>
	Complex roy_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(cos(delta_float/2),0),Complex(-sin(delta_float/2),0)},
    26ce:	20 e0       	ldi	r18, 0x00	; 0
    26d0:	30 e0       	ldi	r19, 0x00	; 0
    26d2:	40 e0       	ldi	r20, 0x00	; 0
    26d4:	5f e3       	ldi	r21, 0x3F	; 63
    26d6:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
    26da:	4b 01       	movw	r8, r22
    26dc:	5c 01       	movw	r10, r24
    26de:	0e 94 c0 28 	call	0x5180	; 0x5180 <cos>
    26e2:	2b 01       	movw	r4, r22
    26e4:	3c 01       	movw	r6, r24
														 {Complex(sin(delta_float/2),0),Complex(cos(delta_float/2),0)}};
    26e6:	00 e0       	ldi	r16, 0x00	; 0
    26e8:	10 e0       	ldi	r17, 0x00	; 0
    26ea:	98 01       	movw	r18, r16
    26ec:	ab 01       	movw	r20, r22
    26ee:	bc 01       	movw	r22, r24
    26f0:	ce 01       	movw	r24, r28
    26f2:	01 96       	adiw	r24, 0x01	; 1
    26f4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),rox_matrix),QB_SIZE1);		
}
int * Gates::ROY(int theta,int phi,int delta){
	float delta_float=(delta*M_PI)/180;
	Complex roy_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(cos(delta_float/2),0),Complex(-sin(delta_float/2),0)},
    26f8:	c5 01       	movw	r24, r10
    26fa:	b4 01       	movw	r22, r8
    26fc:	0e 94 d4 2b 	call	0x57a8	; 0x57a8 <sin>
    2700:	4b 01       	movw	r8, r22
    2702:	5c 01       	movw	r10, r24
														 {Complex(sin(delta_float/2),0),Complex(cos(delta_float/2),0)}};
    2704:	ab 01       	movw	r20, r22
    2706:	bc 01       	movw	r22, r24
    2708:	70 58       	subi	r23, 0x80	; 128
    270a:	00 e0       	ldi	r16, 0x00	; 0
    270c:	10 e0       	ldi	r17, 0x00	; 0
    270e:	98 01       	movw	r18, r16
    2710:	ce 01       	movw	r24, r28
    2712:	09 96       	adiw	r24, 0x09	; 9
    2714:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2718:	00 e0       	ldi	r16, 0x00	; 0
    271a:	10 e0       	ldi	r17, 0x00	; 0
    271c:	98 01       	movw	r18, r16
    271e:	b5 01       	movw	r22, r10
    2720:	a4 01       	movw	r20, r8
    2722:	ce 01       	movw	r24, r28
    2724:	41 96       	adiw	r24, 0x11	; 17
    2726:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    272a:	00 e0       	ldi	r16, 0x00	; 0
    272c:	10 e0       	ldi	r17, 0x00	; 0
    272e:	98 01       	movw	r18, r16
    2730:	b3 01       	movw	r22, r6
    2732:	a2 01       	movw	r20, r4
    2734:	ce 01       	movw	r24, r28
    2736:	49 96       	adiw	r24, 0x19	; 25
    2738:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    273c:	3c a2       	std	Y+36, r3	; 0x24
    273e:	2b a2       	std	Y+35, r2	; 0x23
    2740:	da a2       	std	Y+34, r13	; 0x22
    2742:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),roy_matrix),QB_SIZE1);
    2744:	9e 01       	movw	r18, r28
    2746:	2f 5d       	subi	r18, 0xDF	; 223
    2748:	3f 4f       	sbci	r19, 0xFF	; 255
    274a:	ae 01       	movw	r20, r28
    274c:	4d 5d       	subi	r20, 0xDD	; 221
    274e:	5f 4f       	sbci	r21, 0xFF	; 255
    2750:	61 e0       	ldi	r22, 0x01	; 1
    2752:	70 e0       	ldi	r23, 0x00	; 0
    2754:	c7 01       	movw	r24, r14
    2756:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    275a:	ae 01       	movw	r20, r28
    275c:	4f 5f       	subi	r20, 0xFF	; 255
    275e:	5f 4f       	sbci	r21, 0xFF	; 255
    2760:	bc 01       	movw	r22, r24
    2762:	c7 01       	movw	r24, r14
    2764:	0e 94 ff 06 	call	0xdfe	; 0xdfe <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    2768:	41 e0       	ldi	r20, 0x01	; 1
    276a:	50 e0       	ldi	r21, 0x00	; 0
    276c:	bc 01       	movw	r22, r24
    276e:	c7 01       	movw	r24, r14
    2770:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    2774:	a4 96       	adiw	r28, 0x24	; 36
    2776:	0f b6       	in	r0, 0x3f	; 63
    2778:	f8 94       	cli
    277a:	de bf       	out	0x3e, r29	; 62
    277c:	0f be       	out	0x3f, r0	; 63
    277e:	cd bf       	out	0x3d, r28	; 61
    2780:	df 91       	pop	r29
    2782:	cf 91       	pop	r28
    2784:	1f 91       	pop	r17
    2786:	0f 91       	pop	r16
    2788:	ff 90       	pop	r15
    278a:	ef 90       	pop	r14
    278c:	df 90       	pop	r13
    278e:	cf 90       	pop	r12
    2790:	bf 90       	pop	r11
    2792:	af 90       	pop	r10
    2794:	9f 90       	pop	r9
    2796:	8f 90       	pop	r8
    2798:	7f 90       	pop	r7
    279a:	6f 90       	pop	r6
    279c:	5f 90       	pop	r5
    279e:	4f 90       	pop	r4
    27a0:	3f 90       	pop	r3
    27a2:	2f 90       	pop	r2
    27a4:	08 95       	ret

000027a6 <_ZN5Gates3ROZEiii>:
int * Gates::ROZ(int theta,int phi,int delta){
    27a6:	4f 92       	push	r4
    27a8:	5f 92       	push	r5
    27aa:	6f 92       	push	r6
    27ac:	7f 92       	push	r7
    27ae:	af 92       	push	r10
    27b0:	bf 92       	push	r11
    27b2:	cf 92       	push	r12
    27b4:	df 92       	push	r13
    27b6:	ef 92       	push	r14
    27b8:	ff 92       	push	r15
    27ba:	0f 93       	push	r16
    27bc:	1f 93       	push	r17
    27be:	cf 93       	push	r28
    27c0:	df 93       	push	r29
    27c2:	cd b7       	in	r28, 0x3d	; 61
    27c4:	de b7       	in	r29, 0x3e	; 62
    27c6:	a4 97       	sbiw	r28, 0x24	; 36
    27c8:	0f b6       	in	r0, 0x3f	; 63
    27ca:	f8 94       	cli
    27cc:	de bf       	out	0x3e, r29	; 62
    27ce:	0f be       	out	0x3f, r0	; 63
    27d0:	cd bf       	out	0x3d, r28	; 61
    27d2:	7c 01       	movw	r14, r24
    27d4:	5b 01       	movw	r10, r22
    27d6:	6a 01       	movw	r12, r20
	float delta_float=(delta*M_PI)/180;
    27d8:	b9 01       	movw	r22, r18
    27da:	88 27       	eor	r24, r24
    27dc:	77 fd       	sbrc	r23, 7
    27de:	80 95       	com	r24
    27e0:	98 2f       	mov	r25, r24
    27e2:	0e 94 8f 29 	call	0x531e	; 0x531e <__floatsisf>
    27e6:	2b ed       	ldi	r18, 0xDB	; 219
    27e8:	3f e0       	ldi	r19, 0x0F	; 15
    27ea:	49 e4       	ldi	r20, 0x49	; 73
    27ec:	50 e4       	ldi	r21, 0x40	; 64
    27ee:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
    27f2:	20 e0       	ldi	r18, 0x00	; 0
    27f4:	30 e0       	ldi	r19, 0x00	; 0
    27f6:	44 e3       	ldi	r20, 0x34	; 52
    27f8:	53 e4       	ldi	r21, 0x43	; 67
    27fa:	0e 94 c3 28 	call	0x5186	; 0x5186 <__divsf3>
    27fe:	2b 01       	movw	r4, r22
    2800:	3c 01       	movw	r6, r24
	Complex roy_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(0,exp(-delta_float/2)),Complex(0,0)},
    2802:	90 58       	subi	r25, 0x80	; 128
    2804:	20 e0       	ldi	r18, 0x00	; 0
    2806:	30 e0       	ldi	r19, 0x00	; 0
    2808:	40 e0       	ldi	r20, 0x00	; 0
    280a:	5f e3       	ldi	r21, 0x3F	; 63
    280c:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
    2810:	0e 94 30 29 	call	0x5260	; 0x5260 <exp>
    2814:	8b 01       	movw	r16, r22
    2816:	9c 01       	movw	r18, r24
														 {Complex(0,0),		  		     Complex(0,exp(delta_float/2))}};
    2818:	40 e0       	ldi	r20, 0x00	; 0
    281a:	50 e0       	ldi	r21, 0x00	; 0
    281c:	ba 01       	movw	r22, r20
    281e:	ce 01       	movw	r24, r28
    2820:	01 96       	adiw	r24, 0x01	; 1
    2822:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2826:	00 e0       	ldi	r16, 0x00	; 0
    2828:	10 e0       	ldi	r17, 0x00	; 0
    282a:	98 01       	movw	r18, r16
    282c:	b9 01       	movw	r22, r18
    282e:	a8 01       	movw	r20, r16
    2830:	ce 01       	movw	r24, r28
    2832:	09 96       	adiw	r24, 0x09	; 9
    2834:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2838:	00 e0       	ldi	r16, 0x00	; 0
    283a:	10 e0       	ldi	r17, 0x00	; 0
    283c:	98 01       	movw	r18, r16
    283e:	b9 01       	movw	r22, r18
    2840:	a8 01       	movw	r20, r16
    2842:	ce 01       	movw	r24, r28
    2844:	41 96       	adiw	r24, 0x11	; 17
    2846:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    284a:	20 e0       	ldi	r18, 0x00	; 0
    284c:	30 e0       	ldi	r19, 0x00	; 0
    284e:	40 e0       	ldi	r20, 0x00	; 0
    2850:	5f e3       	ldi	r21, 0x3F	; 63
    2852:	c3 01       	movw	r24, r6
    2854:	b2 01       	movw	r22, r4
    2856:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
    285a:	0e 94 30 29 	call	0x5260	; 0x5260 <exp>
    285e:	8b 01       	movw	r16, r22
    2860:	9c 01       	movw	r18, r24
    2862:	40 e0       	ldi	r20, 0x00	; 0
    2864:	50 e0       	ldi	r21, 0x00	; 0
    2866:	ba 01       	movw	r22, r20
    2868:	ce 01       	movw	r24, r28
    286a:	49 96       	adiw	r24, 0x19	; 25
    286c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    2870:	bc a2       	std	Y+36, r11	; 0x24
    2872:	ab a2       	std	Y+35, r10	; 0x23
    2874:	da a2       	std	Y+34, r13	; 0x22
    2876:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),roy_matrix),QB_SIZE1);
    2878:	9e 01       	movw	r18, r28
    287a:	2f 5d       	subi	r18, 0xDF	; 223
    287c:	3f 4f       	sbci	r19, 0xFF	; 255
    287e:	ae 01       	movw	r20, r28
    2880:	4d 5d       	subi	r20, 0xDD	; 221
    2882:	5f 4f       	sbci	r21, 0xFF	; 255
    2884:	61 e0       	ldi	r22, 0x01	; 1
    2886:	70 e0       	ldi	r23, 0x00	; 0
    2888:	c7 01       	movw	r24, r14
    288a:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    288e:	ae 01       	movw	r20, r28
    2890:	4f 5f       	subi	r20, 0xFF	; 255
    2892:	5f 4f       	sbci	r21, 0xFF	; 255
    2894:	bc 01       	movw	r22, r24
    2896:	c7 01       	movw	r24, r14
    2898:	0e 94 ff 06 	call	0xdfe	; 0xdfe <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    289c:	41 e0       	ldi	r20, 0x01	; 1
    289e:	50 e0       	ldi	r21, 0x00	; 0
    28a0:	bc 01       	movw	r22, r24
    28a2:	c7 01       	movw	r24, r14
    28a4:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    28a8:	a4 96       	adiw	r28, 0x24	; 36
    28aa:	0f b6       	in	r0, 0x3f	; 63
    28ac:	f8 94       	cli
    28ae:	de bf       	out	0x3e, r29	; 62
    28b0:	0f be       	out	0x3f, r0	; 63
    28b2:	cd bf       	out	0x3d, r28	; 61
    28b4:	df 91       	pop	r29
    28b6:	cf 91       	pop	r28
    28b8:	1f 91       	pop	r17
    28ba:	0f 91       	pop	r16
    28bc:	ff 90       	pop	r15
    28be:	ef 90       	pop	r14
    28c0:	df 90       	pop	r13
    28c2:	cf 90       	pop	r12
    28c4:	bf 90       	pop	r11
    28c6:	af 90       	pop	r10
    28c8:	7f 90       	pop	r7
    28ca:	6f 90       	pop	r6
    28cc:	5f 90       	pop	r5
    28ce:	4f 90       	pop	r4
    28d0:	08 95       	ret

000028d2 <_ZN5Gates3CSWEiiiiii>:
int * Gates::CSW(int theta1, int phi1,int theta2,int phi2,int theta3,int phi3){
    28d2:	2f 92       	push	r2
    28d4:	3f 92       	push	r3
    28d6:	4f 92       	push	r4
    28d8:	5f 92       	push	r5
    28da:	6f 92       	push	r6
    28dc:	7f 92       	push	r7
    28de:	8f 92       	push	r8
    28e0:	9f 92       	push	r9
    28e2:	af 92       	push	r10
    28e4:	bf 92       	push	r11
    28e6:	cf 92       	push	r12
    28e8:	df 92       	push	r13
    28ea:	ef 92       	push	r14
    28ec:	ff 92       	push	r15
    28ee:	0f 93       	push	r16
    28f0:	1f 93       	push	r17
    28f2:	cf 93       	push	r28
    28f4:	df 93       	push	r29
    28f6:	cd b7       	in	r28, 0x3d	; 61
    28f8:	de b7       	in	r29, 0x3e	; 62
    28fa:	cc 50       	subi	r28, 0x0C	; 12
    28fc:	d2 40       	sbci	r29, 0x02	; 2
    28fe:	0f b6       	in	r0, 0x3f	; 63
    2900:	f8 94       	cli
    2902:	de bf       	out	0x3e, r29	; 62
    2904:	0f be       	out	0x3f, r0	; 63
    2906:	cd bf       	out	0x3d, r28	; 61
    2908:	5c 01       	movw	r10, r24
    290a:	3b 01       	movw	r6, r22
    290c:	2a 01       	movw	r4, r20
    290e:	49 01       	movw	r8, r18
    2910:	18 01       	movw	r2, r16
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)}};
    2912:	00 e0       	ldi	r16, 0x00	; 0
    2914:	10 e0       	ldi	r17, 0x00	; 0
    2916:	98 01       	movw	r18, r16
    2918:	40 e0       	ldi	r20, 0x00	; 0
    291a:	50 e0       	ldi	r21, 0x00	; 0
    291c:	60 e8       	ldi	r22, 0x80	; 128
    291e:	7f e3       	ldi	r23, 0x3F	; 63
    2920:	ce 01       	movw	r24, r28
    2922:	01 96       	adiw	r24, 0x01	; 1
    2924:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2928:	00 e0       	ldi	r16, 0x00	; 0
    292a:	10 e0       	ldi	r17, 0x00	; 0
    292c:	98 01       	movw	r18, r16
    292e:	b9 01       	movw	r22, r18
    2930:	a8 01       	movw	r20, r16
    2932:	ce 01       	movw	r24, r28
    2934:	09 96       	adiw	r24, 0x09	; 9
    2936:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    293a:	00 e0       	ldi	r16, 0x00	; 0
    293c:	10 e0       	ldi	r17, 0x00	; 0
    293e:	98 01       	movw	r18, r16
    2940:	b9 01       	movw	r22, r18
    2942:	a8 01       	movw	r20, r16
    2944:	ce 01       	movw	r24, r28
    2946:	41 96       	adiw	r24, 0x11	; 17
    2948:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    294c:	00 e0       	ldi	r16, 0x00	; 0
    294e:	10 e0       	ldi	r17, 0x00	; 0
    2950:	98 01       	movw	r18, r16
    2952:	b9 01       	movw	r22, r18
    2954:	a8 01       	movw	r20, r16
    2956:	ce 01       	movw	r24, r28
    2958:	49 96       	adiw	r24, 0x19	; 25
    295a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    295e:	00 e0       	ldi	r16, 0x00	; 0
    2960:	10 e0       	ldi	r17, 0x00	; 0
    2962:	98 01       	movw	r18, r16
    2964:	b9 01       	movw	r22, r18
    2966:	a8 01       	movw	r20, r16
    2968:	ce 01       	movw	r24, r28
    296a:	81 96       	adiw	r24, 0x21	; 33
    296c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2970:	00 e0       	ldi	r16, 0x00	; 0
    2972:	10 e0       	ldi	r17, 0x00	; 0
    2974:	98 01       	movw	r18, r16
    2976:	b9 01       	movw	r22, r18
    2978:	a8 01       	movw	r20, r16
    297a:	ce 01       	movw	r24, r28
    297c:	89 96       	adiw	r24, 0x29	; 41
    297e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2982:	00 e0       	ldi	r16, 0x00	; 0
    2984:	10 e0       	ldi	r17, 0x00	; 0
    2986:	98 01       	movw	r18, r16
    2988:	b9 01       	movw	r22, r18
    298a:	a8 01       	movw	r20, r16
    298c:	ce 01       	movw	r24, r28
    298e:	c1 96       	adiw	r24, 0x31	; 49
    2990:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2994:	00 e0       	ldi	r16, 0x00	; 0
    2996:	10 e0       	ldi	r17, 0x00	; 0
    2998:	98 01       	movw	r18, r16
    299a:	b9 01       	movw	r22, r18
    299c:	a8 01       	movw	r20, r16
    299e:	ce 01       	movw	r24, r28
    29a0:	c9 96       	adiw	r24, 0x39	; 57
    29a2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    29a6:	00 e0       	ldi	r16, 0x00	; 0
    29a8:	10 e0       	ldi	r17, 0x00	; 0
    29aa:	98 01       	movw	r18, r16
    29ac:	b9 01       	movw	r22, r18
    29ae:	a8 01       	movw	r20, r16
    29b0:	ce 01       	movw	r24, r28
    29b2:	8f 5b       	subi	r24, 0xBF	; 191
    29b4:	9f 4f       	sbci	r25, 0xFF	; 255
    29b6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    29ba:	00 e0       	ldi	r16, 0x00	; 0
    29bc:	10 e0       	ldi	r17, 0x00	; 0
    29be:	98 01       	movw	r18, r16
    29c0:	40 e0       	ldi	r20, 0x00	; 0
    29c2:	50 e0       	ldi	r21, 0x00	; 0
    29c4:	60 e8       	ldi	r22, 0x80	; 128
    29c6:	7f e3       	ldi	r23, 0x3F	; 63
    29c8:	ce 01       	movw	r24, r28
    29ca:	87 5b       	subi	r24, 0xB7	; 183
    29cc:	9f 4f       	sbci	r25, 0xFF	; 255
    29ce:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    29d2:	00 e0       	ldi	r16, 0x00	; 0
    29d4:	10 e0       	ldi	r17, 0x00	; 0
    29d6:	98 01       	movw	r18, r16
    29d8:	b9 01       	movw	r22, r18
    29da:	a8 01       	movw	r20, r16
    29dc:	ce 01       	movw	r24, r28
    29de:	8f 5a       	subi	r24, 0xAF	; 175
    29e0:	9f 4f       	sbci	r25, 0xFF	; 255
    29e2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    29e6:	00 e0       	ldi	r16, 0x00	; 0
    29e8:	10 e0       	ldi	r17, 0x00	; 0
    29ea:	98 01       	movw	r18, r16
    29ec:	b9 01       	movw	r22, r18
    29ee:	a8 01       	movw	r20, r16
    29f0:	ce 01       	movw	r24, r28
    29f2:	87 5a       	subi	r24, 0xA7	; 167
    29f4:	9f 4f       	sbci	r25, 0xFF	; 255
    29f6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    29fa:	00 e0       	ldi	r16, 0x00	; 0
    29fc:	10 e0       	ldi	r17, 0x00	; 0
    29fe:	98 01       	movw	r18, r16
    2a00:	b9 01       	movw	r22, r18
    2a02:	a8 01       	movw	r20, r16
    2a04:	ce 01       	movw	r24, r28
    2a06:	8f 59       	subi	r24, 0x9F	; 159
    2a08:	9f 4f       	sbci	r25, 0xFF	; 255
    2a0a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a0e:	00 e0       	ldi	r16, 0x00	; 0
    2a10:	10 e0       	ldi	r17, 0x00	; 0
    2a12:	98 01       	movw	r18, r16
    2a14:	b9 01       	movw	r22, r18
    2a16:	a8 01       	movw	r20, r16
    2a18:	ce 01       	movw	r24, r28
    2a1a:	87 59       	subi	r24, 0x97	; 151
    2a1c:	9f 4f       	sbci	r25, 0xFF	; 255
    2a1e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a22:	00 e0       	ldi	r16, 0x00	; 0
    2a24:	10 e0       	ldi	r17, 0x00	; 0
    2a26:	98 01       	movw	r18, r16
    2a28:	b9 01       	movw	r22, r18
    2a2a:	a8 01       	movw	r20, r16
    2a2c:	ce 01       	movw	r24, r28
    2a2e:	8f 58       	subi	r24, 0x8F	; 143
    2a30:	9f 4f       	sbci	r25, 0xFF	; 255
    2a32:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a36:	00 e0       	ldi	r16, 0x00	; 0
    2a38:	10 e0       	ldi	r17, 0x00	; 0
    2a3a:	98 01       	movw	r18, r16
    2a3c:	b9 01       	movw	r22, r18
    2a3e:	a8 01       	movw	r20, r16
    2a40:	ce 01       	movw	r24, r28
    2a42:	87 58       	subi	r24, 0x87	; 135
    2a44:	9f 4f       	sbci	r25, 0xFF	; 255
    2a46:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a4a:	00 e0       	ldi	r16, 0x00	; 0
    2a4c:	10 e0       	ldi	r17, 0x00	; 0
    2a4e:	98 01       	movw	r18, r16
    2a50:	b9 01       	movw	r22, r18
    2a52:	a8 01       	movw	r20, r16
    2a54:	ce 01       	movw	r24, r28
    2a56:	8f 57       	subi	r24, 0x7F	; 127
    2a58:	9f 4f       	sbci	r25, 0xFF	; 255
    2a5a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a5e:	00 e0       	ldi	r16, 0x00	; 0
    2a60:	10 e0       	ldi	r17, 0x00	; 0
    2a62:	98 01       	movw	r18, r16
    2a64:	b9 01       	movw	r22, r18
    2a66:	a8 01       	movw	r20, r16
    2a68:	ce 01       	movw	r24, r28
    2a6a:	87 57       	subi	r24, 0x77	; 119
    2a6c:	9f 4f       	sbci	r25, 0xFF	; 255
    2a6e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a72:	00 e0       	ldi	r16, 0x00	; 0
    2a74:	10 e0       	ldi	r17, 0x00	; 0
    2a76:	98 01       	movw	r18, r16
    2a78:	40 e0       	ldi	r20, 0x00	; 0
    2a7a:	50 e0       	ldi	r21, 0x00	; 0
    2a7c:	60 e8       	ldi	r22, 0x80	; 128
    2a7e:	7f e3       	ldi	r23, 0x3F	; 63
    2a80:	ce 01       	movw	r24, r28
    2a82:	8f 56       	subi	r24, 0x6F	; 111
    2a84:	9f 4f       	sbci	r25, 0xFF	; 255
    2a86:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a8a:	00 e0       	ldi	r16, 0x00	; 0
    2a8c:	10 e0       	ldi	r17, 0x00	; 0
    2a8e:	98 01       	movw	r18, r16
    2a90:	b9 01       	movw	r22, r18
    2a92:	a8 01       	movw	r20, r16
    2a94:	ce 01       	movw	r24, r28
    2a96:	87 56       	subi	r24, 0x67	; 103
    2a98:	9f 4f       	sbci	r25, 0xFF	; 255
    2a9a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a9e:	00 e0       	ldi	r16, 0x00	; 0
    2aa0:	10 e0       	ldi	r17, 0x00	; 0
    2aa2:	98 01       	movw	r18, r16
    2aa4:	b9 01       	movw	r22, r18
    2aa6:	a8 01       	movw	r20, r16
    2aa8:	ce 01       	movw	r24, r28
    2aaa:	8f 55       	subi	r24, 0x5F	; 95
    2aac:	9f 4f       	sbci	r25, 0xFF	; 255
    2aae:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2ab2:	00 e0       	ldi	r16, 0x00	; 0
    2ab4:	10 e0       	ldi	r17, 0x00	; 0
    2ab6:	98 01       	movw	r18, r16
    2ab8:	b9 01       	movw	r22, r18
    2aba:	a8 01       	movw	r20, r16
    2abc:	ce 01       	movw	r24, r28
    2abe:	87 55       	subi	r24, 0x57	; 87
    2ac0:	9f 4f       	sbci	r25, 0xFF	; 255
    2ac2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2ac6:	00 e0       	ldi	r16, 0x00	; 0
    2ac8:	10 e0       	ldi	r17, 0x00	; 0
    2aca:	98 01       	movw	r18, r16
    2acc:	b9 01       	movw	r22, r18
    2ace:	a8 01       	movw	r20, r16
    2ad0:	ce 01       	movw	r24, r28
    2ad2:	8f 54       	subi	r24, 0x4F	; 79
    2ad4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ad6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2ada:	00 e0       	ldi	r16, 0x00	; 0
    2adc:	10 e0       	ldi	r17, 0x00	; 0
    2ade:	98 01       	movw	r18, r16
    2ae0:	b9 01       	movw	r22, r18
    2ae2:	a8 01       	movw	r20, r16
    2ae4:	ce 01       	movw	r24, r28
    2ae6:	87 54       	subi	r24, 0x47	; 71
    2ae8:	9f 4f       	sbci	r25, 0xFF	; 255
    2aea:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2aee:	00 e0       	ldi	r16, 0x00	; 0
    2af0:	10 e0       	ldi	r17, 0x00	; 0
    2af2:	98 01       	movw	r18, r16
    2af4:	b9 01       	movw	r22, r18
    2af6:	a8 01       	movw	r20, r16
    2af8:	ce 01       	movw	r24, r28
    2afa:	8f 53       	subi	r24, 0x3F	; 63
    2afc:	9f 4f       	sbci	r25, 0xFF	; 255
    2afe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b02:	00 e0       	ldi	r16, 0x00	; 0
    2b04:	10 e0       	ldi	r17, 0x00	; 0
    2b06:	98 01       	movw	r18, r16
    2b08:	b9 01       	movw	r22, r18
    2b0a:	a8 01       	movw	r20, r16
    2b0c:	ce 01       	movw	r24, r28
    2b0e:	87 53       	subi	r24, 0x37	; 55
    2b10:	9f 4f       	sbci	r25, 0xFF	; 255
    2b12:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b16:	00 e0       	ldi	r16, 0x00	; 0
    2b18:	10 e0       	ldi	r17, 0x00	; 0
    2b1a:	98 01       	movw	r18, r16
    2b1c:	b9 01       	movw	r22, r18
    2b1e:	a8 01       	movw	r20, r16
    2b20:	ce 01       	movw	r24, r28
    2b22:	8f 52       	subi	r24, 0x2F	; 47
    2b24:	9f 4f       	sbci	r25, 0xFF	; 255
    2b26:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b2a:	00 e0       	ldi	r16, 0x00	; 0
    2b2c:	10 e0       	ldi	r17, 0x00	; 0
    2b2e:	98 01       	movw	r18, r16
    2b30:	40 e0       	ldi	r20, 0x00	; 0
    2b32:	50 e0       	ldi	r21, 0x00	; 0
    2b34:	60 e8       	ldi	r22, 0x80	; 128
    2b36:	7f e3       	ldi	r23, 0x3F	; 63
    2b38:	ce 01       	movw	r24, r28
    2b3a:	87 52       	subi	r24, 0x27	; 39
    2b3c:	9f 4f       	sbci	r25, 0xFF	; 255
    2b3e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b42:	00 e0       	ldi	r16, 0x00	; 0
    2b44:	10 e0       	ldi	r17, 0x00	; 0
    2b46:	98 01       	movw	r18, r16
    2b48:	b9 01       	movw	r22, r18
    2b4a:	a8 01       	movw	r20, r16
    2b4c:	ce 01       	movw	r24, r28
    2b4e:	8f 51       	subi	r24, 0x1F	; 31
    2b50:	9f 4f       	sbci	r25, 0xFF	; 255
    2b52:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b56:	00 e0       	ldi	r16, 0x00	; 0
    2b58:	10 e0       	ldi	r17, 0x00	; 0
    2b5a:	98 01       	movw	r18, r16
    2b5c:	b9 01       	movw	r22, r18
    2b5e:	a8 01       	movw	r20, r16
    2b60:	ce 01       	movw	r24, r28
    2b62:	87 51       	subi	r24, 0x17	; 23
    2b64:	9f 4f       	sbci	r25, 0xFF	; 255
    2b66:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b6a:	00 e0       	ldi	r16, 0x00	; 0
    2b6c:	10 e0       	ldi	r17, 0x00	; 0
    2b6e:	98 01       	movw	r18, r16
    2b70:	b9 01       	movw	r22, r18
    2b72:	a8 01       	movw	r20, r16
    2b74:	ce 01       	movw	r24, r28
    2b76:	8f 50       	subi	r24, 0x0F	; 15
    2b78:	9f 4f       	sbci	r25, 0xFF	; 255
    2b7a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b7e:	00 e0       	ldi	r16, 0x00	; 0
    2b80:	10 e0       	ldi	r17, 0x00	; 0
    2b82:	98 01       	movw	r18, r16
    2b84:	b9 01       	movw	r22, r18
    2b86:	a8 01       	movw	r20, r16
    2b88:	ce 01       	movw	r24, r28
    2b8a:	87 50       	subi	r24, 0x07	; 7
    2b8c:	9f 4f       	sbci	r25, 0xFF	; 255
    2b8e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b92:	00 e0       	ldi	r16, 0x00	; 0
    2b94:	10 e0       	ldi	r17, 0x00	; 0
    2b96:	98 01       	movw	r18, r16
    2b98:	b9 01       	movw	r22, r18
    2b9a:	a8 01       	movw	r20, r16
    2b9c:	ce 01       	movw	r24, r28
    2b9e:	8f 5f       	subi	r24, 0xFF	; 255
    2ba0:	9e 4f       	sbci	r25, 0xFE	; 254
    2ba2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2ba6:	00 e0       	ldi	r16, 0x00	; 0
    2ba8:	10 e0       	ldi	r17, 0x00	; 0
    2baa:	98 01       	movw	r18, r16
    2bac:	b9 01       	movw	r22, r18
    2bae:	a8 01       	movw	r20, r16
    2bb0:	ce 01       	movw	r24, r28
    2bb2:	87 5f       	subi	r24, 0xF7	; 247
    2bb4:	9e 4f       	sbci	r25, 0xFE	; 254
    2bb6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2bba:	00 e0       	ldi	r16, 0x00	; 0
    2bbc:	10 e0       	ldi	r17, 0x00	; 0
    2bbe:	98 01       	movw	r18, r16
    2bc0:	b9 01       	movw	r22, r18
    2bc2:	a8 01       	movw	r20, r16
    2bc4:	ce 01       	movw	r24, r28
    2bc6:	8f 5e       	subi	r24, 0xEF	; 239
    2bc8:	9e 4f       	sbci	r25, 0xFE	; 254
    2bca:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2bce:	00 e0       	ldi	r16, 0x00	; 0
    2bd0:	10 e0       	ldi	r17, 0x00	; 0
    2bd2:	98 01       	movw	r18, r16
    2bd4:	b9 01       	movw	r22, r18
    2bd6:	a8 01       	movw	r20, r16
    2bd8:	ce 01       	movw	r24, r28
    2bda:	87 5e       	subi	r24, 0xE7	; 231
    2bdc:	9e 4f       	sbci	r25, 0xFE	; 254
    2bde:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2be2:	00 e0       	ldi	r16, 0x00	; 0
    2be4:	10 e0       	ldi	r17, 0x00	; 0
    2be6:	98 01       	movw	r18, r16
    2be8:	40 e0       	ldi	r20, 0x00	; 0
    2bea:	50 e0       	ldi	r21, 0x00	; 0
    2bec:	60 e8       	ldi	r22, 0x80	; 128
    2bee:	7f e3       	ldi	r23, 0x3F	; 63
    2bf0:	ce 01       	movw	r24, r28
    2bf2:	8f 5d       	subi	r24, 0xDF	; 223
    2bf4:	9e 4f       	sbci	r25, 0xFE	; 254
    2bf6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2bfa:	00 e0       	ldi	r16, 0x00	; 0
    2bfc:	10 e0       	ldi	r17, 0x00	; 0
    2bfe:	98 01       	movw	r18, r16
    2c00:	b9 01       	movw	r22, r18
    2c02:	a8 01       	movw	r20, r16
    2c04:	ce 01       	movw	r24, r28
    2c06:	87 5d       	subi	r24, 0xD7	; 215
    2c08:	9e 4f       	sbci	r25, 0xFE	; 254
    2c0a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c0e:	00 e0       	ldi	r16, 0x00	; 0
    2c10:	10 e0       	ldi	r17, 0x00	; 0
    2c12:	98 01       	movw	r18, r16
    2c14:	b9 01       	movw	r22, r18
    2c16:	a8 01       	movw	r20, r16
    2c18:	ce 01       	movw	r24, r28
    2c1a:	8f 5c       	subi	r24, 0xCF	; 207
    2c1c:	9e 4f       	sbci	r25, 0xFE	; 254
    2c1e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c22:	00 e0       	ldi	r16, 0x00	; 0
    2c24:	10 e0       	ldi	r17, 0x00	; 0
    2c26:	98 01       	movw	r18, r16
    2c28:	b9 01       	movw	r22, r18
    2c2a:	a8 01       	movw	r20, r16
    2c2c:	ce 01       	movw	r24, r28
    2c2e:	87 5c       	subi	r24, 0xC7	; 199
    2c30:	9e 4f       	sbci	r25, 0xFE	; 254
    2c32:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c36:	00 e0       	ldi	r16, 0x00	; 0
    2c38:	10 e0       	ldi	r17, 0x00	; 0
    2c3a:	98 01       	movw	r18, r16
    2c3c:	b9 01       	movw	r22, r18
    2c3e:	a8 01       	movw	r20, r16
    2c40:	ce 01       	movw	r24, r28
    2c42:	8f 5b       	subi	r24, 0xBF	; 191
    2c44:	9e 4f       	sbci	r25, 0xFE	; 254
    2c46:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c4a:	00 e0       	ldi	r16, 0x00	; 0
    2c4c:	10 e0       	ldi	r17, 0x00	; 0
    2c4e:	98 01       	movw	r18, r16
    2c50:	b9 01       	movw	r22, r18
    2c52:	a8 01       	movw	r20, r16
    2c54:	ce 01       	movw	r24, r28
    2c56:	87 5b       	subi	r24, 0xB7	; 183
    2c58:	9e 4f       	sbci	r25, 0xFE	; 254
    2c5a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c5e:	00 e0       	ldi	r16, 0x00	; 0
    2c60:	10 e0       	ldi	r17, 0x00	; 0
    2c62:	98 01       	movw	r18, r16
    2c64:	b9 01       	movw	r22, r18
    2c66:	a8 01       	movw	r20, r16
    2c68:	ce 01       	movw	r24, r28
    2c6a:	8f 5a       	subi	r24, 0xAF	; 175
    2c6c:	9e 4f       	sbci	r25, 0xFE	; 254
    2c6e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c72:	00 e0       	ldi	r16, 0x00	; 0
    2c74:	10 e0       	ldi	r17, 0x00	; 0
    2c76:	98 01       	movw	r18, r16
    2c78:	b9 01       	movw	r22, r18
    2c7a:	a8 01       	movw	r20, r16
    2c7c:	ce 01       	movw	r24, r28
    2c7e:	87 5a       	subi	r24, 0xA7	; 167
    2c80:	9e 4f       	sbci	r25, 0xFE	; 254
    2c82:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c86:	00 e0       	ldi	r16, 0x00	; 0
    2c88:	10 e0       	ldi	r17, 0x00	; 0
    2c8a:	98 01       	movw	r18, r16
    2c8c:	b9 01       	movw	r22, r18
    2c8e:	a8 01       	movw	r20, r16
    2c90:	ce 01       	movw	r24, r28
    2c92:	8f 59       	subi	r24, 0x9F	; 159
    2c94:	9e 4f       	sbci	r25, 0xFE	; 254
    2c96:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c9a:	00 e0       	ldi	r16, 0x00	; 0
    2c9c:	10 e0       	ldi	r17, 0x00	; 0
    2c9e:	98 01       	movw	r18, r16
    2ca0:	b9 01       	movw	r22, r18
    2ca2:	a8 01       	movw	r20, r16
    2ca4:	ce 01       	movw	r24, r28
    2ca6:	87 59       	subi	r24, 0x97	; 151
    2ca8:	9e 4f       	sbci	r25, 0xFE	; 254
    2caa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2cae:	00 e0       	ldi	r16, 0x00	; 0
    2cb0:	10 e0       	ldi	r17, 0x00	; 0
    2cb2:	98 01       	movw	r18, r16
    2cb4:	40 e0       	ldi	r20, 0x00	; 0
    2cb6:	50 e0       	ldi	r21, 0x00	; 0
    2cb8:	60 e8       	ldi	r22, 0x80	; 128
    2cba:	7f e3       	ldi	r23, 0x3F	; 63
    2cbc:	ce 01       	movw	r24, r28
    2cbe:	8f 58       	subi	r24, 0x8F	; 143
    2cc0:	9e 4f       	sbci	r25, 0xFE	; 254
    2cc2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2cc6:	00 e0       	ldi	r16, 0x00	; 0
    2cc8:	10 e0       	ldi	r17, 0x00	; 0
    2cca:	98 01       	movw	r18, r16
    2ccc:	b9 01       	movw	r22, r18
    2cce:	a8 01       	movw	r20, r16
    2cd0:	ce 01       	movw	r24, r28
    2cd2:	87 58       	subi	r24, 0x87	; 135
    2cd4:	9e 4f       	sbci	r25, 0xFE	; 254
    2cd6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2cda:	00 e0       	ldi	r16, 0x00	; 0
    2cdc:	10 e0       	ldi	r17, 0x00	; 0
    2cde:	98 01       	movw	r18, r16
    2ce0:	b9 01       	movw	r22, r18
    2ce2:	a8 01       	movw	r20, r16
    2ce4:	ce 01       	movw	r24, r28
    2ce6:	8f 57       	subi	r24, 0x7F	; 127
    2ce8:	9e 4f       	sbci	r25, 0xFE	; 254
    2cea:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2cee:	00 e0       	ldi	r16, 0x00	; 0
    2cf0:	10 e0       	ldi	r17, 0x00	; 0
    2cf2:	98 01       	movw	r18, r16
    2cf4:	b9 01       	movw	r22, r18
    2cf6:	a8 01       	movw	r20, r16
    2cf8:	ce 01       	movw	r24, r28
    2cfa:	87 57       	subi	r24, 0x77	; 119
    2cfc:	9e 4f       	sbci	r25, 0xFE	; 254
    2cfe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d02:	00 e0       	ldi	r16, 0x00	; 0
    2d04:	10 e0       	ldi	r17, 0x00	; 0
    2d06:	98 01       	movw	r18, r16
    2d08:	b9 01       	movw	r22, r18
    2d0a:	a8 01       	movw	r20, r16
    2d0c:	ce 01       	movw	r24, r28
    2d0e:	8f 56       	subi	r24, 0x6F	; 111
    2d10:	9e 4f       	sbci	r25, 0xFE	; 254
    2d12:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d16:	00 e0       	ldi	r16, 0x00	; 0
    2d18:	10 e0       	ldi	r17, 0x00	; 0
    2d1a:	98 01       	movw	r18, r16
    2d1c:	b9 01       	movw	r22, r18
    2d1e:	a8 01       	movw	r20, r16
    2d20:	ce 01       	movw	r24, r28
    2d22:	87 56       	subi	r24, 0x67	; 103
    2d24:	9e 4f       	sbci	r25, 0xFE	; 254
    2d26:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d2a:	00 e0       	ldi	r16, 0x00	; 0
    2d2c:	10 e0       	ldi	r17, 0x00	; 0
    2d2e:	98 01       	movw	r18, r16
    2d30:	b9 01       	movw	r22, r18
    2d32:	a8 01       	movw	r20, r16
    2d34:	ce 01       	movw	r24, r28
    2d36:	8f 55       	subi	r24, 0x5F	; 95
    2d38:	9e 4f       	sbci	r25, 0xFE	; 254
    2d3a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d3e:	00 e0       	ldi	r16, 0x00	; 0
    2d40:	10 e0       	ldi	r17, 0x00	; 0
    2d42:	98 01       	movw	r18, r16
    2d44:	40 e0       	ldi	r20, 0x00	; 0
    2d46:	50 e0       	ldi	r21, 0x00	; 0
    2d48:	60 e8       	ldi	r22, 0x80	; 128
    2d4a:	7f e3       	ldi	r23, 0x3F	; 63
    2d4c:	ce 01       	movw	r24, r28
    2d4e:	87 55       	subi	r24, 0x57	; 87
    2d50:	9e 4f       	sbci	r25, 0xFE	; 254
    2d52:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d56:	00 e0       	ldi	r16, 0x00	; 0
    2d58:	10 e0       	ldi	r17, 0x00	; 0
    2d5a:	98 01       	movw	r18, r16
    2d5c:	b9 01       	movw	r22, r18
    2d5e:	a8 01       	movw	r20, r16
    2d60:	ce 01       	movw	r24, r28
    2d62:	8f 54       	subi	r24, 0x4F	; 79
    2d64:	9e 4f       	sbci	r25, 0xFE	; 254
    2d66:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d6a:	00 e0       	ldi	r16, 0x00	; 0
    2d6c:	10 e0       	ldi	r17, 0x00	; 0
    2d6e:	98 01       	movw	r18, r16
    2d70:	b9 01       	movw	r22, r18
    2d72:	a8 01       	movw	r20, r16
    2d74:	ce 01       	movw	r24, r28
    2d76:	87 54       	subi	r24, 0x47	; 71
    2d78:	9e 4f       	sbci	r25, 0xFE	; 254
    2d7a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d7e:	00 e0       	ldi	r16, 0x00	; 0
    2d80:	10 e0       	ldi	r17, 0x00	; 0
    2d82:	98 01       	movw	r18, r16
    2d84:	b9 01       	movw	r22, r18
    2d86:	a8 01       	movw	r20, r16
    2d88:	ce 01       	movw	r24, r28
    2d8a:	8f 53       	subi	r24, 0x3F	; 63
    2d8c:	9e 4f       	sbci	r25, 0xFE	; 254
    2d8e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d92:	00 e0       	ldi	r16, 0x00	; 0
    2d94:	10 e0       	ldi	r17, 0x00	; 0
    2d96:	98 01       	movw	r18, r16
    2d98:	b9 01       	movw	r22, r18
    2d9a:	a8 01       	movw	r20, r16
    2d9c:	ce 01       	movw	r24, r28
    2d9e:	87 53       	subi	r24, 0x37	; 55
    2da0:	9e 4f       	sbci	r25, 0xFE	; 254
    2da2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2da6:	00 e0       	ldi	r16, 0x00	; 0
    2da8:	10 e0       	ldi	r17, 0x00	; 0
    2daa:	98 01       	movw	r18, r16
    2dac:	b9 01       	movw	r22, r18
    2dae:	a8 01       	movw	r20, r16
    2db0:	ce 01       	movw	r24, r28
    2db2:	8f 52       	subi	r24, 0x2F	; 47
    2db4:	9e 4f       	sbci	r25, 0xFE	; 254
    2db6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2dba:	00 e0       	ldi	r16, 0x00	; 0
    2dbc:	10 e0       	ldi	r17, 0x00	; 0
    2dbe:	98 01       	movw	r18, r16
    2dc0:	b9 01       	movw	r22, r18
    2dc2:	a8 01       	movw	r20, r16
    2dc4:	ce 01       	movw	r24, r28
    2dc6:	87 52       	subi	r24, 0x27	; 39
    2dc8:	9e 4f       	sbci	r25, 0xFE	; 254
    2dca:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2dce:	00 e0       	ldi	r16, 0x00	; 0
    2dd0:	10 e0       	ldi	r17, 0x00	; 0
    2dd2:	98 01       	movw	r18, r16
    2dd4:	b9 01       	movw	r22, r18
    2dd6:	a8 01       	movw	r20, r16
    2dd8:	ce 01       	movw	r24, r28
    2dda:	8f 51       	subi	r24, 0x1F	; 31
    2ddc:	9e 4f       	sbci	r25, 0xFE	; 254
    2dde:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2de2:	00 e0       	ldi	r16, 0x00	; 0
    2de4:	10 e0       	ldi	r17, 0x00	; 0
    2de6:	98 01       	movw	r18, r16
    2de8:	b9 01       	movw	r22, r18
    2dea:	a8 01       	movw	r20, r16
    2dec:	ce 01       	movw	r24, r28
    2dee:	87 51       	subi	r24, 0x17	; 23
    2df0:	9e 4f       	sbci	r25, 0xFE	; 254
    2df2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2df6:	00 e0       	ldi	r16, 0x00	; 0
    2df8:	10 e0       	ldi	r17, 0x00	; 0
    2dfa:	98 01       	movw	r18, r16
    2dfc:	b9 01       	movw	r22, r18
    2dfe:	a8 01       	movw	r20, r16
    2e00:	ce 01       	movw	r24, r28
    2e02:	8f 50       	subi	r24, 0x0F	; 15
    2e04:	9e 4f       	sbci	r25, 0xFE	; 254
    2e06:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2e0a:	00 e0       	ldi	r16, 0x00	; 0
    2e0c:	10 e0       	ldi	r17, 0x00	; 0
    2e0e:	98 01       	movw	r18, r16
    2e10:	40 e0       	ldi	r20, 0x00	; 0
    2e12:	50 e0       	ldi	r21, 0x00	; 0
    2e14:	60 e8       	ldi	r22, 0x80	; 128
    2e16:	7f e3       	ldi	r23, 0x3F	; 63
    2e18:	ce 01       	movw	r24, r28
    2e1a:	87 50       	subi	r24, 0x07	; 7
    2e1c:	9e 4f       	sbci	r25, 0xFE	; 254
    2e1e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE3]={theta1,theta2,theta3}; int phi_list[QB_SIZE3]={phi1,phi2,phi3};
    2e22:	c9 5f       	subi	r28, 0xF9	; 249
    2e24:	dd 4f       	sbci	r29, 0xFD	; 253
    2e26:	79 82       	std	Y+1, r7	; 0x01
    2e28:	68 82       	st	Y, r6
    2e2a:	c7 50       	subi	r28, 0x07	; 7
    2e2c:	d2 40       	sbci	r29, 0x02	; 2
    2e2e:	c7 5f       	subi	r28, 0xF7	; 247
    2e30:	dd 4f       	sbci	r29, 0xFD	; 253
    2e32:	99 82       	std	Y+1, r9	; 0x01
    2e34:	88 82       	st	Y, r8
    2e36:	c9 50       	subi	r28, 0x09	; 9
    2e38:	d2 40       	sbci	r29, 0x02	; 2
    2e3a:	c5 5f       	subi	r28, 0xF5	; 245
    2e3c:	dd 4f       	sbci	r29, 0xFD	; 253
    2e3e:	f9 82       	std	Y+1, r15	; 0x01
    2e40:	e8 82       	st	Y, r14
    2e42:	cb 50       	subi	r28, 0x0B	; 11
    2e44:	d2 40       	sbci	r29, 0x02	; 2
    2e46:	cf 5f       	subi	r28, 0xFF	; 255
    2e48:	dd 4f       	sbci	r29, 0xFD	; 253
    2e4a:	59 82       	std	Y+1, r5	; 0x01
    2e4c:	48 82       	st	Y, r4
    2e4e:	c1 50       	subi	r28, 0x01	; 1
    2e50:	d2 40       	sbci	r29, 0x02	; 2
    2e52:	cd 5f       	subi	r28, 0xFD	; 253
    2e54:	dd 4f       	sbci	r29, 0xFD	; 253
    2e56:	39 82       	std	Y+1, r3	; 0x01
    2e58:	28 82       	st	Y, r2
    2e5a:	c3 50       	subi	r28, 0x03	; 3
    2e5c:	d2 40       	sbci	r29, 0x02	; 2
    2e5e:	cb 5f       	subi	r28, 0xFB	; 251
    2e60:	dd 4f       	sbci	r29, 0xFD	; 253
    2e62:	d9 82       	std	Y+1, r13	; 0x01
    2e64:	c8 82       	st	Y, r12
    2e66:	c5 50       	subi	r28, 0x05	; 5
    2e68:	d2 40       	sbci	r29, 0x02	; 2
	return vec2ampl(multiply8x8(ampl2vec(QB_SIZE3,theta_list,phi_list),csw_matrix),QB_SIZE3);
    2e6a:	9e 01       	movw	r18, r28
    2e6c:	2f 5f       	subi	r18, 0xFF	; 255
    2e6e:	3d 4f       	sbci	r19, 0xFD	; 253
    2e70:	ae 01       	movw	r20, r28
    2e72:	49 5f       	subi	r20, 0xF9	; 249
    2e74:	5d 4f       	sbci	r21, 0xFD	; 253
    2e76:	63 e0       	ldi	r22, 0x03	; 3
    2e78:	70 e0       	ldi	r23, 0x00	; 0
    2e7a:	c5 01       	movw	r24, r10
    2e7c:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    2e80:	ae 01       	movw	r20, r28
    2e82:	4f 5f       	subi	r20, 0xFF	; 255
    2e84:	5f 4f       	sbci	r21, 0xFF	; 255
    2e86:	bc 01       	movw	r22, r24
    2e88:	c5 01       	movw	r24, r10
    2e8a:	0e 94 64 08 	call	0x10c8	; 0x10c8 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_>
    2e8e:	43 e0       	ldi	r20, 0x03	; 3
    2e90:	50 e0       	ldi	r21, 0x00	; 0
    2e92:	bc 01       	movw	r22, r24
    2e94:	c5 01       	movw	r24, r10
    2e96:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    2e9a:	c4 5f       	subi	r28, 0xF4	; 244
    2e9c:	dd 4f       	sbci	r29, 0xFD	; 253
    2e9e:	0f b6       	in	r0, 0x3f	; 63
    2ea0:	f8 94       	cli
    2ea2:	de bf       	out	0x3e, r29	; 62
    2ea4:	0f be       	out	0x3f, r0	; 63
    2ea6:	cd bf       	out	0x3d, r28	; 61
    2ea8:	df 91       	pop	r29
    2eaa:	cf 91       	pop	r28
    2eac:	1f 91       	pop	r17
    2eae:	0f 91       	pop	r16
    2eb0:	ff 90       	pop	r15
    2eb2:	ef 90       	pop	r14
    2eb4:	df 90       	pop	r13
    2eb6:	cf 90       	pop	r12
    2eb8:	bf 90       	pop	r11
    2eba:	af 90       	pop	r10
    2ebc:	9f 90       	pop	r9
    2ebe:	8f 90       	pop	r8
    2ec0:	7f 90       	pop	r7
    2ec2:	6f 90       	pop	r6
    2ec4:	5f 90       	pop	r5
    2ec6:	4f 90       	pop	r4
    2ec8:	3f 90       	pop	r3
    2eca:	2f 90       	pop	r2
    2ecc:	08 95       	ret

00002ece <_ZN5Gates3TOFEiiiiii>:
int * Gates::TOF(int theta1, int phi1,int theta2,int phi2,int theta3,int phi3){
    2ece:	2f 92       	push	r2
    2ed0:	3f 92       	push	r3
    2ed2:	4f 92       	push	r4
    2ed4:	5f 92       	push	r5
    2ed6:	6f 92       	push	r6
    2ed8:	7f 92       	push	r7
    2eda:	8f 92       	push	r8
    2edc:	9f 92       	push	r9
    2ede:	af 92       	push	r10
    2ee0:	bf 92       	push	r11
    2ee2:	cf 92       	push	r12
    2ee4:	df 92       	push	r13
    2ee6:	ef 92       	push	r14
    2ee8:	ff 92       	push	r15
    2eea:	0f 93       	push	r16
    2eec:	1f 93       	push	r17
    2eee:	cf 93       	push	r28
    2ef0:	df 93       	push	r29
    2ef2:	cd b7       	in	r28, 0x3d	; 61
    2ef4:	de b7       	in	r29, 0x3e	; 62
    2ef6:	cc 50       	subi	r28, 0x0C	; 12
    2ef8:	d2 40       	sbci	r29, 0x02	; 2
    2efa:	0f b6       	in	r0, 0x3f	; 63
    2efc:	f8 94       	cli
    2efe:	de bf       	out	0x3e, r29	; 62
    2f00:	0f be       	out	0x3f, r0	; 63
    2f02:	cd bf       	out	0x3d, r28	; 61
    2f04:	5c 01       	movw	r10, r24
    2f06:	3b 01       	movw	r6, r22
    2f08:	2a 01       	movw	r4, r20
    2f0a:	49 01       	movw	r8, r18
    2f0c:	18 01       	movw	r2, r16
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)}};
    2f0e:	00 e0       	ldi	r16, 0x00	; 0
    2f10:	10 e0       	ldi	r17, 0x00	; 0
    2f12:	98 01       	movw	r18, r16
    2f14:	40 e0       	ldi	r20, 0x00	; 0
    2f16:	50 e0       	ldi	r21, 0x00	; 0
    2f18:	60 e8       	ldi	r22, 0x80	; 128
    2f1a:	7f e3       	ldi	r23, 0x3F	; 63
    2f1c:	ce 01       	movw	r24, r28
    2f1e:	01 96       	adiw	r24, 0x01	; 1
    2f20:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2f24:	00 e0       	ldi	r16, 0x00	; 0
    2f26:	10 e0       	ldi	r17, 0x00	; 0
    2f28:	98 01       	movw	r18, r16
    2f2a:	b9 01       	movw	r22, r18
    2f2c:	a8 01       	movw	r20, r16
    2f2e:	ce 01       	movw	r24, r28
    2f30:	09 96       	adiw	r24, 0x09	; 9
    2f32:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2f36:	00 e0       	ldi	r16, 0x00	; 0
    2f38:	10 e0       	ldi	r17, 0x00	; 0
    2f3a:	98 01       	movw	r18, r16
    2f3c:	b9 01       	movw	r22, r18
    2f3e:	a8 01       	movw	r20, r16
    2f40:	ce 01       	movw	r24, r28
    2f42:	41 96       	adiw	r24, 0x11	; 17
    2f44:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2f48:	00 e0       	ldi	r16, 0x00	; 0
    2f4a:	10 e0       	ldi	r17, 0x00	; 0
    2f4c:	98 01       	movw	r18, r16
    2f4e:	b9 01       	movw	r22, r18
    2f50:	a8 01       	movw	r20, r16
    2f52:	ce 01       	movw	r24, r28
    2f54:	49 96       	adiw	r24, 0x19	; 25
    2f56:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2f5a:	00 e0       	ldi	r16, 0x00	; 0
    2f5c:	10 e0       	ldi	r17, 0x00	; 0
    2f5e:	98 01       	movw	r18, r16
    2f60:	b9 01       	movw	r22, r18
    2f62:	a8 01       	movw	r20, r16
    2f64:	ce 01       	movw	r24, r28
    2f66:	81 96       	adiw	r24, 0x21	; 33
    2f68:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2f6c:	00 e0       	ldi	r16, 0x00	; 0
    2f6e:	10 e0       	ldi	r17, 0x00	; 0
    2f70:	98 01       	movw	r18, r16
    2f72:	b9 01       	movw	r22, r18
    2f74:	a8 01       	movw	r20, r16
    2f76:	ce 01       	movw	r24, r28
    2f78:	89 96       	adiw	r24, 0x29	; 41
    2f7a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2f7e:	00 e0       	ldi	r16, 0x00	; 0
    2f80:	10 e0       	ldi	r17, 0x00	; 0
    2f82:	98 01       	movw	r18, r16
    2f84:	b9 01       	movw	r22, r18
    2f86:	a8 01       	movw	r20, r16
    2f88:	ce 01       	movw	r24, r28
    2f8a:	c1 96       	adiw	r24, 0x31	; 49
    2f8c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2f90:	00 e0       	ldi	r16, 0x00	; 0
    2f92:	10 e0       	ldi	r17, 0x00	; 0
    2f94:	98 01       	movw	r18, r16
    2f96:	b9 01       	movw	r22, r18
    2f98:	a8 01       	movw	r20, r16
    2f9a:	ce 01       	movw	r24, r28
    2f9c:	c9 96       	adiw	r24, 0x39	; 57
    2f9e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2fa2:	00 e0       	ldi	r16, 0x00	; 0
    2fa4:	10 e0       	ldi	r17, 0x00	; 0
    2fa6:	98 01       	movw	r18, r16
    2fa8:	b9 01       	movw	r22, r18
    2faa:	a8 01       	movw	r20, r16
    2fac:	ce 01       	movw	r24, r28
    2fae:	8f 5b       	subi	r24, 0xBF	; 191
    2fb0:	9f 4f       	sbci	r25, 0xFF	; 255
    2fb2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2fb6:	00 e0       	ldi	r16, 0x00	; 0
    2fb8:	10 e0       	ldi	r17, 0x00	; 0
    2fba:	98 01       	movw	r18, r16
    2fbc:	40 e0       	ldi	r20, 0x00	; 0
    2fbe:	50 e0       	ldi	r21, 0x00	; 0
    2fc0:	60 e8       	ldi	r22, 0x80	; 128
    2fc2:	7f e3       	ldi	r23, 0x3F	; 63
    2fc4:	ce 01       	movw	r24, r28
    2fc6:	87 5b       	subi	r24, 0xB7	; 183
    2fc8:	9f 4f       	sbci	r25, 0xFF	; 255
    2fca:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2fce:	00 e0       	ldi	r16, 0x00	; 0
    2fd0:	10 e0       	ldi	r17, 0x00	; 0
    2fd2:	98 01       	movw	r18, r16
    2fd4:	b9 01       	movw	r22, r18
    2fd6:	a8 01       	movw	r20, r16
    2fd8:	ce 01       	movw	r24, r28
    2fda:	8f 5a       	subi	r24, 0xAF	; 175
    2fdc:	9f 4f       	sbci	r25, 0xFF	; 255
    2fde:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2fe2:	00 e0       	ldi	r16, 0x00	; 0
    2fe4:	10 e0       	ldi	r17, 0x00	; 0
    2fe6:	98 01       	movw	r18, r16
    2fe8:	b9 01       	movw	r22, r18
    2fea:	a8 01       	movw	r20, r16
    2fec:	ce 01       	movw	r24, r28
    2fee:	87 5a       	subi	r24, 0xA7	; 167
    2ff0:	9f 4f       	sbci	r25, 0xFF	; 255
    2ff2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2ff6:	00 e0       	ldi	r16, 0x00	; 0
    2ff8:	10 e0       	ldi	r17, 0x00	; 0
    2ffa:	98 01       	movw	r18, r16
    2ffc:	b9 01       	movw	r22, r18
    2ffe:	a8 01       	movw	r20, r16
    3000:	ce 01       	movw	r24, r28
    3002:	8f 59       	subi	r24, 0x9F	; 159
    3004:	9f 4f       	sbci	r25, 0xFF	; 255
    3006:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    300a:	00 e0       	ldi	r16, 0x00	; 0
    300c:	10 e0       	ldi	r17, 0x00	; 0
    300e:	98 01       	movw	r18, r16
    3010:	b9 01       	movw	r22, r18
    3012:	a8 01       	movw	r20, r16
    3014:	ce 01       	movw	r24, r28
    3016:	87 59       	subi	r24, 0x97	; 151
    3018:	9f 4f       	sbci	r25, 0xFF	; 255
    301a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    301e:	00 e0       	ldi	r16, 0x00	; 0
    3020:	10 e0       	ldi	r17, 0x00	; 0
    3022:	98 01       	movw	r18, r16
    3024:	b9 01       	movw	r22, r18
    3026:	a8 01       	movw	r20, r16
    3028:	ce 01       	movw	r24, r28
    302a:	8f 58       	subi	r24, 0x8F	; 143
    302c:	9f 4f       	sbci	r25, 0xFF	; 255
    302e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3032:	00 e0       	ldi	r16, 0x00	; 0
    3034:	10 e0       	ldi	r17, 0x00	; 0
    3036:	98 01       	movw	r18, r16
    3038:	b9 01       	movw	r22, r18
    303a:	a8 01       	movw	r20, r16
    303c:	ce 01       	movw	r24, r28
    303e:	87 58       	subi	r24, 0x87	; 135
    3040:	9f 4f       	sbci	r25, 0xFF	; 255
    3042:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3046:	00 e0       	ldi	r16, 0x00	; 0
    3048:	10 e0       	ldi	r17, 0x00	; 0
    304a:	98 01       	movw	r18, r16
    304c:	b9 01       	movw	r22, r18
    304e:	a8 01       	movw	r20, r16
    3050:	ce 01       	movw	r24, r28
    3052:	8f 57       	subi	r24, 0x7F	; 127
    3054:	9f 4f       	sbci	r25, 0xFF	; 255
    3056:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    305a:	00 e0       	ldi	r16, 0x00	; 0
    305c:	10 e0       	ldi	r17, 0x00	; 0
    305e:	98 01       	movw	r18, r16
    3060:	b9 01       	movw	r22, r18
    3062:	a8 01       	movw	r20, r16
    3064:	ce 01       	movw	r24, r28
    3066:	87 57       	subi	r24, 0x77	; 119
    3068:	9f 4f       	sbci	r25, 0xFF	; 255
    306a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    306e:	00 e0       	ldi	r16, 0x00	; 0
    3070:	10 e0       	ldi	r17, 0x00	; 0
    3072:	98 01       	movw	r18, r16
    3074:	40 e0       	ldi	r20, 0x00	; 0
    3076:	50 e0       	ldi	r21, 0x00	; 0
    3078:	60 e8       	ldi	r22, 0x80	; 128
    307a:	7f e3       	ldi	r23, 0x3F	; 63
    307c:	ce 01       	movw	r24, r28
    307e:	8f 56       	subi	r24, 0x6F	; 111
    3080:	9f 4f       	sbci	r25, 0xFF	; 255
    3082:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3086:	00 e0       	ldi	r16, 0x00	; 0
    3088:	10 e0       	ldi	r17, 0x00	; 0
    308a:	98 01       	movw	r18, r16
    308c:	b9 01       	movw	r22, r18
    308e:	a8 01       	movw	r20, r16
    3090:	ce 01       	movw	r24, r28
    3092:	87 56       	subi	r24, 0x67	; 103
    3094:	9f 4f       	sbci	r25, 0xFF	; 255
    3096:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    309a:	00 e0       	ldi	r16, 0x00	; 0
    309c:	10 e0       	ldi	r17, 0x00	; 0
    309e:	98 01       	movw	r18, r16
    30a0:	b9 01       	movw	r22, r18
    30a2:	a8 01       	movw	r20, r16
    30a4:	ce 01       	movw	r24, r28
    30a6:	8f 55       	subi	r24, 0x5F	; 95
    30a8:	9f 4f       	sbci	r25, 0xFF	; 255
    30aa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    30ae:	00 e0       	ldi	r16, 0x00	; 0
    30b0:	10 e0       	ldi	r17, 0x00	; 0
    30b2:	98 01       	movw	r18, r16
    30b4:	b9 01       	movw	r22, r18
    30b6:	a8 01       	movw	r20, r16
    30b8:	ce 01       	movw	r24, r28
    30ba:	87 55       	subi	r24, 0x57	; 87
    30bc:	9f 4f       	sbci	r25, 0xFF	; 255
    30be:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    30c2:	00 e0       	ldi	r16, 0x00	; 0
    30c4:	10 e0       	ldi	r17, 0x00	; 0
    30c6:	98 01       	movw	r18, r16
    30c8:	b9 01       	movw	r22, r18
    30ca:	a8 01       	movw	r20, r16
    30cc:	ce 01       	movw	r24, r28
    30ce:	8f 54       	subi	r24, 0x4F	; 79
    30d0:	9f 4f       	sbci	r25, 0xFF	; 255
    30d2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    30d6:	00 e0       	ldi	r16, 0x00	; 0
    30d8:	10 e0       	ldi	r17, 0x00	; 0
    30da:	98 01       	movw	r18, r16
    30dc:	b9 01       	movw	r22, r18
    30de:	a8 01       	movw	r20, r16
    30e0:	ce 01       	movw	r24, r28
    30e2:	87 54       	subi	r24, 0x47	; 71
    30e4:	9f 4f       	sbci	r25, 0xFF	; 255
    30e6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    30ea:	00 e0       	ldi	r16, 0x00	; 0
    30ec:	10 e0       	ldi	r17, 0x00	; 0
    30ee:	98 01       	movw	r18, r16
    30f0:	b9 01       	movw	r22, r18
    30f2:	a8 01       	movw	r20, r16
    30f4:	ce 01       	movw	r24, r28
    30f6:	8f 53       	subi	r24, 0x3F	; 63
    30f8:	9f 4f       	sbci	r25, 0xFF	; 255
    30fa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    30fe:	00 e0       	ldi	r16, 0x00	; 0
    3100:	10 e0       	ldi	r17, 0x00	; 0
    3102:	98 01       	movw	r18, r16
    3104:	b9 01       	movw	r22, r18
    3106:	a8 01       	movw	r20, r16
    3108:	ce 01       	movw	r24, r28
    310a:	87 53       	subi	r24, 0x37	; 55
    310c:	9f 4f       	sbci	r25, 0xFF	; 255
    310e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3112:	00 e0       	ldi	r16, 0x00	; 0
    3114:	10 e0       	ldi	r17, 0x00	; 0
    3116:	98 01       	movw	r18, r16
    3118:	b9 01       	movw	r22, r18
    311a:	a8 01       	movw	r20, r16
    311c:	ce 01       	movw	r24, r28
    311e:	8f 52       	subi	r24, 0x2F	; 47
    3120:	9f 4f       	sbci	r25, 0xFF	; 255
    3122:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3126:	00 e0       	ldi	r16, 0x00	; 0
    3128:	10 e0       	ldi	r17, 0x00	; 0
    312a:	98 01       	movw	r18, r16
    312c:	40 e0       	ldi	r20, 0x00	; 0
    312e:	50 e0       	ldi	r21, 0x00	; 0
    3130:	60 e8       	ldi	r22, 0x80	; 128
    3132:	7f e3       	ldi	r23, 0x3F	; 63
    3134:	ce 01       	movw	r24, r28
    3136:	87 52       	subi	r24, 0x27	; 39
    3138:	9f 4f       	sbci	r25, 0xFF	; 255
    313a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    313e:	00 e0       	ldi	r16, 0x00	; 0
    3140:	10 e0       	ldi	r17, 0x00	; 0
    3142:	98 01       	movw	r18, r16
    3144:	b9 01       	movw	r22, r18
    3146:	a8 01       	movw	r20, r16
    3148:	ce 01       	movw	r24, r28
    314a:	8f 51       	subi	r24, 0x1F	; 31
    314c:	9f 4f       	sbci	r25, 0xFF	; 255
    314e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3152:	00 e0       	ldi	r16, 0x00	; 0
    3154:	10 e0       	ldi	r17, 0x00	; 0
    3156:	98 01       	movw	r18, r16
    3158:	b9 01       	movw	r22, r18
    315a:	a8 01       	movw	r20, r16
    315c:	ce 01       	movw	r24, r28
    315e:	87 51       	subi	r24, 0x17	; 23
    3160:	9f 4f       	sbci	r25, 0xFF	; 255
    3162:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3166:	00 e0       	ldi	r16, 0x00	; 0
    3168:	10 e0       	ldi	r17, 0x00	; 0
    316a:	98 01       	movw	r18, r16
    316c:	b9 01       	movw	r22, r18
    316e:	a8 01       	movw	r20, r16
    3170:	ce 01       	movw	r24, r28
    3172:	8f 50       	subi	r24, 0x0F	; 15
    3174:	9f 4f       	sbci	r25, 0xFF	; 255
    3176:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    317a:	00 e0       	ldi	r16, 0x00	; 0
    317c:	10 e0       	ldi	r17, 0x00	; 0
    317e:	98 01       	movw	r18, r16
    3180:	b9 01       	movw	r22, r18
    3182:	a8 01       	movw	r20, r16
    3184:	ce 01       	movw	r24, r28
    3186:	87 50       	subi	r24, 0x07	; 7
    3188:	9f 4f       	sbci	r25, 0xFF	; 255
    318a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    318e:	00 e0       	ldi	r16, 0x00	; 0
    3190:	10 e0       	ldi	r17, 0x00	; 0
    3192:	98 01       	movw	r18, r16
    3194:	b9 01       	movw	r22, r18
    3196:	a8 01       	movw	r20, r16
    3198:	ce 01       	movw	r24, r28
    319a:	8f 5f       	subi	r24, 0xFF	; 255
    319c:	9e 4f       	sbci	r25, 0xFE	; 254
    319e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    31a2:	00 e0       	ldi	r16, 0x00	; 0
    31a4:	10 e0       	ldi	r17, 0x00	; 0
    31a6:	98 01       	movw	r18, r16
    31a8:	b9 01       	movw	r22, r18
    31aa:	a8 01       	movw	r20, r16
    31ac:	ce 01       	movw	r24, r28
    31ae:	87 5f       	subi	r24, 0xF7	; 247
    31b0:	9e 4f       	sbci	r25, 0xFE	; 254
    31b2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    31b6:	00 e0       	ldi	r16, 0x00	; 0
    31b8:	10 e0       	ldi	r17, 0x00	; 0
    31ba:	98 01       	movw	r18, r16
    31bc:	b9 01       	movw	r22, r18
    31be:	a8 01       	movw	r20, r16
    31c0:	ce 01       	movw	r24, r28
    31c2:	8f 5e       	subi	r24, 0xEF	; 239
    31c4:	9e 4f       	sbci	r25, 0xFE	; 254
    31c6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    31ca:	00 e0       	ldi	r16, 0x00	; 0
    31cc:	10 e0       	ldi	r17, 0x00	; 0
    31ce:	98 01       	movw	r18, r16
    31d0:	b9 01       	movw	r22, r18
    31d2:	a8 01       	movw	r20, r16
    31d4:	ce 01       	movw	r24, r28
    31d6:	87 5e       	subi	r24, 0xE7	; 231
    31d8:	9e 4f       	sbci	r25, 0xFE	; 254
    31da:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    31de:	00 e0       	ldi	r16, 0x00	; 0
    31e0:	10 e0       	ldi	r17, 0x00	; 0
    31e2:	98 01       	movw	r18, r16
    31e4:	40 e0       	ldi	r20, 0x00	; 0
    31e6:	50 e0       	ldi	r21, 0x00	; 0
    31e8:	60 e8       	ldi	r22, 0x80	; 128
    31ea:	7f e3       	ldi	r23, 0x3F	; 63
    31ec:	ce 01       	movw	r24, r28
    31ee:	8f 5d       	subi	r24, 0xDF	; 223
    31f0:	9e 4f       	sbci	r25, 0xFE	; 254
    31f2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    31f6:	00 e0       	ldi	r16, 0x00	; 0
    31f8:	10 e0       	ldi	r17, 0x00	; 0
    31fa:	98 01       	movw	r18, r16
    31fc:	b9 01       	movw	r22, r18
    31fe:	a8 01       	movw	r20, r16
    3200:	ce 01       	movw	r24, r28
    3202:	87 5d       	subi	r24, 0xD7	; 215
    3204:	9e 4f       	sbci	r25, 0xFE	; 254
    3206:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    320a:	00 e0       	ldi	r16, 0x00	; 0
    320c:	10 e0       	ldi	r17, 0x00	; 0
    320e:	98 01       	movw	r18, r16
    3210:	b9 01       	movw	r22, r18
    3212:	a8 01       	movw	r20, r16
    3214:	ce 01       	movw	r24, r28
    3216:	8f 5c       	subi	r24, 0xCF	; 207
    3218:	9e 4f       	sbci	r25, 0xFE	; 254
    321a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    321e:	00 e0       	ldi	r16, 0x00	; 0
    3220:	10 e0       	ldi	r17, 0x00	; 0
    3222:	98 01       	movw	r18, r16
    3224:	b9 01       	movw	r22, r18
    3226:	a8 01       	movw	r20, r16
    3228:	ce 01       	movw	r24, r28
    322a:	87 5c       	subi	r24, 0xC7	; 199
    322c:	9e 4f       	sbci	r25, 0xFE	; 254
    322e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3232:	00 e0       	ldi	r16, 0x00	; 0
    3234:	10 e0       	ldi	r17, 0x00	; 0
    3236:	98 01       	movw	r18, r16
    3238:	b9 01       	movw	r22, r18
    323a:	a8 01       	movw	r20, r16
    323c:	ce 01       	movw	r24, r28
    323e:	8f 5b       	subi	r24, 0xBF	; 191
    3240:	9e 4f       	sbci	r25, 0xFE	; 254
    3242:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3246:	00 e0       	ldi	r16, 0x00	; 0
    3248:	10 e0       	ldi	r17, 0x00	; 0
    324a:	98 01       	movw	r18, r16
    324c:	b9 01       	movw	r22, r18
    324e:	a8 01       	movw	r20, r16
    3250:	ce 01       	movw	r24, r28
    3252:	87 5b       	subi	r24, 0xB7	; 183
    3254:	9e 4f       	sbci	r25, 0xFE	; 254
    3256:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    325a:	00 e0       	ldi	r16, 0x00	; 0
    325c:	10 e0       	ldi	r17, 0x00	; 0
    325e:	98 01       	movw	r18, r16
    3260:	b9 01       	movw	r22, r18
    3262:	a8 01       	movw	r20, r16
    3264:	ce 01       	movw	r24, r28
    3266:	8f 5a       	subi	r24, 0xAF	; 175
    3268:	9e 4f       	sbci	r25, 0xFE	; 254
    326a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    326e:	00 e0       	ldi	r16, 0x00	; 0
    3270:	10 e0       	ldi	r17, 0x00	; 0
    3272:	98 01       	movw	r18, r16
    3274:	b9 01       	movw	r22, r18
    3276:	a8 01       	movw	r20, r16
    3278:	ce 01       	movw	r24, r28
    327a:	87 5a       	subi	r24, 0xA7	; 167
    327c:	9e 4f       	sbci	r25, 0xFE	; 254
    327e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3282:	00 e0       	ldi	r16, 0x00	; 0
    3284:	10 e0       	ldi	r17, 0x00	; 0
    3286:	98 01       	movw	r18, r16
    3288:	b9 01       	movw	r22, r18
    328a:	a8 01       	movw	r20, r16
    328c:	ce 01       	movw	r24, r28
    328e:	8f 59       	subi	r24, 0x9F	; 159
    3290:	9e 4f       	sbci	r25, 0xFE	; 254
    3292:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3296:	00 e0       	ldi	r16, 0x00	; 0
    3298:	10 e0       	ldi	r17, 0x00	; 0
    329a:	98 01       	movw	r18, r16
    329c:	40 e0       	ldi	r20, 0x00	; 0
    329e:	50 e0       	ldi	r21, 0x00	; 0
    32a0:	60 e8       	ldi	r22, 0x80	; 128
    32a2:	7f e3       	ldi	r23, 0x3F	; 63
    32a4:	ce 01       	movw	r24, r28
    32a6:	87 59       	subi	r24, 0x97	; 151
    32a8:	9e 4f       	sbci	r25, 0xFE	; 254
    32aa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    32ae:	00 e0       	ldi	r16, 0x00	; 0
    32b0:	10 e0       	ldi	r17, 0x00	; 0
    32b2:	98 01       	movw	r18, r16
    32b4:	b9 01       	movw	r22, r18
    32b6:	a8 01       	movw	r20, r16
    32b8:	ce 01       	movw	r24, r28
    32ba:	8f 58       	subi	r24, 0x8F	; 143
    32bc:	9e 4f       	sbci	r25, 0xFE	; 254
    32be:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    32c2:	00 e0       	ldi	r16, 0x00	; 0
    32c4:	10 e0       	ldi	r17, 0x00	; 0
    32c6:	98 01       	movw	r18, r16
    32c8:	b9 01       	movw	r22, r18
    32ca:	a8 01       	movw	r20, r16
    32cc:	ce 01       	movw	r24, r28
    32ce:	87 58       	subi	r24, 0x87	; 135
    32d0:	9e 4f       	sbci	r25, 0xFE	; 254
    32d2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    32d6:	00 e0       	ldi	r16, 0x00	; 0
    32d8:	10 e0       	ldi	r17, 0x00	; 0
    32da:	98 01       	movw	r18, r16
    32dc:	b9 01       	movw	r22, r18
    32de:	a8 01       	movw	r20, r16
    32e0:	ce 01       	movw	r24, r28
    32e2:	8f 57       	subi	r24, 0x7F	; 127
    32e4:	9e 4f       	sbci	r25, 0xFE	; 254
    32e6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    32ea:	00 e0       	ldi	r16, 0x00	; 0
    32ec:	10 e0       	ldi	r17, 0x00	; 0
    32ee:	98 01       	movw	r18, r16
    32f0:	b9 01       	movw	r22, r18
    32f2:	a8 01       	movw	r20, r16
    32f4:	ce 01       	movw	r24, r28
    32f6:	87 57       	subi	r24, 0x77	; 119
    32f8:	9e 4f       	sbci	r25, 0xFE	; 254
    32fa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    32fe:	00 e0       	ldi	r16, 0x00	; 0
    3300:	10 e0       	ldi	r17, 0x00	; 0
    3302:	98 01       	movw	r18, r16
    3304:	b9 01       	movw	r22, r18
    3306:	a8 01       	movw	r20, r16
    3308:	ce 01       	movw	r24, r28
    330a:	8f 56       	subi	r24, 0x6F	; 111
    330c:	9e 4f       	sbci	r25, 0xFE	; 254
    330e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3312:	00 e0       	ldi	r16, 0x00	; 0
    3314:	10 e0       	ldi	r17, 0x00	; 0
    3316:	98 01       	movw	r18, r16
    3318:	b9 01       	movw	r22, r18
    331a:	a8 01       	movw	r20, r16
    331c:	ce 01       	movw	r24, r28
    331e:	87 56       	subi	r24, 0x67	; 103
    3320:	9e 4f       	sbci	r25, 0xFE	; 254
    3322:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3326:	00 e0       	ldi	r16, 0x00	; 0
    3328:	10 e0       	ldi	r17, 0x00	; 0
    332a:	98 01       	movw	r18, r16
    332c:	b9 01       	movw	r22, r18
    332e:	a8 01       	movw	r20, r16
    3330:	ce 01       	movw	r24, r28
    3332:	8f 55       	subi	r24, 0x5F	; 95
    3334:	9e 4f       	sbci	r25, 0xFE	; 254
    3336:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    333a:	00 e0       	ldi	r16, 0x00	; 0
    333c:	10 e0       	ldi	r17, 0x00	; 0
    333e:	98 01       	movw	r18, r16
    3340:	b9 01       	movw	r22, r18
    3342:	a8 01       	movw	r20, r16
    3344:	ce 01       	movw	r24, r28
    3346:	87 55       	subi	r24, 0x57	; 87
    3348:	9e 4f       	sbci	r25, 0xFE	; 254
    334a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    334e:	00 e0       	ldi	r16, 0x00	; 0
    3350:	10 e0       	ldi	r17, 0x00	; 0
    3352:	98 01       	movw	r18, r16
    3354:	b9 01       	movw	r22, r18
    3356:	a8 01       	movw	r20, r16
    3358:	ce 01       	movw	r24, r28
    335a:	8f 54       	subi	r24, 0x4F	; 79
    335c:	9e 4f       	sbci	r25, 0xFE	; 254
    335e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3362:	00 e0       	ldi	r16, 0x00	; 0
    3364:	10 e0       	ldi	r17, 0x00	; 0
    3366:	98 01       	movw	r18, r16
    3368:	40 e0       	ldi	r20, 0x00	; 0
    336a:	50 e0       	ldi	r21, 0x00	; 0
    336c:	60 e8       	ldi	r22, 0x80	; 128
    336e:	7f e3       	ldi	r23, 0x3F	; 63
    3370:	ce 01       	movw	r24, r28
    3372:	87 54       	subi	r24, 0x47	; 71
    3374:	9e 4f       	sbci	r25, 0xFE	; 254
    3376:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    337a:	00 e0       	ldi	r16, 0x00	; 0
    337c:	10 e0       	ldi	r17, 0x00	; 0
    337e:	98 01       	movw	r18, r16
    3380:	b9 01       	movw	r22, r18
    3382:	a8 01       	movw	r20, r16
    3384:	ce 01       	movw	r24, r28
    3386:	8f 53       	subi	r24, 0x3F	; 63
    3388:	9e 4f       	sbci	r25, 0xFE	; 254
    338a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    338e:	00 e0       	ldi	r16, 0x00	; 0
    3390:	10 e0       	ldi	r17, 0x00	; 0
    3392:	98 01       	movw	r18, r16
    3394:	b9 01       	movw	r22, r18
    3396:	a8 01       	movw	r20, r16
    3398:	ce 01       	movw	r24, r28
    339a:	87 53       	subi	r24, 0x37	; 55
    339c:	9e 4f       	sbci	r25, 0xFE	; 254
    339e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    33a2:	00 e0       	ldi	r16, 0x00	; 0
    33a4:	10 e0       	ldi	r17, 0x00	; 0
    33a6:	98 01       	movw	r18, r16
    33a8:	b9 01       	movw	r22, r18
    33aa:	a8 01       	movw	r20, r16
    33ac:	ce 01       	movw	r24, r28
    33ae:	8f 52       	subi	r24, 0x2F	; 47
    33b0:	9e 4f       	sbci	r25, 0xFE	; 254
    33b2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    33b6:	00 e0       	ldi	r16, 0x00	; 0
    33b8:	10 e0       	ldi	r17, 0x00	; 0
    33ba:	98 01       	movw	r18, r16
    33bc:	b9 01       	movw	r22, r18
    33be:	a8 01       	movw	r20, r16
    33c0:	ce 01       	movw	r24, r28
    33c2:	87 52       	subi	r24, 0x27	; 39
    33c4:	9e 4f       	sbci	r25, 0xFE	; 254
    33c6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    33ca:	00 e0       	ldi	r16, 0x00	; 0
    33cc:	10 e0       	ldi	r17, 0x00	; 0
    33ce:	98 01       	movw	r18, r16
    33d0:	b9 01       	movw	r22, r18
    33d2:	a8 01       	movw	r20, r16
    33d4:	ce 01       	movw	r24, r28
    33d6:	8f 51       	subi	r24, 0x1F	; 31
    33d8:	9e 4f       	sbci	r25, 0xFE	; 254
    33da:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    33de:	00 e0       	ldi	r16, 0x00	; 0
    33e0:	10 e0       	ldi	r17, 0x00	; 0
    33e2:	98 01       	movw	r18, r16
    33e4:	b9 01       	movw	r22, r18
    33e6:	a8 01       	movw	r20, r16
    33e8:	ce 01       	movw	r24, r28
    33ea:	87 51       	subi	r24, 0x17	; 23
    33ec:	9e 4f       	sbci	r25, 0xFE	; 254
    33ee:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    33f2:	00 e0       	ldi	r16, 0x00	; 0
    33f4:	10 e0       	ldi	r17, 0x00	; 0
    33f6:	98 01       	movw	r18, r16
    33f8:	40 e0       	ldi	r20, 0x00	; 0
    33fa:	50 e0       	ldi	r21, 0x00	; 0
    33fc:	60 e8       	ldi	r22, 0x80	; 128
    33fe:	7f e3       	ldi	r23, 0x3F	; 63
    3400:	ce 01       	movw	r24, r28
    3402:	8f 50       	subi	r24, 0x0F	; 15
    3404:	9e 4f       	sbci	r25, 0xFE	; 254
    3406:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    340a:	00 e0       	ldi	r16, 0x00	; 0
    340c:	10 e0       	ldi	r17, 0x00	; 0
    340e:	98 01       	movw	r18, r16
    3410:	b9 01       	movw	r22, r18
    3412:	a8 01       	movw	r20, r16
    3414:	ce 01       	movw	r24, r28
    3416:	87 50       	subi	r24, 0x07	; 7
    3418:	9e 4f       	sbci	r25, 0xFE	; 254
    341a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE3]={theta1,theta2,theta3}; int phi_list[QB_SIZE3]={phi1,phi2,phi3};
    341e:	c9 5f       	subi	r28, 0xF9	; 249
    3420:	dd 4f       	sbci	r29, 0xFD	; 253
    3422:	79 82       	std	Y+1, r7	; 0x01
    3424:	68 82       	st	Y, r6
    3426:	c7 50       	subi	r28, 0x07	; 7
    3428:	d2 40       	sbci	r29, 0x02	; 2
    342a:	c7 5f       	subi	r28, 0xF7	; 247
    342c:	dd 4f       	sbci	r29, 0xFD	; 253
    342e:	99 82       	std	Y+1, r9	; 0x01
    3430:	88 82       	st	Y, r8
    3432:	c9 50       	subi	r28, 0x09	; 9
    3434:	d2 40       	sbci	r29, 0x02	; 2
    3436:	c5 5f       	subi	r28, 0xF5	; 245
    3438:	dd 4f       	sbci	r29, 0xFD	; 253
    343a:	f9 82       	std	Y+1, r15	; 0x01
    343c:	e8 82       	st	Y, r14
    343e:	cb 50       	subi	r28, 0x0B	; 11
    3440:	d2 40       	sbci	r29, 0x02	; 2
    3442:	cf 5f       	subi	r28, 0xFF	; 255
    3444:	dd 4f       	sbci	r29, 0xFD	; 253
    3446:	59 82       	std	Y+1, r5	; 0x01
    3448:	48 82       	st	Y, r4
    344a:	c1 50       	subi	r28, 0x01	; 1
    344c:	d2 40       	sbci	r29, 0x02	; 2
    344e:	cd 5f       	subi	r28, 0xFD	; 253
    3450:	dd 4f       	sbci	r29, 0xFD	; 253
    3452:	39 82       	std	Y+1, r3	; 0x01
    3454:	28 82       	st	Y, r2
    3456:	c3 50       	subi	r28, 0x03	; 3
    3458:	d2 40       	sbci	r29, 0x02	; 2
    345a:	cb 5f       	subi	r28, 0xFB	; 251
    345c:	dd 4f       	sbci	r29, 0xFD	; 253
    345e:	d9 82       	std	Y+1, r13	; 0x01
    3460:	c8 82       	st	Y, r12
    3462:	c5 50       	subi	r28, 0x05	; 5
    3464:	d2 40       	sbci	r29, 0x02	; 2
	return vec2ampl(multiply8x8(ampl2vec(QB_SIZE3,theta_list,phi_list),tof_matrix),QB_SIZE3);
    3466:	9e 01       	movw	r18, r28
    3468:	2f 5f       	subi	r18, 0xFF	; 255
    346a:	3d 4f       	sbci	r19, 0xFD	; 253
    346c:	ae 01       	movw	r20, r28
    346e:	49 5f       	subi	r20, 0xF9	; 249
    3470:	5d 4f       	sbci	r21, 0xFD	; 253
    3472:	63 e0       	ldi	r22, 0x03	; 3
    3474:	70 e0       	ldi	r23, 0x00	; 0
    3476:	c5 01       	movw	r24, r10
    3478:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    347c:	ae 01       	movw	r20, r28
    347e:	4f 5f       	subi	r20, 0xFF	; 255
    3480:	5f 4f       	sbci	r21, 0xFF	; 255
    3482:	bc 01       	movw	r22, r24
    3484:	c5 01       	movw	r24, r10
    3486:	0e 94 64 08 	call	0x10c8	; 0x10c8 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_>
    348a:	43 e0       	ldi	r20, 0x03	; 3
    348c:	50 e0       	ldi	r21, 0x00	; 0
    348e:	bc 01       	movw	r22, r24
    3490:	c5 01       	movw	r24, r10
    3492:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
}
    3496:	c4 5f       	subi	r28, 0xF4	; 244
    3498:	dd 4f       	sbci	r29, 0xFD	; 253
    349a:	0f b6       	in	r0, 0x3f	; 63
    349c:	f8 94       	cli
    349e:	de bf       	out	0x3e, r29	; 62
    34a0:	0f be       	out	0x3f, r0	; 63
    34a2:	cd bf       	out	0x3d, r28	; 61
    34a4:	df 91       	pop	r29
    34a6:	cf 91       	pop	r28
    34a8:	1f 91       	pop	r17
    34aa:	0f 91       	pop	r16
    34ac:	ff 90       	pop	r15
    34ae:	ef 90       	pop	r14
    34b0:	df 90       	pop	r13
    34b2:	cf 90       	pop	r12
    34b4:	bf 90       	pop	r11
    34b6:	af 90       	pop	r10
    34b8:	9f 90       	pop	r9
    34ba:	8f 90       	pop	r8
    34bc:	7f 90       	pop	r7
    34be:	6f 90       	pop	r6
    34c0:	5f 90       	pop	r5
    34c2:	4f 90       	pop	r4
    34c4:	3f 90       	pop	r3
    34c6:	2f 90       	pop	r2
    34c8:	08 95       	ret

000034ca <_ZN5Gates3DEUEiiiiiii>:
int * Gates::DEU(int theta1, int phi1,int theta2,int phi2,int theta3,int phi3,int delta){
    34ca:	2f 92       	push	r2
    34cc:	3f 92       	push	r3
    34ce:	4f 92       	push	r4
    34d0:	5f 92       	push	r5
    34d2:	6f 92       	push	r6
    34d4:	7f 92       	push	r7
    34d6:	8f 92       	push	r8
    34d8:	9f 92       	push	r9
    34da:	af 92       	push	r10
    34dc:	bf 92       	push	r11
    34de:	cf 92       	push	r12
    34e0:	df 92       	push	r13
    34e2:	ef 92       	push	r14
    34e4:	ff 92       	push	r15
    34e6:	0f 93       	push	r16
    34e8:	1f 93       	push	r17
    34ea:	cf 93       	push	r28
    34ec:	df 93       	push	r29
    34ee:	cd b7       	in	r28, 0x3d	; 61
    34f0:	de b7       	in	r29, 0x3e	; 62
    34f2:	c4 51       	subi	r28, 0x14	; 20
    34f4:	d2 40       	sbci	r29, 0x02	; 2
    34f6:	0f b6       	in	r0, 0x3f	; 63
    34f8:	f8 94       	cli
    34fa:	de bf       	out	0x3e, r29	; 62
    34fc:	0f be       	out	0x3f, r0	; 63
    34fe:	cd bf       	out	0x3d, r28	; 61
    3500:	c3 5f       	subi	r28, 0xF3	; 243
    3502:	dd 4f       	sbci	r29, 0xFD	; 253
    3504:	99 83       	std	Y+1, r25	; 0x01
    3506:	88 83       	st	Y, r24
    3508:	cd 50       	subi	r28, 0x0D	; 13
    350a:	d2 40       	sbci	r29, 0x02	; 2
    350c:	2b 01       	movw	r4, r22
    350e:	c1 5f       	subi	r28, 0xF1	; 241
    3510:	dd 4f       	sbci	r29, 0xFD	; 253
    3512:	59 83       	std	Y+1, r21	; 0x01
    3514:	48 83       	st	Y, r20
    3516:	cf 50       	subi	r28, 0x0F	; 15
    3518:	d2 40       	sbci	r29, 0x02	; 2
    351a:	39 01       	movw	r6, r18
    351c:	cf 5e       	subi	r28, 0xEF	; 239
    351e:	dd 4f       	sbci	r29, 0xFD	; 253
    3520:	19 83       	std	Y+1, r17	; 0x01
    3522:	08 83       	st	Y, r16
    3524:	c1 51       	subi	r28, 0x11	; 17
    3526:	d2 40       	sbci	r29, 0x02	; 2
    3528:	17 01       	movw	r2, r14
    352a:	cd 5e       	subi	r28, 0xED	; 237
    352c:	dd 4f       	sbci	r29, 0xFD	; 253
    352e:	d9 82       	std	Y+1, r13	; 0x01
    3530:	c8 82       	st	Y, r12
    3532:	c3 51       	subi	r28, 0x13	; 19
    3534:	d2 40       	sbci	r29, 0x02	; 2
	float delta_float=(delta*M_PI)/180;
    3536:	b5 01       	movw	r22, r10
    3538:	88 27       	eor	r24, r24
    353a:	77 fd       	sbrc	r23, 7
    353c:	80 95       	com	r24
    353e:	98 2f       	mov	r25, r24
    3540:	0e 94 8f 29 	call	0x531e	; 0x531e <__floatsisf>
    3544:	2b ed       	ldi	r18, 0xDB	; 219
    3546:	3f e0       	ldi	r19, 0x0F	; 15
    3548:	49 e4       	ldi	r20, 0x49	; 73
    354a:	50 e4       	ldi	r21, 0x40	; 64
    354c:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <__mulsf3>
    3550:	20 e0       	ldi	r18, 0x00	; 0
    3552:	30 e0       	ldi	r19, 0x00	; 0
    3554:	44 e3       	ldi	r20, 0x34	; 52
    3556:	53 e4       	ldi	r21, 0x43	; 67
    3558:	0e 94 c3 28 	call	0x5186	; 0x5186 <__divsf3>
    355c:	4b 01       	movw	r8, r22
    355e:	5c 01       	movw	r10, r24
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,cos(delta_float)),Complex(sin(delta_float),0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(sin(delta_float),0),Complex(0,cos(delta_float))}};
    3560:	00 e0       	ldi	r16, 0x00	; 0
    3562:	10 e0       	ldi	r17, 0x00	; 0
    3564:	98 01       	movw	r18, r16
    3566:	40 e0       	ldi	r20, 0x00	; 0
    3568:	50 e0       	ldi	r21, 0x00	; 0
    356a:	60 e8       	ldi	r22, 0x80	; 128
    356c:	7f e3       	ldi	r23, 0x3F	; 63
    356e:	ce 01       	movw	r24, r28
    3570:	01 96       	adiw	r24, 0x01	; 1
    3572:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3576:	00 e0       	ldi	r16, 0x00	; 0
    3578:	10 e0       	ldi	r17, 0x00	; 0
    357a:	98 01       	movw	r18, r16
    357c:	b9 01       	movw	r22, r18
    357e:	a8 01       	movw	r20, r16
    3580:	ce 01       	movw	r24, r28
    3582:	09 96       	adiw	r24, 0x09	; 9
    3584:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3588:	00 e0       	ldi	r16, 0x00	; 0
    358a:	10 e0       	ldi	r17, 0x00	; 0
    358c:	98 01       	movw	r18, r16
    358e:	b9 01       	movw	r22, r18
    3590:	a8 01       	movw	r20, r16
    3592:	ce 01       	movw	r24, r28
    3594:	41 96       	adiw	r24, 0x11	; 17
    3596:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    359a:	00 e0       	ldi	r16, 0x00	; 0
    359c:	10 e0       	ldi	r17, 0x00	; 0
    359e:	98 01       	movw	r18, r16
    35a0:	b9 01       	movw	r22, r18
    35a2:	a8 01       	movw	r20, r16
    35a4:	ce 01       	movw	r24, r28
    35a6:	49 96       	adiw	r24, 0x19	; 25
    35a8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    35ac:	00 e0       	ldi	r16, 0x00	; 0
    35ae:	10 e0       	ldi	r17, 0x00	; 0
    35b0:	98 01       	movw	r18, r16
    35b2:	b9 01       	movw	r22, r18
    35b4:	a8 01       	movw	r20, r16
    35b6:	ce 01       	movw	r24, r28
    35b8:	81 96       	adiw	r24, 0x21	; 33
    35ba:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    35be:	00 e0       	ldi	r16, 0x00	; 0
    35c0:	10 e0       	ldi	r17, 0x00	; 0
    35c2:	98 01       	movw	r18, r16
    35c4:	b9 01       	movw	r22, r18
    35c6:	a8 01       	movw	r20, r16
    35c8:	ce 01       	movw	r24, r28
    35ca:	89 96       	adiw	r24, 0x29	; 41
    35cc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    35d0:	00 e0       	ldi	r16, 0x00	; 0
    35d2:	10 e0       	ldi	r17, 0x00	; 0
    35d4:	98 01       	movw	r18, r16
    35d6:	b9 01       	movw	r22, r18
    35d8:	a8 01       	movw	r20, r16
    35da:	ce 01       	movw	r24, r28
    35dc:	c1 96       	adiw	r24, 0x31	; 49
    35de:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    35e2:	00 e0       	ldi	r16, 0x00	; 0
    35e4:	10 e0       	ldi	r17, 0x00	; 0
    35e6:	98 01       	movw	r18, r16
    35e8:	b9 01       	movw	r22, r18
    35ea:	a8 01       	movw	r20, r16
    35ec:	ce 01       	movw	r24, r28
    35ee:	c9 96       	adiw	r24, 0x39	; 57
    35f0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    35f4:	00 e0       	ldi	r16, 0x00	; 0
    35f6:	10 e0       	ldi	r17, 0x00	; 0
    35f8:	98 01       	movw	r18, r16
    35fa:	b9 01       	movw	r22, r18
    35fc:	a8 01       	movw	r20, r16
    35fe:	ce 01       	movw	r24, r28
    3600:	8f 5b       	subi	r24, 0xBF	; 191
    3602:	9f 4f       	sbci	r25, 0xFF	; 255
    3604:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3608:	00 e0       	ldi	r16, 0x00	; 0
    360a:	10 e0       	ldi	r17, 0x00	; 0
    360c:	98 01       	movw	r18, r16
    360e:	40 e0       	ldi	r20, 0x00	; 0
    3610:	50 e0       	ldi	r21, 0x00	; 0
    3612:	60 e8       	ldi	r22, 0x80	; 128
    3614:	7f e3       	ldi	r23, 0x3F	; 63
    3616:	ce 01       	movw	r24, r28
    3618:	87 5b       	subi	r24, 0xB7	; 183
    361a:	9f 4f       	sbci	r25, 0xFF	; 255
    361c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3620:	00 e0       	ldi	r16, 0x00	; 0
    3622:	10 e0       	ldi	r17, 0x00	; 0
    3624:	98 01       	movw	r18, r16
    3626:	b9 01       	movw	r22, r18
    3628:	a8 01       	movw	r20, r16
    362a:	ce 01       	movw	r24, r28
    362c:	8f 5a       	subi	r24, 0xAF	; 175
    362e:	9f 4f       	sbci	r25, 0xFF	; 255
    3630:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3634:	00 e0       	ldi	r16, 0x00	; 0
    3636:	10 e0       	ldi	r17, 0x00	; 0
    3638:	98 01       	movw	r18, r16
    363a:	b9 01       	movw	r22, r18
    363c:	a8 01       	movw	r20, r16
    363e:	ce 01       	movw	r24, r28
    3640:	87 5a       	subi	r24, 0xA7	; 167
    3642:	9f 4f       	sbci	r25, 0xFF	; 255
    3644:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3648:	00 e0       	ldi	r16, 0x00	; 0
    364a:	10 e0       	ldi	r17, 0x00	; 0
    364c:	98 01       	movw	r18, r16
    364e:	b9 01       	movw	r22, r18
    3650:	a8 01       	movw	r20, r16
    3652:	ce 01       	movw	r24, r28
    3654:	8f 59       	subi	r24, 0x9F	; 159
    3656:	9f 4f       	sbci	r25, 0xFF	; 255
    3658:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    365c:	00 e0       	ldi	r16, 0x00	; 0
    365e:	10 e0       	ldi	r17, 0x00	; 0
    3660:	98 01       	movw	r18, r16
    3662:	b9 01       	movw	r22, r18
    3664:	a8 01       	movw	r20, r16
    3666:	ce 01       	movw	r24, r28
    3668:	87 59       	subi	r24, 0x97	; 151
    366a:	9f 4f       	sbci	r25, 0xFF	; 255
    366c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3670:	00 e0       	ldi	r16, 0x00	; 0
    3672:	10 e0       	ldi	r17, 0x00	; 0
    3674:	98 01       	movw	r18, r16
    3676:	b9 01       	movw	r22, r18
    3678:	a8 01       	movw	r20, r16
    367a:	ce 01       	movw	r24, r28
    367c:	8f 58       	subi	r24, 0x8F	; 143
    367e:	9f 4f       	sbci	r25, 0xFF	; 255
    3680:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3684:	00 e0       	ldi	r16, 0x00	; 0
    3686:	10 e0       	ldi	r17, 0x00	; 0
    3688:	98 01       	movw	r18, r16
    368a:	b9 01       	movw	r22, r18
    368c:	a8 01       	movw	r20, r16
    368e:	ce 01       	movw	r24, r28
    3690:	87 58       	subi	r24, 0x87	; 135
    3692:	9f 4f       	sbci	r25, 0xFF	; 255
    3694:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3698:	00 e0       	ldi	r16, 0x00	; 0
    369a:	10 e0       	ldi	r17, 0x00	; 0
    369c:	98 01       	movw	r18, r16
    369e:	b9 01       	movw	r22, r18
    36a0:	a8 01       	movw	r20, r16
    36a2:	ce 01       	movw	r24, r28
    36a4:	8f 57       	subi	r24, 0x7F	; 127
    36a6:	9f 4f       	sbci	r25, 0xFF	; 255
    36a8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    36ac:	00 e0       	ldi	r16, 0x00	; 0
    36ae:	10 e0       	ldi	r17, 0x00	; 0
    36b0:	98 01       	movw	r18, r16
    36b2:	b9 01       	movw	r22, r18
    36b4:	a8 01       	movw	r20, r16
    36b6:	ce 01       	movw	r24, r28
    36b8:	87 57       	subi	r24, 0x77	; 119
    36ba:	9f 4f       	sbci	r25, 0xFF	; 255
    36bc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    36c0:	00 e0       	ldi	r16, 0x00	; 0
    36c2:	10 e0       	ldi	r17, 0x00	; 0
    36c4:	98 01       	movw	r18, r16
    36c6:	40 e0       	ldi	r20, 0x00	; 0
    36c8:	50 e0       	ldi	r21, 0x00	; 0
    36ca:	60 e8       	ldi	r22, 0x80	; 128
    36cc:	7f e3       	ldi	r23, 0x3F	; 63
    36ce:	ce 01       	movw	r24, r28
    36d0:	8f 56       	subi	r24, 0x6F	; 111
    36d2:	9f 4f       	sbci	r25, 0xFF	; 255
    36d4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    36d8:	00 e0       	ldi	r16, 0x00	; 0
    36da:	10 e0       	ldi	r17, 0x00	; 0
    36dc:	98 01       	movw	r18, r16
    36de:	b9 01       	movw	r22, r18
    36e0:	a8 01       	movw	r20, r16
    36e2:	ce 01       	movw	r24, r28
    36e4:	87 56       	subi	r24, 0x67	; 103
    36e6:	9f 4f       	sbci	r25, 0xFF	; 255
    36e8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    36ec:	00 e0       	ldi	r16, 0x00	; 0
    36ee:	10 e0       	ldi	r17, 0x00	; 0
    36f0:	98 01       	movw	r18, r16
    36f2:	b9 01       	movw	r22, r18
    36f4:	a8 01       	movw	r20, r16
    36f6:	ce 01       	movw	r24, r28
    36f8:	8f 55       	subi	r24, 0x5F	; 95
    36fa:	9f 4f       	sbci	r25, 0xFF	; 255
    36fc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3700:	00 e0       	ldi	r16, 0x00	; 0
    3702:	10 e0       	ldi	r17, 0x00	; 0
    3704:	98 01       	movw	r18, r16
    3706:	b9 01       	movw	r22, r18
    3708:	a8 01       	movw	r20, r16
    370a:	ce 01       	movw	r24, r28
    370c:	87 55       	subi	r24, 0x57	; 87
    370e:	9f 4f       	sbci	r25, 0xFF	; 255
    3710:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3714:	00 e0       	ldi	r16, 0x00	; 0
    3716:	10 e0       	ldi	r17, 0x00	; 0
    3718:	98 01       	movw	r18, r16
    371a:	b9 01       	movw	r22, r18
    371c:	a8 01       	movw	r20, r16
    371e:	ce 01       	movw	r24, r28
    3720:	8f 54       	subi	r24, 0x4F	; 79
    3722:	9f 4f       	sbci	r25, 0xFF	; 255
    3724:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3728:	00 e0       	ldi	r16, 0x00	; 0
    372a:	10 e0       	ldi	r17, 0x00	; 0
    372c:	98 01       	movw	r18, r16
    372e:	b9 01       	movw	r22, r18
    3730:	a8 01       	movw	r20, r16
    3732:	ce 01       	movw	r24, r28
    3734:	87 54       	subi	r24, 0x47	; 71
    3736:	9f 4f       	sbci	r25, 0xFF	; 255
    3738:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    373c:	00 e0       	ldi	r16, 0x00	; 0
    373e:	10 e0       	ldi	r17, 0x00	; 0
    3740:	98 01       	movw	r18, r16
    3742:	b9 01       	movw	r22, r18
    3744:	a8 01       	movw	r20, r16
    3746:	ce 01       	movw	r24, r28
    3748:	8f 53       	subi	r24, 0x3F	; 63
    374a:	9f 4f       	sbci	r25, 0xFF	; 255
    374c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3750:	00 e0       	ldi	r16, 0x00	; 0
    3752:	10 e0       	ldi	r17, 0x00	; 0
    3754:	98 01       	movw	r18, r16
    3756:	b9 01       	movw	r22, r18
    3758:	a8 01       	movw	r20, r16
    375a:	ce 01       	movw	r24, r28
    375c:	87 53       	subi	r24, 0x37	; 55
    375e:	9f 4f       	sbci	r25, 0xFF	; 255
    3760:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3764:	00 e0       	ldi	r16, 0x00	; 0
    3766:	10 e0       	ldi	r17, 0x00	; 0
    3768:	98 01       	movw	r18, r16
    376a:	b9 01       	movw	r22, r18
    376c:	a8 01       	movw	r20, r16
    376e:	ce 01       	movw	r24, r28
    3770:	8f 52       	subi	r24, 0x2F	; 47
    3772:	9f 4f       	sbci	r25, 0xFF	; 255
    3774:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3778:	00 e0       	ldi	r16, 0x00	; 0
    377a:	10 e0       	ldi	r17, 0x00	; 0
    377c:	98 01       	movw	r18, r16
    377e:	40 e0       	ldi	r20, 0x00	; 0
    3780:	50 e0       	ldi	r21, 0x00	; 0
    3782:	60 e8       	ldi	r22, 0x80	; 128
    3784:	7f e3       	ldi	r23, 0x3F	; 63
    3786:	ce 01       	movw	r24, r28
    3788:	87 52       	subi	r24, 0x27	; 39
    378a:	9f 4f       	sbci	r25, 0xFF	; 255
    378c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3790:	00 e0       	ldi	r16, 0x00	; 0
    3792:	10 e0       	ldi	r17, 0x00	; 0
    3794:	98 01       	movw	r18, r16
    3796:	b9 01       	movw	r22, r18
    3798:	a8 01       	movw	r20, r16
    379a:	ce 01       	movw	r24, r28
    379c:	8f 51       	subi	r24, 0x1F	; 31
    379e:	9f 4f       	sbci	r25, 0xFF	; 255
    37a0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    37a4:	00 e0       	ldi	r16, 0x00	; 0
    37a6:	10 e0       	ldi	r17, 0x00	; 0
    37a8:	98 01       	movw	r18, r16
    37aa:	b9 01       	movw	r22, r18
    37ac:	a8 01       	movw	r20, r16
    37ae:	ce 01       	movw	r24, r28
    37b0:	87 51       	subi	r24, 0x17	; 23
    37b2:	9f 4f       	sbci	r25, 0xFF	; 255
    37b4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    37b8:	00 e0       	ldi	r16, 0x00	; 0
    37ba:	10 e0       	ldi	r17, 0x00	; 0
    37bc:	98 01       	movw	r18, r16
    37be:	b9 01       	movw	r22, r18
    37c0:	a8 01       	movw	r20, r16
    37c2:	ce 01       	movw	r24, r28
    37c4:	8f 50       	subi	r24, 0x0F	; 15
    37c6:	9f 4f       	sbci	r25, 0xFF	; 255
    37c8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    37cc:	00 e0       	ldi	r16, 0x00	; 0
    37ce:	10 e0       	ldi	r17, 0x00	; 0
    37d0:	98 01       	movw	r18, r16
    37d2:	b9 01       	movw	r22, r18
    37d4:	a8 01       	movw	r20, r16
    37d6:	ce 01       	movw	r24, r28
    37d8:	87 50       	subi	r24, 0x07	; 7
    37da:	9f 4f       	sbci	r25, 0xFF	; 255
    37dc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    37e0:	00 e0       	ldi	r16, 0x00	; 0
    37e2:	10 e0       	ldi	r17, 0x00	; 0
    37e4:	98 01       	movw	r18, r16
    37e6:	b9 01       	movw	r22, r18
    37e8:	a8 01       	movw	r20, r16
    37ea:	ce 01       	movw	r24, r28
    37ec:	8f 5f       	subi	r24, 0xFF	; 255
    37ee:	9e 4f       	sbci	r25, 0xFE	; 254
    37f0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    37f4:	00 e0       	ldi	r16, 0x00	; 0
    37f6:	10 e0       	ldi	r17, 0x00	; 0
    37f8:	98 01       	movw	r18, r16
    37fa:	b9 01       	movw	r22, r18
    37fc:	a8 01       	movw	r20, r16
    37fe:	ce 01       	movw	r24, r28
    3800:	87 5f       	subi	r24, 0xF7	; 247
    3802:	9e 4f       	sbci	r25, 0xFE	; 254
    3804:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3808:	00 e0       	ldi	r16, 0x00	; 0
    380a:	10 e0       	ldi	r17, 0x00	; 0
    380c:	98 01       	movw	r18, r16
    380e:	b9 01       	movw	r22, r18
    3810:	a8 01       	movw	r20, r16
    3812:	ce 01       	movw	r24, r28
    3814:	8f 5e       	subi	r24, 0xEF	; 239
    3816:	9e 4f       	sbci	r25, 0xFE	; 254
    3818:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    381c:	00 e0       	ldi	r16, 0x00	; 0
    381e:	10 e0       	ldi	r17, 0x00	; 0
    3820:	98 01       	movw	r18, r16
    3822:	b9 01       	movw	r22, r18
    3824:	a8 01       	movw	r20, r16
    3826:	ce 01       	movw	r24, r28
    3828:	87 5e       	subi	r24, 0xE7	; 231
    382a:	9e 4f       	sbci	r25, 0xFE	; 254
    382c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3830:	00 e0       	ldi	r16, 0x00	; 0
    3832:	10 e0       	ldi	r17, 0x00	; 0
    3834:	98 01       	movw	r18, r16
    3836:	40 e0       	ldi	r20, 0x00	; 0
    3838:	50 e0       	ldi	r21, 0x00	; 0
    383a:	60 e8       	ldi	r22, 0x80	; 128
    383c:	7f e3       	ldi	r23, 0x3F	; 63
    383e:	ce 01       	movw	r24, r28
    3840:	8f 5d       	subi	r24, 0xDF	; 223
    3842:	9e 4f       	sbci	r25, 0xFE	; 254
    3844:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3848:	00 e0       	ldi	r16, 0x00	; 0
    384a:	10 e0       	ldi	r17, 0x00	; 0
    384c:	98 01       	movw	r18, r16
    384e:	b9 01       	movw	r22, r18
    3850:	a8 01       	movw	r20, r16
    3852:	ce 01       	movw	r24, r28
    3854:	87 5d       	subi	r24, 0xD7	; 215
    3856:	9e 4f       	sbci	r25, 0xFE	; 254
    3858:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    385c:	00 e0       	ldi	r16, 0x00	; 0
    385e:	10 e0       	ldi	r17, 0x00	; 0
    3860:	98 01       	movw	r18, r16
    3862:	b9 01       	movw	r22, r18
    3864:	a8 01       	movw	r20, r16
    3866:	ce 01       	movw	r24, r28
    3868:	8f 5c       	subi	r24, 0xCF	; 207
    386a:	9e 4f       	sbci	r25, 0xFE	; 254
    386c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3870:	00 e0       	ldi	r16, 0x00	; 0
    3872:	10 e0       	ldi	r17, 0x00	; 0
    3874:	98 01       	movw	r18, r16
    3876:	b9 01       	movw	r22, r18
    3878:	a8 01       	movw	r20, r16
    387a:	ce 01       	movw	r24, r28
    387c:	87 5c       	subi	r24, 0xC7	; 199
    387e:	9e 4f       	sbci	r25, 0xFE	; 254
    3880:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3884:	00 e0       	ldi	r16, 0x00	; 0
    3886:	10 e0       	ldi	r17, 0x00	; 0
    3888:	98 01       	movw	r18, r16
    388a:	b9 01       	movw	r22, r18
    388c:	a8 01       	movw	r20, r16
    388e:	ce 01       	movw	r24, r28
    3890:	8f 5b       	subi	r24, 0xBF	; 191
    3892:	9e 4f       	sbci	r25, 0xFE	; 254
    3894:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3898:	00 e0       	ldi	r16, 0x00	; 0
    389a:	10 e0       	ldi	r17, 0x00	; 0
    389c:	98 01       	movw	r18, r16
    389e:	b9 01       	movw	r22, r18
    38a0:	a8 01       	movw	r20, r16
    38a2:	ce 01       	movw	r24, r28
    38a4:	87 5b       	subi	r24, 0xB7	; 183
    38a6:	9e 4f       	sbci	r25, 0xFE	; 254
    38a8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    38ac:	00 e0       	ldi	r16, 0x00	; 0
    38ae:	10 e0       	ldi	r17, 0x00	; 0
    38b0:	98 01       	movw	r18, r16
    38b2:	b9 01       	movw	r22, r18
    38b4:	a8 01       	movw	r20, r16
    38b6:	ce 01       	movw	r24, r28
    38b8:	8f 5a       	subi	r24, 0xAF	; 175
    38ba:	9e 4f       	sbci	r25, 0xFE	; 254
    38bc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    38c0:	00 e0       	ldi	r16, 0x00	; 0
    38c2:	10 e0       	ldi	r17, 0x00	; 0
    38c4:	98 01       	movw	r18, r16
    38c6:	b9 01       	movw	r22, r18
    38c8:	a8 01       	movw	r20, r16
    38ca:	ce 01       	movw	r24, r28
    38cc:	87 5a       	subi	r24, 0xA7	; 167
    38ce:	9e 4f       	sbci	r25, 0xFE	; 254
    38d0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    38d4:	00 e0       	ldi	r16, 0x00	; 0
    38d6:	10 e0       	ldi	r17, 0x00	; 0
    38d8:	98 01       	movw	r18, r16
    38da:	b9 01       	movw	r22, r18
    38dc:	a8 01       	movw	r20, r16
    38de:	ce 01       	movw	r24, r28
    38e0:	8f 59       	subi	r24, 0x9F	; 159
    38e2:	9e 4f       	sbci	r25, 0xFE	; 254
    38e4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    38e8:	00 e0       	ldi	r16, 0x00	; 0
    38ea:	10 e0       	ldi	r17, 0x00	; 0
    38ec:	98 01       	movw	r18, r16
    38ee:	40 e0       	ldi	r20, 0x00	; 0
    38f0:	50 e0       	ldi	r21, 0x00	; 0
    38f2:	60 e8       	ldi	r22, 0x80	; 128
    38f4:	7f e3       	ldi	r23, 0x3F	; 63
    38f6:	ce 01       	movw	r24, r28
    38f8:	87 59       	subi	r24, 0x97	; 151
    38fa:	9e 4f       	sbci	r25, 0xFE	; 254
    38fc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3900:	00 e0       	ldi	r16, 0x00	; 0
    3902:	10 e0       	ldi	r17, 0x00	; 0
    3904:	98 01       	movw	r18, r16
    3906:	b9 01       	movw	r22, r18
    3908:	a8 01       	movw	r20, r16
    390a:	ce 01       	movw	r24, r28
    390c:	8f 58       	subi	r24, 0x8F	; 143
    390e:	9e 4f       	sbci	r25, 0xFE	; 254
    3910:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3914:	00 e0       	ldi	r16, 0x00	; 0
    3916:	10 e0       	ldi	r17, 0x00	; 0
    3918:	98 01       	movw	r18, r16
    391a:	b9 01       	movw	r22, r18
    391c:	a8 01       	movw	r20, r16
    391e:	ce 01       	movw	r24, r28
    3920:	87 58       	subi	r24, 0x87	; 135
    3922:	9e 4f       	sbci	r25, 0xFE	; 254
    3924:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3928:	00 e0       	ldi	r16, 0x00	; 0
    392a:	10 e0       	ldi	r17, 0x00	; 0
    392c:	98 01       	movw	r18, r16
    392e:	b9 01       	movw	r22, r18
    3930:	a8 01       	movw	r20, r16
    3932:	ce 01       	movw	r24, r28
    3934:	8f 57       	subi	r24, 0x7F	; 127
    3936:	9e 4f       	sbci	r25, 0xFE	; 254
    3938:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    393c:	00 e0       	ldi	r16, 0x00	; 0
    393e:	10 e0       	ldi	r17, 0x00	; 0
    3940:	98 01       	movw	r18, r16
    3942:	b9 01       	movw	r22, r18
    3944:	a8 01       	movw	r20, r16
    3946:	ce 01       	movw	r24, r28
    3948:	87 57       	subi	r24, 0x77	; 119
    394a:	9e 4f       	sbci	r25, 0xFE	; 254
    394c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3950:	00 e0       	ldi	r16, 0x00	; 0
    3952:	10 e0       	ldi	r17, 0x00	; 0
    3954:	98 01       	movw	r18, r16
    3956:	b9 01       	movw	r22, r18
    3958:	a8 01       	movw	r20, r16
    395a:	ce 01       	movw	r24, r28
    395c:	8f 56       	subi	r24, 0x6F	; 111
    395e:	9e 4f       	sbci	r25, 0xFE	; 254
    3960:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3964:	00 e0       	ldi	r16, 0x00	; 0
    3966:	10 e0       	ldi	r17, 0x00	; 0
    3968:	98 01       	movw	r18, r16
    396a:	b9 01       	movw	r22, r18
    396c:	a8 01       	movw	r20, r16
    396e:	ce 01       	movw	r24, r28
    3970:	87 56       	subi	r24, 0x67	; 103
    3972:	9e 4f       	sbci	r25, 0xFE	; 254
    3974:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3978:	00 e0       	ldi	r16, 0x00	; 0
    397a:	10 e0       	ldi	r17, 0x00	; 0
    397c:	98 01       	movw	r18, r16
    397e:	b9 01       	movw	r22, r18
    3980:	a8 01       	movw	r20, r16
    3982:	ce 01       	movw	r24, r28
    3984:	8f 55       	subi	r24, 0x5F	; 95
    3986:	9e 4f       	sbci	r25, 0xFE	; 254
    3988:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    398c:	00 e0       	ldi	r16, 0x00	; 0
    398e:	10 e0       	ldi	r17, 0x00	; 0
    3990:	98 01       	movw	r18, r16
    3992:	b9 01       	movw	r22, r18
    3994:	a8 01       	movw	r20, r16
    3996:	ce 01       	movw	r24, r28
    3998:	87 55       	subi	r24, 0x57	; 87
    399a:	9e 4f       	sbci	r25, 0xFE	; 254
    399c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
														  {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),               Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,cos(delta_float)),Complex(sin(delta_float),0)},
    39a0:	c5 01       	movw	r24, r10
    39a2:	b4 01       	movw	r22, r8
    39a4:	0e 94 c0 28 	call	0x5180	; 0x5180 <cos>
    39a8:	6b 01       	movw	r12, r22
    39aa:	7c 01       	movw	r14, r24
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(sin(delta_float),0),Complex(0,cos(delta_float))}};
    39ac:	8b 01       	movw	r16, r22
    39ae:	9c 01       	movw	r18, r24
    39b0:	40 e0       	ldi	r20, 0x00	; 0
    39b2:	50 e0       	ldi	r21, 0x00	; 0
    39b4:	ba 01       	movw	r22, r20
    39b6:	ce 01       	movw	r24, r28
    39b8:	8f 54       	subi	r24, 0x4F	; 79
    39ba:	9e 4f       	sbci	r25, 0xFE	; 254
    39bc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
														  {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),               Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,cos(delta_float)),Complex(sin(delta_float),0)},
    39c0:	c5 01       	movw	r24, r10
    39c2:	b4 01       	movw	r22, r8
    39c4:	0e 94 d4 2b 	call	0x57a8	; 0x57a8 <sin>
    39c8:	4b 01       	movw	r8, r22
    39ca:	5c 01       	movw	r10, r24
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(sin(delta_float),0),Complex(0,cos(delta_float))}};
    39cc:	00 e0       	ldi	r16, 0x00	; 0
    39ce:	10 e0       	ldi	r17, 0x00	; 0
    39d0:	98 01       	movw	r18, r16
    39d2:	ab 01       	movw	r20, r22
    39d4:	bc 01       	movw	r22, r24
    39d6:	ce 01       	movw	r24, r28
    39d8:	87 54       	subi	r24, 0x47	; 71
    39da:	9e 4f       	sbci	r25, 0xFE	; 254
    39dc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    39e0:	00 e0       	ldi	r16, 0x00	; 0
    39e2:	10 e0       	ldi	r17, 0x00	; 0
    39e4:	98 01       	movw	r18, r16
    39e6:	b9 01       	movw	r22, r18
    39e8:	a8 01       	movw	r20, r16
    39ea:	ce 01       	movw	r24, r28
    39ec:	8f 53       	subi	r24, 0x3F	; 63
    39ee:	9e 4f       	sbci	r25, 0xFE	; 254
    39f0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    39f4:	00 e0       	ldi	r16, 0x00	; 0
    39f6:	10 e0       	ldi	r17, 0x00	; 0
    39f8:	98 01       	movw	r18, r16
    39fa:	b9 01       	movw	r22, r18
    39fc:	a8 01       	movw	r20, r16
    39fe:	ce 01       	movw	r24, r28
    3a00:	87 53       	subi	r24, 0x37	; 55
    3a02:	9e 4f       	sbci	r25, 0xFE	; 254
    3a04:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3a08:	00 e0       	ldi	r16, 0x00	; 0
    3a0a:	10 e0       	ldi	r17, 0x00	; 0
    3a0c:	98 01       	movw	r18, r16
    3a0e:	b9 01       	movw	r22, r18
    3a10:	a8 01       	movw	r20, r16
    3a12:	ce 01       	movw	r24, r28
    3a14:	8f 52       	subi	r24, 0x2F	; 47
    3a16:	9e 4f       	sbci	r25, 0xFE	; 254
    3a18:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3a1c:	00 e0       	ldi	r16, 0x00	; 0
    3a1e:	10 e0       	ldi	r17, 0x00	; 0
    3a20:	98 01       	movw	r18, r16
    3a22:	b9 01       	movw	r22, r18
    3a24:	a8 01       	movw	r20, r16
    3a26:	ce 01       	movw	r24, r28
    3a28:	87 52       	subi	r24, 0x27	; 39
    3a2a:	9e 4f       	sbci	r25, 0xFE	; 254
    3a2c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3a30:	00 e0       	ldi	r16, 0x00	; 0
    3a32:	10 e0       	ldi	r17, 0x00	; 0
    3a34:	98 01       	movw	r18, r16
    3a36:	b9 01       	movw	r22, r18
    3a38:	a8 01       	movw	r20, r16
    3a3a:	ce 01       	movw	r24, r28
    3a3c:	8f 51       	subi	r24, 0x1F	; 31
    3a3e:	9e 4f       	sbci	r25, 0xFE	; 254
    3a40:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3a44:	00 e0       	ldi	r16, 0x00	; 0
    3a46:	10 e0       	ldi	r17, 0x00	; 0
    3a48:	98 01       	movw	r18, r16
    3a4a:	b9 01       	movw	r22, r18
    3a4c:	a8 01       	movw	r20, r16
    3a4e:	ce 01       	movw	r24, r28
    3a50:	87 51       	subi	r24, 0x17	; 23
    3a52:	9e 4f       	sbci	r25, 0xFE	; 254
    3a54:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3a58:	00 e0       	ldi	r16, 0x00	; 0
    3a5a:	10 e0       	ldi	r17, 0x00	; 0
    3a5c:	98 01       	movw	r18, r16
    3a5e:	b5 01       	movw	r22, r10
    3a60:	a4 01       	movw	r20, r8
    3a62:	ce 01       	movw	r24, r28
    3a64:	8f 50       	subi	r24, 0x0F	; 15
    3a66:	9e 4f       	sbci	r25, 0xFE	; 254
    3a68:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3a6c:	97 01       	movw	r18, r14
    3a6e:	86 01       	movw	r16, r12
    3a70:	40 e0       	ldi	r20, 0x00	; 0
    3a72:	50 e0       	ldi	r21, 0x00	; 0
    3a74:	ba 01       	movw	r22, r20
    3a76:	ce 01       	movw	r24, r28
    3a78:	87 50       	subi	r24, 0x07	; 7
    3a7a:	9e 4f       	sbci	r25, 0xFE	; 254
    3a7c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE3]={theta1,theta2,theta3}; int phi_list[QB_SIZE3]={phi1,phi2,phi3};
    3a80:	c9 5f       	subi	r28, 0xF9	; 249
    3a82:	dd 4f       	sbci	r29, 0xFD	; 253
    3a84:	59 82       	std	Y+1, r5	; 0x01
    3a86:	48 82       	st	Y, r4
    3a88:	c7 50       	subi	r28, 0x07	; 7
    3a8a:	d2 40       	sbci	r29, 0x02	; 2
    3a8c:	c7 5f       	subi	r28, 0xF7	; 247
    3a8e:	dd 4f       	sbci	r29, 0xFD	; 253
    3a90:	79 82       	std	Y+1, r7	; 0x01
    3a92:	68 82       	st	Y, r6
    3a94:	c9 50       	subi	r28, 0x09	; 9
    3a96:	d2 40       	sbci	r29, 0x02	; 2
    3a98:	c5 5f       	subi	r28, 0xF5	; 245
    3a9a:	dd 4f       	sbci	r29, 0xFD	; 253
    3a9c:	39 82       	std	Y+1, r3	; 0x01
    3a9e:	28 82       	st	Y, r2
    3aa0:	cb 50       	subi	r28, 0x0B	; 11
    3aa2:	d2 40       	sbci	r29, 0x02	; 2
    3aa4:	c1 5f       	subi	r28, 0xF1	; 241
    3aa6:	dd 4f       	sbci	r29, 0xFD	; 253
    3aa8:	88 81       	ld	r24, Y
    3aaa:	99 81       	ldd	r25, Y+1	; 0x01
    3aac:	cf 50       	subi	r28, 0x0F	; 15
    3aae:	d2 40       	sbci	r29, 0x02	; 2
    3ab0:	cf 5f       	subi	r28, 0xFF	; 255
    3ab2:	dd 4f       	sbci	r29, 0xFD	; 253
    3ab4:	99 83       	std	Y+1, r25	; 0x01
    3ab6:	88 83       	st	Y, r24
    3ab8:	c1 50       	subi	r28, 0x01	; 1
    3aba:	d2 40       	sbci	r29, 0x02	; 2
    3abc:	cf 5e       	subi	r28, 0xEF	; 239
    3abe:	dd 4f       	sbci	r29, 0xFD	; 253
    3ac0:	88 81       	ld	r24, Y
    3ac2:	99 81       	ldd	r25, Y+1	; 0x01
    3ac4:	c1 51       	subi	r28, 0x11	; 17
    3ac6:	d2 40       	sbci	r29, 0x02	; 2
    3ac8:	cd 5f       	subi	r28, 0xFD	; 253
    3aca:	dd 4f       	sbci	r29, 0xFD	; 253
    3acc:	99 83       	std	Y+1, r25	; 0x01
    3ace:	88 83       	st	Y, r24
    3ad0:	c3 50       	subi	r28, 0x03	; 3
    3ad2:	d2 40       	sbci	r29, 0x02	; 2
    3ad4:	cd 5e       	subi	r28, 0xED	; 237
    3ad6:	dd 4f       	sbci	r29, 0xFD	; 253
    3ad8:	88 81       	ld	r24, Y
    3ada:	99 81       	ldd	r25, Y+1	; 0x01
    3adc:	c3 51       	subi	r28, 0x13	; 19
    3ade:	d2 40       	sbci	r29, 0x02	; 2
    3ae0:	cb 5f       	subi	r28, 0xFB	; 251
    3ae2:	dd 4f       	sbci	r29, 0xFD	; 253
    3ae4:	99 83       	std	Y+1, r25	; 0x01
    3ae6:	88 83       	st	Y, r24
    3ae8:	c5 50       	subi	r28, 0x05	; 5
    3aea:	d2 40       	sbci	r29, 0x02	; 2
	return vec2ampl(multiply8x8(ampl2vec(QB_SIZE3,theta_list,phi_list),deu_matrix),QB_SIZE3);	
    3aec:	9e 01       	movw	r18, r28
    3aee:	2f 5f       	subi	r18, 0xFF	; 255
    3af0:	3d 4f       	sbci	r19, 0xFD	; 253
    3af2:	ae 01       	movw	r20, r28
    3af4:	49 5f       	subi	r20, 0xF9	; 249
    3af6:	5d 4f       	sbci	r21, 0xFD	; 253
    3af8:	63 e0       	ldi	r22, 0x03	; 3
    3afa:	70 e0       	ldi	r23, 0x00	; 0
    3afc:	c3 5f       	subi	r28, 0xF3	; 243
    3afe:	dd 4f       	sbci	r29, 0xFD	; 253
    3b00:	88 81       	ld	r24, Y
    3b02:	99 81       	ldd	r25, Y+1	; 0x01
    3b04:	cd 50       	subi	r28, 0x0D	; 13
    3b06:	d2 40       	sbci	r29, 0x02	; 2
    3b08:	0e 94 61 05 	call	0xac2	; 0xac2 <_ZN5Gates8ampl2vecEiPiS0_>
    3b0c:	ae 01       	movw	r20, r28
    3b0e:	4f 5f       	subi	r20, 0xFF	; 255
    3b10:	5f 4f       	sbci	r21, 0xFF	; 255
    3b12:	bc 01       	movw	r22, r24
    3b14:	c3 5f       	subi	r28, 0xF3	; 243
    3b16:	dd 4f       	sbci	r29, 0xFD	; 253
    3b18:	88 81       	ld	r24, Y
    3b1a:	99 81       	ldd	r25, Y+1	; 0x01
    3b1c:	cd 50       	subi	r28, 0x0D	; 13
    3b1e:	d2 40       	sbci	r29, 0x02	; 2
    3b20:	0e 94 64 08 	call	0x10c8	; 0x10c8 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_>
    3b24:	43 e0       	ldi	r20, 0x03	; 3
    3b26:	50 e0       	ldi	r21, 0x00	; 0
    3b28:	bc 01       	movw	r22, r24
    3b2a:	c3 5f       	subi	r28, 0xF3	; 243
    3b2c:	dd 4f       	sbci	r29, 0xFD	; 253
    3b2e:	88 81       	ld	r24, Y
    3b30:	99 81       	ldd	r25, Y+1	; 0x01
    3b32:	cd 50       	subi	r28, 0x0D	; 13
    3b34:	d2 40       	sbci	r29, 0x02	; 2
    3b36:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZN5Gates8vec2amplEP7Complexi>
    3b3a:	cc 5e       	subi	r28, 0xEC	; 236
    3b3c:	dd 4f       	sbci	r29, 0xFD	; 253
    3b3e:	0f b6       	in	r0, 0x3f	; 63
    3b40:	f8 94       	cli
    3b42:	de bf       	out	0x3e, r29	; 62
    3b44:	0f be       	out	0x3f, r0	; 63
    3b46:	cd bf       	out	0x3d, r28	; 61
    3b48:	df 91       	pop	r29
    3b4a:	cf 91       	pop	r28
    3b4c:	1f 91       	pop	r17
    3b4e:	0f 91       	pop	r16
    3b50:	ff 90       	pop	r15
    3b52:	ef 90       	pop	r14
    3b54:	df 90       	pop	r13
    3b56:	cf 90       	pop	r12
    3b58:	bf 90       	pop	r11
    3b5a:	af 90       	pop	r10
    3b5c:	9f 90       	pop	r9
    3b5e:	8f 90       	pop	r8
    3b60:	7f 90       	pop	r7
    3b62:	6f 90       	pop	r6
    3b64:	5f 90       	pop	r5
    3b66:	4f 90       	pop	r4
    3b68:	3f 90       	pop	r3
    3b6a:	2f 90       	pop	r2
    3b6c:	08 95       	ret

00003b6e <_GLOBAL__sub_I__ZN5GatesC2Ev>:
#include <stdarg.h>
#include <stdlib.h>
#include <avr/eeprom.h>
Gates::Gates(){setup_seed();}

Serial s;
    3b6e:	89 e0       	ldi	r24, 0x09	; 9
    3b70:	91 e0       	ldi	r25, 0x01	; 1
    3b72:	0e 94 f4 27 	call	0x4fe8	; 0x4fe8 <_ZN6SerialC1Ev>
    3b76:	08 95       	ret

00003b78 <_ZN4QEPUC1Ev>:
#include "qepu.h"
QEPU::QEPU(){serial.writestr("INITIALIZING . . . ");DDRA=0xFF;program_counter=0;}
    3b78:	0f 93       	push	r16
    3b7a:	1f 93       	push	r17
    3b7c:	cf 93       	push	r28
    3b7e:	df 93       	push	r29
    3b80:	ec 01       	movw	r28, r24
    3b82:	0e 94 10 02 	call	0x420	; 0x420 <_ZN6EEPromC1Ev>
    3b86:	8e 01       	movw	r16, r28
    3b88:	0f 5f       	subi	r16, 0xFF	; 255
    3b8a:	1f 4f       	sbci	r17, 0xFF	; 255
    3b8c:	c8 01       	movw	r24, r16
    3b8e:	0e 94 f4 27 	call	0x4fe8	; 0x4fe8 <_ZN6SerialC1Ev>
    3b92:	ce 01       	movw	r24, r28
    3b94:	05 96       	adiw	r24, 0x05	; 5
    3b96:	0e 94 26 03 	call	0x64c	; 0x64c <_ZN5GatesC1Ev>
    3b9a:	66 e8       	ldi	r22, 0x86	; 134
    3b9c:	70 e0       	ldi	r23, 0x00	; 0
    3b9e:	c8 01       	movw	r24, r16
    3ba0:	0e 94 00 28 	call	0x5000	; 0x5000 <_ZN6Serial8writestrEPc>
    3ba4:	8f ef       	ldi	r24, 0xFF	; 255
    3ba6:	8a bb       	out	0x1a, r24	; 26
    3ba8:	1c 82       	std	Y+4, r1	; 0x04
    3baa:	1b 82       	std	Y+3, r1	; 0x03
    3bac:	df 91       	pop	r29
    3bae:	cf 91       	pop	r28
    3bb0:	1f 91       	pop	r17
    3bb2:	0f 91       	pop	r16
    3bb4:	08 95       	ret

00003bb6 <_ZN4QEPU14setbuffctrlpinEii>:
void QEPU::setdatapin(int pin,int state){
	PORTB&=~(1<<pin); // CLEAR PIN
	PORTB|=(state<<pin); // SET PIN
}
void QEPU::setbuffctrlpin(int pin,int state){
	PORTC&=~(1<<pin); // CLEAR PIN
    3bb6:	75 b3       	in	r23, 0x15	; 21
    3bb8:	21 e0       	ldi	r18, 0x01	; 1
    3bba:	30 e0       	ldi	r19, 0x00	; 0
    3bbc:	c9 01       	movw	r24, r18
    3bbe:	06 2e       	mov	r0, r22
    3bc0:	02 c0       	rjmp	.+4      	; 0x3bc6 <_ZN4QEPU14setbuffctrlpinEii+0x10>
    3bc2:	88 0f       	add	r24, r24
    3bc4:	99 1f       	adc	r25, r25
    3bc6:	0a 94       	dec	r0
    3bc8:	e2 f7       	brpl	.-8      	; 0x3bc2 <_ZN4QEPU14setbuffctrlpinEii+0xc>
    3bca:	80 95       	com	r24
    3bcc:	87 23       	and	r24, r23
    3bce:	85 bb       	out	0x15, r24	; 21
	PORTC|=(state<<pin); // SET PIN
    3bd0:	85 b3       	in	r24, 0x15	; 21
    3bd2:	02 c0       	rjmp	.+4      	; 0x3bd8 <_ZN4QEPU14setbuffctrlpinEii+0x22>
    3bd4:	44 0f       	add	r20, r20
    3bd6:	55 1f       	adc	r21, r21
    3bd8:	6a 95       	dec	r22
    3bda:	e2 f7       	brpl	.-8      	; 0x3bd4 <_ZN4QEPU14setbuffctrlpinEii+0x1e>
    3bdc:	48 2b       	or	r20, r24
    3bde:	45 bb       	out	0x15, r20	; 21
    3be0:	08 95       	ret

00003be2 <_ZN4QEPU14deselect_qubitEv>:
	DDRB=0xFF;
	deselect_qubit();
	return deg_read;
}
void QEPU::deselect_qubit(){
	DDRC=0xFF;
    3be2:	2f ef       	ldi	r18, 0xFF	; 255
    3be4:	24 bb       	out	0x14, r18	; 20
	setbuffctrlpin(EO_AB,LOW);
    3be6:	40 e0       	ldi	r20, 0x00	; 0
    3be8:	50 e0       	ldi	r21, 0x00	; 0
    3bea:	64 e0       	ldi	r22, 0x04	; 4
    3bec:	70 e0       	ldi	r23, 0x00	; 0
    3bee:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <_ZN4QEPU14setbuffctrlpinEii>
    3bf2:	08 95       	ret

00003bf4 <_ZN4QEPU10setctrlpinEii>:
void QEPU::setbuffctrlpin(int pin,int state){
	PORTC&=~(1<<pin); // CLEAR PIN
	PORTC|=(state<<pin); // SET PIN
}
void QEPU::setctrlpin(int pin,int state){
	PORTA&=~(1<<pin); // CLEAR PIN
    3bf4:	7b b3       	in	r23, 0x1b	; 27
    3bf6:	21 e0       	ldi	r18, 0x01	; 1
    3bf8:	30 e0       	ldi	r19, 0x00	; 0
    3bfa:	c9 01       	movw	r24, r18
    3bfc:	06 2e       	mov	r0, r22
    3bfe:	02 c0       	rjmp	.+4      	; 0x3c04 <_ZN4QEPU10setctrlpinEii+0x10>
    3c00:	88 0f       	add	r24, r24
    3c02:	99 1f       	adc	r25, r25
    3c04:	0a 94       	dec	r0
    3c06:	e2 f7       	brpl	.-8      	; 0x3c00 <_ZN4QEPU10setctrlpinEii+0xc>
    3c08:	80 95       	com	r24
    3c0a:	87 23       	and	r24, r23
    3c0c:	8b bb       	out	0x1b, r24	; 27
	PORTA|=(state<<pin); // SET PIN
    3c0e:	8b b3       	in	r24, 0x1b	; 27
    3c10:	02 c0       	rjmp	.+4      	; 0x3c16 <_ZN4QEPU10setctrlpinEii+0x22>
    3c12:	44 0f       	add	r20, r20
    3c14:	55 1f       	adc	r21, r21
    3c16:	6a 95       	dec	r22
    3c18:	e2 f7       	brpl	.-8      	; 0x3c12 <_ZN4QEPU10setctrlpinEii+0x1e>
    3c1a:	48 2b       	or	r20, r24
    3c1c:	4b bb       	out	0x1b, r20	; 27
    3c1e:	08 95       	ret

00003c20 <_ZN4QEPU5Utils10int2binstrEii>:
		serial.writestr(" , Phi - ");
		serial.writestrln(phidim);
	}
}

char * QEPU::Utils::int2binstr(int num,int strlength){
    3c20:	0f 93       	push	r16
    3c22:	1f 93       	push	r17
    3c24:	cf 93       	push	r28
    3c26:	df 93       	push	r29
    3c28:	06 2f       	mov	r16, r22
    3c2a:	17 2f       	mov	r17, r23
    3c2c:	ea 01       	movw	r28, r20
    char * str = (char*)malloc(strlength + 1);
    3c2e:	ca 01       	movw	r24, r20
    3c30:	01 96       	adiw	r24, 0x01	; 1
    3c32:	0e 94 73 2c 	call	0x58e6	; 0x58e6 <malloc>
    if(!str) return NULL;
    3c36:	00 97       	sbiw	r24, 0x00	; 0
    3c38:	b9 f0       	breq	.+46     	; 0x3c68 <_ZN4QEPU5Utils10int2binstrEii+0x48>
    str[strlength] = 0;
    3c3a:	fc 01       	movw	r30, r24
    3c3c:	ec 0f       	add	r30, r28
    3c3e:	fd 1f       	adc	r31, r29
    3c40:	10 82       	st	Z, r1

    // type punning because signed shift is implementation-defined
    unsigned u = *(unsigned *)&num;
    3c42:	20 2f       	mov	r18, r16
    3c44:	31 2f       	mov	r19, r17
    for(; strlength--; u >>= 1)
    3c46:	be 01       	movw	r22, r28
    3c48:	61 50       	subi	r22, 0x01	; 1
    3c4a:	71 09       	sbc	r23, r1
    3c4c:	cd 2b       	or	r28, r29
    3c4e:	71 f0       	breq	.+28     	; 0x3c6c <_ZN4QEPU5Utils10int2binstrEii+0x4c>
    str[strlength] = u & 1 ? '1' : '0';
    3c50:	20 ff       	sbrs	r18, 0
    3c52:	02 c0       	rjmp	.+4      	; 0x3c58 <_ZN4QEPU5Utils10int2binstrEii+0x38>
    3c54:	41 e3       	ldi	r20, 0x31	; 49
    3c56:	01 c0       	rjmp	.+2      	; 0x3c5a <_ZN4QEPU5Utils10int2binstrEii+0x3a>
    3c58:	40 e3       	ldi	r20, 0x30	; 48
    3c5a:	42 93       	st	-Z, r20
    if(!str) return NULL;
    str[strlength] = 0;

    // type punning because signed shift is implementation-defined
    unsigned u = *(unsigned *)&num;
    for(; strlength--; u >>= 1)
    3c5c:	36 95       	lsr	r19
    3c5e:	27 95       	ror	r18
    3c60:	61 50       	subi	r22, 0x01	; 1
    3c62:	71 09       	sbc	r23, r1
    3c64:	a8 f7       	brcc	.-22     	; 0x3c50 <_ZN4QEPU5Utils10int2binstrEii+0x30>
    3c66:	02 c0       	rjmp	.+4      	; 0x3c6c <_ZN4QEPU5Utils10int2binstrEii+0x4c>
	}
}

char * QEPU::Utils::int2binstr(int num,int strlength){
    char * str = (char*)malloc(strlength + 1);
    if(!str) return NULL;
    3c68:	80 e0       	ldi	r24, 0x00	; 0
    3c6a:	90 e0       	ldi	r25, 0x00	; 0
    unsigned u = *(unsigned *)&num;
    for(; strlength--; u >>= 1)
    str[strlength] = u & 1 ? '1' : '0';

    return str;
}
    3c6c:	df 91       	pop	r29
    3c6e:	cf 91       	pop	r28
    3c70:	1f 91       	pop	r17
    3c72:	0f 91       	pop	r16
    3c74:	08 95       	ret

00003c76 <_ZN4QEPU5Utils10str2intarrEPc>:
char* QEPU::Utils::char2str(char c){
	char*str=(char*)malloc(sizeof(char));
	sprintf(str,"%d",c);
	return str;
}
int*  QEPU::Utils::str2intarr(char* c){
    3c76:	cf 92       	push	r12
    3c78:	df 92       	push	r13
    3c7a:	ef 92       	push	r14
    3c7c:	ff 92       	push	r15
    3c7e:	0f 93       	push	r16
    3c80:	1f 93       	push	r17
    3c82:	cf 93       	push	r28
    3c84:	df 93       	push	r29
    3c86:	d6 2f       	mov	r29, r22
    3c88:	c7 2f       	mov	r28, r23
    3c8a:	e6 2f       	mov	r30, r22
    3c8c:	f7 2f       	mov	r31, r23
	int c_length=0;
    3c8e:	80 e0       	ldi	r24, 0x00	; 0
    3c90:	90 e0       	ldi	r25, 0x00	; 0
	for(int i=0;true;i++) if(c[i]==0xFF && c[i-1]==0xFF && c[i-2]==0xFF && c[i-3]==0xFF && c[i-4]==0xFF) break; else c_length++; c_length-=4;
    3c92:	21 91       	ld	r18, Z+
    3c94:	2f 3f       	cpi	r18, 0xFF	; 255
    3c96:	89 f4       	brne	.+34     	; 0x3cba <_ZN4QEPU5Utils10str2intarrEPc+0x44>
    3c98:	df 01       	movw	r26, r30
    3c9a:	12 97       	sbiw	r26, 0x02	; 2
    3c9c:	4c 91       	ld	r20, X
    3c9e:	4f 3f       	cpi	r20, 0xFF	; 255
    3ca0:	61 f4       	brne	.+24     	; 0x3cba <_ZN4QEPU5Utils10str2intarrEPc+0x44>
    3ca2:	11 97       	sbiw	r26, 0x01	; 1
    3ca4:	4c 91       	ld	r20, X
    3ca6:	4f 3f       	cpi	r20, 0xFF	; 255
    3ca8:	41 f4       	brne	.+16     	; 0x3cba <_ZN4QEPU5Utils10str2intarrEPc+0x44>
    3caa:	11 97       	sbiw	r26, 0x01	; 1
    3cac:	4c 91       	ld	r20, X
    3cae:	4f 3f       	cpi	r20, 0xFF	; 255
    3cb0:	21 f4       	brne	.+8      	; 0x3cba <_ZN4QEPU5Utils10str2intarrEPc+0x44>
    3cb2:	11 97       	sbiw	r26, 0x01	; 1
    3cb4:	2c 91       	ld	r18, X
    3cb6:	2f 3f       	cpi	r18, 0xFF	; 255
    3cb8:	11 f0       	breq	.+4      	; 0x3cbe <_ZN4QEPU5Utils10str2intarrEPc+0x48>
    3cba:	01 96       	adiw	r24, 0x01	; 1
    3cbc:	ea cf       	rjmp	.-44     	; 0x3c92 <_ZN4QEPU5Utils10str2intarrEPc+0x1c>
    3cbe:	8c 01       	movw	r16, r24
    3cc0:	04 50       	subi	r16, 0x04	; 4
    3cc2:	11 09       	sbc	r17, r1
	
	int *intarr=(int*)malloc(sizeof(int)*(c_length+5));
    3cc4:	6c 01       	movw	r12, r24
    3cc6:	2f ef       	ldi	r18, 0xFF	; 255
    3cc8:	c2 1a       	sub	r12, r18
    3cca:	d2 0a       	sbc	r13, r18
    3ccc:	76 01       	movw	r14, r12
    3cce:	ee 0c       	add	r14, r14
    3cd0:	ff 1c       	adc	r15, r15
    3cd2:	c7 01       	movw	r24, r14
    3cd4:	0e 94 73 2c 	call	0x58e6	; 0x58e6 <malloc>
	for(int i=0;i<c_length;i++) intarr[i]=(int)c[i];
    3cd8:	10 16       	cp	r1, r16
    3cda:	11 06       	cpc	r1, r17
    3cdc:	74 f4       	brge	.+28     	; 0x3cfa <_ZN4QEPU5Utils10str2intarrEPc+0x84>
    3cde:	dc 01       	movw	r26, r24
    3ce0:	ed 2f       	mov	r30, r29
    3ce2:	fc 2f       	mov	r31, r28
    3ce4:	20 e0       	ldi	r18, 0x00	; 0
    3ce6:	30 e0       	ldi	r19, 0x00	; 0
    3ce8:	41 91       	ld	r20, Z+
    3cea:	50 e0       	ldi	r21, 0x00	; 0
    3cec:	4d 93       	st	X+, r20
    3cee:	5d 93       	st	X+, r21
    3cf0:	2f 5f       	subi	r18, 0xFF	; 255
    3cf2:	3f 4f       	sbci	r19, 0xFF	; 255
    3cf4:	20 17       	cp	r18, r16
    3cf6:	31 07       	cpc	r19, r17
    3cf8:	bc f3       	brlt	.-18     	; 0x3ce8 <_ZN4QEPU5Utils10str2intarrEPc+0x72>
	for(int i=c_length;i<c_length+5;i++) intarr[i]=0xFF;
    3cfa:	0c 15       	cp	r16, r12
    3cfc:	1d 05       	cpc	r17, r13
    3cfe:	7c f4       	brge	.+30     	; 0x3d1e <_ZN4QEPU5Utils10str2intarrEPc+0xa8>
    3d00:	f7 01       	movw	r30, r14
    3d02:	3a 97       	sbiw	r30, 0x0a	; 10
    3d04:	e8 0f       	add	r30, r24
    3d06:	f9 1f       	adc	r31, r25
    3d08:	25 e0       	ldi	r18, 0x05	; 5
    3d0a:	30 e0       	ldi	r19, 0x00	; 0
    3d0c:	4f ef       	ldi	r20, 0xFF	; 255
    3d0e:	50 e0       	ldi	r21, 0x00	; 0
    3d10:	41 93       	st	Z+, r20
    3d12:	51 93       	st	Z+, r21
    3d14:	21 50       	subi	r18, 0x01	; 1
    3d16:	31 09       	sbc	r19, r1
    3d18:	21 15       	cp	r18, r1
    3d1a:	31 05       	cpc	r19, r1
    3d1c:	c9 f7       	brne	.-14     	; 0x3d10 <_ZN4QEPU5Utils10str2intarrEPc+0x9a>
	return intarr;
}
    3d1e:	df 91       	pop	r29
    3d20:	cf 91       	pop	r28
    3d22:	1f 91       	pop	r17
    3d24:	0f 91       	pop	r16
    3d26:	ff 90       	pop	r15
    3d28:	ef 90       	pop	r14
    3d2a:	df 90       	pop	r13
    3d2c:	cf 90       	pop	r12
    3d2e:	08 95       	ret

00003d30 <_ZN4QEPU5Utils7int2strEi>:
		dec/=10;
		++counter;
	}
	return counter;
}
char* QEPU::Utils::int2str(int dec){
    3d30:	0f 93       	push	r16
    3d32:	1f 93       	push	r17
    3d34:	cf 93       	push	r28
    3d36:	df 93       	push	r29
    3d38:	cd b7       	in	r28, 0x3d	; 61
    3d3a:	de b7       	in	r29, 0x3e	; 62
    3d3c:	2a 97       	sbiw	r28, 0x0a	; 10
    3d3e:	0f b6       	in	r0, 0x3f	; 63
    3d40:	f8 94       	cli
    3d42:	de bf       	out	0x3e, r29	; 62
    3d44:	0f be       	out	0x3f, r0	; 63
    3d46:	cd bf       	out	0x3d, r28	; 61
	char str[10];
	sprintf(str,"%d",dec);
    3d48:	7f 93       	push	r23
    3d4a:	6f 93       	push	r22
    3d4c:	8a e9       	ldi	r24, 0x9A	; 154
    3d4e:	90 e0       	ldi	r25, 0x00	; 0
    3d50:	9f 93       	push	r25
    3d52:	8f 93       	push	r24
    3d54:	8e 01       	movw	r16, r28
    3d56:	0f 5f       	subi	r16, 0xFF	; 255
    3d58:	1f 4f       	sbci	r17, 0xFF	; 255
    3d5a:	1f 93       	push	r17
    3d5c:	0f 93       	push	r16
    3d5e:	0e 94 34 2f 	call	0x5e68	; 0x5e68 <sprintf>
	return str;
    3d62:	0f 90       	pop	r0
    3d64:	0f 90       	pop	r0
    3d66:	0f 90       	pop	r0
    3d68:	0f 90       	pop	r0
    3d6a:	0f 90       	pop	r0
    3d6c:	0f 90       	pop	r0
}
    3d6e:	c8 01       	movw	r24, r16
    3d70:	2a 96       	adiw	r28, 0x0a	; 10
    3d72:	0f b6       	in	r0, 0x3f	; 63
    3d74:	f8 94       	cli
    3d76:	de bf       	out	0x3e, r29	; 62
    3d78:	0f be       	out	0x3f, r0	; 63
    3d7a:	cd bf       	out	0x3d, r28	; 61
    3d7c:	df 91       	pop	r29
    3d7e:	cf 91       	pop	r28
    3d80:	1f 91       	pop	r17
    3d82:	0f 91       	pop	r16
    3d84:	08 95       	ret

00003d86 <_ZN4QEPU5Utils5delayEi>:
	sprintf(str2,"%d",n2);
	strcat(str1,str2);
	return atoi(str1);
}
int QEPU::Utils::delay(int ms){
	while(ms--) _delay_ms(1);
    3d86:	61 15       	cp	r22, r1
    3d88:	71 05       	cpc	r23, r1
    3d8a:	51 f0       	breq	.+20     	; 0x3da0 <_ZN4QEPU5Utils5delayEi+0x1a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3d8c:	86 e6       	ldi	r24, 0x66	; 102
    3d8e:	9e e0       	ldi	r25, 0x0E	; 14
    3d90:	01 97       	sbiw	r24, 0x01	; 1
    3d92:	f1 f7       	brne	.-4      	; 0x3d90 <_ZN4QEPU5Utils5delayEi+0xa>
    3d94:	00 00       	nop
    3d96:	61 50       	subi	r22, 0x01	; 1
    3d98:	71 09       	sbc	r23, r1
    3d9a:	61 15       	cp	r22, r1
    3d9c:	71 05       	cpc	r23, r1
    3d9e:	b1 f7       	brne	.-20     	; 0x3d8c <_ZN4QEPU5Utils5delayEi+0x6>
}
    3da0:	08 95       	ret

00003da2 <_ZN4QEPU12select_qubitEi>:
}
void QEPU::deselect_qubit(){
	DDRC=0xFF;
	setbuffctrlpin(EO_AB,LOW);
}
void QEPU::select_qubit(int index){
    3da2:	af 92       	push	r10
    3da4:	bf 92       	push	r11
    3da6:	cf 92       	push	r12
    3da8:	df 92       	push	r13
    3daa:	ef 92       	push	r14
    3dac:	ff 92       	push	r15
    3dae:	0f 93       	push	r16
    3db0:	1f 93       	push	r17
    3db2:	cf 93       	push	r28
    3db4:	df 93       	push	r29
    3db6:	00 d0       	rcall	.+0      	; 0x3db8 <_ZN4QEPU12select_qubitEi+0x16>
    3db8:	00 d0       	rcall	.+0      	; 0x3dba <_ZN4QEPU12select_qubitEi+0x18>
    3dba:	00 d0       	rcall	.+0      	; 0x3dbc <_ZN4QEPU12select_qubitEi+0x1a>
    3dbc:	cd b7       	in	r28, 0x3d	; 61
    3dbe:	de b7       	in	r29, 0x3e	; 62
    3dc0:	8c 01       	movw	r16, r24
	int address_buffer[ADDRESS_BUFFER_SIZE];
	int mask_bit_addressbuff=0b1111;
	for(int i=0;i<ADDRESS_BUFFER_SIZE;i++){
		address_buffer[i]=(index&mask_bit_addressbuff)>>(4*i);
    3dc2:	cb 01       	movw	r24, r22
    3dc4:	8f 70       	andi	r24, 0x0F	; 15
    3dc6:	99 27       	eor	r25, r25
    3dc8:	9a 83       	std	Y+2, r25	; 0x02
    3dca:	89 83       	std	Y+1, r24	; 0x01
    3dcc:	cb 01       	movw	r24, r22
    3dce:	80 7f       	andi	r24, 0xF0	; 240
    3dd0:	99 27       	eor	r25, r25
    3dd2:	95 95       	asr	r25
    3dd4:	87 95       	ror	r24
    3dd6:	95 95       	asr	r25
    3dd8:	87 95       	ror	r24
    3dda:	95 95       	asr	r25
    3ddc:	87 95       	ror	r24
    3dde:	95 95       	asr	r25
    3de0:	87 95       	ror	r24
    3de2:	9c 83       	std	Y+4, r25	; 0x04
    3de4:	8b 83       	std	Y+3, r24	; 0x03
    3de6:	66 27       	eor	r22, r22
    3de8:	7f 70       	andi	r23, 0x0F	; 15
    3dea:	87 2f       	mov	r24, r23
    3dec:	88 0f       	add	r24, r24
    3dee:	88 0b       	sbc	r24, r24
    3df0:	7d 83       	std	Y+5, r23	; 0x05
    3df2:	8e 83       	std	Y+6, r24	; 0x06
		mask_bit_addressbuff<<=4;
	}
	DDRA=0xFF;
    3df4:	8f ef       	ldi	r24, 0xFF	; 255
    3df6:	8a bb       	out	0x1a, r24	; 26
	DDRC=0xFF;
    3df8:	84 bb       	out	0x14, r24	; 20
}
void QEPU::setdata(int bin){
	PORTB=bin;
}
void QEPU::setctrl(int bin){
	PORTA=bin;
    3dfa:	89 81       	ldd	r24, Y+1	; 0x01
    3dfc:	8b bb       	out	0x1b, r24	; 27
	}
	DDRA=0xFF;
	DDRC=0xFF;
	
	setctrl(address_buffer[0]);
	setbuffctrlpin(IN_ABBUFFER_START,HIGH);
    3dfe:	41 e0       	ldi	r20, 0x01	; 1
    3e00:	50 e0       	ldi	r21, 0x00	; 0
    3e02:	62 e0       	ldi	r22, 0x02	; 2
    3e04:	70 e0       	ldi	r23, 0x00	; 0
    3e06:	c8 01       	movw	r24, r16
    3e08:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <_ZN4QEPU14setbuffctrlpinEii>
	setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
    3e0c:	41 e0       	ldi	r20, 0x01	; 1
    3e0e:	50 e0       	ldi	r21, 0x00	; 0
    3e10:	63 e0       	ldi	r22, 0x03	; 3
    3e12:	70 e0       	ldi	r23, 0x00	; 0
    3e14:	c8 01       	movw	r24, r16
    3e16:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <_ZN4QEPU14setbuffctrlpinEii>
	setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
    3e1a:	40 e0       	ldi	r20, 0x00	; 0
    3e1c:	50 e0       	ldi	r21, 0x00	; 0
    3e1e:	63 e0       	ldi	r22, 0x03	; 3
    3e20:	70 e0       	ldi	r23, 0x00	; 0
    3e22:	c8 01       	movw	r24, r16
    3e24:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <_ZN4QEPU14setbuffctrlpinEii>
	setbuffctrlpin(IN_ABBUFFER_START,LOW);
    3e28:	40 e0       	ldi	r20, 0x00	; 0
    3e2a:	50 e0       	ldi	r21, 0x00	; 0
    3e2c:	62 e0       	ldi	r22, 0x02	; 2
    3e2e:	70 e0       	ldi	r23, 0x00	; 0
    3e30:	c8 01       	movw	r24, r16
    3e32:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <_ZN4QEPU14setbuffctrlpinEii>
	utils.delay(ADDRESS_WRITE_DELAY);
    3e36:	68 01       	movw	r12, r16
    3e38:	82 e0       	ldi	r24, 0x02	; 2
    3e3a:	c8 0e       	add	r12, r24
    3e3c:	d1 1c       	adc	r13, r1
    3e3e:	6a e0       	ldi	r22, 0x0A	; 10
    3e40:	70 e0       	ldi	r23, 0x00	; 0
    3e42:	c6 01       	movw	r24, r12
    3e44:	0e 94 c3 1e 	call	0x3d86	; 0x3d86 <_ZN4QEPU5Utils5delayEi>
    3e48:	7e 01       	movw	r14, r28
    3e4a:	93 e0       	ldi	r25, 0x03	; 3
    3e4c:	e9 0e       	add	r14, r25
    3e4e:	f1 1c       	adc	r15, r1
    3e50:	5e 01       	movw	r10, r28
    3e52:	e7 e0       	ldi	r30, 0x07	; 7
    3e54:	ae 0e       	add	r10, r30
    3e56:	b1 1c       	adc	r11, r1
	for(int i=1;i<ADDRESS_BUFFER_SIZE;i++){
		setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
    3e58:	41 e0       	ldi	r20, 0x01	; 1
    3e5a:	50 e0       	ldi	r21, 0x00	; 0
    3e5c:	63 e0       	ldi	r22, 0x03	; 3
    3e5e:	70 e0       	ldi	r23, 0x00	; 0
    3e60:	c8 01       	movw	r24, r16
    3e62:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <_ZN4QEPU14setbuffctrlpinEii>
		setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
    3e66:	40 e0       	ldi	r20, 0x00	; 0
    3e68:	50 e0       	ldi	r21, 0x00	; 0
    3e6a:	63 e0       	ldi	r22, 0x03	; 3
    3e6c:	70 e0       	ldi	r23, 0x00	; 0
    3e6e:	c8 01       	movw	r24, r16
    3e70:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <_ZN4QEPU14setbuffctrlpinEii>
		setctrl(address_buffer[i]);
    3e74:	f7 01       	movw	r30, r14
    3e76:	80 81       	ld	r24, Z
    3e78:	f2 e0       	ldi	r31, 0x02	; 2
    3e7a:	ef 0e       	add	r14, r31
    3e7c:	f1 1c       	adc	r15, r1
}
void QEPU::setdata(int bin){
	PORTB=bin;
}
void QEPU::setctrl(int bin){
	PORTA=bin;
    3e7e:	8b bb       	out	0x1b, r24	; 27
	utils.delay(ADDRESS_WRITE_DELAY);
	for(int i=1;i<ADDRESS_BUFFER_SIZE;i++){
		setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
		setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
		setctrl(address_buffer[i]);
		utils.delay(ADDRESS_WRITE_DELAY);
    3e80:	6a e0       	ldi	r22, 0x0A	; 10
    3e82:	70 e0       	ldi	r23, 0x00	; 0
    3e84:	c6 01       	movw	r24, r12
    3e86:	0e 94 c3 1e 	call	0x3d86	; 0x3d86 <_ZN4QEPU5Utils5delayEi>
	setbuffctrlpin(IN_ABBUFFER_START,HIGH);
	setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
	setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
	setbuffctrlpin(IN_ABBUFFER_START,LOW);
	utils.delay(ADDRESS_WRITE_DELAY);
	for(int i=1;i<ADDRESS_BUFFER_SIZE;i++){
    3e8a:	ea 14       	cp	r14, r10
    3e8c:	fb 04       	cpc	r15, r11
    3e8e:	21 f7       	brne	.-56     	; 0x3e58 <_ZN4QEPU12select_qubitEi+0xb6>
		setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
		setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
		setctrl(address_buffer[i]);
		utils.delay(ADDRESS_WRITE_DELAY);
	}
	setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
    3e90:	41 e0       	ldi	r20, 0x01	; 1
    3e92:	50 e0       	ldi	r21, 0x00	; 0
    3e94:	63 e0       	ldi	r22, 0x03	; 3
    3e96:	70 e0       	ldi	r23, 0x00	; 0
    3e98:	c8 01       	movw	r24, r16
    3e9a:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <_ZN4QEPU14setbuffctrlpinEii>
	setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
    3e9e:	40 e0       	ldi	r20, 0x00	; 0
    3ea0:	50 e0       	ldi	r21, 0x00	; 0
    3ea2:	63 e0       	ldi	r22, 0x03	; 3
    3ea4:	70 e0       	ldi	r23, 0x00	; 0
    3ea6:	c8 01       	movw	r24, r16
    3ea8:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <_ZN4QEPU14setbuffctrlpinEii>
	setbuffctrlpin(EO_AB,HIGH);
    3eac:	41 e0       	ldi	r20, 0x01	; 1
    3eae:	50 e0       	ldi	r21, 0x00	; 0
    3eb0:	64 e0       	ldi	r22, 0x04	; 4
    3eb2:	70 e0       	ldi	r23, 0x00	; 0
    3eb4:	c8 01       	movw	r24, r16
    3eb6:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <_ZN4QEPU14setbuffctrlpinEii>
}
    3eba:	26 96       	adiw	r28, 0x06	; 6
    3ebc:	0f b6       	in	r0, 0x3f	; 63
    3ebe:	f8 94       	cli
    3ec0:	de bf       	out	0x3e, r29	; 62
    3ec2:	0f be       	out	0x3f, r0	; 63
    3ec4:	cd bf       	out	0x3d, r28	; 61
    3ec6:	df 91       	pop	r29
    3ec8:	cf 91       	pop	r28
    3eca:	1f 91       	pop	r17
    3ecc:	0f 91       	pop	r16
    3ece:	ff 90       	pop	r15
    3ed0:	ef 90       	pop	r14
    3ed2:	df 90       	pop	r13
    3ed4:	cf 90       	pop	r12
    3ed6:	bf 90       	pop	r11
    3ed8:	af 90       	pop	r10
    3eda:	08 95       	ret

00003edc <_ZN4QEPU5writeEiii>:
#include "qepu.h"
QEPU::QEPU(){serial.writestr("INITIALIZING . . . ");DDRA=0xFF;program_counter=0;}
void QEPU::write(int index,int dim,int deg){
    3edc:	0f 93       	push	r16
    3ede:	1f 93       	push	r17
    3ee0:	cf 93       	push	r28
    3ee2:	df 93       	push	r29
    3ee4:	ec 01       	movw	r28, r24
    3ee6:	8a 01       	movw	r16, r20
	DDRB=0xFF;
    3ee8:	8f ef       	ldi	r24, 0xFF	; 255
    3eea:	87 bb       	out	0x17, r24	; 23
	setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
	setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
	setbuffctrlpin(EO_AB,HIGH);
}
void QEPU::setdata(int bin){
	PORTB=bin;
    3eec:	28 bb       	out	0x18, r18	; 24
QEPU::QEPU(){serial.writestr("INITIALIZING . . . ");DDRA=0xFF;program_counter=0;}
void QEPU::write(int index,int dim,int deg){
	DDRB=0xFF;
	
	setdata(deg);
	select_qubit(index);//setctrl(index);
    3eee:	ce 01       	movw	r24, r28
    3ef0:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <_ZN4QEPU12select_qubitEi>
	setctrlpin(4,dim);
    3ef4:	a8 01       	movw	r20, r16
    3ef6:	64 e0       	ldi	r22, 0x04	; 4
    3ef8:	70 e0       	ldi	r23, 0x00	; 0
    3efa:	ce 01       	movw	r24, r28
    3efc:	0e 94 fa 1d 	call	0x3bf4	; 0x3bf4 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(6,1); // CLOCK UP LOAD
    3f00:	41 e0       	ldi	r20, 0x01	; 1
    3f02:	50 e0       	ldi	r21, 0x00	; 0
    3f04:	66 e0       	ldi	r22, 0x06	; 6
    3f06:	70 e0       	ldi	r23, 0x00	; 0
    3f08:	ce 01       	movw	r24, r28
    3f0a:	0e 94 fa 1d 	call	0x3bf4	; 0x3bf4 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(6,0); // CLOCK DOWN LOAD
    3f0e:	40 e0       	ldi	r20, 0x00	; 0
    3f10:	50 e0       	ldi	r21, 0x00	; 0
    3f12:	66 e0       	ldi	r22, 0x06	; 6
    3f14:	70 e0       	ldi	r23, 0x00	; 0
    3f16:	ce 01       	movw	r24, r28
    3f18:	0e 94 fa 1d 	call	0x3bf4	; 0x3bf4 <_ZN4QEPU10setctrlpinEii>
	setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
	setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
	setbuffctrlpin(EO_AB,HIGH);
}
void QEPU::setdata(int bin){
	PORTB=bin;
    3f1c:	18 ba       	out	0x18, r1	; 24
	select_qubit(index);//setctrl(index);
	setctrlpin(4,dim);
	setctrlpin(6,1); // CLOCK UP LOAD
	setctrlpin(6,0); // CLOCK DOWN LOAD
	setdata(0);
	deselect_qubit();
    3f1e:	ce 01       	movw	r24, r28
    3f20:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <_ZN4QEPU14deselect_qubitEv>
}
    3f24:	df 91       	pop	r29
    3f26:	cf 91       	pop	r28
    3f28:	1f 91       	pop	r17
    3f2a:	0f 91       	pop	r16
    3f2c:	08 95       	ret

00003f2e <_ZN4QEPU4readEii>:
int QEPU::read(int index,int dim){
    3f2e:	0f 93       	push	r16
    3f30:	1f 93       	push	r17
    3f32:	cf 93       	push	r28
    3f34:	df 93       	push	r29
    3f36:	ec 01       	movw	r28, r24
    3f38:	8a 01       	movw	r16, r20
	DDRB=0x00;
    3f3a:	17 ba       	out	0x17, r1	; 23
	select_qubit(index); //setctrl(index);
    3f3c:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <_ZN4QEPU12select_qubitEi>
	//OPEN ALL AND GATES
	setctrlpin(5,1); // CLOCK UP READ
    3f40:	41 e0       	ldi	r20, 0x01	; 1
    3f42:	50 e0       	ldi	r21, 0x00	; 0
    3f44:	65 e0       	ldi	r22, 0x05	; 5
    3f46:	70 e0       	ldi	r23, 0x00	; 0
    3f48:	ce 01       	movw	r24, r28
    3f4a:	0e 94 fa 1d 	call	0x3bf4	; 0x3bf4 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(4,dim);
    3f4e:	a8 01       	movw	r20, r16
    3f50:	64 e0       	ldi	r22, 0x04	; 4
    3f52:	70 e0       	ldi	r23, 0x00	; 0
    3f54:	ce 01       	movw	r24, r28
    3f56:	0e 94 fa 1d 	call	0x3bf4	; 0x3bf4 <_ZN4QEPU10setctrlpinEii>
	int deg_read=PINB; // READ INPUT
    3f5a:	16 b3       	in	r17, 0x16	; 22
}
void QEPU::setdata(int bin){
	PORTB=bin;
}
void QEPU::setctrl(int bin){
	PORTA=bin;
    3f5c:	1b ba       	out	0x1b, r1	; 27
	setctrlpin(5,1); // CLOCK UP READ
	setctrlpin(4,dim);
	int deg_read=PINB; // READ INPUT
	//CLOSE ALL AND GATES
	setctrl(0); // CLOSE ALL CONTROLS
	DDRB=0xFF;
    3f5e:	8f ef       	ldi	r24, 0xFF	; 255
    3f60:	87 bb       	out	0x17, r24	; 23
	deselect_qubit();
    3f62:	ce 01       	movw	r24, r28
    3f64:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <_ZN4QEPU14deselect_qubitEv>
	return deg_read;
}
    3f68:	81 2f       	mov	r24, r17
    3f6a:	90 e0       	ldi	r25, 0x00	; 0
    3f6c:	df 91       	pop	r29
    3f6e:	cf 91       	pop	r28
    3f70:	1f 91       	pop	r17
    3f72:	0f 91       	pop	r16
    3f74:	08 95       	ret

00003f76 <_ZN4QEPU7dumpmemEv>:
}
void QEPU::setctrlpin(int pin,int state){
	PORTA&=~(1<<pin); // CLEAR PIN
	PORTA|=(state<<pin); // SET PIN
}
void QEPU::dumpmem(){
    3f76:	6f 92       	push	r6
    3f78:	7f 92       	push	r7
    3f7a:	8f 92       	push	r8
    3f7c:	9f 92       	push	r9
    3f7e:	af 92       	push	r10
    3f80:	bf 92       	push	r11
    3f82:	cf 92       	push	r12
    3f84:	df 92       	push	r13
    3f86:	ef 92       	push	r14
    3f88:	ff 92       	push	r15
    3f8a:	0f 93       	push	r16
    3f8c:	1f 93       	push	r17
    3f8e:	cf 93       	push	r28
    3f90:	df 93       	push	r29
    3f92:	6c 01       	movw	r12, r24
	serial.writestrln("");
    3f94:	8c 01       	movw	r16, r24
    3f96:	0f 5f       	subi	r16, 0xFF	; 255
    3f98:	1f 4f       	sbci	r17, 0xFF	; 255
    3f9a:	63 ec       	ldi	r22, 0xC3	; 195
    3f9c:	70 e0       	ldi	r23, 0x00	; 0
    3f9e:	c8 01       	movw	r24, r16
    3fa0:	0e 94 15 28 	call	0x502a	; 0x502a <_ZN6Serial10writestrlnEPc>
	serial.writestrln("** QUANTUM MEMORY DUMP **");
    3fa4:	6d e9       	ldi	r22, 0x9D	; 157
    3fa6:	70 e0       	ldi	r23, 0x00	; 0
    3fa8:	c8 01       	movw	r24, r16
    3faa:	0e 94 15 28 	call	0x502a	; 0x502a <_ZN6Serial10writestrlnEPc>
	for(int i=0;i<QUBIT_COUNT;i++){
    3fae:	c0 e0       	ldi	r28, 0x00	; 0
    3fb0:	d0 e0       	ldi	r29, 0x00	; 0
		char * thedim=(char*)malloc(sizeof(char)*3); sprintf(thedim,"%d",read(i,THE));
    3fb2:	0f 2e       	mov	r0, r31
    3fb4:	fa e9       	ldi	r31, 0x9A	; 154
    3fb6:	ef 2e       	mov	r14, r31
    3fb8:	f0 e0       	ldi	r31, 0x00	; 0
    3fba:	ff 2e       	mov	r15, r31
    3fbc:	f0 2d       	mov	r31, r0
    3fbe:	83 e0       	ldi	r24, 0x03	; 3
    3fc0:	90 e0       	ldi	r25, 0x00	; 0
    3fc2:	0e 94 73 2c 	call	0x58e6	; 0x58e6 <malloc>
    3fc6:	88 2e       	mov	r8, r24
    3fc8:	99 2e       	mov	r9, r25
    3fca:	40 e0       	ldi	r20, 0x00	; 0
    3fcc:	50 e0       	ldi	r21, 0x00	; 0
    3fce:	be 01       	movw	r22, r28
    3fd0:	c6 01       	movw	r24, r12
    3fd2:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    3fd6:	9f 93       	push	r25
    3fd8:	8f 93       	push	r24
    3fda:	ff 92       	push	r15
    3fdc:	ef 92       	push	r14
    3fde:	9f 92       	push	r9
    3fe0:	8f 92       	push	r8
    3fe2:	0e 94 34 2f 	call	0x5e68	; 0x5e68 <sprintf>
		char * phidim=(char*)malloc(sizeof(char)*3); sprintf(phidim,"%d",read(i,PHI));
    3fe6:	83 e0       	ldi	r24, 0x03	; 3
    3fe8:	90 e0       	ldi	r25, 0x00	; 0
    3fea:	0e 94 73 2c 	call	0x58e6	; 0x58e6 <malloc>
    3fee:	a8 2e       	mov	r10, r24
    3ff0:	b9 2e       	mov	r11, r25
    3ff2:	41 e0       	ldi	r20, 0x01	; 1
    3ff4:	50 e0       	ldi	r21, 0x00	; 0
    3ff6:	be 01       	movw	r22, r28
    3ff8:	c6 01       	movw	r24, r12
    3ffa:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    3ffe:	9f 93       	push	r25
    4000:	8f 93       	push	r24
    4002:	ff 92       	push	r15
    4004:	ef 92       	push	r14
    4006:	bf 92       	push	r11
    4008:	af 92       	push	r10
    400a:	0e 94 34 2f 	call	0x5e68	; 0x5e68 <sprintf>
		char * qindex=(char*)malloc(sizeof(char));	 sprintf(qindex,"%d",i);
    400e:	81 e0       	ldi	r24, 0x01	; 1
    4010:	90 e0       	ldi	r25, 0x00	; 0
    4012:	0e 94 73 2c 	call	0x58e6	; 0x58e6 <malloc>
    4016:	68 2e       	mov	r6, r24
    4018:	79 2e       	mov	r7, r25
    401a:	df 93       	push	r29
    401c:	cf 93       	push	r28
    401e:	ff 92       	push	r15
    4020:	ef 92       	push	r14
    4022:	7f 92       	push	r7
    4024:	6f 92       	push	r6
    4026:	0e 94 34 2f 	call	0x5e68	; 0x5e68 <sprintf>
		serial.writestr("Q"); serial.writestr(qindex); serial.writestr(": Theta - ");
    402a:	67 eb       	ldi	r22, 0xB7	; 183
    402c:	70 e0       	ldi	r23, 0x00	; 0
    402e:	c8 01       	movw	r24, r16
    4030:	0e 94 00 28 	call	0x5000	; 0x5000 <_ZN6Serial8writestrEPc>
    4034:	66 2d       	mov	r22, r6
    4036:	77 2d       	mov	r23, r7
    4038:	c8 01       	movw	r24, r16
    403a:	0e 94 00 28 	call	0x5000	; 0x5000 <_ZN6Serial8writestrEPc>
    403e:	69 eb       	ldi	r22, 0xB9	; 185
    4040:	70 e0       	ldi	r23, 0x00	; 0
    4042:	c8 01       	movw	r24, r16
    4044:	0e 94 00 28 	call	0x5000	; 0x5000 <_ZN6Serial8writestrEPc>
		serial.writestr(thedim);
    4048:	68 2d       	mov	r22, r8
    404a:	79 2d       	mov	r23, r9
    404c:	c8 01       	movw	r24, r16
    404e:	0e 94 00 28 	call	0x5000	; 0x5000 <_ZN6Serial8writestrEPc>
		serial.writestr(" , Phi - ");
    4052:	64 ec       	ldi	r22, 0xC4	; 196
    4054:	70 e0       	ldi	r23, 0x00	; 0
    4056:	c8 01       	movw	r24, r16
    4058:	0e 94 00 28 	call	0x5000	; 0x5000 <_ZN6Serial8writestrEPc>
		serial.writestrln(phidim);
    405c:	6a 2d       	mov	r22, r10
    405e:	7b 2d       	mov	r23, r11
    4060:	c8 01       	movw	r24, r16
    4062:	0e 94 15 28 	call	0x502a	; 0x502a <_ZN6Serial10writestrlnEPc>
	PORTA|=(state<<pin); // SET PIN
}
void QEPU::dumpmem(){
	serial.writestrln("");
	serial.writestrln("** QUANTUM MEMORY DUMP **");
	for(int i=0;i<QUBIT_COUNT;i++){
    4066:	21 96       	adiw	r28, 0x01	; 1
    4068:	8d b7       	in	r24, 0x3d	; 61
    406a:	9e b7       	in	r25, 0x3e	; 62
    406c:	42 96       	adiw	r24, 0x12	; 18
    406e:	0f b6       	in	r0, 0x3f	; 63
    4070:	f8 94       	cli
    4072:	9e bf       	out	0x3e, r25	; 62
    4074:	0f be       	out	0x3f, r0	; 63
    4076:	8d bf       	out	0x3d, r24	; 61
    4078:	c4 30       	cpi	r28, 0x04	; 4
    407a:	d1 05       	cpc	r29, r1
    407c:	09 f0       	breq	.+2      	; 0x4080 <_ZN4QEPU7dumpmemEv+0x10a>
    407e:	9f cf       	rjmp	.-194    	; 0x3fbe <_ZN4QEPU7dumpmemEv+0x48>
		serial.writestr("Q"); serial.writestr(qindex); serial.writestr(": Theta - ");
		serial.writestr(thedim);
		serial.writestr(" , Phi - ");
		serial.writestrln(phidim);
	}
}
    4080:	df 91       	pop	r29
    4082:	cf 91       	pop	r28
    4084:	1f 91       	pop	r17
    4086:	0f 91       	pop	r16
    4088:	ff 90       	pop	r15
    408a:	ef 90       	pop	r14
    408c:	df 90       	pop	r13
    408e:	cf 90       	pop	r12
    4090:	bf 90       	pop	r11
    4092:	af 90       	pop	r10
    4094:	9f 90       	pop	r9
    4096:	8f 90       	pop	r8
    4098:	7f 90       	pop	r7
    409a:	6f 90       	pop	r6
    409c:	08 95       	ret

0000409e <_ZN4QEPU7executeEilll>:
	dumpmem();
	serial.writestr("The execution of the program has finished");
	#pragma endregion
}

void QEPU::execute(int func,int32_t op1,int32_t op2,int32_t op3){
    409e:	2f 92       	push	r2
    40a0:	3f 92       	push	r3
    40a2:	4f 92       	push	r4
    40a4:	5f 92       	push	r5
    40a6:	6f 92       	push	r6
    40a8:	7f 92       	push	r7
    40aa:	8f 92       	push	r8
    40ac:	9f 92       	push	r9
    40ae:	af 92       	push	r10
    40b0:	bf 92       	push	r11
    40b2:	cf 92       	push	r12
    40b4:	df 92       	push	r13
    40b6:	ef 92       	push	r14
    40b8:	ff 92       	push	r15
    40ba:	0f 93       	push	r16
    40bc:	1f 93       	push	r17
    40be:	cf 93       	push	r28
    40c0:	df 93       	push	r29
    40c2:	cd b7       	in	r28, 0x3d	; 61
    40c4:	de b7       	in	r29, 0x3e	; 62
    40c6:	2a 97       	sbiw	r28, 0x0a	; 10
    40c8:	0f b6       	in	r0, 0x3f	; 63
    40ca:	f8 94       	cli
    40cc:	de bf       	out	0x3e, r29	; 62
    40ce:	0f be       	out	0x3f, r0	; 63
    40d0:	cd bf       	out	0x3d, r28	; 61
    40d2:	4c 01       	movw	r8, r24
    40d4:	1b 01       	movw	r2, r22
    40d6:	29 01       	movw	r4, r18
    40d8:	3a 01       	movw	r6, r20
    40da:	e9 82       	std	Y+1, r14	; 0x01
    40dc:	fa 82       	std	Y+2, r15	; 0x02
    40de:	0b 83       	std	Y+3, r16	; 0x03
    40e0:	1c 83       	std	Y+4, r17	; 0x04
    40e2:	ad 82       	std	Y+5, r10	; 0x05
    40e4:	be 82       	std	Y+6, r11	; 0x06
    40e6:	cf 82       	std	Y+7, r12	; 0x07
    40e8:	d8 86       	std	Y+8, r13	; 0x08
	int * newthephi=(int*)malloc(sizeof(int)*MAX_NEWTHEPHI);
    40ea:	8c e0       	ldi	r24, 0x0C	; 12
    40ec:	90 e0       	ldi	r25, 0x00	; 0
    40ee:	0e 94 73 2c 	call	0x58e6	; 0x58e6 <malloc>
    40f2:	8c 01       	movw	r16, r24
	//TODO: MAKE A SWITCH ON THE FUNCTION
	switch(func){
    40f4:	f1 01       	movw	r30, r2
    40f6:	31 97       	sbiw	r30, 0x01	; 1
    40f8:	e2 32       	cpi	r30, 0x22	; 34
    40fa:	f1 05       	cpc	r31, r1
    40fc:	08 f0       	brcs	.+2      	; 0x4100 <_ZN4QEPU7executeEilll+0x62>
    40fe:	14 c5       	rjmp	.+2600   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
    4100:	e6 5d       	subi	r30, 0xD6	; 214
    4102:	ff 4f       	sbci	r31, 0xFF	; 255
    4104:	0c 94 59 2c 	jmp	0x58b2	; 0x58b2 <__tablejump2__>
		//DATA MOVEMENT AND PROGRAM CONTROL/FLUX/IO FUNCTIONS:
		case 0x01: /*MOV*/
			write(op1,THE,read(op2,THE));
    4108:	40 e0       	ldi	r20, 0x00	; 0
    410a:	50 e0       	ldi	r21, 0x00	; 0
    410c:	69 81       	ldd	r22, Y+1	; 0x01
    410e:	7a 81       	ldd	r23, Y+2	; 0x02
    4110:	c4 01       	movw	r24, r8
    4112:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4116:	9c 01       	movw	r18, r24
    4118:	40 e0       	ldi	r20, 0x00	; 0
    411a:	50 e0       	ldi	r21, 0x00	; 0
    411c:	b2 01       	movw	r22, r4
    411e:	c4 01       	movw	r24, r8
    4120:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
			write(op1,PHI,read(op2,PHI));
    4124:	41 e0       	ldi	r20, 0x01	; 1
    4126:	50 e0       	ldi	r21, 0x00	; 0
    4128:	69 81       	ldd	r22, Y+1	; 0x01
    412a:	7a 81       	ldd	r23, Y+2	; 0x02
    412c:	c4 01       	movw	r24, r8
    412e:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4132:	9c 01       	movw	r18, r24
    4134:	41 e0       	ldi	r20, 0x01	; 1
    4136:	50 e0       	ldi	r21, 0x00	; 0
    4138:	b2 01       	movw	r22, r4
    413a:	c4 01       	movw	r24, r8
    413c:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    4140:	f3 c4       	rjmp	.+2534   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x02: /*JMP(jump)*/ 
			program_counter=op1-1; 
    4142:	81 e0       	ldi	r24, 0x01	; 1
    4144:	48 1a       	sub	r4, r24
    4146:	51 08       	sbc	r5, r1
    4148:	f4 01       	movw	r30, r8
    414a:	54 82       	std	Z+4, r5	; 0x04
    414c:	43 82       	std	Z+3, r4	; 0x03
		break;
    414e:	ec c4       	rjmp	.+2520   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
    4150:	ff cf       	rjmp	.-2      	; 0x4150 <_ZN4QEPU7executeEilll+0xb2>
    4152:	ff cf       	rjmp	.-2      	; 0x4152 <_ZN4QEPU7executeEilll+0xb4>
		case 0x08: /*RET(return)*/ 
			//NEEDS ADDRESS FROM 'JUMP' SYSTEM
		break;
		case 0x09: /*END(end)*/ while(1); break;
		case 0x0A: /*DLY(delay)*/ 
			utils.delay(op1);	break;
    4154:	b2 01       	movw	r22, r4
    4156:	c4 01       	movw	r24, r8
    4158:	02 96       	adiw	r24, 0x02	; 2
    415a:	0e 94 c3 1e 	call	0x3d86	; 0x3d86 <_ZN4QEPU5Utils5delayEi>
    415e:	e4 c4       	rjmp	.+2504   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		break;
		case 0x0D: /*STR(store)*/ 
			//NEEDS MEMORY SYSTEM
		break;
		case 0x0E: /*CMT(constantmovtheta)*/ 
			write(op1,THE,op2);
    4160:	29 81       	ldd	r18, Y+1	; 0x01
    4162:	3a 81       	ldd	r19, Y+2	; 0x02
    4164:	40 e0       	ldi	r20, 0x00	; 0
    4166:	50 e0       	ldi	r21, 0x00	; 0
    4168:	b2 01       	movw	r22, r4
    416a:	c4 01       	movw	r24, r8
    416c:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    4170:	db c4       	rjmp	.+2486   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x0F: /*CMP(constantmovphi)*/
			write(op1,PHI,op2);
    4172:	29 81       	ldd	r18, Y+1	; 0x01
    4174:	3a 81       	ldd	r19, Y+2	; 0x02
    4176:	41 e0       	ldi	r20, 0x01	; 1
    4178:	50 e0       	ldi	r21, 0x00	; 0
    417a:	b2 01       	movw	r22, r4
    417c:	c4 01       	movw	r24, r8
    417e:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    4182:	d2 c4       	rjmp	.+2468   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		//QUANTUM FUNCTIONS:
		//1 QUBIT GATES -
		case 0x10: // X GATE
			newthephi=gates.X(read(op1,THE),read(op1,PHI));
    4184:	41 e0       	ldi	r20, 0x01	; 1
    4186:	50 e0       	ldi	r21, 0x00	; 0
    4188:	b2 01       	movw	r22, r4
    418a:	c4 01       	movw	r24, r8
    418c:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4190:	8c 01       	movw	r16, r24
    4192:	40 e0       	ldi	r20, 0x00	; 0
    4194:	50 e0       	ldi	r21, 0x00	; 0
    4196:	b2 01       	movw	r22, r4
    4198:	c4 01       	movw	r24, r8
    419a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    419e:	a8 01       	movw	r20, r16
    41a0:	bc 01       	movw	r22, r24
    41a2:	c4 01       	movw	r24, r8
    41a4:	05 96       	adiw	r24, 0x05	; 5
    41a6:	0e 94 07 09 	call	0x120e	; 0x120e <_ZN5Gates1XEii>
    41aa:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    41ac:	fc 01       	movw	r30, r24
    41ae:	20 81       	ld	r18, Z
    41b0:	31 81       	ldd	r19, Z+1	; 0x01
    41b2:	40 e0       	ldi	r20, 0x00	; 0
    41b4:	50 e0       	ldi	r21, 0x00	; 0
    41b6:	b2 01       	movw	r22, r4
    41b8:	c4 01       	movw	r24, r8
    41ba:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    41be:	f8 01       	movw	r30, r16
    41c0:	22 81       	ldd	r18, Z+2	; 0x02
    41c2:	33 81       	ldd	r19, Z+3	; 0x03
    41c4:	41 e0       	ldi	r20, 0x01	; 1
    41c6:	50 e0       	ldi	r21, 0x00	; 0
    41c8:	b2 01       	movw	r22, r4
    41ca:	c4 01       	movw	r24, r8
    41cc:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    41d0:	ab c4       	rjmp	.+2390   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x11: // Y GATE
			newthephi=gates.Y(read(op1,THE),read(op1,PHI));
    41d2:	41 e0       	ldi	r20, 0x01	; 1
    41d4:	50 e0       	ldi	r21, 0x00	; 0
    41d6:	b2 01       	movw	r22, r4
    41d8:	c4 01       	movw	r24, r8
    41da:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    41de:	8c 01       	movw	r16, r24
    41e0:	40 e0       	ldi	r20, 0x00	; 0
    41e2:	50 e0       	ldi	r21, 0x00	; 0
    41e4:	b2 01       	movw	r22, r4
    41e6:	c4 01       	movw	r24, r8
    41e8:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    41ec:	a8 01       	movw	r20, r16
    41ee:	bc 01       	movw	r22, r24
    41f0:	c4 01       	movw	r24, r8
    41f2:	05 96       	adiw	r24, 0x05	; 5
    41f4:	0e 94 71 09 	call	0x12e2	; 0x12e2 <_ZN5Gates1YEii>
    41f8:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    41fa:	fc 01       	movw	r30, r24
    41fc:	20 81       	ld	r18, Z
    41fe:	31 81       	ldd	r19, Z+1	; 0x01
    4200:	40 e0       	ldi	r20, 0x00	; 0
    4202:	50 e0       	ldi	r21, 0x00	; 0
    4204:	b2 01       	movw	r22, r4
    4206:	c4 01       	movw	r24, r8
    4208:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    420c:	f8 01       	movw	r30, r16
    420e:	22 81       	ldd	r18, Z+2	; 0x02
    4210:	33 81       	ldd	r19, Z+3	; 0x03
    4212:	41 e0       	ldi	r20, 0x01	; 1
    4214:	50 e0       	ldi	r21, 0x00	; 0
    4216:	b2 01       	movw	r22, r4
    4218:	c4 01       	movw	r24, r8
    421a:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    421e:	84 c4       	rjmp	.+2312   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x12: // Z GATE
			newthephi=gates.Z(read(op1,THE),read(op1,PHI));
    4220:	41 e0       	ldi	r20, 0x01	; 1
    4222:	50 e0       	ldi	r21, 0x00	; 0
    4224:	b2 01       	movw	r22, r4
    4226:	c4 01       	movw	r24, r8
    4228:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    422c:	8c 01       	movw	r16, r24
    422e:	40 e0       	ldi	r20, 0x00	; 0
    4230:	50 e0       	ldi	r21, 0x00	; 0
    4232:	b2 01       	movw	r22, r4
    4234:	c4 01       	movw	r24, r8
    4236:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    423a:	a8 01       	movw	r20, r16
    423c:	bc 01       	movw	r22, r24
    423e:	c4 01       	movw	r24, r8
    4240:	05 96       	adiw	r24, 0x05	; 5
    4242:	0e 94 db 09 	call	0x13b6	; 0x13b6 <_ZN5Gates1ZEii>
    4246:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    4248:	fc 01       	movw	r30, r24
    424a:	20 81       	ld	r18, Z
    424c:	31 81       	ldd	r19, Z+1	; 0x01
    424e:	40 e0       	ldi	r20, 0x00	; 0
    4250:	50 e0       	ldi	r21, 0x00	; 0
    4252:	b2 01       	movw	r22, r4
    4254:	c4 01       	movw	r24, r8
    4256:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    425a:	f8 01       	movw	r30, r16
    425c:	22 81       	ldd	r18, Z+2	; 0x02
    425e:	33 81       	ldd	r19, Z+3	; 0x03
    4260:	41 e0       	ldi	r20, 0x01	; 1
    4262:	50 e0       	ldi	r21, 0x00	; 0
    4264:	b2 01       	movw	r22, r4
    4266:	c4 01       	movw	r24, r8
    4268:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    426c:	5d c4       	rjmp	.+2234   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x13: // H GATE
			newthephi=gates.H(read(op1,THE),read(op1,PHI));
    426e:	41 e0       	ldi	r20, 0x01	; 1
    4270:	50 e0       	ldi	r21, 0x00	; 0
    4272:	b2 01       	movw	r22, r4
    4274:	c4 01       	movw	r24, r8
    4276:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    427a:	8c 01       	movw	r16, r24
    427c:	40 e0       	ldi	r20, 0x00	; 0
    427e:	50 e0       	ldi	r21, 0x00	; 0
    4280:	b2 01       	movw	r22, r4
    4282:	c4 01       	movw	r24, r8
    4284:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4288:	a8 01       	movw	r20, r16
    428a:	bc 01       	movw	r22, r24
    428c:	c4 01       	movw	r24, r8
    428e:	05 96       	adiw	r24, 0x05	; 5
    4290:	0e 94 45 0a 	call	0x148a	; 0x148a <_ZN5Gates1HEii>
    4294:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    4296:	fc 01       	movw	r30, r24
    4298:	20 81       	ld	r18, Z
    429a:	31 81       	ldd	r19, Z+1	; 0x01
    429c:	40 e0       	ldi	r20, 0x00	; 0
    429e:	50 e0       	ldi	r21, 0x00	; 0
    42a0:	b2 01       	movw	r22, r4
    42a2:	c4 01       	movw	r24, r8
    42a4:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    42a8:	f8 01       	movw	r30, r16
    42aa:	22 81       	ldd	r18, Z+2	; 0x02
    42ac:	33 81       	ldd	r19, Z+3	; 0x03
    42ae:	41 e0       	ldi	r20, 0x01	; 1
    42b0:	50 e0       	ldi	r21, 0x00	; 0
    42b2:	b2 01       	movw	r22, r4
    42b4:	c4 01       	movw	r24, r8
    42b6:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    42ba:	36 c4       	rjmp	.+2156   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x14: // S GATE
			newthephi=gates.S(read(op1,THE),read(op1,PHI));
    42bc:	41 e0       	ldi	r20, 0x01	; 1
    42be:	50 e0       	ldi	r21, 0x00	; 0
    42c0:	b2 01       	movw	r22, r4
    42c2:	c4 01       	movw	r24, r8
    42c4:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    42c8:	8c 01       	movw	r16, r24
    42ca:	40 e0       	ldi	r20, 0x00	; 0
    42cc:	50 e0       	ldi	r21, 0x00	; 0
    42ce:	b2 01       	movw	r22, r4
    42d0:	c4 01       	movw	r24, r8
    42d2:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    42d6:	a8 01       	movw	r20, r16
    42d8:	bc 01       	movw	r22, r24
    42da:	c4 01       	movw	r24, r8
    42dc:	05 96       	adiw	r24, 0x05	; 5
    42de:	0e 94 b3 0a 	call	0x1566	; 0x1566 <_ZN5Gates1SEii>
    42e2:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    42e4:	fc 01       	movw	r30, r24
    42e6:	20 81       	ld	r18, Z
    42e8:	31 81       	ldd	r19, Z+1	; 0x01
    42ea:	40 e0       	ldi	r20, 0x00	; 0
    42ec:	50 e0       	ldi	r21, 0x00	; 0
    42ee:	b2 01       	movw	r22, r4
    42f0:	c4 01       	movw	r24, r8
    42f2:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    42f6:	f8 01       	movw	r30, r16
    42f8:	22 81       	ldd	r18, Z+2	; 0x02
    42fa:	33 81       	ldd	r19, Z+3	; 0x03
    42fc:	41 e0       	ldi	r20, 0x01	; 1
    42fe:	50 e0       	ldi	r21, 0x00	; 0
    4300:	b2 01       	movw	r22, r4
    4302:	c4 01       	movw	r24, r8
    4304:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    4308:	0f c4       	rjmp	.+2078   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x15: // T GATE
			newthephi=gates.T(read(op1,THE),read(op1,PHI));
    430a:	41 e0       	ldi	r20, 0x01	; 1
    430c:	50 e0       	ldi	r21, 0x00	; 0
    430e:	b2 01       	movw	r22, r4
    4310:	c4 01       	movw	r24, r8
    4312:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4316:	8c 01       	movw	r16, r24
    4318:	40 e0       	ldi	r20, 0x00	; 0
    431a:	50 e0       	ldi	r21, 0x00	; 0
    431c:	b2 01       	movw	r22, r4
    431e:	c4 01       	movw	r24, r8
    4320:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4324:	a8 01       	movw	r20, r16
    4326:	bc 01       	movw	r22, r24
    4328:	c4 01       	movw	r24, r8
    432a:	05 96       	adiw	r24, 0x05	; 5
    432c:	0e 94 1d 0b 	call	0x163a	; 0x163a <_ZN5Gates1TEii>
    4330:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    4332:	fc 01       	movw	r30, r24
    4334:	20 81       	ld	r18, Z
    4336:	31 81       	ldd	r19, Z+1	; 0x01
    4338:	40 e0       	ldi	r20, 0x00	; 0
    433a:	50 e0       	ldi	r21, 0x00	; 0
    433c:	b2 01       	movw	r22, r4
    433e:	c4 01       	movw	r24, r8
    4340:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    4344:	f8 01       	movw	r30, r16
    4346:	22 81       	ldd	r18, Z+2	; 0x02
    4348:	33 81       	ldd	r19, Z+3	; 0x03
    434a:	41 e0       	ldi	r20, 0x01	; 1
    434c:	50 e0       	ldi	r21, 0x00	; 0
    434e:	b2 01       	movw	r22, r4
    4350:	c4 01       	movw	r24, r8
    4352:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    4356:	e8 c3       	rjmp	.+2000   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		//2 QUBIT GATES -
		case 0x16: 
			newthephi=gates.CNO(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    4358:	41 e0       	ldi	r20, 0x01	; 1
    435a:	50 e0       	ldi	r21, 0x00	; 0
    435c:	69 81       	ldd	r22, Y+1	; 0x01
    435e:	7a 81       	ldd	r23, Y+2	; 0x02
    4360:	c4 01       	movw	r24, r8
    4362:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4366:	8c 01       	movw	r16, r24
    4368:	40 e0       	ldi	r20, 0x00	; 0
    436a:	50 e0       	ldi	r21, 0x00	; 0
    436c:	69 81       	ldd	r22, Y+1	; 0x01
    436e:	7a 81       	ldd	r23, Y+2	; 0x02
    4370:	c4 01       	movw	r24, r8
    4372:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4376:	5c 01       	movw	r10, r24
    4378:	41 e0       	ldi	r20, 0x01	; 1
    437a:	50 e0       	ldi	r21, 0x00	; 0
    437c:	b2 01       	movw	r22, r4
    437e:	c4 01       	movw	r24, r8
    4380:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4384:	7c 01       	movw	r14, r24
    4386:	40 e0       	ldi	r20, 0x00	; 0
    4388:	50 e0       	ldi	r21, 0x00	; 0
    438a:	b2 01       	movw	r22, r4
    438c:	c4 01       	movw	r24, r8
    438e:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4392:	95 01       	movw	r18, r10
    4394:	a7 01       	movw	r20, r14
    4396:	bc 01       	movw	r22, r24
    4398:	c4 01       	movw	r24, r8
    439a:	05 96       	adiw	r24, 0x05	; 5
    439c:	0e 94 86 0b 	call	0x170c	; 0x170c <_ZN5Gates3CNOEiiii>
    43a0:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    43a2:	fc 01       	movw	r30, r24
    43a4:	20 81       	ld	r18, Z
    43a6:	31 81       	ldd	r19, Z+1	; 0x01
    43a8:	40 e0       	ldi	r20, 0x00	; 0
    43aa:	50 e0       	ldi	r21, 0x00	; 0
    43ac:	b2 01       	movw	r22, r4
    43ae:	c4 01       	movw	r24, r8
    43b0:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    43b4:	f8 01       	movw	r30, r16
    43b6:	22 81       	ldd	r18, Z+2	; 0x02
    43b8:	33 81       	ldd	r19, Z+3	; 0x03
    43ba:	41 e0       	ldi	r20, 0x01	; 1
    43bc:	50 e0       	ldi	r21, 0x00	; 0
    43be:	b2 01       	movw	r22, r4
    43c0:	c4 01       	movw	r24, r8
    43c2:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    43c6:	f8 01       	movw	r30, r16
    43c8:	24 81       	ldd	r18, Z+4	; 0x04
    43ca:	35 81       	ldd	r19, Z+5	; 0x05
    43cc:	40 e0       	ldi	r20, 0x00	; 0
    43ce:	50 e0       	ldi	r21, 0x00	; 0
    43d0:	69 81       	ldd	r22, Y+1	; 0x01
    43d2:	7a 81       	ldd	r23, Y+2	; 0x02
    43d4:	c4 01       	movw	r24, r8
    43d6:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    43da:	f8 01       	movw	r30, r16
    43dc:	26 81       	ldd	r18, Z+6	; 0x06
    43de:	37 81       	ldd	r19, Z+7	; 0x07
    43e0:	41 e0       	ldi	r20, 0x01	; 1
    43e2:	50 e0       	ldi	r21, 0x00	; 0
    43e4:	69 81       	ldd	r22, Y+1	; 0x01
    43e6:	7a 81       	ldd	r23, Y+2	; 0x02
    43e8:	c4 01       	movw	r24, r8
    43ea:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    43ee:	9c c3       	rjmp	.+1848   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x17:
			newthephi=gates.CSI(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    43f0:	41 e0       	ldi	r20, 0x01	; 1
    43f2:	50 e0       	ldi	r21, 0x00	; 0
    43f4:	69 81       	ldd	r22, Y+1	; 0x01
    43f6:	7a 81       	ldd	r23, Y+2	; 0x02
    43f8:	c4 01       	movw	r24, r8
    43fa:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    43fe:	8c 01       	movw	r16, r24
    4400:	40 e0       	ldi	r20, 0x00	; 0
    4402:	50 e0       	ldi	r21, 0x00	; 0
    4404:	69 81       	ldd	r22, Y+1	; 0x01
    4406:	7a 81       	ldd	r23, Y+2	; 0x02
    4408:	c4 01       	movw	r24, r8
    440a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    440e:	5c 01       	movw	r10, r24
    4410:	41 e0       	ldi	r20, 0x01	; 1
    4412:	50 e0       	ldi	r21, 0x00	; 0
    4414:	b2 01       	movw	r22, r4
    4416:	c4 01       	movw	r24, r8
    4418:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    441c:	7c 01       	movw	r14, r24
    441e:	40 e0       	ldi	r20, 0x00	; 0
    4420:	50 e0       	ldi	r21, 0x00	; 0
    4422:	b2 01       	movw	r22, r4
    4424:	c4 01       	movw	r24, r8
    4426:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    442a:	95 01       	movw	r18, r10
    442c:	a7 01       	movw	r20, r14
    442e:	bc 01       	movw	r22, r24
    4430:	c4 01       	movw	r24, r8
    4432:	05 96       	adiw	r24, 0x05	; 5
    4434:	0e 94 88 0c 	call	0x1910	; 0x1910 <_ZN5Gates3CSIEiiii>
    4438:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    443a:	fc 01       	movw	r30, r24
    443c:	20 81       	ld	r18, Z
    443e:	31 81       	ldd	r19, Z+1	; 0x01
    4440:	40 e0       	ldi	r20, 0x00	; 0
    4442:	50 e0       	ldi	r21, 0x00	; 0
    4444:	b2 01       	movw	r22, r4
    4446:	c4 01       	movw	r24, r8
    4448:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    444c:	f8 01       	movw	r30, r16
    444e:	22 81       	ldd	r18, Z+2	; 0x02
    4450:	33 81       	ldd	r19, Z+3	; 0x03
    4452:	41 e0       	ldi	r20, 0x01	; 1
    4454:	50 e0       	ldi	r21, 0x00	; 0
    4456:	b2 01       	movw	r22, r4
    4458:	c4 01       	movw	r24, r8
    445a:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    445e:	f8 01       	movw	r30, r16
    4460:	24 81       	ldd	r18, Z+4	; 0x04
    4462:	35 81       	ldd	r19, Z+5	; 0x05
    4464:	40 e0       	ldi	r20, 0x00	; 0
    4466:	50 e0       	ldi	r21, 0x00	; 0
    4468:	69 81       	ldd	r22, Y+1	; 0x01
    446a:	7a 81       	ldd	r23, Y+2	; 0x02
    446c:	c4 01       	movw	r24, r8
    446e:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    4472:	f8 01       	movw	r30, r16
    4474:	26 81       	ldd	r18, Z+6	; 0x06
    4476:	37 81       	ldd	r19, Z+7	; 0x07
    4478:	41 e0       	ldi	r20, 0x01	; 1
    447a:	50 e0       	ldi	r21, 0x00	; 0
    447c:	69 81       	ldd	r22, Y+1	; 0x01
    447e:	7a 81       	ldd	r23, Y+2	; 0x02
    4480:	c4 01       	movw	r24, r8
    4482:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    4486:	50 c3       	rjmp	.+1696   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x18: 
			newthephi=gates.SWA(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    4488:	41 e0       	ldi	r20, 0x01	; 1
    448a:	50 e0       	ldi	r21, 0x00	; 0
    448c:	69 81       	ldd	r22, Y+1	; 0x01
    448e:	7a 81       	ldd	r23, Y+2	; 0x02
    4490:	c4 01       	movw	r24, r8
    4492:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4496:	8c 01       	movw	r16, r24
    4498:	40 e0       	ldi	r20, 0x00	; 0
    449a:	50 e0       	ldi	r21, 0x00	; 0
    449c:	69 81       	ldd	r22, Y+1	; 0x01
    449e:	7a 81       	ldd	r23, Y+2	; 0x02
    44a0:	c4 01       	movw	r24, r8
    44a2:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    44a6:	5c 01       	movw	r10, r24
    44a8:	41 e0       	ldi	r20, 0x01	; 1
    44aa:	50 e0       	ldi	r21, 0x00	; 0
    44ac:	b2 01       	movw	r22, r4
    44ae:	c4 01       	movw	r24, r8
    44b0:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    44b4:	7c 01       	movw	r14, r24
    44b6:	40 e0       	ldi	r20, 0x00	; 0
    44b8:	50 e0       	ldi	r21, 0x00	; 0
    44ba:	b2 01       	movw	r22, r4
    44bc:	c4 01       	movw	r24, r8
    44be:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    44c2:	95 01       	movw	r18, r10
    44c4:	a7 01       	movw	r20, r14
    44c6:	bc 01       	movw	r22, r24
    44c8:	c4 01       	movw	r24, r8
    44ca:	05 96       	adiw	r24, 0x05	; 5
    44cc:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <_ZN5Gates3SWAEiiii>
    44d0:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    44d2:	fc 01       	movw	r30, r24
    44d4:	20 81       	ld	r18, Z
    44d6:	31 81       	ldd	r19, Z+1	; 0x01
    44d8:	40 e0       	ldi	r20, 0x00	; 0
    44da:	50 e0       	ldi	r21, 0x00	; 0
    44dc:	b2 01       	movw	r22, r4
    44de:	c4 01       	movw	r24, r8
    44e0:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    44e4:	f8 01       	movw	r30, r16
    44e6:	22 81       	ldd	r18, Z+2	; 0x02
    44e8:	33 81       	ldd	r19, Z+3	; 0x03
    44ea:	41 e0       	ldi	r20, 0x01	; 1
    44ec:	50 e0       	ldi	r21, 0x00	; 0
    44ee:	b2 01       	movw	r22, r4
    44f0:	c4 01       	movw	r24, r8
    44f2:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    44f6:	f8 01       	movw	r30, r16
    44f8:	24 81       	ldd	r18, Z+4	; 0x04
    44fa:	35 81       	ldd	r19, Z+5	; 0x05
    44fc:	40 e0       	ldi	r20, 0x00	; 0
    44fe:	50 e0       	ldi	r21, 0x00	; 0
    4500:	69 81       	ldd	r22, Y+1	; 0x01
    4502:	7a 81       	ldd	r23, Y+2	; 0x02
    4504:	c4 01       	movw	r24, r8
    4506:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    450a:	f8 01       	movw	r30, r16
    450c:	26 81       	ldd	r18, Z+6	; 0x06
    450e:	37 81       	ldd	r19, Z+7	; 0x07
    4510:	41 e0       	ldi	r20, 0x01	; 1
    4512:	50 e0       	ldi	r21, 0x00	; 0
    4514:	69 81       	ldd	r22, Y+1	; 0x01
    4516:	7a 81       	ldd	r23, Y+2	; 0x02
    4518:	c4 01       	movw	r24, r8
    451a:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    451e:	04 c3       	rjmp	.+1544   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x19: 
			newthephi=gates.INC(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    4520:	41 e0       	ldi	r20, 0x01	; 1
    4522:	50 e0       	ldi	r21, 0x00	; 0
    4524:	69 81       	ldd	r22, Y+1	; 0x01
    4526:	7a 81       	ldd	r23, Y+2	; 0x02
    4528:	c4 01       	movw	r24, r8
    452a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    452e:	8c 01       	movw	r16, r24
    4530:	40 e0       	ldi	r20, 0x00	; 0
    4532:	50 e0       	ldi	r21, 0x00	; 0
    4534:	69 81       	ldd	r22, Y+1	; 0x01
    4536:	7a 81       	ldd	r23, Y+2	; 0x02
    4538:	c4 01       	movw	r24, r8
    453a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    453e:	5c 01       	movw	r10, r24
    4540:	41 e0       	ldi	r20, 0x01	; 1
    4542:	50 e0       	ldi	r21, 0x00	; 0
    4544:	b2 01       	movw	r22, r4
    4546:	c4 01       	movw	r24, r8
    4548:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    454c:	7c 01       	movw	r14, r24
    454e:	40 e0       	ldi	r20, 0x00	; 0
    4550:	50 e0       	ldi	r21, 0x00	; 0
    4552:	b2 01       	movw	r22, r4
    4554:	c4 01       	movw	r24, r8
    4556:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    455a:	95 01       	movw	r18, r10
    455c:	a7 01       	movw	r20, r14
    455e:	bc 01       	movw	r22, r24
    4560:	c4 01       	movw	r24, r8
    4562:	05 96       	adiw	r24, 0x05	; 5
    4564:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <_ZN5Gates3INCEiiii>
    4568:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    456a:	fc 01       	movw	r30, r24
    456c:	20 81       	ld	r18, Z
    456e:	31 81       	ldd	r19, Z+1	; 0x01
    4570:	40 e0       	ldi	r20, 0x00	; 0
    4572:	50 e0       	ldi	r21, 0x00	; 0
    4574:	b2 01       	movw	r22, r4
    4576:	c4 01       	movw	r24, r8
    4578:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    457c:	f8 01       	movw	r30, r16
    457e:	22 81       	ldd	r18, Z+2	; 0x02
    4580:	33 81       	ldd	r19, Z+3	; 0x03
    4582:	41 e0       	ldi	r20, 0x01	; 1
    4584:	50 e0       	ldi	r21, 0x00	; 0
    4586:	b2 01       	movw	r22, r4
    4588:	c4 01       	movw	r24, r8
    458a:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    458e:	f8 01       	movw	r30, r16
    4590:	24 81       	ldd	r18, Z+4	; 0x04
    4592:	35 81       	ldd	r19, Z+5	; 0x05
    4594:	40 e0       	ldi	r20, 0x00	; 0
    4596:	50 e0       	ldi	r21, 0x00	; 0
    4598:	69 81       	ldd	r22, Y+1	; 0x01
    459a:	7a 81       	ldd	r23, Y+2	; 0x02
    459c:	c4 01       	movw	r24, r8
    459e:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    45a2:	f8 01       	movw	r30, r16
    45a4:	26 81       	ldd	r18, Z+6	; 0x06
    45a6:	37 81       	ldd	r19, Z+7	; 0x07
    45a8:	41 e0       	ldi	r20, 0x01	; 1
    45aa:	50 e0       	ldi	r21, 0x00	; 0
    45ac:	69 81       	ldd	r22, Y+1	; 0x01
    45ae:	7a 81       	ldd	r23, Y+2	; 0x02
    45b0:	c4 01       	movw	r24, r8
    45b2:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    45b6:	b8 c2       	rjmp	.+1392   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x1A: 
			newthephi=gates.DEC(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    45b8:	41 e0       	ldi	r20, 0x01	; 1
    45ba:	50 e0       	ldi	r21, 0x00	; 0
    45bc:	69 81       	ldd	r22, Y+1	; 0x01
    45be:	7a 81       	ldd	r23, Y+2	; 0x02
    45c0:	c4 01       	movw	r24, r8
    45c2:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    45c6:	8c 01       	movw	r16, r24
    45c8:	40 e0       	ldi	r20, 0x00	; 0
    45ca:	50 e0       	ldi	r21, 0x00	; 0
    45cc:	69 81       	ldd	r22, Y+1	; 0x01
    45ce:	7a 81       	ldd	r23, Y+2	; 0x02
    45d0:	c4 01       	movw	r24, r8
    45d2:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    45d6:	5c 01       	movw	r10, r24
    45d8:	41 e0       	ldi	r20, 0x01	; 1
    45da:	50 e0       	ldi	r21, 0x00	; 0
    45dc:	b2 01       	movw	r22, r4
    45de:	c4 01       	movw	r24, r8
    45e0:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    45e4:	7c 01       	movw	r14, r24
    45e6:	40 e0       	ldi	r20, 0x00	; 0
    45e8:	50 e0       	ldi	r21, 0x00	; 0
    45ea:	b2 01       	movw	r22, r4
    45ec:	c4 01       	movw	r24, r8
    45ee:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    45f2:	95 01       	movw	r18, r10
    45f4:	a7 01       	movw	r20, r14
    45f6:	bc 01       	movw	r22, r24
    45f8:	c4 01       	movw	r24, r8
    45fa:	05 96       	adiw	r24, 0x05	; 5
    45fc:	0e 94 8e 0f 	call	0x1f1c	; 0x1f1c <_ZN5Gates3DECEiiii>
    4600:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4602:	fc 01       	movw	r30, r24
    4604:	20 81       	ld	r18, Z
    4606:	31 81       	ldd	r19, Z+1	; 0x01
    4608:	40 e0       	ldi	r20, 0x00	; 0
    460a:	50 e0       	ldi	r21, 0x00	; 0
    460c:	b2 01       	movw	r22, r4
    460e:	c4 01       	movw	r24, r8
    4610:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    4614:	f8 01       	movw	r30, r16
    4616:	22 81       	ldd	r18, Z+2	; 0x02
    4618:	33 81       	ldd	r19, Z+3	; 0x03
    461a:	41 e0       	ldi	r20, 0x01	; 1
    461c:	50 e0       	ldi	r21, 0x00	; 0
    461e:	b2 01       	movw	r22, r4
    4620:	c4 01       	movw	r24, r8
    4622:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4626:	f8 01       	movw	r30, r16
    4628:	24 81       	ldd	r18, Z+4	; 0x04
    462a:	35 81       	ldd	r19, Z+5	; 0x05
    462c:	40 e0       	ldi	r20, 0x00	; 0
    462e:	50 e0       	ldi	r21, 0x00	; 0
    4630:	69 81       	ldd	r22, Y+1	; 0x01
    4632:	7a 81       	ldd	r23, Y+2	; 0x02
    4634:	c4 01       	movw	r24, r8
    4636:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    463a:	f8 01       	movw	r30, r16
    463c:	26 81       	ldd	r18, Z+6	; 0x06
    463e:	37 81       	ldd	r19, Z+7	; 0x07
    4640:	41 e0       	ldi	r20, 0x01	; 1
    4642:	50 e0       	ldi	r21, 0x00	; 0
    4644:	69 81       	ldd	r22, Y+1	; 0x01
    4646:	7a 81       	ldd	r23, Y+2	; 0x02
    4648:	c4 01       	movw	r24, r8
    464a:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    464e:	6c c2       	rjmp	.+1240   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x1B:
			//CSWAP (FREDKIN ) -> 3 QUBIT GATE
			newthephi=gates.CSW(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI),read(op3,THE),read(op3,PHI));
    4650:	41 e0       	ldi	r20, 0x01	; 1
    4652:	50 e0       	ldi	r21, 0x00	; 0
    4654:	6d 81       	ldd	r22, Y+5	; 0x05
    4656:	7e 81       	ldd	r23, Y+6	; 0x06
    4658:	c4 01       	movw	r24, r8
    465a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    465e:	6c 01       	movw	r12, r24
    4660:	40 e0       	ldi	r20, 0x00	; 0
    4662:	50 e0       	ldi	r21, 0x00	; 0
    4664:	6d 81       	ldd	r22, Y+5	; 0x05
    4666:	7e 81       	ldd	r23, Y+6	; 0x06
    4668:	c4 01       	movw	r24, r8
    466a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    466e:	7c 01       	movw	r14, r24
    4670:	41 e0       	ldi	r20, 0x01	; 1
    4672:	50 e0       	ldi	r21, 0x00	; 0
    4674:	69 81       	ldd	r22, Y+1	; 0x01
    4676:	7a 81       	ldd	r23, Y+2	; 0x02
    4678:	c4 01       	movw	r24, r8
    467a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    467e:	8c 01       	movw	r16, r24
    4680:	40 e0       	ldi	r20, 0x00	; 0
    4682:	50 e0       	ldi	r21, 0x00	; 0
    4684:	69 81       	ldd	r22, Y+1	; 0x01
    4686:	7a 81       	ldd	r23, Y+2	; 0x02
    4688:	c4 01       	movw	r24, r8
    468a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    468e:	5c 01       	movw	r10, r24
    4690:	41 e0       	ldi	r20, 0x01	; 1
    4692:	50 e0       	ldi	r21, 0x00	; 0
    4694:	b2 01       	movw	r22, r4
    4696:	c4 01       	movw	r24, r8
    4698:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    469c:	1c 01       	movw	r2, r24
    469e:	40 e0       	ldi	r20, 0x00	; 0
    46a0:	50 e0       	ldi	r21, 0x00	; 0
    46a2:	b2 01       	movw	r22, r4
    46a4:	c4 01       	movw	r24, r8
    46a6:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    46aa:	95 01       	movw	r18, r10
    46ac:	a1 01       	movw	r20, r2
    46ae:	bc 01       	movw	r22, r24
    46b0:	c4 01       	movw	r24, r8
    46b2:	05 96       	adiw	r24, 0x05	; 5
    46b4:	0e 94 69 14 	call	0x28d2	; 0x28d2 <_ZN5Gates3CSWEiiiiii>
    46b8:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    46ba:	fc 01       	movw	r30, r24
    46bc:	20 81       	ld	r18, Z
    46be:	31 81       	ldd	r19, Z+1	; 0x01
    46c0:	40 e0       	ldi	r20, 0x00	; 0
    46c2:	50 e0       	ldi	r21, 0x00	; 0
    46c4:	b2 01       	movw	r22, r4
    46c6:	c4 01       	movw	r24, r8
    46c8:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    46cc:	f8 01       	movw	r30, r16
    46ce:	22 81       	ldd	r18, Z+2	; 0x02
    46d0:	33 81       	ldd	r19, Z+3	; 0x03
    46d2:	41 e0       	ldi	r20, 0x01	; 1
    46d4:	50 e0       	ldi	r21, 0x00	; 0
    46d6:	b2 01       	movw	r22, r4
    46d8:	c4 01       	movw	r24, r8
    46da:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    46de:	f8 01       	movw	r30, r16
    46e0:	24 81       	ldd	r18, Z+4	; 0x04
    46e2:	35 81       	ldd	r19, Z+5	; 0x05
    46e4:	40 e0       	ldi	r20, 0x00	; 0
    46e6:	50 e0       	ldi	r21, 0x00	; 0
    46e8:	69 81       	ldd	r22, Y+1	; 0x01
    46ea:	7a 81       	ldd	r23, Y+2	; 0x02
    46ec:	c4 01       	movw	r24, r8
    46ee:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    46f2:	f8 01       	movw	r30, r16
    46f4:	26 81       	ldd	r18, Z+6	; 0x06
    46f6:	37 81       	ldd	r19, Z+7	; 0x07
    46f8:	41 e0       	ldi	r20, 0x01	; 1
    46fa:	50 e0       	ldi	r21, 0x00	; 0
    46fc:	69 81       	ldd	r22, Y+1	; 0x01
    46fe:	7a 81       	ldd	r23, Y+2	; 0x02
    4700:	c4 01       	movw	r24, r8
    4702:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
			write(op3,THE,newthephi[4]); write(op3,PHI,newthephi[5]);
    4706:	f8 01       	movw	r30, r16
    4708:	20 85       	ldd	r18, Z+8	; 0x08
    470a:	31 85       	ldd	r19, Z+9	; 0x09
    470c:	40 e0       	ldi	r20, 0x00	; 0
    470e:	50 e0       	ldi	r21, 0x00	; 0
    4710:	6d 81       	ldd	r22, Y+5	; 0x05
    4712:	7e 81       	ldd	r23, Y+6	; 0x06
    4714:	c4 01       	movw	r24, r8
    4716:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    471a:	f8 01       	movw	r30, r16
    471c:	22 85       	ldd	r18, Z+10	; 0x0a
    471e:	33 85       	ldd	r19, Z+11	; 0x0b
    4720:	41 e0       	ldi	r20, 0x01	; 1
    4722:	50 e0       	ldi	r21, 0x00	; 0
    4724:	6d 81       	ldd	r22, Y+5	; 0x05
    4726:	7e 81       	ldd	r23, Y+6	; 0x06
    4728:	c4 01       	movw	r24, r8
    472a:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    472e:	fc c1       	rjmp	.+1016   	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x1C: 
			//TOFFOLI -> 3 QUBIT GATE
			newthephi=gates.TOF(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI),read(op3,THE),read(op3,PHI));
    4730:	41 e0       	ldi	r20, 0x01	; 1
    4732:	50 e0       	ldi	r21, 0x00	; 0
    4734:	6d 81       	ldd	r22, Y+5	; 0x05
    4736:	7e 81       	ldd	r23, Y+6	; 0x06
    4738:	c4 01       	movw	r24, r8
    473a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    473e:	6c 01       	movw	r12, r24
    4740:	40 e0       	ldi	r20, 0x00	; 0
    4742:	50 e0       	ldi	r21, 0x00	; 0
    4744:	6d 81       	ldd	r22, Y+5	; 0x05
    4746:	7e 81       	ldd	r23, Y+6	; 0x06
    4748:	c4 01       	movw	r24, r8
    474a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    474e:	7c 01       	movw	r14, r24
    4750:	41 e0       	ldi	r20, 0x01	; 1
    4752:	50 e0       	ldi	r21, 0x00	; 0
    4754:	69 81       	ldd	r22, Y+1	; 0x01
    4756:	7a 81       	ldd	r23, Y+2	; 0x02
    4758:	c4 01       	movw	r24, r8
    475a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    475e:	8c 01       	movw	r16, r24
    4760:	40 e0       	ldi	r20, 0x00	; 0
    4762:	50 e0       	ldi	r21, 0x00	; 0
    4764:	69 81       	ldd	r22, Y+1	; 0x01
    4766:	7a 81       	ldd	r23, Y+2	; 0x02
    4768:	c4 01       	movw	r24, r8
    476a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    476e:	5c 01       	movw	r10, r24
    4770:	41 e0       	ldi	r20, 0x01	; 1
    4772:	50 e0       	ldi	r21, 0x00	; 0
    4774:	b2 01       	movw	r22, r4
    4776:	c4 01       	movw	r24, r8
    4778:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    477c:	1c 01       	movw	r2, r24
    477e:	40 e0       	ldi	r20, 0x00	; 0
    4780:	50 e0       	ldi	r21, 0x00	; 0
    4782:	b2 01       	movw	r22, r4
    4784:	c4 01       	movw	r24, r8
    4786:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    478a:	95 01       	movw	r18, r10
    478c:	a1 01       	movw	r20, r2
    478e:	bc 01       	movw	r22, r24
    4790:	c4 01       	movw	r24, r8
    4792:	05 96       	adiw	r24, 0x05	; 5
    4794:	0e 94 67 17 	call	0x2ece	; 0x2ece <_ZN5Gates3TOFEiiiiii>
    4798:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    479a:	fc 01       	movw	r30, r24
    479c:	20 81       	ld	r18, Z
    479e:	31 81       	ldd	r19, Z+1	; 0x01
    47a0:	40 e0       	ldi	r20, 0x00	; 0
    47a2:	50 e0       	ldi	r21, 0x00	; 0
    47a4:	b2 01       	movw	r22, r4
    47a6:	c4 01       	movw	r24, r8
    47a8:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    47ac:	f8 01       	movw	r30, r16
    47ae:	22 81       	ldd	r18, Z+2	; 0x02
    47b0:	33 81       	ldd	r19, Z+3	; 0x03
    47b2:	41 e0       	ldi	r20, 0x01	; 1
    47b4:	50 e0       	ldi	r21, 0x00	; 0
    47b6:	b2 01       	movw	r22, r4
    47b8:	c4 01       	movw	r24, r8
    47ba:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    47be:	f8 01       	movw	r30, r16
    47c0:	24 81       	ldd	r18, Z+4	; 0x04
    47c2:	35 81       	ldd	r19, Z+5	; 0x05
    47c4:	40 e0       	ldi	r20, 0x00	; 0
    47c6:	50 e0       	ldi	r21, 0x00	; 0
    47c8:	69 81       	ldd	r22, Y+1	; 0x01
    47ca:	7a 81       	ldd	r23, Y+2	; 0x02
    47cc:	c4 01       	movw	r24, r8
    47ce:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    47d2:	f8 01       	movw	r30, r16
    47d4:	26 81       	ldd	r18, Z+6	; 0x06
    47d6:	37 81       	ldd	r19, Z+7	; 0x07
    47d8:	41 e0       	ldi	r20, 0x01	; 1
    47da:	50 e0       	ldi	r21, 0x00	; 0
    47dc:	69 81       	ldd	r22, Y+1	; 0x01
    47de:	7a 81       	ldd	r23, Y+2	; 0x02
    47e0:	c4 01       	movw	r24, r8
    47e2:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
			write(op3,THE,newthephi[4]); write(op3,PHI,newthephi[5]);
    47e6:	f8 01       	movw	r30, r16
    47e8:	20 85       	ldd	r18, Z+8	; 0x08
    47ea:	31 85       	ldd	r19, Z+9	; 0x09
    47ec:	40 e0       	ldi	r20, 0x00	; 0
    47ee:	50 e0       	ldi	r21, 0x00	; 0
    47f0:	6d 81       	ldd	r22, Y+5	; 0x05
    47f2:	7e 81       	ldd	r23, Y+6	; 0x06
    47f4:	c4 01       	movw	r24, r8
    47f6:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    47fa:	f8 01       	movw	r30, r16
    47fc:	22 85       	ldd	r18, Z+10	; 0x0a
    47fe:	33 85       	ldd	r19, Z+11	; 0x0b
    4800:	41 e0       	ldi	r20, 0x01	; 1
    4802:	50 e0       	ldi	r21, 0x00	; 0
    4804:	6d 81       	ldd	r22, Y+5	; 0x05
    4806:	7e 81       	ldd	r23, Y+6	; 0x06
    4808:	c4 01       	movw	r24, r8
    480a:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    480e:	8c c1       	rjmp	.+792    	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x1D: 
			//DEUTSCH -> 3 QUBIT GATE
			newthephi=gates.DEU(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI),read(op3,THE),read(op3,PHI),read(0,THE));
    4810:	40 e0       	ldi	r20, 0x00	; 0
    4812:	50 e0       	ldi	r21, 0x00	; 0
    4814:	60 e0       	ldi	r22, 0x00	; 0
    4816:	70 e0       	ldi	r23, 0x00	; 0
    4818:	c4 01       	movw	r24, r8
    481a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    481e:	5c 01       	movw	r10, r24
    4820:	41 e0       	ldi	r20, 0x01	; 1
    4822:	50 e0       	ldi	r21, 0x00	; 0
    4824:	6d 81       	ldd	r22, Y+5	; 0x05
    4826:	7e 81       	ldd	r23, Y+6	; 0x06
    4828:	c4 01       	movw	r24, r8
    482a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    482e:	6c 01       	movw	r12, r24
    4830:	40 e0       	ldi	r20, 0x00	; 0
    4832:	50 e0       	ldi	r21, 0x00	; 0
    4834:	6d 81       	ldd	r22, Y+5	; 0x05
    4836:	7e 81       	ldd	r23, Y+6	; 0x06
    4838:	c4 01       	movw	r24, r8
    483a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    483e:	7c 01       	movw	r14, r24
    4840:	41 e0       	ldi	r20, 0x01	; 1
    4842:	50 e0       	ldi	r21, 0x00	; 0
    4844:	69 81       	ldd	r22, Y+1	; 0x01
    4846:	7a 81       	ldd	r23, Y+2	; 0x02
    4848:	c4 01       	movw	r24, r8
    484a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    484e:	8c 01       	movw	r16, r24
    4850:	40 e0       	ldi	r20, 0x00	; 0
    4852:	50 e0       	ldi	r21, 0x00	; 0
    4854:	69 81       	ldd	r22, Y+1	; 0x01
    4856:	7a 81       	ldd	r23, Y+2	; 0x02
    4858:	c4 01       	movw	r24, r8
    485a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    485e:	1c 01       	movw	r2, r24
    4860:	41 e0       	ldi	r20, 0x01	; 1
    4862:	50 e0       	ldi	r21, 0x00	; 0
    4864:	b2 01       	movw	r22, r4
    4866:	c4 01       	movw	r24, r8
    4868:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    486c:	9a 87       	std	Y+10, r25	; 0x0a
    486e:	89 87       	std	Y+9, r24	; 0x09
    4870:	40 e0       	ldi	r20, 0x00	; 0
    4872:	50 e0       	ldi	r21, 0x00	; 0
    4874:	b2 01       	movw	r22, r4
    4876:	c4 01       	movw	r24, r8
    4878:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    487c:	91 01       	movw	r18, r2
    487e:	49 85       	ldd	r20, Y+9	; 0x09
    4880:	5a 85       	ldd	r21, Y+10	; 0x0a
    4882:	bc 01       	movw	r22, r24
    4884:	c4 01       	movw	r24, r8
    4886:	05 96       	adiw	r24, 0x05	; 5
    4888:	0e 94 65 1a 	call	0x34ca	; 0x34ca <_ZN5Gates3DEUEiiiiiii>
    488c:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    488e:	fc 01       	movw	r30, r24
    4890:	20 81       	ld	r18, Z
    4892:	31 81       	ldd	r19, Z+1	; 0x01
    4894:	40 e0       	ldi	r20, 0x00	; 0
    4896:	50 e0       	ldi	r21, 0x00	; 0
    4898:	b2 01       	movw	r22, r4
    489a:	c4 01       	movw	r24, r8
    489c:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    48a0:	f8 01       	movw	r30, r16
    48a2:	22 81       	ldd	r18, Z+2	; 0x02
    48a4:	33 81       	ldd	r19, Z+3	; 0x03
    48a6:	41 e0       	ldi	r20, 0x01	; 1
    48a8:	50 e0       	ldi	r21, 0x00	; 0
    48aa:	b2 01       	movw	r22, r4
    48ac:	c4 01       	movw	r24, r8
    48ae:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    48b2:	f8 01       	movw	r30, r16
    48b4:	24 81       	ldd	r18, Z+4	; 0x04
    48b6:	35 81       	ldd	r19, Z+5	; 0x05
    48b8:	40 e0       	ldi	r20, 0x00	; 0
    48ba:	50 e0       	ldi	r21, 0x00	; 0
    48bc:	69 81       	ldd	r22, Y+1	; 0x01
    48be:	7a 81       	ldd	r23, Y+2	; 0x02
    48c0:	c4 01       	movw	r24, r8
    48c2:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    48c6:	f8 01       	movw	r30, r16
    48c8:	26 81       	ldd	r18, Z+6	; 0x06
    48ca:	37 81       	ldd	r19, Z+7	; 0x07
    48cc:	41 e0       	ldi	r20, 0x01	; 1
    48ce:	50 e0       	ldi	r21, 0x00	; 0
    48d0:	69 81       	ldd	r22, Y+1	; 0x01
    48d2:	7a 81       	ldd	r23, Y+2	; 0x02
    48d4:	c4 01       	movw	r24, r8
    48d6:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
			write(op3,THE,newthephi[4]); write(op3,PHI,newthephi[5]);
    48da:	f8 01       	movw	r30, r16
    48dc:	20 85       	ldd	r18, Z+8	; 0x08
    48de:	31 85       	ldd	r19, Z+9	; 0x09
    48e0:	40 e0       	ldi	r20, 0x00	; 0
    48e2:	50 e0       	ldi	r21, 0x00	; 0
    48e4:	6d 81       	ldd	r22, Y+5	; 0x05
    48e6:	7e 81       	ldd	r23, Y+6	; 0x06
    48e8:	c4 01       	movw	r24, r8
    48ea:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    48ee:	f8 01       	movw	r30, r16
    48f0:	22 85       	ldd	r18, Z+10	; 0x0a
    48f2:	33 85       	ldd	r19, Z+11	; 0x0b
    48f4:	41 e0       	ldi	r20, 0x01	; 1
    48f6:	50 e0       	ldi	r21, 0x00	; 0
    48f8:	6d 81       	ldd	r22, Y+5	; 0x05
    48fa:	7e 81       	ldd	r23, Y+6	; 0x06
    48fc:	c4 01       	movw	r24, r8
    48fe:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    4902:	12 c1       	rjmp	.+548    	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x1E: 
			newthephi=gates.SWQ(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    4904:	41 e0       	ldi	r20, 0x01	; 1
    4906:	50 e0       	ldi	r21, 0x00	; 0
    4908:	69 81       	ldd	r22, Y+1	; 0x01
    490a:	7a 81       	ldd	r23, Y+2	; 0x02
    490c:	c4 01       	movw	r24, r8
    490e:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4912:	8c 01       	movw	r16, r24
    4914:	40 e0       	ldi	r20, 0x00	; 0
    4916:	50 e0       	ldi	r21, 0x00	; 0
    4918:	69 81       	ldd	r22, Y+1	; 0x01
    491a:	7a 81       	ldd	r23, Y+2	; 0x02
    491c:	c4 01       	movw	r24, r8
    491e:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4922:	5c 01       	movw	r10, r24
    4924:	41 e0       	ldi	r20, 0x01	; 1
    4926:	50 e0       	ldi	r21, 0x00	; 0
    4928:	b2 01       	movw	r22, r4
    492a:	c4 01       	movw	r24, r8
    492c:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4930:	7c 01       	movw	r14, r24
    4932:	40 e0       	ldi	r20, 0x00	; 0
    4934:	50 e0       	ldi	r21, 0x00	; 0
    4936:	b2 01       	movw	r22, r4
    4938:	c4 01       	movw	r24, r8
    493a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    493e:	95 01       	movw	r18, r10
    4940:	a7 01       	movw	r20, r14
    4942:	bc 01       	movw	r22, r24
    4944:	c4 01       	movw	r24, r8
    4946:	05 96       	adiw	r24, 0x05	; 5
    4948:	0e 94 90 10 	call	0x2120	; 0x2120 <_ZN5Gates3SWQEiiii>
    494c:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    494e:	fc 01       	movw	r30, r24
    4950:	20 81       	ld	r18, Z
    4952:	31 81       	ldd	r19, Z+1	; 0x01
    4954:	40 e0       	ldi	r20, 0x00	; 0
    4956:	50 e0       	ldi	r21, 0x00	; 0
    4958:	b2 01       	movw	r22, r4
    495a:	c4 01       	movw	r24, r8
    495c:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    4960:	f8 01       	movw	r30, r16
    4962:	22 81       	ldd	r18, Z+2	; 0x02
    4964:	33 81       	ldd	r19, Z+3	; 0x03
    4966:	41 e0       	ldi	r20, 0x01	; 1
    4968:	50 e0       	ldi	r21, 0x00	; 0
    496a:	b2 01       	movw	r22, r4
    496c:	c4 01       	movw	r24, r8
    496e:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4972:	f8 01       	movw	r30, r16
    4974:	24 81       	ldd	r18, Z+4	; 0x04
    4976:	35 81       	ldd	r19, Z+5	; 0x05
    4978:	40 e0       	ldi	r20, 0x00	; 0
    497a:	50 e0       	ldi	r21, 0x00	; 0
    497c:	69 81       	ldd	r22, Y+1	; 0x01
    497e:	7a 81       	ldd	r23, Y+2	; 0x02
    4980:	c4 01       	movw	r24, r8
    4982:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    4986:	f8 01       	movw	r30, r16
    4988:	26 81       	ldd	r18, Z+6	; 0x06
    498a:	37 81       	ldd	r19, Z+7	; 0x07
    498c:	41 e0       	ldi	r20, 0x01	; 1
    498e:	50 e0       	ldi	r21, 0x00	; 0
    4990:	69 81       	ldd	r22, Y+1	; 0x01
    4992:	7a 81       	ldd	r23, Y+2	; 0x02
    4994:	c4 01       	movw	r24, r8
    4996:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    499a:	c6 c0       	rjmp	.+396    	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x1F: 
			newthephi=gates.SWI(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    499c:	41 e0       	ldi	r20, 0x01	; 1
    499e:	50 e0       	ldi	r21, 0x00	; 0
    49a0:	69 81       	ldd	r22, Y+1	; 0x01
    49a2:	7a 81       	ldd	r23, Y+2	; 0x02
    49a4:	c4 01       	movw	r24, r8
    49a6:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    49aa:	8c 01       	movw	r16, r24
    49ac:	40 e0       	ldi	r20, 0x00	; 0
    49ae:	50 e0       	ldi	r21, 0x00	; 0
    49b0:	69 81       	ldd	r22, Y+1	; 0x01
    49b2:	7a 81       	ldd	r23, Y+2	; 0x02
    49b4:	c4 01       	movw	r24, r8
    49b6:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    49ba:	5c 01       	movw	r10, r24
    49bc:	41 e0       	ldi	r20, 0x01	; 1
    49be:	50 e0       	ldi	r21, 0x00	; 0
    49c0:	b2 01       	movw	r22, r4
    49c2:	c4 01       	movw	r24, r8
    49c4:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    49c8:	7c 01       	movw	r14, r24
    49ca:	40 e0       	ldi	r20, 0x00	; 0
    49cc:	50 e0       	ldi	r21, 0x00	; 0
    49ce:	b2 01       	movw	r22, r4
    49d0:	c4 01       	movw	r24, r8
    49d2:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    49d6:	95 01       	movw	r18, r10
    49d8:	a7 01       	movw	r20, r14
    49da:	bc 01       	movw	r22, r24
    49dc:	c4 01       	movw	r24, r8
    49de:	05 96       	adiw	r24, 0x05	; 5
    49e0:	0e 94 96 11 	call	0x232c	; 0x232c <_ZN5Gates3SWIEiiii>
    49e4:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    49e6:	fc 01       	movw	r30, r24
    49e8:	20 81       	ld	r18, Z
    49ea:	31 81       	ldd	r19, Z+1	; 0x01
    49ec:	40 e0       	ldi	r20, 0x00	; 0
    49ee:	50 e0       	ldi	r21, 0x00	; 0
    49f0:	b2 01       	movw	r22, r4
    49f2:	c4 01       	movw	r24, r8
    49f4:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    49f8:	f8 01       	movw	r30, r16
    49fa:	22 81       	ldd	r18, Z+2	; 0x02
    49fc:	33 81       	ldd	r19, Z+3	; 0x03
    49fe:	41 e0       	ldi	r20, 0x01	; 1
    4a00:	50 e0       	ldi	r21, 0x00	; 0
    4a02:	b2 01       	movw	r22, r4
    4a04:	c4 01       	movw	r24, r8
    4a06:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4a0a:	f8 01       	movw	r30, r16
    4a0c:	24 81       	ldd	r18, Z+4	; 0x04
    4a0e:	35 81       	ldd	r19, Z+5	; 0x05
    4a10:	40 e0       	ldi	r20, 0x00	; 0
    4a12:	50 e0       	ldi	r21, 0x00	; 0
    4a14:	69 81       	ldd	r22, Y+1	; 0x01
    4a16:	7a 81       	ldd	r23, Y+2	; 0x02
    4a18:	c4 01       	movw	r24, r8
    4a1a:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    4a1e:	f8 01       	movw	r30, r16
    4a20:	26 81       	ldd	r18, Z+6	; 0x06
    4a22:	37 81       	ldd	r19, Z+7	; 0x07
    4a24:	41 e0       	ldi	r20, 0x01	; 1
    4a26:	50 e0       	ldi	r21, 0x00	; 0
    4a28:	69 81       	ldd	r22, Y+1	; 0x01
    4a2a:	7a 81       	ldd	r23, Y+2	; 0x02
    4a2c:	c4 01       	movw	r24, r8
    4a2e:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    4a32:	7a c0       	rjmp	.+244    	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x20:
			newthephi=gates.ROX(read(op1,THE),read(op1,PHI),op2);
    4a34:	41 e0       	ldi	r20, 0x01	; 1
    4a36:	50 e0       	ldi	r21, 0x00	; 0
    4a38:	b2 01       	movw	r22, r4
    4a3a:	c4 01       	movw	r24, r8
    4a3c:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4a40:	8c 01       	movw	r16, r24
    4a42:	40 e0       	ldi	r20, 0x00	; 0
    4a44:	50 e0       	ldi	r21, 0x00	; 0
    4a46:	b2 01       	movw	r22, r4
    4a48:	c4 01       	movw	r24, r8
    4a4a:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4a4e:	29 81       	ldd	r18, Y+1	; 0x01
    4a50:	3a 81       	ldd	r19, Y+2	; 0x02
    4a52:	a8 01       	movw	r20, r16
    4a54:	bc 01       	movw	r22, r24
    4a56:	c4 01       	movw	r24, r8
    4a58:	05 96       	adiw	r24, 0x05	; 5
    4a5a:	0e 94 98 12 	call	0x2530	; 0x2530 <_ZN5Gates3ROXEiii>
    4a5e:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4a60:	fc 01       	movw	r30, r24
    4a62:	20 81       	ld	r18, Z
    4a64:	31 81       	ldd	r19, Z+1	; 0x01
    4a66:	40 e0       	ldi	r20, 0x00	; 0
    4a68:	50 e0       	ldi	r21, 0x00	; 0
    4a6a:	b2 01       	movw	r22, r4
    4a6c:	c4 01       	movw	r24, r8
    4a6e:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    4a72:	f8 01       	movw	r30, r16
    4a74:	22 81       	ldd	r18, Z+2	; 0x02
    4a76:	33 81       	ldd	r19, Z+3	; 0x03
    4a78:	41 e0       	ldi	r20, 0x01	; 1
    4a7a:	50 e0       	ldi	r21, 0x00	; 0
    4a7c:	b2 01       	movw	r22, r4
    4a7e:	c4 01       	movw	r24, r8
    4a80:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    4a84:	51 c0       	rjmp	.+162    	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x21: 
			newthephi=gates.ROY(read(op1,THE),read(op1,PHI),op2);
    4a86:	41 e0       	ldi	r20, 0x01	; 1
    4a88:	50 e0       	ldi	r21, 0x00	; 0
    4a8a:	b2 01       	movw	r22, r4
    4a8c:	c4 01       	movw	r24, r8
    4a8e:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4a92:	8c 01       	movw	r16, r24
    4a94:	40 e0       	ldi	r20, 0x00	; 0
    4a96:	50 e0       	ldi	r21, 0x00	; 0
    4a98:	b2 01       	movw	r22, r4
    4a9a:	c4 01       	movw	r24, r8
    4a9c:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4aa0:	29 81       	ldd	r18, Y+1	; 0x01
    4aa2:	3a 81       	ldd	r19, Y+2	; 0x02
    4aa4:	a8 01       	movw	r20, r16
    4aa6:	bc 01       	movw	r22, r24
    4aa8:	c4 01       	movw	r24, r8
    4aaa:	05 96       	adiw	r24, 0x05	; 5
    4aac:	0e 94 37 13 	call	0x266e	; 0x266e <_ZN5Gates3ROYEiii>
    4ab0:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4ab2:	fc 01       	movw	r30, r24
    4ab4:	20 81       	ld	r18, Z
    4ab6:	31 81       	ldd	r19, Z+1	; 0x01
    4ab8:	40 e0       	ldi	r20, 0x00	; 0
    4aba:	50 e0       	ldi	r21, 0x00	; 0
    4abc:	b2 01       	movw	r22, r4
    4abe:	c4 01       	movw	r24, r8
    4ac0:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    4ac4:	f8 01       	movw	r30, r16
    4ac6:	22 81       	ldd	r18, Z+2	; 0x02
    4ac8:	33 81       	ldd	r19, Z+3	; 0x03
    4aca:	41 e0       	ldi	r20, 0x01	; 1
    4acc:	50 e0       	ldi	r21, 0x00	; 0
    4ace:	b2 01       	movw	r22, r4
    4ad0:	c4 01       	movw	r24, r8
    4ad2:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
		break;
    4ad6:	28 c0       	rjmp	.+80     	; 0x4b28 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x22: 
			newthephi=gates.ROZ(read(op1,THE),read(op1,PHI),op2);
    4ad8:	41 e0       	ldi	r20, 0x01	; 1
    4ada:	50 e0       	ldi	r21, 0x00	; 0
    4adc:	b2 01       	movw	r22, r4
    4ade:	c4 01       	movw	r24, r8
    4ae0:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4ae4:	8c 01       	movw	r16, r24
    4ae6:	40 e0       	ldi	r20, 0x00	; 0
    4ae8:	50 e0       	ldi	r21, 0x00	; 0
    4aea:	b2 01       	movw	r22, r4
    4aec:	c4 01       	movw	r24, r8
    4aee:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <_ZN4QEPU4readEii>
    4af2:	29 81       	ldd	r18, Y+1	; 0x01
    4af4:	3a 81       	ldd	r19, Y+2	; 0x02
    4af6:	a8 01       	movw	r20, r16
    4af8:	bc 01       	movw	r22, r24
    4afa:	c4 01       	movw	r24, r8
    4afc:	05 96       	adiw	r24, 0x05	; 5
    4afe:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <_ZN5Gates3ROZEiii>
    4b02:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4b04:	fc 01       	movw	r30, r24
    4b06:	20 81       	ld	r18, Z
    4b08:	31 81       	ldd	r19, Z+1	; 0x01
    4b0a:	40 e0       	ldi	r20, 0x00	; 0
    4b0c:	50 e0       	ldi	r21, 0x00	; 0
    4b0e:	b2 01       	movw	r22, r4
    4b10:	c4 01       	movw	r24, r8
    4b12:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
    4b16:	f8 01       	movw	r30, r16
    4b18:	22 81       	ldd	r18, Z+2	; 0x02
    4b1a:	33 81       	ldd	r19, Z+3	; 0x03
    4b1c:	41 e0       	ldi	r20, 0x01	; 1
    4b1e:	50 e0       	ldi	r21, 0x00	; 0
    4b20:	b2 01       	movw	r22, r4
    4b22:	c4 01       	movw	r24, r8
    4b24:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <_ZN4QEPU5writeEiii>
	/*serial.writestr("Function: "); serial.writestr(utils.int2str(func));
	serial.writestr(" , OP1: ");   serial.writestr(utils.int2str(op1));
	serial.writestr(" , OP2: ");   serial.writestr(utils.int2str(op2));
	serial.writestr(" PC: ");	   serial.writestrln(utils.int2str(program_counter));
	serial.writestrln("");*/
	free(newthephi);	
    4b28:	c8 01       	movw	r24, r16
    4b2a:	0e 94 0b 2d 	call	0x5a16	; 0x5a16 <free>
    4b2e:	2a 96       	adiw	r28, 0x0a	; 10
    4b30:	0f b6       	in	r0, 0x3f	; 63
    4b32:	f8 94       	cli
    4b34:	de bf       	out	0x3e, r29	; 62
    4b36:	0f be       	out	0x3f, r0	; 63
    4b38:	cd bf       	out	0x3d, r28	; 61
    4b3a:	df 91       	pop	r29
    4b3c:	cf 91       	pop	r28
    4b3e:	1f 91       	pop	r17
    4b40:	0f 91       	pop	r16
    4b42:	ff 90       	pop	r15
    4b44:	ef 90       	pop	r14
    4b46:	df 90       	pop	r13
    4b48:	cf 90       	pop	r12
    4b4a:	bf 90       	pop	r11
    4b4c:	af 90       	pop	r10
    4b4e:	9f 90       	pop	r9
    4b50:	8f 90       	pop	r8
    4b52:	7f 90       	pop	r7
    4b54:	6f 90       	pop	r6
    4b56:	5f 90       	pop	r5
    4b58:	4f 90       	pop	r4
    4b5a:	3f 90       	pop	r3
    4b5c:	2f 90       	pop	r2
    4b5e:	08 95       	ret

00004b60 <_ZN4QEPU3runEv>:
}
int QEPU::Utils::delay(int ms){
	while(ms--) _delay_ms(1);
}

void QEPU::run(){
    4b60:	2f 92       	push	r2
    4b62:	3f 92       	push	r3
    4b64:	4f 92       	push	r4
    4b66:	5f 92       	push	r5
    4b68:	6f 92       	push	r6
    4b6a:	7f 92       	push	r7
    4b6c:	8f 92       	push	r8
    4b6e:	9f 92       	push	r9
    4b70:	af 92       	push	r10
    4b72:	bf 92       	push	r11
    4b74:	cf 92       	push	r12
    4b76:	df 92       	push	r13
    4b78:	ef 92       	push	r14
    4b7a:	ff 92       	push	r15
    4b7c:	0f 93       	push	r16
    4b7e:	1f 93       	push	r17
    4b80:	cf 93       	push	r28
    4b82:	df 93       	push	r29
    4b84:	cd b7       	in	r28, 0x3d	; 61
    4b86:	de b7       	in	r29, 0x3e	; 62
    4b88:	cf 52       	subi	r28, 0x2F	; 47
    4b8a:	d2 40       	sbci	r29, 0x02	; 2
    4b8c:	0f b6       	in	r0, 0x3f	; 63
    4b8e:	f8 94       	cli
    4b90:	de bf       	out	0x3e, r29	; 62
    4b92:	0f be       	out	0x3f, r0	; 63
    4b94:	cd bf       	out	0x3d, r28	; 61
    4b96:	c2 5e       	subi	r28, 0xE2	; 226
    4b98:	dd 4f       	sbci	r29, 0xFD	; 253
    4b9a:	99 83       	std	Y+1, r25	; 0x01
    4b9c:	88 83       	st	Y, r24
    4b9e:	ce 51       	subi	r28, 0x1E	; 30
    4ba0:	d2 40       	sbci	r29, 0x02	; 2
	//TEMPORARY PRINTING FOR DEBUGGING PURPOSES
	serial.writestrln(" RUNNING "); serial.writestrln("");
    4ba2:	01 96       	adiw	r24, 0x01	; 1
    4ba4:	c2 5d       	subi	r28, 0xD2	; 210
    4ba6:	dd 4f       	sbci	r29, 0xFD	; 253
    4ba8:	99 83       	std	Y+1, r25	; 0x01
    4baa:	88 83       	st	Y, r24
    4bac:	ce 52       	subi	r28, 0x2E	; 46
    4bae:	d2 40       	sbci	r29, 0x02	; 2
    4bb0:	6e ec       	ldi	r22, 0xCE	; 206
    4bb2:	70 e0       	ldi	r23, 0x00	; 0
    4bb4:	0e 94 15 28 	call	0x502a	; 0x502a <_ZN6Serial10writestrlnEPc>
    4bb8:	63 ec       	ldi	r22, 0xC3	; 195
    4bba:	70 e0       	ldi	r23, 0x00	; 0
    4bbc:	c2 5d       	subi	r28, 0xD2	; 210
    4bbe:	dd 4f       	sbci	r29, 0xFD	; 253
    4bc0:	88 81       	ld	r24, Y
    4bc2:	99 81       	ldd	r25, Y+1	; 0x01
    4bc4:	ce 52       	subi	r28, 0x2E	; 46
    4bc6:	d2 40       	sbci	r29, 0x02	; 2
    4bc8:	0e 94 15 28 	call	0x502a	; 0x502a <_ZN6Serial10writestrlnEPc>
	
	/*EEPROM FETCH*/
	#pragma region EEPROM_FETCH
	int * eeprom_mem=utils.str2intarr(eeprom.readall()); //TODO: READ ALL EEPROM
    4bcc:	c2 5e       	subi	r28, 0xE2	; 226
    4bce:	dd 4f       	sbci	r29, 0xFD	; 253
    4bd0:	88 81       	ld	r24, Y
    4bd2:	99 81       	ldd	r25, Y+1	; 0x01
    4bd4:	ce 51       	subi	r28, 0x1E	; 30
    4bd6:	d2 40       	sbci	r29, 0x02	; 2
    4bd8:	0e 94 6f 02 	call	0x4de	; 0x4de <_ZN6EEProm7readallEv>
    4bdc:	bc 01       	movw	r22, r24
    4bde:	c2 5e       	subi	r28, 0xE2	; 226
    4be0:	dd 4f       	sbci	r29, 0xFD	; 253
    4be2:	88 81       	ld	r24, Y
    4be4:	99 81       	ldd	r25, Y+1	; 0x01
    4be6:	ce 51       	subi	r28, 0x1E	; 30
    4be8:	d2 40       	sbci	r29, 0x02	; 2
    4bea:	02 96       	adiw	r24, 0x02	; 2
    4bec:	0e 94 3b 1e 	call	0x3c76	; 0x3c76 <_ZN4QEPU5Utils10str2intarrEPc>
    4bf0:	dc 01       	movw	r26, r24
    4bf2:	18 97       	sbiw	r26, 0x08	; 8
	int eeprom_mem_length=0;
    4bf4:	81 2c       	mov	r8, r1
    4bf6:	91 2c       	mov	r9, r1
    4bf8:	fd 01       	movw	r30, r26
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
    4bfa:	18 96       	adiw	r26, 0x08	; 8
    4bfc:	2d 91       	ld	r18, X+
    4bfe:	3c 91       	ld	r19, X
    4c00:	19 97       	sbiw	r26, 0x09	; 9
    4c02:	2f 3f       	cpi	r18, 0xFF	; 255
    4c04:	31 05       	cpc	r19, r1
    4c06:	b1 f4       	brne	.+44     	; 0x4c34 <_ZN4QEPU3runEv+0xd4>
    4c08:	16 96       	adiw	r26, 0x06	; 6
    4c0a:	2d 91       	ld	r18, X+
    4c0c:	3c 91       	ld	r19, X
    4c0e:	17 97       	sbiw	r26, 0x07	; 7
    4c10:	2f 3f       	cpi	r18, 0xFF	; 255
    4c12:	31 05       	cpc	r19, r1
    4c14:	79 f4       	brne	.+30     	; 0x4c34 <_ZN4QEPU3runEv+0xd4>
    4c16:	24 81       	ldd	r18, Z+4	; 0x04
    4c18:	35 81       	ldd	r19, Z+5	; 0x05
    4c1a:	2f 3f       	cpi	r18, 0xFF	; 255
    4c1c:	31 05       	cpc	r19, r1
    4c1e:	51 f4       	brne	.+20     	; 0x4c34 <_ZN4QEPU3runEv+0xd4>
    4c20:	22 81       	ldd	r18, Z+2	; 0x02
    4c22:	33 81       	ldd	r19, Z+3	; 0x03
    4c24:	2f 3f       	cpi	r18, 0xFF	; 255
    4c26:	31 05       	cpc	r19, r1
    4c28:	29 f4       	brne	.+10     	; 0x4c34 <_ZN4QEPU3runEv+0xd4>
    4c2a:	20 81       	ld	r18, Z
    4c2c:	31 81       	ldd	r19, Z+1	; 0x01
    4c2e:	2f 3f       	cpi	r18, 0xFF	; 255
    4c30:	31 05       	cpc	r19, r1
    4c32:	29 f0       	breq	.+10     	; 0x4c3e <_ZN4QEPU3runEv+0xde>
    4c34:	2f ef       	ldi	r18, 0xFF	; 255
    4c36:	82 1a       	sub	r8, r18
    4c38:	92 0a       	sbc	r9, r18
    4c3a:	12 96       	adiw	r26, 0x02	; 2
    4c3c:	dd cf       	rjmp	.-70     	; 0x4bf8 <_ZN4QEPU3runEv+0x98>
    4c3e:	94 01       	movw	r18, r8
    4c40:	24 50       	subi	r18, 0x04	; 4
    4c42:	31 09       	sbc	r19, r1
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
	for(int i=0;i<eeprom_mem_length;i++){
    4c44:	12 16       	cp	r1, r18
    4c46:	13 06       	cpc	r1, r19
    4c48:	0c f0       	brlt	.+2      	; 0x4c4c <_ZN4QEPU3runEv+0xec>
    4c4a:	9b c1       	rjmp	.+822    	; 0x4f82 <_ZN4QEPU3runEv+0x422>
    4c4c:	fc 01       	movw	r30, r24
    4c4e:	35 e0       	ldi	r19, 0x05	; 5
    4c50:	83 1a       	sub	r8, r19
    4c52:	91 08       	sbc	r9, r1
    4c54:	20 e0       	ldi	r18, 0x00	; 0
    4c56:	30 e0       	ldi	r19, 0x00	; 0
	int * eeprom_mem=utils.str2intarr(eeprom.readall()); //TODO: READ ALL EEPROM
	int eeprom_mem_length=0;
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
    4c58:	80 e0       	ldi	r24, 0x00	; 0
    4c5a:	90 e0       	ldi	r25, 0x00	; 0
    4c5c:	ca 5d       	subi	r28, 0xDA	; 218
    4c5e:	dd 4f       	sbci	r29, 0xFD	; 253
    4c60:	19 82       	std	Y+1, r1	; 0x01
    4c62:	18 82       	st	Y, r1
    4c64:	c6 52       	subi	r28, 0x26	; 38
    4c66:	d2 40       	sbci	r29, 0x02	; 2
	for(int i=0;i<eeprom_mem_length;i++){
		if(eeprom_splittedx>=INSTR_WIDTH) {line++;eeprom_splittedx=0;} 
		eeprom_splitted[line][eeprom_splittedx++]=eeprom_mem[i];
    4c68:	1d e0       	ldi	r17, 0x0D	; 13
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
	for(int i=0;i<eeprom_mem_length;i++){
		if(eeprom_splittedx>=INSTR_WIDTH) {line++;eeprom_splittedx=0;} 
    4c6a:	51 2c       	mov	r5, r1
    4c6c:	61 2c       	mov	r6, r1
    4c6e:	c1 2c       	mov	r12, r1
    4c70:	d1 2c       	mov	r13, r1
    4c72:	0c c0       	rjmp	.+24     	; 0x4c8c <_ZN4QEPU3runEv+0x12c>
    4c74:	4d 30       	cpi	r20, 0x0D	; 13
    4c76:	51 05       	cpc	r21, r1
    4c78:	34 f0       	brlt	.+12     	; 0x4c86 <_ZN4QEPU3runEv+0x126>
    4c7a:	8f ef       	ldi	r24, 0xFF	; 255
    4c7c:	c8 1a       	sub	r12, r24
    4c7e:	d8 0a       	sbc	r13, r24
    4c80:	85 2d       	mov	r24, r5
    4c82:	96 2d       	mov	r25, r6
    4c84:	01 c0       	rjmp	.+2      	; 0x4c88 <_ZN4QEPU3runEv+0x128>
		eeprom_splitted[line][eeprom_splittedx++]=eeprom_mem[i];
    4c86:	ca 01       	movw	r24, r20
    4c88:	2f 5f       	subi	r18, 0xFF	; 255
    4c8a:	3f 4f       	sbci	r19, 0xFF	; 255
    4c8c:	ac 01       	movw	r20, r24
    4c8e:	4f 5f       	subi	r20, 0xFF	; 255
    4c90:	5f 4f       	sbci	r21, 0xFF	; 255
    4c92:	61 91       	ld	r22, Z+
    4c94:	71 91       	ld	r23, Z+
    4c96:	1c 9d       	mul	r17, r12
    4c98:	d0 01       	movw	r26, r0
    4c9a:	1d 9d       	mul	r17, r13
    4c9c:	b0 0d       	add	r27, r0
    4c9e:	11 24       	eor	r1, r1
    4ca0:	8a 0f       	add	r24, r26
    4ca2:	9b 1f       	adc	r25, r27
    4ca4:	dc 01       	movw	r26, r24
    4ca6:	aa 0f       	add	r26, r26
    4ca8:	bb 1f       	adc	r27, r27
    4caa:	81 e0       	ldi	r24, 0x01	; 1
    4cac:	90 e0       	ldi	r25, 0x00	; 0
    4cae:	8c 0f       	add	r24, r28
    4cb0:	9d 1f       	adc	r25, r29
    4cb2:	a8 0f       	add	r26, r24
    4cb4:	b9 1f       	adc	r27, r25
    4cb6:	6d 93       	st	X+, r22
    4cb8:	7c 93       	st	X, r23
	int eeprom_mem_length=0;
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
	for(int i=0;i<eeprom_mem_length;i++){
    4cba:	28 15       	cp	r18, r8
    4cbc:	39 05       	cpc	r19, r9
    4cbe:	d1 f6       	brne	.-76     	; 0x4c74 <_ZN4QEPU3runEv+0x114>
    4cc0:	ca 5d       	subi	r28, 0xDA	; 218
    4cc2:	dd 4f       	sbci	r29, 0xFD	; 253
    4cc4:	d9 82       	std	Y+1, r13	; 0x01
    4cc6:	c8 82       	st	Y, r12
    4cc8:	c6 52       	subi	r28, 0x26	; 38
    4cca:	d2 40       	sbci	r29, 0x02	; 2
	}
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
    4ccc:	c2 5e       	subi	r28, 0xE2	; 226
    4cce:	dd 4f       	sbci	r29, 0xFD	; 253
    4cd0:	e8 81       	ld	r30, Y
    4cd2:	f9 81       	ldd	r31, Y+1	; 0x01
    4cd4:	ce 51       	subi	r28, 0x1E	; 30
    4cd6:	d2 40       	sbci	r29, 0x02	; 2
    4cd8:	14 82       	std	Z+4, r1	; 0x04
    4cda:	13 82       	std	Z+3, r1	; 0x03
    4cdc:	1c 14       	cp	r1, r12
    4cde:	1d 04       	cpc	r1, r13
    4ce0:	0c f0       	brlt	.+2      	; 0x4ce4 <_ZN4QEPU3runEv+0x184>
    4ce2:	3c c1       	rjmp	.+632    	; 0x4f5c <_ZN4QEPU3runEv+0x3fc>
    4ce4:	80 e0       	ldi	r24, 0x00	; 0
    4ce6:	90 e0       	ldi	r25, 0x00	; 0
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]=""; char op3s[OP3_WIDTH]="";	
    4ce8:	1e 01       	movw	r2, r28
    4cea:	39 ee       	ldi	r19, 0xE9	; 233
    4cec:	23 1a       	sub	r2, r19
    4cee:	3d ef       	ldi	r19, 0xFD	; 253
    4cf0:	33 0a       	sbc	r3, r19
    4cf2:	2e 01       	movw	r4, r28
    4cf4:	e0 ef       	ldi	r30, 0xF0	; 240
    4cf6:	4e 1a       	sub	r4, r30
    4cf8:	ed ef       	ldi	r30, 0xFD	; 253
    4cfa:	5e 0a       	sbc	r5, r30
    4cfc:	3e 01       	movw	r6, r28
    4cfe:	f7 ef       	ldi	r31, 0xF7	; 247
    4d00:	6f 1a       	sub	r6, r31
    4d02:	fd ef       	ldi	r31, 0xFD	; 253
    4d04:	7f 0a       	sbc	r7, r31
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
			sprintf(op1s,"%s%x",op1s,eeprom_splitted[program_counter][k+FIXED_OP1_OFFSET]); // HEX CONCAT TO STRING (OP1 FETCH)
    4d06:	0f 2e       	mov	r0, r31
    4d08:	f8 ed       	ldi	r31, 0xD8	; 216
    4d0a:	8f 2e       	mov	r8, r31
    4d0c:	f0 e0       	ldi	r31, 0x00	; 0
    4d0e:	9f 2e       	mov	r9, r31
    4d10:	f0 2d       	mov	r31, r0
    4d12:	c8 5d       	subi	r28, 0xD8	; 216
    4d14:	dd 4f       	sbci	r29, 0xFD	; 253
    4d16:	28 82       	st	Y, r2
    4d18:	c8 52       	subi	r28, 0x28	; 40
    4d1a:	d2 40       	sbci	r29, 0x02	; 2
    4d1c:	c7 5d       	subi	r28, 0xD7	; 215
    4d1e:	dd 4f       	sbci	r29, 0xFD	; 253
    4d20:	38 82       	st	Y, r3
    4d22:	c9 52       	subi	r28, 0x29	; 41
    4d24:	d2 40       	sbci	r29, 0x02	; 2
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
    4d26:	c6 5d       	subi	r28, 0xD6	; 214
    4d28:	dd 4f       	sbci	r29, 0xFD	; 253
    4d2a:	48 82       	st	Y, r4
    4d2c:	ca 52       	subi	r28, 0x2A	; 42
    4d2e:	d2 40       	sbci	r29, 0x02	; 2
    4d30:	c5 5d       	subi	r28, 0xD5	; 213
    4d32:	dd 4f       	sbci	r29, 0xFD	; 253
    4d34:	58 82       	st	Y, r5
    4d36:	cb 52       	subi	r28, 0x2B	; 43
    4d38:	d2 40       	sbci	r29, 0x02	; 2
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
    4d3a:	c4 5d       	subi	r28, 0xD4	; 212
    4d3c:	dd 4f       	sbci	r29, 0xFD	; 253
    4d3e:	68 82       	st	Y, r6
    4d40:	cc 52       	subi	r28, 0x2C	; 44
    4d42:	d2 40       	sbci	r29, 0x02	; 2
    4d44:	c3 5d       	subi	r28, 0xD3	; 211
    4d46:	dd 4f       	sbci	r29, 0xFD	; 253
    4d48:	78 82       	st	Y, r7
    4d4a:	cd 52       	subi	r28, 0x2D	; 45
    4d4c:	d2 40       	sbci	r29, 0x02	; 2
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]=""; char op3s[OP3_WIDTH]="";	
    4d4e:	f1 01       	movw	r30, r2
    4d50:	10 82       	st	Z, r1
    4d52:	11 82       	std	Z+1, r1	; 0x01
    4d54:	12 82       	std	Z+2, r1	; 0x02
    4d56:	13 82       	std	Z+3, r1	; 0x03
    4d58:	14 82       	std	Z+4, r1	; 0x04
    4d5a:	15 82       	std	Z+5, r1	; 0x05
    4d5c:	16 82       	std	Z+6, r1	; 0x06
    4d5e:	f2 01       	movw	r30, r4
    4d60:	10 82       	st	Z, r1
    4d62:	11 82       	std	Z+1, r1	; 0x01
    4d64:	12 82       	std	Z+2, r1	; 0x02
    4d66:	13 82       	std	Z+3, r1	; 0x03
    4d68:	14 82       	std	Z+4, r1	; 0x04
    4d6a:	15 82       	std	Z+5, r1	; 0x05
    4d6c:	16 82       	std	Z+6, r1	; 0x06
    4d6e:	f3 01       	movw	r30, r6
    4d70:	10 82       	st	Z, r1
    4d72:	11 82       	std	Z+1, r1	; 0x01
    4d74:	12 82       	std	Z+2, r1	; 0x02
    4d76:	13 82       	std	Z+3, r1	; 0x03
    4d78:	14 82       	std	Z+4, r1	; 0x04
    4d7a:	15 82       	std	Z+5, r1	; 0x05
    4d7c:	16 82       	std	Z+6, r1	; 0x06
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
    4d7e:	2a e1       	ldi	r18, 0x1A	; 26
    4d80:	28 9f       	mul	r18, r24
    4d82:	f0 01       	movw	r30, r0
    4d84:	29 9f       	mul	r18, r25
    4d86:	f0 0d       	add	r31, r0
    4d88:	11 24       	eor	r1, r1
    4d8a:	21 e0       	ldi	r18, 0x01	; 1
    4d8c:	30 e0       	ldi	r19, 0x00	; 0
    4d8e:	2c 0f       	add	r18, r28
    4d90:	3d 1f       	adc	r19, r29
    4d92:	e2 0f       	add	r30, r18
    4d94:	f3 1f       	adc	r31, r19
    4d96:	80 81       	ld	r24, Z
    4d98:	91 81       	ldd	r25, Z+1	; 0x01
    4d9a:	c0 5e       	subi	r28, 0xE0	; 224
    4d9c:	dd 4f       	sbci	r29, 0xFD	; 253
    4d9e:	99 83       	std	Y+1, r25	; 0x01
    4da0:	88 83       	st	Y, r24
    4da2:	c0 52       	subi	r28, 0x20	; 32
    4da4:	d2 40       	sbci	r29, 0x02	; 2
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
    4da6:	c1 2c       	mov	r12, r1
    4da8:	d1 2c       	mov	r13, r1
    4daa:	c2 5e       	subi	r28, 0xE2	; 226
    4dac:	dd 4f       	sbci	r29, 0xFD	; 253
    4dae:	a8 80       	ld	r10, Y
    4db0:	b9 80       	ldd	r11, Y+1	; 0x01
    4db2:	ce 51       	subi	r28, 0x1E	; 30
    4db4:	d2 40       	sbci	r29, 0x02	; 2
			sprintf(op1s,"%s%x",op1s,eeprom_splitted[program_counter][k+FIXED_OP1_OFFSET]); // HEX CONCAT TO STRING (OP1 FETCH)
    4db6:	9f ef       	ldi	r25, 0xFF	; 255
    4db8:	c9 1a       	sub	r12, r25
    4dba:	d9 0a       	sbc	r13, r25
    4dbc:	f5 01       	movw	r30, r10
    4dbe:	83 81       	ldd	r24, Z+3	; 0x03
    4dc0:	94 81       	ldd	r25, Z+4	; 0x04
    4dc2:	2d e0       	ldi	r18, 0x0D	; 13
    4dc4:	28 9f       	mul	r18, r24
    4dc6:	f0 01       	movw	r30, r0
    4dc8:	29 9f       	mul	r18, r25
    4dca:	f0 0d       	add	r31, r0
    4dcc:	11 24       	eor	r1, r1
    4dce:	ec 0d       	add	r30, r12
    4dd0:	fd 1d       	adc	r31, r13
    4dd2:	ee 0f       	add	r30, r30
    4dd4:	ff 1f       	adc	r31, r31
    4dd6:	81 e0       	ldi	r24, 0x01	; 1
    4dd8:	90 e0       	ldi	r25, 0x00	; 0
    4dda:	8c 0f       	add	r24, r28
    4ddc:	9d 1f       	adc	r25, r29
    4dde:	e8 0f       	add	r30, r24
    4de0:	f9 1f       	adc	r31, r25
    4de2:	81 81       	ldd	r24, Z+1	; 0x01
    4de4:	8f 93       	push	r24
    4de6:	80 81       	ld	r24, Z
    4de8:	8f 93       	push	r24
    4dea:	3f 92       	push	r3
    4dec:	2f 92       	push	r2
    4dee:	9f 92       	push	r9
    4df0:	8f 92       	push	r8
    4df2:	3f 92       	push	r3
    4df4:	2f 92       	push	r2
    4df6:	0e 94 34 2f 	call	0x5e68	; 0x5e68 <sprintf>
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
    4dfa:	f5 01       	movw	r30, r10
    4dfc:	83 81       	ldd	r24, Z+3	; 0x03
    4dfe:	94 81       	ldd	r25, Z+4	; 0x04
    4e00:	2d e0       	ldi	r18, 0x0D	; 13
    4e02:	28 9f       	mul	r18, r24
    4e04:	f0 01       	movw	r30, r0
    4e06:	29 9f       	mul	r18, r25
    4e08:	f0 0d       	add	r31, r0
    4e0a:	11 24       	eor	r1, r1
    4e0c:	ec 0d       	add	r30, r12
    4e0e:	fd 1d       	adc	r31, r13
    4e10:	34 96       	adiw	r30, 0x04	; 4
    4e12:	ee 0f       	add	r30, r30
    4e14:	ff 1f       	adc	r31, r31
    4e16:	81 e0       	ldi	r24, 0x01	; 1
    4e18:	90 e0       	ldi	r25, 0x00	; 0
    4e1a:	8c 0f       	add	r24, r28
    4e1c:	9d 1f       	adc	r25, r29
    4e1e:	e8 0f       	add	r30, r24
    4e20:	f9 1f       	adc	r31, r25
    4e22:	81 81       	ldd	r24, Z+1	; 0x01
    4e24:	8f 93       	push	r24
    4e26:	80 81       	ld	r24, Z
    4e28:	8f 93       	push	r24
    4e2a:	5f 92       	push	r5
    4e2c:	4f 92       	push	r4
    4e2e:	9f 92       	push	r9
    4e30:	8f 92       	push	r8
    4e32:	5f 92       	push	r5
    4e34:	4f 92       	push	r4
    4e36:	0e 94 34 2f 	call	0x5e68	; 0x5e68 <sprintf>
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
    4e3a:	f5 01       	movw	r30, r10
    4e3c:	83 81       	ldd	r24, Z+3	; 0x03
    4e3e:	94 81       	ldd	r25, Z+4	; 0x04
    4e40:	2d e0       	ldi	r18, 0x0D	; 13
    4e42:	28 9f       	mul	r18, r24
    4e44:	f0 01       	movw	r30, r0
    4e46:	29 9f       	mul	r18, r25
    4e48:	f0 0d       	add	r31, r0
    4e4a:	11 24       	eor	r1, r1
    4e4c:	ec 0d       	add	r30, r12
    4e4e:	fd 1d       	adc	r31, r13
    4e50:	38 96       	adiw	r30, 0x08	; 8
    4e52:	ee 0f       	add	r30, r30
    4e54:	ff 1f       	adc	r31, r31
    4e56:	81 e0       	ldi	r24, 0x01	; 1
    4e58:	90 e0       	ldi	r25, 0x00	; 0
    4e5a:	8c 0f       	add	r24, r28
    4e5c:	9d 1f       	adc	r25, r29
    4e5e:	e8 0f       	add	r30, r24
    4e60:	f9 1f       	adc	r31, r25
    4e62:	81 81       	ldd	r24, Z+1	; 0x01
    4e64:	8f 93       	push	r24
    4e66:	80 81       	ld	r24, Z
    4e68:	8f 93       	push	r24
    4e6a:	7f 92       	push	r7
    4e6c:	6f 92       	push	r6
    4e6e:	9f 92       	push	r9
    4e70:	8f 92       	push	r8
    4e72:	7f 92       	push	r7
    4e74:	6f 92       	push	r6
    4e76:	0e 94 34 2f 	call	0x5e68	; 0x5e68 <sprintf>
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]=""; char op3s[OP3_WIDTH]="";	
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
    4e7a:	0f b6       	in	r0, 0x3f	; 63
    4e7c:	f8 94       	cli
    4e7e:	de bf       	out	0x3e, r29	; 62
    4e80:	0f be       	out	0x3f, r0	; 63
    4e82:	cd bf       	out	0x3d, r28	; 61
    4e84:	f4 e0       	ldi	r31, 0x04	; 4
    4e86:	cf 16       	cp	r12, r31
    4e88:	d1 04       	cpc	r13, r1
    4e8a:	09 f0       	breq	.+2      	; 0x4e8e <_ZN4QEPU3runEv+0x32e>
    4e8c:	94 cf       	rjmp	.-216    	; 0x4db6 <_ZN4QEPU3runEv+0x256>
			sprintf(op1s,"%s%x",op1s,eeprom_splitted[program_counter][k+FIXED_OP1_OFFSET]); // HEX CONCAT TO STRING (OP1 FETCH)
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
		}
		execute(func,strtol(op1s,NULL,16),strtol(op2s,NULL,16),strtol(op3s,NULL,16)); //*INSTRUCTION DECODE AND EXECUTE*/
    4e8e:	40 e1       	ldi	r20, 0x10	; 16
    4e90:	50 e0       	ldi	r21, 0x00	; 0
    4e92:	60 e0       	ldi	r22, 0x00	; 0
    4e94:	70 e0       	ldi	r23, 0x00	; 0
    4e96:	c4 5d       	subi	r28, 0xD4	; 212
    4e98:	dd 4f       	sbci	r29, 0xFD	; 253
    4e9a:	88 81       	ld	r24, Y
    4e9c:	cc 52       	subi	r28, 0x2C	; 44
    4e9e:	d2 40       	sbci	r29, 0x02	; 2
    4ea0:	c3 5d       	subi	r28, 0xD3	; 211
    4ea2:	dd 4f       	sbci	r29, 0xFD	; 253
    4ea4:	98 81       	ld	r25, Y
    4ea6:	cd 52       	subi	r28, 0x2D	; 45
    4ea8:	d2 40       	sbci	r29, 0x02	; 2
    4eaa:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <strtol>
    4eae:	5b 01       	movw	r10, r22
    4eb0:	6c 01       	movw	r12, r24
    4eb2:	40 e1       	ldi	r20, 0x10	; 16
    4eb4:	50 e0       	ldi	r21, 0x00	; 0
    4eb6:	60 e0       	ldi	r22, 0x00	; 0
    4eb8:	70 e0       	ldi	r23, 0x00	; 0
    4eba:	c6 5d       	subi	r28, 0xD6	; 214
    4ebc:	dd 4f       	sbci	r29, 0xFD	; 253
    4ebe:	88 81       	ld	r24, Y
    4ec0:	ca 52       	subi	r28, 0x2A	; 42
    4ec2:	d2 40       	sbci	r29, 0x02	; 2
    4ec4:	c5 5d       	subi	r28, 0xD5	; 213
    4ec6:	dd 4f       	sbci	r29, 0xFD	; 253
    4ec8:	98 81       	ld	r25, Y
    4eca:	cb 52       	subi	r28, 0x2B	; 43
    4ecc:	d2 40       	sbci	r29, 0x02	; 2
    4ece:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <strtol>
    4ed2:	ce 5d       	subi	r28, 0xDE	; 222
    4ed4:	dd 4f       	sbci	r29, 0xFD	; 253
    4ed6:	68 83       	st	Y, r22
    4ed8:	79 83       	std	Y+1, r23	; 0x01
    4eda:	8a 83       	std	Y+2, r24	; 0x02
    4edc:	9b 83       	std	Y+3, r25	; 0x03
    4ede:	c2 52       	subi	r28, 0x22	; 34
    4ee0:	d2 40       	sbci	r29, 0x02	; 2
    4ee2:	40 e1       	ldi	r20, 0x10	; 16
    4ee4:	50 e0       	ldi	r21, 0x00	; 0
    4ee6:	60 e0       	ldi	r22, 0x00	; 0
    4ee8:	70 e0       	ldi	r23, 0x00	; 0
    4eea:	c8 5d       	subi	r28, 0xD8	; 216
    4eec:	dd 4f       	sbci	r29, 0xFD	; 253
    4eee:	88 81       	ld	r24, Y
    4ef0:	c8 52       	subi	r28, 0x28	; 40
    4ef2:	d2 40       	sbci	r29, 0x02	; 2
    4ef4:	c7 5d       	subi	r28, 0xD7	; 215
    4ef6:	dd 4f       	sbci	r29, 0xFD	; 253
    4ef8:	98 81       	ld	r25, Y
    4efa:	c9 52       	subi	r28, 0x29	; 41
    4efc:	d2 40       	sbci	r29, 0x02	; 2
    4efe:	0e 94 f8 2d 	call	0x5bf0	; 0x5bf0 <strtol>
    4f02:	9b 01       	movw	r18, r22
    4f04:	ac 01       	movw	r20, r24
    4f06:	ce 5d       	subi	r28, 0xDE	; 222
    4f08:	dd 4f       	sbci	r29, 0xFD	; 253
    4f0a:	e8 80       	ld	r14, Y
    4f0c:	f9 80       	ldd	r15, Y+1	; 0x01
    4f0e:	0a 81       	ldd	r16, Y+2	; 0x02
    4f10:	1b 81       	ldd	r17, Y+3	; 0x03
    4f12:	c2 52       	subi	r28, 0x22	; 34
    4f14:	d2 40       	sbci	r29, 0x02	; 2
    4f16:	c0 5e       	subi	r28, 0xE0	; 224
    4f18:	dd 4f       	sbci	r29, 0xFD	; 253
    4f1a:	68 81       	ld	r22, Y
    4f1c:	79 81       	ldd	r23, Y+1	; 0x01
    4f1e:	c0 52       	subi	r28, 0x20	; 32
    4f20:	d2 40       	sbci	r29, 0x02	; 2
    4f22:	c2 5e       	subi	r28, 0xE2	; 226
    4f24:	dd 4f       	sbci	r29, 0xFD	; 253
    4f26:	88 81       	ld	r24, Y
    4f28:	99 81       	ldd	r25, Y+1	; 0x01
    4f2a:	ce 51       	subi	r28, 0x1E	; 30
    4f2c:	d2 40       	sbci	r29, 0x02	; 2
    4f2e:	0e 94 4f 20 	call	0x409e	; 0x409e <_ZN4QEPU7executeEilll>
	}
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
    4f32:	c2 5e       	subi	r28, 0xE2	; 226
    4f34:	dd 4f       	sbci	r29, 0xFD	; 253
    4f36:	e8 81       	ld	r30, Y
    4f38:	f9 81       	ldd	r31, Y+1	; 0x01
    4f3a:	ce 51       	subi	r28, 0x1E	; 30
    4f3c:	d2 40       	sbci	r29, 0x02	; 2
    4f3e:	83 81       	ldd	r24, Z+3	; 0x03
    4f40:	94 81       	ldd	r25, Z+4	; 0x04
    4f42:	01 96       	adiw	r24, 0x01	; 1
    4f44:	94 83       	std	Z+4, r25	; 0x04
    4f46:	83 83       	std	Z+3, r24	; 0x03
    4f48:	ca 5d       	subi	r28, 0xDA	; 218
    4f4a:	dd 4f       	sbci	r29, 0xFD	; 253
    4f4c:	28 81       	ld	r18, Y
    4f4e:	39 81       	ldd	r19, Y+1	; 0x01
    4f50:	c6 52       	subi	r28, 0x26	; 38
    4f52:	d2 40       	sbci	r29, 0x02	; 2
    4f54:	82 17       	cp	r24, r18
    4f56:	93 07       	cpc	r25, r19
    4f58:	0c f4       	brge	.+2      	; 0x4f5c <_ZN4QEPU3runEv+0x3fc>
    4f5a:	f9 ce       	rjmp	.-526    	; 0x4d4e <_ZN4QEPU3runEv+0x1ee>
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
		}
		execute(func,strtol(op1s,NULL,16),strtol(op2s,NULL,16),strtol(op3s,NULL,16)); //*INSTRUCTION DECODE AND EXECUTE*/
	}
	dumpmem();
    4f5c:	c2 5e       	subi	r28, 0xE2	; 226
    4f5e:	dd 4f       	sbci	r29, 0xFD	; 253
    4f60:	88 81       	ld	r24, Y
    4f62:	99 81       	ldd	r25, Y+1	; 0x01
    4f64:	ce 51       	subi	r28, 0x1E	; 30
    4f66:	d2 40       	sbci	r29, 0x02	; 2
    4f68:	0e 94 bb 1f 	call	0x3f76	; 0x3f76 <_ZN4QEPU7dumpmemEv>
	serial.writestr("The execution of the program has finished");
    4f6c:	6d ed       	ldi	r22, 0xDD	; 221
    4f6e:	70 e0       	ldi	r23, 0x00	; 0
    4f70:	c2 5d       	subi	r28, 0xD2	; 210
    4f72:	dd 4f       	sbci	r29, 0xFD	; 253
    4f74:	88 81       	ld	r24, Y
    4f76:	99 81       	ldd	r25, Y+1	; 0x01
    4f78:	ce 52       	subi	r28, 0x2E	; 46
    4f7a:	d2 40       	sbci	r29, 0x02	; 2
    4f7c:	0e 94 00 28 	call	0x5000	; 0x5000 <_ZN6Serial8writestrEPc>
    4f80:	09 c0       	rjmp	.+18     	; 0x4f94 <_ZN4QEPU3runEv+0x434>
	}
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
    4f82:	c2 5e       	subi	r28, 0xE2	; 226
    4f84:	dd 4f       	sbci	r29, 0xFD	; 253
    4f86:	e8 81       	ld	r30, Y
    4f88:	f9 81       	ldd	r31, Y+1	; 0x01
    4f8a:	ce 51       	subi	r28, 0x1E	; 30
    4f8c:	d2 40       	sbci	r29, 0x02	; 2
    4f8e:	14 82       	std	Z+4, r1	; 0x04
    4f90:	13 82       	std	Z+3, r1	; 0x03
    4f92:	e4 cf       	rjmp	.-56     	; 0x4f5c <_ZN4QEPU3runEv+0x3fc>
		execute(func,strtol(op1s,NULL,16),strtol(op2s,NULL,16),strtol(op3s,NULL,16)); //*INSTRUCTION DECODE AND EXECUTE*/
	}
	dumpmem();
	serial.writestr("The execution of the program has finished");
	#pragma endregion
}
    4f94:	c1 5d       	subi	r28, 0xD1	; 209
    4f96:	dd 4f       	sbci	r29, 0xFD	; 253
    4f98:	0f b6       	in	r0, 0x3f	; 63
    4f9a:	f8 94       	cli
    4f9c:	de bf       	out	0x3e, r29	; 62
    4f9e:	0f be       	out	0x3f, r0	; 63
    4fa0:	cd bf       	out	0x3d, r28	; 61
    4fa2:	df 91       	pop	r29
    4fa4:	cf 91       	pop	r28
    4fa6:	1f 91       	pop	r17
    4fa8:	0f 91       	pop	r16
    4faa:	ff 90       	pop	r15
    4fac:	ef 90       	pop	r14
    4fae:	df 90       	pop	r13
    4fb0:	cf 90       	pop	r12
    4fb2:	bf 90       	pop	r11
    4fb4:	af 90       	pop	r10
    4fb6:	9f 90       	pop	r9
    4fb8:	8f 90       	pop	r8
    4fba:	7f 90       	pop	r7
    4fbc:	6f 90       	pop	r6
    4fbe:	5f 90       	pop	r5
    4fc0:	4f 90       	pop	r4
    4fc2:	3f 90       	pop	r3
    4fc4:	2f 90       	pop	r2
    4fc6:	08 95       	ret

00004fc8 <main>:
#include "qepu.h"
int main(void){
    4fc8:	cf 93       	push	r28
    4fca:	df 93       	push	r29
    4fcc:	00 d0       	rcall	.+0      	; 0x4fce <main+0x6>
    4fce:	00 d0       	rcall	.+0      	; 0x4fd0 <main+0x8>
    4fd0:	00 d0       	rcall	.+0      	; 0x4fd2 <main+0xa>
    4fd2:	cd b7       	in	r28, 0x3d	; 61
    4fd4:	de b7       	in	r29, 0x3e	; 62
	QEPU qepu;
    4fd6:	ce 01       	movw	r24, r28
    4fd8:	01 96       	adiw	r24, 0x01	; 1
    4fda:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <_ZN4QEPUC1Ev>
	qepu.run();
    4fde:	ce 01       	movw	r24, r28
    4fe0:	01 96       	adiw	r24, 0x01	; 1
    4fe2:	0e 94 b0 25 	call	0x4b60	; 0x4b60 <_ZN4QEPU3runEv>
    4fe6:	ff cf       	rjmp	.-2      	; 0x4fe6 <main+0x1e>

00004fe8 <_ZN6SerialC1Ev>:
    4fe8:	83 e3       	ldi	r24, 0x33	; 51
    4fea:	89 b9       	out	0x09, r24	; 9
    4fec:	10 bc       	out	0x20, r1	; 32
    4fee:	86 e8       	ldi	r24, 0x86	; 134
    4ff0:	80 bd       	out	0x20, r24	; 32
    4ff2:	88 e1       	ldi	r24, 0x18	; 24
    4ff4:	8a b9       	out	0x0a, r24	; 10
    4ff6:	08 95       	ret

00004ff8 <_ZN6Serial5writeEc>:
    4ff8:	5d 9b       	sbis	0x0b, 5	; 11
    4ffa:	fe cf       	rjmp	.-4      	; 0x4ff8 <_ZN6Serial5writeEc>
    4ffc:	6c b9       	out	0x0c, r22	; 12
    4ffe:	08 95       	ret

00005000 <_ZN6Serial8writestrEPc>:
    5000:	0f 93       	push	r16
    5002:	1f 93       	push	r17
    5004:	cf 93       	push	r28
    5006:	df 93       	push	r29
    5008:	8c 01       	movw	r16, r24
    500a:	eb 01       	movw	r28, r22
    500c:	68 81       	ld	r22, Y
    500e:	66 23       	and	r22, r22
    5010:	39 f0       	breq	.+14     	; 0x5020 <_ZN6Serial8writestrEPc+0x20>
    5012:	21 96       	adiw	r28, 0x01	; 1
    5014:	c8 01       	movw	r24, r16
    5016:	0e 94 fc 27 	call	0x4ff8	; 0x4ff8 <_ZN6Serial5writeEc>
    501a:	69 91       	ld	r22, Y+
    501c:	61 11       	cpse	r22, r1
    501e:	fa cf       	rjmp	.-12     	; 0x5014 <_ZN6Serial8writestrEPc+0x14>
    5020:	df 91       	pop	r29
    5022:	cf 91       	pop	r28
    5024:	1f 91       	pop	r17
    5026:	0f 91       	pop	r16
    5028:	08 95       	ret

0000502a <_ZN6Serial10writestrlnEPc>:
    502a:	cf 93       	push	r28
    502c:	df 93       	push	r29
    502e:	ec 01       	movw	r28, r24
    5030:	0e 94 00 28 	call	0x5000	; 0x5000 <_ZN6Serial8writestrEPc>
    5034:	6d e0       	ldi	r22, 0x0D	; 13
    5036:	ce 01       	movw	r24, r28
    5038:	0e 94 fc 27 	call	0x4ff8	; 0x4ff8 <_ZN6Serial5writeEc>
    503c:	df 91       	pop	r29
    503e:	cf 91       	pop	r28
    5040:	08 95       	ret

00005042 <acos>:
    5042:	9f 93       	push	r25
    5044:	9f 77       	andi	r25, 0x7F	; 127
    5046:	a6 d1       	rcall	.+844    	; 0x5394 <__fp_arccos>
    5048:	0f 90       	pop	r0
    504a:	00 20       	and	r0, r0
    504c:	3a f4       	brpl	.+14     	; 0x505c <acos+0x1a>
    504e:	90 58       	subi	r25, 0x80	; 128
    5050:	a2 ea       	ldi	r26, 0xA2	; 162
    5052:	2a ed       	ldi	r18, 0xDA	; 218
    5054:	3f e0       	ldi	r19, 0x0F	; 15
    5056:	49 e4       	ldi	r20, 0x49	; 73
    5058:	50 e4       	ldi	r21, 0x40	; 64
    505a:	13 d0       	rcall	.+38     	; 0x5082 <__addsf3x>
    505c:	3e c2       	rjmp	.+1148   	; 0x54da <__fp_round>

0000505e <__subsf3>:
    505e:	50 58       	subi	r21, 0x80	; 128

00005060 <__addsf3>:
    5060:	bb 27       	eor	r27, r27
    5062:	aa 27       	eor	r26, r26
    5064:	0e d0       	rcall	.+28     	; 0x5082 <__addsf3x>
    5066:	39 c2       	rjmp	.+1138   	; 0x54da <__fp_round>
    5068:	02 d2       	rcall	.+1028   	; 0x546e <__fp_pscA>
    506a:	30 f0       	brcs	.+12     	; 0x5078 <__addsf3+0x18>
    506c:	07 d2       	rcall	.+1038   	; 0x547c <__fp_pscB>
    506e:	20 f0       	brcs	.+8      	; 0x5078 <__addsf3+0x18>
    5070:	31 f4       	brne	.+12     	; 0x507e <__addsf3+0x1e>
    5072:	9f 3f       	cpi	r25, 0xFF	; 255
    5074:	11 f4       	brne	.+4      	; 0x507a <__addsf3+0x1a>
    5076:	1e f4       	brtc	.+6      	; 0x507e <__addsf3+0x1e>
    5078:	d2 c1       	rjmp	.+932    	; 0x541e <__fp_nan>
    507a:	0e f4       	brtc	.+2      	; 0x507e <__addsf3+0x1e>
    507c:	e0 95       	com	r30
    507e:	e7 fb       	bst	r30, 7
    5080:	c8 c1       	rjmp	.+912    	; 0x5412 <__fp_inf>

00005082 <__addsf3x>:
    5082:	e9 2f       	mov	r30, r25
    5084:	4c d2       	rcall	.+1176   	; 0x551e <__fp_split3>
    5086:	80 f3       	brcs	.-32     	; 0x5068 <__addsf3+0x8>
    5088:	ba 17       	cp	r27, r26
    508a:	62 07       	cpc	r22, r18
    508c:	73 07       	cpc	r23, r19
    508e:	84 07       	cpc	r24, r20
    5090:	95 07       	cpc	r25, r21
    5092:	18 f0       	brcs	.+6      	; 0x509a <__addsf3x+0x18>
    5094:	71 f4       	brne	.+28     	; 0x50b2 <__addsf3x+0x30>
    5096:	9e f5       	brtc	.+102    	; 0x50fe <__addsf3x+0x7c>
    5098:	64 c2       	rjmp	.+1224   	; 0x5562 <__fp_zero>
    509a:	0e f4       	brtc	.+2      	; 0x509e <__addsf3x+0x1c>
    509c:	e0 95       	com	r30
    509e:	0b 2e       	mov	r0, r27
    50a0:	ba 2f       	mov	r27, r26
    50a2:	a0 2d       	mov	r26, r0
    50a4:	0b 01       	movw	r0, r22
    50a6:	b9 01       	movw	r22, r18
    50a8:	90 01       	movw	r18, r0
    50aa:	0c 01       	movw	r0, r24
    50ac:	ca 01       	movw	r24, r20
    50ae:	a0 01       	movw	r20, r0
    50b0:	11 24       	eor	r1, r1
    50b2:	ff 27       	eor	r31, r31
    50b4:	59 1b       	sub	r21, r25
    50b6:	99 f0       	breq	.+38     	; 0x50de <__addsf3x+0x5c>
    50b8:	59 3f       	cpi	r21, 0xF9	; 249
    50ba:	50 f4       	brcc	.+20     	; 0x50d0 <__addsf3x+0x4e>
    50bc:	50 3e       	cpi	r21, 0xE0	; 224
    50be:	68 f1       	brcs	.+90     	; 0x511a <__addsf3x+0x98>
    50c0:	1a 16       	cp	r1, r26
    50c2:	f0 40       	sbci	r31, 0x00	; 0
    50c4:	a2 2f       	mov	r26, r18
    50c6:	23 2f       	mov	r18, r19
    50c8:	34 2f       	mov	r19, r20
    50ca:	44 27       	eor	r20, r20
    50cc:	58 5f       	subi	r21, 0xF8	; 248
    50ce:	f3 cf       	rjmp	.-26     	; 0x50b6 <__addsf3x+0x34>
    50d0:	46 95       	lsr	r20
    50d2:	37 95       	ror	r19
    50d4:	27 95       	ror	r18
    50d6:	a7 95       	ror	r26
    50d8:	f0 40       	sbci	r31, 0x00	; 0
    50da:	53 95       	inc	r21
    50dc:	c9 f7       	brne	.-14     	; 0x50d0 <__addsf3x+0x4e>
    50de:	7e f4       	brtc	.+30     	; 0x50fe <__addsf3x+0x7c>
    50e0:	1f 16       	cp	r1, r31
    50e2:	ba 0b       	sbc	r27, r26
    50e4:	62 0b       	sbc	r22, r18
    50e6:	73 0b       	sbc	r23, r19
    50e8:	84 0b       	sbc	r24, r20
    50ea:	ba f0       	brmi	.+46     	; 0x511a <__addsf3x+0x98>
    50ec:	91 50       	subi	r25, 0x01	; 1
    50ee:	a1 f0       	breq	.+40     	; 0x5118 <__addsf3x+0x96>
    50f0:	ff 0f       	add	r31, r31
    50f2:	bb 1f       	adc	r27, r27
    50f4:	66 1f       	adc	r22, r22
    50f6:	77 1f       	adc	r23, r23
    50f8:	88 1f       	adc	r24, r24
    50fa:	c2 f7       	brpl	.-16     	; 0x50ec <__addsf3x+0x6a>
    50fc:	0e c0       	rjmp	.+28     	; 0x511a <__addsf3x+0x98>
    50fe:	ba 0f       	add	r27, r26
    5100:	62 1f       	adc	r22, r18
    5102:	73 1f       	adc	r23, r19
    5104:	84 1f       	adc	r24, r20
    5106:	48 f4       	brcc	.+18     	; 0x511a <__addsf3x+0x98>
    5108:	87 95       	ror	r24
    510a:	77 95       	ror	r23
    510c:	67 95       	ror	r22
    510e:	b7 95       	ror	r27
    5110:	f7 95       	ror	r31
    5112:	9e 3f       	cpi	r25, 0xFE	; 254
    5114:	08 f0       	brcs	.+2      	; 0x5118 <__addsf3x+0x96>
    5116:	b3 cf       	rjmp	.-154    	; 0x507e <__addsf3+0x1e>
    5118:	93 95       	inc	r25
    511a:	88 0f       	add	r24, r24
    511c:	08 f0       	brcs	.+2      	; 0x5120 <__addsf3x+0x9e>
    511e:	99 27       	eor	r25, r25
    5120:	ee 0f       	add	r30, r30
    5122:	97 95       	ror	r25
    5124:	87 95       	ror	r24
    5126:	08 95       	ret

00005128 <atan>:
    5128:	df 93       	push	r29
    512a:	dd 27       	eor	r29, r29
    512c:	b9 2f       	mov	r27, r25
    512e:	bf 77       	andi	r27, 0x7F	; 127
    5130:	40 e8       	ldi	r20, 0x80	; 128
    5132:	5f e3       	ldi	r21, 0x3F	; 63
    5134:	16 16       	cp	r1, r22
    5136:	17 06       	cpc	r1, r23
    5138:	48 07       	cpc	r20, r24
    513a:	5b 07       	cpc	r21, r27
    513c:	10 f4       	brcc	.+4      	; 0x5142 <atan+0x1a>
    513e:	d9 2f       	mov	r29, r25
    5140:	1b d2       	rcall	.+1078   	; 0x5578 <inverse>
    5142:	9f 93       	push	r25
    5144:	8f 93       	push	r24
    5146:	7f 93       	push	r23
    5148:	6f 93       	push	r22
    514a:	76 d3       	rcall	.+1772   	; 0x5838 <square>
    514c:	e8 e9       	ldi	r30, 0x98	; 152
    514e:	f0 e0       	ldi	r31, 0x00	; 0
    5150:	69 d1       	rcall	.+722    	; 0x5424 <__fp_powser>
    5152:	c3 d1       	rcall	.+902    	; 0x54da <__fp_round>
    5154:	2f 91       	pop	r18
    5156:	3f 91       	pop	r19
    5158:	4f 91       	pop	r20
    515a:	5f 91       	pop	r21
    515c:	ce d2       	rcall	.+1436   	; 0x56fa <__mulsf3x>
    515e:	dd 23       	and	r29, r29
    5160:	49 f0       	breq	.+18     	; 0x5174 <atan+0x4c>
    5162:	90 58       	subi	r25, 0x80	; 128
    5164:	a2 ea       	ldi	r26, 0xA2	; 162
    5166:	2a ed       	ldi	r18, 0xDA	; 218
    5168:	3f e0       	ldi	r19, 0x0F	; 15
    516a:	49 ec       	ldi	r20, 0xC9	; 201
    516c:	5f e3       	ldi	r21, 0x3F	; 63
    516e:	d0 78       	andi	r29, 0x80	; 128
    5170:	5d 27       	eor	r21, r29
    5172:	87 df       	rcall	.-242    	; 0x5082 <__addsf3x>
    5174:	df 91       	pop	r29
    5176:	b1 c1       	rjmp	.+866    	; 0x54da <__fp_round>

00005178 <__cmpsf2>:
    5178:	28 d1       	rcall	.+592    	; 0x53ca <__fp_cmp>
    517a:	08 f4       	brcc	.+2      	; 0x517e <__cmpsf2+0x6>
    517c:	81 e0       	ldi	r24, 0x01	; 1
    517e:	08 95       	ret

00005180 <cos>:
    5180:	85 d1       	rcall	.+778    	; 0x548c <__fp_rempio2>
    5182:	e3 95       	inc	r30
    5184:	bb c1       	rjmp	.+886    	; 0x54fc <__fp_sinus>

00005186 <__divsf3>:
    5186:	0c d0       	rcall	.+24     	; 0x51a0 <__divsf3x>
    5188:	a8 c1       	rjmp	.+848    	; 0x54da <__fp_round>
    518a:	78 d1       	rcall	.+752    	; 0x547c <__fp_pscB>
    518c:	40 f0       	brcs	.+16     	; 0x519e <__divsf3+0x18>
    518e:	6f d1       	rcall	.+734    	; 0x546e <__fp_pscA>
    5190:	30 f0       	brcs	.+12     	; 0x519e <__divsf3+0x18>
    5192:	21 f4       	brne	.+8      	; 0x519c <__divsf3+0x16>
    5194:	5f 3f       	cpi	r21, 0xFF	; 255
    5196:	19 f0       	breq	.+6      	; 0x519e <__divsf3+0x18>
    5198:	3c c1       	rjmp	.+632    	; 0x5412 <__fp_inf>
    519a:	51 11       	cpse	r21, r1
    519c:	e3 c1       	rjmp	.+966    	; 0x5564 <__fp_szero>
    519e:	3f c1       	rjmp	.+638    	; 0x541e <__fp_nan>

000051a0 <__divsf3x>:
    51a0:	be d1       	rcall	.+892    	; 0x551e <__fp_split3>
    51a2:	98 f3       	brcs	.-26     	; 0x518a <__divsf3+0x4>

000051a4 <__divsf3_pse>:
    51a4:	99 23       	and	r25, r25
    51a6:	c9 f3       	breq	.-14     	; 0x519a <__divsf3+0x14>
    51a8:	55 23       	and	r21, r21
    51aa:	b1 f3       	breq	.-20     	; 0x5198 <__divsf3+0x12>
    51ac:	95 1b       	sub	r25, r21
    51ae:	55 0b       	sbc	r21, r21
    51b0:	bb 27       	eor	r27, r27
    51b2:	aa 27       	eor	r26, r26
    51b4:	62 17       	cp	r22, r18
    51b6:	73 07       	cpc	r23, r19
    51b8:	84 07       	cpc	r24, r20
    51ba:	38 f0       	brcs	.+14     	; 0x51ca <__divsf3_pse+0x26>
    51bc:	9f 5f       	subi	r25, 0xFF	; 255
    51be:	5f 4f       	sbci	r21, 0xFF	; 255
    51c0:	22 0f       	add	r18, r18
    51c2:	33 1f       	adc	r19, r19
    51c4:	44 1f       	adc	r20, r20
    51c6:	aa 1f       	adc	r26, r26
    51c8:	a9 f3       	breq	.-22     	; 0x51b4 <__divsf3_pse+0x10>
    51ca:	33 d0       	rcall	.+102    	; 0x5232 <__divsf3_pse+0x8e>
    51cc:	0e 2e       	mov	r0, r30
    51ce:	3a f0       	brmi	.+14     	; 0x51de <__divsf3_pse+0x3a>
    51d0:	e0 e8       	ldi	r30, 0x80	; 128
    51d2:	30 d0       	rcall	.+96     	; 0x5234 <__divsf3_pse+0x90>
    51d4:	91 50       	subi	r25, 0x01	; 1
    51d6:	50 40       	sbci	r21, 0x00	; 0
    51d8:	e6 95       	lsr	r30
    51da:	00 1c       	adc	r0, r0
    51dc:	ca f7       	brpl	.-14     	; 0x51d0 <__divsf3_pse+0x2c>
    51de:	29 d0       	rcall	.+82     	; 0x5232 <__divsf3_pse+0x8e>
    51e0:	fe 2f       	mov	r31, r30
    51e2:	27 d0       	rcall	.+78     	; 0x5232 <__divsf3_pse+0x8e>
    51e4:	66 0f       	add	r22, r22
    51e6:	77 1f       	adc	r23, r23
    51e8:	88 1f       	adc	r24, r24
    51ea:	bb 1f       	adc	r27, r27
    51ec:	26 17       	cp	r18, r22
    51ee:	37 07       	cpc	r19, r23
    51f0:	48 07       	cpc	r20, r24
    51f2:	ab 07       	cpc	r26, r27
    51f4:	b0 e8       	ldi	r27, 0x80	; 128
    51f6:	09 f0       	breq	.+2      	; 0x51fa <__divsf3_pse+0x56>
    51f8:	bb 0b       	sbc	r27, r27
    51fa:	80 2d       	mov	r24, r0
    51fc:	bf 01       	movw	r22, r30
    51fe:	ff 27       	eor	r31, r31
    5200:	93 58       	subi	r25, 0x83	; 131
    5202:	5f 4f       	sbci	r21, 0xFF	; 255
    5204:	2a f0       	brmi	.+10     	; 0x5210 <__divsf3_pse+0x6c>
    5206:	9e 3f       	cpi	r25, 0xFE	; 254
    5208:	51 05       	cpc	r21, r1
    520a:	68 f0       	brcs	.+26     	; 0x5226 <__divsf3_pse+0x82>
    520c:	02 c1       	rjmp	.+516    	; 0x5412 <__fp_inf>
    520e:	aa c1       	rjmp	.+852    	; 0x5564 <__fp_szero>
    5210:	5f 3f       	cpi	r21, 0xFF	; 255
    5212:	ec f3       	brlt	.-6      	; 0x520e <__divsf3_pse+0x6a>
    5214:	98 3e       	cpi	r25, 0xE8	; 232
    5216:	dc f3       	brlt	.-10     	; 0x520e <__divsf3_pse+0x6a>
    5218:	86 95       	lsr	r24
    521a:	77 95       	ror	r23
    521c:	67 95       	ror	r22
    521e:	b7 95       	ror	r27
    5220:	f7 95       	ror	r31
    5222:	9f 5f       	subi	r25, 0xFF	; 255
    5224:	c9 f7       	brne	.-14     	; 0x5218 <__divsf3_pse+0x74>
    5226:	88 0f       	add	r24, r24
    5228:	91 1d       	adc	r25, r1
    522a:	96 95       	lsr	r25
    522c:	87 95       	ror	r24
    522e:	97 f9       	bld	r25, 7
    5230:	08 95       	ret
    5232:	e1 e0       	ldi	r30, 0x01	; 1
    5234:	66 0f       	add	r22, r22
    5236:	77 1f       	adc	r23, r23
    5238:	88 1f       	adc	r24, r24
    523a:	bb 1f       	adc	r27, r27
    523c:	62 17       	cp	r22, r18
    523e:	73 07       	cpc	r23, r19
    5240:	84 07       	cpc	r24, r20
    5242:	ba 07       	cpc	r27, r26
    5244:	20 f0       	brcs	.+8      	; 0x524e <__divsf3_pse+0xaa>
    5246:	62 1b       	sub	r22, r18
    5248:	73 0b       	sbc	r23, r19
    524a:	84 0b       	sbc	r24, r20
    524c:	ba 0b       	sbc	r27, r26
    524e:	ee 1f       	adc	r30, r30
    5250:	88 f7       	brcc	.-30     	; 0x5234 <__divsf3_pse+0x90>
    5252:	e0 95       	com	r30
    5254:	08 95       	ret
    5256:	19 f4       	brne	.+6      	; 0x525e <__divsf3_pse+0xba>
    5258:	0e f0       	brts	.+2      	; 0x525c <__divsf3_pse+0xb8>
    525a:	db c0       	rjmp	.+438    	; 0x5412 <__fp_inf>
    525c:	82 c1       	rjmp	.+772    	; 0x5562 <__fp_zero>
    525e:	df c0       	rjmp	.+446    	; 0x541e <__fp_nan>

00005260 <exp>:
    5260:	66 d1       	rcall	.+716    	; 0x552e <__fp_splitA>
    5262:	c8 f3       	brcs	.-14     	; 0x5256 <__divsf3_pse+0xb2>
    5264:	96 38       	cpi	r25, 0x86	; 134
    5266:	c0 f7       	brcc	.-16     	; 0x5258 <__divsf3_pse+0xb4>
    5268:	07 f8       	bld	r0, 7
    526a:	0f 92       	push	r0
    526c:	e8 94       	clt
    526e:	2b e3       	ldi	r18, 0x3B	; 59
    5270:	3a ea       	ldi	r19, 0xAA	; 170
    5272:	48 eb       	ldi	r20, 0xB8	; 184
    5274:	5f e7       	ldi	r21, 0x7F	; 127
    5276:	43 d2       	rcall	.+1158   	; 0x56fe <__mulsf3_pse>
    5278:	0f 92       	push	r0
    527a:	0f 92       	push	r0
    527c:	0f 92       	push	r0
    527e:	4d b7       	in	r20, 0x3d	; 61
    5280:	5e b7       	in	r21, 0x3e	; 62
    5282:	0f 92       	push	r0
    5284:	fb d1       	rcall	.+1014   	; 0x567c <modf>
    5286:	e5 ec       	ldi	r30, 0xC5	; 197
    5288:	f0 e0       	ldi	r31, 0x00	; 0
    528a:	cc d0       	rcall	.+408    	; 0x5424 <__fp_powser>
    528c:	4f 91       	pop	r20
    528e:	5f 91       	pop	r21
    5290:	ef 91       	pop	r30
    5292:	ff 91       	pop	r31
    5294:	e5 95       	asr	r30
    5296:	ee 1f       	adc	r30, r30
    5298:	ff 1f       	adc	r31, r31
    529a:	49 f0       	breq	.+18     	; 0x52ae <exp+0x4e>
    529c:	fe 57       	subi	r31, 0x7E	; 126
    529e:	e0 68       	ori	r30, 0x80	; 128
    52a0:	44 27       	eor	r20, r20
    52a2:	ee 0f       	add	r30, r30
    52a4:	44 1f       	adc	r20, r20
    52a6:	fa 95       	dec	r31
    52a8:	e1 f7       	brne	.-8      	; 0x52a2 <exp+0x42>
    52aa:	41 95       	neg	r20
    52ac:	55 0b       	sbc	r21, r21
    52ae:	6d d1       	rcall	.+730    	; 0x558a <ldexp>
    52b0:	0f 90       	pop	r0
    52b2:	07 fe       	sbrs	r0, 7
    52b4:	61 c1       	rjmp	.+706    	; 0x5578 <inverse>
    52b6:	08 95       	ret

000052b8 <__fixsfsi>:
    52b8:	04 d0       	rcall	.+8      	; 0x52c2 <__fixunssfsi>
    52ba:	68 94       	set
    52bc:	b1 11       	cpse	r27, r1
    52be:	52 c1       	rjmp	.+676    	; 0x5564 <__fp_szero>
    52c0:	08 95       	ret

000052c2 <__fixunssfsi>:
    52c2:	35 d1       	rcall	.+618    	; 0x552e <__fp_splitA>
    52c4:	88 f0       	brcs	.+34     	; 0x52e8 <__fixunssfsi+0x26>
    52c6:	9f 57       	subi	r25, 0x7F	; 127
    52c8:	90 f0       	brcs	.+36     	; 0x52ee <__fixunssfsi+0x2c>
    52ca:	b9 2f       	mov	r27, r25
    52cc:	99 27       	eor	r25, r25
    52ce:	b7 51       	subi	r27, 0x17	; 23
    52d0:	a0 f0       	brcs	.+40     	; 0x52fa <__fixunssfsi+0x38>
    52d2:	d1 f0       	breq	.+52     	; 0x5308 <__fixunssfsi+0x46>
    52d4:	66 0f       	add	r22, r22
    52d6:	77 1f       	adc	r23, r23
    52d8:	88 1f       	adc	r24, r24
    52da:	99 1f       	adc	r25, r25
    52dc:	1a f0       	brmi	.+6      	; 0x52e4 <__fixunssfsi+0x22>
    52de:	ba 95       	dec	r27
    52e0:	c9 f7       	brne	.-14     	; 0x52d4 <__fixunssfsi+0x12>
    52e2:	12 c0       	rjmp	.+36     	; 0x5308 <__fixunssfsi+0x46>
    52e4:	b1 30       	cpi	r27, 0x01	; 1
    52e6:	81 f0       	breq	.+32     	; 0x5308 <__fixunssfsi+0x46>
    52e8:	3c d1       	rcall	.+632    	; 0x5562 <__fp_zero>
    52ea:	b1 e0       	ldi	r27, 0x01	; 1
    52ec:	08 95       	ret
    52ee:	39 c1       	rjmp	.+626    	; 0x5562 <__fp_zero>
    52f0:	67 2f       	mov	r22, r23
    52f2:	78 2f       	mov	r23, r24
    52f4:	88 27       	eor	r24, r24
    52f6:	b8 5f       	subi	r27, 0xF8	; 248
    52f8:	39 f0       	breq	.+14     	; 0x5308 <__fixunssfsi+0x46>
    52fa:	b9 3f       	cpi	r27, 0xF9	; 249
    52fc:	cc f3       	brlt	.-14     	; 0x52f0 <__fixunssfsi+0x2e>
    52fe:	86 95       	lsr	r24
    5300:	77 95       	ror	r23
    5302:	67 95       	ror	r22
    5304:	b3 95       	inc	r27
    5306:	d9 f7       	brne	.-10     	; 0x52fe <__fixunssfsi+0x3c>
    5308:	3e f4       	brtc	.+14     	; 0x5318 <__fixunssfsi+0x56>
    530a:	90 95       	com	r25
    530c:	80 95       	com	r24
    530e:	70 95       	com	r23
    5310:	61 95       	neg	r22
    5312:	7f 4f       	sbci	r23, 0xFF	; 255
    5314:	8f 4f       	sbci	r24, 0xFF	; 255
    5316:	9f 4f       	sbci	r25, 0xFF	; 255
    5318:	08 95       	ret

0000531a <__floatunsisf>:
    531a:	e8 94       	clt
    531c:	09 c0       	rjmp	.+18     	; 0x5330 <__floatsisf+0x12>

0000531e <__floatsisf>:
    531e:	97 fb       	bst	r25, 7
    5320:	3e f4       	brtc	.+14     	; 0x5330 <__floatsisf+0x12>
    5322:	90 95       	com	r25
    5324:	80 95       	com	r24
    5326:	70 95       	com	r23
    5328:	61 95       	neg	r22
    532a:	7f 4f       	sbci	r23, 0xFF	; 255
    532c:	8f 4f       	sbci	r24, 0xFF	; 255
    532e:	9f 4f       	sbci	r25, 0xFF	; 255
    5330:	99 23       	and	r25, r25
    5332:	a9 f0       	breq	.+42     	; 0x535e <__floatsisf+0x40>
    5334:	f9 2f       	mov	r31, r25
    5336:	96 e9       	ldi	r25, 0x96	; 150
    5338:	bb 27       	eor	r27, r27
    533a:	93 95       	inc	r25
    533c:	f6 95       	lsr	r31
    533e:	87 95       	ror	r24
    5340:	77 95       	ror	r23
    5342:	67 95       	ror	r22
    5344:	b7 95       	ror	r27
    5346:	f1 11       	cpse	r31, r1
    5348:	f8 cf       	rjmp	.-16     	; 0x533a <__floatsisf+0x1c>
    534a:	fa f4       	brpl	.+62     	; 0x538a <__floatsisf+0x6c>
    534c:	bb 0f       	add	r27, r27
    534e:	11 f4       	brne	.+4      	; 0x5354 <__floatsisf+0x36>
    5350:	60 ff       	sbrs	r22, 0
    5352:	1b c0       	rjmp	.+54     	; 0x538a <__floatsisf+0x6c>
    5354:	6f 5f       	subi	r22, 0xFF	; 255
    5356:	7f 4f       	sbci	r23, 0xFF	; 255
    5358:	8f 4f       	sbci	r24, 0xFF	; 255
    535a:	9f 4f       	sbci	r25, 0xFF	; 255
    535c:	16 c0       	rjmp	.+44     	; 0x538a <__floatsisf+0x6c>
    535e:	88 23       	and	r24, r24
    5360:	11 f0       	breq	.+4      	; 0x5366 <__floatsisf+0x48>
    5362:	96 e9       	ldi	r25, 0x96	; 150
    5364:	11 c0       	rjmp	.+34     	; 0x5388 <__floatsisf+0x6a>
    5366:	77 23       	and	r23, r23
    5368:	21 f0       	breq	.+8      	; 0x5372 <__floatsisf+0x54>
    536a:	9e e8       	ldi	r25, 0x8E	; 142
    536c:	87 2f       	mov	r24, r23
    536e:	76 2f       	mov	r23, r22
    5370:	05 c0       	rjmp	.+10     	; 0x537c <__floatsisf+0x5e>
    5372:	66 23       	and	r22, r22
    5374:	71 f0       	breq	.+28     	; 0x5392 <__floatsisf+0x74>
    5376:	96 e8       	ldi	r25, 0x86	; 134
    5378:	86 2f       	mov	r24, r22
    537a:	70 e0       	ldi	r23, 0x00	; 0
    537c:	60 e0       	ldi	r22, 0x00	; 0
    537e:	2a f0       	brmi	.+10     	; 0x538a <__floatsisf+0x6c>
    5380:	9a 95       	dec	r25
    5382:	66 0f       	add	r22, r22
    5384:	77 1f       	adc	r23, r23
    5386:	88 1f       	adc	r24, r24
    5388:	da f7       	brpl	.-10     	; 0x5380 <__floatsisf+0x62>
    538a:	88 0f       	add	r24, r24
    538c:	96 95       	lsr	r25
    538e:	87 95       	ror	r24
    5390:	97 f9       	bld	r25, 7
    5392:	08 95       	ret

00005394 <__fp_arccos>:
    5394:	df 93       	push	r29
    5396:	cf 93       	push	r28
    5398:	1f 93       	push	r17
    539a:	0f 93       	push	r16
    539c:	8b 01       	movw	r16, r22
    539e:	ec 01       	movw	r28, r24
    53a0:	ed ee       	ldi	r30, 0xED	; 237
    53a2:	f0 e0       	ldi	r31, 0x00	; 0
    53a4:	3f d0       	rcall	.+126    	; 0x5424 <__fp_powser>
    53a6:	99 d0       	rcall	.+306    	; 0x54da <__fp_round>
    53a8:	98 01       	movw	r18, r16
    53aa:	ae 01       	movw	r20, r28
    53ac:	8b 01       	movw	r16, r22
    53ae:	ec 01       	movw	r28, r24
    53b0:	60 e0       	ldi	r22, 0x00	; 0
    53b2:	70 e0       	ldi	r23, 0x00	; 0
    53b4:	80 e8       	ldi	r24, 0x80	; 128
    53b6:	9f e3       	ldi	r25, 0x3F	; 63
    53b8:	52 de       	rcall	.-860    	; 0x505e <__subsf3>
    53ba:	00 d2       	rcall	.+1024   	; 0x57bc <sqrt>
    53bc:	98 01       	movw	r18, r16
    53be:	ae 01       	movw	r20, r28
    53c0:	0f 91       	pop	r16
    53c2:	1f 91       	pop	r17
    53c4:	cf 91       	pop	r28
    53c6:	df 91       	pop	r29
    53c8:	98 c1       	rjmp	.+816    	; 0x56fa <__mulsf3x>

000053ca <__fp_cmp>:
    53ca:	99 0f       	add	r25, r25
    53cc:	00 08       	sbc	r0, r0
    53ce:	55 0f       	add	r21, r21
    53d0:	aa 0b       	sbc	r26, r26
    53d2:	e0 e8       	ldi	r30, 0x80	; 128
    53d4:	fe ef       	ldi	r31, 0xFE	; 254
    53d6:	16 16       	cp	r1, r22
    53d8:	17 06       	cpc	r1, r23
    53da:	e8 07       	cpc	r30, r24
    53dc:	f9 07       	cpc	r31, r25
    53de:	c0 f0       	brcs	.+48     	; 0x5410 <__fp_cmp+0x46>
    53e0:	12 16       	cp	r1, r18
    53e2:	13 06       	cpc	r1, r19
    53e4:	e4 07       	cpc	r30, r20
    53e6:	f5 07       	cpc	r31, r21
    53e8:	98 f0       	brcs	.+38     	; 0x5410 <__fp_cmp+0x46>
    53ea:	62 1b       	sub	r22, r18
    53ec:	73 0b       	sbc	r23, r19
    53ee:	84 0b       	sbc	r24, r20
    53f0:	95 0b       	sbc	r25, r21
    53f2:	39 f4       	brne	.+14     	; 0x5402 <__fp_cmp+0x38>
    53f4:	0a 26       	eor	r0, r26
    53f6:	61 f0       	breq	.+24     	; 0x5410 <__fp_cmp+0x46>
    53f8:	23 2b       	or	r18, r19
    53fa:	24 2b       	or	r18, r20
    53fc:	25 2b       	or	r18, r21
    53fe:	21 f4       	brne	.+8      	; 0x5408 <__fp_cmp+0x3e>
    5400:	08 95       	ret
    5402:	0a 26       	eor	r0, r26
    5404:	09 f4       	brne	.+2      	; 0x5408 <__fp_cmp+0x3e>
    5406:	a1 40       	sbci	r26, 0x01	; 1
    5408:	a6 95       	lsr	r26
    540a:	8f ef       	ldi	r24, 0xFF	; 255
    540c:	81 1d       	adc	r24, r1
    540e:	81 1d       	adc	r24, r1
    5410:	08 95       	ret

00005412 <__fp_inf>:
    5412:	97 f9       	bld	r25, 7
    5414:	9f 67       	ori	r25, 0x7F	; 127
    5416:	80 e8       	ldi	r24, 0x80	; 128
    5418:	70 e0       	ldi	r23, 0x00	; 0
    541a:	60 e0       	ldi	r22, 0x00	; 0
    541c:	08 95       	ret

0000541e <__fp_nan>:
    541e:	9f ef       	ldi	r25, 0xFF	; 255
    5420:	80 ec       	ldi	r24, 0xC0	; 192
    5422:	08 95       	ret

00005424 <__fp_powser>:
    5424:	df 93       	push	r29
    5426:	cf 93       	push	r28
    5428:	1f 93       	push	r17
    542a:	0f 93       	push	r16
    542c:	ff 92       	push	r15
    542e:	ef 92       	push	r14
    5430:	df 92       	push	r13
    5432:	7b 01       	movw	r14, r22
    5434:	8c 01       	movw	r16, r24
    5436:	68 94       	set
    5438:	05 c0       	rjmp	.+10     	; 0x5444 <__fp_powser+0x20>
    543a:	da 2e       	mov	r13, r26
    543c:	ef 01       	movw	r28, r30
    543e:	5d d1       	rcall	.+698    	; 0x56fa <__mulsf3x>
    5440:	fe 01       	movw	r30, r28
    5442:	e8 94       	clt
    5444:	a5 91       	lpm	r26, Z+
    5446:	25 91       	lpm	r18, Z+
    5448:	35 91       	lpm	r19, Z+
    544a:	45 91       	lpm	r20, Z+
    544c:	55 91       	lpm	r21, Z+
    544e:	ae f3       	brts	.-22     	; 0x543a <__fp_powser+0x16>
    5450:	ef 01       	movw	r28, r30
    5452:	17 de       	rcall	.-978    	; 0x5082 <__addsf3x>
    5454:	fe 01       	movw	r30, r28
    5456:	97 01       	movw	r18, r14
    5458:	a8 01       	movw	r20, r16
    545a:	da 94       	dec	r13
    545c:	79 f7       	brne	.-34     	; 0x543c <__fp_powser+0x18>
    545e:	df 90       	pop	r13
    5460:	ef 90       	pop	r14
    5462:	ff 90       	pop	r15
    5464:	0f 91       	pop	r16
    5466:	1f 91       	pop	r17
    5468:	cf 91       	pop	r28
    546a:	df 91       	pop	r29
    546c:	08 95       	ret

0000546e <__fp_pscA>:
    546e:	00 24       	eor	r0, r0
    5470:	0a 94       	dec	r0
    5472:	16 16       	cp	r1, r22
    5474:	17 06       	cpc	r1, r23
    5476:	18 06       	cpc	r1, r24
    5478:	09 06       	cpc	r0, r25
    547a:	08 95       	ret

0000547c <__fp_pscB>:
    547c:	00 24       	eor	r0, r0
    547e:	0a 94       	dec	r0
    5480:	12 16       	cp	r1, r18
    5482:	13 06       	cpc	r1, r19
    5484:	14 06       	cpc	r1, r20
    5486:	05 06       	cpc	r0, r21
    5488:	08 95       	ret
    548a:	c9 cf       	rjmp	.-110    	; 0x541e <__fp_nan>

0000548c <__fp_rempio2>:
    548c:	50 d0       	rcall	.+160    	; 0x552e <__fp_splitA>
    548e:	e8 f3       	brcs	.-6      	; 0x548a <__fp_pscB+0xe>
    5490:	e8 94       	clt
    5492:	e0 e0       	ldi	r30, 0x00	; 0
    5494:	bb 27       	eor	r27, r27
    5496:	9f 57       	subi	r25, 0x7F	; 127
    5498:	f0 f0       	brcs	.+60     	; 0x54d6 <__fp_rempio2+0x4a>
    549a:	2a ed       	ldi	r18, 0xDA	; 218
    549c:	3f e0       	ldi	r19, 0x0F	; 15
    549e:	49 ec       	ldi	r20, 0xC9	; 201
    54a0:	06 c0       	rjmp	.+12     	; 0x54ae <__fp_rempio2+0x22>
    54a2:	ee 0f       	add	r30, r30
    54a4:	bb 0f       	add	r27, r27
    54a6:	66 1f       	adc	r22, r22
    54a8:	77 1f       	adc	r23, r23
    54aa:	88 1f       	adc	r24, r24
    54ac:	28 f0       	brcs	.+10     	; 0x54b8 <__fp_rempio2+0x2c>
    54ae:	b2 3a       	cpi	r27, 0xA2	; 162
    54b0:	62 07       	cpc	r22, r18
    54b2:	73 07       	cpc	r23, r19
    54b4:	84 07       	cpc	r24, r20
    54b6:	28 f0       	brcs	.+10     	; 0x54c2 <__fp_rempio2+0x36>
    54b8:	b2 5a       	subi	r27, 0xA2	; 162
    54ba:	62 0b       	sbc	r22, r18
    54bc:	73 0b       	sbc	r23, r19
    54be:	84 0b       	sbc	r24, r20
    54c0:	e3 95       	inc	r30
    54c2:	9a 95       	dec	r25
    54c4:	72 f7       	brpl	.-36     	; 0x54a2 <__fp_rempio2+0x16>
    54c6:	80 38       	cpi	r24, 0x80	; 128
    54c8:	30 f4       	brcc	.+12     	; 0x54d6 <__fp_rempio2+0x4a>
    54ca:	9a 95       	dec	r25
    54cc:	bb 0f       	add	r27, r27
    54ce:	66 1f       	adc	r22, r22
    54d0:	77 1f       	adc	r23, r23
    54d2:	88 1f       	adc	r24, r24
    54d4:	d2 f7       	brpl	.-12     	; 0x54ca <__fp_rempio2+0x3e>
    54d6:	90 48       	sbci	r25, 0x80	; 128
    54d8:	b4 c1       	rjmp	.+872    	; 0x5842 <__fp_mpack_finite>

000054da <__fp_round>:
    54da:	09 2e       	mov	r0, r25
    54dc:	03 94       	inc	r0
    54de:	00 0c       	add	r0, r0
    54e0:	11 f4       	brne	.+4      	; 0x54e6 <__fp_round+0xc>
    54e2:	88 23       	and	r24, r24
    54e4:	52 f0       	brmi	.+20     	; 0x54fa <__fp_round+0x20>
    54e6:	bb 0f       	add	r27, r27
    54e8:	40 f4       	brcc	.+16     	; 0x54fa <__fp_round+0x20>
    54ea:	bf 2b       	or	r27, r31
    54ec:	11 f4       	brne	.+4      	; 0x54f2 <__fp_round+0x18>
    54ee:	60 ff       	sbrs	r22, 0
    54f0:	04 c0       	rjmp	.+8      	; 0x54fa <__fp_round+0x20>
    54f2:	6f 5f       	subi	r22, 0xFF	; 255
    54f4:	7f 4f       	sbci	r23, 0xFF	; 255
    54f6:	8f 4f       	sbci	r24, 0xFF	; 255
    54f8:	9f 4f       	sbci	r25, 0xFF	; 255
    54fa:	08 95       	ret

000054fc <__fp_sinus>:
    54fc:	ef 93       	push	r30
    54fe:	e0 ff       	sbrs	r30, 0
    5500:	06 c0       	rjmp	.+12     	; 0x550e <__fp_sinus+0x12>
    5502:	a2 ea       	ldi	r26, 0xA2	; 162
    5504:	2a ed       	ldi	r18, 0xDA	; 218
    5506:	3f e0       	ldi	r19, 0x0F	; 15
    5508:	49 ec       	ldi	r20, 0xC9	; 201
    550a:	5f eb       	ldi	r21, 0xBF	; 191
    550c:	ba dd       	rcall	.-1164   	; 0x5082 <__addsf3x>
    550e:	e5 df       	rcall	.-54     	; 0x54da <__fp_round>
    5510:	0f 90       	pop	r0
    5512:	03 94       	inc	r0
    5514:	01 fc       	sbrc	r0, 1
    5516:	90 58       	subi	r25, 0x80	; 128
    5518:	e5 e1       	ldi	r30, 0x15	; 21
    551a:	f1 e0       	ldi	r31, 0x01	; 1
    551c:	a5 c1       	rjmp	.+842    	; 0x5868 <__fp_powsodd>

0000551e <__fp_split3>:
    551e:	57 fd       	sbrc	r21, 7
    5520:	90 58       	subi	r25, 0x80	; 128
    5522:	44 0f       	add	r20, r20
    5524:	55 1f       	adc	r21, r21
    5526:	59 f0       	breq	.+22     	; 0x553e <__fp_splitA+0x10>
    5528:	5f 3f       	cpi	r21, 0xFF	; 255
    552a:	71 f0       	breq	.+28     	; 0x5548 <__fp_splitA+0x1a>
    552c:	47 95       	ror	r20

0000552e <__fp_splitA>:
    552e:	88 0f       	add	r24, r24
    5530:	97 fb       	bst	r25, 7
    5532:	99 1f       	adc	r25, r25
    5534:	61 f0       	breq	.+24     	; 0x554e <__fp_splitA+0x20>
    5536:	9f 3f       	cpi	r25, 0xFF	; 255
    5538:	79 f0       	breq	.+30     	; 0x5558 <__fp_splitA+0x2a>
    553a:	87 95       	ror	r24
    553c:	08 95       	ret
    553e:	12 16       	cp	r1, r18
    5540:	13 06       	cpc	r1, r19
    5542:	14 06       	cpc	r1, r20
    5544:	55 1f       	adc	r21, r21
    5546:	f2 cf       	rjmp	.-28     	; 0x552c <__fp_split3+0xe>
    5548:	46 95       	lsr	r20
    554a:	f1 df       	rcall	.-30     	; 0x552e <__fp_splitA>
    554c:	08 c0       	rjmp	.+16     	; 0x555e <__fp_splitA+0x30>
    554e:	16 16       	cp	r1, r22
    5550:	17 06       	cpc	r1, r23
    5552:	18 06       	cpc	r1, r24
    5554:	99 1f       	adc	r25, r25
    5556:	f1 cf       	rjmp	.-30     	; 0x553a <__fp_splitA+0xc>
    5558:	86 95       	lsr	r24
    555a:	71 05       	cpc	r23, r1
    555c:	61 05       	cpc	r22, r1
    555e:	08 94       	sec
    5560:	08 95       	ret

00005562 <__fp_zero>:
    5562:	e8 94       	clt

00005564 <__fp_szero>:
    5564:	bb 27       	eor	r27, r27
    5566:	66 27       	eor	r22, r22
    5568:	77 27       	eor	r23, r23
    556a:	cb 01       	movw	r24, r22
    556c:	97 f9       	bld	r25, 7
    556e:	08 95       	ret

00005570 <__gesf2>:
    5570:	2c df       	rcall	.-424    	; 0x53ca <__fp_cmp>
    5572:	08 f4       	brcc	.+2      	; 0x5576 <__gesf2+0x6>
    5574:	8f ef       	ldi	r24, 0xFF	; 255
    5576:	08 95       	ret

00005578 <inverse>:
    5578:	9b 01       	movw	r18, r22
    557a:	ac 01       	movw	r20, r24
    557c:	60 e0       	ldi	r22, 0x00	; 0
    557e:	70 e0       	ldi	r23, 0x00	; 0
    5580:	80 e8       	ldi	r24, 0x80	; 128
    5582:	9f e3       	ldi	r25, 0x3F	; 63
    5584:	00 ce       	rjmp	.-1024   	; 0x5186 <__divsf3>
    5586:	45 cf       	rjmp	.-374    	; 0x5412 <__fp_inf>
    5588:	5a c1       	rjmp	.+692    	; 0x583e <__fp_mpack>

0000558a <ldexp>:
    558a:	d1 df       	rcall	.-94     	; 0x552e <__fp_splitA>
    558c:	e8 f3       	brcs	.-6      	; 0x5588 <inverse+0x10>
    558e:	99 23       	and	r25, r25
    5590:	d9 f3       	breq	.-10     	; 0x5588 <inverse+0x10>
    5592:	94 0f       	add	r25, r20
    5594:	51 1d       	adc	r21, r1
    5596:	bb f3       	brvs	.-18     	; 0x5586 <inverse+0xe>
    5598:	91 50       	subi	r25, 0x01	; 1
    559a:	50 40       	sbci	r21, 0x00	; 0
    559c:	94 f0       	brlt	.+36     	; 0x55c2 <ldexp+0x38>
    559e:	59 f0       	breq	.+22     	; 0x55b6 <ldexp+0x2c>
    55a0:	88 23       	and	r24, r24
    55a2:	32 f0       	brmi	.+12     	; 0x55b0 <ldexp+0x26>
    55a4:	66 0f       	add	r22, r22
    55a6:	77 1f       	adc	r23, r23
    55a8:	88 1f       	adc	r24, r24
    55aa:	91 50       	subi	r25, 0x01	; 1
    55ac:	50 40       	sbci	r21, 0x00	; 0
    55ae:	c1 f7       	brne	.-16     	; 0x55a0 <ldexp+0x16>
    55b0:	9e 3f       	cpi	r25, 0xFE	; 254
    55b2:	51 05       	cpc	r21, r1
    55b4:	44 f7       	brge	.-48     	; 0x5586 <inverse+0xe>
    55b6:	88 0f       	add	r24, r24
    55b8:	91 1d       	adc	r25, r1
    55ba:	96 95       	lsr	r25
    55bc:	87 95       	ror	r24
    55be:	97 f9       	bld	r25, 7
    55c0:	08 95       	ret
    55c2:	5f 3f       	cpi	r21, 0xFF	; 255
    55c4:	ac f0       	brlt	.+42     	; 0x55f0 <ldexp+0x66>
    55c6:	98 3e       	cpi	r25, 0xE8	; 232
    55c8:	9c f0       	brlt	.+38     	; 0x55f0 <ldexp+0x66>
    55ca:	bb 27       	eor	r27, r27
    55cc:	86 95       	lsr	r24
    55ce:	77 95       	ror	r23
    55d0:	67 95       	ror	r22
    55d2:	b7 95       	ror	r27
    55d4:	08 f4       	brcc	.+2      	; 0x55d8 <ldexp+0x4e>
    55d6:	b1 60       	ori	r27, 0x01	; 1
    55d8:	93 95       	inc	r25
    55da:	c1 f7       	brne	.-16     	; 0x55cc <ldexp+0x42>
    55dc:	bb 0f       	add	r27, r27
    55de:	58 f7       	brcc	.-42     	; 0x55b6 <ldexp+0x2c>
    55e0:	11 f4       	brne	.+4      	; 0x55e6 <ldexp+0x5c>
    55e2:	60 ff       	sbrs	r22, 0
    55e4:	e8 cf       	rjmp	.-48     	; 0x55b6 <ldexp+0x2c>
    55e6:	6f 5f       	subi	r22, 0xFF	; 255
    55e8:	7f 4f       	sbci	r23, 0xFF	; 255
    55ea:	8f 4f       	sbci	r24, 0xFF	; 255
    55ec:	9f 4f       	sbci	r25, 0xFF	; 255
    55ee:	e3 cf       	rjmp	.-58     	; 0x55b6 <ldexp+0x2c>
    55f0:	b9 cf       	rjmp	.-142    	; 0x5564 <__fp_szero>
    55f2:	0e f0       	brts	.+2      	; 0x55f6 <ldexp+0x6c>
    55f4:	24 c1       	rjmp	.+584    	; 0x583e <__fp_mpack>
    55f6:	13 cf       	rjmp	.-474    	; 0x541e <__fp_nan>
    55f8:	68 94       	set
    55fa:	0b cf       	rjmp	.-490    	; 0x5412 <__fp_inf>

000055fc <log>:
    55fc:	98 df       	rcall	.-208    	; 0x552e <__fp_splitA>
    55fe:	c8 f3       	brcs	.-14     	; 0x55f2 <ldexp+0x68>
    5600:	99 23       	and	r25, r25
    5602:	d1 f3       	breq	.-12     	; 0x55f8 <ldexp+0x6e>
    5604:	c6 f3       	brts	.-16     	; 0x55f6 <ldexp+0x6c>
    5606:	df 93       	push	r29
    5608:	cf 93       	push	r28
    560a:	1f 93       	push	r17
    560c:	0f 93       	push	r16
    560e:	ff 92       	push	r15
    5610:	c9 2f       	mov	r28, r25
    5612:	dd 27       	eor	r29, r29
    5614:	88 23       	and	r24, r24
    5616:	2a f0       	brmi	.+10     	; 0x5622 <log+0x26>
    5618:	21 97       	sbiw	r28, 0x01	; 1
    561a:	66 0f       	add	r22, r22
    561c:	77 1f       	adc	r23, r23
    561e:	88 1f       	adc	r24, r24
    5620:	da f7       	brpl	.-10     	; 0x5618 <log+0x1c>
    5622:	20 e0       	ldi	r18, 0x00	; 0
    5624:	30 e0       	ldi	r19, 0x00	; 0
    5626:	40 e8       	ldi	r20, 0x80	; 128
    5628:	5f eb       	ldi	r21, 0xBF	; 191
    562a:	9f e3       	ldi	r25, 0x3F	; 63
    562c:	88 39       	cpi	r24, 0x98	; 152
    562e:	20 f0       	brcs	.+8      	; 0x5638 <log+0x3c>
    5630:	80 3e       	cpi	r24, 0xE0	; 224
    5632:	30 f0       	brcs	.+12     	; 0x5640 <log+0x44>
    5634:	21 96       	adiw	r28, 0x01	; 1
    5636:	8f 77       	andi	r24, 0x7F	; 127
    5638:	13 dd       	rcall	.-1498   	; 0x5060 <__addsf3>
    563a:	e3 e3       	ldi	r30, 0x33	; 51
    563c:	f1 e0       	ldi	r31, 0x01	; 1
    563e:	03 c0       	rjmp	.+6      	; 0x5646 <log+0x4a>
    5640:	0f dd       	rcall	.-1506   	; 0x5060 <__addsf3>
    5642:	e0 e6       	ldi	r30, 0x60	; 96
    5644:	f1 e0       	ldi	r31, 0x01	; 1
    5646:	ee de       	rcall	.-548    	; 0x5424 <__fp_powser>
    5648:	8b 01       	movw	r16, r22
    564a:	be 01       	movw	r22, r28
    564c:	ec 01       	movw	r28, r24
    564e:	fb 2e       	mov	r15, r27
    5650:	6f 57       	subi	r22, 0x7F	; 127
    5652:	71 09       	sbc	r23, r1
    5654:	75 95       	asr	r23
    5656:	77 1f       	adc	r23, r23
    5658:	88 0b       	sbc	r24, r24
    565a:	99 0b       	sbc	r25, r25
    565c:	60 de       	rcall	.-832    	; 0x531e <__floatsisf>
    565e:	28 e1       	ldi	r18, 0x18	; 24
    5660:	32 e7       	ldi	r19, 0x72	; 114
    5662:	41 e3       	ldi	r20, 0x31	; 49
    5664:	5f e3       	ldi	r21, 0x3F	; 63
    5666:	49 d0       	rcall	.+146    	; 0x56fa <__mulsf3x>
    5668:	af 2d       	mov	r26, r15
    566a:	98 01       	movw	r18, r16
    566c:	ae 01       	movw	r20, r28
    566e:	ff 90       	pop	r15
    5670:	0f 91       	pop	r16
    5672:	1f 91       	pop	r17
    5674:	cf 91       	pop	r28
    5676:	df 91       	pop	r29
    5678:	04 dd       	rcall	.-1528   	; 0x5082 <__addsf3x>
    567a:	2f cf       	rjmp	.-418    	; 0x54da <__fp_round>

0000567c <modf>:
    567c:	fa 01       	movw	r30, r20
    567e:	dc 01       	movw	r26, r24
    5680:	aa 0f       	add	r26, r26
    5682:	bb 1f       	adc	r27, r27
    5684:	9b 01       	movw	r18, r22
    5686:	ac 01       	movw	r20, r24
    5688:	bf 57       	subi	r27, 0x7F	; 127
    568a:	28 f4       	brcc	.+10     	; 0x5696 <modf+0x1a>
    568c:	22 27       	eor	r18, r18
    568e:	33 27       	eor	r19, r19
    5690:	44 27       	eor	r20, r20
    5692:	50 78       	andi	r21, 0x80	; 128
    5694:	1f c0       	rjmp	.+62     	; 0x56d4 <modf+0x58>
    5696:	b7 51       	subi	r27, 0x17	; 23
    5698:	88 f4       	brcc	.+34     	; 0x56bc <modf+0x40>
    569a:	ab 2f       	mov	r26, r27
    569c:	00 24       	eor	r0, r0
    569e:	46 95       	lsr	r20
    56a0:	37 95       	ror	r19
    56a2:	27 95       	ror	r18
    56a4:	01 1c       	adc	r0, r1
    56a6:	a3 95       	inc	r26
    56a8:	d2 f3       	brmi	.-12     	; 0x569e <modf+0x22>
    56aa:	00 20       	and	r0, r0
    56ac:	69 f0       	breq	.+26     	; 0x56c8 <modf+0x4c>
    56ae:	22 0f       	add	r18, r18
    56b0:	33 1f       	adc	r19, r19
    56b2:	44 1f       	adc	r20, r20
    56b4:	b3 95       	inc	r27
    56b6:	da f3       	brmi	.-10     	; 0x56ae <modf+0x32>
    56b8:	0d d0       	rcall	.+26     	; 0x56d4 <modf+0x58>
    56ba:	d1 cc       	rjmp	.-1630   	; 0x505e <__subsf3>
    56bc:	61 30       	cpi	r22, 0x01	; 1
    56be:	71 05       	cpc	r23, r1
    56c0:	a0 e8       	ldi	r26, 0x80	; 128
    56c2:	8a 07       	cpc	r24, r26
    56c4:	b9 46       	sbci	r27, 0x69	; 105
    56c6:	30 f4       	brcc	.+12     	; 0x56d4 <modf+0x58>
    56c8:	9b 01       	movw	r18, r22
    56ca:	ac 01       	movw	r20, r24
    56cc:	66 27       	eor	r22, r22
    56ce:	77 27       	eor	r23, r23
    56d0:	88 27       	eor	r24, r24
    56d2:	90 78       	andi	r25, 0x80	; 128
    56d4:	30 96       	adiw	r30, 0x00	; 0
    56d6:	21 f0       	breq	.+8      	; 0x56e0 <modf+0x64>
    56d8:	20 83       	st	Z, r18
    56da:	31 83       	std	Z+1, r19	; 0x01
    56dc:	42 83       	std	Z+2, r20	; 0x02
    56de:	53 83       	std	Z+3, r21	; 0x03
    56e0:	08 95       	ret

000056e2 <__mulsf3>:
    56e2:	0b d0       	rcall	.+22     	; 0x56fa <__mulsf3x>
    56e4:	fa ce       	rjmp	.-524    	; 0x54da <__fp_round>
    56e6:	c3 de       	rcall	.-634    	; 0x546e <__fp_pscA>
    56e8:	28 f0       	brcs	.+10     	; 0x56f4 <__mulsf3+0x12>
    56ea:	c8 de       	rcall	.-624    	; 0x547c <__fp_pscB>
    56ec:	18 f0       	brcs	.+6      	; 0x56f4 <__mulsf3+0x12>
    56ee:	95 23       	and	r25, r21
    56f0:	09 f0       	breq	.+2      	; 0x56f4 <__mulsf3+0x12>
    56f2:	8f ce       	rjmp	.-738    	; 0x5412 <__fp_inf>
    56f4:	94 ce       	rjmp	.-728    	; 0x541e <__fp_nan>
    56f6:	11 24       	eor	r1, r1
    56f8:	35 cf       	rjmp	.-406    	; 0x5564 <__fp_szero>

000056fa <__mulsf3x>:
    56fa:	11 df       	rcall	.-478    	; 0x551e <__fp_split3>
    56fc:	a0 f3       	brcs	.-24     	; 0x56e6 <__mulsf3+0x4>

000056fe <__mulsf3_pse>:
    56fe:	95 9f       	mul	r25, r21
    5700:	d1 f3       	breq	.-12     	; 0x56f6 <__mulsf3+0x14>
    5702:	95 0f       	add	r25, r21
    5704:	50 e0       	ldi	r21, 0x00	; 0
    5706:	55 1f       	adc	r21, r21
    5708:	62 9f       	mul	r22, r18
    570a:	f0 01       	movw	r30, r0
    570c:	72 9f       	mul	r23, r18
    570e:	bb 27       	eor	r27, r27
    5710:	f0 0d       	add	r31, r0
    5712:	b1 1d       	adc	r27, r1
    5714:	63 9f       	mul	r22, r19
    5716:	aa 27       	eor	r26, r26
    5718:	f0 0d       	add	r31, r0
    571a:	b1 1d       	adc	r27, r1
    571c:	aa 1f       	adc	r26, r26
    571e:	64 9f       	mul	r22, r20
    5720:	66 27       	eor	r22, r22
    5722:	b0 0d       	add	r27, r0
    5724:	a1 1d       	adc	r26, r1
    5726:	66 1f       	adc	r22, r22
    5728:	82 9f       	mul	r24, r18
    572a:	22 27       	eor	r18, r18
    572c:	b0 0d       	add	r27, r0
    572e:	a1 1d       	adc	r26, r1
    5730:	62 1f       	adc	r22, r18
    5732:	73 9f       	mul	r23, r19
    5734:	b0 0d       	add	r27, r0
    5736:	a1 1d       	adc	r26, r1
    5738:	62 1f       	adc	r22, r18
    573a:	83 9f       	mul	r24, r19
    573c:	a0 0d       	add	r26, r0
    573e:	61 1d       	adc	r22, r1
    5740:	22 1f       	adc	r18, r18
    5742:	74 9f       	mul	r23, r20
    5744:	33 27       	eor	r19, r19
    5746:	a0 0d       	add	r26, r0
    5748:	61 1d       	adc	r22, r1
    574a:	23 1f       	adc	r18, r19
    574c:	84 9f       	mul	r24, r20
    574e:	60 0d       	add	r22, r0
    5750:	21 1d       	adc	r18, r1
    5752:	82 2f       	mov	r24, r18
    5754:	76 2f       	mov	r23, r22
    5756:	6a 2f       	mov	r22, r26
    5758:	11 24       	eor	r1, r1
    575a:	9f 57       	subi	r25, 0x7F	; 127
    575c:	50 40       	sbci	r21, 0x00	; 0
    575e:	8a f0       	brmi	.+34     	; 0x5782 <__mulsf3_pse+0x84>
    5760:	e1 f0       	breq	.+56     	; 0x579a <__mulsf3_pse+0x9c>
    5762:	88 23       	and	r24, r24
    5764:	4a f0       	brmi	.+18     	; 0x5778 <__mulsf3_pse+0x7a>
    5766:	ee 0f       	add	r30, r30
    5768:	ff 1f       	adc	r31, r31
    576a:	bb 1f       	adc	r27, r27
    576c:	66 1f       	adc	r22, r22
    576e:	77 1f       	adc	r23, r23
    5770:	88 1f       	adc	r24, r24
    5772:	91 50       	subi	r25, 0x01	; 1
    5774:	50 40       	sbci	r21, 0x00	; 0
    5776:	a9 f7       	brne	.-22     	; 0x5762 <__mulsf3_pse+0x64>
    5778:	9e 3f       	cpi	r25, 0xFE	; 254
    577a:	51 05       	cpc	r21, r1
    577c:	70 f0       	brcs	.+28     	; 0x579a <__mulsf3_pse+0x9c>
    577e:	49 ce       	rjmp	.-878    	; 0x5412 <__fp_inf>
    5780:	f1 ce       	rjmp	.-542    	; 0x5564 <__fp_szero>
    5782:	5f 3f       	cpi	r21, 0xFF	; 255
    5784:	ec f3       	brlt	.-6      	; 0x5780 <__mulsf3_pse+0x82>
    5786:	98 3e       	cpi	r25, 0xE8	; 232
    5788:	dc f3       	brlt	.-10     	; 0x5780 <__mulsf3_pse+0x82>
    578a:	86 95       	lsr	r24
    578c:	77 95       	ror	r23
    578e:	67 95       	ror	r22
    5790:	b7 95       	ror	r27
    5792:	f7 95       	ror	r31
    5794:	e7 95       	ror	r30
    5796:	9f 5f       	subi	r25, 0xFF	; 255
    5798:	c1 f7       	brne	.-16     	; 0x578a <__mulsf3_pse+0x8c>
    579a:	fe 2b       	or	r31, r30
    579c:	88 0f       	add	r24, r24
    579e:	91 1d       	adc	r25, r1
    57a0:	96 95       	lsr	r25
    57a2:	87 95       	ror	r24
    57a4:	97 f9       	bld	r25, 7
    57a6:	08 95       	ret

000057a8 <sin>:
    57a8:	9f 93       	push	r25
    57aa:	70 de       	rcall	.-800    	; 0x548c <__fp_rempio2>
    57ac:	0f 90       	pop	r0
    57ae:	07 fc       	sbrc	r0, 7
    57b0:	ee 5f       	subi	r30, 0xFE	; 254
    57b2:	a4 ce       	rjmp	.-696    	; 0x54fc <__fp_sinus>
    57b4:	11 f4       	brne	.+4      	; 0x57ba <sin+0x12>
    57b6:	0e f4       	brtc	.+2      	; 0x57ba <sin+0x12>
    57b8:	32 ce       	rjmp	.-924    	; 0x541e <__fp_nan>
    57ba:	41 c0       	rjmp	.+130    	; 0x583e <__fp_mpack>

000057bc <sqrt>:
    57bc:	b8 de       	rcall	.-656    	; 0x552e <__fp_splitA>
    57be:	d0 f3       	brcs	.-12     	; 0x57b4 <sin+0xc>
    57c0:	99 23       	and	r25, r25
    57c2:	d9 f3       	breq	.-10     	; 0x57ba <sin+0x12>
    57c4:	ce f3       	brts	.-14     	; 0x57b8 <sin+0x10>
    57c6:	9f 57       	subi	r25, 0x7F	; 127
    57c8:	55 0b       	sbc	r21, r21
    57ca:	87 ff       	sbrs	r24, 7
    57cc:	46 d0       	rcall	.+140    	; 0x585a <__fp_norm2>
    57ce:	00 24       	eor	r0, r0
    57d0:	a0 e6       	ldi	r26, 0x60	; 96
    57d2:	40 ea       	ldi	r20, 0xA0	; 160
    57d4:	90 01       	movw	r18, r0
    57d6:	80 58       	subi	r24, 0x80	; 128
    57d8:	56 95       	lsr	r21
    57da:	97 95       	ror	r25
    57dc:	28 f4       	brcc	.+10     	; 0x57e8 <sqrt+0x2c>
    57de:	80 5c       	subi	r24, 0xC0	; 192
    57e0:	66 0f       	add	r22, r22
    57e2:	77 1f       	adc	r23, r23
    57e4:	88 1f       	adc	r24, r24
    57e6:	20 f0       	brcs	.+8      	; 0x57f0 <sqrt+0x34>
    57e8:	26 17       	cp	r18, r22
    57ea:	37 07       	cpc	r19, r23
    57ec:	48 07       	cpc	r20, r24
    57ee:	30 f4       	brcc	.+12     	; 0x57fc <sqrt+0x40>
    57f0:	62 1b       	sub	r22, r18
    57f2:	73 0b       	sbc	r23, r19
    57f4:	84 0b       	sbc	r24, r20
    57f6:	20 29       	or	r18, r0
    57f8:	31 29       	or	r19, r1
    57fa:	4a 2b       	or	r20, r26
    57fc:	a6 95       	lsr	r26
    57fe:	17 94       	ror	r1
    5800:	07 94       	ror	r0
    5802:	20 25       	eor	r18, r0
    5804:	31 25       	eor	r19, r1
    5806:	4a 27       	eor	r20, r26
    5808:	58 f7       	brcc	.-42     	; 0x57e0 <sqrt+0x24>
    580a:	66 0f       	add	r22, r22
    580c:	77 1f       	adc	r23, r23
    580e:	88 1f       	adc	r24, r24
    5810:	20 f0       	brcs	.+8      	; 0x581a <sqrt+0x5e>
    5812:	26 17       	cp	r18, r22
    5814:	37 07       	cpc	r19, r23
    5816:	48 07       	cpc	r20, r24
    5818:	30 f4       	brcc	.+12     	; 0x5826 <sqrt+0x6a>
    581a:	62 0b       	sbc	r22, r18
    581c:	73 0b       	sbc	r23, r19
    581e:	84 0b       	sbc	r24, r20
    5820:	20 0d       	add	r18, r0
    5822:	31 1d       	adc	r19, r1
    5824:	41 1d       	adc	r20, r1
    5826:	a0 95       	com	r26
    5828:	81 f7       	brne	.-32     	; 0x580a <sqrt+0x4e>
    582a:	b9 01       	movw	r22, r18
    582c:	84 2f       	mov	r24, r20
    582e:	91 58       	subi	r25, 0x81	; 129
    5830:	88 0f       	add	r24, r24
    5832:	96 95       	lsr	r25
    5834:	87 95       	ror	r24
    5836:	08 95       	ret

00005838 <square>:
    5838:	9b 01       	movw	r18, r22
    583a:	ac 01       	movw	r20, r24
    583c:	52 cf       	rjmp	.-348    	; 0x56e2 <__mulsf3>

0000583e <__fp_mpack>:
    583e:	9f 3f       	cpi	r25, 0xFF	; 255
    5840:	31 f0       	breq	.+12     	; 0x584e <__fp_mpack_finite+0xc>

00005842 <__fp_mpack_finite>:
    5842:	91 50       	subi	r25, 0x01	; 1
    5844:	20 f4       	brcc	.+8      	; 0x584e <__fp_mpack_finite+0xc>
    5846:	87 95       	ror	r24
    5848:	77 95       	ror	r23
    584a:	67 95       	ror	r22
    584c:	b7 95       	ror	r27
    584e:	88 0f       	add	r24, r24
    5850:	91 1d       	adc	r25, r1
    5852:	96 95       	lsr	r25
    5854:	87 95       	ror	r24
    5856:	97 f9       	bld	r25, 7
    5858:	08 95       	ret

0000585a <__fp_norm2>:
    585a:	91 50       	subi	r25, 0x01	; 1
    585c:	50 40       	sbci	r21, 0x00	; 0
    585e:	66 0f       	add	r22, r22
    5860:	77 1f       	adc	r23, r23
    5862:	88 1f       	adc	r24, r24
    5864:	d2 f7       	brpl	.-12     	; 0x585a <__fp_norm2>
    5866:	08 95       	ret

00005868 <__fp_powsodd>:
    5868:	9f 93       	push	r25
    586a:	8f 93       	push	r24
    586c:	7f 93       	push	r23
    586e:	6f 93       	push	r22
    5870:	ff 93       	push	r31
    5872:	ef 93       	push	r30
    5874:	9b 01       	movw	r18, r22
    5876:	ac 01       	movw	r20, r24
    5878:	34 df       	rcall	.-408    	; 0x56e2 <__mulsf3>
    587a:	ef 91       	pop	r30
    587c:	ff 91       	pop	r31
    587e:	d2 dd       	rcall	.-1116   	; 0x5424 <__fp_powser>
    5880:	2f 91       	pop	r18
    5882:	3f 91       	pop	r19
    5884:	4f 91       	pop	r20
    5886:	5f 91       	pop	r21
    5888:	2c cf       	rjmp	.-424    	; 0x56e2 <__mulsf3>

0000588a <__divmodhi4>:
    588a:	97 fb       	bst	r25, 7
    588c:	07 2e       	mov	r0, r23
    588e:	16 f4       	brtc	.+4      	; 0x5894 <__divmodhi4+0xa>
    5890:	00 94       	com	r0
    5892:	07 d0       	rcall	.+14     	; 0x58a2 <__divmodhi4_neg1>
    5894:	77 fd       	sbrc	r23, 7
    5896:	09 d0       	rcall	.+18     	; 0x58aa <__divmodhi4_neg2>
    5898:	0e 94 5f 2c 	call	0x58be	; 0x58be <__udivmodhi4>
    589c:	07 fc       	sbrc	r0, 7
    589e:	05 d0       	rcall	.+10     	; 0x58aa <__divmodhi4_neg2>
    58a0:	3e f4       	brtc	.+14     	; 0x58b0 <__divmodhi4_exit>

000058a2 <__divmodhi4_neg1>:
    58a2:	90 95       	com	r25
    58a4:	81 95       	neg	r24
    58a6:	9f 4f       	sbci	r25, 0xFF	; 255
    58a8:	08 95       	ret

000058aa <__divmodhi4_neg2>:
    58aa:	70 95       	com	r23
    58ac:	61 95       	neg	r22
    58ae:	7f 4f       	sbci	r23, 0xFF	; 255

000058b0 <__divmodhi4_exit>:
    58b0:	08 95       	ret

000058b2 <__tablejump2__>:
    58b2:	ee 0f       	add	r30, r30
    58b4:	ff 1f       	adc	r31, r31

000058b6 <__tablejump__>:
    58b6:	05 90       	lpm	r0, Z+
    58b8:	f4 91       	lpm	r31, Z
    58ba:	e0 2d       	mov	r30, r0
    58bc:	09 94       	ijmp

000058be <__udivmodhi4>:
    58be:	aa 1b       	sub	r26, r26
    58c0:	bb 1b       	sub	r27, r27
    58c2:	51 e1       	ldi	r21, 0x11	; 17
    58c4:	07 c0       	rjmp	.+14     	; 0x58d4 <__udivmodhi4_ep>

000058c6 <__udivmodhi4_loop>:
    58c6:	aa 1f       	adc	r26, r26
    58c8:	bb 1f       	adc	r27, r27
    58ca:	a6 17       	cp	r26, r22
    58cc:	b7 07       	cpc	r27, r23
    58ce:	10 f0       	brcs	.+4      	; 0x58d4 <__udivmodhi4_ep>
    58d0:	a6 1b       	sub	r26, r22
    58d2:	b7 0b       	sbc	r27, r23

000058d4 <__udivmodhi4_ep>:
    58d4:	88 1f       	adc	r24, r24
    58d6:	99 1f       	adc	r25, r25
    58d8:	5a 95       	dec	r21
    58da:	a9 f7       	brne	.-22     	; 0x58c6 <__udivmodhi4_loop>
    58dc:	80 95       	com	r24
    58de:	90 95       	com	r25
    58e0:	bc 01       	movw	r22, r24
    58e2:	cd 01       	movw	r24, r26
    58e4:	08 95       	ret

000058e6 <malloc>:
    58e6:	cf 93       	push	r28
    58e8:	df 93       	push	r29
    58ea:	82 30       	cpi	r24, 0x02	; 2
    58ec:	91 05       	cpc	r25, r1
    58ee:	10 f4       	brcc	.+4      	; 0x58f4 <malloc+0xe>
    58f0:	82 e0       	ldi	r24, 0x02	; 2
    58f2:	90 e0       	ldi	r25, 0x00	; 0
    58f4:	e0 91 0c 01 	lds	r30, 0x010C
    58f8:	f0 91 0d 01 	lds	r31, 0x010D
    58fc:	20 e0       	ldi	r18, 0x00	; 0
    58fe:	30 e0       	ldi	r19, 0x00	; 0
    5900:	a0 e0       	ldi	r26, 0x00	; 0
    5902:	b0 e0       	ldi	r27, 0x00	; 0
    5904:	30 97       	sbiw	r30, 0x00	; 0
    5906:	39 f1       	breq	.+78     	; 0x5956 <malloc+0x70>
    5908:	40 81       	ld	r20, Z
    590a:	51 81       	ldd	r21, Z+1	; 0x01
    590c:	48 17       	cp	r20, r24
    590e:	59 07       	cpc	r21, r25
    5910:	b8 f0       	brcs	.+46     	; 0x5940 <malloc+0x5a>
    5912:	48 17       	cp	r20, r24
    5914:	59 07       	cpc	r21, r25
    5916:	71 f4       	brne	.+28     	; 0x5934 <malloc+0x4e>
    5918:	82 81       	ldd	r24, Z+2	; 0x02
    591a:	93 81       	ldd	r25, Z+3	; 0x03
    591c:	10 97       	sbiw	r26, 0x00	; 0
    591e:	29 f0       	breq	.+10     	; 0x592a <malloc+0x44>
    5920:	13 96       	adiw	r26, 0x03	; 3
    5922:	9c 93       	st	X, r25
    5924:	8e 93       	st	-X, r24
    5926:	12 97       	sbiw	r26, 0x02	; 2
    5928:	2c c0       	rjmp	.+88     	; 0x5982 <malloc+0x9c>
    592a:	90 93 0d 01 	sts	0x010D, r25
    592e:	80 93 0c 01 	sts	0x010C, r24
    5932:	27 c0       	rjmp	.+78     	; 0x5982 <malloc+0x9c>
    5934:	21 15       	cp	r18, r1
    5936:	31 05       	cpc	r19, r1
    5938:	31 f0       	breq	.+12     	; 0x5946 <malloc+0x60>
    593a:	42 17       	cp	r20, r18
    593c:	53 07       	cpc	r21, r19
    593e:	18 f0       	brcs	.+6      	; 0x5946 <malloc+0x60>
    5940:	a9 01       	movw	r20, r18
    5942:	db 01       	movw	r26, r22
    5944:	01 c0       	rjmp	.+2      	; 0x5948 <malloc+0x62>
    5946:	ef 01       	movw	r28, r30
    5948:	9a 01       	movw	r18, r20
    594a:	bd 01       	movw	r22, r26
    594c:	df 01       	movw	r26, r30
    594e:	02 80       	ldd	r0, Z+2	; 0x02
    5950:	f3 81       	ldd	r31, Z+3	; 0x03
    5952:	e0 2d       	mov	r30, r0
    5954:	d7 cf       	rjmp	.-82     	; 0x5904 <malloc+0x1e>
    5956:	21 15       	cp	r18, r1
    5958:	31 05       	cpc	r19, r1
    595a:	f9 f0       	breq	.+62     	; 0x599a <malloc+0xb4>
    595c:	28 1b       	sub	r18, r24
    595e:	39 0b       	sbc	r19, r25
    5960:	24 30       	cpi	r18, 0x04	; 4
    5962:	31 05       	cpc	r19, r1
    5964:	80 f4       	brcc	.+32     	; 0x5986 <malloc+0xa0>
    5966:	8a 81       	ldd	r24, Y+2	; 0x02
    5968:	9b 81       	ldd	r25, Y+3	; 0x03
    596a:	61 15       	cp	r22, r1
    596c:	71 05       	cpc	r23, r1
    596e:	21 f0       	breq	.+8      	; 0x5978 <malloc+0x92>
    5970:	fb 01       	movw	r30, r22
    5972:	93 83       	std	Z+3, r25	; 0x03
    5974:	82 83       	std	Z+2, r24	; 0x02
    5976:	04 c0       	rjmp	.+8      	; 0x5980 <malloc+0x9a>
    5978:	90 93 0d 01 	sts	0x010D, r25
    597c:	80 93 0c 01 	sts	0x010C, r24
    5980:	fe 01       	movw	r30, r28
    5982:	32 96       	adiw	r30, 0x02	; 2
    5984:	44 c0       	rjmp	.+136    	; 0x5a0e <malloc+0x128>
    5986:	fe 01       	movw	r30, r28
    5988:	e2 0f       	add	r30, r18
    598a:	f3 1f       	adc	r31, r19
    598c:	81 93       	st	Z+, r24
    598e:	91 93       	st	Z+, r25
    5990:	22 50       	subi	r18, 0x02	; 2
    5992:	31 09       	sbc	r19, r1
    5994:	39 83       	std	Y+1, r19	; 0x01
    5996:	28 83       	st	Y, r18
    5998:	3a c0       	rjmp	.+116    	; 0x5a0e <malloc+0x128>
    599a:	20 91 0a 01 	lds	r18, 0x010A
    599e:	30 91 0b 01 	lds	r19, 0x010B
    59a2:	23 2b       	or	r18, r19
    59a4:	41 f4       	brne	.+16     	; 0x59b6 <malloc+0xd0>
    59a6:	20 91 62 00 	lds	r18, 0x0062
    59aa:	30 91 63 00 	lds	r19, 0x0063
    59ae:	30 93 0b 01 	sts	0x010B, r19
    59b2:	20 93 0a 01 	sts	0x010A, r18
    59b6:	20 91 60 00 	lds	r18, 0x0060
    59ba:	30 91 61 00 	lds	r19, 0x0061
    59be:	21 15       	cp	r18, r1
    59c0:	31 05       	cpc	r19, r1
    59c2:	41 f4       	brne	.+16     	; 0x59d4 <malloc+0xee>
    59c4:	2d b7       	in	r18, 0x3d	; 61
    59c6:	3e b7       	in	r19, 0x3e	; 62
    59c8:	40 91 64 00 	lds	r20, 0x0064
    59cc:	50 91 65 00 	lds	r21, 0x0065
    59d0:	24 1b       	sub	r18, r20
    59d2:	35 0b       	sbc	r19, r21
    59d4:	e0 91 0a 01 	lds	r30, 0x010A
    59d8:	f0 91 0b 01 	lds	r31, 0x010B
    59dc:	e2 17       	cp	r30, r18
    59de:	f3 07       	cpc	r31, r19
    59e0:	a0 f4       	brcc	.+40     	; 0x5a0a <malloc+0x124>
    59e2:	2e 1b       	sub	r18, r30
    59e4:	3f 0b       	sbc	r19, r31
    59e6:	28 17       	cp	r18, r24
    59e8:	39 07       	cpc	r19, r25
    59ea:	78 f0       	brcs	.+30     	; 0x5a0a <malloc+0x124>
    59ec:	ac 01       	movw	r20, r24
    59ee:	4e 5f       	subi	r20, 0xFE	; 254
    59f0:	5f 4f       	sbci	r21, 0xFF	; 255
    59f2:	24 17       	cp	r18, r20
    59f4:	35 07       	cpc	r19, r21
    59f6:	48 f0       	brcs	.+18     	; 0x5a0a <malloc+0x124>
    59f8:	4e 0f       	add	r20, r30
    59fa:	5f 1f       	adc	r21, r31
    59fc:	50 93 0b 01 	sts	0x010B, r21
    5a00:	40 93 0a 01 	sts	0x010A, r20
    5a04:	81 93       	st	Z+, r24
    5a06:	91 93       	st	Z+, r25
    5a08:	02 c0       	rjmp	.+4      	; 0x5a0e <malloc+0x128>
    5a0a:	e0 e0       	ldi	r30, 0x00	; 0
    5a0c:	f0 e0       	ldi	r31, 0x00	; 0
    5a0e:	cf 01       	movw	r24, r30
    5a10:	df 91       	pop	r29
    5a12:	cf 91       	pop	r28
    5a14:	08 95       	ret

00005a16 <free>:
    5a16:	cf 93       	push	r28
    5a18:	df 93       	push	r29
    5a1a:	00 97       	sbiw	r24, 0x00	; 0
    5a1c:	09 f4       	brne	.+2      	; 0x5a20 <free+0xa>
    5a1e:	87 c0       	rjmp	.+270    	; 0x5b2e <free+0x118>
    5a20:	fc 01       	movw	r30, r24
    5a22:	32 97       	sbiw	r30, 0x02	; 2
    5a24:	13 82       	std	Z+3, r1	; 0x03
    5a26:	12 82       	std	Z+2, r1	; 0x02
    5a28:	c0 91 0c 01 	lds	r28, 0x010C
    5a2c:	d0 91 0d 01 	lds	r29, 0x010D
    5a30:	20 97       	sbiw	r28, 0x00	; 0
    5a32:	81 f4       	brne	.+32     	; 0x5a54 <free+0x3e>
    5a34:	20 81       	ld	r18, Z
    5a36:	31 81       	ldd	r19, Z+1	; 0x01
    5a38:	28 0f       	add	r18, r24
    5a3a:	39 1f       	adc	r19, r25
    5a3c:	80 91 0a 01 	lds	r24, 0x010A
    5a40:	90 91 0b 01 	lds	r25, 0x010B
    5a44:	82 17       	cp	r24, r18
    5a46:	93 07       	cpc	r25, r19
    5a48:	79 f5       	brne	.+94     	; 0x5aa8 <free+0x92>
    5a4a:	f0 93 0b 01 	sts	0x010B, r31
    5a4e:	e0 93 0a 01 	sts	0x010A, r30
    5a52:	6d c0       	rjmp	.+218    	; 0x5b2e <free+0x118>
    5a54:	de 01       	movw	r26, r28
    5a56:	20 e0       	ldi	r18, 0x00	; 0
    5a58:	30 e0       	ldi	r19, 0x00	; 0
    5a5a:	ae 17       	cp	r26, r30
    5a5c:	bf 07       	cpc	r27, r31
    5a5e:	50 f4       	brcc	.+20     	; 0x5a74 <free+0x5e>
    5a60:	12 96       	adiw	r26, 0x02	; 2
    5a62:	4d 91       	ld	r20, X+
    5a64:	5c 91       	ld	r21, X
    5a66:	13 97       	sbiw	r26, 0x03	; 3
    5a68:	9d 01       	movw	r18, r26
    5a6a:	41 15       	cp	r20, r1
    5a6c:	51 05       	cpc	r21, r1
    5a6e:	09 f1       	breq	.+66     	; 0x5ab2 <free+0x9c>
    5a70:	da 01       	movw	r26, r20
    5a72:	f3 cf       	rjmp	.-26     	; 0x5a5a <free+0x44>
    5a74:	b3 83       	std	Z+3, r27	; 0x03
    5a76:	a2 83       	std	Z+2, r26	; 0x02
    5a78:	40 81       	ld	r20, Z
    5a7a:	51 81       	ldd	r21, Z+1	; 0x01
    5a7c:	84 0f       	add	r24, r20
    5a7e:	95 1f       	adc	r25, r21
    5a80:	8a 17       	cp	r24, r26
    5a82:	9b 07       	cpc	r25, r27
    5a84:	71 f4       	brne	.+28     	; 0x5aa2 <free+0x8c>
    5a86:	8d 91       	ld	r24, X+
    5a88:	9c 91       	ld	r25, X
    5a8a:	11 97       	sbiw	r26, 0x01	; 1
    5a8c:	84 0f       	add	r24, r20
    5a8e:	95 1f       	adc	r25, r21
    5a90:	02 96       	adiw	r24, 0x02	; 2
    5a92:	91 83       	std	Z+1, r25	; 0x01
    5a94:	80 83       	st	Z, r24
    5a96:	12 96       	adiw	r26, 0x02	; 2
    5a98:	8d 91       	ld	r24, X+
    5a9a:	9c 91       	ld	r25, X
    5a9c:	13 97       	sbiw	r26, 0x03	; 3
    5a9e:	93 83       	std	Z+3, r25	; 0x03
    5aa0:	82 83       	std	Z+2, r24	; 0x02
    5aa2:	21 15       	cp	r18, r1
    5aa4:	31 05       	cpc	r19, r1
    5aa6:	29 f4       	brne	.+10     	; 0x5ab2 <free+0x9c>
    5aa8:	f0 93 0d 01 	sts	0x010D, r31
    5aac:	e0 93 0c 01 	sts	0x010C, r30
    5ab0:	3e c0       	rjmp	.+124    	; 0x5b2e <free+0x118>
    5ab2:	d9 01       	movw	r26, r18
    5ab4:	13 96       	adiw	r26, 0x03	; 3
    5ab6:	fc 93       	st	X, r31
    5ab8:	ee 93       	st	-X, r30
    5aba:	12 97       	sbiw	r26, 0x02	; 2
    5abc:	4d 91       	ld	r20, X+
    5abe:	5d 91       	ld	r21, X+
    5ac0:	a4 0f       	add	r26, r20
    5ac2:	b5 1f       	adc	r27, r21
    5ac4:	ea 17       	cp	r30, r26
    5ac6:	fb 07       	cpc	r31, r27
    5ac8:	79 f4       	brne	.+30     	; 0x5ae8 <free+0xd2>
    5aca:	80 81       	ld	r24, Z
    5acc:	91 81       	ldd	r25, Z+1	; 0x01
    5ace:	84 0f       	add	r24, r20
    5ad0:	95 1f       	adc	r25, r21
    5ad2:	02 96       	adiw	r24, 0x02	; 2
    5ad4:	d9 01       	movw	r26, r18
    5ad6:	11 96       	adiw	r26, 0x01	; 1
    5ad8:	9c 93       	st	X, r25
    5ada:	8e 93       	st	-X, r24
    5adc:	82 81       	ldd	r24, Z+2	; 0x02
    5ade:	93 81       	ldd	r25, Z+3	; 0x03
    5ae0:	13 96       	adiw	r26, 0x03	; 3
    5ae2:	9c 93       	st	X, r25
    5ae4:	8e 93       	st	-X, r24
    5ae6:	12 97       	sbiw	r26, 0x02	; 2
    5ae8:	e0 e0       	ldi	r30, 0x00	; 0
    5aea:	f0 e0       	ldi	r31, 0x00	; 0
    5aec:	8a 81       	ldd	r24, Y+2	; 0x02
    5aee:	9b 81       	ldd	r25, Y+3	; 0x03
    5af0:	00 97       	sbiw	r24, 0x00	; 0
    5af2:	19 f0       	breq	.+6      	; 0x5afa <free+0xe4>
    5af4:	fe 01       	movw	r30, r28
    5af6:	ec 01       	movw	r28, r24
    5af8:	f9 cf       	rjmp	.-14     	; 0x5aec <free+0xd6>
    5afa:	ce 01       	movw	r24, r28
    5afc:	02 96       	adiw	r24, 0x02	; 2
    5afe:	28 81       	ld	r18, Y
    5b00:	39 81       	ldd	r19, Y+1	; 0x01
    5b02:	82 0f       	add	r24, r18
    5b04:	93 1f       	adc	r25, r19
    5b06:	20 91 0a 01 	lds	r18, 0x010A
    5b0a:	30 91 0b 01 	lds	r19, 0x010B
    5b0e:	28 17       	cp	r18, r24
    5b10:	39 07       	cpc	r19, r25
    5b12:	69 f4       	brne	.+26     	; 0x5b2e <free+0x118>
    5b14:	30 97       	sbiw	r30, 0x00	; 0
    5b16:	29 f4       	brne	.+10     	; 0x5b22 <free+0x10c>
    5b18:	10 92 0d 01 	sts	0x010D, r1
    5b1c:	10 92 0c 01 	sts	0x010C, r1
    5b20:	02 c0       	rjmp	.+4      	; 0x5b26 <free+0x110>
    5b22:	13 82       	std	Z+3, r1	; 0x03
    5b24:	12 82       	std	Z+2, r1	; 0x02
    5b26:	d0 93 0b 01 	sts	0x010B, r29
    5b2a:	c0 93 0a 01 	sts	0x010A, r28
    5b2e:	df 91       	pop	r29
    5b30:	cf 91       	pop	r28
    5b32:	08 95       	ret

00005b34 <do_rand>:
    5b34:	8f 92       	push	r8
    5b36:	9f 92       	push	r9
    5b38:	af 92       	push	r10
    5b3a:	bf 92       	push	r11
    5b3c:	cf 92       	push	r12
    5b3e:	df 92       	push	r13
    5b40:	ef 92       	push	r14
    5b42:	ff 92       	push	r15
    5b44:	cf 93       	push	r28
    5b46:	df 93       	push	r29
    5b48:	ec 01       	movw	r28, r24
    5b4a:	68 81       	ld	r22, Y
    5b4c:	79 81       	ldd	r23, Y+1	; 0x01
    5b4e:	8a 81       	ldd	r24, Y+2	; 0x02
    5b50:	9b 81       	ldd	r25, Y+3	; 0x03
    5b52:	61 15       	cp	r22, r1
    5b54:	71 05       	cpc	r23, r1
    5b56:	81 05       	cpc	r24, r1
    5b58:	91 05       	cpc	r25, r1
    5b5a:	21 f4       	brne	.+8      	; 0x5b64 <do_rand+0x30>
    5b5c:	64 e2       	ldi	r22, 0x24	; 36
    5b5e:	79 ed       	ldi	r23, 0xD9	; 217
    5b60:	8b e5       	ldi	r24, 0x5B	; 91
    5b62:	97 e0       	ldi	r25, 0x07	; 7
    5b64:	2d e1       	ldi	r18, 0x1D	; 29
    5b66:	33 ef       	ldi	r19, 0xF3	; 243
    5b68:	41 e0       	ldi	r20, 0x01	; 1
    5b6a:	50 e0       	ldi	r21, 0x00	; 0
    5b6c:	0e 94 2b 32 	call	0x6456	; 0x6456 <__divmodsi4>
    5b70:	49 01       	movw	r8, r18
    5b72:	5a 01       	movw	r10, r20
    5b74:	9b 01       	movw	r18, r22
    5b76:	ac 01       	movw	r20, r24
    5b78:	a7 ea       	ldi	r26, 0xA7	; 167
    5b7a:	b1 e4       	ldi	r27, 0x41	; 65
    5b7c:	0e 94 4a 32 	call	0x6494	; 0x6494 <__muluhisi3>
    5b80:	6b 01       	movw	r12, r22
    5b82:	7c 01       	movw	r14, r24
    5b84:	ac ee       	ldi	r26, 0xEC	; 236
    5b86:	b4 ef       	ldi	r27, 0xF4	; 244
    5b88:	a5 01       	movw	r20, r10
    5b8a:	94 01       	movw	r18, r8
    5b8c:	0e 94 58 32 	call	0x64b0	; 0x64b0 <__mulohisi3>
    5b90:	c6 0e       	add	r12, r22
    5b92:	d7 1e       	adc	r13, r23
    5b94:	e8 1e       	adc	r14, r24
    5b96:	f9 1e       	adc	r15, r25
    5b98:	f7 fe       	sbrs	r15, 7
    5b9a:	06 c0       	rjmp	.+12     	; 0x5ba8 <do_rand+0x74>
    5b9c:	81 e0       	ldi	r24, 0x01	; 1
    5b9e:	c8 1a       	sub	r12, r24
    5ba0:	d1 08       	sbc	r13, r1
    5ba2:	e1 08       	sbc	r14, r1
    5ba4:	80 e8       	ldi	r24, 0x80	; 128
    5ba6:	f8 0a       	sbc	r15, r24
    5ba8:	c8 82       	st	Y, r12
    5baa:	d9 82       	std	Y+1, r13	; 0x01
    5bac:	ea 82       	std	Y+2, r14	; 0x02
    5bae:	fb 82       	std	Y+3, r15	; 0x03
    5bb0:	c6 01       	movw	r24, r12
    5bb2:	9f 77       	andi	r25, 0x7F	; 127
    5bb4:	df 91       	pop	r29
    5bb6:	cf 91       	pop	r28
    5bb8:	ff 90       	pop	r15
    5bba:	ef 90       	pop	r14
    5bbc:	df 90       	pop	r13
    5bbe:	cf 90       	pop	r12
    5bc0:	bf 90       	pop	r11
    5bc2:	af 90       	pop	r10
    5bc4:	9f 90       	pop	r9
    5bc6:	8f 90       	pop	r8
    5bc8:	08 95       	ret

00005bca <rand_r>:
    5bca:	0e 94 9a 2d 	call	0x5b34	; 0x5b34 <do_rand>
    5bce:	08 95       	ret

00005bd0 <rand>:
    5bd0:	86 e6       	ldi	r24, 0x66	; 102
    5bd2:	90 e0       	ldi	r25, 0x00	; 0
    5bd4:	0e 94 9a 2d 	call	0x5b34	; 0x5b34 <do_rand>
    5bd8:	08 95       	ret

00005bda <srand>:
    5bda:	a0 e0       	ldi	r26, 0x00	; 0
    5bdc:	b0 e0       	ldi	r27, 0x00	; 0
    5bde:	80 93 66 00 	sts	0x0066, r24
    5be2:	90 93 67 00 	sts	0x0067, r25
    5be6:	a0 93 68 00 	sts	0x0068, r26
    5bea:	b0 93 69 00 	sts	0x0069, r27
    5bee:	08 95       	ret

00005bf0 <strtol>:
    5bf0:	2f 92       	push	r2
    5bf2:	3f 92       	push	r3
    5bf4:	5f 92       	push	r5
    5bf6:	6f 92       	push	r6
    5bf8:	7f 92       	push	r7
    5bfa:	8f 92       	push	r8
    5bfc:	9f 92       	push	r9
    5bfe:	af 92       	push	r10
    5c00:	bf 92       	push	r11
    5c02:	cf 92       	push	r12
    5c04:	df 92       	push	r13
    5c06:	ef 92       	push	r14
    5c08:	ff 92       	push	r15
    5c0a:	0f 93       	push	r16
    5c0c:	1f 93       	push	r17
    5c0e:	cf 93       	push	r28
    5c10:	df 93       	push	r29
    5c12:	8b 01       	movw	r16, r22
    5c14:	ea 01       	movw	r28, r20
    5c16:	61 15       	cp	r22, r1
    5c18:	71 05       	cpc	r23, r1
    5c1a:	21 f0       	breq	.+8      	; 0x5c24 <strtol+0x34>
    5c1c:	db 01       	movw	r26, r22
    5c1e:	8c 93       	st	X, r24
    5c20:	11 96       	adiw	r26, 0x01	; 1
    5c22:	9c 93       	st	X, r25
    5c24:	20 97       	sbiw	r28, 0x00	; 0
    5c26:	39 f0       	breq	.+14     	; 0x5c36 <strtol+0x46>
    5c28:	9e 01       	movw	r18, r28
    5c2a:	22 50       	subi	r18, 0x02	; 2
    5c2c:	31 09       	sbc	r19, r1
    5c2e:	23 32       	cpi	r18, 0x23	; 35
    5c30:	31 05       	cpc	r19, r1
    5c32:	08 f0       	brcs	.+2      	; 0x5c36 <strtol+0x46>
    5c34:	fb c0       	rjmp	.+502    	; 0x5e2c <strtol+0x23c>
    5c36:	7c 01       	movw	r14, r24
    5c38:	67 01       	movw	r12, r14
    5c3a:	bf ef       	ldi	r27, 0xFF	; 255
    5c3c:	cb 1a       	sub	r12, r27
    5c3e:	db 0a       	sbc	r13, r27
    5c40:	56 01       	movw	r10, r12
    5c42:	f7 01       	movw	r30, r14
    5c44:	60 80       	ld	r6, Z
    5c46:	86 2d       	mov	r24, r6
    5c48:	90 e0       	ldi	r25, 0x00	; 0
    5c4a:	0e 94 2c 2f 	call	0x5e58	; 0x5e58 <isspace>
    5c4e:	89 2b       	or	r24, r25
    5c50:	11 f0       	breq	.+4      	; 0x5c56 <strtol+0x66>
    5c52:	76 01       	movw	r14, r12
    5c54:	f1 cf       	rjmp	.-30     	; 0x5c38 <strtol+0x48>
    5c56:	fd e2       	ldi	r31, 0x2D	; 45
    5c58:	6f 12       	cpse	r6, r31
    5c5a:	0a c0       	rjmp	.+20     	; 0x5c70 <strtol+0x80>
    5c5c:	57 01       	movw	r10, r14
    5c5e:	82 e0       	ldi	r24, 0x02	; 2
    5c60:	a8 0e       	add	r10, r24
    5c62:	b1 1c       	adc	r11, r1
    5c64:	d7 01       	movw	r26, r14
    5c66:	11 96       	adiw	r26, 0x01	; 1
    5c68:	6c 90       	ld	r6, X
    5c6a:	77 24       	eor	r7, r7
    5c6c:	73 94       	inc	r7
    5c6e:	0b c0       	rjmp	.+22     	; 0x5c86 <strtol+0x96>
    5c70:	bb e2       	ldi	r27, 0x2B	; 43
    5c72:	6b 12       	cpse	r6, r27
    5c74:	07 c0       	rjmp	.+14     	; 0x5c84 <strtol+0x94>
    5c76:	57 01       	movw	r10, r14
    5c78:	e2 e0       	ldi	r30, 0x02	; 2
    5c7a:	ae 0e       	add	r10, r30
    5c7c:	b1 1c       	adc	r11, r1
    5c7e:	d7 01       	movw	r26, r14
    5c80:	11 96       	adiw	r26, 0x01	; 1
    5c82:	6c 90       	ld	r6, X
    5c84:	71 2c       	mov	r7, r1
    5c86:	ce 01       	movw	r24, r28
    5c88:	8f 7e       	andi	r24, 0xEF	; 239
    5c8a:	89 2b       	or	r24, r25
    5c8c:	89 f4       	brne	.+34     	; 0x5cb0 <strtol+0xc0>
    5c8e:	b0 e3       	ldi	r27, 0x30	; 48
    5c90:	6b 12       	cpse	r6, r27
    5c92:	22 c0       	rjmp	.+68     	; 0x5cd8 <strtol+0xe8>
    5c94:	f5 01       	movw	r30, r10
    5c96:	80 81       	ld	r24, Z
    5c98:	8f 7d       	andi	r24, 0xDF	; 223
    5c9a:	88 35       	cpi	r24, 0x58	; 88
    5c9c:	41 f5       	brne	.+80     	; 0x5cee <strtol+0xfe>
    5c9e:	61 80       	ldd	r6, Z+1	; 0x01
    5ca0:	f2 e0       	ldi	r31, 0x02	; 2
    5ca2:	af 0e       	add	r10, r31
    5ca4:	b1 1c       	adc	r11, r1
    5ca6:	87 2d       	mov	r24, r7
    5ca8:	82 60       	ori	r24, 0x02	; 2
    5caa:	78 2e       	mov	r7, r24
    5cac:	c0 e1       	ldi	r28, 0x10	; 16
    5cae:	d0 e0       	ldi	r29, 0x00	; 0
    5cb0:	c8 30       	cpi	r28, 0x08	; 8
    5cb2:	d1 05       	cpc	r29, r1
    5cb4:	f1 f0       	breq	.+60     	; 0x5cf2 <strtol+0x102>
    5cb6:	4c f4       	brge	.+18     	; 0x5cca <strtol+0xda>
    5cb8:	c2 30       	cpi	r28, 0x02	; 2
    5cba:	d1 05       	cpc	r29, r1
    5cbc:	11 f5       	brne	.+68     	; 0x5d02 <strtol+0x112>
    5cbe:	c1 2c       	mov	r12, r1
    5cc0:	d1 2c       	mov	r13, r1
    5cc2:	e1 2c       	mov	r14, r1
    5cc4:	b0 e4       	ldi	r27, 0x40	; 64
    5cc6:	fb 2e       	mov	r15, r27
    5cc8:	2f c0       	rjmp	.+94     	; 0x5d28 <strtol+0x138>
    5cca:	ca 30       	cpi	r28, 0x0A	; 10
    5ccc:	d1 05       	cpc	r29, r1
    5cce:	31 f0       	breq	.+12     	; 0x5cdc <strtol+0xec>
    5cd0:	c0 31       	cpi	r28, 0x10	; 16
    5cd2:	d1 05       	cpc	r29, r1
    5cd4:	21 f1       	breq	.+72     	; 0x5d1e <strtol+0x12e>
    5cd6:	15 c0       	rjmp	.+42     	; 0x5d02 <strtol+0x112>
    5cd8:	20 97       	sbiw	r28, 0x00	; 0
    5cda:	51 f7       	brne	.-44     	; 0x5cb0 <strtol+0xc0>
    5cdc:	ca e0       	ldi	r28, 0x0A	; 10
    5cde:	d0 e0       	ldi	r29, 0x00	; 0
    5ce0:	ac ec       	ldi	r26, 0xCC	; 204
    5ce2:	ca 2e       	mov	r12, r26
    5ce4:	dc 2c       	mov	r13, r12
    5ce6:	ec 2c       	mov	r14, r12
    5ce8:	ac e0       	ldi	r26, 0x0C	; 12
    5cea:	fa 2e       	mov	r15, r26
    5cec:	1d c0       	rjmp	.+58     	; 0x5d28 <strtol+0x138>
    5cee:	20 97       	sbiw	r28, 0x00	; 0
    5cf0:	f9 f6       	brne	.-66     	; 0x5cb0 <strtol+0xc0>
    5cf2:	c8 e0       	ldi	r28, 0x08	; 8
    5cf4:	d0 e0       	ldi	r29, 0x00	; 0
    5cf6:	c1 2c       	mov	r12, r1
    5cf8:	d1 2c       	mov	r13, r1
    5cfa:	e1 2c       	mov	r14, r1
    5cfc:	f0 e1       	ldi	r31, 0x10	; 16
    5cfe:	ff 2e       	mov	r15, r31
    5d00:	13 c0       	rjmp	.+38     	; 0x5d28 <strtol+0x138>
    5d02:	60 e0       	ldi	r22, 0x00	; 0
    5d04:	70 e0       	ldi	r23, 0x00	; 0
    5d06:	80 e0       	ldi	r24, 0x00	; 0
    5d08:	90 e8       	ldi	r25, 0x80	; 128
    5d0a:	9e 01       	movw	r18, r28
    5d0c:	44 27       	eor	r20, r20
    5d0e:	37 fd       	sbrc	r19, 7
    5d10:	40 95       	com	r20
    5d12:	54 2f       	mov	r21, r20
    5d14:	0e 94 09 32 	call	0x6412	; 0x6412 <__udivmodsi4>
    5d18:	69 01       	movw	r12, r18
    5d1a:	7a 01       	movw	r14, r20
    5d1c:	05 c0       	rjmp	.+10     	; 0x5d28 <strtol+0x138>
    5d1e:	c1 2c       	mov	r12, r1
    5d20:	d1 2c       	mov	r13, r1
    5d22:	e1 2c       	mov	r14, r1
    5d24:	e8 e0       	ldi	r30, 0x08	; 8
    5d26:	fe 2e       	mov	r15, r30
    5d28:	f5 01       	movw	r30, r10
    5d2a:	60 e0       	ldi	r22, 0x00	; 0
    5d2c:	20 e0       	ldi	r18, 0x00	; 0
    5d2e:	30 e0       	ldi	r19, 0x00	; 0
    5d30:	a9 01       	movw	r20, r18
    5d32:	4e 01       	movw	r8, r28
    5d34:	aa 24       	eor	r10, r10
    5d36:	97 fc       	sbrc	r9, 7
    5d38:	a0 94       	com	r10
    5d3a:	ba 2c       	mov	r11, r10
    5d3c:	1f 01       	movw	r2, r30
    5d3e:	70 ed       	ldi	r23, 0xD0	; 208
    5d40:	57 2e       	mov	r5, r23
    5d42:	56 0c       	add	r5, r6
    5d44:	a9 e0       	ldi	r26, 0x09	; 9
    5d46:	a5 15       	cp	r26, r5
    5d48:	70 f4       	brcc	.+28     	; 0x5d66 <strtol+0x176>
    5d4a:	8f eb       	ldi	r24, 0xBF	; 191
    5d4c:	86 0d       	add	r24, r6
    5d4e:	8a 31       	cpi	r24, 0x1A	; 26
    5d50:	18 f4       	brcc	.+6      	; 0x5d58 <strtol+0x168>
    5d52:	99 ec       	ldi	r25, 0xC9	; 201
    5d54:	59 2e       	mov	r5, r25
    5d56:	06 c0       	rjmp	.+12     	; 0x5d64 <strtol+0x174>
    5d58:	8f e9       	ldi	r24, 0x9F	; 159
    5d5a:	86 0d       	add	r24, r6
    5d5c:	8a 31       	cpi	r24, 0x1A	; 26
    5d5e:	30 f5       	brcc	.+76     	; 0x5dac <strtol+0x1bc>
    5d60:	89 ea       	ldi	r24, 0xA9	; 169
    5d62:	58 2e       	mov	r5, r24
    5d64:	56 0c       	add	r5, r6
    5d66:	85 2d       	mov	r24, r5
    5d68:	90 e0       	ldi	r25, 0x00	; 0
    5d6a:	8c 17       	cp	r24, r28
    5d6c:	9d 07       	cpc	r25, r29
    5d6e:	f4 f4       	brge	.+60     	; 0x5dac <strtol+0x1bc>
    5d70:	67 fd       	sbrc	r22, 7
    5d72:	18 c0       	rjmp	.+48     	; 0x5da4 <strtol+0x1b4>
    5d74:	c2 16       	cp	r12, r18
    5d76:	d3 06       	cpc	r13, r19
    5d78:	e4 06       	cpc	r14, r20
    5d7a:	f5 06       	cpc	r15, r21
    5d7c:	80 f0       	brcs	.+32     	; 0x5d9e <strtol+0x1ae>
    5d7e:	c5 01       	movw	r24, r10
    5d80:	b4 01       	movw	r22, r8
    5d82:	0e 94 f9 31 	call	0x63f2	; 0x63f2 <__mulsi3>
    5d86:	9b 01       	movw	r18, r22
    5d88:	ac 01       	movw	r20, r24
    5d8a:	25 0d       	add	r18, r5
    5d8c:	31 1d       	adc	r19, r1
    5d8e:	41 1d       	adc	r20, r1
    5d90:	51 1d       	adc	r21, r1
    5d92:	21 30       	cpi	r18, 0x01	; 1
    5d94:	31 05       	cpc	r19, r1
    5d96:	41 05       	cpc	r20, r1
    5d98:	b0 e8       	ldi	r27, 0x80	; 128
    5d9a:	5b 07       	cpc	r21, r27
    5d9c:	10 f0       	brcs	.+4      	; 0x5da2 <strtol+0x1b2>
    5d9e:	6f ef       	ldi	r22, 0xFF	; 255
    5da0:	01 c0       	rjmp	.+2      	; 0x5da4 <strtol+0x1b4>
    5da2:	61 e0       	ldi	r22, 0x01	; 1
    5da4:	31 96       	adiw	r30, 0x01	; 1
    5da6:	d1 01       	movw	r26, r2
    5da8:	6c 90       	ld	r6, X
    5daa:	c8 cf       	rjmp	.-112    	; 0x5d3c <strtol+0x14c>
    5dac:	87 2d       	mov	r24, r7
    5dae:	81 70       	andi	r24, 0x01	; 1
    5db0:	01 15       	cp	r16, r1
    5db2:	11 05       	cpc	r17, r1
    5db4:	71 f0       	breq	.+28     	; 0x5dd2 <strtol+0x1e2>
    5db6:	66 23       	and	r22, r22
    5db8:	29 f0       	breq	.+10     	; 0x5dc4 <strtol+0x1d4>
    5dba:	31 97       	sbiw	r30, 0x01	; 1
    5dbc:	d8 01       	movw	r26, r16
    5dbe:	ed 93       	st	X+, r30
    5dc0:	fc 93       	st	X, r31
    5dc2:	07 c0       	rjmp	.+14     	; 0x5dd2 <strtol+0x1e2>
    5dc4:	71 fe       	sbrs	r7, 1
    5dc6:	19 c0       	rjmp	.+50     	; 0x5dfa <strtol+0x20a>
    5dc8:	32 97       	sbiw	r30, 0x02	; 2
    5dca:	d8 01       	movw	r26, r16
    5dcc:	ed 93       	st	X+, r30
    5dce:	fc 93       	st	X, r31
    5dd0:	14 c0       	rjmp	.+40     	; 0x5dfa <strtol+0x20a>
    5dd2:	67 ff       	sbrs	r22, 7
    5dd4:	12 c0       	rjmp	.+36     	; 0x5dfa <strtol+0x20a>
    5dd6:	88 23       	and	r24, r24
    5dd8:	29 f0       	breq	.+10     	; 0x5de4 <strtol+0x1f4>
    5dda:	20 e0       	ldi	r18, 0x00	; 0
    5ddc:	30 e0       	ldi	r19, 0x00	; 0
    5dde:	40 e0       	ldi	r20, 0x00	; 0
    5de0:	50 e8       	ldi	r21, 0x80	; 128
    5de2:	04 c0       	rjmp	.+8      	; 0x5dec <strtol+0x1fc>
    5de4:	2f ef       	ldi	r18, 0xFF	; 255
    5de6:	3f ef       	ldi	r19, 0xFF	; 255
    5de8:	4f ef       	ldi	r20, 0xFF	; 255
    5dea:	5f e7       	ldi	r21, 0x7F	; 127
    5dec:	82 e2       	ldi	r24, 0x22	; 34
    5dee:	90 e0       	ldi	r25, 0x00	; 0
    5df0:	90 93 0f 01 	sts	0x010F, r25
    5df4:	80 93 0e 01 	sts	0x010E, r24
    5df8:	16 c0       	rjmp	.+44     	; 0x5e26 <strtol+0x236>
    5dfa:	88 23       	and	r24, r24
    5dfc:	41 f0       	breq	.+16     	; 0x5e0e <strtol+0x21e>
    5dfe:	50 95       	com	r21
    5e00:	40 95       	com	r20
    5e02:	30 95       	com	r19
    5e04:	21 95       	neg	r18
    5e06:	3f 4f       	sbci	r19, 0xFF	; 255
    5e08:	4f 4f       	sbci	r20, 0xFF	; 255
    5e0a:	5f 4f       	sbci	r21, 0xFF	; 255
    5e0c:	0c c0       	rjmp	.+24     	; 0x5e26 <strtol+0x236>
    5e0e:	57 ff       	sbrs	r21, 7
    5e10:	0a c0       	rjmp	.+20     	; 0x5e26 <strtol+0x236>
    5e12:	82 e2       	ldi	r24, 0x22	; 34
    5e14:	90 e0       	ldi	r25, 0x00	; 0
    5e16:	90 93 0f 01 	sts	0x010F, r25
    5e1a:	80 93 0e 01 	sts	0x010E, r24
    5e1e:	2f ef       	ldi	r18, 0xFF	; 255
    5e20:	3f ef       	ldi	r19, 0xFF	; 255
    5e22:	4f ef       	ldi	r20, 0xFF	; 255
    5e24:	5f e7       	ldi	r21, 0x7F	; 127
    5e26:	b9 01       	movw	r22, r18
    5e28:	ca 01       	movw	r24, r20
    5e2a:	04 c0       	rjmp	.+8      	; 0x5e34 <strtol+0x244>
    5e2c:	60 e0       	ldi	r22, 0x00	; 0
    5e2e:	70 e0       	ldi	r23, 0x00	; 0
    5e30:	80 e0       	ldi	r24, 0x00	; 0
    5e32:	90 e0       	ldi	r25, 0x00	; 0
    5e34:	df 91       	pop	r29
    5e36:	cf 91       	pop	r28
    5e38:	1f 91       	pop	r17
    5e3a:	0f 91       	pop	r16
    5e3c:	ff 90       	pop	r15
    5e3e:	ef 90       	pop	r14
    5e40:	df 90       	pop	r13
    5e42:	cf 90       	pop	r12
    5e44:	bf 90       	pop	r11
    5e46:	af 90       	pop	r10
    5e48:	9f 90       	pop	r9
    5e4a:	8f 90       	pop	r8
    5e4c:	7f 90       	pop	r7
    5e4e:	6f 90       	pop	r6
    5e50:	5f 90       	pop	r5
    5e52:	3f 90       	pop	r3
    5e54:	2f 90       	pop	r2
    5e56:	08 95       	ret

00005e58 <isspace>:
    5e58:	91 11       	cpse	r25, r1
    5e5a:	05 c2       	rjmp	.+1034   	; 0x6266 <__ctype_isfalse>
    5e5c:	80 32       	cpi	r24, 0x20	; 32
    5e5e:	19 f0       	breq	.+6      	; 0x5e66 <isspace+0xe>
    5e60:	89 50       	subi	r24, 0x09	; 9
    5e62:	85 50       	subi	r24, 0x05	; 5
    5e64:	d0 f7       	brcc	.-12     	; 0x5e5a <isspace+0x2>
    5e66:	08 95       	ret

00005e68 <sprintf>:
    5e68:	ae e0       	ldi	r26, 0x0E	; 14
    5e6a:	b0 e0       	ldi	r27, 0x00	; 0
    5e6c:	ea e3       	ldi	r30, 0x3A	; 58
    5e6e:	ff e2       	ldi	r31, 0x2F	; 47
    5e70:	0c 94 6b 32 	jmp	0x64d6	; 0x64d6 <__prologue_saves__+0x1c>
    5e74:	0d 89       	ldd	r16, Y+21	; 0x15
    5e76:	1e 89       	ldd	r17, Y+22	; 0x16
    5e78:	86 e0       	ldi	r24, 0x06	; 6
    5e7a:	8c 83       	std	Y+4, r24	; 0x04
    5e7c:	1a 83       	std	Y+2, r17	; 0x02
    5e7e:	09 83       	std	Y+1, r16	; 0x01
    5e80:	8f ef       	ldi	r24, 0xFF	; 255
    5e82:	9f e7       	ldi	r25, 0x7F	; 127
    5e84:	9e 83       	std	Y+6, r25	; 0x06
    5e86:	8d 83       	std	Y+5, r24	; 0x05
    5e88:	ae 01       	movw	r20, r28
    5e8a:	47 5e       	subi	r20, 0xE7	; 231
    5e8c:	5f 4f       	sbci	r21, 0xFF	; 255
    5e8e:	6f 89       	ldd	r22, Y+23	; 0x17
    5e90:	78 8d       	ldd	r23, Y+24	; 0x18
    5e92:	ce 01       	movw	r24, r28
    5e94:	01 96       	adiw	r24, 0x01	; 1
    5e96:	0e 94 56 2f 	call	0x5eac	; 0x5eac <vfprintf>
    5e9a:	ef 81       	ldd	r30, Y+7	; 0x07
    5e9c:	f8 85       	ldd	r31, Y+8	; 0x08
    5e9e:	e0 0f       	add	r30, r16
    5ea0:	f1 1f       	adc	r31, r17
    5ea2:	10 82       	st	Z, r1
    5ea4:	2e 96       	adiw	r28, 0x0e	; 14
    5ea6:	e4 e0       	ldi	r30, 0x04	; 4
    5ea8:	0c 94 87 32 	jmp	0x650e	; 0x650e <__epilogue_restores__+0x1c>

00005eac <vfprintf>:
    5eac:	ac e0       	ldi	r26, 0x0C	; 12
    5eae:	b0 e0       	ldi	r27, 0x00	; 0
    5eb0:	ec e5       	ldi	r30, 0x5C	; 92
    5eb2:	ff e2       	ldi	r31, 0x2F	; 47
    5eb4:	0c 94 5d 32 	jmp	0x64ba	; 0x64ba <__prologue_saves__>
    5eb8:	7c 01       	movw	r14, r24
    5eba:	6b 01       	movw	r12, r22
    5ebc:	8a 01       	movw	r16, r20
    5ebe:	fc 01       	movw	r30, r24
    5ec0:	17 82       	std	Z+7, r1	; 0x07
    5ec2:	16 82       	std	Z+6, r1	; 0x06
    5ec4:	83 81       	ldd	r24, Z+3	; 0x03
    5ec6:	81 ff       	sbrs	r24, 1
    5ec8:	bd c1       	rjmp	.+890    	; 0x6244 <vfprintf+0x398>
    5eca:	ce 01       	movw	r24, r28
    5ecc:	01 96       	adiw	r24, 0x01	; 1
    5ece:	4c 01       	movw	r8, r24
    5ed0:	f7 01       	movw	r30, r14
    5ed2:	93 81       	ldd	r25, Z+3	; 0x03
    5ed4:	f6 01       	movw	r30, r12
    5ed6:	93 fd       	sbrc	r25, 3
    5ed8:	85 91       	lpm	r24, Z+
    5eda:	93 ff       	sbrs	r25, 3
    5edc:	81 91       	ld	r24, Z+
    5ede:	6f 01       	movw	r12, r30
    5ee0:	88 23       	and	r24, r24
    5ee2:	09 f4       	brne	.+2      	; 0x5ee6 <vfprintf+0x3a>
    5ee4:	ab c1       	rjmp	.+854    	; 0x623c <vfprintf+0x390>
    5ee6:	85 32       	cpi	r24, 0x25	; 37
    5ee8:	39 f4       	brne	.+14     	; 0x5ef8 <vfprintf+0x4c>
    5eea:	93 fd       	sbrc	r25, 3
    5eec:	85 91       	lpm	r24, Z+
    5eee:	93 ff       	sbrs	r25, 3
    5ef0:	81 91       	ld	r24, Z+
    5ef2:	6f 01       	movw	r12, r30
    5ef4:	85 32       	cpi	r24, 0x25	; 37
    5ef6:	29 f4       	brne	.+10     	; 0x5f02 <vfprintf+0x56>
    5ef8:	b7 01       	movw	r22, r14
    5efa:	90 e0       	ldi	r25, 0x00	; 0
    5efc:	0e 94 4c 31 	call	0x6298	; 0x6298 <fputc>
    5f00:	e7 cf       	rjmp	.-50     	; 0x5ed0 <vfprintf+0x24>
    5f02:	51 2c       	mov	r5, r1
    5f04:	31 2c       	mov	r3, r1
    5f06:	20 e0       	ldi	r18, 0x00	; 0
    5f08:	20 32       	cpi	r18, 0x20	; 32
    5f0a:	a0 f4       	brcc	.+40     	; 0x5f34 <vfprintf+0x88>
    5f0c:	8b 32       	cpi	r24, 0x2B	; 43
    5f0e:	69 f0       	breq	.+26     	; 0x5f2a <vfprintf+0x7e>
    5f10:	30 f4       	brcc	.+12     	; 0x5f1e <vfprintf+0x72>
    5f12:	80 32       	cpi	r24, 0x20	; 32
    5f14:	59 f0       	breq	.+22     	; 0x5f2c <vfprintf+0x80>
    5f16:	83 32       	cpi	r24, 0x23	; 35
    5f18:	69 f4       	brne	.+26     	; 0x5f34 <vfprintf+0x88>
    5f1a:	20 61       	ori	r18, 0x10	; 16
    5f1c:	2c c0       	rjmp	.+88     	; 0x5f76 <vfprintf+0xca>
    5f1e:	8d 32       	cpi	r24, 0x2D	; 45
    5f20:	39 f0       	breq	.+14     	; 0x5f30 <vfprintf+0x84>
    5f22:	80 33       	cpi	r24, 0x30	; 48
    5f24:	39 f4       	brne	.+14     	; 0x5f34 <vfprintf+0x88>
    5f26:	21 60       	ori	r18, 0x01	; 1
    5f28:	26 c0       	rjmp	.+76     	; 0x5f76 <vfprintf+0xca>
    5f2a:	22 60       	ori	r18, 0x02	; 2
    5f2c:	24 60       	ori	r18, 0x04	; 4
    5f2e:	23 c0       	rjmp	.+70     	; 0x5f76 <vfprintf+0xca>
    5f30:	28 60       	ori	r18, 0x08	; 8
    5f32:	21 c0       	rjmp	.+66     	; 0x5f76 <vfprintf+0xca>
    5f34:	27 fd       	sbrc	r18, 7
    5f36:	27 c0       	rjmp	.+78     	; 0x5f86 <vfprintf+0xda>
    5f38:	30 ed       	ldi	r19, 0xD0	; 208
    5f3a:	38 0f       	add	r19, r24
    5f3c:	3a 30       	cpi	r19, 0x0A	; 10
    5f3e:	78 f4       	brcc	.+30     	; 0x5f5e <vfprintf+0xb2>
    5f40:	26 ff       	sbrs	r18, 6
    5f42:	06 c0       	rjmp	.+12     	; 0x5f50 <vfprintf+0xa4>
    5f44:	fa e0       	ldi	r31, 0x0A	; 10
    5f46:	5f 9e       	mul	r5, r31
    5f48:	30 0d       	add	r19, r0
    5f4a:	11 24       	eor	r1, r1
    5f4c:	53 2e       	mov	r5, r19
    5f4e:	13 c0       	rjmp	.+38     	; 0x5f76 <vfprintf+0xca>
    5f50:	8a e0       	ldi	r24, 0x0A	; 10
    5f52:	38 9e       	mul	r3, r24
    5f54:	30 0d       	add	r19, r0
    5f56:	11 24       	eor	r1, r1
    5f58:	33 2e       	mov	r3, r19
    5f5a:	20 62       	ori	r18, 0x20	; 32
    5f5c:	0c c0       	rjmp	.+24     	; 0x5f76 <vfprintf+0xca>
    5f5e:	8e 32       	cpi	r24, 0x2E	; 46
    5f60:	21 f4       	brne	.+8      	; 0x5f6a <vfprintf+0xbe>
    5f62:	26 fd       	sbrc	r18, 6
    5f64:	6b c1       	rjmp	.+726    	; 0x623c <vfprintf+0x390>
    5f66:	20 64       	ori	r18, 0x40	; 64
    5f68:	06 c0       	rjmp	.+12     	; 0x5f76 <vfprintf+0xca>
    5f6a:	8c 36       	cpi	r24, 0x6C	; 108
    5f6c:	11 f4       	brne	.+4      	; 0x5f72 <vfprintf+0xc6>
    5f6e:	20 68       	ori	r18, 0x80	; 128
    5f70:	02 c0       	rjmp	.+4      	; 0x5f76 <vfprintf+0xca>
    5f72:	88 36       	cpi	r24, 0x68	; 104
    5f74:	41 f4       	brne	.+16     	; 0x5f86 <vfprintf+0xda>
    5f76:	f6 01       	movw	r30, r12
    5f78:	93 fd       	sbrc	r25, 3
    5f7a:	85 91       	lpm	r24, Z+
    5f7c:	93 ff       	sbrs	r25, 3
    5f7e:	81 91       	ld	r24, Z+
    5f80:	6f 01       	movw	r12, r30
    5f82:	81 11       	cpse	r24, r1
    5f84:	c1 cf       	rjmp	.-126    	; 0x5f08 <vfprintf+0x5c>
    5f86:	98 2f       	mov	r25, r24
    5f88:	9f 7d       	andi	r25, 0xDF	; 223
    5f8a:	95 54       	subi	r25, 0x45	; 69
    5f8c:	93 30       	cpi	r25, 0x03	; 3
    5f8e:	28 f4       	brcc	.+10     	; 0x5f9a <vfprintf+0xee>
    5f90:	0c 5f       	subi	r16, 0xFC	; 252
    5f92:	1f 4f       	sbci	r17, 0xFF	; 255
    5f94:	ff e3       	ldi	r31, 0x3F	; 63
    5f96:	f9 83       	std	Y+1, r31	; 0x01
    5f98:	0d c0       	rjmp	.+26     	; 0x5fb4 <vfprintf+0x108>
    5f9a:	83 36       	cpi	r24, 0x63	; 99
    5f9c:	31 f0       	breq	.+12     	; 0x5faa <vfprintf+0xfe>
    5f9e:	83 37       	cpi	r24, 0x73	; 115
    5fa0:	71 f0       	breq	.+28     	; 0x5fbe <vfprintf+0x112>
    5fa2:	83 35       	cpi	r24, 0x53	; 83
    5fa4:	09 f0       	breq	.+2      	; 0x5fa8 <vfprintf+0xfc>
    5fa6:	5b c0       	rjmp	.+182    	; 0x605e <vfprintf+0x1b2>
    5fa8:	22 c0       	rjmp	.+68     	; 0x5fee <vfprintf+0x142>
    5faa:	f8 01       	movw	r30, r16
    5fac:	80 81       	ld	r24, Z
    5fae:	89 83       	std	Y+1, r24	; 0x01
    5fb0:	0e 5f       	subi	r16, 0xFE	; 254
    5fb2:	1f 4f       	sbci	r17, 0xFF	; 255
    5fb4:	44 24       	eor	r4, r4
    5fb6:	43 94       	inc	r4
    5fb8:	51 2c       	mov	r5, r1
    5fba:	54 01       	movw	r10, r8
    5fbc:	15 c0       	rjmp	.+42     	; 0x5fe8 <vfprintf+0x13c>
    5fbe:	38 01       	movw	r6, r16
    5fc0:	f2 e0       	ldi	r31, 0x02	; 2
    5fc2:	6f 0e       	add	r6, r31
    5fc4:	71 1c       	adc	r7, r1
    5fc6:	f8 01       	movw	r30, r16
    5fc8:	a0 80       	ld	r10, Z
    5fca:	b1 80       	ldd	r11, Z+1	; 0x01
    5fcc:	26 ff       	sbrs	r18, 6
    5fce:	03 c0       	rjmp	.+6      	; 0x5fd6 <vfprintf+0x12a>
    5fd0:	65 2d       	mov	r22, r5
    5fd2:	70 e0       	ldi	r23, 0x00	; 0
    5fd4:	02 c0       	rjmp	.+4      	; 0x5fda <vfprintf+0x12e>
    5fd6:	6f ef       	ldi	r22, 0xFF	; 255
    5fd8:	7f ef       	ldi	r23, 0xFF	; 255
    5fda:	c5 01       	movw	r24, r10
    5fdc:	2c 87       	std	Y+12, r18	; 0x0c
    5fde:	0e 94 41 31 	call	0x6282	; 0x6282 <strnlen>
    5fe2:	2c 01       	movw	r4, r24
    5fe4:	83 01       	movw	r16, r6
    5fe6:	2c 85       	ldd	r18, Y+12	; 0x0c
    5fe8:	2f 77       	andi	r18, 0x7F	; 127
    5fea:	22 2e       	mov	r2, r18
    5fec:	17 c0       	rjmp	.+46     	; 0x601c <vfprintf+0x170>
    5fee:	38 01       	movw	r6, r16
    5ff0:	f2 e0       	ldi	r31, 0x02	; 2
    5ff2:	6f 0e       	add	r6, r31
    5ff4:	71 1c       	adc	r7, r1
    5ff6:	f8 01       	movw	r30, r16
    5ff8:	a0 80       	ld	r10, Z
    5ffa:	b1 80       	ldd	r11, Z+1	; 0x01
    5ffc:	26 ff       	sbrs	r18, 6
    5ffe:	03 c0       	rjmp	.+6      	; 0x6006 <vfprintf+0x15a>
    6000:	65 2d       	mov	r22, r5
    6002:	70 e0       	ldi	r23, 0x00	; 0
    6004:	02 c0       	rjmp	.+4      	; 0x600a <vfprintf+0x15e>
    6006:	6f ef       	ldi	r22, 0xFF	; 255
    6008:	7f ef       	ldi	r23, 0xFF	; 255
    600a:	c5 01       	movw	r24, r10
    600c:	2c 87       	std	Y+12, r18	; 0x0c
    600e:	0e 94 36 31 	call	0x626c	; 0x626c <strnlen_P>
    6012:	2c 01       	movw	r4, r24
    6014:	2c 85       	ldd	r18, Y+12	; 0x0c
    6016:	20 68       	ori	r18, 0x80	; 128
    6018:	22 2e       	mov	r2, r18
    601a:	83 01       	movw	r16, r6
    601c:	23 fc       	sbrc	r2, 3
    601e:	1b c0       	rjmp	.+54     	; 0x6056 <vfprintf+0x1aa>
    6020:	83 2d       	mov	r24, r3
    6022:	90 e0       	ldi	r25, 0x00	; 0
    6024:	48 16       	cp	r4, r24
    6026:	59 06       	cpc	r5, r25
    6028:	b0 f4       	brcc	.+44     	; 0x6056 <vfprintf+0x1aa>
    602a:	b7 01       	movw	r22, r14
    602c:	80 e2       	ldi	r24, 0x20	; 32
    602e:	90 e0       	ldi	r25, 0x00	; 0
    6030:	0e 94 4c 31 	call	0x6298	; 0x6298 <fputc>
    6034:	3a 94       	dec	r3
    6036:	f4 cf       	rjmp	.-24     	; 0x6020 <vfprintf+0x174>
    6038:	f5 01       	movw	r30, r10
    603a:	27 fc       	sbrc	r2, 7
    603c:	85 91       	lpm	r24, Z+
    603e:	27 fe       	sbrs	r2, 7
    6040:	81 91       	ld	r24, Z+
    6042:	5f 01       	movw	r10, r30
    6044:	b7 01       	movw	r22, r14
    6046:	90 e0       	ldi	r25, 0x00	; 0
    6048:	0e 94 4c 31 	call	0x6298	; 0x6298 <fputc>
    604c:	31 10       	cpse	r3, r1
    604e:	3a 94       	dec	r3
    6050:	f1 e0       	ldi	r31, 0x01	; 1
    6052:	4f 1a       	sub	r4, r31
    6054:	51 08       	sbc	r5, r1
    6056:	41 14       	cp	r4, r1
    6058:	51 04       	cpc	r5, r1
    605a:	71 f7       	brne	.-36     	; 0x6038 <vfprintf+0x18c>
    605c:	e5 c0       	rjmp	.+458    	; 0x6228 <vfprintf+0x37c>
    605e:	84 36       	cpi	r24, 0x64	; 100
    6060:	11 f0       	breq	.+4      	; 0x6066 <vfprintf+0x1ba>
    6062:	89 36       	cpi	r24, 0x69	; 105
    6064:	39 f5       	brne	.+78     	; 0x60b4 <vfprintf+0x208>
    6066:	f8 01       	movw	r30, r16
    6068:	27 ff       	sbrs	r18, 7
    606a:	07 c0       	rjmp	.+14     	; 0x607a <vfprintf+0x1ce>
    606c:	60 81       	ld	r22, Z
    606e:	71 81       	ldd	r23, Z+1	; 0x01
    6070:	82 81       	ldd	r24, Z+2	; 0x02
    6072:	93 81       	ldd	r25, Z+3	; 0x03
    6074:	0c 5f       	subi	r16, 0xFC	; 252
    6076:	1f 4f       	sbci	r17, 0xFF	; 255
    6078:	08 c0       	rjmp	.+16     	; 0x608a <vfprintf+0x1de>
    607a:	60 81       	ld	r22, Z
    607c:	71 81       	ldd	r23, Z+1	; 0x01
    607e:	88 27       	eor	r24, r24
    6080:	77 fd       	sbrc	r23, 7
    6082:	80 95       	com	r24
    6084:	98 2f       	mov	r25, r24
    6086:	0e 5f       	subi	r16, 0xFE	; 254
    6088:	1f 4f       	sbci	r17, 0xFF	; 255
    608a:	2f 76       	andi	r18, 0x6F	; 111
    608c:	b2 2e       	mov	r11, r18
    608e:	97 ff       	sbrs	r25, 7
    6090:	09 c0       	rjmp	.+18     	; 0x60a4 <vfprintf+0x1f8>
    6092:	90 95       	com	r25
    6094:	80 95       	com	r24
    6096:	70 95       	com	r23
    6098:	61 95       	neg	r22
    609a:	7f 4f       	sbci	r23, 0xFF	; 255
    609c:	8f 4f       	sbci	r24, 0xFF	; 255
    609e:	9f 4f       	sbci	r25, 0xFF	; 255
    60a0:	20 68       	ori	r18, 0x80	; 128
    60a2:	b2 2e       	mov	r11, r18
    60a4:	2a e0       	ldi	r18, 0x0A	; 10
    60a6:	30 e0       	ldi	r19, 0x00	; 0
    60a8:	a4 01       	movw	r20, r8
    60aa:	0e 94 7e 31 	call	0x62fc	; 0x62fc <__ultoa_invert>
    60ae:	a8 2e       	mov	r10, r24
    60b0:	a8 18       	sub	r10, r8
    60b2:	44 c0       	rjmp	.+136    	; 0x613c <vfprintf+0x290>
    60b4:	85 37       	cpi	r24, 0x75	; 117
    60b6:	29 f4       	brne	.+10     	; 0x60c2 <vfprintf+0x216>
    60b8:	2f 7e       	andi	r18, 0xEF	; 239
    60ba:	b2 2e       	mov	r11, r18
    60bc:	2a e0       	ldi	r18, 0x0A	; 10
    60be:	30 e0       	ldi	r19, 0x00	; 0
    60c0:	25 c0       	rjmp	.+74     	; 0x610c <vfprintf+0x260>
    60c2:	f2 2f       	mov	r31, r18
    60c4:	f9 7f       	andi	r31, 0xF9	; 249
    60c6:	bf 2e       	mov	r11, r31
    60c8:	8f 36       	cpi	r24, 0x6F	; 111
    60ca:	c1 f0       	breq	.+48     	; 0x60fc <vfprintf+0x250>
    60cc:	18 f4       	brcc	.+6      	; 0x60d4 <vfprintf+0x228>
    60ce:	88 35       	cpi	r24, 0x58	; 88
    60d0:	79 f0       	breq	.+30     	; 0x60f0 <vfprintf+0x244>
    60d2:	b4 c0       	rjmp	.+360    	; 0x623c <vfprintf+0x390>
    60d4:	80 37       	cpi	r24, 0x70	; 112
    60d6:	19 f0       	breq	.+6      	; 0x60de <vfprintf+0x232>
    60d8:	88 37       	cpi	r24, 0x78	; 120
    60da:	21 f0       	breq	.+8      	; 0x60e4 <vfprintf+0x238>
    60dc:	af c0       	rjmp	.+350    	; 0x623c <vfprintf+0x390>
    60de:	2f 2f       	mov	r18, r31
    60e0:	20 61       	ori	r18, 0x10	; 16
    60e2:	b2 2e       	mov	r11, r18
    60e4:	b4 fe       	sbrs	r11, 4
    60e6:	0d c0       	rjmp	.+26     	; 0x6102 <vfprintf+0x256>
    60e8:	8b 2d       	mov	r24, r11
    60ea:	84 60       	ori	r24, 0x04	; 4
    60ec:	b8 2e       	mov	r11, r24
    60ee:	09 c0       	rjmp	.+18     	; 0x6102 <vfprintf+0x256>
    60f0:	24 ff       	sbrs	r18, 4
    60f2:	0a c0       	rjmp	.+20     	; 0x6108 <vfprintf+0x25c>
    60f4:	9f 2f       	mov	r25, r31
    60f6:	96 60       	ori	r25, 0x06	; 6
    60f8:	b9 2e       	mov	r11, r25
    60fa:	06 c0       	rjmp	.+12     	; 0x6108 <vfprintf+0x25c>
    60fc:	28 e0       	ldi	r18, 0x08	; 8
    60fe:	30 e0       	ldi	r19, 0x00	; 0
    6100:	05 c0       	rjmp	.+10     	; 0x610c <vfprintf+0x260>
    6102:	20 e1       	ldi	r18, 0x10	; 16
    6104:	30 e0       	ldi	r19, 0x00	; 0
    6106:	02 c0       	rjmp	.+4      	; 0x610c <vfprintf+0x260>
    6108:	20 e1       	ldi	r18, 0x10	; 16
    610a:	32 e0       	ldi	r19, 0x02	; 2
    610c:	f8 01       	movw	r30, r16
    610e:	b7 fe       	sbrs	r11, 7
    6110:	07 c0       	rjmp	.+14     	; 0x6120 <vfprintf+0x274>
    6112:	60 81       	ld	r22, Z
    6114:	71 81       	ldd	r23, Z+1	; 0x01
    6116:	82 81       	ldd	r24, Z+2	; 0x02
    6118:	93 81       	ldd	r25, Z+3	; 0x03
    611a:	0c 5f       	subi	r16, 0xFC	; 252
    611c:	1f 4f       	sbci	r17, 0xFF	; 255
    611e:	06 c0       	rjmp	.+12     	; 0x612c <vfprintf+0x280>
    6120:	60 81       	ld	r22, Z
    6122:	71 81       	ldd	r23, Z+1	; 0x01
    6124:	80 e0       	ldi	r24, 0x00	; 0
    6126:	90 e0       	ldi	r25, 0x00	; 0
    6128:	0e 5f       	subi	r16, 0xFE	; 254
    612a:	1f 4f       	sbci	r17, 0xFF	; 255
    612c:	a4 01       	movw	r20, r8
    612e:	0e 94 7e 31 	call	0x62fc	; 0x62fc <__ultoa_invert>
    6132:	a8 2e       	mov	r10, r24
    6134:	a8 18       	sub	r10, r8
    6136:	fb 2d       	mov	r31, r11
    6138:	ff 77       	andi	r31, 0x7F	; 127
    613a:	bf 2e       	mov	r11, r31
    613c:	b6 fe       	sbrs	r11, 6
    613e:	0b c0       	rjmp	.+22     	; 0x6156 <vfprintf+0x2aa>
    6140:	2b 2d       	mov	r18, r11
    6142:	2e 7f       	andi	r18, 0xFE	; 254
    6144:	a5 14       	cp	r10, r5
    6146:	50 f4       	brcc	.+20     	; 0x615c <vfprintf+0x2b0>
    6148:	b4 fe       	sbrs	r11, 4
    614a:	0a c0       	rjmp	.+20     	; 0x6160 <vfprintf+0x2b4>
    614c:	b2 fc       	sbrc	r11, 2
    614e:	08 c0       	rjmp	.+16     	; 0x6160 <vfprintf+0x2b4>
    6150:	2b 2d       	mov	r18, r11
    6152:	2e 7e       	andi	r18, 0xEE	; 238
    6154:	05 c0       	rjmp	.+10     	; 0x6160 <vfprintf+0x2b4>
    6156:	7a 2c       	mov	r7, r10
    6158:	2b 2d       	mov	r18, r11
    615a:	03 c0       	rjmp	.+6      	; 0x6162 <vfprintf+0x2b6>
    615c:	7a 2c       	mov	r7, r10
    615e:	01 c0       	rjmp	.+2      	; 0x6162 <vfprintf+0x2b6>
    6160:	75 2c       	mov	r7, r5
    6162:	24 ff       	sbrs	r18, 4
    6164:	0d c0       	rjmp	.+26     	; 0x6180 <vfprintf+0x2d4>
    6166:	fe 01       	movw	r30, r28
    6168:	ea 0d       	add	r30, r10
    616a:	f1 1d       	adc	r31, r1
    616c:	80 81       	ld	r24, Z
    616e:	80 33       	cpi	r24, 0x30	; 48
    6170:	11 f4       	brne	.+4      	; 0x6176 <vfprintf+0x2ca>
    6172:	29 7e       	andi	r18, 0xE9	; 233
    6174:	09 c0       	rjmp	.+18     	; 0x6188 <vfprintf+0x2dc>
    6176:	22 ff       	sbrs	r18, 2
    6178:	06 c0       	rjmp	.+12     	; 0x6186 <vfprintf+0x2da>
    617a:	73 94       	inc	r7
    617c:	73 94       	inc	r7
    617e:	04 c0       	rjmp	.+8      	; 0x6188 <vfprintf+0x2dc>
    6180:	82 2f       	mov	r24, r18
    6182:	86 78       	andi	r24, 0x86	; 134
    6184:	09 f0       	breq	.+2      	; 0x6188 <vfprintf+0x2dc>
    6186:	73 94       	inc	r7
    6188:	23 fd       	sbrc	r18, 3
    618a:	13 c0       	rjmp	.+38     	; 0x61b2 <vfprintf+0x306>
    618c:	20 ff       	sbrs	r18, 0
    618e:	06 c0       	rjmp	.+12     	; 0x619c <vfprintf+0x2f0>
    6190:	5a 2c       	mov	r5, r10
    6192:	73 14       	cp	r7, r3
    6194:	18 f4       	brcc	.+6      	; 0x619c <vfprintf+0x2f0>
    6196:	53 0c       	add	r5, r3
    6198:	57 18       	sub	r5, r7
    619a:	73 2c       	mov	r7, r3
    619c:	73 14       	cp	r7, r3
    619e:	68 f4       	brcc	.+26     	; 0x61ba <vfprintf+0x30e>
    61a0:	b7 01       	movw	r22, r14
    61a2:	80 e2       	ldi	r24, 0x20	; 32
    61a4:	90 e0       	ldi	r25, 0x00	; 0
    61a6:	2c 87       	std	Y+12, r18	; 0x0c
    61a8:	0e 94 4c 31 	call	0x6298	; 0x6298 <fputc>
    61ac:	73 94       	inc	r7
    61ae:	2c 85       	ldd	r18, Y+12	; 0x0c
    61b0:	f5 cf       	rjmp	.-22     	; 0x619c <vfprintf+0x2f0>
    61b2:	73 14       	cp	r7, r3
    61b4:	10 f4       	brcc	.+4      	; 0x61ba <vfprintf+0x30e>
    61b6:	37 18       	sub	r3, r7
    61b8:	01 c0       	rjmp	.+2      	; 0x61bc <vfprintf+0x310>
    61ba:	31 2c       	mov	r3, r1
    61bc:	24 ff       	sbrs	r18, 4
    61be:	12 c0       	rjmp	.+36     	; 0x61e4 <vfprintf+0x338>
    61c0:	b7 01       	movw	r22, r14
    61c2:	80 e3       	ldi	r24, 0x30	; 48
    61c4:	90 e0       	ldi	r25, 0x00	; 0
    61c6:	2c 87       	std	Y+12, r18	; 0x0c
    61c8:	0e 94 4c 31 	call	0x6298	; 0x6298 <fputc>
    61cc:	2c 85       	ldd	r18, Y+12	; 0x0c
    61ce:	22 ff       	sbrs	r18, 2
    61d0:	17 c0       	rjmp	.+46     	; 0x6200 <vfprintf+0x354>
    61d2:	21 ff       	sbrs	r18, 1
    61d4:	03 c0       	rjmp	.+6      	; 0x61dc <vfprintf+0x330>
    61d6:	88 e5       	ldi	r24, 0x58	; 88
    61d8:	90 e0       	ldi	r25, 0x00	; 0
    61da:	02 c0       	rjmp	.+4      	; 0x61e0 <vfprintf+0x334>
    61dc:	88 e7       	ldi	r24, 0x78	; 120
    61de:	90 e0       	ldi	r25, 0x00	; 0
    61e0:	b7 01       	movw	r22, r14
    61e2:	0c c0       	rjmp	.+24     	; 0x61fc <vfprintf+0x350>
    61e4:	82 2f       	mov	r24, r18
    61e6:	86 78       	andi	r24, 0x86	; 134
    61e8:	59 f0       	breq	.+22     	; 0x6200 <vfprintf+0x354>
    61ea:	21 fd       	sbrc	r18, 1
    61ec:	02 c0       	rjmp	.+4      	; 0x61f2 <vfprintf+0x346>
    61ee:	80 e2       	ldi	r24, 0x20	; 32
    61f0:	01 c0       	rjmp	.+2      	; 0x61f4 <vfprintf+0x348>
    61f2:	8b e2       	ldi	r24, 0x2B	; 43
    61f4:	27 fd       	sbrc	r18, 7
    61f6:	8d e2       	ldi	r24, 0x2D	; 45
    61f8:	b7 01       	movw	r22, r14
    61fa:	90 e0       	ldi	r25, 0x00	; 0
    61fc:	0e 94 4c 31 	call	0x6298	; 0x6298 <fputc>
    6200:	a5 14       	cp	r10, r5
    6202:	38 f4       	brcc	.+14     	; 0x6212 <vfprintf+0x366>
    6204:	b7 01       	movw	r22, r14
    6206:	80 e3       	ldi	r24, 0x30	; 48
    6208:	90 e0       	ldi	r25, 0x00	; 0
    620a:	0e 94 4c 31 	call	0x6298	; 0x6298 <fputc>
    620e:	5a 94       	dec	r5
    6210:	f7 cf       	rjmp	.-18     	; 0x6200 <vfprintf+0x354>
    6212:	aa 94       	dec	r10
    6214:	f4 01       	movw	r30, r8
    6216:	ea 0d       	add	r30, r10
    6218:	f1 1d       	adc	r31, r1
    621a:	80 81       	ld	r24, Z
    621c:	b7 01       	movw	r22, r14
    621e:	90 e0       	ldi	r25, 0x00	; 0
    6220:	0e 94 4c 31 	call	0x6298	; 0x6298 <fputc>
    6224:	a1 10       	cpse	r10, r1
    6226:	f5 cf       	rjmp	.-22     	; 0x6212 <vfprintf+0x366>
    6228:	33 20       	and	r3, r3
    622a:	09 f4       	brne	.+2      	; 0x622e <vfprintf+0x382>
    622c:	51 ce       	rjmp	.-862    	; 0x5ed0 <vfprintf+0x24>
    622e:	b7 01       	movw	r22, r14
    6230:	80 e2       	ldi	r24, 0x20	; 32
    6232:	90 e0       	ldi	r25, 0x00	; 0
    6234:	0e 94 4c 31 	call	0x6298	; 0x6298 <fputc>
    6238:	3a 94       	dec	r3
    623a:	f6 cf       	rjmp	.-20     	; 0x6228 <vfprintf+0x37c>
    623c:	f7 01       	movw	r30, r14
    623e:	86 81       	ldd	r24, Z+6	; 0x06
    6240:	97 81       	ldd	r25, Z+7	; 0x07
    6242:	02 c0       	rjmp	.+4      	; 0x6248 <vfprintf+0x39c>
    6244:	8f ef       	ldi	r24, 0xFF	; 255
    6246:	9f ef       	ldi	r25, 0xFF	; 255
    6248:	2c 96       	adiw	r28, 0x0c	; 12
    624a:	e2 e1       	ldi	r30, 0x12	; 18
    624c:	0c 94 79 32 	jmp	0x64f2	; 0x64f2 <__epilogue_restores__>

00006250 <__eerd_word_m32>:
    6250:	a8 e1       	ldi	r26, 0x18	; 24
    6252:	b0 e0       	ldi	r27, 0x00	; 0
    6254:	42 e0       	ldi	r20, 0x02	; 2
    6256:	50 e0       	ldi	r21, 0x00	; 0
    6258:	0c 94 de 31 	jmp	0x63bc	; 0x63bc <__eerd_blraw_m32>

0000625c <__eewr_word_m32>:
    625c:	0e 94 ec 31 	call	0x63d8	; 0x63d8 <__eewr_byte_m32>
    6260:	27 2f       	mov	r18, r23
    6262:	0c 94 ed 31 	jmp	0x63da	; 0x63da <__eewr_r18_m32>

00006266 <__ctype_isfalse>:
    6266:	99 27       	eor	r25, r25
    6268:	88 27       	eor	r24, r24

0000626a <__ctype_istrue>:
    626a:	08 95       	ret

0000626c <strnlen_P>:
    626c:	fc 01       	movw	r30, r24
    626e:	05 90       	lpm	r0, Z+
    6270:	61 50       	subi	r22, 0x01	; 1
    6272:	70 40       	sbci	r23, 0x00	; 0
    6274:	01 10       	cpse	r0, r1
    6276:	d8 f7       	brcc	.-10     	; 0x626e <strnlen_P+0x2>
    6278:	80 95       	com	r24
    627a:	90 95       	com	r25
    627c:	8e 0f       	add	r24, r30
    627e:	9f 1f       	adc	r25, r31
    6280:	08 95       	ret

00006282 <strnlen>:
    6282:	fc 01       	movw	r30, r24
    6284:	61 50       	subi	r22, 0x01	; 1
    6286:	70 40       	sbci	r23, 0x00	; 0
    6288:	01 90       	ld	r0, Z+
    628a:	01 10       	cpse	r0, r1
    628c:	d8 f7       	brcc	.-10     	; 0x6284 <strnlen+0x2>
    628e:	80 95       	com	r24
    6290:	90 95       	com	r25
    6292:	8e 0f       	add	r24, r30
    6294:	9f 1f       	adc	r25, r31
    6296:	08 95       	ret

00006298 <fputc>:
    6298:	0f 93       	push	r16
    629a:	1f 93       	push	r17
    629c:	cf 93       	push	r28
    629e:	df 93       	push	r29
    62a0:	18 2f       	mov	r17, r24
    62a2:	09 2f       	mov	r16, r25
    62a4:	eb 01       	movw	r28, r22
    62a6:	8b 81       	ldd	r24, Y+3	; 0x03
    62a8:	81 fd       	sbrc	r24, 1
    62aa:	03 c0       	rjmp	.+6      	; 0x62b2 <fputc+0x1a>
    62ac:	8f ef       	ldi	r24, 0xFF	; 255
    62ae:	9f ef       	ldi	r25, 0xFF	; 255
    62b0:	20 c0       	rjmp	.+64     	; 0x62f2 <fputc+0x5a>
    62b2:	82 ff       	sbrs	r24, 2
    62b4:	10 c0       	rjmp	.+32     	; 0x62d6 <fputc+0x3e>
    62b6:	4e 81       	ldd	r20, Y+6	; 0x06
    62b8:	5f 81       	ldd	r21, Y+7	; 0x07
    62ba:	2c 81       	ldd	r18, Y+4	; 0x04
    62bc:	3d 81       	ldd	r19, Y+5	; 0x05
    62be:	42 17       	cp	r20, r18
    62c0:	53 07       	cpc	r21, r19
    62c2:	7c f4       	brge	.+30     	; 0x62e2 <fputc+0x4a>
    62c4:	e8 81       	ld	r30, Y
    62c6:	f9 81       	ldd	r31, Y+1	; 0x01
    62c8:	9f 01       	movw	r18, r30
    62ca:	2f 5f       	subi	r18, 0xFF	; 255
    62cc:	3f 4f       	sbci	r19, 0xFF	; 255
    62ce:	39 83       	std	Y+1, r19	; 0x01
    62d0:	28 83       	st	Y, r18
    62d2:	10 83       	st	Z, r17
    62d4:	06 c0       	rjmp	.+12     	; 0x62e2 <fputc+0x4a>
    62d6:	e8 85       	ldd	r30, Y+8	; 0x08
    62d8:	f9 85       	ldd	r31, Y+9	; 0x09
    62da:	81 2f       	mov	r24, r17
    62dc:	09 95       	icall
    62de:	89 2b       	or	r24, r25
    62e0:	29 f7       	brne	.-54     	; 0x62ac <fputc+0x14>
    62e2:	2e 81       	ldd	r18, Y+6	; 0x06
    62e4:	3f 81       	ldd	r19, Y+7	; 0x07
    62e6:	2f 5f       	subi	r18, 0xFF	; 255
    62e8:	3f 4f       	sbci	r19, 0xFF	; 255
    62ea:	3f 83       	std	Y+7, r19	; 0x07
    62ec:	2e 83       	std	Y+6, r18	; 0x06
    62ee:	81 2f       	mov	r24, r17
    62f0:	90 2f       	mov	r25, r16
    62f2:	df 91       	pop	r29
    62f4:	cf 91       	pop	r28
    62f6:	1f 91       	pop	r17
    62f8:	0f 91       	pop	r16
    62fa:	08 95       	ret

000062fc <__ultoa_invert>:
    62fc:	fa 01       	movw	r30, r20
    62fe:	aa 27       	eor	r26, r26
    6300:	28 30       	cpi	r18, 0x08	; 8
    6302:	51 f1       	breq	.+84     	; 0x6358 <__ultoa_invert+0x5c>
    6304:	20 31       	cpi	r18, 0x10	; 16
    6306:	81 f1       	breq	.+96     	; 0x6368 <__ultoa_invert+0x6c>
    6308:	e8 94       	clt
    630a:	6f 93       	push	r22
    630c:	6e 7f       	andi	r22, 0xFE	; 254
    630e:	6e 5f       	subi	r22, 0xFE	; 254
    6310:	7f 4f       	sbci	r23, 0xFF	; 255
    6312:	8f 4f       	sbci	r24, 0xFF	; 255
    6314:	9f 4f       	sbci	r25, 0xFF	; 255
    6316:	af 4f       	sbci	r26, 0xFF	; 255
    6318:	b1 e0       	ldi	r27, 0x01	; 1
    631a:	3e d0       	rcall	.+124    	; 0x6398 <__ultoa_invert+0x9c>
    631c:	b4 e0       	ldi	r27, 0x04	; 4
    631e:	3c d0       	rcall	.+120    	; 0x6398 <__ultoa_invert+0x9c>
    6320:	67 0f       	add	r22, r23
    6322:	78 1f       	adc	r23, r24
    6324:	89 1f       	adc	r24, r25
    6326:	9a 1f       	adc	r25, r26
    6328:	a1 1d       	adc	r26, r1
    632a:	68 0f       	add	r22, r24
    632c:	79 1f       	adc	r23, r25
    632e:	8a 1f       	adc	r24, r26
    6330:	91 1d       	adc	r25, r1
    6332:	a1 1d       	adc	r26, r1
    6334:	6a 0f       	add	r22, r26
    6336:	71 1d       	adc	r23, r1
    6338:	81 1d       	adc	r24, r1
    633a:	91 1d       	adc	r25, r1
    633c:	a1 1d       	adc	r26, r1
    633e:	20 d0       	rcall	.+64     	; 0x6380 <__ultoa_invert+0x84>
    6340:	09 f4       	brne	.+2      	; 0x6344 <__ultoa_invert+0x48>
    6342:	68 94       	set
    6344:	3f 91       	pop	r19
    6346:	2a e0       	ldi	r18, 0x0A	; 10
    6348:	26 9f       	mul	r18, r22
    634a:	11 24       	eor	r1, r1
    634c:	30 19       	sub	r19, r0
    634e:	30 5d       	subi	r19, 0xD0	; 208
    6350:	31 93       	st	Z+, r19
    6352:	de f6       	brtc	.-74     	; 0x630a <__ultoa_invert+0xe>
    6354:	cf 01       	movw	r24, r30
    6356:	08 95       	ret
    6358:	46 2f       	mov	r20, r22
    635a:	47 70       	andi	r20, 0x07	; 7
    635c:	40 5d       	subi	r20, 0xD0	; 208
    635e:	41 93       	st	Z+, r20
    6360:	b3 e0       	ldi	r27, 0x03	; 3
    6362:	0f d0       	rcall	.+30     	; 0x6382 <__ultoa_invert+0x86>
    6364:	c9 f7       	brne	.-14     	; 0x6358 <__ultoa_invert+0x5c>
    6366:	f6 cf       	rjmp	.-20     	; 0x6354 <__ultoa_invert+0x58>
    6368:	46 2f       	mov	r20, r22
    636a:	4f 70       	andi	r20, 0x0F	; 15
    636c:	40 5d       	subi	r20, 0xD0	; 208
    636e:	4a 33       	cpi	r20, 0x3A	; 58
    6370:	18 f0       	brcs	.+6      	; 0x6378 <__ultoa_invert+0x7c>
    6372:	49 5d       	subi	r20, 0xD9	; 217
    6374:	31 fd       	sbrc	r19, 1
    6376:	40 52       	subi	r20, 0x20	; 32
    6378:	41 93       	st	Z+, r20
    637a:	02 d0       	rcall	.+4      	; 0x6380 <__ultoa_invert+0x84>
    637c:	a9 f7       	brne	.-22     	; 0x6368 <__ultoa_invert+0x6c>
    637e:	ea cf       	rjmp	.-44     	; 0x6354 <__ultoa_invert+0x58>
    6380:	b4 e0       	ldi	r27, 0x04	; 4
    6382:	a6 95       	lsr	r26
    6384:	97 95       	ror	r25
    6386:	87 95       	ror	r24
    6388:	77 95       	ror	r23
    638a:	67 95       	ror	r22
    638c:	ba 95       	dec	r27
    638e:	c9 f7       	brne	.-14     	; 0x6382 <__ultoa_invert+0x86>
    6390:	00 97       	sbiw	r24, 0x00	; 0
    6392:	61 05       	cpc	r22, r1
    6394:	71 05       	cpc	r23, r1
    6396:	08 95       	ret
    6398:	9b 01       	movw	r18, r22
    639a:	ac 01       	movw	r20, r24
    639c:	0a 2e       	mov	r0, r26
    639e:	06 94       	lsr	r0
    63a0:	57 95       	ror	r21
    63a2:	47 95       	ror	r20
    63a4:	37 95       	ror	r19
    63a6:	27 95       	ror	r18
    63a8:	ba 95       	dec	r27
    63aa:	c9 f7       	brne	.-14     	; 0x639e <__ultoa_invert+0xa2>
    63ac:	62 0f       	add	r22, r18
    63ae:	73 1f       	adc	r23, r19
    63b0:	84 1f       	adc	r24, r20
    63b2:	95 1f       	adc	r25, r21
    63b4:	a0 1d       	adc	r26, r0
    63b6:	08 95       	ret

000063b8 <__eerd_block_m32>:
    63b8:	dc 01       	movw	r26, r24
    63ba:	cb 01       	movw	r24, r22

000063bc <__eerd_blraw_m32>:
    63bc:	fc 01       	movw	r30, r24
    63be:	e1 99       	sbic	0x1c, 1	; 28
    63c0:	fe cf       	rjmp	.-4      	; 0x63be <__eerd_blraw_m32+0x2>
    63c2:	06 c0       	rjmp	.+12     	; 0x63d0 <__eerd_blraw_m32+0x14>
    63c4:	ff bb       	out	0x1f, r31	; 31
    63c6:	ee bb       	out	0x1e, r30	; 30
    63c8:	e0 9a       	sbi	0x1c, 0	; 28
    63ca:	31 96       	adiw	r30, 0x01	; 1
    63cc:	0d b2       	in	r0, 0x1d	; 29
    63ce:	0d 92       	st	X+, r0
    63d0:	41 50       	subi	r20, 0x01	; 1
    63d2:	50 40       	sbci	r21, 0x00	; 0
    63d4:	b8 f7       	brcc	.-18     	; 0x63c4 <__eerd_blraw_m32+0x8>
    63d6:	08 95       	ret

000063d8 <__eewr_byte_m32>:
    63d8:	26 2f       	mov	r18, r22

000063da <__eewr_r18_m32>:
    63da:	e1 99       	sbic	0x1c, 1	; 28
    63dc:	fe cf       	rjmp	.-4      	; 0x63da <__eewr_r18_m32>
    63de:	9f bb       	out	0x1f, r25	; 31
    63e0:	8e bb       	out	0x1e, r24	; 30
    63e2:	2d bb       	out	0x1d, r18	; 29
    63e4:	0f b6       	in	r0, 0x3f	; 63
    63e6:	f8 94       	cli
    63e8:	e2 9a       	sbi	0x1c, 2	; 28
    63ea:	e1 9a       	sbi	0x1c, 1	; 28
    63ec:	0f be       	out	0x3f, r0	; 63
    63ee:	01 96       	adiw	r24, 0x01	; 1
    63f0:	08 95       	ret

000063f2 <__mulsi3>:
    63f2:	db 01       	movw	r26, r22
    63f4:	8f 93       	push	r24
    63f6:	9f 93       	push	r25
    63f8:	0e 94 4a 32 	call	0x6494	; 0x6494 <__muluhisi3>
    63fc:	bf 91       	pop	r27
    63fe:	af 91       	pop	r26
    6400:	a2 9f       	mul	r26, r18
    6402:	80 0d       	add	r24, r0
    6404:	91 1d       	adc	r25, r1
    6406:	a3 9f       	mul	r26, r19
    6408:	90 0d       	add	r25, r0
    640a:	b2 9f       	mul	r27, r18
    640c:	90 0d       	add	r25, r0
    640e:	11 24       	eor	r1, r1
    6410:	08 95       	ret

00006412 <__udivmodsi4>:
    6412:	a1 e2       	ldi	r26, 0x21	; 33
    6414:	1a 2e       	mov	r1, r26
    6416:	aa 1b       	sub	r26, r26
    6418:	bb 1b       	sub	r27, r27
    641a:	fd 01       	movw	r30, r26
    641c:	0d c0       	rjmp	.+26     	; 0x6438 <__udivmodsi4_ep>

0000641e <__udivmodsi4_loop>:
    641e:	aa 1f       	adc	r26, r26
    6420:	bb 1f       	adc	r27, r27
    6422:	ee 1f       	adc	r30, r30
    6424:	ff 1f       	adc	r31, r31
    6426:	a2 17       	cp	r26, r18
    6428:	b3 07       	cpc	r27, r19
    642a:	e4 07       	cpc	r30, r20
    642c:	f5 07       	cpc	r31, r21
    642e:	20 f0       	brcs	.+8      	; 0x6438 <__udivmodsi4_ep>
    6430:	a2 1b       	sub	r26, r18
    6432:	b3 0b       	sbc	r27, r19
    6434:	e4 0b       	sbc	r30, r20
    6436:	f5 0b       	sbc	r31, r21

00006438 <__udivmodsi4_ep>:
    6438:	66 1f       	adc	r22, r22
    643a:	77 1f       	adc	r23, r23
    643c:	88 1f       	adc	r24, r24
    643e:	99 1f       	adc	r25, r25
    6440:	1a 94       	dec	r1
    6442:	69 f7       	brne	.-38     	; 0x641e <__udivmodsi4_loop>
    6444:	60 95       	com	r22
    6446:	70 95       	com	r23
    6448:	80 95       	com	r24
    644a:	90 95       	com	r25
    644c:	9b 01       	movw	r18, r22
    644e:	ac 01       	movw	r20, r24
    6450:	bd 01       	movw	r22, r26
    6452:	cf 01       	movw	r24, r30
    6454:	08 95       	ret

00006456 <__divmodsi4>:
    6456:	05 2e       	mov	r0, r21
    6458:	97 fb       	bst	r25, 7
    645a:	1e f4       	brtc	.+6      	; 0x6462 <__divmodsi4+0xc>
    645c:	00 94       	com	r0
    645e:	0e 94 42 32 	call	0x6484	; 0x6484 <__negsi2>
    6462:	57 fd       	sbrc	r21, 7
    6464:	07 d0       	rcall	.+14     	; 0x6474 <__divmodsi4_neg2>
    6466:	0e 94 09 32 	call	0x6412	; 0x6412 <__udivmodsi4>
    646a:	07 fc       	sbrc	r0, 7
    646c:	03 d0       	rcall	.+6      	; 0x6474 <__divmodsi4_neg2>
    646e:	4e f4       	brtc	.+18     	; 0x6482 <__divmodsi4_exit>
    6470:	0c 94 42 32 	jmp	0x6484	; 0x6484 <__negsi2>

00006474 <__divmodsi4_neg2>:
    6474:	50 95       	com	r21
    6476:	40 95       	com	r20
    6478:	30 95       	com	r19
    647a:	21 95       	neg	r18
    647c:	3f 4f       	sbci	r19, 0xFF	; 255
    647e:	4f 4f       	sbci	r20, 0xFF	; 255
    6480:	5f 4f       	sbci	r21, 0xFF	; 255

00006482 <__divmodsi4_exit>:
    6482:	08 95       	ret

00006484 <__negsi2>:
    6484:	90 95       	com	r25
    6486:	80 95       	com	r24
    6488:	70 95       	com	r23
    648a:	61 95       	neg	r22
    648c:	7f 4f       	sbci	r23, 0xFF	; 255
    648e:	8f 4f       	sbci	r24, 0xFF	; 255
    6490:	9f 4f       	sbci	r25, 0xFF	; 255
    6492:	08 95       	ret

00006494 <__muluhisi3>:
    6494:	0e 94 94 32 	call	0x6528	; 0x6528 <__umulhisi3>
    6498:	a5 9f       	mul	r26, r21
    649a:	90 0d       	add	r25, r0
    649c:	b4 9f       	mul	r27, r20
    649e:	90 0d       	add	r25, r0
    64a0:	a4 9f       	mul	r26, r20
    64a2:	80 0d       	add	r24, r0
    64a4:	91 1d       	adc	r25, r1
    64a6:	11 24       	eor	r1, r1
    64a8:	08 95       	ret

000064aa <__mulshisi3>:
    64aa:	b7 ff       	sbrs	r27, 7
    64ac:	0c 94 4a 32 	jmp	0x6494	; 0x6494 <__muluhisi3>

000064b0 <__mulohisi3>:
    64b0:	0e 94 4a 32 	call	0x6494	; 0x6494 <__muluhisi3>
    64b4:	82 1b       	sub	r24, r18
    64b6:	93 0b       	sbc	r25, r19
    64b8:	08 95       	ret

000064ba <__prologue_saves__>:
    64ba:	2f 92       	push	r2
    64bc:	3f 92       	push	r3
    64be:	4f 92       	push	r4
    64c0:	5f 92       	push	r5
    64c2:	6f 92       	push	r6
    64c4:	7f 92       	push	r7
    64c6:	8f 92       	push	r8
    64c8:	9f 92       	push	r9
    64ca:	af 92       	push	r10
    64cc:	bf 92       	push	r11
    64ce:	cf 92       	push	r12
    64d0:	df 92       	push	r13
    64d2:	ef 92       	push	r14
    64d4:	ff 92       	push	r15
    64d6:	0f 93       	push	r16
    64d8:	1f 93       	push	r17
    64da:	cf 93       	push	r28
    64dc:	df 93       	push	r29
    64de:	cd b7       	in	r28, 0x3d	; 61
    64e0:	de b7       	in	r29, 0x3e	; 62
    64e2:	ca 1b       	sub	r28, r26
    64e4:	db 0b       	sbc	r29, r27
    64e6:	0f b6       	in	r0, 0x3f	; 63
    64e8:	f8 94       	cli
    64ea:	de bf       	out	0x3e, r29	; 62
    64ec:	0f be       	out	0x3f, r0	; 63
    64ee:	cd bf       	out	0x3d, r28	; 61
    64f0:	09 94       	ijmp

000064f2 <__epilogue_restores__>:
    64f2:	2a 88       	ldd	r2, Y+18	; 0x12
    64f4:	39 88       	ldd	r3, Y+17	; 0x11
    64f6:	48 88       	ldd	r4, Y+16	; 0x10
    64f8:	5f 84       	ldd	r5, Y+15	; 0x0f
    64fa:	6e 84       	ldd	r6, Y+14	; 0x0e
    64fc:	7d 84       	ldd	r7, Y+13	; 0x0d
    64fe:	8c 84       	ldd	r8, Y+12	; 0x0c
    6500:	9b 84       	ldd	r9, Y+11	; 0x0b
    6502:	aa 84       	ldd	r10, Y+10	; 0x0a
    6504:	b9 84       	ldd	r11, Y+9	; 0x09
    6506:	c8 84       	ldd	r12, Y+8	; 0x08
    6508:	df 80       	ldd	r13, Y+7	; 0x07
    650a:	ee 80       	ldd	r14, Y+6	; 0x06
    650c:	fd 80       	ldd	r15, Y+5	; 0x05
    650e:	0c 81       	ldd	r16, Y+4	; 0x04
    6510:	1b 81       	ldd	r17, Y+3	; 0x03
    6512:	aa 81       	ldd	r26, Y+2	; 0x02
    6514:	b9 81       	ldd	r27, Y+1	; 0x01
    6516:	ce 0f       	add	r28, r30
    6518:	d1 1d       	adc	r29, r1
    651a:	0f b6       	in	r0, 0x3f	; 63
    651c:	f8 94       	cli
    651e:	de bf       	out	0x3e, r29	; 62
    6520:	0f be       	out	0x3f, r0	; 63
    6522:	cd bf       	out	0x3d, r28	; 61
    6524:	ed 01       	movw	r28, r26
    6526:	08 95       	ret

00006528 <__umulhisi3>:
    6528:	a2 9f       	mul	r26, r18
    652a:	b0 01       	movw	r22, r0
    652c:	b3 9f       	mul	r27, r19
    652e:	c0 01       	movw	r24, r0
    6530:	a3 9f       	mul	r26, r19
    6532:	70 0d       	add	r23, r0
    6534:	81 1d       	adc	r24, r1
    6536:	11 24       	eor	r1, r1
    6538:	91 1d       	adc	r25, r1
    653a:	b2 9f       	mul	r27, r18
    653c:	70 0d       	add	r23, r0
    653e:	81 1d       	adc	r24, r1
    6540:	11 24       	eor	r1, r1
    6542:	91 1d       	adc	r25, r1
    6544:	08 95       	ret

00006546 <_exit>:
    6546:	f8 94       	cli

00006548 <__stop_program>:
    6548:	ff cf       	rjmp	.-2      	; 0x6548 <__stop_program>
