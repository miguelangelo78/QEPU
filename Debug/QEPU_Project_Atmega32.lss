
QEPU_Project_Atmega32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004e7c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000a0  00800060  00004e7c  00004f30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800100  00800100  00004fd0  2**0
                  ALLOC
  3 .eeprom       00000002  00810000  00810000  00004fd0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  00004fd2  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000288  00000000  00000000  0000502e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00008c14  00000000  00000000  000052b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fbd  00000000  00000000  0000deca  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ea0  00000000  00000000  0000ee87  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000f00  00000000  00000000  0000fd28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000bc0  00000000  00000000  00010c28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004c9c  00000000  00000000  000117e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002b8  00000000  00000000  00016484  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c8 00 	jmp	0x190	; 0x190 <__ctors_end>
       4:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
       8:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
       c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      10:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      14:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      18:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      1c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      20:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      24:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      28:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      2c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      30:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      34:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      38:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      3c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      40:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      44:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      48:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      4c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      50:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      54:	41 16       	cp	r4, r17
      56:	60 16       	cp	r6, r16
      58:	3c 1a       	sub	r3, r28
      5a:	3c 1a       	sub	r3, r28
      5c:	67 16       	cp	r6, r23
      5e:	3c 1a       	sub	r3, r28
      60:	3c 1a       	sub	r3, r28
      62:	3c 1a       	sub	r3, r28
      64:	68 16       	cp	r6, r24
      66:	69 16       	cp	r6, r25
      68:	3c 1a       	sub	r3, r28
      6a:	3c 1a       	sub	r3, r28
      6c:	3c 1a       	sub	r3, r28
      6e:	70 16       	cp	r7, r16
      70:	7a 16       	cp	r7, r26
      72:	84 16       	cp	r8, r20
      74:	af 16       	cp	r10, r31
      76:	da 16       	cp	r13, r26
      78:	05 17       	cp	r16, r21
      7a:	30 17       	cp	r19, r16
      7c:	5b 17       	cp	r21, r27
      7e:	86 17       	cp	r24, r22
      80:	d6 17       	cp	r29, r22
      82:	26 18       	sub	r2, r6
      84:	76 18       	sub	r7, r6
      86:	c6 18       	sub	r12, r6
      88:	3c 1a       	sub	r3, r28
      8a:	3c 1a       	sub	r3, r28
      8c:	3c 1a       	sub	r3, r28
      8e:	16 19       	sub	r17, r6
      90:	66 19       	sub	r22, r6
      92:	b6 19       	sub	r27, r6
      94:	e3 19       	sub	r30, r3
      96:	10 1a       	sub	r1, r16
      98:	08 4a       	sbci	r16, 0xA8	; 168
      9a:	d7 3b       	cpi	r29, 0xB7	; 183
      9c:	3b ce       	rjmp	.-906    	; 0xfffffd14 <__eeprom_end+0xff7efd12>
      9e:	01 6e       	ori	r16, 0xE1	; 225
      a0:	84 bc       	out	0x24, r8	; 36
      a2:	bf fd       	.word	0xfdbf	; ????
      a4:	c1 2f       	mov	r28, r17
      a6:	3d 6c       	ori	r19, 0xCD	; 205
      a8:	74 31       	cpi	r23, 0x14	; 20
      aa:	9a bd       	out	0x2a, r25	; 42
      ac:	56 83       	std	Z+6, r21	; 0x06
      ae:	3d da       	rcall	.-2950   	; 0xfffff52a <__eeprom_end+0xff7ef528>
      b0:	3d 00       	.word	0x003d	; ????
      b2:	c7 7f       	andi	r28, 0xF7	; 247
      b4:	11 be       	out	0x31, r1	; 49
      b6:	d9 e4       	ldi	r29, 0x49	; 73
      b8:	bb 4c       	sbci	r27, 0xCB	; 203
      ba:	3e 91       	ld	r19, -X
      bc:	6b aa       	std	Y+51, r6	; 0x33
      be:	aa be       	out	0x3a, r10	; 58
      c0:	00 00       	nop
      c2:	00 80       	ld	r0, Z
      c4:	3f 07       	cpc	r19, r31
      c6:	63 42       	sbci	r22, 0x23	; 35
      c8:	36 b7       	in	r19, 0x36	; 54
      ca:	9b d8       	rcall	.-3786   	; 0xfffff202 <__eeprom_end+0xff7ef200>
      cc:	a7 1a       	sub	r10, r23
      ce:	39 68       	ori	r19, 0x89	; 137
      d0:	56 18       	sub	r5, r6
      d2:	ae ba       	out	0x1e, r10	; 30
      d4:	ab 55       	subi	r26, 0x5B	; 91
      d6:	8c 1d       	adc	r24, r12
      d8:	3c b7       	in	r19, 0x3c	; 60
      da:	cc 57       	subi	r28, 0x7C	; 124
      dc:	63 bd       	out	0x23, r22	; 35
      de:	6d ed       	ldi	r22, 0xDD	; 221
      e0:	fd 75       	andi	r31, 0x5D	; 93
      e2:	3e f6       	brtc	.-114    	; 0x72 <__SREG__+0x33>
      e4:	17 72       	andi	r17, 0x27	; 39
      e6:	31 bf       	out	0x31, r19	; 49
      e8:	00 00       	nop
      ea:	00 80       	ld	r0, Z
      ec:	3f 07       	cpc	r19, r31
      ee:	2c 7a       	andi	r18, 0xAC	; 172
      f0:	a5 ba       	out	0x15, r10	; 21
      f2:	6c c5       	rjmp	.+2776   	; 0xbcc <_ZN5Gates8ampl2vecEiPiS0_+0xea>
      f4:	90 da       	rcall	.-2784   	; 0xfffff616 <__eeprom_end+0xff7ef614>
      f6:	3b 93       	.word	0x933b	; ????
      f8:	65 fc       	sbrc	r6, 5
      fa:	8b bc       	out	0x2b, r8	; 43
      fc:	53 f8       	bld	r5, 3
      fe:	10 fd       	sbrc	r17, 0
     100:	3c 56       	subi	r19, 0x6C	; 108
     102:	92 83       	std	Z+2, r25	; 0x02
     104:	4d bd       	out	0x2d, r20	; 45
     106:	87 9d       	mul	r24, r7
     108:	3a b6       	in	r3, 0x3a	; 58
     10a:	3d cb       	rjmp	.-2438   	; 0xfffff786 <__eeprom_end+0xff7ef784>
     10c:	c9 bf       	out	0x39, r28	; 57
     10e:	5b be       	out	0x3b, r5	; 59
     110:	73 da       	rcall	.-2842   	; 0xfffff5f8 <__eeprom_end+0xff7ef5f6>
     112:	0f c9       	rjmp	.-3554   	; 0xfffff332 <__eeprom_end+0xff7ef330>
     114:	3f 05       	cpc	r19, r15
     116:	a8 4c       	sbci	r26, 0xC8	; 200
     118:	cd b2       	in	r12, 0x1d	; 29
     11a:	d4 4e       	sbci	r29, 0xE4	; 228
     11c:	b9 38       	cpi	r27, 0x89	; 137
     11e:	36 a9       	ldd	r19, Z+54	; 0x36
     120:	02 0c       	add	r0, r2
     122:	50 b9       	out	0x00, r21	; 0
     124:	91 86       	std	Z+9, r9	; 0x09
     126:	88 08       	sbc	r8, r8
     128:	3c a6       	std	Y+44, r3	; 0x2c
     12a:	aa aa       	std	Y+50, r10	; 0x32
     12c:	2a be       	out	0x3a, r2	; 58
     12e:	00 00       	nop
     130:	00 80       	ld	r0, Z
     132:	3f 08       	sbc	r3, r15
     134:	00 00       	nop
     136:	00 be       	out	0x30, r0	; 48
     138:	92 24       	eor	r9, r2
     13a:	49 12       	cpse	r4, r25
     13c:	3e ab       	std	Y+54, r19	; 0x36
     13e:	aa aa       	std	Y+50, r10	; 0x32
     140:	2a be       	out	0x3a, r2	; 58
     142:	cd cc       	rjmp	.-1638   	; 0xfffffade <__eeprom_end+0xff7efadc>
     144:	cc 4c       	sbci	r28, 0xCC	; 204
     146:	3e 00       	.word	0x003e	; ????
     148:	00 00       	nop
     14a:	80 be       	out	0x30, r8	; 48
     14c:	ab aa       	std	Y+51, r10	; 0x33
     14e:	aa aa       	std	Y+50, r10	; 0x32
     150:	3e 00       	.word	0x003e	; ????
     152:	00 00       	nop
     154:	00 bf       	out	0x30, r16	; 48
     156:	00 00       	nop
     158:	00 80       	ld	r0, Z
     15a:	3f 00       	.word	0x003f	; ????
     15c:	00 00       	nop
     15e:	00 00       	nop
     160:	08 41       	sbci	r16, 0x18	; 24
     162:	78 d3       	rcall	.+1776   	; 0x854 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x1a2>
     164:	bb 43       	sbci	r27, 0x3B	; 59
     166:	87 d1       	rcall	.+782    	; 0x476 <_ZN6EEProm4readEj+0x4a>
     168:	13 3d       	cpi	r17, 0xD3	; 211
     16a:	19 0e       	add	r1, r25
     16c:	3c c3       	rjmp	.+1656   	; 0x7e6 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x134>
     16e:	bd 42       	sbci	r27, 0x2D	; 45
     170:	82 ad       	ldd	r24, Z+58	; 0x3a
     172:	2b 3e       	cpi	r18, 0xEB	; 235
     174:	68 ec       	ldi	r22, 0xC8	; 200
     176:	82 76       	andi	r24, 0x62	; 98
     178:	be d9       	rcall	.-3204   	; 0xfffff4f6 <__eeprom_end+0xff7ef4f4>
     17a:	8f e1       	ldi	r24, 0x1F	; 31
     17c:	a9 3e       	cpi	r26, 0xE9	; 233
     17e:	4c 80       	ldd	r4, Y+4	; 0x04
     180:	ef ff       	.word	0xffef	; ????
     182:	be 01       	movw	r22, r28
     184:	c4 ff       	sbrs	r28, 4
     186:	7f 3f       	cpi	r23, 0xFF	; 255
     188:	00 00       	nop
     18a:	00 00       	nop
	...

0000018e <__ctors_start>:
     18e:	d6 13       	cpse	r29, r22

00000190 <__ctors_end>:
     190:	11 24       	eor	r1, r1
     192:	1f be       	out	0x3f, r1	; 63
     194:	cf e5       	ldi	r28, 0x5F	; 95
     196:	d8 e0       	ldi	r29, 0x08	; 8
     198:	de bf       	out	0x3e, r29	; 62
     19a:	cd bf       	out	0x3d, r28	; 61

0000019c <__do_copy_data>:
     19c:	11 e0       	ldi	r17, 0x01	; 1
     19e:	a0 e6       	ldi	r26, 0x60	; 96
     1a0:	b0 e0       	ldi	r27, 0x00	; 0
     1a2:	ec e7       	ldi	r30, 0x7C	; 124
     1a4:	fe e4       	ldi	r31, 0x4E	; 78
     1a6:	02 c0       	rjmp	.+4      	; 0x1ac <__do_copy_data+0x10>
     1a8:	05 90       	lpm	r0, Z+
     1aa:	0d 92       	st	X+, r0
     1ac:	a0 30       	cpi	r26, 0x00	; 0
     1ae:	b1 07       	cpc	r27, r17
     1b0:	d9 f7       	brne	.-10     	; 0x1a8 <__do_copy_data+0xc>

000001b2 <__do_clear_bss>:
     1b2:	21 e0       	ldi	r18, 0x01	; 1
     1b4:	a0 e0       	ldi	r26, 0x00	; 0
     1b6:	b1 e0       	ldi	r27, 0x01	; 1
     1b8:	01 c0       	rjmp	.+2      	; 0x1bc <.do_clear_bss_start>

000001ba <.do_clear_bss_loop>:
     1ba:	1d 92       	st	X+, r1

000001bc <.do_clear_bss_start>:
     1bc:	a8 30       	cpi	r26, 0x08	; 8
     1be:	b2 07       	cpc	r27, r18
     1c0:	e1 f7       	brne	.-8      	; 0x1ba <.do_clear_bss_loop>

000001c2 <__do_global_ctors>:
     1c2:	11 e0       	ldi	r17, 0x01	; 1
     1c4:	c0 e9       	ldi	r28, 0x90	; 144
     1c6:	d1 e0       	ldi	r29, 0x01	; 1
     1c8:	04 c0       	rjmp	.+8      	; 0x1d2 <__do_global_ctors+0x10>
     1ca:	22 97       	sbiw	r28, 0x02	; 2
     1cc:	fe 01       	movw	r30, r28
     1ce:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <__tablejump__>
     1d2:	ce 38       	cpi	r28, 0x8E	; 142
     1d4:	d1 07       	cpc	r29, r17
     1d6:	c9 f7       	brne	.-14     	; 0x1ca <__do_global_ctors+0x8>
     1d8:	0e 94 7d 1c 	call	0x38fa	; 0x38fa <main>
     1dc:	0c 94 3c 27 	jmp	0x4e78	; 0x4e78 <_exit>

000001e0 <__bad_interrupt>:
     1e0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001e4 <_ZN7ComplexC1Eff>:
     1e4:	0f 93       	push	r16
     1e6:	1f 93       	push	r17
     1e8:	fc 01       	movw	r30, r24
     1ea:	40 83       	st	Z, r20
     1ec:	51 83       	std	Z+1, r21	; 0x01
     1ee:	62 83       	std	Z+2, r22	; 0x02
     1f0:	73 83       	std	Z+3, r23	; 0x03
     1f2:	04 83       	std	Z+4, r16	; 0x04
     1f4:	15 83       	std	Z+5, r17	; 0x05
     1f6:	26 83       	std	Z+6, r18	; 0x06
     1f8:	37 83       	std	Z+7, r19	; 0x07
     1fa:	1f 91       	pop	r17
     1fc:	0f 91       	pop	r16
     1fe:	08 95       	ret

00000200 <_ZN7ComplexC1Ev>:
     200:	fc 01       	movw	r30, r24
     202:	10 82       	st	Z, r1
     204:	11 82       	std	Z+1, r1	; 0x01
     206:	12 82       	std	Z+2, r1	; 0x02
     208:	13 82       	std	Z+3, r1	; 0x03
     20a:	14 82       	std	Z+4, r1	; 0x04
     20c:	15 82       	std	Z+5, r1	; 0x05
     20e:	16 82       	std	Z+6, r1	; 0x06
     210:	17 82       	std	Z+7, r1	; 0x07
     212:	08 95       	ret

00000214 <_ZN7Complex3addES_>:
     214:	af 92       	push	r10
     216:	bf 92       	push	r11
     218:	cf 92       	push	r12
     21a:	df 92       	push	r13
     21c:	ef 92       	push	r14
     21e:	ff 92       	push	r15
     220:	0f 93       	push	r16
     222:	1f 93       	push	r17
     224:	cf 93       	push	r28
     226:	df 93       	push	r29
     228:	cd b7       	in	r28, 0x3d	; 61
     22a:	de b7       	in	r29, 0x3e	; 62
     22c:	68 97       	sbiw	r28, 0x18	; 24
     22e:	0f b6       	in	r0, 0x3f	; 63
     230:	f8 94       	cli
     232:	de bf       	out	0x3e, r29	; 62
     234:	0f be       	out	0x3f, r0	; 63
     236:	cd bf       	out	0x3d, r28	; 61
     238:	5c 01       	movw	r10, r24
     23a:	09 8b       	std	Y+17, r16	; 0x11
     23c:	1a 8b       	std	Y+18, r17	; 0x12
     23e:	2b 8b       	std	Y+19, r18	; 0x13
     240:	3c 8b       	std	Y+20, r19	; 0x14
     242:	4d 8b       	std	Y+21, r20	; 0x15
     244:	5e 8b       	std	Y+22, r21	; 0x16
     246:	6f 8b       	std	Y+23, r22	; 0x17
     248:	78 8f       	std	Y+24, r23	; 0x18
     24a:	2d 89       	ldd	r18, Y+21	; 0x15
     24c:	3e 89       	ldd	r19, Y+22	; 0x16
     24e:	4f 89       	ldd	r20, Y+23	; 0x17
     250:	58 8d       	ldd	r21, Y+24	; 0x18
     252:	fc 01       	movw	r30, r24
     254:	64 81       	ldd	r22, Z+4	; 0x04
     256:	75 81       	ldd	r23, Z+5	; 0x05
     258:	86 81       	ldd	r24, Z+6	; 0x06
     25a:	97 81       	ldd	r25, Z+7	; 0x07
     25c:	0e 94 c9 1c 	call	0x3992	; 0x3992 <__addsf3>
     260:	6b 01       	movw	r12, r22
     262:	7c 01       	movw	r14, r24
     264:	29 89       	ldd	r18, Y+17	; 0x11
     266:	3a 89       	ldd	r19, Y+18	; 0x12
     268:	4b 89       	ldd	r20, Y+19	; 0x13
     26a:	5c 89       	ldd	r21, Y+20	; 0x14
     26c:	f5 01       	movw	r30, r10
     26e:	60 81       	ld	r22, Z
     270:	71 81       	ldd	r23, Z+1	; 0x01
     272:	82 81       	ldd	r24, Z+2	; 0x02
     274:	93 81       	ldd	r25, Z+3	; 0x03
     276:	0e 94 c9 1c 	call	0x3992	; 0x3992 <__addsf3>
     27a:	ab 01       	movw	r20, r22
     27c:	bc 01       	movw	r22, r24
     27e:	97 01       	movw	r18, r14
     280:	86 01       	movw	r16, r12
     282:	ce 01       	movw	r24, r28
     284:	01 96       	adiw	r24, 0x01	; 1
     286:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     28a:	88 e0       	ldi	r24, 0x08	; 8
     28c:	fe 01       	movw	r30, r28
     28e:	31 96       	adiw	r30, 0x01	; 1
     290:	de 01       	movw	r26, r28
     292:	19 96       	adiw	r26, 0x09	; 9
     294:	01 90       	ld	r0, Z+
     296:	0d 92       	st	X+, r0
     298:	8a 95       	dec	r24
     29a:	e1 f7       	brne	.-8      	; 0x294 <_ZN7Complex3addES_+0x80>
     29c:	29 85       	ldd	r18, Y+9	; 0x09
     29e:	3a 85       	ldd	r19, Y+10	; 0x0a
     2a0:	4b 85       	ldd	r20, Y+11	; 0x0b
     2a2:	5c 85       	ldd	r21, Y+12	; 0x0c
     2a4:	6d 85       	ldd	r22, Y+13	; 0x0d
     2a6:	7e 85       	ldd	r23, Y+14	; 0x0e
     2a8:	8f 85       	ldd	r24, Y+15	; 0x0f
     2aa:	98 89       	ldd	r25, Y+16	; 0x10
     2ac:	68 96       	adiw	r28, 0x18	; 24
     2ae:	0f b6       	in	r0, 0x3f	; 63
     2b0:	f8 94       	cli
     2b2:	de bf       	out	0x3e, r29	; 62
     2b4:	0f be       	out	0x3f, r0	; 63
     2b6:	cd bf       	out	0x3d, r28	; 61
     2b8:	df 91       	pop	r29
     2ba:	cf 91       	pop	r28
     2bc:	1f 91       	pop	r17
     2be:	0f 91       	pop	r16
     2c0:	ff 90       	pop	r15
     2c2:	ef 90       	pop	r14
     2c4:	df 90       	pop	r13
     2c6:	cf 90       	pop	r12
     2c8:	bf 90       	pop	r11
     2ca:	af 90       	pop	r10
     2cc:	08 95       	ret

000002ce <_ZN7Complex3mulES_>:
     2ce:	4f 92       	push	r4
     2d0:	5f 92       	push	r5
     2d2:	6f 92       	push	r6
     2d4:	7f 92       	push	r7
     2d6:	8f 92       	push	r8
     2d8:	9f 92       	push	r9
     2da:	af 92       	push	r10
     2dc:	bf 92       	push	r11
     2de:	cf 92       	push	r12
     2e0:	df 92       	push	r13
     2e2:	ef 92       	push	r14
     2e4:	ff 92       	push	r15
     2e6:	0f 93       	push	r16
     2e8:	1f 93       	push	r17
     2ea:	cf 93       	push	r28
     2ec:	df 93       	push	r29
     2ee:	cd b7       	in	r28, 0x3d	; 61
     2f0:	de b7       	in	r29, 0x3e	; 62
     2f2:	a0 97       	sbiw	r28, 0x20	; 32
     2f4:	0f b6       	in	r0, 0x3f	; 63
     2f6:	f8 94       	cli
     2f8:	de bf       	out	0x3e, r29	; 62
     2fa:	0f be       	out	0x3f, r0	; 63
     2fc:	cd bf       	out	0x3d, r28	; 61
     2fe:	09 8b       	std	Y+17, r16	; 0x11
     300:	1a 8b       	std	Y+18, r17	; 0x12
     302:	2b 8b       	std	Y+19, r18	; 0x13
     304:	3c 8b       	std	Y+20, r19	; 0x14
     306:	4d 8b       	std	Y+21, r20	; 0x15
     308:	5e 8b       	std	Y+22, r21	; 0x16
     30a:	6f 8b       	std	Y+23, r22	; 0x17
     30c:	78 8f       	std	Y+24, r23	; 0x18
     30e:	89 88       	ldd	r8, Y+17	; 0x11
     310:	9a 88       	ldd	r9, Y+18	; 0x12
     312:	ab 88       	ldd	r10, Y+19	; 0x13
     314:	bc 88       	ldd	r11, Y+20	; 0x14
     316:	2d 89       	ldd	r18, Y+21	; 0x15
     318:	3e 89       	ldd	r19, Y+22	; 0x16
     31a:	4f 89       	ldd	r20, Y+23	; 0x17
     31c:	58 8d       	ldd	r21, Y+24	; 0x18
     31e:	2d 8f       	std	Y+29, r18	; 0x1d
     320:	3e 8f       	std	Y+30, r19	; 0x1e
     322:	4f 8f       	std	Y+31, r20	; 0x1f
     324:	58 a3       	std	Y+32, r21	; 0x20
     326:	fc 01       	movw	r30, r24
     328:	c0 80       	ld	r12, Z
     32a:	d1 80       	ldd	r13, Z+1	; 0x01
     32c:	e2 80       	ldd	r14, Z+2	; 0x02
     32e:	f3 80       	ldd	r15, Z+3	; 0x03
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	29 8f       	std	Y+25, r18	; 0x19
     33a:	3a 8f       	std	Y+26, r19	; 0x1a
     33c:	4b 8f       	std	Y+27, r20	; 0x1b
     33e:	5c 8f       	std	Y+28, r21	; 0x1c
     340:	2d 8d       	ldd	r18, Y+29	; 0x1d
     342:	3e 8d       	ldd	r19, Y+30	; 0x1e
     344:	4f 8d       	ldd	r20, Y+31	; 0x1f
     346:	58 a1       	ldd	r21, Y+32	; 0x20
     348:	c7 01       	movw	r24, r14
     34a:	b6 01       	movw	r22, r12
     34c:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     350:	2b 01       	movw	r4, r22
     352:	3c 01       	movw	r6, r24
     354:	a5 01       	movw	r20, r10
     356:	94 01       	movw	r18, r8
     358:	69 8d       	ldd	r22, Y+25	; 0x19
     35a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     35c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     35e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     360:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     364:	9b 01       	movw	r18, r22
     366:	ac 01       	movw	r20, r24
     368:	c3 01       	movw	r24, r6
     36a:	b2 01       	movw	r22, r4
     36c:	0e 94 c9 1c 	call	0x3992	; 0x3992 <__addsf3>
     370:	2b 01       	movw	r4, r22
     372:	3c 01       	movw	r6, r24
     374:	a5 01       	movw	r20, r10
     376:	94 01       	movw	r18, r8
     378:	c7 01       	movw	r24, r14
     37a:	b6 01       	movw	r22, r12
     37c:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     380:	6b 01       	movw	r12, r22
     382:	7c 01       	movw	r14, r24
     384:	2d 8d       	ldd	r18, Y+29	; 0x1d
     386:	3e 8d       	ldd	r19, Y+30	; 0x1e
     388:	4f 8d       	ldd	r20, Y+31	; 0x1f
     38a:	58 a1       	ldd	r21, Y+32	; 0x20
     38c:	69 8d       	ldd	r22, Y+25	; 0x19
     38e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     390:	8b 8d       	ldd	r24, Y+27	; 0x1b
     392:	9c 8d       	ldd	r25, Y+28	; 0x1c
     394:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     398:	9b 01       	movw	r18, r22
     39a:	ac 01       	movw	r20, r24
     39c:	c7 01       	movw	r24, r14
     39e:	b6 01       	movw	r22, r12
     3a0:	0e 94 c8 1c 	call	0x3990	; 0x3990 <__subsf3>
     3a4:	ab 01       	movw	r20, r22
     3a6:	bc 01       	movw	r22, r24
     3a8:	93 01       	movw	r18, r6
     3aa:	82 01       	movw	r16, r4
     3ac:	ce 01       	movw	r24, r28
     3ae:	01 96       	adiw	r24, 0x01	; 1
     3b0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     3b4:	88 e0       	ldi	r24, 0x08	; 8
     3b6:	fe 01       	movw	r30, r28
     3b8:	31 96       	adiw	r30, 0x01	; 1
     3ba:	de 01       	movw	r26, r28
     3bc:	19 96       	adiw	r26, 0x09	; 9
     3be:	01 90       	ld	r0, Z+
     3c0:	0d 92       	st	X+, r0
     3c2:	8a 95       	dec	r24
     3c4:	e1 f7       	brne	.-8      	; 0x3be <_ZN7Complex3mulES_+0xf0>
     3c6:	29 85       	ldd	r18, Y+9	; 0x09
     3c8:	3a 85       	ldd	r19, Y+10	; 0x0a
     3ca:	4b 85       	ldd	r20, Y+11	; 0x0b
     3cc:	5c 85       	ldd	r21, Y+12	; 0x0c
     3ce:	6d 85       	ldd	r22, Y+13	; 0x0d
     3d0:	7e 85       	ldd	r23, Y+14	; 0x0e
     3d2:	8f 85       	ldd	r24, Y+15	; 0x0f
     3d4:	98 89       	ldd	r25, Y+16	; 0x10
     3d6:	a0 96       	adiw	r28, 0x20	; 32
     3d8:	0f b6       	in	r0, 0x3f	; 63
     3da:	f8 94       	cli
     3dc:	de bf       	out	0x3e, r29	; 62
     3de:	0f be       	out	0x3f, r0	; 63
     3e0:	cd bf       	out	0x3d, r28	; 61
     3e2:	df 91       	pop	r29
     3e4:	cf 91       	pop	r28
     3e6:	1f 91       	pop	r17
     3e8:	0f 91       	pop	r16
     3ea:	ff 90       	pop	r15
     3ec:	ef 90       	pop	r14
     3ee:	df 90       	pop	r13
     3f0:	cf 90       	pop	r12
     3f2:	bf 90       	pop	r11
     3f4:	af 90       	pop	r10
     3f6:	9f 90       	pop	r9
     3f8:	8f 90       	pop	r8
     3fa:	7f 90       	pop	r7
     3fc:	6f 90       	pop	r6
     3fe:	5f 90       	pop	r5
     400:	4f 90       	pop	r4
     402:	08 95       	ret

00000404 <_ZN7Complex3argEv>:
     404:	fc 01       	movw	r30, r24
     406:	20 81       	ld	r18, Z
     408:	31 81       	ldd	r19, Z+1	; 0x01
     40a:	42 81       	ldd	r20, Z+2	; 0x02
     40c:	53 81       	ldd	r21, Z+3	; 0x03
     40e:	64 81       	ldd	r22, Z+4	; 0x04
     410:	75 81       	ldd	r23, Z+5	; 0x05
     412:	86 81       	ldd	r24, Z+6	; 0x06
     414:	97 81       	ldd	r25, Z+7	; 0x07
     416:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <__divsf3>
     41a:	0e 94 2d 1d 	call	0x3a5a	; 0x3a5a <atan>
     41e:	08 95       	ret

00000420 <_ZN6EEPromC1Ev>:
     420:	85 e0       	ldi	r24, 0x05	; 5
     422:	80 b9       	out	0x00, r24	; 0
     424:	81 b1       	in	r24, 0x01	; 1
     426:	8c 7f       	andi	r24, 0xFC	; 252
     428:	81 b9       	out	0x01, r24	; 1
     42a:	08 95       	ret

0000042c <_ZN6EEProm4readEj>:
     42c:	94 ea       	ldi	r25, 0xA4	; 164
     42e:	30 ea       	ldi	r19, 0xA0	; 160
     430:	24 e8       	ldi	r18, 0x84	; 132
     432:	96 bf       	out	0x36, r25	; 54
     434:	06 b6       	in	r0, 0x36	; 54
     436:	07 fe       	sbrs	r0, 7
     438:	fd cf       	rjmp	.-6      	; 0x434 <_ZN6EEProm4readEj+0x8>
     43a:	81 b1       	in	r24, 0x01	; 1
     43c:	88 7f       	andi	r24, 0xF8	; 248
     43e:	88 30       	cpi	r24, 0x08	; 8
     440:	09 f0       	breq	.+2      	; 0x444 <_ZN6EEProm4readEj+0x18>
     442:	41 c0       	rjmp	.+130    	; 0x4c6 <_ZN6EEProm4readEj+0x9a>
     444:	33 b9       	out	0x03, r19	; 3
     446:	26 bf       	out	0x36, r18	; 54
     448:	06 b6       	in	r0, 0x36	; 54
     44a:	07 fe       	sbrs	r0, 7
     44c:	fd cf       	rjmp	.-6      	; 0x448 <_ZN6EEProm4readEj+0x1c>
     44e:	81 b1       	in	r24, 0x01	; 1
     450:	88 7f       	andi	r24, 0xF8	; 248
     452:	88 31       	cpi	r24, 0x18	; 24
     454:	71 f7       	brne	.-36     	; 0x432 <_ZN6EEProm4readEj+0x6>
     456:	73 b9       	out	0x03, r23	; 3
     458:	84 e8       	ldi	r24, 0x84	; 132
     45a:	86 bf       	out	0x36, r24	; 54
     45c:	06 b6       	in	r0, 0x36	; 54
     45e:	07 fe       	sbrs	r0, 7
     460:	fd cf       	rjmp	.-6      	; 0x45c <_ZN6EEProm4readEj+0x30>
     462:	81 b1       	in	r24, 0x01	; 1
     464:	88 7f       	andi	r24, 0xF8	; 248
     466:	88 32       	cpi	r24, 0x28	; 40
     468:	81 f5       	brne	.+96     	; 0x4ca <_ZN6EEProm4readEj+0x9e>
     46a:	63 b9       	out	0x03, r22	; 3
     46c:	84 e8       	ldi	r24, 0x84	; 132
     46e:	86 bf       	out	0x36, r24	; 54
     470:	06 b6       	in	r0, 0x36	; 54
     472:	07 fe       	sbrs	r0, 7
     474:	fd cf       	rjmp	.-6      	; 0x470 <_ZN6EEProm4readEj+0x44>
     476:	81 b1       	in	r24, 0x01	; 1
     478:	88 7f       	andi	r24, 0xF8	; 248
     47a:	88 32       	cpi	r24, 0x28	; 40
     47c:	41 f5       	brne	.+80     	; 0x4ce <_ZN6EEProm4readEj+0xa2>
     47e:	84 ea       	ldi	r24, 0xA4	; 164
     480:	86 bf       	out	0x36, r24	; 54
     482:	06 b6       	in	r0, 0x36	; 54
     484:	07 fe       	sbrs	r0, 7
     486:	fd cf       	rjmp	.-6      	; 0x482 <_ZN6EEProm4readEj+0x56>
     488:	81 b1       	in	r24, 0x01	; 1
     48a:	88 7f       	andi	r24, 0xF8	; 248
     48c:	80 31       	cpi	r24, 0x10	; 16
     48e:	09 f5       	brne	.+66     	; 0x4d2 <_ZN6EEProm4readEj+0xa6>
     490:	81 ea       	ldi	r24, 0xA1	; 161
     492:	83 b9       	out	0x03, r24	; 3
     494:	84 e8       	ldi	r24, 0x84	; 132
     496:	86 bf       	out	0x36, r24	; 54
     498:	06 b6       	in	r0, 0x36	; 54
     49a:	07 fe       	sbrs	r0, 7
     49c:	fd cf       	rjmp	.-6      	; 0x498 <_ZN6EEProm4readEj+0x6c>
     49e:	81 b1       	in	r24, 0x01	; 1
     4a0:	88 7f       	andi	r24, 0xF8	; 248
     4a2:	80 34       	cpi	r24, 0x40	; 64
     4a4:	c1 f4       	brne	.+48     	; 0x4d6 <_ZN6EEProm4readEj+0xaa>
     4a6:	84 e8       	ldi	r24, 0x84	; 132
     4a8:	86 bf       	out	0x36, r24	; 54
     4aa:	06 b6       	in	r0, 0x36	; 54
     4ac:	07 fe       	sbrs	r0, 7
     4ae:	fd cf       	rjmp	.-6      	; 0x4aa <_ZN6EEProm4readEj+0x7e>
     4b0:	81 b1       	in	r24, 0x01	; 1
     4b2:	88 7f       	andi	r24, 0xF8	; 248
     4b4:	88 35       	cpi	r24, 0x58	; 88
     4b6:	89 f4       	brne	.+34     	; 0x4da <_ZN6EEProm4readEj+0xae>
     4b8:	83 b1       	in	r24, 0x03	; 3
     4ba:	94 e9       	ldi	r25, 0x94	; 148
     4bc:	96 bf       	out	0x36, r25	; 54
     4be:	06 b6       	in	r0, 0x36	; 54
     4c0:	04 fc       	sbrc	r0, 4
     4c2:	fd cf       	rjmp	.-6      	; 0x4be <_ZN6EEProm4readEj+0x92>
     4c4:	08 95       	ret
     4c6:	80 e0       	ldi	r24, 0x00	; 0
     4c8:	08 95       	ret
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	08 95       	ret
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	08 95       	ret
     4d2:	80 e0       	ldi	r24, 0x00	; 0
     4d4:	08 95       	ret
     4d6:	80 e0       	ldi	r24, 0x00	; 0
     4d8:	08 95       	ret
     4da:	80 e0       	ldi	r24, 0x00	; 0
     4dc:	08 95       	ret

000004de <_ZN6EEProm7readallEv>:
     4de:	cf 92       	push	r12
     4e0:	df 92       	push	r13
     4e2:	ef 92       	push	r14
     4e4:	ff 92       	push	r15
     4e6:	0f 93       	push	r16
     4e8:	1f 93       	push	r17
     4ea:	cf 93       	push	r28
     4ec:	df 93       	push	r29
     4ee:	cd b7       	in	r28, 0x3d	; 61
     4f0:	de b7       	in	r29, 0x3e	; 62
     4f2:	c4 56       	subi	r28, 0x64	; 100
     4f4:	d1 09       	sbc	r29, r1
     4f6:	0f b6       	in	r0, 0x3f	; 63
     4f8:	f8 94       	cli
     4fa:	de bf       	out	0x3e, r29	; 62
     4fc:	0f be       	out	0x3f, r0	; 63
     4fe:	cd bf       	out	0x3d, r28	; 61
     500:	6c 01       	movw	r12, r24
     502:	ce 01       	movw	r24, r28
     504:	01 96       	adiw	r24, 0x01	; 1
     506:	7c 01       	movw	r14, r24
     508:	00 e0       	ldi	r16, 0x00	; 0
     50a:	10 e0       	ldi	r17, 0x00	; 0
     50c:	b8 01       	movw	r22, r16
     50e:	c6 01       	movw	r24, r12
     510:	0e 94 16 02 	call	0x42c	; 0x42c <_ZN6EEProm4readEj>
     514:	f7 01       	movw	r30, r14
     516:	81 93       	st	Z+, r24
     518:	7f 01       	movw	r14, r30
     51a:	8f 3f       	cpi	r24, 0xFF	; 255
     51c:	81 f4       	brne	.+32     	; 0x53e <_ZN6EEProm7readallEv+0x60>
     51e:	32 97       	sbiw	r30, 0x02	; 2
     520:	20 81       	ld	r18, Z
     522:	2f 3f       	cpi	r18, 0xFF	; 255
     524:	61 f4       	brne	.+24     	; 0x53e <_ZN6EEProm7readallEv+0x60>
     526:	31 97       	sbiw	r30, 0x01	; 1
     528:	20 81       	ld	r18, Z
     52a:	2f 3f       	cpi	r18, 0xFF	; 255
     52c:	41 f4       	brne	.+16     	; 0x53e <_ZN6EEProm7readallEv+0x60>
     52e:	31 97       	sbiw	r30, 0x01	; 1
     530:	20 81       	ld	r18, Z
     532:	2f 3f       	cpi	r18, 0xFF	; 255
     534:	21 f4       	brne	.+8      	; 0x53e <_ZN6EEProm7readallEv+0x60>
     536:	31 97       	sbiw	r30, 0x01	; 1
     538:	80 81       	ld	r24, Z
     53a:	8f 3f       	cpi	r24, 0xFF	; 255
     53c:	19 f0       	breq	.+6      	; 0x544 <_ZN6EEProm7readallEv+0x66>
     53e:	0f 5f       	subi	r16, 0xFF	; 255
     540:	1f 4f       	sbci	r17, 0xFF	; 255
     542:	e4 cf       	rjmp	.-56     	; 0x50c <_ZN6EEProm7readallEv+0x2e>
     544:	ce 01       	movw	r24, r28
     546:	01 96       	adiw	r24, 0x01	; 1
     548:	cc 59       	subi	r28, 0x9C	; 156
     54a:	df 4f       	sbci	r29, 0xFF	; 255
     54c:	0f b6       	in	r0, 0x3f	; 63
     54e:	f8 94       	cli
     550:	de bf       	out	0x3e, r29	; 62
     552:	0f be       	out	0x3f, r0	; 63
     554:	cd bf       	out	0x3d, r28	; 61
     556:	df 91       	pop	r29
     558:	cf 91       	pop	r28
     55a:	1f 91       	pop	r17
     55c:	0f 91       	pop	r16
     55e:	ff 90       	pop	r15
     560:	ef 90       	pop	r14
     562:	df 90       	pop	r13
     564:	cf 90       	pop	r12
     566:	08 95       	ret

00000568 <_Z12print_statesiP7ComplexPc>:

Serial s;
QEPU::Utils utils;
uint16_t EEMEM randinit;

void print_states(int qb_count,Complex * vec,char* message){
     568:	ef 92       	push	r14
     56a:	ff 92       	push	r15
     56c:	0f 93       	push	r16
     56e:	1f 93       	push	r17
     570:	cf 93       	push	r28
     572:	df 93       	push	r29
     574:	7c 01       	movw	r14, r24
     576:	06 2f       	mov	r16, r22
     578:	17 2f       	mov	r17, r23
	s.writestrln(message);
     57a:	ba 01       	movw	r22, r20
     57c:	81 e0       	ldi	r24, 0x01	; 1
     57e:	91 e0       	ldi	r25, 0x01	; 1
     580:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN6Serial10writestrlnEPc>
	for(int i=0;i<qb_count;i++){
     584:	1e 14       	cp	r1, r14
     586:	1f 04       	cpc	r1, r15
     588:	0c f0       	brlt	.+2      	; 0x58c <_Z12print_statesiP7ComplexPc+0x24>
     58a:	47 c0       	rjmp	.+142    	; 0x61a <_Z12print_statesiP7ComplexPc+0xb2>
     58c:	c0 2f       	mov	r28, r16
     58e:	d1 2f       	mov	r29, r17
     590:	00 e0       	ldi	r16, 0x00	; 0
     592:	10 e0       	ldi	r17, 0x00	; 0
		s.writestr("R: "); s.writestr(utils.int2str(vec[i].re*1000));
     594:	6a e6       	ldi	r22, 0x6A	; 106
     596:	70 e0       	ldi	r23, 0x00	; 0
     598:	81 e0       	ldi	r24, 0x01	; 1
     59a:	91 e0       	ldi	r25, 0x01	; 1
     59c:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
     5a0:	20 e0       	ldi	r18, 0x00	; 0
     5a2:	30 e0       	ldi	r19, 0x00	; 0
     5a4:	4a e7       	ldi	r20, 0x7A	; 122
     5a6:	54 e4       	ldi	r21, 0x44	; 68
     5a8:	68 81       	ld	r22, Y
     5aa:	79 81       	ldd	r23, Y+1	; 0x01
     5ac:	8a 81       	ldd	r24, Y+2	; 0x02
     5ae:	9b 81       	ldd	r25, Y+3	; 0x03
     5b0:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     5b4:	0e 94 f5 1d 	call	0x3bea	; 0x3bea <__fixsfsi>
     5b8:	80 e0       	ldi	r24, 0x00	; 0
     5ba:	91 e0       	ldi	r25, 0x01	; 1
     5bc:	0e 94 68 15 	call	0x2ad0	; 0x2ad0 <_ZN4QEPU5Utils7int2strEi>
     5c0:	bc 01       	movw	r22, r24
     5c2:	81 e0       	ldi	r24, 0x01	; 1
     5c4:	91 e0       	ldi	r25, 0x01	; 1
     5c6:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
		s.writestr(" . I: "); s.writestr(utils.int2str(vec[i].im*1000));
     5ca:	6e e6       	ldi	r22, 0x6E	; 110
     5cc:	70 e0       	ldi	r23, 0x00	; 0
     5ce:	81 e0       	ldi	r24, 0x01	; 1
     5d0:	91 e0       	ldi	r25, 0x01	; 1
     5d2:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
     5d6:	20 e0       	ldi	r18, 0x00	; 0
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	4a e7       	ldi	r20, 0x7A	; 122
     5dc:	54 e4       	ldi	r21, 0x44	; 68
     5de:	6c 81       	ldd	r22, Y+4	; 0x04
     5e0:	7d 81       	ldd	r23, Y+5	; 0x05
     5e2:	8e 81       	ldd	r24, Y+6	; 0x06
     5e4:	9f 81       	ldd	r25, Y+7	; 0x07
     5e6:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     5ea:	0e 94 f5 1d 	call	0x3bea	; 0x3bea <__fixsfsi>
     5ee:	80 e0       	ldi	r24, 0x00	; 0
     5f0:	91 e0       	ldi	r25, 0x01	; 1
     5f2:	0e 94 68 15 	call	0x2ad0	; 0x2ad0 <_ZN4QEPU5Utils7int2strEi>
     5f6:	bc 01       	movw	r22, r24
     5f8:	81 e0       	ldi	r24, 0x01	; 1
     5fa:	91 e0       	ldi	r25, 0x01	; 1
     5fc:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
		s.writestrln("");
     600:	63 ec       	ldi	r22, 0xC3	; 195
     602:	70 e0       	ldi	r23, 0x00	; 0
     604:	81 e0       	ldi	r24, 0x01	; 1
     606:	91 e0       	ldi	r25, 0x01	; 1
     608:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN6Serial10writestrlnEPc>
QEPU::Utils utils;
uint16_t EEMEM randinit;

void print_states(int qb_count,Complex * vec,char* message){
	s.writestrln(message);
	for(int i=0;i<qb_count;i++){
     60c:	0f 5f       	subi	r16, 0xFF	; 255
     60e:	1f 4f       	sbci	r17, 0xFF	; 255
     610:	28 96       	adiw	r28, 0x08	; 8
     612:	0e 15       	cp	r16, r14
     614:	1f 05       	cpc	r17, r15
     616:	09 f0       	breq	.+2      	; 0x61a <_Z12print_statesiP7ComplexPc+0xb2>
     618:	bd cf       	rjmp	.-134    	; 0x594 <_Z12print_statesiP7ComplexPc+0x2c>
		s.writestr("R: "); s.writestr(utils.int2str(vec[i].re*1000));
		s.writestr(" . I: "); s.writestr(utils.int2str(vec[i].im*1000));
		s.writestrln("");
	}
}
     61a:	df 91       	pop	r29
     61c:	cf 91       	pop	r28
     61e:	1f 91       	pop	r17
     620:	0f 91       	pop	r16
     622:	ff 90       	pop	r15
     624:	ef 90       	pop	r14
     626:	08 95       	ret

00000628 <_ZN5Gates10setup_seedEv>:

void Gates::setup_seed(){
	srand(eeprom_read_word(&randinit));
     628:	80 e0       	ldi	r24, 0x00	; 0
     62a:	90 e0       	ldi	r25, 0x00	; 0
     62c:	0e 94 c1 25 	call	0x4b82	; 0x4b82 <__eerd_word_m32>
     630:	0e 94 86 22 	call	0x450c	; 0x450c <srand>
	eeprom_write_word(&randinit,rand()%10000);
     634:	0e 94 81 22 	call	0x4502	; 0x4502 <rand>
     638:	60 e1       	ldi	r22, 0x10	; 16
     63a:	77 e2       	ldi	r23, 0x27	; 39
     63c:	0e 94 de 20 	call	0x41bc	; 0x41bc <__divmodhi4>
     640:	bc 01       	movw	r22, r24
     642:	80 e0       	ldi	r24, 0x00	; 0
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	0e 94 c7 25 	call	0x4b8e	; 0x4b8e <__eewr_word_m32>
     64a:	08 95       	ret

0000064c <_ZN5GatesC1Ev>:
#include "uart.h"
#include "qepu.h"
#include <stdarg.h>
#include <stdlib.h>
#include <avr/eeprom.h>
Gates::Gates(){setup_seed();}
     64c:	0e 94 14 03 	call	0x628	; 0x628 <_ZN5Gates10setup_seedEv>
     650:	08 95       	ret

00000652 <_ZN5Gates5touchEd>:
void Gates::setup_seed(){
	srand(eeprom_read_word(&randinit));
	eeprom_write_word(&randinit,rand()%10000);
}

int Gates::touch(double probability){
     652:	cf 92       	push	r12
     654:	df 92       	push	r13
     656:	ef 92       	push	r14
     658:	ff 92       	push	r15
     65a:	cf 93       	push	r28
     65c:	df 93       	push	r29
     65e:	6a 01       	movw	r12, r20
     660:	7b 01       	movw	r14, r22
	return RAND_MAX*probability>=rand();
     662:	0e 94 81 22 	call	0x4502	; 0x4502 <rand>
     666:	ec 01       	movw	r28, r24
     668:	20 e0       	ldi	r18, 0x00	; 0
     66a:	3e ef       	ldi	r19, 0xFE	; 254
     66c:	4f ef       	ldi	r20, 0xFF	; 255
     66e:	56 e4       	ldi	r21, 0x46	; 70
     670:	c7 01       	movw	r24, r14
     672:	b6 01       	movw	r22, r12
     674:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     678:	6b 01       	movw	r12, r22
     67a:	7c 01       	movw	r14, r24
     67c:	be 01       	movw	r22, r28
     67e:	88 27       	eor	r24, r24
     680:	77 fd       	sbrc	r23, 7
     682:	80 95       	com	r24
     684:	98 2f       	mov	r25, r24
     686:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__floatsisf>
     68a:	9b 01       	movw	r18, r22
     68c:	ac 01       	movw	r20, r24
     68e:	c1 e0       	ldi	r28, 0x01	; 1
     690:	d0 e0       	ldi	r29, 0x00	; 0
     692:	c7 01       	movw	r24, r14
     694:	b6 01       	movw	r22, r12
     696:	0e 94 51 1f 	call	0x3ea2	; 0x3ea2 <__gesf2>
     69a:	88 23       	and	r24, r24
     69c:	14 f4       	brge	.+4      	; 0x6a2 <_ZN5Gates5touchEd+0x50>
     69e:	c0 e0       	ldi	r28, 0x00	; 0
     6a0:	d0 e0       	ldi	r29, 0x00	; 0
}
     6a2:	ce 01       	movw	r24, r28
     6a4:	df 91       	pop	r29
     6a6:	cf 91       	pop	r28
     6a8:	ff 90       	pop	r15
     6aa:	ef 90       	pop	r14
     6ac:	df 90       	pop	r13
     6ae:	cf 90       	pop	r12
     6b0:	08 95       	ret

000006b2 <_ZN5Gates17reverse_kroneckerEP7Complexi>:
int Gates::custom_pow(int base,int exp){
	int result=1; for(int i=0;i<exp;i++) result*=base;
	return result;
}

Complex * Gates::reverse_kronecker(Complex * kron,int kron_size){
     6b2:	4f 92       	push	r4
     6b4:	5f 92       	push	r5
     6b6:	6f 92       	push	r6
     6b8:	7f 92       	push	r7
     6ba:	8f 92       	push	r8
     6bc:	9f 92       	push	r9
     6be:	af 92       	push	r10
     6c0:	bf 92       	push	r11
     6c2:	cf 92       	push	r12
     6c4:	df 92       	push	r13
     6c6:	ef 92       	push	r14
     6c8:	ff 92       	push	r15
     6ca:	0f 93       	push	r16
     6cc:	1f 93       	push	r17
     6ce:	cf 93       	push	r28
     6d0:	df 93       	push	r29
     6d2:	cd b7       	in	r28, 0x3d	; 61
     6d4:	de b7       	in	r29, 0x3e	; 62
     6d6:	a4 97       	sbiw	r28, 0x24	; 36
     6d8:	0f b6       	in	r0, 0x3f	; 63
     6da:	f8 94       	cli
     6dc:	de bf       	out	0x3e, r29	; 62
     6de:	0f be       	out	0x3f, r0	; 63
     6e0:	cd bf       	out	0x3d, r28	; 61
     6e2:	6b 01       	movw	r12, r22
     6e4:	5a 01       	movw	r10, r20
	int reversed_kron_size=(log(kron_size)/log(2))*2;
     6e6:	ba 01       	movw	r22, r20
     6e8:	88 27       	eor	r24, r24
     6ea:	77 fd       	sbrc	r23, 7
     6ec:	80 95       	com	r24
     6ee:	98 2f       	mov	r25, r24
     6f0:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__floatsisf>
     6f4:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <log>
     6f8:	28 e1       	ldi	r18, 0x18	; 24
     6fa:	32 e7       	ldi	r19, 0x72	; 114
     6fc:	41 e3       	ldi	r20, 0x31	; 49
     6fe:	5f e3       	ldi	r21, 0x3F	; 63
     700:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <__divsf3>
     704:	2b 01       	movw	r4, r22
     706:	3c 01       	movw	r6, r24
     708:	9b 01       	movw	r18, r22
     70a:	ac 01       	movw	r20, r24
     70c:	0e 94 c9 1c 	call	0x3992	; 0x3992 <__addsf3>
     710:	0e 94 f5 1d 	call	0x3bea	; 0x3bea <__fixsfsi>
     714:	69 a3       	std	Y+33, r22	; 0x21
     716:	7a a3       	std	Y+34, r23	; 0x22
     718:	8b a3       	std	Y+35, r24	; 0x23
     71a:	9c a3       	std	Y+36, r25	; 0x24
     71c:	09 a1       	ldd	r16, Y+33	; 0x21
     71e:	1a a1       	ldd	r17, Y+34	; 0x22
	Complex * reversed_kronecker=(Complex*)malloc(sizeof(Complex)*reversed_kron_size);
     720:	c8 01       	movw	r24, r16
     722:	88 0f       	add	r24, r24
     724:	99 1f       	adc	r25, r25
     726:	88 0f       	add	r24, r24
     728:	99 1f       	adc	r25, r25
     72a:	88 0f       	add	r24, r24
     72c:	99 1f       	adc	r25, r25
     72e:	0e 94 0c 21 	call	0x4218	; 0x4218 <malloc>
     732:	4c 01       	movw	r8, r24
		
	for(int i=0;i<kron_size;i++)
     734:	1a 14       	cp	r1, r10
     736:	1b 04       	cpc	r1, r11
     738:	0c f0       	brlt	.+2      	; 0x73c <_ZN5Gates17reverse_kroneckerEP7Complexi+0x8a>
     73a:	9e c0       	rjmp	.+316    	; 0x878 <__stack+0x19>
		if(kron[i].re==1){
     73c:	20 e0       	ldi	r18, 0x00	; 0
     73e:	30 e0       	ldi	r19, 0x00	; 0
     740:	40 e8       	ldi	r20, 0x80	; 128
     742:	5f e3       	ldi	r21, 0x3F	; 63
     744:	f6 01       	movw	r30, r12
     746:	60 81       	ld	r22, Z
     748:	71 81       	ldd	r23, Z+1	; 0x01
     74a:	82 81       	ldd	r24, Z+2	; 0x02
     74c:	93 81       	ldd	r25, Z+3	; 0x03
     74e:	0e 94 55 1d 	call	0x3aaa	; 0x3aaa <__cmpsf2>
     752:	81 11       	cpse	r24, r1
     754:	88 c0       	rjmp	.+272    	; 0x866 <__stack+0x7>
     756:	11 c0       	rjmp	.+34     	; 0x77a <_ZN5Gates17reverse_kroneckerEP7Complexi+0xc8>
     758:	f8 e0       	ldi	r31, 0x08	; 8
     75a:	cf 0e       	add	r12, r31
     75c:	d1 1c       	adc	r13, r1
     75e:	20 e0       	ldi	r18, 0x00	; 0
     760:	30 e0       	ldi	r19, 0x00	; 0
     762:	40 e8       	ldi	r20, 0x80	; 128
     764:	5f e3       	ldi	r21, 0x3F	; 63
     766:	f6 01       	movw	r30, r12
     768:	60 81       	ld	r22, Z
     76a:	71 81       	ldd	r23, Z+1	; 0x01
     76c:	82 81       	ldd	r24, Z+2	; 0x02
     76e:	93 81       	ldd	r25, Z+3	; 0x03
     770:	0e 94 55 1d 	call	0x3aaa	; 0x3aaa <__cmpsf2>
     774:	81 11       	cpse	r24, r1
     776:	79 c0       	rjmp	.+242    	; 0x86a <__stack+0xb>
     778:	02 c0       	rjmp	.+4      	; 0x77e <_ZN5Gates17reverse_kroneckerEP7Complexi+0xcc>

Complex * Gates::reverse_kronecker(Complex * kron,int kron_size){
	int reversed_kron_size=(log(kron_size)/log(2))*2;
	Complex * reversed_kronecker=(Complex*)malloc(sizeof(Complex)*reversed_kron_size);
		
	for(int i=0;i<kron_size;i++)
     77a:	e1 2c       	mov	r14, r1
     77c:	f1 2c       	mov	r15, r1
		if(kron[i].re==1){
			char *toBin=utils.int2binstr(i,log(kron_size)/log(2));
     77e:	c3 01       	movw	r24, r6
     780:	b2 01       	movw	r22, r4
     782:	0e 94 f5 1d 	call	0x3bea	; 0x3bea <__fixsfsi>
     786:	ab 01       	movw	r20, r22
     788:	b7 01       	movw	r22, r14
     78a:	80 e0       	ldi	r24, 0x00	; 0
     78c:	91 e0       	ldi	r25, 0x01	; 1
     78e:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <_ZN4QEPU5Utils10int2binstrEii>
			int index_rev_kro=0; //USE ITS OWN INDEX BECAUSE J IS THE INDEX OF TOBIN AN TOBIN HAS TO GO REVERSED
			for(int j=0;j<reversed_kron_size;j++){
     792:	10 16       	cp	r1, r16
     794:	11 06       	cpc	r1, r17
     796:	0c f0       	brlt	.+2      	; 0x79a <_ZN5Gates17reverse_kroneckerEP7Complexi+0xe8>
     798:	6f c0       	rjmp	.+222    	; 0x878 <__stack+0x19>
     79a:	7c 01       	movw	r14, r24
     79c:	54 01       	movw	r10, r8
     79e:	64 01       	movw	r12, r8
     7a0:	f8 e0       	ldi	r31, 0x08	; 8
     7a2:	cf 0e       	add	r12, r31
     7a4:	d1 1c       	adc	r13, r1
     7a6:	49 a0       	ldd	r4, Y+33	; 0x21
     7a8:	5a a0       	ldd	r5, Y+34	; 0x22
     7aa:	48 0e       	add	r4, r24
     7ac:	59 1e       	adc	r5, r25
				if(toBin[j]=='1'){
					reversed_kronecker[index_rev_kro]=Complex(0,0); reversed_kronecker[index_rev_kro+1]=Complex(1,0);
				}else{
					reversed_kronecker[index_rev_kro]=Complex(1,0); reversed_kronecker[index_rev_kro+1]=Complex(0,0);
     7ae:	68 94       	set
     7b0:	77 24       	eor	r7, r7
     7b2:	73 f8       	bld	r7, 3
	for(int i=0;i<kron_size;i++)
		if(kron[i].re==1){
			char *toBin=utils.int2binstr(i,log(kron_size)/log(2));
			int index_rev_kro=0; //USE ITS OWN INDEX BECAUSE J IS THE INDEX OF TOBIN AN TOBIN HAS TO GO REVERSED
			for(int j=0;j<reversed_kron_size;j++){
				if(toBin[j]=='1'){
     7b4:	f7 01       	movw	r30, r14
     7b6:	81 91       	ld	r24, Z+
     7b8:	7f 01       	movw	r14, r30
     7ba:	81 33       	cpi	r24, 0x31	; 49
     7bc:	29 f5       	brne	.+74     	; 0x808 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x156>
					reversed_kronecker[index_rev_kro]=Complex(0,0); reversed_kronecker[index_rev_kro+1]=Complex(1,0);
     7be:	00 e0       	ldi	r16, 0x00	; 0
     7c0:	10 e0       	ldi	r17, 0x00	; 0
     7c2:	98 01       	movw	r18, r16
     7c4:	b9 01       	movw	r22, r18
     7c6:	a8 01       	movw	r20, r16
     7c8:	ce 01       	movw	r24, r28
     7ca:	49 96       	adiw	r24, 0x19	; 25
     7cc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     7d0:	fe 01       	movw	r30, r28
     7d2:	79 96       	adiw	r30, 0x19	; 25
     7d4:	d5 01       	movw	r26, r10
     7d6:	87 2d       	mov	r24, r7
     7d8:	01 90       	ld	r0, Z+
     7da:	0d 92       	st	X+, r0
     7dc:	8a 95       	dec	r24
     7de:	e1 f7       	brne	.-8      	; 0x7d8 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x126>
     7e0:	00 e0       	ldi	r16, 0x00	; 0
     7e2:	10 e0       	ldi	r17, 0x00	; 0
     7e4:	98 01       	movw	r18, r16
     7e6:	40 e0       	ldi	r20, 0x00	; 0
     7e8:	50 e0       	ldi	r21, 0x00	; 0
     7ea:	60 e8       	ldi	r22, 0x80	; 128
     7ec:	7f e3       	ldi	r23, 0x3F	; 63
     7ee:	ce 01       	movw	r24, r28
     7f0:	41 96       	adiw	r24, 0x11	; 17
     7f2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     7f6:	fe 01       	movw	r30, r28
     7f8:	71 96       	adiw	r30, 0x11	; 17
     7fa:	d6 01       	movw	r26, r12
     7fc:	87 2d       	mov	r24, r7
     7fe:	01 90       	ld	r0, Z+
     800:	0d 92       	st	X+, r0
     802:	8a 95       	dec	r24
     804:	e1 f7       	brne	.-8      	; 0x7fe <_ZN5Gates17reverse_kroneckerEP7Complexi+0x14c>
     806:	24 c0       	rjmp	.+72     	; 0x850 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x19e>
				}else{
					reversed_kronecker[index_rev_kro]=Complex(1,0); reversed_kronecker[index_rev_kro+1]=Complex(0,0);
     808:	00 e0       	ldi	r16, 0x00	; 0
     80a:	10 e0       	ldi	r17, 0x00	; 0
     80c:	98 01       	movw	r18, r16
     80e:	40 e0       	ldi	r20, 0x00	; 0
     810:	50 e0       	ldi	r21, 0x00	; 0
     812:	60 e8       	ldi	r22, 0x80	; 128
     814:	7f e3       	ldi	r23, 0x3F	; 63
     816:	ce 01       	movw	r24, r28
     818:	09 96       	adiw	r24, 0x09	; 9
     81a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     81e:	fe 01       	movw	r30, r28
     820:	39 96       	adiw	r30, 0x09	; 9
     822:	d5 01       	movw	r26, r10
     824:	87 2d       	mov	r24, r7
     826:	01 90       	ld	r0, Z+
     828:	0d 92       	st	X+, r0
     82a:	8a 95       	dec	r24
     82c:	e1 f7       	brne	.-8      	; 0x826 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x174>
     82e:	00 e0       	ldi	r16, 0x00	; 0
     830:	10 e0       	ldi	r17, 0x00	; 0
     832:	98 01       	movw	r18, r16
     834:	b9 01       	movw	r22, r18
     836:	a8 01       	movw	r20, r16
     838:	ce 01       	movw	r24, r28
     83a:	01 96       	adiw	r24, 0x01	; 1
     83c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     840:	fe 01       	movw	r30, r28
     842:	31 96       	adiw	r30, 0x01	; 1
     844:	d6 01       	movw	r26, r12
     846:	87 2d       	mov	r24, r7
     848:	01 90       	ld	r0, Z+
     84a:	0d 92       	st	X+, r0
     84c:	8a 95       	dec	r24
     84e:	e1 f7       	brne	.-8      	; 0x848 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x196>
     850:	f0 e1       	ldi	r31, 0x10	; 16
     852:	af 0e       	add	r10, r31
     854:	b1 1c       	adc	r11, r1
     856:	20 e1       	ldi	r18, 0x10	; 16
     858:	c2 0e       	add	r12, r18
     85a:	d1 1c       	adc	r13, r1
		
	for(int i=0;i<kron_size;i++)
		if(kron[i].re==1){
			char *toBin=utils.int2binstr(i,log(kron_size)/log(2));
			int index_rev_kro=0; //USE ITS OWN INDEX BECAUSE J IS THE INDEX OF TOBIN AN TOBIN HAS TO GO REVERSED
			for(int j=0;j<reversed_kron_size;j++){
     85c:	e4 14       	cp	r14, r4
     85e:	f5 04       	cpc	r15, r5
     860:	09 f0       	breq	.+2      	; 0x864 <__stack+0x5>
     862:	a8 cf       	rjmp	.-176    	; 0x7b4 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x102>
     864:	09 c0       	rjmp	.+18     	; 0x878 <__stack+0x19>

Complex * Gates::reverse_kronecker(Complex * kron,int kron_size){
	int reversed_kron_size=(log(kron_size)/log(2))*2;
	Complex * reversed_kronecker=(Complex*)malloc(sizeof(Complex)*reversed_kron_size);
		
	for(int i=0;i<kron_size;i++)
     866:	e1 2c       	mov	r14, r1
     868:	f1 2c       	mov	r15, r1
     86a:	8f ef       	ldi	r24, 0xFF	; 255
     86c:	e8 1a       	sub	r14, r24
     86e:	f8 0a       	sbc	r15, r24
     870:	ea 14       	cp	r14, r10
     872:	fb 04       	cpc	r15, r11
     874:	09 f0       	breq	.+2      	; 0x878 <__stack+0x19>
     876:	70 cf       	rjmp	.-288    	; 0x758 <_ZN5Gates17reverse_kroneckerEP7Complexi+0xa6>
			}
			break;
		}
	//print_states(reversed_kron_size,reversed_kronecker,"Reversed kronecker AFTER mul: ");
	return reversed_kronecker;
}
     878:	c4 01       	movw	r24, r8
     87a:	a4 96       	adiw	r28, 0x24	; 36
     87c:	0f b6       	in	r0, 0x3f	; 63
     87e:	f8 94       	cli
     880:	de bf       	out	0x3e, r29	; 62
     882:	0f be       	out	0x3f, r0	; 63
     884:	cd bf       	out	0x3d, r28	; 61
     886:	df 91       	pop	r29
     888:	cf 91       	pop	r28
     88a:	1f 91       	pop	r17
     88c:	0f 91       	pop	r16
     88e:	ff 90       	pop	r15
     890:	ef 90       	pop	r14
     892:	df 90       	pop	r13
     894:	cf 90       	pop	r12
     896:	bf 90       	pop	r11
     898:	af 90       	pop	r10
     89a:	9f 90       	pop	r9
     89c:	8f 90       	pop	r8
     89e:	7f 90       	pop	r7
     8a0:	6f 90       	pop	r6
     8a2:	5f 90       	pop	r5
     8a4:	4f 90       	pop	r4
     8a6:	08 95       	ret

000008a8 <_ZN5Gates9kroneckerEP7Complexii>:

Complex * Gates::kronecker(Complex * vec,int qb_count,int touch_enable){
     8a8:	2f 92       	push	r2
     8aa:	3f 92       	push	r3
     8ac:	4f 92       	push	r4
     8ae:	5f 92       	push	r5
     8b0:	6f 92       	push	r6
     8b2:	7f 92       	push	r7
     8b4:	8f 92       	push	r8
     8b6:	9f 92       	push	r9
     8b8:	af 92       	push	r10
     8ba:	bf 92       	push	r11
     8bc:	cf 92       	push	r12
     8be:	df 92       	push	r13
     8c0:	ef 92       	push	r14
     8c2:	ff 92       	push	r15
     8c4:	0f 93       	push	r16
     8c6:	1f 93       	push	r17
     8c8:	cf 93       	push	r28
     8ca:	df 93       	push	r29
     8cc:	cd b7       	in	r28, 0x3d	; 61
     8ce:	de b7       	in	r29, 0x3e	; 62
     8d0:	28 97       	sbiw	r28, 0x08	; 8
     8d2:	0f b6       	in	r0, 0x3f	; 63
     8d4:	f8 94       	cli
     8d6:	de bf       	out	0x3e, r29	; 62
     8d8:	0f be       	out	0x3f, r0	; 63
     8da:	cd bf       	out	0x3d, r28	; 61
     8dc:	7c 01       	movw	r14, r24
     8de:	5b 01       	movw	r10, r22
     8e0:	4a 01       	movw	r8, r20
     8e2:	3e 83       	std	Y+6, r19	; 0x06
     8e4:	2d 83       	std	Y+5, r18	; 0x05
	if(qb_count==1) return vec;
     8e6:	41 30       	cpi	r20, 0x01	; 1
     8e8:	51 05       	cpc	r21, r1
     8ea:	09 f4       	brne	.+2      	; 0x8ee <_ZN5Gates9kroneckerEP7Complexii+0x46>
     8ec:	c1 c0       	rjmp	.+386    	; 0xa70 <_ZN5Gates9kroneckerEP7Complexii+0x1c8>
int Gates::touch(double probability){
	return RAND_MAX*probability>=rand();
}

int Gates::custom_pow(int base,int exp){
	int result=1; for(int i=0;i<exp;i++) result*=base;
     8ee:	14 16       	cp	r1, r20
     8f0:	15 06       	cpc	r1, r21
     8f2:	0c f0       	brlt	.+2      	; 0x8f6 <_ZN5Gates9kroneckerEP7Complexii+0x4e>
     8f4:	c0 c0       	rjmp	.+384    	; 0xa76 <_ZN5Gates9kroneckerEP7Complexii+0x1ce>
     8f6:	80 e0       	ldi	r24, 0x00	; 0
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	21 e0       	ldi	r18, 0x01	; 1
     8fc:	30 e0       	ldi	r19, 0x00	; 0
     8fe:	22 0f       	add	r18, r18
     900:	33 1f       	adc	r19, r19
     902:	01 96       	adiw	r24, 0x01	; 1
     904:	88 15       	cp	r24, r8
     906:	99 05       	cpc	r25, r9
     908:	d1 f7       	brne	.-12     	; 0x8fe <_ZN5Gates9kroneckerEP7Complexii+0x56>
     90a:	38 87       	std	Y+8, r19	; 0x08
     90c:	2f 83       	std	Y+7, r18	; 0x07
}

Complex * Gates::kronecker(Complex * vec,int qb_count,int touch_enable){
	if(qb_count==1) return vec;
	int kron_size=custom_pow(2,qb_count);
	Complex * kronvec=(Complex*)malloc(sizeof(Complex)*kron_size);
     90e:	c9 01       	movw	r24, r18
     910:	88 0f       	add	r24, r24
     912:	99 1f       	adc	r25, r25
     914:	88 0f       	add	r24, r24
     916:	99 1f       	adc	r25, r25
     918:	88 0f       	add	r24, r24
     91a:	99 1f       	adc	r25, r25
     91c:	0e 94 0c 21 	call	0x4218	; 0x4218 <malloc>
     920:	89 83       	std	Y+1, r24	; 0x01
     922:	9a 83       	std	Y+2, r25	; 0x02
	
	int vec1i=0;
	int vec2i_default=qb_count;
	int vec2i=vec2i_default;
	for(int i=0;i<kron_size;i++){
     924:	ef 81       	ldd	r30, Y+7	; 0x07
     926:	f8 85       	ldd	r31, Y+8	; 0x08
     928:	1e 16       	cp	r1, r30
     92a:	1f 06       	cpc	r1, r31
     92c:	0c f4       	brge	.+2      	; 0x930 <_ZN5Gates9kroneckerEP7Complexii+0x88>
     92e:	ad c0       	rjmp	.+346    	; 0xa8a <_ZN5Gates9kroneckerEP7Complexii+0x1e2>
     930:	4e c0       	rjmp	.+156    	; 0x9ce <_ZN5Gates9kroneckerEP7Complexii+0x126>
    	if(vec2i==qb_count*2){vec2i=vec2i_default;vec1i++;}
     932:	2e 16       	cp	r2, r30
     934:	3f 06       	cpc	r3, r31
     936:	29 f4       	brne	.+10     	; 0x942 <_ZN5Gates9kroneckerEP7Complexii+0x9a>
     938:	ff ef       	ldi	r31, 0xFF	; 255
     93a:	4f 1a       	sub	r4, r31
     93c:	5f 0a       	sbc	r5, r31
     93e:	eb 81       	ldd	r30, Y+3	; 0x03
     940:	fc 81       	ldd	r31, Y+4	; 0x04
		kronvec[i]=vec[vec1i].mul(vec[vec2i++]);
     942:	7f 01       	movw	r14, r30
     944:	2f ef       	ldi	r18, 0xFF	; 255
     946:	e2 1a       	sub	r14, r18
     948:	f2 0a       	sbc	r15, r18
     94a:	ee 0f       	add	r30, r30
     94c:	ff 1f       	adc	r31, r31
     94e:	ee 0f       	add	r30, r30
     950:	ff 1f       	adc	r31, r31
     952:	ee 0f       	add	r30, r30
     954:	ff 1f       	adc	r31, r31
     956:	ea 0d       	add	r30, r10
     958:	fb 1d       	adc	r31, r11
     95a:	00 81       	ld	r16, Z
     95c:	11 81       	ldd	r17, Z+1	; 0x01
     95e:	22 81       	ldd	r18, Z+2	; 0x02
     960:	33 81       	ldd	r19, Z+3	; 0x03
     962:	44 81       	ldd	r20, Z+4	; 0x04
     964:	55 81       	ldd	r21, Z+5	; 0x05
     966:	66 81       	ldd	r22, Z+6	; 0x06
     968:	77 81       	ldd	r23, Z+7	; 0x07
     96a:	c2 01       	movw	r24, r4
     96c:	88 0f       	add	r24, r24
     96e:	99 1f       	adc	r25, r25
     970:	88 0f       	add	r24, r24
     972:	99 1f       	adc	r25, r25
     974:	88 0f       	add	r24, r24
     976:	99 1f       	adc	r25, r25
     978:	8a 0d       	add	r24, r10
     97a:	9b 1d       	adc	r25, r11
     97c:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN7Complex3mulES_>
     980:	af 81       	ldd	r26, Y+7	; 0x07
     982:	b8 85       	ldd	r27, Y+8	; 0x08
     984:	2c 93       	st	X, r18
     986:	11 96       	adiw	r26, 0x01	; 1
     988:	3c 93       	st	X, r19
     98a:	11 97       	sbiw	r26, 0x01	; 1
     98c:	12 96       	adiw	r26, 0x02	; 2
     98e:	4c 93       	st	X, r20
     990:	12 97       	sbiw	r26, 0x02	; 2
     992:	13 96       	adiw	r26, 0x03	; 3
     994:	5c 93       	st	X, r21
     996:	13 97       	sbiw	r26, 0x03	; 3
     998:	14 96       	adiw	r26, 0x04	; 4
     99a:	6c 93       	st	X, r22
     99c:	14 97       	sbiw	r26, 0x04	; 4
     99e:	15 96       	adiw	r26, 0x05	; 5
     9a0:	7c 93       	st	X, r23
     9a2:	15 97       	sbiw	r26, 0x05	; 5
     9a4:	16 96       	adiw	r26, 0x06	; 6
     9a6:	8c 93       	st	X, r24
     9a8:	16 97       	sbiw	r26, 0x06	; 6
     9aa:	17 96       	adiw	r26, 0x07	; 7
     9ac:	9c 93       	st	X, r25
	Complex * kronvec=(Complex*)malloc(sizeof(Complex)*kron_size);
	
	int vec1i=0;
	int vec2i_default=qb_count;
	int vec2i=vec2i_default;
	for(int i=0;i<kron_size;i++){
     9ae:	bf ef       	ldi	r27, 0xFF	; 255
     9b0:	6b 1a       	sub	r6, r27
     9b2:	7b 0a       	sbc	r7, r27
     9b4:	ef 81       	ldd	r30, Y+7	; 0x07
     9b6:	f8 85       	ldd	r31, Y+8	; 0x08
     9b8:	38 96       	adiw	r30, 0x08	; 8
     9ba:	f8 87       	std	Y+8, r31	; 0x08
     9bc:	ef 83       	std	Y+7, r30	; 0x07
     9be:	6c 14       	cp	r6, r12
     9c0:	7d 04       	cpc	r7, r13
     9c2:	14 f4       	brge	.+4      	; 0x9c8 <_ZN5Gates9kroneckerEP7Complexii+0x120>
    	if(vec2i==qb_count*2){vec2i=vec2i_default;vec1i++;}
		kronvec[i]=vec[vec1i].mul(vec[vec2i++]);
     9c4:	f7 01       	movw	r30, r14
     9c6:	b5 cf       	rjmp	.-150    	; 0x932 <_ZN5Gates9kroneckerEP7Complexii+0x8a>
     9c8:	d8 86       	std	Y+8, r13	; 0x08
     9ca:	cf 82       	std	Y+7, r12	; 0x07
     9cc:	74 01       	movw	r14, r8
	}
	
	if(touch_enable){
     9ce:	2d 81       	ldd	r18, Y+5	; 0x05
     9d0:	3e 81       	ldd	r19, Y+6	; 0x06
     9d2:	23 2b       	or	r18, r19
     9d4:	e9 f5       	brne	.+122    	; 0xa50 <_ZN5Gates9kroneckerEP7Complexii+0x1a8>
     9d6:	89 81       	ldd	r24, Y+1	; 0x01
     9d8:	9a 81       	ldd	r25, Y+2	; 0x02
     9da:	6a c0       	rjmp	.+212    	; 0xab0 <_ZN5Gates9kroneckerEP7Complexii+0x208>
		//TOUCH THE ENTANGLED/SUPERPOSITIONED QUBIT BEFORE GIVING IT TO A MATRIX:
		int binary_touch=1;
		while(binary_touch)	for(int i=0;i<kron_size;i++)
			if(touch(kronvec[i].re)==binary_touch){
     9dc:	51 01       	movw	r10, r2
     9de:	d1 01       	movw	r26, r2
     9e0:	4d 91       	ld	r20, X+
     9e2:	5d 91       	ld	r21, X+
     9e4:	6d 91       	ld	r22, X+
     9e6:	7c 91       	ld	r23, X
     9e8:	c7 01       	movw	r24, r14
     9ea:	0e 94 29 03 	call	0x652	; 0x652 <_ZN5Gates5touchEd>
     9ee:	01 97       	sbiw	r24, 0x01	; 1
     9f0:	29 f5       	brne	.+74     	; 0xa3c <_ZN5Gates9kroneckerEP7Complexii+0x194>
     9f2:	98 86       	std	Y+8, r9	; 0x08
     9f4:	8f 82       	std	Y+7, r8	; 0x07
     9f6:	8f 81       	ldd	r24, Y+7	; 0x07
     9f8:	98 85       	ldd	r25, Y+8	; 0x08
     9fa:	88 0f       	add	r24, r24
     9fc:	99 1f       	adc	r25, r25
     9fe:	88 0f       	add	r24, r24
     a00:	99 1f       	adc	r25, r25
     a02:	88 0f       	add	r24, r24
     a04:	99 1f       	adc	r25, r25
     a06:	86 0d       	add	r24, r6
     a08:	97 1d       	adc	r25, r7
     a0a:	f3 01       	movw	r30, r6
				for(int j=0;j<kron_size;j++){kronvec[j].re=0; kronvec[j].im=0;}
     a0c:	10 82       	st	Z, r1
     a0e:	11 82       	std	Z+1, r1	; 0x01
     a10:	12 82       	std	Z+2, r1	; 0x02
     a12:	13 82       	std	Z+3, r1	; 0x03
     a14:	14 82       	std	Z+4, r1	; 0x04
     a16:	15 82       	std	Z+5, r1	; 0x05
     a18:	16 82       	std	Z+6, r1	; 0x06
     a1a:	17 82       	std	Z+7, r1	; 0x07
     a1c:	38 96       	adiw	r30, 0x08	; 8
     a1e:	e8 17       	cp	r30, r24
     a20:	f9 07       	cpc	r31, r25
     a22:	a1 f7       	brne	.-24     	; 0xa0c <_ZN5Gates9kroneckerEP7Complexii+0x164>
				kronvec[i].re=binary_touch;
     a24:	80 e0       	ldi	r24, 0x00	; 0
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	a0 e8       	ldi	r26, 0x80	; 128
     a2a:	bf e3       	ldi	r27, 0x3F	; 63
     a2c:	f5 01       	movw	r30, r10
     a2e:	80 83       	st	Z, r24
     a30:	91 83       	std	Z+1, r25	; 0x01
     a32:	a2 83       	std	Z+2, r26	; 0x02
     a34:	b3 83       	std	Z+3, r27	; 0x03
     a36:	89 81       	ldd	r24, Y+1	; 0x01
     a38:	9a 81       	ldd	r25, Y+2	; 0x02
     a3a:	3a c0       	rjmp	.+116    	; 0xab0 <_ZN5Gates9kroneckerEP7Complexii+0x208>
	}
	
	if(touch_enable){
		//TOUCH THE ENTANGLED/SUPERPOSITIONED QUBIT BEFORE GIVING IT TO A MATRIX:
		int binary_touch=1;
		while(binary_touch)	for(int i=0;i<kron_size;i++)
     a3c:	ff ef       	ldi	r31, 0xFF	; 255
     a3e:	cf 1a       	sub	r12, r31
     a40:	df 0a       	sbc	r13, r31
     a42:	28 e0       	ldi	r18, 0x08	; 8
     a44:	22 0e       	add	r2, r18
     a46:	31 1c       	adc	r3, r1
     a48:	c8 14       	cp	r12, r8
     a4a:	d9 04       	cpc	r13, r9
     a4c:	39 f6       	brne	.-114    	; 0x9dc <_ZN5Gates9kroneckerEP7Complexii+0x134>
     a4e:	06 c0       	rjmp	.+12     	; 0xa5c <_ZN5Gates9kroneckerEP7Complexii+0x1b4>
     a50:	49 80       	ldd	r4, Y+1	; 0x01
     a52:	5a 80       	ldd	r5, Y+2	; 0x02
     a54:	00 e0       	ldi	r16, 0x00	; 0
     a56:	10 e0       	ldi	r17, 0x00	; 0
     a58:	8f 80       	ldd	r8, Y+7	; 0x07
     a5a:	98 84       	ldd	r9, Y+8	; 0x08
     a5c:	18 14       	cp	r1, r8
     a5e:	19 04       	cpc	r1, r9
     a60:	ec f7       	brge	.-6      	; 0xa5c <_ZN5Gates9kroneckerEP7Complexii+0x1b4>
     a62:	64 2c       	mov	r6, r4
     a64:	75 2c       	mov	r7, r5
     a66:	24 2c       	mov	r2, r4
     a68:	35 2c       	mov	r3, r5
     a6a:	c0 2e       	mov	r12, r16
     a6c:	d1 2e       	mov	r13, r17
     a6e:	b6 cf       	rjmp	.-148    	; 0x9dc <_ZN5Gates9kroneckerEP7Complexii+0x134>
	//print_states(reversed_kron_size,reversed_kronecker,"Reversed kronecker AFTER mul: ");
	return reversed_kronecker;
}

Complex * Gates::kronecker(Complex * vec,int qb_count,int touch_enable){
	if(qb_count==1) return vec;
     a70:	86 2f       	mov	r24, r22
     a72:	9b 2d       	mov	r25, r11
     a74:	1d c0       	rjmp	.+58     	; 0xab0 <_ZN5Gates9kroneckerEP7Complexii+0x208>
	int kron_size=custom_pow(2,qb_count);
	Complex * kronvec=(Complex*)malloc(sizeof(Complex)*kron_size);
     a76:	88 e0       	ldi	r24, 0x08	; 8
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	0e 94 0c 21 	call	0x4218	; 0x4218 <malloc>
     a7e:	89 83       	std	Y+1, r24	; 0x01
     a80:	9a 83       	std	Y+2, r25	; 0x02
     a82:	81 e0       	ldi	r24, 0x01	; 1
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	98 87       	std	Y+8, r25	; 0x08
     a88:	8f 83       	std	Y+7, r24	; 0x07
	
	int vec1i=0;
	int vec2i_default=qb_count;
	int vec2i=vec2i_default;
	for(int i=0;i<kron_size;i++){
    	if(vec2i==qb_count*2){vec2i=vec2i_default;vec1i++;}
     a8a:	14 01       	movw	r2, r8
     a8c:	22 0c       	add	r2, r2
     a8e:	33 1c       	adc	r3, r3
     a90:	c9 80       	ldd	r12, Y+1	; 0x01
     a92:	da 80       	ldd	r13, Y+2	; 0x02
     a94:	f4 01       	movw	r30, r8
     a96:	61 2c       	mov	r6, r1
     a98:	71 2c       	mov	r7, r1
     a9a:	41 2c       	mov	r4, r1
     a9c:	51 2c       	mov	r5, r1
     a9e:	8b 82       	std	Y+3, r8	; 0x03
     aa0:	9c 82       	std	Y+4, r9	; 0x04
     aa2:	c6 01       	movw	r24, r12
     aa4:	cf 80       	ldd	r12, Y+7	; 0x07
     aa6:	d8 84       	ldd	r13, Y+8	; 0x08
     aa8:	47 01       	movw	r8, r14
     aaa:	98 87       	std	Y+8, r25	; 0x08
     aac:	8f 83       	std	Y+7, r24	; 0x07
     aae:	41 cf       	rjmp	.-382    	; 0x932 <_ZN5Gates9kroneckerEP7Complexii+0x8a>
				break;
			}
	}
	//print_states(kron_size,kronvec,"Kronecker: ");
	return kronvec;
}
     ab0:	28 96       	adiw	r28, 0x08	; 8
     ab2:	0f b6       	in	r0, 0x3f	; 63
     ab4:	f8 94       	cli
     ab6:	de bf       	out	0x3e, r29	; 62
     ab8:	0f be       	out	0x3f, r0	; 63
     aba:	cd bf       	out	0x3d, r28	; 61
     abc:	df 91       	pop	r29
     abe:	cf 91       	pop	r28
     ac0:	1f 91       	pop	r17
     ac2:	0f 91       	pop	r16
     ac4:	ff 90       	pop	r15
     ac6:	ef 90       	pop	r14
     ac8:	df 90       	pop	r13
     aca:	cf 90       	pop	r12
     acc:	bf 90       	pop	r11
     ace:	af 90       	pop	r10
     ad0:	9f 90       	pop	r9
     ad2:	8f 90       	pop	r8
     ad4:	7f 90       	pop	r7
     ad6:	6f 90       	pop	r6
     ad8:	5f 90       	pop	r5
     ada:	4f 90       	pop	r4
     adc:	3f 90       	pop	r3
     ade:	2f 90       	pop	r2
     ae0:	08 95       	ret

00000ae2 <_ZN5Gates8ampl2vecEiPiS0_>:

Complex * Gates::ampl2vec(int qb_count,int theta_list[6],int phi_list[6]){
     ae2:	2f 92       	push	r2
     ae4:	3f 92       	push	r3
     ae6:	4f 92       	push	r4
     ae8:	5f 92       	push	r5
     aea:	6f 92       	push	r6
     aec:	7f 92       	push	r7
     aee:	8f 92       	push	r8
     af0:	9f 92       	push	r9
     af2:	af 92       	push	r10
     af4:	bf 92       	push	r11
     af6:	cf 92       	push	r12
     af8:	df 92       	push	r13
     afa:	ef 92       	push	r14
     afc:	ff 92       	push	r15
     afe:	0f 93       	push	r16
     b00:	1f 93       	push	r17
     b02:	cf 93       	push	r28
     b04:	df 93       	push	r29
     b06:	cd b7       	in	r28, 0x3d	; 61
     b08:	de b7       	in	r29, 0x3e	; 62
     b0a:	28 97       	sbiw	r28, 0x08	; 8
     b0c:	0f b6       	in	r0, 0x3f	; 63
     b0e:	f8 94       	cli
     b10:	de bf       	out	0x3e, r29	; 62
     b12:	0f be       	out	0x3f, r0	; 63
     b14:	cd bf       	out	0x3d, r28	; 61
     b16:	9e 83       	std	Y+6, r25	; 0x06
     b18:	8d 83       	std	Y+5, r24	; 0x05
     b1a:	7a 83       	std	Y+2, r23	; 0x02
     b1c:	69 83       	std	Y+1, r22	; 0x01
     b1e:	04 2f       	mov	r16, r20
     b20:	15 2f       	mov	r17, r21
     b22:	c2 2e       	mov	r12, r18
     b24:	d3 2e       	mov	r13, r19
	Complex* vec=(Complex*)malloc(sizeof(Complex)*(qb_count*2));
     b26:	cb 01       	movw	r24, r22
     b28:	82 95       	swap	r24
     b2a:	92 95       	swap	r25
     b2c:	90 7f       	andi	r25, 0xF0	; 240
     b2e:	98 27       	eor	r25, r24
     b30:	80 7f       	andi	r24, 0xF0	; 240
     b32:	98 27       	eor	r25, r24
     b34:	0e 94 0c 21 	call	0x4218	; 0x4218 <malloc>
     b38:	8b 83       	std	Y+3, r24	; 0x03
     b3a:	9c 83       	std	Y+4, r25	; 0x04
	int thephi_index=0;
	for(int i=0;i<qb_count*2;i+=2){
     b3c:	29 80       	ldd	r2, Y+1	; 0x01
     b3e:	3a 80       	ldd	r3, Y+2	; 0x02
     b40:	22 0c       	add	r2, r2
     b42:	33 1c       	adc	r3, r3
     b44:	12 14       	cp	r1, r2
     b46:	13 04       	cpc	r1, r3
     b48:	0c f0       	brlt	.+2      	; 0xb4c <_ZN5Gates8ampl2vecEiPiS0_+0x6a>
     b4a:	ac c0       	rjmp	.+344    	; 0xca4 <_ZN5Gates8ampl2vecEiPiS0_+0x1c2>
     b4c:	a8 2e       	mov	r10, r24
     b4e:	b9 2e       	mov	r11, r25
     b50:	e0 2e       	mov	r14, r16
     b52:	f1 2e       	mov	r15, r17
     b54:	0c 2d       	mov	r16, r12
     b56:	1d 2d       	mov	r17, r13
     b58:	81 2c       	mov	r8, r1
     b5a:	91 2c       	mov	r9, r1
     b5c:	b8 86       	std	Y+8, r11	; 0x08
     b5e:	af 82       	std	Y+7, r10	; 0x07
     b60:	67 01       	movw	r12, r14
		vec[i].re=cos(theta_list[thephi_index]*M_PI/360);												// ALPHA RE (IM=0)
     b62:	f7 01       	movw	r30, r14
     b64:	41 90       	ld	r4, Z+
     b66:	51 90       	ld	r5, Z+
     b68:	7f 01       	movw	r14, r30
     b6a:	66 24       	eor	r6, r6
     b6c:	57 fc       	sbrc	r5, 7
     b6e:	60 94       	com	r6
     b70:	76 2c       	mov	r7, r6
     b72:	c3 01       	movw	r24, r6
     b74:	b2 01       	movw	r22, r4
     b76:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__floatsisf>
     b7a:	2b ed       	ldi	r18, 0xDB	; 219
     b7c:	3f e0       	ldi	r19, 0x0F	; 15
     b7e:	49 e4       	ldi	r20, 0x49	; 73
     b80:	50 e4       	ldi	r21, 0x40	; 64
     b82:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     b86:	20 e0       	ldi	r18, 0x00	; 0
     b88:	30 e0       	ldi	r19, 0x00	; 0
     b8a:	44 eb       	ldi	r20, 0xB4	; 180
     b8c:	53 e4       	ldi	r21, 0x43	; 67
     b8e:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <__divsf3>
     b92:	0e 94 59 1d 	call	0x3ab2	; 0x3ab2 <cos>
     b96:	ef 81       	ldd	r30, Y+7	; 0x07
     b98:	f8 85       	ldd	r31, Y+8	; 0x08
     b9a:	60 83       	st	Z, r22
     b9c:	71 83       	std	Z+1, r23	; 0x01
     b9e:	82 83       	std	Z+2, r24	; 0x02
     ba0:	93 83       	std	Z+3, r25	; 0x03
		vec[i+1].re=sin((theta_list[thephi_index]*M_PI)/360)*cos((phi_list[thephi_index]*M_PI)/180);	// BETA RE
     ba2:	c3 01       	movw	r24, r6
     ba4:	b2 01       	movw	r22, r4
     ba6:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__floatsisf>
     baa:	2b ed       	ldi	r18, 0xDB	; 219
     bac:	3f e0       	ldi	r19, 0x0F	; 15
     bae:	49 e4       	ldi	r20, 0x49	; 73
     bb0:	50 e4       	ldi	r21, 0x40	; 64
     bb2:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     bb6:	20 e0       	ldi	r18, 0x00	; 0
     bb8:	30 e0       	ldi	r19, 0x00	; 0
     bba:	44 eb       	ldi	r20, 0xB4	; 180
     bbc:	53 e4       	ldi	r21, 0x43	; 67
     bbe:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <__divsf3>
     bc2:	0e 94 6d 20 	call	0x40da	; 0x40da <sin>
     bc6:	2b 01       	movw	r4, r22
     bc8:	3c 01       	movw	r6, r24
     bca:	58 01       	movw	r10, r16
     bcc:	f8 01       	movw	r30, r16
     bce:	61 91       	ld	r22, Z+
     bd0:	71 91       	ld	r23, Z+
     bd2:	8f 01       	movw	r16, r30
     bd4:	88 27       	eor	r24, r24
     bd6:	77 fd       	sbrc	r23, 7
     bd8:	80 95       	com	r24
     bda:	98 2f       	mov	r25, r24
     bdc:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__floatsisf>
     be0:	2b ed       	ldi	r18, 0xDB	; 219
     be2:	3f e0       	ldi	r19, 0x0F	; 15
     be4:	49 e4       	ldi	r20, 0x49	; 73
     be6:	50 e4       	ldi	r21, 0x40	; 64
     be8:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     bec:	20 e0       	ldi	r18, 0x00	; 0
     bee:	30 e0       	ldi	r19, 0x00	; 0
     bf0:	44 e3       	ldi	r20, 0x34	; 52
     bf2:	53 e4       	ldi	r21, 0x43	; 67
     bf4:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <__divsf3>
     bf8:	0e 94 59 1d 	call	0x3ab2	; 0x3ab2 <cos>
     bfc:	9b 01       	movw	r18, r22
     bfe:	ac 01       	movw	r20, r24
     c00:	c3 01       	movw	r24, r6
     c02:	b2 01       	movw	r22, r4
     c04:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     c08:	ef 81       	ldd	r30, Y+7	; 0x07
     c0a:	f8 85       	ldd	r31, Y+8	; 0x08
     c0c:	60 87       	std	Z+8, r22	; 0x08
     c0e:	71 87       	std	Z+9, r23	; 0x09
     c10:	82 87       	std	Z+10, r24	; 0x0a
     c12:	93 87       	std	Z+11, r25	; 0x0b
		vec[i+1].im=sin((theta_list[thephi_index]*M_PI)/360)*sin((phi_list[thephi_index++]*M_PI)/180);  // BETA IM
     c14:	f6 01       	movw	r30, r12
     c16:	60 81       	ld	r22, Z
     c18:	71 81       	ldd	r23, Z+1	; 0x01
     c1a:	88 27       	eor	r24, r24
     c1c:	77 fd       	sbrc	r23, 7
     c1e:	80 95       	com	r24
     c20:	98 2f       	mov	r25, r24
     c22:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__floatsisf>
     c26:	2b ed       	ldi	r18, 0xDB	; 219
     c28:	3f e0       	ldi	r19, 0x0F	; 15
     c2a:	49 e4       	ldi	r20, 0x49	; 73
     c2c:	50 e4       	ldi	r21, 0x40	; 64
     c2e:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	44 eb       	ldi	r20, 0xB4	; 180
     c38:	53 e4       	ldi	r21, 0x43	; 67
     c3a:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <__divsf3>
     c3e:	0e 94 6d 20 	call	0x40da	; 0x40da <sin>
     c42:	2b 01       	movw	r4, r22
     c44:	3c 01       	movw	r6, r24
     c46:	f5 01       	movw	r30, r10
     c48:	60 81       	ld	r22, Z
     c4a:	71 81       	ldd	r23, Z+1	; 0x01
     c4c:	88 27       	eor	r24, r24
     c4e:	77 fd       	sbrc	r23, 7
     c50:	80 95       	com	r24
     c52:	98 2f       	mov	r25, r24
     c54:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__floatsisf>
     c58:	2b ed       	ldi	r18, 0xDB	; 219
     c5a:	3f e0       	ldi	r19, 0x0F	; 15
     c5c:	49 e4       	ldi	r20, 0x49	; 73
     c5e:	50 e4       	ldi	r21, 0x40	; 64
     c60:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     c64:	20 e0       	ldi	r18, 0x00	; 0
     c66:	30 e0       	ldi	r19, 0x00	; 0
     c68:	44 e3       	ldi	r20, 0x34	; 52
     c6a:	53 e4       	ldi	r21, 0x43	; 67
     c6c:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <__divsf3>
     c70:	0e 94 6d 20 	call	0x40da	; 0x40da <sin>
     c74:	9b 01       	movw	r18, r22
     c76:	ac 01       	movw	r20, r24
     c78:	c3 01       	movw	r24, r6
     c7a:	b2 01       	movw	r22, r4
     c7c:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     c80:	ef 81       	ldd	r30, Y+7	; 0x07
     c82:	f8 85       	ldd	r31, Y+8	; 0x08
     c84:	64 87       	std	Z+12, r22	; 0x0c
     c86:	75 87       	std	Z+13, r23	; 0x0d
     c88:	86 87       	std	Z+14, r24	; 0x0e
     c8a:	97 87       	std	Z+15, r25	; 0x0f
}

Complex * Gates::ampl2vec(int qb_count,int theta_list[6],int phi_list[6]){
	Complex* vec=(Complex*)malloc(sizeof(Complex)*(qb_count*2));
	int thephi_index=0;
	for(int i=0;i<qb_count*2;i+=2){
     c8c:	f2 e0       	ldi	r31, 0x02	; 2
     c8e:	8f 0e       	add	r8, r31
     c90:	91 1c       	adc	r9, r1
     c92:	8f 81       	ldd	r24, Y+7	; 0x07
     c94:	98 85       	ldd	r25, Y+8	; 0x08
     c96:	40 96       	adiw	r24, 0x10	; 16
     c98:	98 87       	std	Y+8, r25	; 0x08
     c9a:	8f 83       	std	Y+7, r24	; 0x07
     c9c:	82 14       	cp	r8, r2
     c9e:	93 04       	cpc	r9, r3
     ca0:	0c f4       	brge	.+2      	; 0xca4 <_ZN5Gates8ampl2vecEiPiS0_+0x1c2>
     ca2:	5e cf       	rjmp	.-324    	; 0xb60 <_ZN5Gates8ampl2vecEiPiS0_+0x7e>
		vec[i].re=cos(theta_list[thephi_index]*M_PI/360);												// ALPHA RE (IM=0)
		vec[i+1].re=sin((theta_list[thephi_index]*M_PI)/360)*cos((phi_list[thephi_index]*M_PI)/180);	// BETA RE
		vec[i+1].im=sin((theta_list[thephi_index]*M_PI)/360)*sin((phi_list[thephi_index++]*M_PI)/180);  // BETA IM
	}
	print_states(qb_count*2,vec,"Before: ");
     ca4:	45 e7       	ldi	r20, 0x75	; 117
     ca6:	50 e0       	ldi	r21, 0x00	; 0
     ca8:	6b 81       	ldd	r22, Y+3	; 0x03
     caa:	7c 81       	ldd	r23, Y+4	; 0x04
     cac:	c1 01       	movw	r24, r2
     cae:	0e 94 b4 02 	call	0x568	; 0x568 <_Z12print_statesiP7ComplexPc>
	return kronecker(vec,qb_count,true); // PUT VEC INTO KRONECKER AND RETURN THE RESULT
     cb2:	21 e0       	ldi	r18, 0x01	; 1
     cb4:	30 e0       	ldi	r19, 0x00	; 0
     cb6:	49 81       	ldd	r20, Y+1	; 0x01
     cb8:	5a 81       	ldd	r21, Y+2	; 0x02
     cba:	6b 81       	ldd	r22, Y+3	; 0x03
     cbc:	7c 81       	ldd	r23, Y+4	; 0x04
     cbe:	8d 81       	ldd	r24, Y+5	; 0x05
     cc0:	9e 81       	ldd	r25, Y+6	; 0x06
     cc2:	0e 94 54 04 	call	0x8a8	; 0x8a8 <_ZN5Gates9kroneckerEP7Complexii>
}
     cc6:	28 96       	adiw	r28, 0x08	; 8
     cc8:	0f b6       	in	r0, 0x3f	; 63
     cca:	f8 94       	cli
     ccc:	de bf       	out	0x3e, r29	; 62
     cce:	0f be       	out	0x3f, r0	; 63
     cd0:	cd bf       	out	0x3d, r28	; 61
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
     cd6:	1f 91       	pop	r17
     cd8:	0f 91       	pop	r16
     cda:	ff 90       	pop	r15
     cdc:	ef 90       	pop	r14
     cde:	df 90       	pop	r13
     ce0:	cf 90       	pop	r12
     ce2:	bf 90       	pop	r11
     ce4:	af 90       	pop	r10
     ce6:	9f 90       	pop	r9
     ce8:	8f 90       	pop	r8
     cea:	7f 90       	pop	r7
     cec:	6f 90       	pop	r6
     cee:	5f 90       	pop	r5
     cf0:	4f 90       	pop	r4
     cf2:	3f 90       	pop	r3
     cf4:	2f 90       	pop	r2
     cf6:	08 95       	ret

00000cf8 <_ZN5Gates8vec2amplEP7Complexi>:
int * Gates::vec2ampl(Complex * vec,int qb_count){
     cf8:	6f 92       	push	r6
     cfa:	7f 92       	push	r7
     cfc:	8f 92       	push	r8
     cfe:	9f 92       	push	r9
     d00:	af 92       	push	r10
     d02:	bf 92       	push	r11
     d04:	cf 92       	push	r12
     d06:	df 92       	push	r13
     d08:	ef 92       	push	r14
     d0a:	ff 92       	push	r15
     d0c:	0f 93       	push	r16
     d0e:	1f 93       	push	r17
     d10:	cf 93       	push	r28
     d12:	df 93       	push	r29
     d14:	86 2e       	mov	r8, r22
     d16:	97 2e       	mov	r9, r23
     d18:	5a 01       	movw	r10, r20
int Gates::touch(double probability){
	return RAND_MAX*probability>=rand();
}

int Gates::custom_pow(int base,int exp){
	int result=1; for(int i=0;i<exp;i++) result*=base;
     d1a:	14 16       	cp	r1, r20
     d1c:	15 06       	cpc	r1, r21
     d1e:	6c f4       	brge	.+26     	; 0xd3a <_ZN5Gates8vec2amplEP7Complexi+0x42>
     d20:	20 e0       	ldi	r18, 0x00	; 0
     d22:	30 e0       	ldi	r19, 0x00	; 0
     d24:	cc 24       	eor	r12, r12
     d26:	c3 94       	inc	r12
     d28:	d1 2c       	mov	r13, r1
     d2a:	cc 0c       	add	r12, r12
     d2c:	dd 1c       	adc	r13, r13
     d2e:	2f 5f       	subi	r18, 0xFF	; 255
     d30:	3f 4f       	sbci	r19, 0xFF	; 255
     d32:	2a 15       	cp	r18, r10
     d34:	3b 05       	cpc	r19, r11
     d36:	c9 f7       	brne	.-14     	; 0xd2a <_ZN5Gates8vec2amplEP7Complexi+0x32>
     d38:	03 c0       	rjmp	.+6      	; 0xd40 <_ZN5Gates8vec2amplEP7Complexi+0x48>
     d3a:	cc 24       	eor	r12, r12
     d3c:	c3 94       	inc	r12
     d3e:	d1 2c       	mov	r13, r1
	print_states(qb_count*2,vec,"Before: ");
	return kronecker(vec,qb_count,true); // PUT VEC INTO KRONECKER AND RETURN THE RESULT
}
int * Gates::vec2ampl(Complex * vec,int qb_count){
	int kron_size=custom_pow(2,qb_count);
	if(qb_count>1) vec=reverse_kronecker(vec,kron_size);
     d40:	22 e0       	ldi	r18, 0x02	; 2
     d42:	a2 16       	cp	r10, r18
     d44:	b1 04       	cpc	r11, r1
     d46:	3c f0       	brlt	.+14     	; 0xd56 <_ZN5Gates8vec2amplEP7Complexi+0x5e>
     d48:	a6 01       	movw	r20, r12
     d4a:	68 2d       	mov	r22, r8
     d4c:	79 2d       	mov	r23, r9
     d4e:	0e 94 59 03 	call	0x6b2	; 0x6b2 <_ZN5Gates17reverse_kroneckerEP7Complexi>
     d52:	88 2e       	mov	r8, r24
     d54:	99 2e       	mov	r9, r25
	
	int* newthephi=(int*)malloc(sizeof(int)*(qb_count*2));
     d56:	c5 01       	movw	r24, r10
     d58:	88 0f       	add	r24, r24
     d5a:	99 1f       	adc	r25, r25
     d5c:	88 0f       	add	r24, r24
     d5e:	99 1f       	adc	r25, r25
     d60:	0e 94 0c 21 	call	0x4218	; 0x4218 <malloc>
     d64:	68 2e       	mov	r6, r24
     d66:	79 2e       	mov	r7, r25
	for(int i=0;i<qb_count*2;i++) if(i%2==0) newthephi[i]=(360*acos(vec[i].re))/M_PI; else newthephi[i]=(180*vec[i].arg())/M_PI;
     d68:	aa 0c       	add	r10, r10
     d6a:	bb 1c       	adc	r11, r11
     d6c:	1a 14       	cp	r1, r10
     d6e:	1b 04       	cpc	r1, r11
     d70:	f4 f5       	brge	.+124    	; 0xdee <_ZN5Gates8vec2amplEP7Complexi+0xf6>
     d72:	e8 2c       	mov	r14, r8
     d74:	f9 2c       	mov	r15, r9
     d76:	08 2f       	mov	r16, r24
     d78:	19 2f       	mov	r17, r25
     d7a:	c0 e0       	ldi	r28, 0x00	; 0
     d7c:	d0 e0       	ldi	r29, 0x00	; 0
     d7e:	c0 fd       	sbrc	r28, 0
     d80:	19 c0       	rjmp	.+50     	; 0xdb4 <_ZN5Gates8vec2amplEP7Complexi+0xbc>
     d82:	f7 01       	movw	r30, r14
     d84:	60 81       	ld	r22, Z
     d86:	71 81       	ldd	r23, Z+1	; 0x01
     d88:	82 81       	ldd	r24, Z+2	; 0x02
     d8a:	93 81       	ldd	r25, Z+3	; 0x03
     d8c:	0e 94 ba 1c 	call	0x3974	; 0x3974 <acos>
     d90:	20 e0       	ldi	r18, 0x00	; 0
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	44 eb       	ldi	r20, 0xB4	; 180
     d96:	53 e4       	ldi	r21, 0x43	; 67
     d98:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     d9c:	2b ed       	ldi	r18, 0xDB	; 219
     d9e:	3f e0       	ldi	r19, 0x0F	; 15
     da0:	49 e4       	ldi	r20, 0x49	; 73
     da2:	50 e4       	ldi	r21, 0x40	; 64
     da4:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <__divsf3>
     da8:	0e 94 f5 1d 	call	0x3bea	; 0x3bea <__fixsfsi>
     dac:	f8 01       	movw	r30, r16
     dae:	71 83       	std	Z+1, r23	; 0x01
     db0:	60 83       	st	Z, r22
     db2:	14 c0       	rjmp	.+40     	; 0xddc <_ZN5Gates8vec2amplEP7Complexi+0xe4>
     db4:	c7 01       	movw	r24, r14
     db6:	0e 94 02 02 	call	0x404	; 0x404 <_ZN7Complex3argEv>
     dba:	20 e0       	ldi	r18, 0x00	; 0
     dbc:	30 e0       	ldi	r19, 0x00	; 0
     dbe:	44 e3       	ldi	r20, 0x34	; 52
     dc0:	53 e4       	ldi	r21, 0x43	; 67
     dc2:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
     dc6:	2b ed       	ldi	r18, 0xDB	; 219
     dc8:	3f e0       	ldi	r19, 0x0F	; 15
     dca:	49 e4       	ldi	r20, 0x49	; 73
     dcc:	50 e4       	ldi	r21, 0x40	; 64
     dce:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <__divsf3>
     dd2:	0e 94 f5 1d 	call	0x3bea	; 0x3bea <__fixsfsi>
     dd6:	f8 01       	movw	r30, r16
     dd8:	71 83       	std	Z+1, r23	; 0x01
     dda:	60 83       	st	Z, r22
     ddc:	21 96       	adiw	r28, 0x01	; 1
     dde:	f8 e0       	ldi	r31, 0x08	; 8
     de0:	ef 0e       	add	r14, r31
     de2:	f1 1c       	adc	r15, r1
     de4:	0e 5f       	subi	r16, 0xFE	; 254
     de6:	1f 4f       	sbci	r17, 0xFF	; 255
     de8:	ca 15       	cp	r28, r10
     dea:	db 05       	cpc	r29, r11
     dec:	41 f6       	brne	.-112    	; 0xd7e <_ZN5Gates8vec2amplEP7Complexi+0x86>

	print_states(kron_size,vec,"After: ");
     dee:	4e e7       	ldi	r20, 0x7E	; 126
     df0:	50 e0       	ldi	r21, 0x00	; 0
     df2:	68 2d       	mov	r22, r8
     df4:	79 2d       	mov	r23, r9
     df6:	c6 01       	movw	r24, r12
     df8:	0e 94 b4 02 	call	0x568	; 0x568 <_Z12print_statesiP7ComplexPc>
	return newthephi;
}
     dfc:	86 2d       	mov	r24, r6
     dfe:	97 2d       	mov	r25, r7
     e00:	df 91       	pop	r29
     e02:	cf 91       	pop	r28
     e04:	1f 91       	pop	r17
     e06:	0f 91       	pop	r16
     e08:	ff 90       	pop	r15
     e0a:	ef 90       	pop	r14
     e0c:	df 90       	pop	r13
     e0e:	cf 90       	pop	r12
     e10:	bf 90       	pop	r11
     e12:	af 90       	pop	r10
     e14:	9f 90       	pop	r9
     e16:	8f 90       	pop	r8
     e18:	7f 90       	pop	r7
     e1a:	6f 90       	pop	r6
     e1c:	08 95       	ret

00000e1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>:

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
     e1e:	2f 92       	push	r2
     e20:	3f 92       	push	r3
     e22:	4f 92       	push	r4
     e24:	5f 92       	push	r5
     e26:	6f 92       	push	r6
     e28:	7f 92       	push	r7
     e2a:	8f 92       	push	r8
     e2c:	9f 92       	push	r9
     e2e:	af 92       	push	r10
     e30:	bf 92       	push	r11
     e32:	cf 92       	push	r12
     e34:	df 92       	push	r13
     e36:	ef 92       	push	r14
     e38:	ff 92       	push	r15
     e3a:	0f 93       	push	r16
     e3c:	1f 93       	push	r17
     e3e:	cf 93       	push	r28
     e40:	df 93       	push	r29
     e42:	cd b7       	in	r28, 0x3d	; 61
     e44:	de b7       	in	r29, 0x3e	; 62
     e46:	60 97       	sbiw	r28, 0x10	; 16
     e48:	0f b6       	in	r0, 0x3f	; 63
     e4a:	f8 94       	cli
     e4c:	de bf       	out	0x3e, r29	; 62
     e4e:	0f be       	out	0x3f, r0	; 63
     e50:	cd bf       	out	0x3d, r28	; 61
     e52:	4b 01       	movw	r8, r22
     e54:	3a 01       	movw	r6, r20
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
     e56:	80 e1       	ldi	r24, 0x10	; 16
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	0e 94 0c 21 	call	0x4218	; 0x4218 <malloc>
     e5e:	38 2e       	mov	r3, r24
     e60:	29 2e       	mov	r2, r25
     e62:	c8 2e       	mov	r12, r24
     e64:	d9 2e       	mov	r13, r25
	for(int i=0;i<qb_size;i++){
     e66:	a1 2c       	mov	r10, r1
     e68:	b1 2c       	mov	r11, r1
		Complex tmp;
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
     e6a:	24 01       	movw	r4, r8
     e6c:	88 e0       	ldi	r24, 0x08	; 8
     e6e:	48 0e       	add	r4, r24
     e70:	51 1c       	adc	r5, r1

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
		Complex tmp;
     e72:	ce 01       	movw	r24, r28
     e74:	09 96       	adiw	r24, 0x09	; 9
     e76:	0e 94 00 01 	call	0x200	; 0x200 <_ZN7ComplexC1Ev>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
     e7a:	75 01       	movw	r14, r10
     e7c:	ee 0c       	add	r14, r14
     e7e:	ff 1c       	adc	r15, r15
     e80:	ee 0c       	add	r14, r14
     e82:	ff 1c       	adc	r15, r15
     e84:	ee 0c       	add	r14, r14
     e86:	ff 1c       	adc	r15, r15
     e88:	e6 0c       	add	r14, r6
     e8a:	f7 1c       	adc	r15, r7
     e8c:	d7 01       	movw	r26, r14
     e8e:	0c 91       	ld	r16, X
     e90:	11 96       	adiw	r26, 0x01	; 1
     e92:	1c 91       	ld	r17, X
     e94:	11 97       	sbiw	r26, 0x01	; 1
     e96:	12 96       	adiw	r26, 0x02	; 2
     e98:	2c 91       	ld	r18, X
     e9a:	12 97       	sbiw	r26, 0x02	; 2
     e9c:	13 96       	adiw	r26, 0x03	; 3
     e9e:	3c 91       	ld	r19, X
     ea0:	13 97       	sbiw	r26, 0x03	; 3
     ea2:	14 96       	adiw	r26, 0x04	; 4
     ea4:	4c 91       	ld	r20, X
     ea6:	14 97       	sbiw	r26, 0x04	; 4
     ea8:	15 96       	adiw	r26, 0x05	; 5
     eaa:	5c 91       	ld	r21, X
     eac:	15 97       	sbiw	r26, 0x05	; 5
     eae:	16 96       	adiw	r26, 0x06	; 6
     eb0:	6c 91       	ld	r22, X
     eb2:	16 97       	sbiw	r26, 0x06	; 6
     eb4:	17 96       	adiw	r26, 0x07	; 7
     eb6:	7c 91       	ld	r23, X
     eb8:	c4 01       	movw	r24, r8
     eba:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN7Complex3mulES_>
     ebe:	02 2f       	mov	r16, r18
     ec0:	13 2f       	mov	r17, r19
     ec2:	24 2f       	mov	r18, r20
     ec4:	35 2f       	mov	r19, r21
     ec6:	46 2f       	mov	r20, r22
     ec8:	57 2f       	mov	r21, r23
     eca:	68 2f       	mov	r22, r24
     ecc:	79 2f       	mov	r23, r25
     ece:	ce 01       	movw	r24, r28
     ed0:	09 96       	adiw	r24, 0x09	; 9
     ed2:	0e 94 0a 01 	call	0x214	; 0x214 <_ZN7Complex3addES_>
     ed6:	29 87       	std	Y+9, r18	; 0x09
     ed8:	3a 87       	std	Y+10, r19	; 0x0a
     eda:	4b 87       	std	Y+11, r20	; 0x0b
     edc:	5c 87       	std	Y+12, r21	; 0x0c
     ede:	6d 87       	std	Y+13, r22	; 0x0d
     ee0:	7e 87       	std	Y+14, r23	; 0x0e
     ee2:	8f 87       	std	Y+15, r24	; 0x0f
     ee4:	98 8b       	std	Y+16, r25	; 0x10
     ee6:	f7 01       	movw	r30, r14
     ee8:	70 96       	adiw	r30, 0x10	; 16
     eea:	d7 01       	movw	r26, r14
     eec:	50 96       	adiw	r26, 0x10	; 16
     eee:	0c 91       	ld	r16, X
     ef0:	11 81       	ldd	r17, Z+1	; 0x01
     ef2:	22 81       	ldd	r18, Z+2	; 0x02
     ef4:	33 81       	ldd	r19, Z+3	; 0x03
     ef6:	44 81       	ldd	r20, Z+4	; 0x04
     ef8:	55 81       	ldd	r21, Z+5	; 0x05
     efa:	66 81       	ldd	r22, Z+6	; 0x06
     efc:	77 81       	ldd	r23, Z+7	; 0x07
     efe:	c2 01       	movw	r24, r4
     f00:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN7Complex3mulES_>
     f04:	02 2f       	mov	r16, r18
     f06:	13 2f       	mov	r17, r19
     f08:	24 2f       	mov	r18, r20
     f0a:	35 2f       	mov	r19, r21
     f0c:	46 2f       	mov	r20, r22
     f0e:	57 2f       	mov	r21, r23
     f10:	68 2f       	mov	r22, r24
     f12:	79 2f       	mov	r23, r25
     f14:	ce 01       	movw	r24, r28
     f16:	09 96       	adiw	r24, 0x09	; 9
     f18:	0e 94 0a 01 	call	0x214	; 0x214 <_ZN7Complex3addES_>
     f1c:	29 87       	std	Y+9, r18	; 0x09
     f1e:	3a 87       	std	Y+10, r19	; 0x0a
     f20:	4b 87       	std	Y+11, r20	; 0x0b
     f22:	5c 87       	std	Y+12, r21	; 0x0c
     f24:	6d 87       	std	Y+13, r22	; 0x0d
     f26:	7e 87       	std	Y+14, r23	; 0x0e
     f28:	8f 87       	std	Y+15, r24	; 0x0f
     f2a:	98 8b       	std	Y+16, r25	; 0x10
		result[i].re=tmp.re;
     f2c:	89 85       	ldd	r24, Y+9	; 0x09
     f2e:	9a 85       	ldd	r25, Y+10	; 0x0a
     f30:	ab 85       	ldd	r26, Y+11	; 0x0b
     f32:	bc 85       	ldd	r27, Y+12	; 0x0c
     f34:	f6 01       	movw	r30, r12
     f36:	80 83       	st	Z, r24
     f38:	91 83       	std	Z+1, r25	; 0x01
     f3a:	a2 83       	std	Z+2, r26	; 0x02
     f3c:	b3 83       	std	Z+3, r27	; 0x03
		result[i].im=tmp.im;
     f3e:	8d 85       	ldd	r24, Y+13	; 0x0d
     f40:	9e 85       	ldd	r25, Y+14	; 0x0e
     f42:	af 85       	ldd	r26, Y+15	; 0x0f
     f44:	b8 89       	ldd	r27, Y+16	; 0x10
     f46:	84 83       	std	Z+4, r24	; 0x04
     f48:	95 83       	std	Z+5, r25	; 0x05
     f4a:	a6 83       	std	Z+6, r26	; 0x06
     f4c:	b7 83       	std	Z+7, r27	; 0x07
}

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
     f4e:	ff ef       	ldi	r31, 0xFF	; 255
     f50:	af 1a       	sub	r10, r31
     f52:	bf 0a       	sbc	r11, r31
     f54:	88 e0       	ldi	r24, 0x08	; 8
     f56:	c8 0e       	add	r12, r24
     f58:	d1 1c       	adc	r13, r1
     f5a:	a2 e0       	ldi	r26, 0x02	; 2
     f5c:	aa 16       	cp	r10, r26
     f5e:	b1 04       	cpc	r11, r1
     f60:	09 f0       	breq	.+2      	; 0xf64 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_+0x146>
     f62:	87 cf       	rjmp	.-242    	; 0xe72 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_+0x54>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
		result[i].re=tmp.re;
		result[i].im=tmp.im;
	}
	return result;
}
     f64:	83 2d       	mov	r24, r3
     f66:	92 2d       	mov	r25, r2
     f68:	60 96       	adiw	r28, 0x10	; 16
     f6a:	0f b6       	in	r0, 0x3f	; 63
     f6c:	f8 94       	cli
     f6e:	de bf       	out	0x3e, r29	; 62
     f70:	0f be       	out	0x3f, r0	; 63
     f72:	cd bf       	out	0x3d, r28	; 61
     f74:	df 91       	pop	r29
     f76:	cf 91       	pop	r28
     f78:	1f 91       	pop	r17
     f7a:	0f 91       	pop	r16
     f7c:	ff 90       	pop	r15
     f7e:	ef 90       	pop	r14
     f80:	df 90       	pop	r13
     f82:	cf 90       	pop	r12
     f84:	bf 90       	pop	r11
     f86:	af 90       	pop	r10
     f88:	9f 90       	pop	r9
     f8a:	8f 90       	pop	r8
     f8c:	7f 90       	pop	r7
     f8e:	6f 90       	pop	r6
     f90:	5f 90       	pop	r5
     f92:	4f 90       	pop	r4
     f94:	3f 90       	pop	r3
     f96:	2f 90       	pop	r2
     f98:	08 95       	ret

00000f9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>:
Complex * Gates::multiply4x4(Complex *q,Complex matrix[4][4]){
     f9a:	2f 92       	push	r2
     f9c:	3f 92       	push	r3
     f9e:	4f 92       	push	r4
     fa0:	5f 92       	push	r5
     fa2:	6f 92       	push	r6
     fa4:	7f 92       	push	r7
     fa6:	8f 92       	push	r8
     fa8:	9f 92       	push	r9
     faa:	af 92       	push	r10
     fac:	bf 92       	push	r11
     fae:	cf 92       	push	r12
     fb0:	df 92       	push	r13
     fb2:	ef 92       	push	r14
     fb4:	ff 92       	push	r15
     fb6:	0f 93       	push	r16
     fb8:	1f 93       	push	r17
     fba:	cf 93       	push	r28
     fbc:	df 93       	push	r29
     fbe:	cd b7       	in	r28, 0x3d	; 61
     fc0:	de b7       	in	r29, 0x3e	; 62
     fc2:	64 97       	sbiw	r28, 0x14	; 20
     fc4:	0f b6       	in	r0, 0x3f	; 63
     fc6:	f8 94       	cli
     fc8:	de bf       	out	0x3e, r29	; 62
     fca:	0f be       	out	0x3f, r0	; 63
     fcc:	cd bf       	out	0x3d, r28	; 61
     fce:	3b 01       	movw	r6, r22
     fd0:	e4 2e       	mov	r14, r20
     fd2:	f5 2e       	mov	r15, r21
	int qb_size=4;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
     fd4:	80 e2       	ldi	r24, 0x20	; 32
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	0e 94 0c 21 	call	0x4218	; 0x4218 <malloc>
     fdc:	8b 8b       	std	Y+19, r24	; 0x13
     fde:	9c 8b       	std	Y+20, r25	; 0x14
     fe0:	48 2e       	mov	r4, r24
     fe2:	59 2e       	mov	r5, r25
	for(int i=0;i<qb_size;i++){
     fe4:	81 2c       	mov	r8, r1
     fe6:	91 2c       	mov	r9, r1
     fe8:	e9 8a       	std	Y+17, r14	; 0x11
     fea:	fa 8a       	std	Y+18, r15	; 0x12
		Complex tmp;
     fec:	21 2c       	mov	r2, r1
     fee:	31 2c       	mov	r3, r1
     ff0:	ce 01       	movw	r24, r28
     ff2:	09 96       	adiw	r24, 0x09	; 9
     ff4:	0e 94 00 01 	call	0x200	; 0x200 <_ZN7ComplexC1Ev>
     ff8:	c9 88       	ldd	r12, Y+17	; 0x11
     ffa:	da 88       	ldd	r13, Y+18	; 0x12
     ffc:	e2 2c       	mov	r14, r2
     ffe:	f3 2c       	mov	r15, r3
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
    1000:	54 01       	movw	r10, r8
    1002:	aa 0c       	add	r10, r10
    1004:	bb 1c       	adc	r11, r11
    1006:	aa 0c       	add	r10, r10
    1008:	bb 1c       	adc	r11, r11
    100a:	aa 0c       	add	r10, r10
    100c:	bb 1c       	adc	r11, r11
    100e:	f5 01       	movw	r30, r10
    1010:	ec 0d       	add	r30, r12
    1012:	fd 1d       	adc	r31, r13
    1014:	00 81       	ld	r16, Z
    1016:	11 81       	ldd	r17, Z+1	; 0x01
    1018:	22 81       	ldd	r18, Z+2	; 0x02
    101a:	33 81       	ldd	r19, Z+3	; 0x03
    101c:	44 81       	ldd	r20, Z+4	; 0x04
    101e:	55 81       	ldd	r21, Z+5	; 0x05
    1020:	66 81       	ldd	r22, Z+6	; 0x06
    1022:	77 81       	ldd	r23, Z+7	; 0x07
    1024:	c3 01       	movw	r24, r6
    1026:	8e 0d       	add	r24, r14
    1028:	9f 1d       	adc	r25, r15
    102a:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN7Complex3mulES_>
    102e:	29 83       	std	Y+1, r18	; 0x01
    1030:	3a 83       	std	Y+2, r19	; 0x02
    1032:	4b 83       	std	Y+3, r20	; 0x03
    1034:	5c 83       	std	Y+4, r21	; 0x04
    1036:	6d 83       	std	Y+5, r22	; 0x05
    1038:	7e 83       	std	Y+6, r23	; 0x06
    103a:	8f 83       	std	Y+7, r24	; 0x07
    103c:	98 87       	std	Y+8, r25	; 0x08
    103e:	02 2f       	mov	r16, r18
    1040:	13 2f       	mov	r17, r19
    1042:	24 2f       	mov	r18, r20
    1044:	35 2f       	mov	r19, r21
    1046:	46 2f       	mov	r20, r22
    1048:	57 2f       	mov	r21, r23
    104a:	68 2f       	mov	r22, r24
    104c:	79 2f       	mov	r23, r25
    104e:	ce 01       	movw	r24, r28
    1050:	09 96       	adiw	r24, 0x09	; 9
    1052:	0e 94 0a 01 	call	0x214	; 0x214 <_ZN7Complex3addES_>
    1056:	29 87       	std	Y+9, r18	; 0x09
    1058:	3a 87       	std	Y+10, r19	; 0x0a
    105a:	4b 87       	std	Y+11, r20	; 0x0b
    105c:	5c 87       	std	Y+12, r21	; 0x0c
    105e:	6d 87       	std	Y+13, r22	; 0x0d
    1060:	7e 87       	std	Y+14, r23	; 0x0e
    1062:	8f 87       	std	Y+15, r24	; 0x0f
    1064:	98 8b       	std	Y+16, r25	; 0x10
    1066:	88 e0       	ldi	r24, 0x08	; 8
    1068:	e8 0e       	add	r14, r24
    106a:	f1 1c       	adc	r15, r1
    106c:	e0 e2       	ldi	r30, 0x20	; 32
    106e:	ce 0e       	add	r12, r30
    1070:	d1 1c       	adc	r13, r1
    1072:	f0 e2       	ldi	r31, 0x20	; 32
    1074:	ef 16       	cp	r14, r31
    1076:	f1 04       	cpc	r15, r1
    1078:	51 f6       	brne	.-108    	; 0x100e <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_+0x74>
		result[i].re=tmp.re;
    107a:	89 85       	ldd	r24, Y+9	; 0x09
    107c:	9a 85       	ldd	r25, Y+10	; 0x0a
    107e:	ab 85       	ldd	r26, Y+11	; 0x0b
    1080:	bc 85       	ldd	r27, Y+12	; 0x0c
    1082:	f2 01       	movw	r30, r4
    1084:	80 83       	st	Z, r24
    1086:	91 83       	std	Z+1, r25	; 0x01
    1088:	a2 83       	std	Z+2, r26	; 0x02
    108a:	b3 83       	std	Z+3, r27	; 0x03
		result[i].im=tmp.im;
    108c:	8d 85       	ldd	r24, Y+13	; 0x0d
    108e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1090:	af 85       	ldd	r26, Y+15	; 0x0f
    1092:	b8 89       	ldd	r27, Y+16	; 0x10
    1094:	84 83       	std	Z+4, r24	; 0x04
    1096:	95 83       	std	Z+5, r25	; 0x05
    1098:	a6 83       	std	Z+6, r26	; 0x06
    109a:	b7 83       	std	Z+7, r27	; 0x07
	return result;
}
Complex * Gates::multiply4x4(Complex *q,Complex matrix[4][4]){
	int qb_size=4;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
    109c:	ff ef       	ldi	r31, 0xFF	; 255
    109e:	8f 1a       	sub	r8, r31
    10a0:	9f 0a       	sbc	r9, r31
    10a2:	88 e0       	ldi	r24, 0x08	; 8
    10a4:	48 0e       	add	r4, r24
    10a6:	51 1c       	adc	r5, r1
    10a8:	e4 e0       	ldi	r30, 0x04	; 4
    10aa:	8e 16       	cp	r8, r30
    10ac:	91 04       	cpc	r9, r1
    10ae:	09 f0       	breq	.+2      	; 0x10b2 <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_+0x118>
    10b0:	9f cf       	rjmp	.-194    	; 0xff0 <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_+0x56>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
		result[i].re=tmp.re;
		result[i].im=tmp.im;
	}
	return result;
}
    10b2:	8b 89       	ldd	r24, Y+19	; 0x13
    10b4:	9c 89       	ldd	r25, Y+20	; 0x14
    10b6:	64 96       	adiw	r28, 0x14	; 20
    10b8:	0f b6       	in	r0, 0x3f	; 63
    10ba:	f8 94       	cli
    10bc:	de bf       	out	0x3e, r29	; 62
    10be:	0f be       	out	0x3f, r0	; 63
    10c0:	cd bf       	out	0x3d, r28	; 61
    10c2:	df 91       	pop	r29
    10c4:	cf 91       	pop	r28
    10c6:	1f 91       	pop	r17
    10c8:	0f 91       	pop	r16
    10ca:	ff 90       	pop	r15
    10cc:	ef 90       	pop	r14
    10ce:	df 90       	pop	r13
    10d0:	cf 90       	pop	r12
    10d2:	bf 90       	pop	r11
    10d4:	af 90       	pop	r10
    10d6:	9f 90       	pop	r9
    10d8:	8f 90       	pop	r8
    10da:	7f 90       	pop	r7
    10dc:	6f 90       	pop	r6
    10de:	5f 90       	pop	r5
    10e0:	4f 90       	pop	r4
    10e2:	3f 90       	pop	r3
    10e4:	2f 90       	pop	r2
    10e6:	08 95       	ret

000010e8 <_ZN5Gates1XEii>:
		result[i].im=tmp.im;
	}
	return result;
}

int * Gates::X(int theta,int phi){
    10e8:	af 92       	push	r10
    10ea:	bf 92       	push	r11
    10ec:	cf 92       	push	r12
    10ee:	df 92       	push	r13
    10f0:	ef 92       	push	r14
    10f2:	ff 92       	push	r15
    10f4:	0f 93       	push	r16
    10f6:	1f 93       	push	r17
    10f8:	cf 93       	push	r28
    10fa:	df 93       	push	r29
    10fc:	cd b7       	in	r28, 0x3d	; 61
    10fe:	de b7       	in	r29, 0x3e	; 62
    1100:	a4 97       	sbiw	r28, 0x24	; 36
    1102:	0f b6       	in	r0, 0x3f	; 63
    1104:	f8 94       	cli
    1106:	de bf       	out	0x3e, r29	; 62
    1108:	0f be       	out	0x3f, r0	; 63
    110a:	cd bf       	out	0x3d, r28	; 61
    110c:	7c 01       	movw	r14, r24
    110e:	5b 01       	movw	r10, r22
    1110:	6a 01       	movw	r12, r20
	Complex x_matrix[QB_SIZE1*2][QB_SIZE1*2]{{Complex(0,0),Complex(1,0)},
											 {Complex(1,0),Complex(0,0)}};
    1112:	00 e0       	ldi	r16, 0x00	; 0
    1114:	10 e0       	ldi	r17, 0x00	; 0
    1116:	98 01       	movw	r18, r16
    1118:	b9 01       	movw	r22, r18
    111a:	a8 01       	movw	r20, r16
    111c:	ce 01       	movw	r24, r28
    111e:	01 96       	adiw	r24, 0x01	; 1
    1120:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1124:	00 e0       	ldi	r16, 0x00	; 0
    1126:	10 e0       	ldi	r17, 0x00	; 0
    1128:	98 01       	movw	r18, r16
    112a:	40 e0       	ldi	r20, 0x00	; 0
    112c:	50 e0       	ldi	r21, 0x00	; 0
    112e:	60 e8       	ldi	r22, 0x80	; 128
    1130:	7f e3       	ldi	r23, 0x3F	; 63
    1132:	ce 01       	movw	r24, r28
    1134:	09 96       	adiw	r24, 0x09	; 9
    1136:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    113a:	00 e0       	ldi	r16, 0x00	; 0
    113c:	10 e0       	ldi	r17, 0x00	; 0
    113e:	98 01       	movw	r18, r16
    1140:	40 e0       	ldi	r20, 0x00	; 0
    1142:	50 e0       	ldi	r21, 0x00	; 0
    1144:	60 e8       	ldi	r22, 0x80	; 128
    1146:	7f e3       	ldi	r23, 0x3F	; 63
    1148:	ce 01       	movw	r24, r28
    114a:	41 96       	adiw	r24, 0x11	; 17
    114c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1150:	00 e0       	ldi	r16, 0x00	; 0
    1152:	10 e0       	ldi	r17, 0x00	; 0
    1154:	98 01       	movw	r18, r16
    1156:	b9 01       	movw	r22, r18
    1158:	a8 01       	movw	r20, r16
    115a:	ce 01       	movw	r24, r28
    115c:	49 96       	adiw	r24, 0x19	; 25
    115e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[1]={phi};
    1162:	bc a2       	std	Y+36, r11	; 0x24
    1164:	ab a2       	std	Y+35, r10	; 0x23
    1166:	da a2       	std	Y+34, r13	; 0x22
    1168:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),x_matrix),QB_SIZE1);
    116a:	9e 01       	movw	r18, r28
    116c:	2f 5d       	subi	r18, 0xDF	; 223
    116e:	3f 4f       	sbci	r19, 0xFF	; 255
    1170:	ae 01       	movw	r20, r28
    1172:	4d 5d       	subi	r20, 0xDD	; 221
    1174:	5f 4f       	sbci	r21, 0xFF	; 255
    1176:	61 e0       	ldi	r22, 0x01	; 1
    1178:	70 e0       	ldi	r23, 0x00	; 0
    117a:	c7 01       	movw	r24, r14
    117c:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    1180:	ae 01       	movw	r20, r28
    1182:	4f 5f       	subi	r20, 0xFF	; 255
    1184:	5f 4f       	sbci	r21, 0xFF	; 255
    1186:	bc 01       	movw	r22, r24
    1188:	c7 01       	movw	r24, r14
    118a:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    118e:	41 e0       	ldi	r20, 0x01	; 1
    1190:	50 e0       	ldi	r21, 0x00	; 0
    1192:	bc 01       	movw	r22, r24
    1194:	c7 01       	movw	r24, r14
    1196:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    119a:	a4 96       	adiw	r28, 0x24	; 36
    119c:	0f b6       	in	r0, 0x3f	; 63
    119e:	f8 94       	cli
    11a0:	de bf       	out	0x3e, r29	; 62
    11a2:	0f be       	out	0x3f, r0	; 63
    11a4:	cd bf       	out	0x3d, r28	; 61
    11a6:	df 91       	pop	r29
    11a8:	cf 91       	pop	r28
    11aa:	1f 91       	pop	r17
    11ac:	0f 91       	pop	r16
    11ae:	ff 90       	pop	r15
    11b0:	ef 90       	pop	r14
    11b2:	df 90       	pop	r13
    11b4:	cf 90       	pop	r12
    11b6:	bf 90       	pop	r11
    11b8:	af 90       	pop	r10
    11ba:	08 95       	ret

000011bc <_ZN5Gates1YEii>:
int * Gates::Y(int theta,int phi){
    11bc:	af 92       	push	r10
    11be:	bf 92       	push	r11
    11c0:	cf 92       	push	r12
    11c2:	df 92       	push	r13
    11c4:	ef 92       	push	r14
    11c6:	ff 92       	push	r15
    11c8:	0f 93       	push	r16
    11ca:	1f 93       	push	r17
    11cc:	cf 93       	push	r28
    11ce:	df 93       	push	r29
    11d0:	cd b7       	in	r28, 0x3d	; 61
    11d2:	de b7       	in	r29, 0x3e	; 62
    11d4:	a4 97       	sbiw	r28, 0x24	; 36
    11d6:	0f b6       	in	r0, 0x3f	; 63
    11d8:	f8 94       	cli
    11da:	de bf       	out	0x3e, r29	; 62
    11dc:	0f be       	out	0x3f, r0	; 63
    11de:	cd bf       	out	0x3d, r28	; 61
    11e0:	7c 01       	movw	r14, r24
    11e2:	5b 01       	movw	r10, r22
    11e4:	6a 01       	movw	r12, r20
	Complex y_matrix[QB_SIZE1*2][QB_SIZE1*2]{{Complex(0,0),Complex(0,-1)},
											 {Complex(0,1),Complex(0,0)}};
    11e6:	00 e0       	ldi	r16, 0x00	; 0
    11e8:	10 e0       	ldi	r17, 0x00	; 0
    11ea:	98 01       	movw	r18, r16
    11ec:	b9 01       	movw	r22, r18
    11ee:	a8 01       	movw	r20, r16
    11f0:	ce 01       	movw	r24, r28
    11f2:	01 96       	adiw	r24, 0x01	; 1
    11f4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    11f8:	00 e0       	ldi	r16, 0x00	; 0
    11fa:	10 e0       	ldi	r17, 0x00	; 0
    11fc:	20 e8       	ldi	r18, 0x80	; 128
    11fe:	3f eb       	ldi	r19, 0xBF	; 191
    1200:	40 e0       	ldi	r20, 0x00	; 0
    1202:	50 e0       	ldi	r21, 0x00	; 0
    1204:	ba 01       	movw	r22, r20
    1206:	ce 01       	movw	r24, r28
    1208:	09 96       	adiw	r24, 0x09	; 9
    120a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    120e:	00 e0       	ldi	r16, 0x00	; 0
    1210:	10 e0       	ldi	r17, 0x00	; 0
    1212:	20 e8       	ldi	r18, 0x80	; 128
    1214:	3f e3       	ldi	r19, 0x3F	; 63
    1216:	40 e0       	ldi	r20, 0x00	; 0
    1218:	50 e0       	ldi	r21, 0x00	; 0
    121a:	ba 01       	movw	r22, r20
    121c:	ce 01       	movw	r24, r28
    121e:	41 96       	adiw	r24, 0x11	; 17
    1220:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1224:	00 e0       	ldi	r16, 0x00	; 0
    1226:	10 e0       	ldi	r17, 0x00	; 0
    1228:	98 01       	movw	r18, r16
    122a:	b9 01       	movw	r22, r18
    122c:	a8 01       	movw	r20, r16
    122e:	ce 01       	movw	r24, r28
    1230:	49 96       	adiw	r24, 0x19	; 25
    1232:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    1236:	bc a2       	std	Y+36, r11	; 0x24
    1238:	ab a2       	std	Y+35, r10	; 0x23
    123a:	da a2       	std	Y+34, r13	; 0x22
    123c:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),y_matrix),QB_SIZE1);
    123e:	9e 01       	movw	r18, r28
    1240:	2f 5d       	subi	r18, 0xDF	; 223
    1242:	3f 4f       	sbci	r19, 0xFF	; 255
    1244:	ae 01       	movw	r20, r28
    1246:	4d 5d       	subi	r20, 0xDD	; 221
    1248:	5f 4f       	sbci	r21, 0xFF	; 255
    124a:	61 e0       	ldi	r22, 0x01	; 1
    124c:	70 e0       	ldi	r23, 0x00	; 0
    124e:	c7 01       	movw	r24, r14
    1250:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    1254:	ae 01       	movw	r20, r28
    1256:	4f 5f       	subi	r20, 0xFF	; 255
    1258:	5f 4f       	sbci	r21, 0xFF	; 255
    125a:	bc 01       	movw	r22, r24
    125c:	c7 01       	movw	r24, r14
    125e:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    1262:	41 e0       	ldi	r20, 0x01	; 1
    1264:	50 e0       	ldi	r21, 0x00	; 0
    1266:	bc 01       	movw	r22, r24
    1268:	c7 01       	movw	r24, r14
    126a:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    126e:	a4 96       	adiw	r28, 0x24	; 36
    1270:	0f b6       	in	r0, 0x3f	; 63
    1272:	f8 94       	cli
    1274:	de bf       	out	0x3e, r29	; 62
    1276:	0f be       	out	0x3f, r0	; 63
    1278:	cd bf       	out	0x3d, r28	; 61
    127a:	df 91       	pop	r29
    127c:	cf 91       	pop	r28
    127e:	1f 91       	pop	r17
    1280:	0f 91       	pop	r16
    1282:	ff 90       	pop	r15
    1284:	ef 90       	pop	r14
    1286:	df 90       	pop	r13
    1288:	cf 90       	pop	r12
    128a:	bf 90       	pop	r11
    128c:	af 90       	pop	r10
    128e:	08 95       	ret

00001290 <_ZN5Gates1ZEii>:
int * Gates::Z(int theta,int phi){
    1290:	af 92       	push	r10
    1292:	bf 92       	push	r11
    1294:	cf 92       	push	r12
    1296:	df 92       	push	r13
    1298:	ef 92       	push	r14
    129a:	ff 92       	push	r15
    129c:	0f 93       	push	r16
    129e:	1f 93       	push	r17
    12a0:	cf 93       	push	r28
    12a2:	df 93       	push	r29
    12a4:	cd b7       	in	r28, 0x3d	; 61
    12a6:	de b7       	in	r29, 0x3e	; 62
    12a8:	a4 97       	sbiw	r28, 0x24	; 36
    12aa:	0f b6       	in	r0, 0x3f	; 63
    12ac:	f8 94       	cli
    12ae:	de bf       	out	0x3e, r29	; 62
    12b0:	0f be       	out	0x3f, r0	; 63
    12b2:	cd bf       	out	0x3d, r28	; 61
    12b4:	7c 01       	movw	r14, r24
    12b6:	5b 01       	movw	r10, r22
    12b8:	6a 01       	movw	r12, r20
	Complex z_matrix[QB_SIZE1*2][QB_SIZE1*2]{{Complex(1,0),Complex(0,0)},
											 {Complex(0,0),Complex(-1,0)}};
    12ba:	00 e0       	ldi	r16, 0x00	; 0
    12bc:	10 e0       	ldi	r17, 0x00	; 0
    12be:	98 01       	movw	r18, r16
    12c0:	40 e0       	ldi	r20, 0x00	; 0
    12c2:	50 e0       	ldi	r21, 0x00	; 0
    12c4:	60 e8       	ldi	r22, 0x80	; 128
    12c6:	7f e3       	ldi	r23, 0x3F	; 63
    12c8:	ce 01       	movw	r24, r28
    12ca:	01 96       	adiw	r24, 0x01	; 1
    12cc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    12d0:	00 e0       	ldi	r16, 0x00	; 0
    12d2:	10 e0       	ldi	r17, 0x00	; 0
    12d4:	98 01       	movw	r18, r16
    12d6:	b9 01       	movw	r22, r18
    12d8:	a8 01       	movw	r20, r16
    12da:	ce 01       	movw	r24, r28
    12dc:	09 96       	adiw	r24, 0x09	; 9
    12de:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    12e2:	00 e0       	ldi	r16, 0x00	; 0
    12e4:	10 e0       	ldi	r17, 0x00	; 0
    12e6:	98 01       	movw	r18, r16
    12e8:	b9 01       	movw	r22, r18
    12ea:	a8 01       	movw	r20, r16
    12ec:	ce 01       	movw	r24, r28
    12ee:	41 96       	adiw	r24, 0x11	; 17
    12f0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    12f4:	00 e0       	ldi	r16, 0x00	; 0
    12f6:	10 e0       	ldi	r17, 0x00	; 0
    12f8:	98 01       	movw	r18, r16
    12fa:	40 e0       	ldi	r20, 0x00	; 0
    12fc:	50 e0       	ldi	r21, 0x00	; 0
    12fe:	60 e8       	ldi	r22, 0x80	; 128
    1300:	7f eb       	ldi	r23, 0xBF	; 191
    1302:	ce 01       	movw	r24, r28
    1304:	49 96       	adiw	r24, 0x19	; 25
    1306:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    130a:	bc a2       	std	Y+36, r11	; 0x24
    130c:	ab a2       	std	Y+35, r10	; 0x23
    130e:	da a2       	std	Y+34, r13	; 0x22
    1310:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),z_matrix),QB_SIZE1);
    1312:	9e 01       	movw	r18, r28
    1314:	2f 5d       	subi	r18, 0xDF	; 223
    1316:	3f 4f       	sbci	r19, 0xFF	; 255
    1318:	ae 01       	movw	r20, r28
    131a:	4d 5d       	subi	r20, 0xDD	; 221
    131c:	5f 4f       	sbci	r21, 0xFF	; 255
    131e:	61 e0       	ldi	r22, 0x01	; 1
    1320:	70 e0       	ldi	r23, 0x00	; 0
    1322:	c7 01       	movw	r24, r14
    1324:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    1328:	ae 01       	movw	r20, r28
    132a:	4f 5f       	subi	r20, 0xFF	; 255
    132c:	5f 4f       	sbci	r21, 0xFF	; 255
    132e:	bc 01       	movw	r22, r24
    1330:	c7 01       	movw	r24, r14
    1332:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    1336:	41 e0       	ldi	r20, 0x01	; 1
    1338:	50 e0       	ldi	r21, 0x00	; 0
    133a:	bc 01       	movw	r22, r24
    133c:	c7 01       	movw	r24, r14
    133e:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1342:	a4 96       	adiw	r28, 0x24	; 36
    1344:	0f b6       	in	r0, 0x3f	; 63
    1346:	f8 94       	cli
    1348:	de bf       	out	0x3e, r29	; 62
    134a:	0f be       	out	0x3f, r0	; 63
    134c:	cd bf       	out	0x3d, r28	; 61
    134e:	df 91       	pop	r29
    1350:	cf 91       	pop	r28
    1352:	1f 91       	pop	r17
    1354:	0f 91       	pop	r16
    1356:	ff 90       	pop	r15
    1358:	ef 90       	pop	r14
    135a:	df 90       	pop	r13
    135c:	cf 90       	pop	r12
    135e:	bf 90       	pop	r11
    1360:	af 90       	pop	r10
    1362:	08 95       	ret

00001364 <_ZN5Gates1HEii>:
int * Gates::H(int theta,int phi){
    1364:	af 92       	push	r10
    1366:	bf 92       	push	r11
    1368:	cf 92       	push	r12
    136a:	df 92       	push	r13
    136c:	ef 92       	push	r14
    136e:	ff 92       	push	r15
    1370:	0f 93       	push	r16
    1372:	1f 93       	push	r17
    1374:	cf 93       	push	r28
    1376:	df 93       	push	r29
    1378:	cd b7       	in	r28, 0x3d	; 61
    137a:	de b7       	in	r29, 0x3e	; 62
    137c:	a4 97       	sbiw	r28, 0x24	; 36
    137e:	0f b6       	in	r0, 0x3f	; 63
    1380:	f8 94       	cli
    1382:	de bf       	out	0x3e, r29	; 62
    1384:	0f be       	out	0x3f, r0	; 63
    1386:	cd bf       	out	0x3d, r28	; 61
    1388:	7c 01       	movw	r14, r24
    138a:	5b 01       	movw	r10, r22
    138c:	6a 01       	movw	r12, r20
	Complex h_matrix[QB_SIZE1*2][QB_SIZE1*2]{{Complex(1/sqrt(2),0),Complex(1/sqrt(2),0)},
											 {Complex(1/sqrt(2),0),Complex(-1/sqrt(2),0)}};
    138e:	00 e0       	ldi	r16, 0x00	; 0
    1390:	10 e0       	ldi	r17, 0x00	; 0
    1392:	98 01       	movw	r18, r16
    1394:	43 ef       	ldi	r20, 0xF3	; 243
    1396:	54 e0       	ldi	r21, 0x04	; 4
    1398:	65 e3       	ldi	r22, 0x35	; 53
    139a:	7f e3       	ldi	r23, 0x3F	; 63
    139c:	ce 01       	movw	r24, r28
    139e:	01 96       	adiw	r24, 0x01	; 1
    13a0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    13a4:	00 e0       	ldi	r16, 0x00	; 0
    13a6:	10 e0       	ldi	r17, 0x00	; 0
    13a8:	98 01       	movw	r18, r16
    13aa:	43 ef       	ldi	r20, 0xF3	; 243
    13ac:	54 e0       	ldi	r21, 0x04	; 4
    13ae:	65 e3       	ldi	r22, 0x35	; 53
    13b0:	7f e3       	ldi	r23, 0x3F	; 63
    13b2:	ce 01       	movw	r24, r28
    13b4:	09 96       	adiw	r24, 0x09	; 9
    13b6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    13ba:	00 e0       	ldi	r16, 0x00	; 0
    13bc:	10 e0       	ldi	r17, 0x00	; 0
    13be:	98 01       	movw	r18, r16
    13c0:	43 ef       	ldi	r20, 0xF3	; 243
    13c2:	54 e0       	ldi	r21, 0x04	; 4
    13c4:	65 e3       	ldi	r22, 0x35	; 53
    13c6:	7f e3       	ldi	r23, 0x3F	; 63
    13c8:	ce 01       	movw	r24, r28
    13ca:	41 96       	adiw	r24, 0x11	; 17
    13cc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    13d0:	00 e0       	ldi	r16, 0x00	; 0
    13d2:	10 e0       	ldi	r17, 0x00	; 0
    13d4:	98 01       	movw	r18, r16
    13d6:	43 ef       	ldi	r20, 0xF3	; 243
    13d8:	54 e0       	ldi	r21, 0x04	; 4
    13da:	65 e3       	ldi	r22, 0x35	; 53
    13dc:	7f eb       	ldi	r23, 0xBF	; 191
    13de:	ce 01       	movw	r24, r28
    13e0:	49 96       	adiw	r24, 0x19	; 25
    13e2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    13e6:	bc a2       	std	Y+36, r11	; 0x24
    13e8:	ab a2       	std	Y+35, r10	; 0x23
    13ea:	da a2       	std	Y+34, r13	; 0x22
    13ec:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),h_matrix),QB_SIZE1);
    13ee:	9e 01       	movw	r18, r28
    13f0:	2f 5d       	subi	r18, 0xDF	; 223
    13f2:	3f 4f       	sbci	r19, 0xFF	; 255
    13f4:	ae 01       	movw	r20, r28
    13f6:	4d 5d       	subi	r20, 0xDD	; 221
    13f8:	5f 4f       	sbci	r21, 0xFF	; 255
    13fa:	61 e0       	ldi	r22, 0x01	; 1
    13fc:	70 e0       	ldi	r23, 0x00	; 0
    13fe:	c7 01       	movw	r24, r14
    1400:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    1404:	ae 01       	movw	r20, r28
    1406:	4f 5f       	subi	r20, 0xFF	; 255
    1408:	5f 4f       	sbci	r21, 0xFF	; 255
    140a:	bc 01       	movw	r22, r24
    140c:	c7 01       	movw	r24, r14
    140e:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    1412:	41 e0       	ldi	r20, 0x01	; 1
    1414:	50 e0       	ldi	r21, 0x00	; 0
    1416:	bc 01       	movw	r22, r24
    1418:	c7 01       	movw	r24, r14
    141a:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    141e:	a4 96       	adiw	r28, 0x24	; 36
    1420:	0f b6       	in	r0, 0x3f	; 63
    1422:	f8 94       	cli
    1424:	de bf       	out	0x3e, r29	; 62
    1426:	0f be       	out	0x3f, r0	; 63
    1428:	cd bf       	out	0x3d, r28	; 61
    142a:	df 91       	pop	r29
    142c:	cf 91       	pop	r28
    142e:	1f 91       	pop	r17
    1430:	0f 91       	pop	r16
    1432:	ff 90       	pop	r15
    1434:	ef 90       	pop	r14
    1436:	df 90       	pop	r13
    1438:	cf 90       	pop	r12
    143a:	bf 90       	pop	r11
    143c:	af 90       	pop	r10
    143e:	08 95       	ret

00001440 <_ZN5Gates1SEii>:
int * Gates::S(int theta,int phi){
    1440:	af 92       	push	r10
    1442:	bf 92       	push	r11
    1444:	cf 92       	push	r12
    1446:	df 92       	push	r13
    1448:	ef 92       	push	r14
    144a:	ff 92       	push	r15
    144c:	0f 93       	push	r16
    144e:	1f 93       	push	r17
    1450:	cf 93       	push	r28
    1452:	df 93       	push	r29
    1454:	cd b7       	in	r28, 0x3d	; 61
    1456:	de b7       	in	r29, 0x3e	; 62
    1458:	a4 97       	sbiw	r28, 0x24	; 36
    145a:	0f b6       	in	r0, 0x3f	; 63
    145c:	f8 94       	cli
    145e:	de bf       	out	0x3e, r29	; 62
    1460:	0f be       	out	0x3f, r0	; 63
    1462:	cd bf       	out	0x3d, r28	; 61
    1464:	7c 01       	movw	r14, r24
    1466:	5b 01       	movw	r10, r22
    1468:	6a 01       	movw	r12, r20
	Complex s_matrix[QB_SIZE1*2][QB_SIZE1*2]{{Complex(1,0),Complex(0,0)},
											 {Complex(0,0),Complex(0,1)}};
    146a:	00 e0       	ldi	r16, 0x00	; 0
    146c:	10 e0       	ldi	r17, 0x00	; 0
    146e:	98 01       	movw	r18, r16
    1470:	40 e0       	ldi	r20, 0x00	; 0
    1472:	50 e0       	ldi	r21, 0x00	; 0
    1474:	60 e8       	ldi	r22, 0x80	; 128
    1476:	7f e3       	ldi	r23, 0x3F	; 63
    1478:	ce 01       	movw	r24, r28
    147a:	01 96       	adiw	r24, 0x01	; 1
    147c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1480:	00 e0       	ldi	r16, 0x00	; 0
    1482:	10 e0       	ldi	r17, 0x00	; 0
    1484:	98 01       	movw	r18, r16
    1486:	b9 01       	movw	r22, r18
    1488:	a8 01       	movw	r20, r16
    148a:	ce 01       	movw	r24, r28
    148c:	09 96       	adiw	r24, 0x09	; 9
    148e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1492:	00 e0       	ldi	r16, 0x00	; 0
    1494:	10 e0       	ldi	r17, 0x00	; 0
    1496:	98 01       	movw	r18, r16
    1498:	b9 01       	movw	r22, r18
    149a:	a8 01       	movw	r20, r16
    149c:	ce 01       	movw	r24, r28
    149e:	41 96       	adiw	r24, 0x11	; 17
    14a0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    14a4:	00 e0       	ldi	r16, 0x00	; 0
    14a6:	10 e0       	ldi	r17, 0x00	; 0
    14a8:	20 e8       	ldi	r18, 0x80	; 128
    14aa:	3f e3       	ldi	r19, 0x3F	; 63
    14ac:	40 e0       	ldi	r20, 0x00	; 0
    14ae:	50 e0       	ldi	r21, 0x00	; 0
    14b0:	ba 01       	movw	r22, r20
    14b2:	ce 01       	movw	r24, r28
    14b4:	49 96       	adiw	r24, 0x19	; 25
    14b6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    14ba:	bc a2       	std	Y+36, r11	; 0x24
    14bc:	ab a2       	std	Y+35, r10	; 0x23
    14be:	da a2       	std	Y+34, r13	; 0x22
    14c0:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),s_matrix),QB_SIZE1);
    14c2:	9e 01       	movw	r18, r28
    14c4:	2f 5d       	subi	r18, 0xDF	; 223
    14c6:	3f 4f       	sbci	r19, 0xFF	; 255
    14c8:	ae 01       	movw	r20, r28
    14ca:	4d 5d       	subi	r20, 0xDD	; 221
    14cc:	5f 4f       	sbci	r21, 0xFF	; 255
    14ce:	61 e0       	ldi	r22, 0x01	; 1
    14d0:	70 e0       	ldi	r23, 0x00	; 0
    14d2:	c7 01       	movw	r24, r14
    14d4:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    14d8:	ae 01       	movw	r20, r28
    14da:	4f 5f       	subi	r20, 0xFF	; 255
    14dc:	5f 4f       	sbci	r21, 0xFF	; 255
    14de:	bc 01       	movw	r22, r24
    14e0:	c7 01       	movw	r24, r14
    14e2:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    14e6:	41 e0       	ldi	r20, 0x01	; 1
    14e8:	50 e0       	ldi	r21, 0x00	; 0
    14ea:	bc 01       	movw	r22, r24
    14ec:	c7 01       	movw	r24, r14
    14ee:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    14f2:	a4 96       	adiw	r28, 0x24	; 36
    14f4:	0f b6       	in	r0, 0x3f	; 63
    14f6:	f8 94       	cli
    14f8:	de bf       	out	0x3e, r29	; 62
    14fa:	0f be       	out	0x3f, r0	; 63
    14fc:	cd bf       	out	0x3d, r28	; 61
    14fe:	df 91       	pop	r29
    1500:	cf 91       	pop	r28
    1502:	1f 91       	pop	r17
    1504:	0f 91       	pop	r16
    1506:	ff 90       	pop	r15
    1508:	ef 90       	pop	r14
    150a:	df 90       	pop	r13
    150c:	cf 90       	pop	r12
    150e:	bf 90       	pop	r11
    1510:	af 90       	pop	r10
    1512:	08 95       	ret

00001514 <_ZN5Gates1TEii>:
int * Gates::T(int theta,int phi){
    1514:	af 92       	push	r10
    1516:	bf 92       	push	r11
    1518:	cf 92       	push	r12
    151a:	df 92       	push	r13
    151c:	ef 92       	push	r14
    151e:	ff 92       	push	r15
    1520:	0f 93       	push	r16
    1522:	1f 93       	push	r17
    1524:	cf 93       	push	r28
    1526:	df 93       	push	r29
    1528:	cd b7       	in	r28, 0x3d	; 61
    152a:	de b7       	in	r29, 0x3e	; 62
    152c:	a4 97       	sbiw	r28, 0x24	; 36
    152e:	0f b6       	in	r0, 0x3f	; 63
    1530:	f8 94       	cli
    1532:	de bf       	out	0x3e, r29	; 62
    1534:	0f be       	out	0x3f, r0	; 63
    1536:	cd bf       	out	0x3d, r28	; 61
    1538:	7c 01       	movw	r14, r24
    153a:	5b 01       	movw	r10, r22
    153c:	6a 01       	movw	r12, r20
	Complex t_matrix[QB_SIZE1*2][QB_SIZE1*2]{{Complex(1,0),Complex(0,0)},
											 {Complex(0,0),Complex(1/sqrt(2),1/sqrt(2))}};
    153e:	00 e0       	ldi	r16, 0x00	; 0
    1540:	10 e0       	ldi	r17, 0x00	; 0
    1542:	98 01       	movw	r18, r16
    1544:	40 e0       	ldi	r20, 0x00	; 0
    1546:	50 e0       	ldi	r21, 0x00	; 0
    1548:	60 e8       	ldi	r22, 0x80	; 128
    154a:	7f e3       	ldi	r23, 0x3F	; 63
    154c:	ce 01       	movw	r24, r28
    154e:	01 96       	adiw	r24, 0x01	; 1
    1550:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1554:	00 e0       	ldi	r16, 0x00	; 0
    1556:	10 e0       	ldi	r17, 0x00	; 0
    1558:	98 01       	movw	r18, r16
    155a:	b9 01       	movw	r22, r18
    155c:	a8 01       	movw	r20, r16
    155e:	ce 01       	movw	r24, r28
    1560:	09 96       	adiw	r24, 0x09	; 9
    1562:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1566:	00 e0       	ldi	r16, 0x00	; 0
    1568:	10 e0       	ldi	r17, 0x00	; 0
    156a:	98 01       	movw	r18, r16
    156c:	b9 01       	movw	r22, r18
    156e:	a8 01       	movw	r20, r16
    1570:	ce 01       	movw	r24, r28
    1572:	41 96       	adiw	r24, 0x11	; 17
    1574:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1578:	03 ef       	ldi	r16, 0xF3	; 243
    157a:	14 e0       	ldi	r17, 0x04	; 4
    157c:	25 e3       	ldi	r18, 0x35	; 53
    157e:	3f e3       	ldi	r19, 0x3F	; 63
    1580:	b9 01       	movw	r22, r18
    1582:	a8 01       	movw	r20, r16
    1584:	ce 01       	movw	r24, r28
    1586:	49 96       	adiw	r24, 0x19	; 25
    1588:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    158c:	bc a2       	std	Y+36, r11	; 0x24
    158e:	ab a2       	std	Y+35, r10	; 0x23
    1590:	da a2       	std	Y+34, r13	; 0x22
    1592:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),t_matrix),QB_SIZE1);
    1594:	9e 01       	movw	r18, r28
    1596:	2f 5d       	subi	r18, 0xDF	; 223
    1598:	3f 4f       	sbci	r19, 0xFF	; 255
    159a:	ae 01       	movw	r20, r28
    159c:	4d 5d       	subi	r20, 0xDD	; 221
    159e:	5f 4f       	sbci	r21, 0xFF	; 255
    15a0:	61 e0       	ldi	r22, 0x01	; 1
    15a2:	70 e0       	ldi	r23, 0x00	; 0
    15a4:	c7 01       	movw	r24, r14
    15a6:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    15aa:	ae 01       	movw	r20, r28
    15ac:	4f 5f       	subi	r20, 0xFF	; 255
    15ae:	5f 4f       	sbci	r21, 0xFF	; 255
    15b0:	bc 01       	movw	r22, r24
    15b2:	c7 01       	movw	r24, r14
    15b4:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    15b8:	41 e0       	ldi	r20, 0x01	; 1
    15ba:	50 e0       	ldi	r21, 0x00	; 0
    15bc:	bc 01       	movw	r22, r24
    15be:	c7 01       	movw	r24, r14
    15c0:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    15c4:	a4 96       	adiw	r28, 0x24	; 36
    15c6:	0f b6       	in	r0, 0x3f	; 63
    15c8:	f8 94       	cli
    15ca:	de bf       	out	0x3e, r29	; 62
    15cc:	0f be       	out	0x3f, r0	; 63
    15ce:	cd bf       	out	0x3d, r28	; 61
    15d0:	df 91       	pop	r29
    15d2:	cf 91       	pop	r28
    15d4:	1f 91       	pop	r17
    15d6:	0f 91       	pop	r16
    15d8:	ff 90       	pop	r15
    15da:	ef 90       	pop	r14
    15dc:	df 90       	pop	r13
    15de:	cf 90       	pop	r12
    15e0:	bf 90       	pop	r11
    15e2:	af 90       	pop	r10
    15e4:	08 95       	ret

000015e6 <_ZN5Gates3CNOEiiii>:

int * Gates::CNO(int theta1, int phi1, int theta2,int phi2){
    15e6:	6f 92       	push	r6
    15e8:	7f 92       	push	r7
    15ea:	8f 92       	push	r8
    15ec:	9f 92       	push	r9
    15ee:	af 92       	push	r10
    15f0:	bf 92       	push	r11
    15f2:	cf 92       	push	r12
    15f4:	df 92       	push	r13
    15f6:	ef 92       	push	r14
    15f8:	ff 92       	push	r15
    15fa:	0f 93       	push	r16
    15fc:	1f 93       	push	r17
    15fe:	cf 93       	push	r28
    1600:	df 93       	push	r29
    1602:	cd b7       	in	r28, 0x3d	; 61
    1604:	de b7       	in	r29, 0x3e	; 62
    1606:	c8 58       	subi	r28, 0x88	; 136
    1608:	d1 09       	sbc	r29, r1
    160a:	0f b6       	in	r0, 0x3f	; 63
    160c:	f8 94       	cli
    160e:	de bf       	out	0x3e, r29	; 62
    1610:	0f be       	out	0x3f, r0	; 63
    1612:	cd bf       	out	0x3d, r28	; 61
    1614:	7c 01       	movw	r14, r24
    1616:	3b 01       	movw	r6, r22
    1618:	5a 01       	movw	r10, r20
    161a:	49 01       	movw	r8, r18
    161c:	68 01       	movw	r12, r16
	Complex cno_matrix[QB_SIZE2*2][QB_SIZE2*2]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
											   {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
											   {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
											   {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)}};
    161e:	00 e0       	ldi	r16, 0x00	; 0
    1620:	10 e0       	ldi	r17, 0x00	; 0
    1622:	98 01       	movw	r18, r16
    1624:	40 e0       	ldi	r20, 0x00	; 0
    1626:	50 e0       	ldi	r21, 0x00	; 0
    1628:	60 e8       	ldi	r22, 0x80	; 128
    162a:	7f e3       	ldi	r23, 0x3F	; 63
    162c:	ce 01       	movw	r24, r28
    162e:	01 96       	adiw	r24, 0x01	; 1
    1630:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1634:	00 e0       	ldi	r16, 0x00	; 0
    1636:	10 e0       	ldi	r17, 0x00	; 0
    1638:	98 01       	movw	r18, r16
    163a:	b9 01       	movw	r22, r18
    163c:	a8 01       	movw	r20, r16
    163e:	ce 01       	movw	r24, r28
    1640:	09 96       	adiw	r24, 0x09	; 9
    1642:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1646:	00 e0       	ldi	r16, 0x00	; 0
    1648:	10 e0       	ldi	r17, 0x00	; 0
    164a:	98 01       	movw	r18, r16
    164c:	b9 01       	movw	r22, r18
    164e:	a8 01       	movw	r20, r16
    1650:	ce 01       	movw	r24, r28
    1652:	41 96       	adiw	r24, 0x11	; 17
    1654:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1658:	00 e0       	ldi	r16, 0x00	; 0
    165a:	10 e0       	ldi	r17, 0x00	; 0
    165c:	98 01       	movw	r18, r16
    165e:	b9 01       	movw	r22, r18
    1660:	a8 01       	movw	r20, r16
    1662:	ce 01       	movw	r24, r28
    1664:	49 96       	adiw	r24, 0x19	; 25
    1666:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    166a:	00 e0       	ldi	r16, 0x00	; 0
    166c:	10 e0       	ldi	r17, 0x00	; 0
    166e:	98 01       	movw	r18, r16
    1670:	b9 01       	movw	r22, r18
    1672:	a8 01       	movw	r20, r16
    1674:	ce 01       	movw	r24, r28
    1676:	81 96       	adiw	r24, 0x21	; 33
    1678:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    167c:	00 e0       	ldi	r16, 0x00	; 0
    167e:	10 e0       	ldi	r17, 0x00	; 0
    1680:	98 01       	movw	r18, r16
    1682:	40 e0       	ldi	r20, 0x00	; 0
    1684:	50 e0       	ldi	r21, 0x00	; 0
    1686:	60 e8       	ldi	r22, 0x80	; 128
    1688:	7f e3       	ldi	r23, 0x3F	; 63
    168a:	ce 01       	movw	r24, r28
    168c:	89 96       	adiw	r24, 0x29	; 41
    168e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1692:	00 e0       	ldi	r16, 0x00	; 0
    1694:	10 e0       	ldi	r17, 0x00	; 0
    1696:	98 01       	movw	r18, r16
    1698:	b9 01       	movw	r22, r18
    169a:	a8 01       	movw	r20, r16
    169c:	ce 01       	movw	r24, r28
    169e:	c1 96       	adiw	r24, 0x31	; 49
    16a0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    16a4:	00 e0       	ldi	r16, 0x00	; 0
    16a6:	10 e0       	ldi	r17, 0x00	; 0
    16a8:	98 01       	movw	r18, r16
    16aa:	b9 01       	movw	r22, r18
    16ac:	a8 01       	movw	r20, r16
    16ae:	ce 01       	movw	r24, r28
    16b0:	c9 96       	adiw	r24, 0x39	; 57
    16b2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    16b6:	00 e0       	ldi	r16, 0x00	; 0
    16b8:	10 e0       	ldi	r17, 0x00	; 0
    16ba:	98 01       	movw	r18, r16
    16bc:	b9 01       	movw	r22, r18
    16be:	a8 01       	movw	r20, r16
    16c0:	ce 01       	movw	r24, r28
    16c2:	8f 5b       	subi	r24, 0xBF	; 191
    16c4:	9f 4f       	sbci	r25, 0xFF	; 255
    16c6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    16ca:	00 e0       	ldi	r16, 0x00	; 0
    16cc:	10 e0       	ldi	r17, 0x00	; 0
    16ce:	98 01       	movw	r18, r16
    16d0:	b9 01       	movw	r22, r18
    16d2:	a8 01       	movw	r20, r16
    16d4:	ce 01       	movw	r24, r28
    16d6:	87 5b       	subi	r24, 0xB7	; 183
    16d8:	9f 4f       	sbci	r25, 0xFF	; 255
    16da:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    16de:	00 e0       	ldi	r16, 0x00	; 0
    16e0:	10 e0       	ldi	r17, 0x00	; 0
    16e2:	98 01       	movw	r18, r16
    16e4:	b9 01       	movw	r22, r18
    16e6:	a8 01       	movw	r20, r16
    16e8:	ce 01       	movw	r24, r28
    16ea:	8f 5a       	subi	r24, 0xAF	; 175
    16ec:	9f 4f       	sbci	r25, 0xFF	; 255
    16ee:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    16f2:	00 e0       	ldi	r16, 0x00	; 0
    16f4:	10 e0       	ldi	r17, 0x00	; 0
    16f6:	98 01       	movw	r18, r16
    16f8:	40 e0       	ldi	r20, 0x00	; 0
    16fa:	50 e0       	ldi	r21, 0x00	; 0
    16fc:	60 e8       	ldi	r22, 0x80	; 128
    16fe:	7f e3       	ldi	r23, 0x3F	; 63
    1700:	ce 01       	movw	r24, r28
    1702:	87 5a       	subi	r24, 0xA7	; 167
    1704:	9f 4f       	sbci	r25, 0xFF	; 255
    1706:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    170a:	00 e0       	ldi	r16, 0x00	; 0
    170c:	10 e0       	ldi	r17, 0x00	; 0
    170e:	98 01       	movw	r18, r16
    1710:	b9 01       	movw	r22, r18
    1712:	a8 01       	movw	r20, r16
    1714:	ce 01       	movw	r24, r28
    1716:	8f 59       	subi	r24, 0x9F	; 159
    1718:	9f 4f       	sbci	r25, 0xFF	; 255
    171a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    171e:	00 e0       	ldi	r16, 0x00	; 0
    1720:	10 e0       	ldi	r17, 0x00	; 0
    1722:	98 01       	movw	r18, r16
    1724:	b9 01       	movw	r22, r18
    1726:	a8 01       	movw	r20, r16
    1728:	ce 01       	movw	r24, r28
    172a:	87 59       	subi	r24, 0x97	; 151
    172c:	9f 4f       	sbci	r25, 0xFF	; 255
    172e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1732:	00 e0       	ldi	r16, 0x00	; 0
    1734:	10 e0       	ldi	r17, 0x00	; 0
    1736:	98 01       	movw	r18, r16
    1738:	40 e0       	ldi	r20, 0x00	; 0
    173a:	50 e0       	ldi	r21, 0x00	; 0
    173c:	60 e8       	ldi	r22, 0x80	; 128
    173e:	7f e3       	ldi	r23, 0x3F	; 63
    1740:	ce 01       	movw	r24, r28
    1742:	8f 58       	subi	r24, 0x8F	; 143
    1744:	9f 4f       	sbci	r25, 0xFF	; 255
    1746:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    174a:	00 e0       	ldi	r16, 0x00	; 0
    174c:	10 e0       	ldi	r17, 0x00	; 0
    174e:	98 01       	movw	r18, r16
    1750:	b9 01       	movw	r22, r18
    1752:	a8 01       	movw	r20, r16
    1754:	ce 01       	movw	r24, r28
    1756:	87 58       	subi	r24, 0x87	; 135
    1758:	9f 4f       	sbci	r25, 0xFF	; 255
    175a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};						
    175e:	cb 57       	subi	r28, 0x7B	; 123
    1760:	df 4f       	sbci	r29, 0xFF	; 255
    1762:	79 82       	std	Y+1, r7	; 0x01
    1764:	68 82       	st	Y, r6
    1766:	c5 58       	subi	r28, 0x85	; 133
    1768:	d0 40       	sbci	r29, 0x00	; 0
    176a:	c9 57       	subi	r28, 0x79	; 121
    176c:	df 4f       	sbci	r29, 0xFF	; 255
    176e:	99 82       	std	Y+1, r9	; 0x01
    1770:	88 82       	st	Y, r8
    1772:	c7 58       	subi	r28, 0x87	; 135
    1774:	d0 40       	sbci	r29, 0x00	; 0
    1776:	cf 57       	subi	r28, 0x7F	; 127
    1778:	df 4f       	sbci	r29, 0xFF	; 255
    177a:	b9 82       	std	Y+1, r11	; 0x01
    177c:	a8 82       	st	Y, r10
    177e:	c1 58       	subi	r28, 0x81	; 129
    1780:	d0 40       	sbci	r29, 0x00	; 0
    1782:	cd 57       	subi	r28, 0x7D	; 125
    1784:	df 4f       	sbci	r29, 0xFF	; 255
    1786:	d9 82       	std	Y+1, r13	; 0x01
    1788:	c8 82       	st	Y, r12
    178a:	c3 58       	subi	r28, 0x83	; 131
    178c:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),cno_matrix),QB_SIZE2);
    178e:	9e 01       	movw	r18, r28
    1790:	2f 57       	subi	r18, 0x7F	; 127
    1792:	3f 4f       	sbci	r19, 0xFF	; 255
    1794:	ae 01       	movw	r20, r28
    1796:	4b 57       	subi	r20, 0x7B	; 123
    1798:	5f 4f       	sbci	r21, 0xFF	; 255
    179a:	62 e0       	ldi	r22, 0x02	; 2
    179c:	70 e0       	ldi	r23, 0x00	; 0
    179e:	c7 01       	movw	r24, r14
    17a0:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    17a4:	ae 01       	movw	r20, r28
    17a6:	4f 5f       	subi	r20, 0xFF	; 255
    17a8:	5f 4f       	sbci	r21, 0xFF	; 255
    17aa:	bc 01       	movw	r22, r24
    17ac:	c7 01       	movw	r24, r14
    17ae:	0e 94 cd 07 	call	0xf9a	; 0xf9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    17b2:	42 e0       	ldi	r20, 0x02	; 2
    17b4:	50 e0       	ldi	r21, 0x00	; 0
    17b6:	bc 01       	movw	r22, r24
    17b8:	c7 01       	movw	r24, r14
    17ba:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    17be:	c8 57       	subi	r28, 0x78	; 120
    17c0:	df 4f       	sbci	r29, 0xFF	; 255
    17c2:	0f b6       	in	r0, 0x3f	; 63
    17c4:	f8 94       	cli
    17c6:	de bf       	out	0x3e, r29	; 62
    17c8:	0f be       	out	0x3f, r0	; 63
    17ca:	cd bf       	out	0x3d, r28	; 61
    17cc:	df 91       	pop	r29
    17ce:	cf 91       	pop	r28
    17d0:	1f 91       	pop	r17
    17d2:	0f 91       	pop	r16
    17d4:	ff 90       	pop	r15
    17d6:	ef 90       	pop	r14
    17d8:	df 90       	pop	r13
    17da:	cf 90       	pop	r12
    17dc:	bf 90       	pop	r11
    17de:	af 90       	pop	r10
    17e0:	9f 90       	pop	r9
    17e2:	8f 90       	pop	r8
    17e4:	7f 90       	pop	r7
    17e6:	6f 90       	pop	r6
    17e8:	08 95       	ret

000017ea <_ZN5Gates3CSIEiiii>:
int * Gates::CSI(int theta1, int phi1, int theta2,int phi2){
    17ea:	6f 92       	push	r6
    17ec:	7f 92       	push	r7
    17ee:	8f 92       	push	r8
    17f0:	9f 92       	push	r9
    17f2:	af 92       	push	r10
    17f4:	bf 92       	push	r11
    17f6:	cf 92       	push	r12
    17f8:	df 92       	push	r13
    17fa:	ef 92       	push	r14
    17fc:	ff 92       	push	r15
    17fe:	0f 93       	push	r16
    1800:	1f 93       	push	r17
    1802:	cf 93       	push	r28
    1804:	df 93       	push	r29
    1806:	cd b7       	in	r28, 0x3d	; 61
    1808:	de b7       	in	r29, 0x3e	; 62
    180a:	c8 58       	subi	r28, 0x88	; 136
    180c:	d1 09       	sbc	r29, r1
    180e:	0f b6       	in	r0, 0x3f	; 63
    1810:	f8 94       	cli
    1812:	de bf       	out	0x3e, r29	; 62
    1814:	0f be       	out	0x3f, r0	; 63
    1816:	cd bf       	out	0x3d, r28	; 61
    1818:	7c 01       	movw	r14, r24
    181a:	3b 01       	movw	r6, r22
    181c:	5a 01       	movw	r10, r20
    181e:	49 01       	movw	r8, r18
    1820:	68 01       	movw	r12, r16
	Complex csi_matrix[QB_SIZE2*2][QB_SIZE2*2]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
											   {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
											   {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
											   {Complex(0,0),Complex(0,0),Complex(0,0),Complex(-1,0)}};
    1822:	00 e0       	ldi	r16, 0x00	; 0
    1824:	10 e0       	ldi	r17, 0x00	; 0
    1826:	98 01       	movw	r18, r16
    1828:	40 e0       	ldi	r20, 0x00	; 0
    182a:	50 e0       	ldi	r21, 0x00	; 0
    182c:	60 e8       	ldi	r22, 0x80	; 128
    182e:	7f e3       	ldi	r23, 0x3F	; 63
    1830:	ce 01       	movw	r24, r28
    1832:	01 96       	adiw	r24, 0x01	; 1
    1834:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1838:	00 e0       	ldi	r16, 0x00	; 0
    183a:	10 e0       	ldi	r17, 0x00	; 0
    183c:	98 01       	movw	r18, r16
    183e:	b9 01       	movw	r22, r18
    1840:	a8 01       	movw	r20, r16
    1842:	ce 01       	movw	r24, r28
    1844:	09 96       	adiw	r24, 0x09	; 9
    1846:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    184a:	00 e0       	ldi	r16, 0x00	; 0
    184c:	10 e0       	ldi	r17, 0x00	; 0
    184e:	98 01       	movw	r18, r16
    1850:	b9 01       	movw	r22, r18
    1852:	a8 01       	movw	r20, r16
    1854:	ce 01       	movw	r24, r28
    1856:	41 96       	adiw	r24, 0x11	; 17
    1858:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    185c:	00 e0       	ldi	r16, 0x00	; 0
    185e:	10 e0       	ldi	r17, 0x00	; 0
    1860:	98 01       	movw	r18, r16
    1862:	b9 01       	movw	r22, r18
    1864:	a8 01       	movw	r20, r16
    1866:	ce 01       	movw	r24, r28
    1868:	49 96       	adiw	r24, 0x19	; 25
    186a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    186e:	00 e0       	ldi	r16, 0x00	; 0
    1870:	10 e0       	ldi	r17, 0x00	; 0
    1872:	98 01       	movw	r18, r16
    1874:	b9 01       	movw	r22, r18
    1876:	a8 01       	movw	r20, r16
    1878:	ce 01       	movw	r24, r28
    187a:	81 96       	adiw	r24, 0x21	; 33
    187c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1880:	00 e0       	ldi	r16, 0x00	; 0
    1882:	10 e0       	ldi	r17, 0x00	; 0
    1884:	98 01       	movw	r18, r16
    1886:	40 e0       	ldi	r20, 0x00	; 0
    1888:	50 e0       	ldi	r21, 0x00	; 0
    188a:	60 e8       	ldi	r22, 0x80	; 128
    188c:	7f e3       	ldi	r23, 0x3F	; 63
    188e:	ce 01       	movw	r24, r28
    1890:	89 96       	adiw	r24, 0x29	; 41
    1892:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1896:	00 e0       	ldi	r16, 0x00	; 0
    1898:	10 e0       	ldi	r17, 0x00	; 0
    189a:	98 01       	movw	r18, r16
    189c:	b9 01       	movw	r22, r18
    189e:	a8 01       	movw	r20, r16
    18a0:	ce 01       	movw	r24, r28
    18a2:	c1 96       	adiw	r24, 0x31	; 49
    18a4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    18a8:	00 e0       	ldi	r16, 0x00	; 0
    18aa:	10 e0       	ldi	r17, 0x00	; 0
    18ac:	98 01       	movw	r18, r16
    18ae:	b9 01       	movw	r22, r18
    18b0:	a8 01       	movw	r20, r16
    18b2:	ce 01       	movw	r24, r28
    18b4:	c9 96       	adiw	r24, 0x39	; 57
    18b6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    18ba:	00 e0       	ldi	r16, 0x00	; 0
    18bc:	10 e0       	ldi	r17, 0x00	; 0
    18be:	98 01       	movw	r18, r16
    18c0:	b9 01       	movw	r22, r18
    18c2:	a8 01       	movw	r20, r16
    18c4:	ce 01       	movw	r24, r28
    18c6:	8f 5b       	subi	r24, 0xBF	; 191
    18c8:	9f 4f       	sbci	r25, 0xFF	; 255
    18ca:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    18ce:	00 e0       	ldi	r16, 0x00	; 0
    18d0:	10 e0       	ldi	r17, 0x00	; 0
    18d2:	98 01       	movw	r18, r16
    18d4:	b9 01       	movw	r22, r18
    18d6:	a8 01       	movw	r20, r16
    18d8:	ce 01       	movw	r24, r28
    18da:	87 5b       	subi	r24, 0xB7	; 183
    18dc:	9f 4f       	sbci	r25, 0xFF	; 255
    18de:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    18e2:	00 e0       	ldi	r16, 0x00	; 0
    18e4:	10 e0       	ldi	r17, 0x00	; 0
    18e6:	98 01       	movw	r18, r16
    18e8:	40 e0       	ldi	r20, 0x00	; 0
    18ea:	50 e0       	ldi	r21, 0x00	; 0
    18ec:	60 e8       	ldi	r22, 0x80	; 128
    18ee:	7f e3       	ldi	r23, 0x3F	; 63
    18f0:	ce 01       	movw	r24, r28
    18f2:	8f 5a       	subi	r24, 0xAF	; 175
    18f4:	9f 4f       	sbci	r25, 0xFF	; 255
    18f6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    18fa:	00 e0       	ldi	r16, 0x00	; 0
    18fc:	10 e0       	ldi	r17, 0x00	; 0
    18fe:	98 01       	movw	r18, r16
    1900:	b9 01       	movw	r22, r18
    1902:	a8 01       	movw	r20, r16
    1904:	ce 01       	movw	r24, r28
    1906:	87 5a       	subi	r24, 0xA7	; 167
    1908:	9f 4f       	sbci	r25, 0xFF	; 255
    190a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    190e:	00 e0       	ldi	r16, 0x00	; 0
    1910:	10 e0       	ldi	r17, 0x00	; 0
    1912:	98 01       	movw	r18, r16
    1914:	b9 01       	movw	r22, r18
    1916:	a8 01       	movw	r20, r16
    1918:	ce 01       	movw	r24, r28
    191a:	8f 59       	subi	r24, 0x9F	; 159
    191c:	9f 4f       	sbci	r25, 0xFF	; 255
    191e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1922:	00 e0       	ldi	r16, 0x00	; 0
    1924:	10 e0       	ldi	r17, 0x00	; 0
    1926:	98 01       	movw	r18, r16
    1928:	b9 01       	movw	r22, r18
    192a:	a8 01       	movw	r20, r16
    192c:	ce 01       	movw	r24, r28
    192e:	87 59       	subi	r24, 0x97	; 151
    1930:	9f 4f       	sbci	r25, 0xFF	; 255
    1932:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1936:	00 e0       	ldi	r16, 0x00	; 0
    1938:	10 e0       	ldi	r17, 0x00	; 0
    193a:	98 01       	movw	r18, r16
    193c:	b9 01       	movw	r22, r18
    193e:	a8 01       	movw	r20, r16
    1940:	ce 01       	movw	r24, r28
    1942:	8f 58       	subi	r24, 0x8F	; 143
    1944:	9f 4f       	sbci	r25, 0xFF	; 255
    1946:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    194a:	00 e0       	ldi	r16, 0x00	; 0
    194c:	10 e0       	ldi	r17, 0x00	; 0
    194e:	98 01       	movw	r18, r16
    1950:	40 e0       	ldi	r20, 0x00	; 0
    1952:	50 e0       	ldi	r21, 0x00	; 0
    1954:	60 e8       	ldi	r22, 0x80	; 128
    1956:	7f eb       	ldi	r23, 0xBF	; 191
    1958:	ce 01       	movw	r24, r28
    195a:	87 58       	subi	r24, 0x87	; 135
    195c:	9f 4f       	sbci	r25, 0xFF	; 255
    195e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    1962:	cb 57       	subi	r28, 0x7B	; 123
    1964:	df 4f       	sbci	r29, 0xFF	; 255
    1966:	79 82       	std	Y+1, r7	; 0x01
    1968:	68 82       	st	Y, r6
    196a:	c5 58       	subi	r28, 0x85	; 133
    196c:	d0 40       	sbci	r29, 0x00	; 0
    196e:	c9 57       	subi	r28, 0x79	; 121
    1970:	df 4f       	sbci	r29, 0xFF	; 255
    1972:	99 82       	std	Y+1, r9	; 0x01
    1974:	88 82       	st	Y, r8
    1976:	c7 58       	subi	r28, 0x87	; 135
    1978:	d0 40       	sbci	r29, 0x00	; 0
    197a:	cf 57       	subi	r28, 0x7F	; 127
    197c:	df 4f       	sbci	r29, 0xFF	; 255
    197e:	b9 82       	std	Y+1, r11	; 0x01
    1980:	a8 82       	st	Y, r10
    1982:	c1 58       	subi	r28, 0x81	; 129
    1984:	d0 40       	sbci	r29, 0x00	; 0
    1986:	cd 57       	subi	r28, 0x7D	; 125
    1988:	df 4f       	sbci	r29, 0xFF	; 255
    198a:	d9 82       	std	Y+1, r13	; 0x01
    198c:	c8 82       	st	Y, r12
    198e:	c3 58       	subi	r28, 0x83	; 131
    1990:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),csi_matrix),QB_SIZE2);
    1992:	9e 01       	movw	r18, r28
    1994:	2f 57       	subi	r18, 0x7F	; 127
    1996:	3f 4f       	sbci	r19, 0xFF	; 255
    1998:	ae 01       	movw	r20, r28
    199a:	4b 57       	subi	r20, 0x7B	; 123
    199c:	5f 4f       	sbci	r21, 0xFF	; 255
    199e:	62 e0       	ldi	r22, 0x02	; 2
    19a0:	70 e0       	ldi	r23, 0x00	; 0
    19a2:	c7 01       	movw	r24, r14
    19a4:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    19a8:	ae 01       	movw	r20, r28
    19aa:	4f 5f       	subi	r20, 0xFF	; 255
    19ac:	5f 4f       	sbci	r21, 0xFF	; 255
    19ae:	bc 01       	movw	r22, r24
    19b0:	c7 01       	movw	r24, r14
    19b2:	0e 94 cd 07 	call	0xf9a	; 0xf9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    19b6:	42 e0       	ldi	r20, 0x02	; 2
    19b8:	50 e0       	ldi	r21, 0x00	; 0
    19ba:	bc 01       	movw	r22, r24
    19bc:	c7 01       	movw	r24, r14
    19be:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    19c2:	c8 57       	subi	r28, 0x78	; 120
    19c4:	df 4f       	sbci	r29, 0xFF	; 255
    19c6:	0f b6       	in	r0, 0x3f	; 63
    19c8:	f8 94       	cli
    19ca:	de bf       	out	0x3e, r29	; 62
    19cc:	0f be       	out	0x3f, r0	; 63
    19ce:	cd bf       	out	0x3d, r28	; 61
    19d0:	df 91       	pop	r29
    19d2:	cf 91       	pop	r28
    19d4:	1f 91       	pop	r17
    19d6:	0f 91       	pop	r16
    19d8:	ff 90       	pop	r15
    19da:	ef 90       	pop	r14
    19dc:	df 90       	pop	r13
    19de:	cf 90       	pop	r12
    19e0:	bf 90       	pop	r11
    19e2:	af 90       	pop	r10
    19e4:	9f 90       	pop	r9
    19e6:	8f 90       	pop	r8
    19e8:	7f 90       	pop	r7
    19ea:	6f 90       	pop	r6
    19ec:	08 95       	ret

000019ee <_ZN5Gates3SWAEiiii>:
int * Gates::SWA(int theta1, int phi1, int theta2,int phi2){
    19ee:	6f 92       	push	r6
    19f0:	7f 92       	push	r7
    19f2:	8f 92       	push	r8
    19f4:	9f 92       	push	r9
    19f6:	af 92       	push	r10
    19f8:	bf 92       	push	r11
    19fa:	cf 92       	push	r12
    19fc:	df 92       	push	r13
    19fe:	ef 92       	push	r14
    1a00:	ff 92       	push	r15
    1a02:	0f 93       	push	r16
    1a04:	1f 93       	push	r17
    1a06:	cf 93       	push	r28
    1a08:	df 93       	push	r29
    1a0a:	cd b7       	in	r28, 0x3d	; 61
    1a0c:	de b7       	in	r29, 0x3e	; 62
    1a0e:	c8 58       	subi	r28, 0x88	; 136
    1a10:	d1 09       	sbc	r29, r1
    1a12:	0f b6       	in	r0, 0x3f	; 63
    1a14:	f8 94       	cli
    1a16:	de bf       	out	0x3e, r29	; 62
    1a18:	0f be       	out	0x3f, r0	; 63
    1a1a:	cd bf       	out	0x3d, r28	; 61
    1a1c:	7c 01       	movw	r14, r24
    1a1e:	3b 01       	movw	r6, r22
    1a20:	5a 01       	movw	r10, r20
    1a22:	49 01       	movw	r8, r18
    1a24:	68 01       	movw	r12, r16
	Complex swa_matrix[QB_SIZE2*2][QB_SIZE2*2]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
											   {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
											   {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
											   {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)}};
    1a26:	00 e0       	ldi	r16, 0x00	; 0
    1a28:	10 e0       	ldi	r17, 0x00	; 0
    1a2a:	98 01       	movw	r18, r16
    1a2c:	40 e0       	ldi	r20, 0x00	; 0
    1a2e:	50 e0       	ldi	r21, 0x00	; 0
    1a30:	60 e8       	ldi	r22, 0x80	; 128
    1a32:	7f e3       	ldi	r23, 0x3F	; 63
    1a34:	ce 01       	movw	r24, r28
    1a36:	01 96       	adiw	r24, 0x01	; 1
    1a38:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a3c:	00 e0       	ldi	r16, 0x00	; 0
    1a3e:	10 e0       	ldi	r17, 0x00	; 0
    1a40:	98 01       	movw	r18, r16
    1a42:	b9 01       	movw	r22, r18
    1a44:	a8 01       	movw	r20, r16
    1a46:	ce 01       	movw	r24, r28
    1a48:	09 96       	adiw	r24, 0x09	; 9
    1a4a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a4e:	00 e0       	ldi	r16, 0x00	; 0
    1a50:	10 e0       	ldi	r17, 0x00	; 0
    1a52:	98 01       	movw	r18, r16
    1a54:	b9 01       	movw	r22, r18
    1a56:	a8 01       	movw	r20, r16
    1a58:	ce 01       	movw	r24, r28
    1a5a:	41 96       	adiw	r24, 0x11	; 17
    1a5c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a60:	00 e0       	ldi	r16, 0x00	; 0
    1a62:	10 e0       	ldi	r17, 0x00	; 0
    1a64:	98 01       	movw	r18, r16
    1a66:	b9 01       	movw	r22, r18
    1a68:	a8 01       	movw	r20, r16
    1a6a:	ce 01       	movw	r24, r28
    1a6c:	49 96       	adiw	r24, 0x19	; 25
    1a6e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a72:	00 e0       	ldi	r16, 0x00	; 0
    1a74:	10 e0       	ldi	r17, 0x00	; 0
    1a76:	98 01       	movw	r18, r16
    1a78:	b9 01       	movw	r22, r18
    1a7a:	a8 01       	movw	r20, r16
    1a7c:	ce 01       	movw	r24, r28
    1a7e:	81 96       	adiw	r24, 0x21	; 33
    1a80:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a84:	00 e0       	ldi	r16, 0x00	; 0
    1a86:	10 e0       	ldi	r17, 0x00	; 0
    1a88:	98 01       	movw	r18, r16
    1a8a:	b9 01       	movw	r22, r18
    1a8c:	a8 01       	movw	r20, r16
    1a8e:	ce 01       	movw	r24, r28
    1a90:	89 96       	adiw	r24, 0x29	; 41
    1a92:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a96:	00 e0       	ldi	r16, 0x00	; 0
    1a98:	10 e0       	ldi	r17, 0x00	; 0
    1a9a:	98 01       	movw	r18, r16
    1a9c:	40 e0       	ldi	r20, 0x00	; 0
    1a9e:	50 e0       	ldi	r21, 0x00	; 0
    1aa0:	60 e8       	ldi	r22, 0x80	; 128
    1aa2:	7f e3       	ldi	r23, 0x3F	; 63
    1aa4:	ce 01       	movw	r24, r28
    1aa6:	c1 96       	adiw	r24, 0x31	; 49
    1aa8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1aac:	00 e0       	ldi	r16, 0x00	; 0
    1aae:	10 e0       	ldi	r17, 0x00	; 0
    1ab0:	98 01       	movw	r18, r16
    1ab2:	b9 01       	movw	r22, r18
    1ab4:	a8 01       	movw	r20, r16
    1ab6:	ce 01       	movw	r24, r28
    1ab8:	c9 96       	adiw	r24, 0x39	; 57
    1aba:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1abe:	00 e0       	ldi	r16, 0x00	; 0
    1ac0:	10 e0       	ldi	r17, 0x00	; 0
    1ac2:	98 01       	movw	r18, r16
    1ac4:	b9 01       	movw	r22, r18
    1ac6:	a8 01       	movw	r20, r16
    1ac8:	ce 01       	movw	r24, r28
    1aca:	8f 5b       	subi	r24, 0xBF	; 191
    1acc:	9f 4f       	sbci	r25, 0xFF	; 255
    1ace:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1ad2:	00 e0       	ldi	r16, 0x00	; 0
    1ad4:	10 e0       	ldi	r17, 0x00	; 0
    1ad6:	98 01       	movw	r18, r16
    1ad8:	40 e0       	ldi	r20, 0x00	; 0
    1ada:	50 e0       	ldi	r21, 0x00	; 0
    1adc:	60 e8       	ldi	r22, 0x80	; 128
    1ade:	7f e3       	ldi	r23, 0x3F	; 63
    1ae0:	ce 01       	movw	r24, r28
    1ae2:	87 5b       	subi	r24, 0xB7	; 183
    1ae4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ae6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1aea:	00 e0       	ldi	r16, 0x00	; 0
    1aec:	10 e0       	ldi	r17, 0x00	; 0
    1aee:	98 01       	movw	r18, r16
    1af0:	b9 01       	movw	r22, r18
    1af2:	a8 01       	movw	r20, r16
    1af4:	ce 01       	movw	r24, r28
    1af6:	8f 5a       	subi	r24, 0xAF	; 175
    1af8:	9f 4f       	sbci	r25, 0xFF	; 255
    1afa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1afe:	00 e0       	ldi	r16, 0x00	; 0
    1b00:	10 e0       	ldi	r17, 0x00	; 0
    1b02:	98 01       	movw	r18, r16
    1b04:	b9 01       	movw	r22, r18
    1b06:	a8 01       	movw	r20, r16
    1b08:	ce 01       	movw	r24, r28
    1b0a:	87 5a       	subi	r24, 0xA7	; 167
    1b0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b0e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1b12:	00 e0       	ldi	r16, 0x00	; 0
    1b14:	10 e0       	ldi	r17, 0x00	; 0
    1b16:	98 01       	movw	r18, r16
    1b18:	b9 01       	movw	r22, r18
    1b1a:	a8 01       	movw	r20, r16
    1b1c:	ce 01       	movw	r24, r28
    1b1e:	8f 59       	subi	r24, 0x9F	; 159
    1b20:	9f 4f       	sbci	r25, 0xFF	; 255
    1b22:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1b26:	00 e0       	ldi	r16, 0x00	; 0
    1b28:	10 e0       	ldi	r17, 0x00	; 0
    1b2a:	98 01       	movw	r18, r16
    1b2c:	b9 01       	movw	r22, r18
    1b2e:	a8 01       	movw	r20, r16
    1b30:	ce 01       	movw	r24, r28
    1b32:	87 59       	subi	r24, 0x97	; 151
    1b34:	9f 4f       	sbci	r25, 0xFF	; 255
    1b36:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1b3a:	00 e0       	ldi	r16, 0x00	; 0
    1b3c:	10 e0       	ldi	r17, 0x00	; 0
    1b3e:	98 01       	movw	r18, r16
    1b40:	b9 01       	movw	r22, r18
    1b42:	a8 01       	movw	r20, r16
    1b44:	ce 01       	movw	r24, r28
    1b46:	8f 58       	subi	r24, 0x8F	; 143
    1b48:	9f 4f       	sbci	r25, 0xFF	; 255
    1b4a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1b4e:	00 e0       	ldi	r16, 0x00	; 0
    1b50:	10 e0       	ldi	r17, 0x00	; 0
    1b52:	98 01       	movw	r18, r16
    1b54:	40 e0       	ldi	r20, 0x00	; 0
    1b56:	50 e0       	ldi	r21, 0x00	; 0
    1b58:	60 e8       	ldi	r22, 0x80	; 128
    1b5a:	7f e3       	ldi	r23, 0x3F	; 63
    1b5c:	ce 01       	movw	r24, r28
    1b5e:	87 58       	subi	r24, 0x87	; 135
    1b60:	9f 4f       	sbci	r25, 0xFF	; 255
    1b62:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    1b66:	cb 57       	subi	r28, 0x7B	; 123
    1b68:	df 4f       	sbci	r29, 0xFF	; 255
    1b6a:	79 82       	std	Y+1, r7	; 0x01
    1b6c:	68 82       	st	Y, r6
    1b6e:	c5 58       	subi	r28, 0x85	; 133
    1b70:	d0 40       	sbci	r29, 0x00	; 0
    1b72:	c9 57       	subi	r28, 0x79	; 121
    1b74:	df 4f       	sbci	r29, 0xFF	; 255
    1b76:	99 82       	std	Y+1, r9	; 0x01
    1b78:	88 82       	st	Y, r8
    1b7a:	c7 58       	subi	r28, 0x87	; 135
    1b7c:	d0 40       	sbci	r29, 0x00	; 0
    1b7e:	cf 57       	subi	r28, 0x7F	; 127
    1b80:	df 4f       	sbci	r29, 0xFF	; 255
    1b82:	b9 82       	std	Y+1, r11	; 0x01
    1b84:	a8 82       	st	Y, r10
    1b86:	c1 58       	subi	r28, 0x81	; 129
    1b88:	d0 40       	sbci	r29, 0x00	; 0
    1b8a:	cd 57       	subi	r28, 0x7D	; 125
    1b8c:	df 4f       	sbci	r29, 0xFF	; 255
    1b8e:	d9 82       	std	Y+1, r13	; 0x01
    1b90:	c8 82       	st	Y, r12
    1b92:	c3 58       	subi	r28, 0x83	; 131
    1b94:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),swa_matrix),QB_SIZE2);	
    1b96:	9e 01       	movw	r18, r28
    1b98:	2f 57       	subi	r18, 0x7F	; 127
    1b9a:	3f 4f       	sbci	r19, 0xFF	; 255
    1b9c:	ae 01       	movw	r20, r28
    1b9e:	4b 57       	subi	r20, 0x7B	; 123
    1ba0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ba2:	62 e0       	ldi	r22, 0x02	; 2
    1ba4:	70 e0       	ldi	r23, 0x00	; 0
    1ba6:	c7 01       	movw	r24, r14
    1ba8:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    1bac:	ae 01       	movw	r20, r28
    1bae:	4f 5f       	subi	r20, 0xFF	; 255
    1bb0:	5f 4f       	sbci	r21, 0xFF	; 255
    1bb2:	bc 01       	movw	r22, r24
    1bb4:	c7 01       	movw	r24, r14
    1bb6:	0e 94 cd 07 	call	0xf9a	; 0xf9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    1bba:	42 e0       	ldi	r20, 0x02	; 2
    1bbc:	50 e0       	ldi	r21, 0x00	; 0
    1bbe:	bc 01       	movw	r22, r24
    1bc0:	c7 01       	movw	r24, r14
    1bc2:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1bc6:	c8 57       	subi	r28, 0x78	; 120
    1bc8:	df 4f       	sbci	r29, 0xFF	; 255
    1bca:	0f b6       	in	r0, 0x3f	; 63
    1bcc:	f8 94       	cli
    1bce:	de bf       	out	0x3e, r29	; 62
    1bd0:	0f be       	out	0x3f, r0	; 63
    1bd2:	cd bf       	out	0x3d, r28	; 61
    1bd4:	df 91       	pop	r29
    1bd6:	cf 91       	pop	r28
    1bd8:	1f 91       	pop	r17
    1bda:	0f 91       	pop	r16
    1bdc:	ff 90       	pop	r15
    1bde:	ef 90       	pop	r14
    1be0:	df 90       	pop	r13
    1be2:	cf 90       	pop	r12
    1be4:	bf 90       	pop	r11
    1be6:	af 90       	pop	r10
    1be8:	9f 90       	pop	r9
    1bea:	8f 90       	pop	r8
    1bec:	7f 90       	pop	r7
    1bee:	6f 90       	pop	r6
    1bf0:	08 95       	ret

00001bf2 <_ZN5Gates3INCEiiii>:
int * Gates::INC(int theta1, int phi1, int theta2,int phi2){
    1bf2:	6f 92       	push	r6
    1bf4:	7f 92       	push	r7
    1bf6:	8f 92       	push	r8
    1bf8:	9f 92       	push	r9
    1bfa:	af 92       	push	r10
    1bfc:	bf 92       	push	r11
    1bfe:	cf 92       	push	r12
    1c00:	df 92       	push	r13
    1c02:	ef 92       	push	r14
    1c04:	ff 92       	push	r15
    1c06:	0f 93       	push	r16
    1c08:	1f 93       	push	r17
    1c0a:	cf 93       	push	r28
    1c0c:	df 93       	push	r29
    1c0e:	cd b7       	in	r28, 0x3d	; 61
    1c10:	de b7       	in	r29, 0x3e	; 62
    1c12:	c8 58       	subi	r28, 0x88	; 136
    1c14:	d1 09       	sbc	r29, r1
    1c16:	0f b6       	in	r0, 0x3f	; 63
    1c18:	f8 94       	cli
    1c1a:	de bf       	out	0x3e, r29	; 62
    1c1c:	0f be       	out	0x3f, r0	; 63
    1c1e:	cd bf       	out	0x3d, r28	; 61
    1c20:	7c 01       	movw	r14, r24
    1c22:	3b 01       	movw	r6, r22
    1c24:	5a 01       	movw	r10, r20
    1c26:	49 01       	movw	r8, r18
    1c28:	68 01       	movw	r12, r16
	Complex inc_matrix[QB_SIZE2*2][QB_SIZE2*2]{{Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
											   {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
											   {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
											   {Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)}};
    1c2a:	00 e0       	ldi	r16, 0x00	; 0
    1c2c:	10 e0       	ldi	r17, 0x00	; 0
    1c2e:	98 01       	movw	r18, r16
    1c30:	b9 01       	movw	r22, r18
    1c32:	a8 01       	movw	r20, r16
    1c34:	ce 01       	movw	r24, r28
    1c36:	01 96       	adiw	r24, 0x01	; 1
    1c38:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c3c:	00 e0       	ldi	r16, 0x00	; 0
    1c3e:	10 e0       	ldi	r17, 0x00	; 0
    1c40:	98 01       	movw	r18, r16
    1c42:	40 e0       	ldi	r20, 0x00	; 0
    1c44:	50 e0       	ldi	r21, 0x00	; 0
    1c46:	60 e8       	ldi	r22, 0x80	; 128
    1c48:	7f e3       	ldi	r23, 0x3F	; 63
    1c4a:	ce 01       	movw	r24, r28
    1c4c:	09 96       	adiw	r24, 0x09	; 9
    1c4e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c52:	00 e0       	ldi	r16, 0x00	; 0
    1c54:	10 e0       	ldi	r17, 0x00	; 0
    1c56:	98 01       	movw	r18, r16
    1c58:	b9 01       	movw	r22, r18
    1c5a:	a8 01       	movw	r20, r16
    1c5c:	ce 01       	movw	r24, r28
    1c5e:	41 96       	adiw	r24, 0x11	; 17
    1c60:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c64:	00 e0       	ldi	r16, 0x00	; 0
    1c66:	10 e0       	ldi	r17, 0x00	; 0
    1c68:	98 01       	movw	r18, r16
    1c6a:	b9 01       	movw	r22, r18
    1c6c:	a8 01       	movw	r20, r16
    1c6e:	ce 01       	movw	r24, r28
    1c70:	49 96       	adiw	r24, 0x19	; 25
    1c72:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c76:	00 e0       	ldi	r16, 0x00	; 0
    1c78:	10 e0       	ldi	r17, 0x00	; 0
    1c7a:	98 01       	movw	r18, r16
    1c7c:	b9 01       	movw	r22, r18
    1c7e:	a8 01       	movw	r20, r16
    1c80:	ce 01       	movw	r24, r28
    1c82:	81 96       	adiw	r24, 0x21	; 33
    1c84:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c88:	00 e0       	ldi	r16, 0x00	; 0
    1c8a:	10 e0       	ldi	r17, 0x00	; 0
    1c8c:	98 01       	movw	r18, r16
    1c8e:	b9 01       	movw	r22, r18
    1c90:	a8 01       	movw	r20, r16
    1c92:	ce 01       	movw	r24, r28
    1c94:	89 96       	adiw	r24, 0x29	; 41
    1c96:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c9a:	00 e0       	ldi	r16, 0x00	; 0
    1c9c:	10 e0       	ldi	r17, 0x00	; 0
    1c9e:	98 01       	movw	r18, r16
    1ca0:	40 e0       	ldi	r20, 0x00	; 0
    1ca2:	50 e0       	ldi	r21, 0x00	; 0
    1ca4:	60 e8       	ldi	r22, 0x80	; 128
    1ca6:	7f e3       	ldi	r23, 0x3F	; 63
    1ca8:	ce 01       	movw	r24, r28
    1caa:	c1 96       	adiw	r24, 0x31	; 49
    1cac:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1cb0:	00 e0       	ldi	r16, 0x00	; 0
    1cb2:	10 e0       	ldi	r17, 0x00	; 0
    1cb4:	98 01       	movw	r18, r16
    1cb6:	b9 01       	movw	r22, r18
    1cb8:	a8 01       	movw	r20, r16
    1cba:	ce 01       	movw	r24, r28
    1cbc:	c9 96       	adiw	r24, 0x39	; 57
    1cbe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1cc2:	00 e0       	ldi	r16, 0x00	; 0
    1cc4:	10 e0       	ldi	r17, 0x00	; 0
    1cc6:	98 01       	movw	r18, r16
    1cc8:	b9 01       	movw	r22, r18
    1cca:	a8 01       	movw	r20, r16
    1ccc:	ce 01       	movw	r24, r28
    1cce:	8f 5b       	subi	r24, 0xBF	; 191
    1cd0:	9f 4f       	sbci	r25, 0xFF	; 255
    1cd2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1cd6:	00 e0       	ldi	r16, 0x00	; 0
    1cd8:	10 e0       	ldi	r17, 0x00	; 0
    1cda:	98 01       	movw	r18, r16
    1cdc:	b9 01       	movw	r22, r18
    1cde:	a8 01       	movw	r20, r16
    1ce0:	ce 01       	movw	r24, r28
    1ce2:	87 5b       	subi	r24, 0xB7	; 183
    1ce4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ce6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1cea:	00 e0       	ldi	r16, 0x00	; 0
    1cec:	10 e0       	ldi	r17, 0x00	; 0
    1cee:	98 01       	movw	r18, r16
    1cf0:	b9 01       	movw	r22, r18
    1cf2:	a8 01       	movw	r20, r16
    1cf4:	ce 01       	movw	r24, r28
    1cf6:	8f 5a       	subi	r24, 0xAF	; 175
    1cf8:	9f 4f       	sbci	r25, 0xFF	; 255
    1cfa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1cfe:	00 e0       	ldi	r16, 0x00	; 0
    1d00:	10 e0       	ldi	r17, 0x00	; 0
    1d02:	98 01       	movw	r18, r16
    1d04:	40 e0       	ldi	r20, 0x00	; 0
    1d06:	50 e0       	ldi	r21, 0x00	; 0
    1d08:	60 e8       	ldi	r22, 0x80	; 128
    1d0a:	7f e3       	ldi	r23, 0x3F	; 63
    1d0c:	ce 01       	movw	r24, r28
    1d0e:	87 5a       	subi	r24, 0xA7	; 167
    1d10:	9f 4f       	sbci	r25, 0xFF	; 255
    1d12:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1d16:	00 e0       	ldi	r16, 0x00	; 0
    1d18:	10 e0       	ldi	r17, 0x00	; 0
    1d1a:	98 01       	movw	r18, r16
    1d1c:	40 e0       	ldi	r20, 0x00	; 0
    1d1e:	50 e0       	ldi	r21, 0x00	; 0
    1d20:	60 e8       	ldi	r22, 0x80	; 128
    1d22:	7f e3       	ldi	r23, 0x3F	; 63
    1d24:	ce 01       	movw	r24, r28
    1d26:	8f 59       	subi	r24, 0x9F	; 159
    1d28:	9f 4f       	sbci	r25, 0xFF	; 255
    1d2a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1d2e:	00 e0       	ldi	r16, 0x00	; 0
    1d30:	10 e0       	ldi	r17, 0x00	; 0
    1d32:	98 01       	movw	r18, r16
    1d34:	b9 01       	movw	r22, r18
    1d36:	a8 01       	movw	r20, r16
    1d38:	ce 01       	movw	r24, r28
    1d3a:	87 59       	subi	r24, 0x97	; 151
    1d3c:	9f 4f       	sbci	r25, 0xFF	; 255
    1d3e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1d42:	00 e0       	ldi	r16, 0x00	; 0
    1d44:	10 e0       	ldi	r17, 0x00	; 0
    1d46:	98 01       	movw	r18, r16
    1d48:	b9 01       	movw	r22, r18
    1d4a:	a8 01       	movw	r20, r16
    1d4c:	ce 01       	movw	r24, r28
    1d4e:	8f 58       	subi	r24, 0x8F	; 143
    1d50:	9f 4f       	sbci	r25, 0xFF	; 255
    1d52:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1d56:	00 e0       	ldi	r16, 0x00	; 0
    1d58:	10 e0       	ldi	r17, 0x00	; 0
    1d5a:	98 01       	movw	r18, r16
    1d5c:	b9 01       	movw	r22, r18
    1d5e:	a8 01       	movw	r20, r16
    1d60:	ce 01       	movw	r24, r28
    1d62:	87 58       	subi	r24, 0x87	; 135
    1d64:	9f 4f       	sbci	r25, 0xFF	; 255
    1d66:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    1d6a:	cb 57       	subi	r28, 0x7B	; 123
    1d6c:	df 4f       	sbci	r29, 0xFF	; 255
    1d6e:	79 82       	std	Y+1, r7	; 0x01
    1d70:	68 82       	st	Y, r6
    1d72:	c5 58       	subi	r28, 0x85	; 133
    1d74:	d0 40       	sbci	r29, 0x00	; 0
    1d76:	c9 57       	subi	r28, 0x79	; 121
    1d78:	df 4f       	sbci	r29, 0xFF	; 255
    1d7a:	99 82       	std	Y+1, r9	; 0x01
    1d7c:	88 82       	st	Y, r8
    1d7e:	c7 58       	subi	r28, 0x87	; 135
    1d80:	d0 40       	sbci	r29, 0x00	; 0
    1d82:	cf 57       	subi	r28, 0x7F	; 127
    1d84:	df 4f       	sbci	r29, 0xFF	; 255
    1d86:	b9 82       	std	Y+1, r11	; 0x01
    1d88:	a8 82       	st	Y, r10
    1d8a:	c1 58       	subi	r28, 0x81	; 129
    1d8c:	d0 40       	sbci	r29, 0x00	; 0
    1d8e:	cd 57       	subi	r28, 0x7D	; 125
    1d90:	df 4f       	sbci	r29, 0xFF	; 255
    1d92:	d9 82       	std	Y+1, r13	; 0x01
    1d94:	c8 82       	st	Y, r12
    1d96:	c3 58       	subi	r28, 0x83	; 131
    1d98:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),inc_matrix),QB_SIZE2);
    1d9a:	9e 01       	movw	r18, r28
    1d9c:	2f 57       	subi	r18, 0x7F	; 127
    1d9e:	3f 4f       	sbci	r19, 0xFF	; 255
    1da0:	ae 01       	movw	r20, r28
    1da2:	4b 57       	subi	r20, 0x7B	; 123
    1da4:	5f 4f       	sbci	r21, 0xFF	; 255
    1da6:	62 e0       	ldi	r22, 0x02	; 2
    1da8:	70 e0       	ldi	r23, 0x00	; 0
    1daa:	c7 01       	movw	r24, r14
    1dac:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    1db0:	ae 01       	movw	r20, r28
    1db2:	4f 5f       	subi	r20, 0xFF	; 255
    1db4:	5f 4f       	sbci	r21, 0xFF	; 255
    1db6:	bc 01       	movw	r22, r24
    1db8:	c7 01       	movw	r24, r14
    1dba:	0e 94 cd 07 	call	0xf9a	; 0xf9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    1dbe:	42 e0       	ldi	r20, 0x02	; 2
    1dc0:	50 e0       	ldi	r21, 0x00	; 0
    1dc2:	bc 01       	movw	r22, r24
    1dc4:	c7 01       	movw	r24, r14
    1dc6:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1dca:	c8 57       	subi	r28, 0x78	; 120
    1dcc:	df 4f       	sbci	r29, 0xFF	; 255
    1dce:	0f b6       	in	r0, 0x3f	; 63
    1dd0:	f8 94       	cli
    1dd2:	de bf       	out	0x3e, r29	; 62
    1dd4:	0f be       	out	0x3f, r0	; 63
    1dd6:	cd bf       	out	0x3d, r28	; 61
    1dd8:	df 91       	pop	r29
    1dda:	cf 91       	pop	r28
    1ddc:	1f 91       	pop	r17
    1dde:	0f 91       	pop	r16
    1de0:	ff 90       	pop	r15
    1de2:	ef 90       	pop	r14
    1de4:	df 90       	pop	r13
    1de6:	cf 90       	pop	r12
    1de8:	bf 90       	pop	r11
    1dea:	af 90       	pop	r10
    1dec:	9f 90       	pop	r9
    1dee:	8f 90       	pop	r8
    1df0:	7f 90       	pop	r7
    1df2:	6f 90       	pop	r6
    1df4:	08 95       	ret

00001df6 <_ZN5Gates3DECEiiii>:
int * Gates::DEC(int theta1, int phi1, int theta2,int phi2){
    1df6:	6f 92       	push	r6
    1df8:	7f 92       	push	r7
    1dfa:	8f 92       	push	r8
    1dfc:	9f 92       	push	r9
    1dfe:	af 92       	push	r10
    1e00:	bf 92       	push	r11
    1e02:	cf 92       	push	r12
    1e04:	df 92       	push	r13
    1e06:	ef 92       	push	r14
    1e08:	ff 92       	push	r15
    1e0a:	0f 93       	push	r16
    1e0c:	1f 93       	push	r17
    1e0e:	cf 93       	push	r28
    1e10:	df 93       	push	r29
    1e12:	cd b7       	in	r28, 0x3d	; 61
    1e14:	de b7       	in	r29, 0x3e	; 62
    1e16:	c8 58       	subi	r28, 0x88	; 136
    1e18:	d1 09       	sbc	r29, r1
    1e1a:	0f b6       	in	r0, 0x3f	; 63
    1e1c:	f8 94       	cli
    1e1e:	de bf       	out	0x3e, r29	; 62
    1e20:	0f be       	out	0x3f, r0	; 63
    1e22:	cd bf       	out	0x3d, r28	; 61
    1e24:	7c 01       	movw	r14, r24
    1e26:	3b 01       	movw	r6, r22
    1e28:	5a 01       	movw	r10, r20
    1e2a:	49 01       	movw	r8, r18
    1e2c:	68 01       	movw	r12, r16
	Complex dec_matrix[QB_SIZE2*2][QB_SIZE2*2]{{Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
											   {Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
											   {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
											   {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)}};
    1e2e:	00 e0       	ldi	r16, 0x00	; 0
    1e30:	10 e0       	ldi	r17, 0x00	; 0
    1e32:	98 01       	movw	r18, r16
    1e34:	b9 01       	movw	r22, r18
    1e36:	a8 01       	movw	r20, r16
    1e38:	ce 01       	movw	r24, r28
    1e3a:	01 96       	adiw	r24, 0x01	; 1
    1e3c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e40:	00 e0       	ldi	r16, 0x00	; 0
    1e42:	10 e0       	ldi	r17, 0x00	; 0
    1e44:	98 01       	movw	r18, r16
    1e46:	b9 01       	movw	r22, r18
    1e48:	a8 01       	movw	r20, r16
    1e4a:	ce 01       	movw	r24, r28
    1e4c:	09 96       	adiw	r24, 0x09	; 9
    1e4e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e52:	00 e0       	ldi	r16, 0x00	; 0
    1e54:	10 e0       	ldi	r17, 0x00	; 0
    1e56:	98 01       	movw	r18, r16
    1e58:	b9 01       	movw	r22, r18
    1e5a:	a8 01       	movw	r20, r16
    1e5c:	ce 01       	movw	r24, r28
    1e5e:	41 96       	adiw	r24, 0x11	; 17
    1e60:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e64:	00 e0       	ldi	r16, 0x00	; 0
    1e66:	10 e0       	ldi	r17, 0x00	; 0
    1e68:	98 01       	movw	r18, r16
    1e6a:	40 e0       	ldi	r20, 0x00	; 0
    1e6c:	50 e0       	ldi	r21, 0x00	; 0
    1e6e:	60 e8       	ldi	r22, 0x80	; 128
    1e70:	7f e3       	ldi	r23, 0x3F	; 63
    1e72:	ce 01       	movw	r24, r28
    1e74:	49 96       	adiw	r24, 0x19	; 25
    1e76:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e7a:	00 e0       	ldi	r16, 0x00	; 0
    1e7c:	10 e0       	ldi	r17, 0x00	; 0
    1e7e:	98 01       	movw	r18, r16
    1e80:	40 e0       	ldi	r20, 0x00	; 0
    1e82:	50 e0       	ldi	r21, 0x00	; 0
    1e84:	60 e8       	ldi	r22, 0x80	; 128
    1e86:	7f e3       	ldi	r23, 0x3F	; 63
    1e88:	ce 01       	movw	r24, r28
    1e8a:	81 96       	adiw	r24, 0x21	; 33
    1e8c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e90:	00 e0       	ldi	r16, 0x00	; 0
    1e92:	10 e0       	ldi	r17, 0x00	; 0
    1e94:	98 01       	movw	r18, r16
    1e96:	b9 01       	movw	r22, r18
    1e98:	a8 01       	movw	r20, r16
    1e9a:	ce 01       	movw	r24, r28
    1e9c:	89 96       	adiw	r24, 0x29	; 41
    1e9e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1ea2:	00 e0       	ldi	r16, 0x00	; 0
    1ea4:	10 e0       	ldi	r17, 0x00	; 0
    1ea6:	98 01       	movw	r18, r16
    1ea8:	b9 01       	movw	r22, r18
    1eaa:	a8 01       	movw	r20, r16
    1eac:	ce 01       	movw	r24, r28
    1eae:	c1 96       	adiw	r24, 0x31	; 49
    1eb0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1eb4:	00 e0       	ldi	r16, 0x00	; 0
    1eb6:	10 e0       	ldi	r17, 0x00	; 0
    1eb8:	98 01       	movw	r18, r16
    1eba:	b9 01       	movw	r22, r18
    1ebc:	a8 01       	movw	r20, r16
    1ebe:	ce 01       	movw	r24, r28
    1ec0:	c9 96       	adiw	r24, 0x39	; 57
    1ec2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1ec6:	00 e0       	ldi	r16, 0x00	; 0
    1ec8:	10 e0       	ldi	r17, 0x00	; 0
    1eca:	98 01       	movw	r18, r16
    1ecc:	b9 01       	movw	r22, r18
    1ece:	a8 01       	movw	r20, r16
    1ed0:	ce 01       	movw	r24, r28
    1ed2:	8f 5b       	subi	r24, 0xBF	; 191
    1ed4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ed6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1eda:	00 e0       	ldi	r16, 0x00	; 0
    1edc:	10 e0       	ldi	r17, 0x00	; 0
    1ede:	98 01       	movw	r18, r16
    1ee0:	40 e0       	ldi	r20, 0x00	; 0
    1ee2:	50 e0       	ldi	r21, 0x00	; 0
    1ee4:	60 e8       	ldi	r22, 0x80	; 128
    1ee6:	7f e3       	ldi	r23, 0x3F	; 63
    1ee8:	ce 01       	movw	r24, r28
    1eea:	87 5b       	subi	r24, 0xB7	; 183
    1eec:	9f 4f       	sbci	r25, 0xFF	; 255
    1eee:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1ef2:	00 e0       	ldi	r16, 0x00	; 0
    1ef4:	10 e0       	ldi	r17, 0x00	; 0
    1ef6:	98 01       	movw	r18, r16
    1ef8:	b9 01       	movw	r22, r18
    1efa:	a8 01       	movw	r20, r16
    1efc:	ce 01       	movw	r24, r28
    1efe:	8f 5a       	subi	r24, 0xAF	; 175
    1f00:	9f 4f       	sbci	r25, 0xFF	; 255
    1f02:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1f06:	00 e0       	ldi	r16, 0x00	; 0
    1f08:	10 e0       	ldi	r17, 0x00	; 0
    1f0a:	98 01       	movw	r18, r16
    1f0c:	b9 01       	movw	r22, r18
    1f0e:	a8 01       	movw	r20, r16
    1f10:	ce 01       	movw	r24, r28
    1f12:	87 5a       	subi	r24, 0xA7	; 167
    1f14:	9f 4f       	sbci	r25, 0xFF	; 255
    1f16:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1f1a:	00 e0       	ldi	r16, 0x00	; 0
    1f1c:	10 e0       	ldi	r17, 0x00	; 0
    1f1e:	98 01       	movw	r18, r16
    1f20:	b9 01       	movw	r22, r18
    1f22:	a8 01       	movw	r20, r16
    1f24:	ce 01       	movw	r24, r28
    1f26:	8f 59       	subi	r24, 0x9F	; 159
    1f28:	9f 4f       	sbci	r25, 0xFF	; 255
    1f2a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1f2e:	00 e0       	ldi	r16, 0x00	; 0
    1f30:	10 e0       	ldi	r17, 0x00	; 0
    1f32:	98 01       	movw	r18, r16
    1f34:	b9 01       	movw	r22, r18
    1f36:	a8 01       	movw	r20, r16
    1f38:	ce 01       	movw	r24, r28
    1f3a:	87 59       	subi	r24, 0x97	; 151
    1f3c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f3e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1f42:	00 e0       	ldi	r16, 0x00	; 0
    1f44:	10 e0       	ldi	r17, 0x00	; 0
    1f46:	98 01       	movw	r18, r16
    1f48:	40 e0       	ldi	r20, 0x00	; 0
    1f4a:	50 e0       	ldi	r21, 0x00	; 0
    1f4c:	60 e8       	ldi	r22, 0x80	; 128
    1f4e:	7f e3       	ldi	r23, 0x3F	; 63
    1f50:	ce 01       	movw	r24, r28
    1f52:	8f 58       	subi	r24, 0x8F	; 143
    1f54:	9f 4f       	sbci	r25, 0xFF	; 255
    1f56:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1f5a:	00 e0       	ldi	r16, 0x00	; 0
    1f5c:	10 e0       	ldi	r17, 0x00	; 0
    1f5e:	98 01       	movw	r18, r16
    1f60:	b9 01       	movw	r22, r18
    1f62:	a8 01       	movw	r20, r16
    1f64:	ce 01       	movw	r24, r28
    1f66:	87 58       	subi	r24, 0x87	; 135
    1f68:	9f 4f       	sbci	r25, 0xFF	; 255
    1f6a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    1f6e:	cb 57       	subi	r28, 0x7B	; 123
    1f70:	df 4f       	sbci	r29, 0xFF	; 255
    1f72:	79 82       	std	Y+1, r7	; 0x01
    1f74:	68 82       	st	Y, r6
    1f76:	c5 58       	subi	r28, 0x85	; 133
    1f78:	d0 40       	sbci	r29, 0x00	; 0
    1f7a:	c9 57       	subi	r28, 0x79	; 121
    1f7c:	df 4f       	sbci	r29, 0xFF	; 255
    1f7e:	99 82       	std	Y+1, r9	; 0x01
    1f80:	88 82       	st	Y, r8
    1f82:	c7 58       	subi	r28, 0x87	; 135
    1f84:	d0 40       	sbci	r29, 0x00	; 0
    1f86:	cf 57       	subi	r28, 0x7F	; 127
    1f88:	df 4f       	sbci	r29, 0xFF	; 255
    1f8a:	b9 82       	std	Y+1, r11	; 0x01
    1f8c:	a8 82       	st	Y, r10
    1f8e:	c1 58       	subi	r28, 0x81	; 129
    1f90:	d0 40       	sbci	r29, 0x00	; 0
    1f92:	cd 57       	subi	r28, 0x7D	; 125
    1f94:	df 4f       	sbci	r29, 0xFF	; 255
    1f96:	d9 82       	std	Y+1, r13	; 0x01
    1f98:	c8 82       	st	Y, r12
    1f9a:	c3 58       	subi	r28, 0x83	; 131
    1f9c:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),dec_matrix),QB_SIZE2);
    1f9e:	9e 01       	movw	r18, r28
    1fa0:	2f 57       	subi	r18, 0x7F	; 127
    1fa2:	3f 4f       	sbci	r19, 0xFF	; 255
    1fa4:	ae 01       	movw	r20, r28
    1fa6:	4b 57       	subi	r20, 0x7B	; 123
    1fa8:	5f 4f       	sbci	r21, 0xFF	; 255
    1faa:	62 e0       	ldi	r22, 0x02	; 2
    1fac:	70 e0       	ldi	r23, 0x00	; 0
    1fae:	c7 01       	movw	r24, r14
    1fb0:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    1fb4:	ae 01       	movw	r20, r28
    1fb6:	4f 5f       	subi	r20, 0xFF	; 255
    1fb8:	5f 4f       	sbci	r21, 0xFF	; 255
    1fba:	bc 01       	movw	r22, r24
    1fbc:	c7 01       	movw	r24, r14
    1fbe:	0e 94 cd 07 	call	0xf9a	; 0xf9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    1fc2:	42 e0       	ldi	r20, 0x02	; 2
    1fc4:	50 e0       	ldi	r21, 0x00	; 0
    1fc6:	bc 01       	movw	r22, r24
    1fc8:	c7 01       	movw	r24, r14
    1fca:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1fce:	c8 57       	subi	r28, 0x78	; 120
    1fd0:	df 4f       	sbci	r29, 0xFF	; 255
    1fd2:	0f b6       	in	r0, 0x3f	; 63
    1fd4:	f8 94       	cli
    1fd6:	de bf       	out	0x3e, r29	; 62
    1fd8:	0f be       	out	0x3f, r0	; 63
    1fda:	cd bf       	out	0x3d, r28	; 61
    1fdc:	df 91       	pop	r29
    1fde:	cf 91       	pop	r28
    1fe0:	1f 91       	pop	r17
    1fe2:	0f 91       	pop	r16
    1fe4:	ff 90       	pop	r15
    1fe6:	ef 90       	pop	r14
    1fe8:	df 90       	pop	r13
    1fea:	cf 90       	pop	r12
    1fec:	bf 90       	pop	r11
    1fee:	af 90       	pop	r10
    1ff0:	9f 90       	pop	r9
    1ff2:	8f 90       	pop	r8
    1ff4:	7f 90       	pop	r7
    1ff6:	6f 90       	pop	r6
    1ff8:	08 95       	ret

00001ffa <_ZN5Gates3SWQEiiii>:
int * Gates::SWQ(int theta1, int phi1, int theta2,int phi2){
    1ffa:	6f 92       	push	r6
    1ffc:	7f 92       	push	r7
    1ffe:	8f 92       	push	r8
    2000:	9f 92       	push	r9
    2002:	af 92       	push	r10
    2004:	bf 92       	push	r11
    2006:	cf 92       	push	r12
    2008:	df 92       	push	r13
    200a:	ef 92       	push	r14
    200c:	ff 92       	push	r15
    200e:	0f 93       	push	r16
    2010:	1f 93       	push	r17
    2012:	cf 93       	push	r28
    2014:	df 93       	push	r29
    2016:	cd b7       	in	r28, 0x3d	; 61
    2018:	de b7       	in	r29, 0x3e	; 62
    201a:	c8 58       	subi	r28, 0x88	; 136
    201c:	d1 09       	sbc	r29, r1
    201e:	0f b6       	in	r0, 0x3f	; 63
    2020:	f8 94       	cli
    2022:	de bf       	out	0x3e, r29	; 62
    2024:	0f be       	out	0x3f, r0	; 63
    2026:	cd bf       	out	0x3d, r28	; 61
    2028:	7c 01       	movw	r14, r24
    202a:	3b 01       	movw	r6, r22
    202c:	5a 01       	movw	r10, r20
    202e:	49 01       	movw	r8, r18
    2030:	68 01       	movw	r12, r16
	Complex swq_matrix[QB_SIZE2*2][QB_SIZE2*2]{{Complex(1,0),Complex(0,0),   Complex(0,0),   Complex(0,0)},
	 										   {Complex(0,0),Complex(.5,.5), Complex(.5,-.5),Complex(0,0)},
											   {Complex(0,0),Complex(.5,-.5),Complex(.5,.5), Complex(0,0)},
											   {Complex(0,0),Complex(0,0),   Complex(0,0),   Complex(1,0)}};
    2032:	00 e0       	ldi	r16, 0x00	; 0
    2034:	10 e0       	ldi	r17, 0x00	; 0
    2036:	98 01       	movw	r18, r16
    2038:	40 e0       	ldi	r20, 0x00	; 0
    203a:	50 e0       	ldi	r21, 0x00	; 0
    203c:	60 e8       	ldi	r22, 0x80	; 128
    203e:	7f e3       	ldi	r23, 0x3F	; 63
    2040:	ce 01       	movw	r24, r28
    2042:	01 96       	adiw	r24, 0x01	; 1
    2044:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2048:	00 e0       	ldi	r16, 0x00	; 0
    204a:	10 e0       	ldi	r17, 0x00	; 0
    204c:	98 01       	movw	r18, r16
    204e:	b9 01       	movw	r22, r18
    2050:	a8 01       	movw	r20, r16
    2052:	ce 01       	movw	r24, r28
    2054:	09 96       	adiw	r24, 0x09	; 9
    2056:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    205a:	00 e0       	ldi	r16, 0x00	; 0
    205c:	10 e0       	ldi	r17, 0x00	; 0
    205e:	98 01       	movw	r18, r16
    2060:	b9 01       	movw	r22, r18
    2062:	a8 01       	movw	r20, r16
    2064:	ce 01       	movw	r24, r28
    2066:	41 96       	adiw	r24, 0x11	; 17
    2068:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    206c:	00 e0       	ldi	r16, 0x00	; 0
    206e:	10 e0       	ldi	r17, 0x00	; 0
    2070:	98 01       	movw	r18, r16
    2072:	b9 01       	movw	r22, r18
    2074:	a8 01       	movw	r20, r16
    2076:	ce 01       	movw	r24, r28
    2078:	49 96       	adiw	r24, 0x19	; 25
    207a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    207e:	00 e0       	ldi	r16, 0x00	; 0
    2080:	10 e0       	ldi	r17, 0x00	; 0
    2082:	98 01       	movw	r18, r16
    2084:	b9 01       	movw	r22, r18
    2086:	a8 01       	movw	r20, r16
    2088:	ce 01       	movw	r24, r28
    208a:	81 96       	adiw	r24, 0x21	; 33
    208c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2090:	00 e0       	ldi	r16, 0x00	; 0
    2092:	10 e0       	ldi	r17, 0x00	; 0
    2094:	20 e0       	ldi	r18, 0x00	; 0
    2096:	3f e3       	ldi	r19, 0x3F	; 63
    2098:	b9 01       	movw	r22, r18
    209a:	a8 01       	movw	r20, r16
    209c:	ce 01       	movw	r24, r28
    209e:	89 96       	adiw	r24, 0x29	; 41
    20a0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    20a4:	00 e0       	ldi	r16, 0x00	; 0
    20a6:	10 e0       	ldi	r17, 0x00	; 0
    20a8:	20 e0       	ldi	r18, 0x00	; 0
    20aa:	3f eb       	ldi	r19, 0xBF	; 191
    20ac:	40 e0       	ldi	r20, 0x00	; 0
    20ae:	50 e0       	ldi	r21, 0x00	; 0
    20b0:	60 e0       	ldi	r22, 0x00	; 0
    20b2:	7f e3       	ldi	r23, 0x3F	; 63
    20b4:	ce 01       	movw	r24, r28
    20b6:	c1 96       	adiw	r24, 0x31	; 49
    20b8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    20bc:	00 e0       	ldi	r16, 0x00	; 0
    20be:	10 e0       	ldi	r17, 0x00	; 0
    20c0:	98 01       	movw	r18, r16
    20c2:	b9 01       	movw	r22, r18
    20c4:	a8 01       	movw	r20, r16
    20c6:	ce 01       	movw	r24, r28
    20c8:	c9 96       	adiw	r24, 0x39	; 57
    20ca:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    20ce:	00 e0       	ldi	r16, 0x00	; 0
    20d0:	10 e0       	ldi	r17, 0x00	; 0
    20d2:	98 01       	movw	r18, r16
    20d4:	b9 01       	movw	r22, r18
    20d6:	a8 01       	movw	r20, r16
    20d8:	ce 01       	movw	r24, r28
    20da:	8f 5b       	subi	r24, 0xBF	; 191
    20dc:	9f 4f       	sbci	r25, 0xFF	; 255
    20de:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    20e2:	00 e0       	ldi	r16, 0x00	; 0
    20e4:	10 e0       	ldi	r17, 0x00	; 0
    20e6:	20 e0       	ldi	r18, 0x00	; 0
    20e8:	3f eb       	ldi	r19, 0xBF	; 191
    20ea:	40 e0       	ldi	r20, 0x00	; 0
    20ec:	50 e0       	ldi	r21, 0x00	; 0
    20ee:	60 e0       	ldi	r22, 0x00	; 0
    20f0:	7f e3       	ldi	r23, 0x3F	; 63
    20f2:	ce 01       	movw	r24, r28
    20f4:	87 5b       	subi	r24, 0xB7	; 183
    20f6:	9f 4f       	sbci	r25, 0xFF	; 255
    20f8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    20fc:	00 e0       	ldi	r16, 0x00	; 0
    20fe:	10 e0       	ldi	r17, 0x00	; 0
    2100:	20 e0       	ldi	r18, 0x00	; 0
    2102:	3f e3       	ldi	r19, 0x3F	; 63
    2104:	b9 01       	movw	r22, r18
    2106:	a8 01       	movw	r20, r16
    2108:	ce 01       	movw	r24, r28
    210a:	8f 5a       	subi	r24, 0xAF	; 175
    210c:	9f 4f       	sbci	r25, 0xFF	; 255
    210e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2112:	00 e0       	ldi	r16, 0x00	; 0
    2114:	10 e0       	ldi	r17, 0x00	; 0
    2116:	98 01       	movw	r18, r16
    2118:	b9 01       	movw	r22, r18
    211a:	a8 01       	movw	r20, r16
    211c:	ce 01       	movw	r24, r28
    211e:	87 5a       	subi	r24, 0xA7	; 167
    2120:	9f 4f       	sbci	r25, 0xFF	; 255
    2122:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2126:	00 e0       	ldi	r16, 0x00	; 0
    2128:	10 e0       	ldi	r17, 0x00	; 0
    212a:	98 01       	movw	r18, r16
    212c:	b9 01       	movw	r22, r18
    212e:	a8 01       	movw	r20, r16
    2130:	ce 01       	movw	r24, r28
    2132:	8f 59       	subi	r24, 0x9F	; 159
    2134:	9f 4f       	sbci	r25, 0xFF	; 255
    2136:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    213a:	00 e0       	ldi	r16, 0x00	; 0
    213c:	10 e0       	ldi	r17, 0x00	; 0
    213e:	98 01       	movw	r18, r16
    2140:	b9 01       	movw	r22, r18
    2142:	a8 01       	movw	r20, r16
    2144:	ce 01       	movw	r24, r28
    2146:	87 59       	subi	r24, 0x97	; 151
    2148:	9f 4f       	sbci	r25, 0xFF	; 255
    214a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    214e:	00 e0       	ldi	r16, 0x00	; 0
    2150:	10 e0       	ldi	r17, 0x00	; 0
    2152:	98 01       	movw	r18, r16
    2154:	b9 01       	movw	r22, r18
    2156:	a8 01       	movw	r20, r16
    2158:	ce 01       	movw	r24, r28
    215a:	8f 58       	subi	r24, 0x8F	; 143
    215c:	9f 4f       	sbci	r25, 0xFF	; 255
    215e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2162:	00 e0       	ldi	r16, 0x00	; 0
    2164:	10 e0       	ldi	r17, 0x00	; 0
    2166:	98 01       	movw	r18, r16
    2168:	40 e0       	ldi	r20, 0x00	; 0
    216a:	50 e0       	ldi	r21, 0x00	; 0
    216c:	60 e8       	ldi	r22, 0x80	; 128
    216e:	7f e3       	ldi	r23, 0x3F	; 63
    2170:	ce 01       	movw	r24, r28
    2172:	87 58       	subi	r24, 0x87	; 135
    2174:	9f 4f       	sbci	r25, 0xFF	; 255
    2176:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    217a:	cb 57       	subi	r28, 0x7B	; 123
    217c:	df 4f       	sbci	r29, 0xFF	; 255
    217e:	79 82       	std	Y+1, r7	; 0x01
    2180:	68 82       	st	Y, r6
    2182:	c5 58       	subi	r28, 0x85	; 133
    2184:	d0 40       	sbci	r29, 0x00	; 0
    2186:	c9 57       	subi	r28, 0x79	; 121
    2188:	df 4f       	sbci	r29, 0xFF	; 255
    218a:	99 82       	std	Y+1, r9	; 0x01
    218c:	88 82       	st	Y, r8
    218e:	c7 58       	subi	r28, 0x87	; 135
    2190:	d0 40       	sbci	r29, 0x00	; 0
    2192:	cf 57       	subi	r28, 0x7F	; 127
    2194:	df 4f       	sbci	r29, 0xFF	; 255
    2196:	b9 82       	std	Y+1, r11	; 0x01
    2198:	a8 82       	st	Y, r10
    219a:	c1 58       	subi	r28, 0x81	; 129
    219c:	d0 40       	sbci	r29, 0x00	; 0
    219e:	cd 57       	subi	r28, 0x7D	; 125
    21a0:	df 4f       	sbci	r29, 0xFF	; 255
    21a2:	d9 82       	std	Y+1, r13	; 0x01
    21a4:	c8 82       	st	Y, r12
    21a6:	c3 58       	subi	r28, 0x83	; 131
    21a8:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),swq_matrix),QB_SIZE2);
    21aa:	9e 01       	movw	r18, r28
    21ac:	2f 57       	subi	r18, 0x7F	; 127
    21ae:	3f 4f       	sbci	r19, 0xFF	; 255
    21b0:	ae 01       	movw	r20, r28
    21b2:	4b 57       	subi	r20, 0x7B	; 123
    21b4:	5f 4f       	sbci	r21, 0xFF	; 255
    21b6:	62 e0       	ldi	r22, 0x02	; 2
    21b8:	70 e0       	ldi	r23, 0x00	; 0
    21ba:	c7 01       	movw	r24, r14
    21bc:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    21c0:	ae 01       	movw	r20, r28
    21c2:	4f 5f       	subi	r20, 0xFF	; 255
    21c4:	5f 4f       	sbci	r21, 0xFF	; 255
    21c6:	bc 01       	movw	r22, r24
    21c8:	c7 01       	movw	r24, r14
    21ca:	0e 94 cd 07 	call	0xf9a	; 0xf9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    21ce:	42 e0       	ldi	r20, 0x02	; 2
    21d0:	50 e0       	ldi	r21, 0x00	; 0
    21d2:	bc 01       	movw	r22, r24
    21d4:	c7 01       	movw	r24, r14
    21d6:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    21da:	c8 57       	subi	r28, 0x78	; 120
    21dc:	df 4f       	sbci	r29, 0xFF	; 255
    21de:	0f b6       	in	r0, 0x3f	; 63
    21e0:	f8 94       	cli
    21e2:	de bf       	out	0x3e, r29	; 62
    21e4:	0f be       	out	0x3f, r0	; 63
    21e6:	cd bf       	out	0x3d, r28	; 61
    21e8:	df 91       	pop	r29
    21ea:	cf 91       	pop	r28
    21ec:	1f 91       	pop	r17
    21ee:	0f 91       	pop	r16
    21f0:	ff 90       	pop	r15
    21f2:	ef 90       	pop	r14
    21f4:	df 90       	pop	r13
    21f6:	cf 90       	pop	r12
    21f8:	bf 90       	pop	r11
    21fa:	af 90       	pop	r10
    21fc:	9f 90       	pop	r9
    21fe:	8f 90       	pop	r8
    2200:	7f 90       	pop	r7
    2202:	6f 90       	pop	r6
    2204:	08 95       	ret

00002206 <_ZN5Gates3SWIEiiii>:
int * Gates::SWI(int theta1, int phi1, int theta2,int phi2){
    2206:	6f 92       	push	r6
    2208:	7f 92       	push	r7
    220a:	8f 92       	push	r8
    220c:	9f 92       	push	r9
    220e:	af 92       	push	r10
    2210:	bf 92       	push	r11
    2212:	cf 92       	push	r12
    2214:	df 92       	push	r13
    2216:	ef 92       	push	r14
    2218:	ff 92       	push	r15
    221a:	0f 93       	push	r16
    221c:	1f 93       	push	r17
    221e:	cf 93       	push	r28
    2220:	df 93       	push	r29
    2222:	cd b7       	in	r28, 0x3d	; 61
    2224:	de b7       	in	r29, 0x3e	; 62
    2226:	c8 58       	subi	r28, 0x88	; 136
    2228:	d1 09       	sbc	r29, r1
    222a:	0f b6       	in	r0, 0x3f	; 63
    222c:	f8 94       	cli
    222e:	de bf       	out	0x3e, r29	; 62
    2230:	0f be       	out	0x3f, r0	; 63
    2232:	cd bf       	out	0x3d, r28	; 61
    2234:	7c 01       	movw	r14, r24
    2236:	3b 01       	movw	r6, r22
    2238:	5a 01       	movw	r10, r20
    223a:	49 01       	movw	r8, r18
    223c:	68 01       	movw	r12, r16
	Complex dec_matrix[QB_SIZE2*2][QB_SIZE2*2]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
											   {Complex(0,0),Complex(0,0),Complex(0,1),Complex(0,0)},
 											   {Complex(0,0),Complex(0,1),Complex(0,0),Complex(0,0)},
											   {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)}};
    223e:	00 e0       	ldi	r16, 0x00	; 0
    2240:	10 e0       	ldi	r17, 0x00	; 0
    2242:	98 01       	movw	r18, r16
    2244:	40 e0       	ldi	r20, 0x00	; 0
    2246:	50 e0       	ldi	r21, 0x00	; 0
    2248:	60 e8       	ldi	r22, 0x80	; 128
    224a:	7f e3       	ldi	r23, 0x3F	; 63
    224c:	ce 01       	movw	r24, r28
    224e:	01 96       	adiw	r24, 0x01	; 1
    2250:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2254:	00 e0       	ldi	r16, 0x00	; 0
    2256:	10 e0       	ldi	r17, 0x00	; 0
    2258:	98 01       	movw	r18, r16
    225a:	b9 01       	movw	r22, r18
    225c:	a8 01       	movw	r20, r16
    225e:	ce 01       	movw	r24, r28
    2260:	09 96       	adiw	r24, 0x09	; 9
    2262:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2266:	00 e0       	ldi	r16, 0x00	; 0
    2268:	10 e0       	ldi	r17, 0x00	; 0
    226a:	98 01       	movw	r18, r16
    226c:	b9 01       	movw	r22, r18
    226e:	a8 01       	movw	r20, r16
    2270:	ce 01       	movw	r24, r28
    2272:	41 96       	adiw	r24, 0x11	; 17
    2274:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2278:	00 e0       	ldi	r16, 0x00	; 0
    227a:	10 e0       	ldi	r17, 0x00	; 0
    227c:	98 01       	movw	r18, r16
    227e:	b9 01       	movw	r22, r18
    2280:	a8 01       	movw	r20, r16
    2282:	ce 01       	movw	r24, r28
    2284:	49 96       	adiw	r24, 0x19	; 25
    2286:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    228a:	00 e0       	ldi	r16, 0x00	; 0
    228c:	10 e0       	ldi	r17, 0x00	; 0
    228e:	98 01       	movw	r18, r16
    2290:	b9 01       	movw	r22, r18
    2292:	a8 01       	movw	r20, r16
    2294:	ce 01       	movw	r24, r28
    2296:	81 96       	adiw	r24, 0x21	; 33
    2298:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    229c:	00 e0       	ldi	r16, 0x00	; 0
    229e:	10 e0       	ldi	r17, 0x00	; 0
    22a0:	98 01       	movw	r18, r16
    22a2:	b9 01       	movw	r22, r18
    22a4:	a8 01       	movw	r20, r16
    22a6:	ce 01       	movw	r24, r28
    22a8:	89 96       	adiw	r24, 0x29	; 41
    22aa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    22ae:	00 e0       	ldi	r16, 0x00	; 0
    22b0:	10 e0       	ldi	r17, 0x00	; 0
    22b2:	20 e8       	ldi	r18, 0x80	; 128
    22b4:	3f e3       	ldi	r19, 0x3F	; 63
    22b6:	40 e0       	ldi	r20, 0x00	; 0
    22b8:	50 e0       	ldi	r21, 0x00	; 0
    22ba:	ba 01       	movw	r22, r20
    22bc:	ce 01       	movw	r24, r28
    22be:	c1 96       	adiw	r24, 0x31	; 49
    22c0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    22c4:	00 e0       	ldi	r16, 0x00	; 0
    22c6:	10 e0       	ldi	r17, 0x00	; 0
    22c8:	98 01       	movw	r18, r16
    22ca:	b9 01       	movw	r22, r18
    22cc:	a8 01       	movw	r20, r16
    22ce:	ce 01       	movw	r24, r28
    22d0:	c9 96       	adiw	r24, 0x39	; 57
    22d2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    22d6:	00 e0       	ldi	r16, 0x00	; 0
    22d8:	10 e0       	ldi	r17, 0x00	; 0
    22da:	98 01       	movw	r18, r16
    22dc:	b9 01       	movw	r22, r18
    22de:	a8 01       	movw	r20, r16
    22e0:	ce 01       	movw	r24, r28
    22e2:	8f 5b       	subi	r24, 0xBF	; 191
    22e4:	9f 4f       	sbci	r25, 0xFF	; 255
    22e6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    22ea:	00 e0       	ldi	r16, 0x00	; 0
    22ec:	10 e0       	ldi	r17, 0x00	; 0
    22ee:	20 e8       	ldi	r18, 0x80	; 128
    22f0:	3f e3       	ldi	r19, 0x3F	; 63
    22f2:	40 e0       	ldi	r20, 0x00	; 0
    22f4:	50 e0       	ldi	r21, 0x00	; 0
    22f6:	ba 01       	movw	r22, r20
    22f8:	ce 01       	movw	r24, r28
    22fa:	87 5b       	subi	r24, 0xB7	; 183
    22fc:	9f 4f       	sbci	r25, 0xFF	; 255
    22fe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2302:	00 e0       	ldi	r16, 0x00	; 0
    2304:	10 e0       	ldi	r17, 0x00	; 0
    2306:	98 01       	movw	r18, r16
    2308:	b9 01       	movw	r22, r18
    230a:	a8 01       	movw	r20, r16
    230c:	ce 01       	movw	r24, r28
    230e:	8f 5a       	subi	r24, 0xAF	; 175
    2310:	9f 4f       	sbci	r25, 0xFF	; 255
    2312:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2316:	00 e0       	ldi	r16, 0x00	; 0
    2318:	10 e0       	ldi	r17, 0x00	; 0
    231a:	98 01       	movw	r18, r16
    231c:	b9 01       	movw	r22, r18
    231e:	a8 01       	movw	r20, r16
    2320:	ce 01       	movw	r24, r28
    2322:	87 5a       	subi	r24, 0xA7	; 167
    2324:	9f 4f       	sbci	r25, 0xFF	; 255
    2326:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    232a:	00 e0       	ldi	r16, 0x00	; 0
    232c:	10 e0       	ldi	r17, 0x00	; 0
    232e:	98 01       	movw	r18, r16
    2330:	b9 01       	movw	r22, r18
    2332:	a8 01       	movw	r20, r16
    2334:	ce 01       	movw	r24, r28
    2336:	8f 59       	subi	r24, 0x9F	; 159
    2338:	9f 4f       	sbci	r25, 0xFF	; 255
    233a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    233e:	00 e0       	ldi	r16, 0x00	; 0
    2340:	10 e0       	ldi	r17, 0x00	; 0
    2342:	98 01       	movw	r18, r16
    2344:	b9 01       	movw	r22, r18
    2346:	a8 01       	movw	r20, r16
    2348:	ce 01       	movw	r24, r28
    234a:	87 59       	subi	r24, 0x97	; 151
    234c:	9f 4f       	sbci	r25, 0xFF	; 255
    234e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2352:	00 e0       	ldi	r16, 0x00	; 0
    2354:	10 e0       	ldi	r17, 0x00	; 0
    2356:	98 01       	movw	r18, r16
    2358:	b9 01       	movw	r22, r18
    235a:	a8 01       	movw	r20, r16
    235c:	ce 01       	movw	r24, r28
    235e:	8f 58       	subi	r24, 0x8F	; 143
    2360:	9f 4f       	sbci	r25, 0xFF	; 255
    2362:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2366:	00 e0       	ldi	r16, 0x00	; 0
    2368:	10 e0       	ldi	r17, 0x00	; 0
    236a:	98 01       	movw	r18, r16
    236c:	40 e0       	ldi	r20, 0x00	; 0
    236e:	50 e0       	ldi	r21, 0x00	; 0
    2370:	60 e8       	ldi	r22, 0x80	; 128
    2372:	7f e3       	ldi	r23, 0x3F	; 63
    2374:	ce 01       	movw	r24, r28
    2376:	87 58       	subi	r24, 0x87	; 135
    2378:	9f 4f       	sbci	r25, 0xFF	; 255
    237a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    237e:	cb 57       	subi	r28, 0x7B	; 123
    2380:	df 4f       	sbci	r29, 0xFF	; 255
    2382:	79 82       	std	Y+1, r7	; 0x01
    2384:	68 82       	st	Y, r6
    2386:	c5 58       	subi	r28, 0x85	; 133
    2388:	d0 40       	sbci	r29, 0x00	; 0
    238a:	c9 57       	subi	r28, 0x79	; 121
    238c:	df 4f       	sbci	r29, 0xFF	; 255
    238e:	99 82       	std	Y+1, r9	; 0x01
    2390:	88 82       	st	Y, r8
    2392:	c7 58       	subi	r28, 0x87	; 135
    2394:	d0 40       	sbci	r29, 0x00	; 0
    2396:	cf 57       	subi	r28, 0x7F	; 127
    2398:	df 4f       	sbci	r29, 0xFF	; 255
    239a:	b9 82       	std	Y+1, r11	; 0x01
    239c:	a8 82       	st	Y, r10
    239e:	c1 58       	subi	r28, 0x81	; 129
    23a0:	d0 40       	sbci	r29, 0x00	; 0
    23a2:	cd 57       	subi	r28, 0x7D	; 125
    23a4:	df 4f       	sbci	r29, 0xFF	; 255
    23a6:	d9 82       	std	Y+1, r13	; 0x01
    23a8:	c8 82       	st	Y, r12
    23aa:	c3 58       	subi	r28, 0x83	; 131
    23ac:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),dec_matrix),QB_SIZE2);
    23ae:	9e 01       	movw	r18, r28
    23b0:	2f 57       	subi	r18, 0x7F	; 127
    23b2:	3f 4f       	sbci	r19, 0xFF	; 255
    23b4:	ae 01       	movw	r20, r28
    23b6:	4b 57       	subi	r20, 0x7B	; 123
    23b8:	5f 4f       	sbci	r21, 0xFF	; 255
    23ba:	62 e0       	ldi	r22, 0x02	; 2
    23bc:	70 e0       	ldi	r23, 0x00	; 0
    23be:	c7 01       	movw	r24, r14
    23c0:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    23c4:	ae 01       	movw	r20, r28
    23c6:	4f 5f       	subi	r20, 0xFF	; 255
    23c8:	5f 4f       	sbci	r21, 0xFF	; 255
    23ca:	bc 01       	movw	r22, r24
    23cc:	c7 01       	movw	r24, r14
    23ce:	0e 94 cd 07 	call	0xf9a	; 0xf9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    23d2:	42 e0       	ldi	r20, 0x02	; 2
    23d4:	50 e0       	ldi	r21, 0x00	; 0
    23d6:	bc 01       	movw	r22, r24
    23d8:	c7 01       	movw	r24, r14
    23da:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    23de:	c8 57       	subi	r28, 0x78	; 120
    23e0:	df 4f       	sbci	r29, 0xFF	; 255
    23e2:	0f b6       	in	r0, 0x3f	; 63
    23e4:	f8 94       	cli
    23e6:	de bf       	out	0x3e, r29	; 62
    23e8:	0f be       	out	0x3f, r0	; 63
    23ea:	cd bf       	out	0x3d, r28	; 61
    23ec:	df 91       	pop	r29
    23ee:	cf 91       	pop	r28
    23f0:	1f 91       	pop	r17
    23f2:	0f 91       	pop	r16
    23f4:	ff 90       	pop	r15
    23f6:	ef 90       	pop	r14
    23f8:	df 90       	pop	r13
    23fa:	cf 90       	pop	r12
    23fc:	bf 90       	pop	r11
    23fe:	af 90       	pop	r10
    2400:	9f 90       	pop	r9
    2402:	8f 90       	pop	r8
    2404:	7f 90       	pop	r7
    2406:	6f 90       	pop	r6
    2408:	08 95       	ret

0000240a <_ZN5Gates3ROXEiii>:
int * Gates::ROX(int theta,int phi,int delta){
    240a:	2f 92       	push	r2
    240c:	3f 92       	push	r3
    240e:	4f 92       	push	r4
    2410:	5f 92       	push	r5
    2412:	6f 92       	push	r6
    2414:	7f 92       	push	r7
    2416:	8f 92       	push	r8
    2418:	9f 92       	push	r9
    241a:	af 92       	push	r10
    241c:	bf 92       	push	r11
    241e:	cf 92       	push	r12
    2420:	df 92       	push	r13
    2422:	ef 92       	push	r14
    2424:	ff 92       	push	r15
    2426:	0f 93       	push	r16
    2428:	1f 93       	push	r17
    242a:	cf 93       	push	r28
    242c:	df 93       	push	r29
    242e:	cd b7       	in	r28, 0x3d	; 61
    2430:	de b7       	in	r29, 0x3e	; 62
    2432:	a4 97       	sbiw	r28, 0x24	; 36
    2434:	0f b6       	in	r0, 0x3f	; 63
    2436:	f8 94       	cli
    2438:	de bf       	out	0x3e, r29	; 62
    243a:	0f be       	out	0x3f, r0	; 63
    243c:	cd bf       	out	0x3d, r28	; 61
    243e:	7c 01       	movw	r14, r24
    2440:	1b 01       	movw	r2, r22
    2442:	6a 01       	movw	r12, r20
	float delta_float=(delta*M_PI)/180;
    2444:	b9 01       	movw	r22, r18
    2446:	88 27       	eor	r24, r24
    2448:	77 fd       	sbrc	r23, 7
    244a:	80 95       	com	r24
    244c:	98 2f       	mov	r25, r24
    244e:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__floatsisf>
    2452:	2b ed       	ldi	r18, 0xDB	; 219
    2454:	3f e0       	ldi	r19, 0x0F	; 15
    2456:	49 e4       	ldi	r20, 0x49	; 73
    2458:	50 e4       	ldi	r21, 0x40	; 64
    245a:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
    245e:	20 e0       	ldi	r18, 0x00	; 0
    2460:	30 e0       	ldi	r19, 0x00	; 0
    2462:	44 e3       	ldi	r20, 0x34	; 52
    2464:	53 e4       	ldi	r21, 0x43	; 67
    2466:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <__divsf3>
	Complex rox_matrix[QB_SIZE1*2][QB_SIZE1*2]{{Complex(cos(delta_float/2),0), Complex(0,-sin(delta_float/2))},
    246a:	20 e0       	ldi	r18, 0x00	; 0
    246c:	30 e0       	ldi	r19, 0x00	; 0
    246e:	40 e0       	ldi	r20, 0x00	; 0
    2470:	5f e3       	ldi	r21, 0x3F	; 63
    2472:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
    2476:	4b 01       	movw	r8, r22
    2478:	5c 01       	movw	r10, r24
    247a:	0e 94 59 1d 	call	0x3ab2	; 0x3ab2 <cos>
    247e:	2b 01       	movw	r4, r22
    2480:	3c 01       	movw	r6, r24
											   {Complex(0,-sin(delta_float/2)),Complex(cos(delta_float/2),0)}};
    2482:	00 e0       	ldi	r16, 0x00	; 0
    2484:	10 e0       	ldi	r17, 0x00	; 0
    2486:	98 01       	movw	r18, r16
    2488:	ab 01       	movw	r20, r22
    248a:	bc 01       	movw	r22, r24
    248c:	ce 01       	movw	r24, r28
    248e:	01 96       	adiw	r24, 0x01	; 1
    2490:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),dec_matrix),QB_SIZE2);
}
int * Gates::ROX(int theta,int phi,int delta){
	float delta_float=(delta*M_PI)/180;
	Complex rox_matrix[QB_SIZE1*2][QB_SIZE1*2]{{Complex(cos(delta_float/2),0), Complex(0,-sin(delta_float/2))},
    2494:	c5 01       	movw	r24, r10
    2496:	b4 01       	movw	r22, r8
    2498:	0e 94 6d 20 	call	0x40da	; 0x40da <sin>
											   {Complex(0,-sin(delta_float/2)),Complex(cos(delta_float/2),0)}};
    249c:	4b 01       	movw	r8, r22
    249e:	5c 01       	movw	r10, r24
    24a0:	b7 fa       	bst	r11, 7
    24a2:	b0 94       	com	r11
    24a4:	b7 f8       	bld	r11, 7
    24a6:	b0 94       	com	r11
    24a8:	95 01       	movw	r18, r10
    24aa:	84 01       	movw	r16, r8
    24ac:	40 e0       	ldi	r20, 0x00	; 0
    24ae:	50 e0       	ldi	r21, 0x00	; 0
    24b0:	ba 01       	movw	r22, r20
    24b2:	ce 01       	movw	r24, r28
    24b4:	09 96       	adiw	r24, 0x09	; 9
    24b6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    24ba:	95 01       	movw	r18, r10
    24bc:	84 01       	movw	r16, r8
    24be:	40 e0       	ldi	r20, 0x00	; 0
    24c0:	50 e0       	ldi	r21, 0x00	; 0
    24c2:	ba 01       	movw	r22, r20
    24c4:	ce 01       	movw	r24, r28
    24c6:	41 96       	adiw	r24, 0x11	; 17
    24c8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    24cc:	00 e0       	ldi	r16, 0x00	; 0
    24ce:	10 e0       	ldi	r17, 0x00	; 0
    24d0:	98 01       	movw	r18, r16
    24d2:	b3 01       	movw	r22, r6
    24d4:	a2 01       	movw	r20, r4
    24d6:	ce 01       	movw	r24, r28
    24d8:	49 96       	adiw	r24, 0x19	; 25
    24da:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    24de:	3c a2       	std	Y+36, r3	; 0x24
    24e0:	2b a2       	std	Y+35, r2	; 0x23
    24e2:	da a2       	std	Y+34, r13	; 0x22
    24e4:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),rox_matrix),QB_SIZE1);		
    24e6:	9e 01       	movw	r18, r28
    24e8:	2f 5d       	subi	r18, 0xDF	; 223
    24ea:	3f 4f       	sbci	r19, 0xFF	; 255
    24ec:	ae 01       	movw	r20, r28
    24ee:	4d 5d       	subi	r20, 0xDD	; 221
    24f0:	5f 4f       	sbci	r21, 0xFF	; 255
    24f2:	61 e0       	ldi	r22, 0x01	; 1
    24f4:	70 e0       	ldi	r23, 0x00	; 0
    24f6:	c7 01       	movw	r24, r14
    24f8:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    24fc:	ae 01       	movw	r20, r28
    24fe:	4f 5f       	subi	r20, 0xFF	; 255
    2500:	5f 4f       	sbci	r21, 0xFF	; 255
    2502:	bc 01       	movw	r22, r24
    2504:	c7 01       	movw	r24, r14
    2506:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    250a:	41 e0       	ldi	r20, 0x01	; 1
    250c:	50 e0       	ldi	r21, 0x00	; 0
    250e:	bc 01       	movw	r22, r24
    2510:	c7 01       	movw	r24, r14
    2512:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    2516:	a4 96       	adiw	r28, 0x24	; 36
    2518:	0f b6       	in	r0, 0x3f	; 63
    251a:	f8 94       	cli
    251c:	de bf       	out	0x3e, r29	; 62
    251e:	0f be       	out	0x3f, r0	; 63
    2520:	cd bf       	out	0x3d, r28	; 61
    2522:	df 91       	pop	r29
    2524:	cf 91       	pop	r28
    2526:	1f 91       	pop	r17
    2528:	0f 91       	pop	r16
    252a:	ff 90       	pop	r15
    252c:	ef 90       	pop	r14
    252e:	df 90       	pop	r13
    2530:	cf 90       	pop	r12
    2532:	bf 90       	pop	r11
    2534:	af 90       	pop	r10
    2536:	9f 90       	pop	r9
    2538:	8f 90       	pop	r8
    253a:	7f 90       	pop	r7
    253c:	6f 90       	pop	r6
    253e:	5f 90       	pop	r5
    2540:	4f 90       	pop	r4
    2542:	3f 90       	pop	r3
    2544:	2f 90       	pop	r2
    2546:	08 95       	ret

00002548 <_ZN5Gates3ROYEiii>:
int * Gates::ROY(int theta,int phi,int delta){
    2548:	2f 92       	push	r2
    254a:	3f 92       	push	r3
    254c:	4f 92       	push	r4
    254e:	5f 92       	push	r5
    2550:	6f 92       	push	r6
    2552:	7f 92       	push	r7
    2554:	8f 92       	push	r8
    2556:	9f 92       	push	r9
    2558:	af 92       	push	r10
    255a:	bf 92       	push	r11
    255c:	cf 92       	push	r12
    255e:	df 92       	push	r13
    2560:	ef 92       	push	r14
    2562:	ff 92       	push	r15
    2564:	0f 93       	push	r16
    2566:	1f 93       	push	r17
    2568:	cf 93       	push	r28
    256a:	df 93       	push	r29
    256c:	cd b7       	in	r28, 0x3d	; 61
    256e:	de b7       	in	r29, 0x3e	; 62
    2570:	a4 97       	sbiw	r28, 0x24	; 36
    2572:	0f b6       	in	r0, 0x3f	; 63
    2574:	f8 94       	cli
    2576:	de bf       	out	0x3e, r29	; 62
    2578:	0f be       	out	0x3f, r0	; 63
    257a:	cd bf       	out	0x3d, r28	; 61
    257c:	7c 01       	movw	r14, r24
    257e:	1b 01       	movw	r2, r22
    2580:	6a 01       	movw	r12, r20
	float delta_float=(delta*M_PI)/180;
    2582:	b9 01       	movw	r22, r18
    2584:	88 27       	eor	r24, r24
    2586:	77 fd       	sbrc	r23, 7
    2588:	80 95       	com	r24
    258a:	98 2f       	mov	r25, r24
    258c:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__floatsisf>
    2590:	2b ed       	ldi	r18, 0xDB	; 219
    2592:	3f e0       	ldi	r19, 0x0F	; 15
    2594:	49 e4       	ldi	r20, 0x49	; 73
    2596:	50 e4       	ldi	r21, 0x40	; 64
    2598:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
    259c:	20 e0       	ldi	r18, 0x00	; 0
    259e:	30 e0       	ldi	r19, 0x00	; 0
    25a0:	44 e3       	ldi	r20, 0x34	; 52
    25a2:	53 e4       	ldi	r21, 0x43	; 67
    25a4:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <__divsf3>
	Complex roy_matrix[QB_SIZE1*2][QB_SIZE1*2]{{Complex(cos(delta_float/2),0),Complex(-sin(delta_float/2),0)},
    25a8:	20 e0       	ldi	r18, 0x00	; 0
    25aa:	30 e0       	ldi	r19, 0x00	; 0
    25ac:	40 e0       	ldi	r20, 0x00	; 0
    25ae:	5f e3       	ldi	r21, 0x3F	; 63
    25b0:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
    25b4:	4b 01       	movw	r8, r22
    25b6:	5c 01       	movw	r10, r24
    25b8:	0e 94 59 1d 	call	0x3ab2	; 0x3ab2 <cos>
    25bc:	2b 01       	movw	r4, r22
    25be:	3c 01       	movw	r6, r24
											   {Complex(sin(delta_float/2),0),Complex(cos(delta_float/2),0)}};
    25c0:	00 e0       	ldi	r16, 0x00	; 0
    25c2:	10 e0       	ldi	r17, 0x00	; 0
    25c4:	98 01       	movw	r18, r16
    25c6:	ab 01       	movw	r20, r22
    25c8:	bc 01       	movw	r22, r24
    25ca:	ce 01       	movw	r24, r28
    25cc:	01 96       	adiw	r24, 0x01	; 1
    25ce:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),rox_matrix),QB_SIZE1);		
}
int * Gates::ROY(int theta,int phi,int delta){
	float delta_float=(delta*M_PI)/180;
	Complex roy_matrix[QB_SIZE1*2][QB_SIZE1*2]{{Complex(cos(delta_float/2),0),Complex(-sin(delta_float/2),0)},
    25d2:	c5 01       	movw	r24, r10
    25d4:	b4 01       	movw	r22, r8
    25d6:	0e 94 6d 20 	call	0x40da	; 0x40da <sin>
    25da:	4b 01       	movw	r8, r22
    25dc:	5c 01       	movw	r10, r24
											   {Complex(sin(delta_float/2),0),Complex(cos(delta_float/2),0)}};
    25de:	ab 01       	movw	r20, r22
    25e0:	bc 01       	movw	r22, r24
    25e2:	70 58       	subi	r23, 0x80	; 128
    25e4:	00 e0       	ldi	r16, 0x00	; 0
    25e6:	10 e0       	ldi	r17, 0x00	; 0
    25e8:	98 01       	movw	r18, r16
    25ea:	ce 01       	movw	r24, r28
    25ec:	09 96       	adiw	r24, 0x09	; 9
    25ee:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    25f2:	00 e0       	ldi	r16, 0x00	; 0
    25f4:	10 e0       	ldi	r17, 0x00	; 0
    25f6:	98 01       	movw	r18, r16
    25f8:	b5 01       	movw	r22, r10
    25fa:	a4 01       	movw	r20, r8
    25fc:	ce 01       	movw	r24, r28
    25fe:	41 96       	adiw	r24, 0x11	; 17
    2600:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2604:	00 e0       	ldi	r16, 0x00	; 0
    2606:	10 e0       	ldi	r17, 0x00	; 0
    2608:	98 01       	movw	r18, r16
    260a:	b3 01       	movw	r22, r6
    260c:	a2 01       	movw	r20, r4
    260e:	ce 01       	movw	r24, r28
    2610:	49 96       	adiw	r24, 0x19	; 25
    2612:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    2616:	3c a2       	std	Y+36, r3	; 0x24
    2618:	2b a2       	std	Y+35, r2	; 0x23
    261a:	da a2       	std	Y+34, r13	; 0x22
    261c:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),roy_matrix),QB_SIZE1);
    261e:	9e 01       	movw	r18, r28
    2620:	2f 5d       	subi	r18, 0xDF	; 223
    2622:	3f 4f       	sbci	r19, 0xFF	; 255
    2624:	ae 01       	movw	r20, r28
    2626:	4d 5d       	subi	r20, 0xDD	; 221
    2628:	5f 4f       	sbci	r21, 0xFF	; 255
    262a:	61 e0       	ldi	r22, 0x01	; 1
    262c:	70 e0       	ldi	r23, 0x00	; 0
    262e:	c7 01       	movw	r24, r14
    2630:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    2634:	ae 01       	movw	r20, r28
    2636:	4f 5f       	subi	r20, 0xFF	; 255
    2638:	5f 4f       	sbci	r21, 0xFF	; 255
    263a:	bc 01       	movw	r22, r24
    263c:	c7 01       	movw	r24, r14
    263e:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    2642:	41 e0       	ldi	r20, 0x01	; 1
    2644:	50 e0       	ldi	r21, 0x00	; 0
    2646:	bc 01       	movw	r22, r24
    2648:	c7 01       	movw	r24, r14
    264a:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    264e:	a4 96       	adiw	r28, 0x24	; 36
    2650:	0f b6       	in	r0, 0x3f	; 63
    2652:	f8 94       	cli
    2654:	de bf       	out	0x3e, r29	; 62
    2656:	0f be       	out	0x3f, r0	; 63
    2658:	cd bf       	out	0x3d, r28	; 61
    265a:	df 91       	pop	r29
    265c:	cf 91       	pop	r28
    265e:	1f 91       	pop	r17
    2660:	0f 91       	pop	r16
    2662:	ff 90       	pop	r15
    2664:	ef 90       	pop	r14
    2666:	df 90       	pop	r13
    2668:	cf 90       	pop	r12
    266a:	bf 90       	pop	r11
    266c:	af 90       	pop	r10
    266e:	9f 90       	pop	r9
    2670:	8f 90       	pop	r8
    2672:	7f 90       	pop	r7
    2674:	6f 90       	pop	r6
    2676:	5f 90       	pop	r5
    2678:	4f 90       	pop	r4
    267a:	3f 90       	pop	r3
    267c:	2f 90       	pop	r2
    267e:	08 95       	ret

00002680 <_ZN5Gates3ROZEiii>:
int * Gates::ROZ(int theta,int phi,int delta){
    2680:	4f 92       	push	r4
    2682:	5f 92       	push	r5
    2684:	6f 92       	push	r6
    2686:	7f 92       	push	r7
    2688:	af 92       	push	r10
    268a:	bf 92       	push	r11
    268c:	cf 92       	push	r12
    268e:	df 92       	push	r13
    2690:	ef 92       	push	r14
    2692:	ff 92       	push	r15
    2694:	0f 93       	push	r16
    2696:	1f 93       	push	r17
    2698:	cf 93       	push	r28
    269a:	df 93       	push	r29
    269c:	cd b7       	in	r28, 0x3d	; 61
    269e:	de b7       	in	r29, 0x3e	; 62
    26a0:	a4 97       	sbiw	r28, 0x24	; 36
    26a2:	0f b6       	in	r0, 0x3f	; 63
    26a4:	f8 94       	cli
    26a6:	de bf       	out	0x3e, r29	; 62
    26a8:	0f be       	out	0x3f, r0	; 63
    26aa:	cd bf       	out	0x3d, r28	; 61
    26ac:	7c 01       	movw	r14, r24
    26ae:	5b 01       	movw	r10, r22
    26b0:	6a 01       	movw	r12, r20
	float delta_float=(delta*M_PI)/180;
    26b2:	b9 01       	movw	r22, r18
    26b4:	88 27       	eor	r24, r24
    26b6:	77 fd       	sbrc	r23, 7
    26b8:	80 95       	com	r24
    26ba:	98 2f       	mov	r25, r24
    26bc:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <__floatsisf>
    26c0:	2b ed       	ldi	r18, 0xDB	; 219
    26c2:	3f e0       	ldi	r19, 0x0F	; 15
    26c4:	49 e4       	ldi	r20, 0x49	; 73
    26c6:	50 e4       	ldi	r21, 0x40	; 64
    26c8:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
    26cc:	20 e0       	ldi	r18, 0x00	; 0
    26ce:	30 e0       	ldi	r19, 0x00	; 0
    26d0:	44 e3       	ldi	r20, 0x34	; 52
    26d2:	53 e4       	ldi	r21, 0x43	; 67
    26d4:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <__divsf3>
    26d8:	2b 01       	movw	r4, r22
    26da:	3c 01       	movw	r6, r24
	Complex roy_matrix[QB_SIZE1*2][QB_SIZE1*2]{{Complex(0,exp(-delta_float/2)),Complex(0,0)},
    26dc:	90 58       	subi	r25, 0x80	; 128
    26de:	20 e0       	ldi	r18, 0x00	; 0
    26e0:	30 e0       	ldi	r19, 0x00	; 0
    26e2:	40 e0       	ldi	r20, 0x00	; 0
    26e4:	5f e3       	ldi	r21, 0x3F	; 63
    26e6:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
    26ea:	0e 94 c9 1d 	call	0x3b92	; 0x3b92 <exp>
    26ee:	8b 01       	movw	r16, r22
    26f0:	9c 01       	movw	r18, r24
											   {Complex(0,0),				   Complex(0,exp(delta_float/2))}};
    26f2:	40 e0       	ldi	r20, 0x00	; 0
    26f4:	50 e0       	ldi	r21, 0x00	; 0
    26f6:	ba 01       	movw	r22, r20
    26f8:	ce 01       	movw	r24, r28
    26fa:	01 96       	adiw	r24, 0x01	; 1
    26fc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2700:	00 e0       	ldi	r16, 0x00	; 0
    2702:	10 e0       	ldi	r17, 0x00	; 0
    2704:	98 01       	movw	r18, r16
    2706:	b9 01       	movw	r22, r18
    2708:	a8 01       	movw	r20, r16
    270a:	ce 01       	movw	r24, r28
    270c:	09 96       	adiw	r24, 0x09	; 9
    270e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2712:	00 e0       	ldi	r16, 0x00	; 0
    2714:	10 e0       	ldi	r17, 0x00	; 0
    2716:	98 01       	movw	r18, r16
    2718:	b9 01       	movw	r22, r18
    271a:	a8 01       	movw	r20, r16
    271c:	ce 01       	movw	r24, r28
    271e:	41 96       	adiw	r24, 0x11	; 17
    2720:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2724:	20 e0       	ldi	r18, 0x00	; 0
    2726:	30 e0       	ldi	r19, 0x00	; 0
    2728:	40 e0       	ldi	r20, 0x00	; 0
    272a:	5f e3       	ldi	r21, 0x3F	; 63
    272c:	c3 01       	movw	r24, r6
    272e:	b2 01       	movw	r22, r4
    2730:	0e 94 0a 20 	call	0x4014	; 0x4014 <__mulsf3>
    2734:	0e 94 c9 1d 	call	0x3b92	; 0x3b92 <exp>
    2738:	8b 01       	movw	r16, r22
    273a:	9c 01       	movw	r18, r24
    273c:	40 e0       	ldi	r20, 0x00	; 0
    273e:	50 e0       	ldi	r21, 0x00	; 0
    2740:	ba 01       	movw	r22, r20
    2742:	ce 01       	movw	r24, r28
    2744:	49 96       	adiw	r24, 0x19	; 25
    2746:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    274a:	bc a2       	std	Y+36, r11	; 0x24
    274c:	ab a2       	std	Y+35, r10	; 0x23
    274e:	da a2       	std	Y+34, r13	; 0x22
    2750:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),roy_matrix),QB_SIZE1);
    2752:	9e 01       	movw	r18, r28
    2754:	2f 5d       	subi	r18, 0xDF	; 223
    2756:	3f 4f       	sbci	r19, 0xFF	; 255
    2758:	ae 01       	movw	r20, r28
    275a:	4d 5d       	subi	r20, 0xDD	; 221
    275c:	5f 4f       	sbci	r21, 0xFF	; 255
    275e:	61 e0       	ldi	r22, 0x01	; 1
    2760:	70 e0       	ldi	r23, 0x00	; 0
    2762:	c7 01       	movw	r24, r14
    2764:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    2768:	ae 01       	movw	r20, r28
    276a:	4f 5f       	subi	r20, 0xFF	; 255
    276c:	5f 4f       	sbci	r21, 0xFF	; 255
    276e:	bc 01       	movw	r22, r24
    2770:	c7 01       	movw	r24, r14
    2772:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    2776:	41 e0       	ldi	r20, 0x01	; 1
    2778:	50 e0       	ldi	r21, 0x00	; 0
    277a:	bc 01       	movw	r22, r24
    277c:	c7 01       	movw	r24, r14
    277e:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    2782:	a4 96       	adiw	r28, 0x24	; 36
    2784:	0f b6       	in	r0, 0x3f	; 63
    2786:	f8 94       	cli
    2788:	de bf       	out	0x3e, r29	; 62
    278a:	0f be       	out	0x3f, r0	; 63
    278c:	cd bf       	out	0x3d, r28	; 61
    278e:	df 91       	pop	r29
    2790:	cf 91       	pop	r28
    2792:	1f 91       	pop	r17
    2794:	0f 91       	pop	r16
    2796:	ff 90       	pop	r15
    2798:	ef 90       	pop	r14
    279a:	df 90       	pop	r13
    279c:	cf 90       	pop	r12
    279e:	bf 90       	pop	r11
    27a0:	af 90       	pop	r10
    27a2:	7f 90       	pop	r7
    27a4:	6f 90       	pop	r6
    27a6:	5f 90       	pop	r5
    27a8:	4f 90       	pop	r4
    27aa:	08 95       	ret

000027ac <_GLOBAL__sub_I__ZN5GatesC2Ev>:
#include <stdarg.h>
#include <stdlib.h>
#include <avr/eeprom.h>
Gates::Gates(){setup_seed();}

Serial s;
    27ac:	81 e0       	ldi	r24, 0x01	; 1
    27ae:	91 e0       	ldi	r25, 0x01	; 1
    27b0:	0e 94 8d 1c 	call	0x391a	; 0x391a <_ZN6SerialC1Ev>
    27b4:	08 95       	ret

000027b6 <_ZN4QEPUC1Ev>:
#include "qepu.h"
QEPU::QEPU(){serial.writestr("INITIALIZING . . . ");DDRA=0xFF;program_counter=0;}
    27b6:	0f 93       	push	r16
    27b8:	1f 93       	push	r17
    27ba:	cf 93       	push	r28
    27bc:	df 93       	push	r29
    27be:	ec 01       	movw	r28, r24
    27c0:	0e 94 10 02 	call	0x420	; 0x420 <_ZN6EEPromC1Ev>
    27c4:	8e 01       	movw	r16, r28
    27c6:	0f 5f       	subi	r16, 0xFF	; 255
    27c8:	1f 4f       	sbci	r17, 0xFF	; 255
    27ca:	c8 01       	movw	r24, r16
    27cc:	0e 94 8d 1c 	call	0x391a	; 0x391a <_ZN6SerialC1Ev>
    27d0:	ce 01       	movw	r24, r28
    27d2:	05 96       	adiw	r24, 0x05	; 5
    27d4:	0e 94 26 03 	call	0x64c	; 0x64c <_ZN5GatesC1Ev>
    27d8:	66 e8       	ldi	r22, 0x86	; 134
    27da:	70 e0       	ldi	r23, 0x00	; 0
    27dc:	c8 01       	movw	r24, r16
    27de:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
    27e2:	8f ef       	ldi	r24, 0xFF	; 255
    27e4:	8a bb       	out	0x1a, r24	; 26
    27e6:	1c 82       	std	Y+4, r1	; 0x04
    27e8:	1b 82       	std	Y+3, r1	; 0x03
    27ea:	df 91       	pop	r29
    27ec:	cf 91       	pop	r28
    27ee:	1f 91       	pop	r17
    27f0:	0f 91       	pop	r16
    27f2:	08 95       	ret

000027f4 <_ZN4QEPU10setctrlpinEii>:
void QEPU::setdatapin(int pin,int state){
	PORTB&=~(1<<pin); // CLEAR PIN
	PORTB|=(state<<pin); // SET PIN
}
void QEPU::setctrlpin(int pin,int state){
	PORTA&=~(1<<pin); // CLEAR PIN
    27f4:	7b b3       	in	r23, 0x1b	; 27
    27f6:	21 e0       	ldi	r18, 0x01	; 1
    27f8:	30 e0       	ldi	r19, 0x00	; 0
    27fa:	c9 01       	movw	r24, r18
    27fc:	06 2e       	mov	r0, r22
    27fe:	02 c0       	rjmp	.+4      	; 0x2804 <_ZN4QEPU10setctrlpinEii+0x10>
    2800:	88 0f       	add	r24, r24
    2802:	99 1f       	adc	r25, r25
    2804:	0a 94       	dec	r0
    2806:	e2 f7       	brpl	.-8      	; 0x2800 <_ZN4QEPU10setctrlpinEii+0xc>
    2808:	80 95       	com	r24
    280a:	87 23       	and	r24, r23
    280c:	8b bb       	out	0x1b, r24	; 27
	PORTA|=(state<<pin); // SET PIN
    280e:	8b b3       	in	r24, 0x1b	; 27
    2810:	02 c0       	rjmp	.+4      	; 0x2816 <_ZN4QEPU10setctrlpinEii+0x22>
    2812:	44 0f       	add	r20, r20
    2814:	55 1f       	adc	r21, r21
    2816:	6a 95       	dec	r22
    2818:	e2 f7       	brpl	.-8      	; 0x2812 <_ZN4QEPU10setctrlpinEii+0x1e>
    281a:	48 2b       	or	r20, r24
    281c:	4b bb       	out	0x1b, r20	; 27
    281e:	08 95       	ret

00002820 <_ZN4QEPU5writeEiii>:
#include "qepu.h"
QEPU::QEPU(){serial.writestr("INITIALIZING . . . ");DDRA=0xFF;program_counter=0;}
void QEPU::write(int index,int dim,int deg){
    2820:	cf 93       	push	r28
    2822:	df 93       	push	r29
    2824:	ec 01       	movw	r28, r24
	DDRB=0xFF;
    2826:	8f ef       	ldi	r24, 0xFF	; 255
    2828:	87 bb       	out	0x17, r24	; 23
	setctrl(0); // CLOSE ALL CONTROLS
	DDRB=0xFF;
	return deg_read;
}
void QEPU::setdata(int bin){
	PORTB=bin;
    282a:	28 bb       	out	0x18, r18	; 24
}
void QEPU::setctrl(int bin){
	PORTA=bin;
    282c:	6b bb       	out	0x1b, r22	; 27
void QEPU::write(int index,int dim,int deg){
	DDRB=0xFF;
	
	setdata(deg);
	setctrl(index);
	setctrlpin(4,dim);
    282e:	64 e0       	ldi	r22, 0x04	; 4
    2830:	70 e0       	ldi	r23, 0x00	; 0
    2832:	ce 01       	movw	r24, r28
    2834:	0e 94 fa 13 	call	0x27f4	; 0x27f4 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(6,1); // CLOCK UP LOAD
    2838:	41 e0       	ldi	r20, 0x01	; 1
    283a:	50 e0       	ldi	r21, 0x00	; 0
    283c:	66 e0       	ldi	r22, 0x06	; 6
    283e:	70 e0       	ldi	r23, 0x00	; 0
    2840:	ce 01       	movw	r24, r28
    2842:	0e 94 fa 13 	call	0x27f4	; 0x27f4 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(6,0); // CLOCK DOWN LOAD
    2846:	40 e0       	ldi	r20, 0x00	; 0
    2848:	50 e0       	ldi	r21, 0x00	; 0
    284a:	66 e0       	ldi	r22, 0x06	; 6
    284c:	70 e0       	ldi	r23, 0x00	; 0
    284e:	ce 01       	movw	r24, r28
    2850:	0e 94 fa 13 	call	0x27f4	; 0x27f4 <_ZN4QEPU10setctrlpinEii>
	setctrl(0); // CLOSE ALL CONTROLS
	DDRB=0xFF;
	return deg_read;
}
void QEPU::setdata(int bin){
	PORTB=bin;
    2854:	18 ba       	out	0x18, r1	; 24
	setctrl(index);
	setctrlpin(4,dim);
	setctrlpin(6,1); // CLOCK UP LOAD
	setctrlpin(6,0); // CLOCK DOWN LOAD
	setdata(0);
}
    2856:	df 91       	pop	r29
    2858:	cf 91       	pop	r28
    285a:	08 95       	ret

0000285c <_ZN4QEPU4readEii>:
int QEPU::read(int index,int dim){
    285c:	0f 93       	push	r16
    285e:	1f 93       	push	r17
    2860:	cf 93       	push	r28
    2862:	df 93       	push	r29
    2864:	ec 01       	movw	r28, r24
    2866:	8a 01       	movw	r16, r20
	DDRB=0x00;
    2868:	17 ba       	out	0x17, r1	; 23
}
void QEPU::setdata(int bin){
	PORTB=bin;
}
void QEPU::setctrl(int bin){
	PORTA=bin;
    286a:	6b bb       	out	0x1b, r22	; 27
}
int QEPU::read(int index,int dim){
	DDRB=0x00;
	setctrl(index);
	//OPEN ALL AND GATES
	setctrlpin(5,1); // CLOCK UP READ
    286c:	41 e0       	ldi	r20, 0x01	; 1
    286e:	50 e0       	ldi	r21, 0x00	; 0
    2870:	65 e0       	ldi	r22, 0x05	; 5
    2872:	70 e0       	ldi	r23, 0x00	; 0
    2874:	0e 94 fa 13 	call	0x27f4	; 0x27f4 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(4,dim);
    2878:	a8 01       	movw	r20, r16
    287a:	64 e0       	ldi	r22, 0x04	; 4
    287c:	70 e0       	ldi	r23, 0x00	; 0
    287e:	ce 01       	movw	r24, r28
    2880:	0e 94 fa 13 	call	0x27f4	; 0x27f4 <_ZN4QEPU10setctrlpinEii>
	int deg_read=PINB; // READ INPUT
    2884:	86 b3       	in	r24, 0x16	; 22
}
void QEPU::setdata(int bin){
	PORTB=bin;
}
void QEPU::setctrl(int bin){
	PORTA=bin;
    2886:	1b ba       	out	0x1b, r1	; 27
	setctrlpin(5,1); // CLOCK UP READ
	setctrlpin(4,dim);
	int deg_read=PINB; // READ INPUT
	//CLOSE ALL AND GATES
	setctrl(0); // CLOSE ALL CONTROLS
	DDRB=0xFF;
    2888:	9f ef       	ldi	r25, 0xFF	; 255
    288a:	97 bb       	out	0x17, r25	; 23
	return deg_read;
}
    288c:	90 e0       	ldi	r25, 0x00	; 0
    288e:	df 91       	pop	r29
    2890:	cf 91       	pop	r28
    2892:	1f 91       	pop	r17
    2894:	0f 91       	pop	r16
    2896:	08 95       	ret

00002898 <_ZN4QEPU7dumpmemEv>:
}
void QEPU::setctrlpin(int pin,int state){
	PORTA&=~(1<<pin); // CLEAR PIN
	PORTA|=(state<<pin); // SET PIN
}
void QEPU::dumpmem(){
    2898:	6f 92       	push	r6
    289a:	7f 92       	push	r7
    289c:	8f 92       	push	r8
    289e:	9f 92       	push	r9
    28a0:	af 92       	push	r10
    28a2:	bf 92       	push	r11
    28a4:	cf 92       	push	r12
    28a6:	df 92       	push	r13
    28a8:	ef 92       	push	r14
    28aa:	ff 92       	push	r15
    28ac:	0f 93       	push	r16
    28ae:	1f 93       	push	r17
    28b0:	cf 93       	push	r28
    28b2:	df 93       	push	r29
    28b4:	6c 01       	movw	r12, r24
	serial.writestrln("");
    28b6:	8c 01       	movw	r16, r24
    28b8:	0f 5f       	subi	r16, 0xFF	; 255
    28ba:	1f 4f       	sbci	r17, 0xFF	; 255
    28bc:	63 ec       	ldi	r22, 0xC3	; 195
    28be:	70 e0       	ldi	r23, 0x00	; 0
    28c0:	c8 01       	movw	r24, r16
    28c2:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN6Serial10writestrlnEPc>
	serial.writestrln("** QUANTUM MEMORY DUMP **");
    28c6:	6a e9       	ldi	r22, 0x9A	; 154
    28c8:	70 e0       	ldi	r23, 0x00	; 0
    28ca:	c8 01       	movw	r24, r16
    28cc:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN6Serial10writestrlnEPc>
	for(int i=0;i<QUBIT_COUNT;i++){
    28d0:	c0 e0       	ldi	r28, 0x00	; 0
    28d2:	d0 e0       	ldi	r29, 0x00	; 0
		char * thedim=(char*)malloc(sizeof(char)*3); sprintf(thedim,"%d",read(i,THE));
    28d4:	0f 2e       	mov	r0, r31
    28d6:	f4 eb       	ldi	r31, 0xB4	; 180
    28d8:	ef 2e       	mov	r14, r31
    28da:	f0 e0       	ldi	r31, 0x00	; 0
    28dc:	ff 2e       	mov	r15, r31
    28de:	f0 2d       	mov	r31, r0
    28e0:	83 e0       	ldi	r24, 0x03	; 3
    28e2:	90 e0       	ldi	r25, 0x00	; 0
    28e4:	0e 94 0c 21 	call	0x4218	; 0x4218 <malloc>
    28e8:	88 2e       	mov	r8, r24
    28ea:	99 2e       	mov	r9, r25
    28ec:	40 e0       	ldi	r20, 0x00	; 0
    28ee:	50 e0       	ldi	r21, 0x00	; 0
    28f0:	be 01       	movw	r22, r28
    28f2:	c6 01       	movw	r24, r12
    28f4:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    28f8:	9f 93       	push	r25
    28fa:	8f 93       	push	r24
    28fc:	ff 92       	push	r15
    28fe:	ef 92       	push	r14
    2900:	9f 92       	push	r9
    2902:	8f 92       	push	r8
    2904:	0e 94 cd 23 	call	0x479a	; 0x479a <sprintf>
		char * phidim=(char*)malloc(sizeof(char)*3); sprintf(phidim,"%d",read(i,PHI));
    2908:	83 e0       	ldi	r24, 0x03	; 3
    290a:	90 e0       	ldi	r25, 0x00	; 0
    290c:	0e 94 0c 21 	call	0x4218	; 0x4218 <malloc>
    2910:	a8 2e       	mov	r10, r24
    2912:	b9 2e       	mov	r11, r25
    2914:	41 e0       	ldi	r20, 0x01	; 1
    2916:	50 e0       	ldi	r21, 0x00	; 0
    2918:	be 01       	movw	r22, r28
    291a:	c6 01       	movw	r24, r12
    291c:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2920:	9f 93       	push	r25
    2922:	8f 93       	push	r24
    2924:	ff 92       	push	r15
    2926:	ef 92       	push	r14
    2928:	bf 92       	push	r11
    292a:	af 92       	push	r10
    292c:	0e 94 cd 23 	call	0x479a	; 0x479a <sprintf>
		char * qindex=(char*)malloc(sizeof(char));	 sprintf(qindex,"%d",i);
    2930:	81 e0       	ldi	r24, 0x01	; 1
    2932:	90 e0       	ldi	r25, 0x00	; 0
    2934:	0e 94 0c 21 	call	0x4218	; 0x4218 <malloc>
    2938:	68 2e       	mov	r6, r24
    293a:	79 2e       	mov	r7, r25
    293c:	df 93       	push	r29
    293e:	cf 93       	push	r28
    2940:	ff 92       	push	r15
    2942:	ef 92       	push	r14
    2944:	7f 92       	push	r7
    2946:	6f 92       	push	r6
    2948:	0e 94 cd 23 	call	0x479a	; 0x479a <sprintf>
		serial.writestr("Q"); serial.writestr(qindex); serial.writestr(": Theta - ");
    294c:	67 eb       	ldi	r22, 0xB7	; 183
    294e:	70 e0       	ldi	r23, 0x00	; 0
    2950:	c8 01       	movw	r24, r16
    2952:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
    2956:	66 2d       	mov	r22, r6
    2958:	77 2d       	mov	r23, r7
    295a:	c8 01       	movw	r24, r16
    295c:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
    2960:	69 eb       	ldi	r22, 0xB9	; 185
    2962:	70 e0       	ldi	r23, 0x00	; 0
    2964:	c8 01       	movw	r24, r16
    2966:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
		serial.writestr(thedim);
    296a:	68 2d       	mov	r22, r8
    296c:	79 2d       	mov	r23, r9
    296e:	c8 01       	movw	r24, r16
    2970:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
		serial.writestr(" , Phi - ");
    2974:	64 ec       	ldi	r22, 0xC4	; 196
    2976:	70 e0       	ldi	r23, 0x00	; 0
    2978:	c8 01       	movw	r24, r16
    297a:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
		serial.writestrln(phidim);
    297e:	6a 2d       	mov	r22, r10
    2980:	7b 2d       	mov	r23, r11
    2982:	c8 01       	movw	r24, r16
    2984:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN6Serial10writestrlnEPc>
	PORTA|=(state<<pin); // SET PIN
}
void QEPU::dumpmem(){
	serial.writestrln("");
	serial.writestrln("** QUANTUM MEMORY DUMP **");
	for(int i=0;i<QUBIT_COUNT;i++){
    2988:	21 96       	adiw	r28, 0x01	; 1
    298a:	8d b7       	in	r24, 0x3d	; 61
    298c:	9e b7       	in	r25, 0x3e	; 62
    298e:	42 96       	adiw	r24, 0x12	; 18
    2990:	0f b6       	in	r0, 0x3f	; 63
    2992:	f8 94       	cli
    2994:	9e bf       	out	0x3e, r25	; 62
    2996:	0f be       	out	0x3f, r0	; 63
    2998:	8d bf       	out	0x3d, r24	; 61
    299a:	c4 30       	cpi	r28, 0x04	; 4
    299c:	d1 05       	cpc	r29, r1
    299e:	09 f0       	breq	.+2      	; 0x29a2 <_ZN4QEPU7dumpmemEv+0x10a>
    29a0:	9f cf       	rjmp	.-194    	; 0x28e0 <_ZN4QEPU7dumpmemEv+0x48>
		serial.writestr("Q"); serial.writestr(qindex); serial.writestr(": Theta - ");
		serial.writestr(thedim);
		serial.writestr(" , Phi - ");
		serial.writestrln(phidim);
	}
}
    29a2:	df 91       	pop	r29
    29a4:	cf 91       	pop	r28
    29a6:	1f 91       	pop	r17
    29a8:	0f 91       	pop	r16
    29aa:	ff 90       	pop	r15
    29ac:	ef 90       	pop	r14
    29ae:	df 90       	pop	r13
    29b0:	cf 90       	pop	r12
    29b2:	bf 90       	pop	r11
    29b4:	af 90       	pop	r10
    29b6:	9f 90       	pop	r9
    29b8:	8f 90       	pop	r8
    29ba:	7f 90       	pop	r7
    29bc:	6f 90       	pop	r6
    29be:	08 95       	ret

000029c0 <_ZN4QEPU5Utils10int2binstrEii>:

char * QEPU::Utils::int2binstr(int num,int strlength){
    29c0:	0f 93       	push	r16
    29c2:	1f 93       	push	r17
    29c4:	cf 93       	push	r28
    29c6:	df 93       	push	r29
    29c8:	06 2f       	mov	r16, r22
    29ca:	17 2f       	mov	r17, r23
    29cc:	ea 01       	movw	r28, r20
    char * str = (char*)malloc(strlength + 1);
    29ce:	ca 01       	movw	r24, r20
    29d0:	01 96       	adiw	r24, 0x01	; 1
    29d2:	0e 94 0c 21 	call	0x4218	; 0x4218 <malloc>
    if(!str) return NULL;
    29d6:	00 97       	sbiw	r24, 0x00	; 0
    29d8:	b9 f0       	breq	.+46     	; 0x2a08 <_ZN4QEPU5Utils10int2binstrEii+0x48>
    str[strlength] = 0;
    29da:	fc 01       	movw	r30, r24
    29dc:	ec 0f       	add	r30, r28
    29de:	fd 1f       	adc	r31, r29
    29e0:	10 82       	st	Z, r1

    // type punning because signed shift is implementation-defined
    unsigned u = *(unsigned *)&num;
    29e2:	20 2f       	mov	r18, r16
    29e4:	31 2f       	mov	r19, r17
    for(; strlength--; u >>= 1)
    29e6:	be 01       	movw	r22, r28
    29e8:	61 50       	subi	r22, 0x01	; 1
    29ea:	71 09       	sbc	r23, r1
    29ec:	cd 2b       	or	r28, r29
    29ee:	71 f0       	breq	.+28     	; 0x2a0c <_ZN4QEPU5Utils10int2binstrEii+0x4c>
    str[strlength] = u & 1 ? '1' : '0';
    29f0:	20 ff       	sbrs	r18, 0
    29f2:	02 c0       	rjmp	.+4      	; 0x29f8 <_ZN4QEPU5Utils10int2binstrEii+0x38>
    29f4:	41 e3       	ldi	r20, 0x31	; 49
    29f6:	01 c0       	rjmp	.+2      	; 0x29fa <_ZN4QEPU5Utils10int2binstrEii+0x3a>
    29f8:	40 e3       	ldi	r20, 0x30	; 48
    29fa:	42 93       	st	-Z, r20
    if(!str) return NULL;
    str[strlength] = 0;

    // type punning because signed shift is implementation-defined
    unsigned u = *(unsigned *)&num;
    for(; strlength--; u >>= 1)
    29fc:	36 95       	lsr	r19
    29fe:	27 95       	ror	r18
    2a00:	61 50       	subi	r22, 0x01	; 1
    2a02:	71 09       	sbc	r23, r1
    2a04:	a8 f7       	brcc	.-22     	; 0x29f0 <_ZN4QEPU5Utils10int2binstrEii+0x30>
    2a06:	02 c0       	rjmp	.+4      	; 0x2a0c <_ZN4QEPU5Utils10int2binstrEii+0x4c>
	}
}

char * QEPU::Utils::int2binstr(int num,int strlength){
    char * str = (char*)malloc(strlength + 1);
    if(!str) return NULL;
    2a08:	80 e0       	ldi	r24, 0x00	; 0
    2a0a:	90 e0       	ldi	r25, 0x00	; 0
    unsigned u = *(unsigned *)&num;
    for(; strlength--; u >>= 1)
    str[strlength] = u & 1 ? '1' : '0';

    return str;
}
    2a0c:	df 91       	pop	r29
    2a0e:	cf 91       	pop	r28
    2a10:	1f 91       	pop	r17
    2a12:	0f 91       	pop	r16
    2a14:	08 95       	ret

00002a16 <_ZN4QEPU5Utils10str2intarrEPc>:
char* QEPU::Utils::char2str(char c){
	char*str=(char*)malloc(sizeof(char));
	sprintf(str,"%d",c);
	return str;
}
int*  QEPU::Utils::str2intarr(char* c){
    2a16:	cf 92       	push	r12
    2a18:	df 92       	push	r13
    2a1a:	ef 92       	push	r14
    2a1c:	ff 92       	push	r15
    2a1e:	0f 93       	push	r16
    2a20:	1f 93       	push	r17
    2a22:	cf 93       	push	r28
    2a24:	df 93       	push	r29
    2a26:	d6 2f       	mov	r29, r22
    2a28:	c7 2f       	mov	r28, r23
    2a2a:	e6 2f       	mov	r30, r22
    2a2c:	f7 2f       	mov	r31, r23
	int c_length=0;
    2a2e:	80 e0       	ldi	r24, 0x00	; 0
    2a30:	90 e0       	ldi	r25, 0x00	; 0
	for(int i=0;true;i++) if(c[i]==0xFF && c[i-1]==0xFF && c[i-2]==0xFF && c[i-3]==0xFF && c[i-4]==0xFF) break; else c_length++; c_length-=4;
    2a32:	21 91       	ld	r18, Z+
    2a34:	2f 3f       	cpi	r18, 0xFF	; 255
    2a36:	89 f4       	brne	.+34     	; 0x2a5a <_ZN4QEPU5Utils10str2intarrEPc+0x44>
    2a38:	df 01       	movw	r26, r30
    2a3a:	12 97       	sbiw	r26, 0x02	; 2
    2a3c:	4c 91       	ld	r20, X
    2a3e:	4f 3f       	cpi	r20, 0xFF	; 255
    2a40:	61 f4       	brne	.+24     	; 0x2a5a <_ZN4QEPU5Utils10str2intarrEPc+0x44>
    2a42:	11 97       	sbiw	r26, 0x01	; 1
    2a44:	4c 91       	ld	r20, X
    2a46:	4f 3f       	cpi	r20, 0xFF	; 255
    2a48:	41 f4       	brne	.+16     	; 0x2a5a <_ZN4QEPU5Utils10str2intarrEPc+0x44>
    2a4a:	11 97       	sbiw	r26, 0x01	; 1
    2a4c:	4c 91       	ld	r20, X
    2a4e:	4f 3f       	cpi	r20, 0xFF	; 255
    2a50:	21 f4       	brne	.+8      	; 0x2a5a <_ZN4QEPU5Utils10str2intarrEPc+0x44>
    2a52:	11 97       	sbiw	r26, 0x01	; 1
    2a54:	2c 91       	ld	r18, X
    2a56:	2f 3f       	cpi	r18, 0xFF	; 255
    2a58:	11 f0       	breq	.+4      	; 0x2a5e <_ZN4QEPU5Utils10str2intarrEPc+0x48>
    2a5a:	01 96       	adiw	r24, 0x01	; 1
    2a5c:	ea cf       	rjmp	.-44     	; 0x2a32 <_ZN4QEPU5Utils10str2intarrEPc+0x1c>
    2a5e:	8c 01       	movw	r16, r24
    2a60:	04 50       	subi	r16, 0x04	; 4
    2a62:	11 09       	sbc	r17, r1
	
	int *intarr=(int*)malloc(sizeof(int)*(c_length+5));
    2a64:	6c 01       	movw	r12, r24
    2a66:	2f ef       	ldi	r18, 0xFF	; 255
    2a68:	c2 1a       	sub	r12, r18
    2a6a:	d2 0a       	sbc	r13, r18
    2a6c:	76 01       	movw	r14, r12
    2a6e:	ee 0c       	add	r14, r14
    2a70:	ff 1c       	adc	r15, r15
    2a72:	c7 01       	movw	r24, r14
    2a74:	0e 94 0c 21 	call	0x4218	; 0x4218 <malloc>
	for(int i=0;i<c_length;i++) intarr[i]=(int)c[i];
    2a78:	10 16       	cp	r1, r16
    2a7a:	11 06       	cpc	r1, r17
    2a7c:	74 f4       	brge	.+28     	; 0x2a9a <_ZN4QEPU5Utils10str2intarrEPc+0x84>
    2a7e:	dc 01       	movw	r26, r24
    2a80:	ed 2f       	mov	r30, r29
    2a82:	fc 2f       	mov	r31, r28
    2a84:	20 e0       	ldi	r18, 0x00	; 0
    2a86:	30 e0       	ldi	r19, 0x00	; 0
    2a88:	41 91       	ld	r20, Z+
    2a8a:	50 e0       	ldi	r21, 0x00	; 0
    2a8c:	4d 93       	st	X+, r20
    2a8e:	5d 93       	st	X+, r21
    2a90:	2f 5f       	subi	r18, 0xFF	; 255
    2a92:	3f 4f       	sbci	r19, 0xFF	; 255
    2a94:	20 17       	cp	r18, r16
    2a96:	31 07       	cpc	r19, r17
    2a98:	bc f3       	brlt	.-18     	; 0x2a88 <_ZN4QEPU5Utils10str2intarrEPc+0x72>
	for(int i=c_length;i<c_length+5;i++) intarr[i]=0xFF;
    2a9a:	0c 15       	cp	r16, r12
    2a9c:	1d 05       	cpc	r17, r13
    2a9e:	7c f4       	brge	.+30     	; 0x2abe <_ZN4QEPU5Utils10str2intarrEPc+0xa8>
    2aa0:	f7 01       	movw	r30, r14
    2aa2:	3a 97       	sbiw	r30, 0x0a	; 10
    2aa4:	e8 0f       	add	r30, r24
    2aa6:	f9 1f       	adc	r31, r25
    2aa8:	25 e0       	ldi	r18, 0x05	; 5
    2aaa:	30 e0       	ldi	r19, 0x00	; 0
    2aac:	4f ef       	ldi	r20, 0xFF	; 255
    2aae:	50 e0       	ldi	r21, 0x00	; 0
    2ab0:	41 93       	st	Z+, r20
    2ab2:	51 93       	st	Z+, r21
    2ab4:	21 50       	subi	r18, 0x01	; 1
    2ab6:	31 09       	sbc	r19, r1
    2ab8:	21 15       	cp	r18, r1
    2aba:	31 05       	cpc	r19, r1
    2abc:	c9 f7       	brne	.-14     	; 0x2ab0 <_ZN4QEPU5Utils10str2intarrEPc+0x9a>
	return intarr;
}
    2abe:	df 91       	pop	r29
    2ac0:	cf 91       	pop	r28
    2ac2:	1f 91       	pop	r17
    2ac4:	0f 91       	pop	r16
    2ac6:	ff 90       	pop	r15
    2ac8:	ef 90       	pop	r14
    2aca:	df 90       	pop	r13
    2acc:	cf 90       	pop	r12
    2ace:	08 95       	ret

00002ad0 <_ZN4QEPU5Utils7int2strEi>:
		dec/=10;
		++counter;
	}
	return counter;
}
char* QEPU::Utils::int2str(int dec){
    2ad0:	0f 93       	push	r16
    2ad2:	1f 93       	push	r17
    2ad4:	cf 93       	push	r28
    2ad6:	df 93       	push	r29
    2ad8:	cd b7       	in	r28, 0x3d	; 61
    2ada:	de b7       	in	r29, 0x3e	; 62
    2adc:	c4 56       	subi	r28, 0x64	; 100
    2ade:	d1 09       	sbc	r29, r1
    2ae0:	0f b6       	in	r0, 0x3f	; 63
    2ae2:	f8 94       	cli
    2ae4:	de bf       	out	0x3e, r29	; 62
    2ae6:	0f be       	out	0x3f, r0	; 63
    2ae8:	cd bf       	out	0x3d, r28	; 61
	char str[100];
	sprintf(str,"%d",dec);
    2aea:	7f 93       	push	r23
    2aec:	6f 93       	push	r22
    2aee:	84 eb       	ldi	r24, 0xB4	; 180
    2af0:	90 e0       	ldi	r25, 0x00	; 0
    2af2:	9f 93       	push	r25
    2af4:	8f 93       	push	r24
    2af6:	8e 01       	movw	r16, r28
    2af8:	0f 5f       	subi	r16, 0xFF	; 255
    2afa:	1f 4f       	sbci	r17, 0xFF	; 255
    2afc:	1f 93       	push	r17
    2afe:	0f 93       	push	r16
    2b00:	0e 94 cd 23 	call	0x479a	; 0x479a <sprintf>
	return str;
    2b04:	0f 90       	pop	r0
    2b06:	0f 90       	pop	r0
    2b08:	0f 90       	pop	r0
    2b0a:	0f 90       	pop	r0
    2b0c:	0f 90       	pop	r0
    2b0e:	0f 90       	pop	r0
}
    2b10:	c8 01       	movw	r24, r16
    2b12:	cc 59       	subi	r28, 0x9C	; 156
    2b14:	df 4f       	sbci	r29, 0xFF	; 255
    2b16:	0f b6       	in	r0, 0x3f	; 63
    2b18:	f8 94       	cli
    2b1a:	de bf       	out	0x3e, r29	; 62
    2b1c:	0f be       	out	0x3f, r0	; 63
    2b1e:	cd bf       	out	0x3d, r28	; 61
    2b20:	df 91       	pop	r29
    2b22:	cf 91       	pop	r28
    2b24:	1f 91       	pop	r17
    2b26:	0f 91       	pop	r16
    2b28:	08 95       	ret

00002b2a <_ZN4QEPU5Utils5delayEi>:
	sprintf(str2,"%d",n2);
	strcat(str1,str2);
	return atoi(str1);
}
int QEPU::Utils::delay(int ms){
	while(ms--) _delay_ms(1);
    2b2a:	61 15       	cp	r22, r1
    2b2c:	71 05       	cpc	r23, r1
    2b2e:	51 f0       	breq	.+20     	; 0x2b44 <_ZN4QEPU5Utils5delayEi+0x1a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2b30:	86 e6       	ldi	r24, 0x66	; 102
    2b32:	9e e0       	ldi	r25, 0x0E	; 14
    2b34:	01 97       	sbiw	r24, 0x01	; 1
    2b36:	f1 f7       	brne	.-4      	; 0x2b34 <_ZN4QEPU5Utils5delayEi+0xa>
    2b38:	00 00       	nop
    2b3a:	61 50       	subi	r22, 0x01	; 1
    2b3c:	71 09       	sbc	r23, r1
    2b3e:	61 15       	cp	r22, r1
    2b40:	71 05       	cpc	r23, r1
    2b42:	b1 f7       	brne	.-20     	; 0x2b30 <_ZN4QEPU5Utils5delayEi+0x6>
}
    2b44:	08 95       	ret

00002b46 <_ZN4QEPU7executeEilll>:
	}
	dumpmem();
	#pragma endregion
}

void QEPU::execute(int func,int32_t op1,int32_t op2,int32_t op3){
    2b46:	2f 92       	push	r2
    2b48:	3f 92       	push	r3
    2b4a:	4f 92       	push	r4
    2b4c:	5f 92       	push	r5
    2b4e:	6f 92       	push	r6
    2b50:	7f 92       	push	r7
    2b52:	8f 92       	push	r8
    2b54:	9f 92       	push	r9
    2b56:	af 92       	push	r10
    2b58:	bf 92       	push	r11
    2b5a:	cf 92       	push	r12
    2b5c:	df 92       	push	r13
    2b5e:	ef 92       	push	r14
    2b60:	ff 92       	push	r15
    2b62:	0f 93       	push	r16
    2b64:	1f 93       	push	r17
    2b66:	cf 93       	push	r28
    2b68:	df 93       	push	r29
    2b6a:	cd b7       	in	r28, 0x3d	; 61
    2b6c:	de b7       	in	r29, 0x3e	; 62
    2b6e:	c2 59       	subi	r28, 0x92	; 146
    2b70:	d1 40       	sbci	r29, 0x01	; 1
    2b72:	0f b6       	in	r0, 0x3f	; 63
    2b74:	f8 94       	cli
    2b76:	de bf       	out	0x3e, r29	; 62
    2b78:	0f be       	out	0x3f, r0	; 63
    2b7a:	cd bf       	out	0x3d, r28	; 61
    2b7c:	6c 01       	movw	r12, r24
    2b7e:	1b 01       	movw	r2, r22
    2b80:	29 01       	movw	r4, r18
    2b82:	3a 01       	movw	r6, r20
    2b84:	cf 56       	subi	r28, 0x6F	; 111
    2b86:	de 4f       	sbci	r29, 0xFE	; 254
    2b88:	a8 82       	st	Y, r10
    2b8a:	c1 59       	subi	r28, 0x91	; 145
    2b8c:	d1 40       	sbci	r29, 0x01	; 1
    2b8e:	ce 56       	subi	r28, 0x6E	; 110
    2b90:	de 4f       	sbci	r29, 0xFE	; 254
    2b92:	b8 82       	st	Y, r11
    2b94:	c2 59       	subi	r28, 0x92	; 146
    2b96:	d1 40       	sbci	r29, 0x01	; 1
	serial.writestr("Function: "); serial.writestr(utils.int2str(func)); serial.writestr(", OP1: ");
    2b98:	5c 01       	movw	r10, r24
    2b9a:	8f ef       	ldi	r24, 0xFF	; 255
    2b9c:	a8 1a       	sub	r10, r24
    2b9e:	b8 0a       	sbc	r11, r24
    2ba0:	6e ec       	ldi	r22, 0xCE	; 206
    2ba2:	70 e0       	ldi	r23, 0x00	; 0
    2ba4:	c5 01       	movw	r24, r10
    2ba6:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
	}
	return counter;
}
char* QEPU::Utils::int2str(int dec){
	char str[100];
	sprintf(str,"%d",dec);
    2baa:	3f 92       	push	r3
    2bac:	2f 92       	push	r2
    2bae:	0f 2e       	mov	r0, r31
    2bb0:	f4 eb       	ldi	r31, 0xB4	; 180
    2bb2:	8f 2e       	mov	r8, r31
    2bb4:	f0 e0       	ldi	r31, 0x00	; 0
    2bb6:	9f 2e       	mov	r9, r31
    2bb8:	f0 2d       	mov	r31, r0
    2bba:	9f 92       	push	r9
    2bbc:	8f 92       	push	r8
    2bbe:	8e 01       	movw	r16, r28
    2bc0:	03 5d       	subi	r16, 0xD3	; 211
    2bc2:	1e 4f       	sbci	r17, 0xFE	; 254
    2bc4:	1f 93       	push	r17
    2bc6:	0f 93       	push	r16
    2bc8:	0e 94 cd 23 	call	0x479a	; 0x479a <sprintf>
	dumpmem();
	#pragma endregion
}

void QEPU::execute(int func,int32_t op1,int32_t op2,int32_t op3){
	serial.writestr("Function: "); serial.writestr(utils.int2str(func)); serial.writestr(", OP1: ");
    2bcc:	b8 01       	movw	r22, r16
    2bce:	c5 01       	movw	r24, r10
    2bd0:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
    2bd4:	69 ed       	ldi	r22, 0xD9	; 217
    2bd6:	70 e0       	ldi	r23, 0x00	; 0
    2bd8:	c5 01       	movw	r24, r10
    2bda:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
	}
	return counter;
}
char* QEPU::Utils::int2str(int dec){
	char str[100];
	sprintf(str,"%d",dec);
    2bde:	5f 92       	push	r5
    2be0:	4f 92       	push	r4
    2be2:	9f 92       	push	r9
    2be4:	8f 92       	push	r8
    2be6:	04 56       	subi	r16, 0x64	; 100
    2be8:	11 09       	sbc	r17, r1
    2bea:	1f 93       	push	r17
    2bec:	0f 93       	push	r16
    2bee:	0e 94 cd 23 	call	0x479a	; 0x479a <sprintf>
	#pragma endregion
}

void QEPU::execute(int func,int32_t op1,int32_t op2,int32_t op3){
	serial.writestr("Function: "); serial.writestr(utils.int2str(func)); serial.writestr(", OP1: ");
	serial.writestr(utils.int2str(op1)); serial.writestr(", OP2: ");
    2bf2:	b8 01       	movw	r22, r16
    2bf4:	c5 01       	movw	r24, r10
    2bf6:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
    2bfa:	61 ee       	ldi	r22, 0xE1	; 225
    2bfc:	70 e0       	ldi	r23, 0x00	; 0
    2bfe:	c5 01       	movw	r24, r10
    2c00:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
	}
	return counter;
}
char* QEPU::Utils::int2str(int dec){
	char str[100];
	sprintf(str,"%d",dec);
    2c04:	ff 92       	push	r15
    2c06:	ef 92       	push	r14
    2c08:	9f 92       	push	r9
    2c0a:	8f 92       	push	r8
    2c0c:	04 56       	subi	r16, 0x64	; 100
    2c0e:	11 09       	sbc	r17, r1
    2c10:	1f 93       	push	r17
    2c12:	0f 93       	push	r16
    2c14:	0e 94 cd 23 	call	0x479a	; 0x479a <sprintf>
}

void QEPU::execute(int func,int32_t op1,int32_t op2,int32_t op3){
	serial.writestr("Function: "); serial.writestr(utils.int2str(func)); serial.writestr(", OP1: ");
	serial.writestr(utils.int2str(op1)); serial.writestr(", OP2: ");
	serial.writestr(utils.int2str(op2)); serial.writestr(", OP3: "); serial.writestrln(utils.int2str(op3));
    2c18:	b8 01       	movw	r22, r16
    2c1a:	c5 01       	movw	r24, r10
    2c1c:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
    2c20:	69 ee       	ldi	r22, 0xE9	; 233
    2c22:	70 e0       	ldi	r23, 0x00	; 0
    2c24:	c5 01       	movw	r24, r10
    2c26:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
	}
	return counter;
}
char* QEPU::Utils::int2str(int dec){
	char str[100];
	sprintf(str,"%d",dec);
    2c2a:	ce 56       	subi	r28, 0x6E	; 110
    2c2c:	de 4f       	sbci	r29, 0xFE	; 254
    2c2e:	98 81       	ld	r25, Y
    2c30:	c2 59       	subi	r28, 0x92	; 146
    2c32:	d1 40       	sbci	r29, 0x01	; 1
    2c34:	9f 93       	push	r25
    2c36:	cf 56       	subi	r28, 0x6F	; 111
    2c38:	de 4f       	sbci	r29, 0xFE	; 254
    2c3a:	e8 81       	ld	r30, Y
    2c3c:	c1 59       	subi	r28, 0x91	; 145
    2c3e:	d1 40       	sbci	r29, 0x01	; 1
    2c40:	ef 93       	push	r30
    2c42:	9f 92       	push	r9
    2c44:	8f 92       	push	r8
    2c46:	04 56       	subi	r16, 0x64	; 100
    2c48:	11 09       	sbc	r17, r1
    2c4a:	1f 93       	push	r17
    2c4c:	0f 93       	push	r16
    2c4e:	0e 94 cd 23 	call	0x479a	; 0x479a <sprintf>
}

void QEPU::execute(int func,int32_t op1,int32_t op2,int32_t op3){
	serial.writestr("Function: "); serial.writestr(utils.int2str(func)); serial.writestr(", OP1: ");
	serial.writestr(utils.int2str(op1)); serial.writestr(", OP2: ");
	serial.writestr(utils.int2str(op2)); serial.writestr(", OP3: "); serial.writestrln(utils.int2str(op3));
    2c52:	b8 01       	movw	r22, r16
    2c54:	c5 01       	movw	r24, r10
    2c56:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN6Serial10writestrlnEPc>
	
	int * newthephi=(int*)malloc(sizeof(int)*5);
    2c5a:	8a e0       	ldi	r24, 0x0A	; 10
    2c5c:	90 e0       	ldi	r25, 0x00	; 0
    2c5e:	0e 94 0c 21 	call	0x4218	; 0x4218 <malloc>
    2c62:	8c 01       	movw	r16, r24
	//TODO: MAKE A SWITCH ON THE FUNCTION
	switch(func){
    2c64:	0f b6       	in	r0, 0x3f	; 63
    2c66:	f8 94       	cli
    2c68:	de bf       	out	0x3e, r29	; 62
    2c6a:	0f be       	out	0x3f, r0	; 63
    2c6c:	cd bf       	out	0x3d, r28	; 61
    2c6e:	f1 01       	movw	r30, r2
    2c70:	31 97       	sbiw	r30, 0x01	; 1
    2c72:	e2 32       	cpi	r30, 0x22	; 34
    2c74:	f1 05       	cpc	r31, r1
    2c76:	08 f0       	brcs	.+2      	; 0x2c7a <_ZN4QEPU7executeEilll+0x134>
    2c78:	ff c3       	rjmp	.+2046   	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
    2c7a:	e6 5d       	subi	r30, 0xD6	; 214
    2c7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c7e:	0c 94 f2 20 	jmp	0x41e4	; 0x41e4 <__tablejump2__>
		//DATA MOVEMENT AND PROGRAM CONTROL/FLUX/IO FUNCTIONS:
		case 0x01: /*MOV*/
			write(op1,THE,read(op2,THE));
    2c82:	40 e0       	ldi	r20, 0x00	; 0
    2c84:	50 e0       	ldi	r21, 0x00	; 0
    2c86:	6e 2d       	mov	r22, r14
    2c88:	7f 2d       	mov	r23, r15
    2c8a:	c6 01       	movw	r24, r12
    2c8c:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2c90:	9c 01       	movw	r18, r24
    2c92:	40 e0       	ldi	r20, 0x00	; 0
    2c94:	50 e0       	ldi	r21, 0x00	; 0
    2c96:	64 2d       	mov	r22, r4
    2c98:	75 2d       	mov	r23, r5
    2c9a:	c6 01       	movw	r24, r12
    2c9c:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
			write(op1,PHI,read(op2,PHI));
    2ca0:	41 e0       	ldi	r20, 0x01	; 1
    2ca2:	50 e0       	ldi	r21, 0x00	; 0
    2ca4:	6e 2d       	mov	r22, r14
    2ca6:	7f 2d       	mov	r23, r15
    2ca8:	c6 01       	movw	r24, r12
    2caa:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2cae:	9c 01       	movw	r18, r24
    2cb0:	41 e0       	ldi	r20, 0x01	; 1
    2cb2:	50 e0       	ldi	r21, 0x00	; 0
    2cb4:	64 2d       	mov	r22, r4
    2cb6:	75 2d       	mov	r23, r5
    2cb8:	c6 01       	movw	r24, r12
    2cba:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    2cbe:	dc c3       	rjmp	.+1976   	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x02: /*JMP(jump)*/ 
			program_counter=op1-1; 
    2cc0:	91 e0       	ldi	r25, 0x01	; 1
    2cc2:	49 1a       	sub	r4, r25
    2cc4:	51 08       	sbc	r5, r1
    2cc6:	f6 01       	movw	r30, r12
    2cc8:	54 82       	std	Z+4, r5	; 0x04
    2cca:	43 82       	std	Z+3, r4	; 0x03
		break;
    2ccc:	d5 c3       	rjmp	.+1962   	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
    2cce:	ff cf       	rjmp	.-2      	; 0x2cce <_ZN4QEPU7executeEilll+0x188>
    2cd0:	ff cf       	rjmp	.-2      	; 0x2cd0 <_ZN4QEPU7executeEilll+0x18a>
		case 0x08: /*RET(return)*/ 
			//NEEDS ADDRESS FROM 'JUMP' SYSTEM
		break;
		case 0x09: /*END(end)*/ while(1); break;
		case 0x0A: /*DLY(delay)*/ 
			utils.delay(op1);	break;
    2cd2:	64 2d       	mov	r22, r4
    2cd4:	75 2d       	mov	r23, r5
    2cd6:	c6 01       	movw	r24, r12
    2cd8:	02 96       	adiw	r24, 0x02	; 2
    2cda:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <_ZN4QEPU5Utils5delayEi>
    2cde:	cc c3       	rjmp	.+1944   	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		break;
		case 0x0D: /*STR(store)*/ 
			//NEEDS MEMORY SYSTEM
		break;
		case 0x0E: /*CMT(constantmovtheta)*/ 
			write(op1,THE,op2);
    2ce0:	2e 2d       	mov	r18, r14
    2ce2:	3f 2d       	mov	r19, r15
    2ce4:	40 e0       	ldi	r20, 0x00	; 0
    2ce6:	50 e0       	ldi	r21, 0x00	; 0
    2ce8:	64 2d       	mov	r22, r4
    2cea:	75 2d       	mov	r23, r5
    2cec:	c6 01       	movw	r24, r12
    2cee:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    2cf2:	c2 c3       	rjmp	.+1924   	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x0F: /*CMP(constantmovphi)*/
			write(op1,PHI,op2);
    2cf4:	2e 2d       	mov	r18, r14
    2cf6:	3f 2d       	mov	r19, r15
    2cf8:	41 e0       	ldi	r20, 0x01	; 1
    2cfa:	50 e0       	ldi	r21, 0x00	; 0
    2cfc:	64 2d       	mov	r22, r4
    2cfe:	75 2d       	mov	r23, r5
    2d00:	c6 01       	movw	r24, r12
    2d02:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    2d06:	b8 c3       	rjmp	.+1904   	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		//QUANTUM FUNCTIONS:
		//1 QUBIT GATES -
		case 0x10: // X GATE
			newthephi=gates.X(read(op1,THE),read(op1,PHI));
    2d08:	41 e0       	ldi	r20, 0x01	; 1
    2d0a:	50 e0       	ldi	r21, 0x00	; 0
    2d0c:	64 2d       	mov	r22, r4
    2d0e:	75 2d       	mov	r23, r5
    2d10:	c6 01       	movw	r24, r12
    2d12:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2d16:	8c 01       	movw	r16, r24
    2d18:	40 e0       	ldi	r20, 0x00	; 0
    2d1a:	50 e0       	ldi	r21, 0x00	; 0
    2d1c:	64 2d       	mov	r22, r4
    2d1e:	75 2d       	mov	r23, r5
    2d20:	c6 01       	movw	r24, r12
    2d22:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2d26:	a8 01       	movw	r20, r16
    2d28:	bc 01       	movw	r22, r24
    2d2a:	c6 01       	movw	r24, r12
    2d2c:	05 96       	adiw	r24, 0x05	; 5
    2d2e:	0e 94 74 08 	call	0x10e8	; 0x10e8 <_ZN5Gates1XEii>
    2d32:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    2d34:	fc 01       	movw	r30, r24
    2d36:	20 81       	ld	r18, Z
    2d38:	31 81       	ldd	r19, Z+1	; 0x01
    2d3a:	40 e0       	ldi	r20, 0x00	; 0
    2d3c:	50 e0       	ldi	r21, 0x00	; 0
    2d3e:	64 2d       	mov	r22, r4
    2d40:	75 2d       	mov	r23, r5
    2d42:	c6 01       	movw	r24, r12
    2d44:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    2d48:	f8 01       	movw	r30, r16
    2d4a:	22 81       	ldd	r18, Z+2	; 0x02
    2d4c:	33 81       	ldd	r19, Z+3	; 0x03
    2d4e:	41 e0       	ldi	r20, 0x01	; 1
    2d50:	50 e0       	ldi	r21, 0x00	; 0
    2d52:	64 2d       	mov	r22, r4
    2d54:	75 2d       	mov	r23, r5
    2d56:	c6 01       	movw	r24, r12
    2d58:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    2d5c:	8d c3       	rjmp	.+1818   	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x11: // Y GATE
			newthephi=gates.Y(read(op1,THE),read(op1,PHI));
    2d5e:	41 e0       	ldi	r20, 0x01	; 1
    2d60:	50 e0       	ldi	r21, 0x00	; 0
    2d62:	64 2d       	mov	r22, r4
    2d64:	75 2d       	mov	r23, r5
    2d66:	c6 01       	movw	r24, r12
    2d68:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2d6c:	8c 01       	movw	r16, r24
    2d6e:	40 e0       	ldi	r20, 0x00	; 0
    2d70:	50 e0       	ldi	r21, 0x00	; 0
    2d72:	64 2d       	mov	r22, r4
    2d74:	75 2d       	mov	r23, r5
    2d76:	c6 01       	movw	r24, r12
    2d78:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2d7c:	a8 01       	movw	r20, r16
    2d7e:	bc 01       	movw	r22, r24
    2d80:	c6 01       	movw	r24, r12
    2d82:	05 96       	adiw	r24, 0x05	; 5
    2d84:	0e 94 de 08 	call	0x11bc	; 0x11bc <_ZN5Gates1YEii>
    2d88:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    2d8a:	fc 01       	movw	r30, r24
    2d8c:	20 81       	ld	r18, Z
    2d8e:	31 81       	ldd	r19, Z+1	; 0x01
    2d90:	40 e0       	ldi	r20, 0x00	; 0
    2d92:	50 e0       	ldi	r21, 0x00	; 0
    2d94:	64 2d       	mov	r22, r4
    2d96:	75 2d       	mov	r23, r5
    2d98:	c6 01       	movw	r24, r12
    2d9a:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    2d9e:	f8 01       	movw	r30, r16
    2da0:	22 81       	ldd	r18, Z+2	; 0x02
    2da2:	33 81       	ldd	r19, Z+3	; 0x03
    2da4:	41 e0       	ldi	r20, 0x01	; 1
    2da6:	50 e0       	ldi	r21, 0x00	; 0
    2da8:	64 2d       	mov	r22, r4
    2daa:	75 2d       	mov	r23, r5
    2dac:	c6 01       	movw	r24, r12
    2dae:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    2db2:	62 c3       	rjmp	.+1732   	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x12: // Z GATE
			newthephi=gates.Z(read(op1,THE),read(op1,PHI));
    2db4:	41 e0       	ldi	r20, 0x01	; 1
    2db6:	50 e0       	ldi	r21, 0x00	; 0
    2db8:	64 2d       	mov	r22, r4
    2dba:	75 2d       	mov	r23, r5
    2dbc:	c6 01       	movw	r24, r12
    2dbe:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2dc2:	8c 01       	movw	r16, r24
    2dc4:	40 e0       	ldi	r20, 0x00	; 0
    2dc6:	50 e0       	ldi	r21, 0x00	; 0
    2dc8:	64 2d       	mov	r22, r4
    2dca:	75 2d       	mov	r23, r5
    2dcc:	c6 01       	movw	r24, r12
    2dce:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2dd2:	a8 01       	movw	r20, r16
    2dd4:	bc 01       	movw	r22, r24
    2dd6:	c6 01       	movw	r24, r12
    2dd8:	05 96       	adiw	r24, 0x05	; 5
    2dda:	0e 94 48 09 	call	0x1290	; 0x1290 <_ZN5Gates1ZEii>
    2dde:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    2de0:	fc 01       	movw	r30, r24
    2de2:	20 81       	ld	r18, Z
    2de4:	31 81       	ldd	r19, Z+1	; 0x01
    2de6:	40 e0       	ldi	r20, 0x00	; 0
    2de8:	50 e0       	ldi	r21, 0x00	; 0
    2dea:	64 2d       	mov	r22, r4
    2dec:	75 2d       	mov	r23, r5
    2dee:	c6 01       	movw	r24, r12
    2df0:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    2df4:	f8 01       	movw	r30, r16
    2df6:	22 81       	ldd	r18, Z+2	; 0x02
    2df8:	33 81       	ldd	r19, Z+3	; 0x03
    2dfa:	41 e0       	ldi	r20, 0x01	; 1
    2dfc:	50 e0       	ldi	r21, 0x00	; 0
    2dfe:	64 2d       	mov	r22, r4
    2e00:	75 2d       	mov	r23, r5
    2e02:	c6 01       	movw	r24, r12
    2e04:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    2e08:	37 c3       	rjmp	.+1646   	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x13: // H GATE
			newthephi=gates.H(read(op1,THE),read(op1,PHI));
    2e0a:	41 e0       	ldi	r20, 0x01	; 1
    2e0c:	50 e0       	ldi	r21, 0x00	; 0
    2e0e:	64 2d       	mov	r22, r4
    2e10:	75 2d       	mov	r23, r5
    2e12:	c6 01       	movw	r24, r12
    2e14:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2e18:	8c 01       	movw	r16, r24
    2e1a:	40 e0       	ldi	r20, 0x00	; 0
    2e1c:	50 e0       	ldi	r21, 0x00	; 0
    2e1e:	64 2d       	mov	r22, r4
    2e20:	75 2d       	mov	r23, r5
    2e22:	c6 01       	movw	r24, r12
    2e24:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2e28:	a8 01       	movw	r20, r16
    2e2a:	bc 01       	movw	r22, r24
    2e2c:	c6 01       	movw	r24, r12
    2e2e:	05 96       	adiw	r24, 0x05	; 5
    2e30:	0e 94 b2 09 	call	0x1364	; 0x1364 <_ZN5Gates1HEii>
    2e34:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    2e36:	fc 01       	movw	r30, r24
    2e38:	20 81       	ld	r18, Z
    2e3a:	31 81       	ldd	r19, Z+1	; 0x01
    2e3c:	40 e0       	ldi	r20, 0x00	; 0
    2e3e:	50 e0       	ldi	r21, 0x00	; 0
    2e40:	64 2d       	mov	r22, r4
    2e42:	75 2d       	mov	r23, r5
    2e44:	c6 01       	movw	r24, r12
    2e46:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    2e4a:	f8 01       	movw	r30, r16
    2e4c:	22 81       	ldd	r18, Z+2	; 0x02
    2e4e:	33 81       	ldd	r19, Z+3	; 0x03
    2e50:	41 e0       	ldi	r20, 0x01	; 1
    2e52:	50 e0       	ldi	r21, 0x00	; 0
    2e54:	64 2d       	mov	r22, r4
    2e56:	75 2d       	mov	r23, r5
    2e58:	c6 01       	movw	r24, r12
    2e5a:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    2e5e:	0c c3       	rjmp	.+1560   	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x14: // S GATE
			newthephi=gates.S(read(op1,THE),read(op1,PHI));
    2e60:	41 e0       	ldi	r20, 0x01	; 1
    2e62:	50 e0       	ldi	r21, 0x00	; 0
    2e64:	64 2d       	mov	r22, r4
    2e66:	75 2d       	mov	r23, r5
    2e68:	c6 01       	movw	r24, r12
    2e6a:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2e6e:	8c 01       	movw	r16, r24
    2e70:	40 e0       	ldi	r20, 0x00	; 0
    2e72:	50 e0       	ldi	r21, 0x00	; 0
    2e74:	64 2d       	mov	r22, r4
    2e76:	75 2d       	mov	r23, r5
    2e78:	c6 01       	movw	r24, r12
    2e7a:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2e7e:	a8 01       	movw	r20, r16
    2e80:	bc 01       	movw	r22, r24
    2e82:	c6 01       	movw	r24, r12
    2e84:	05 96       	adiw	r24, 0x05	; 5
    2e86:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN5Gates1SEii>
    2e8a:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    2e8c:	fc 01       	movw	r30, r24
    2e8e:	20 81       	ld	r18, Z
    2e90:	31 81       	ldd	r19, Z+1	; 0x01
    2e92:	40 e0       	ldi	r20, 0x00	; 0
    2e94:	50 e0       	ldi	r21, 0x00	; 0
    2e96:	64 2d       	mov	r22, r4
    2e98:	75 2d       	mov	r23, r5
    2e9a:	c6 01       	movw	r24, r12
    2e9c:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    2ea0:	f8 01       	movw	r30, r16
    2ea2:	22 81       	ldd	r18, Z+2	; 0x02
    2ea4:	33 81       	ldd	r19, Z+3	; 0x03
    2ea6:	41 e0       	ldi	r20, 0x01	; 1
    2ea8:	50 e0       	ldi	r21, 0x00	; 0
    2eaa:	64 2d       	mov	r22, r4
    2eac:	75 2d       	mov	r23, r5
    2eae:	c6 01       	movw	r24, r12
    2eb0:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    2eb4:	e1 c2       	rjmp	.+1474   	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x15: // T GATE
			newthephi=gates.T(read(op1,THE),read(op1,PHI));
    2eb6:	41 e0       	ldi	r20, 0x01	; 1
    2eb8:	50 e0       	ldi	r21, 0x00	; 0
    2eba:	64 2d       	mov	r22, r4
    2ebc:	75 2d       	mov	r23, r5
    2ebe:	c6 01       	movw	r24, r12
    2ec0:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2ec4:	8c 01       	movw	r16, r24
    2ec6:	40 e0       	ldi	r20, 0x00	; 0
    2ec8:	50 e0       	ldi	r21, 0x00	; 0
    2eca:	64 2d       	mov	r22, r4
    2ecc:	75 2d       	mov	r23, r5
    2ece:	c6 01       	movw	r24, r12
    2ed0:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2ed4:	a8 01       	movw	r20, r16
    2ed6:	bc 01       	movw	r22, r24
    2ed8:	c6 01       	movw	r24, r12
    2eda:	05 96       	adiw	r24, 0x05	; 5
    2edc:	0e 94 8a 0a 	call	0x1514	; 0x1514 <_ZN5Gates1TEii>
    2ee0:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    2ee2:	fc 01       	movw	r30, r24
    2ee4:	20 81       	ld	r18, Z
    2ee6:	31 81       	ldd	r19, Z+1	; 0x01
    2ee8:	40 e0       	ldi	r20, 0x00	; 0
    2eea:	50 e0       	ldi	r21, 0x00	; 0
    2eec:	64 2d       	mov	r22, r4
    2eee:	75 2d       	mov	r23, r5
    2ef0:	c6 01       	movw	r24, r12
    2ef2:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    2ef6:	f8 01       	movw	r30, r16
    2ef8:	22 81       	ldd	r18, Z+2	; 0x02
    2efa:	33 81       	ldd	r19, Z+3	; 0x03
    2efc:	41 e0       	ldi	r20, 0x01	; 1
    2efe:	50 e0       	ldi	r21, 0x00	; 0
    2f00:	64 2d       	mov	r22, r4
    2f02:	75 2d       	mov	r23, r5
    2f04:	c6 01       	movw	r24, r12
    2f06:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    2f0a:	b6 c2       	rjmp	.+1388   	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		//2 QUBIT GATES -
		case 0x16: 
			newthephi=gates.CNO(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    2f0c:	41 e0       	ldi	r20, 0x01	; 1
    2f0e:	50 e0       	ldi	r21, 0x00	; 0
    2f10:	6e 2d       	mov	r22, r14
    2f12:	7f 2d       	mov	r23, r15
    2f14:	c6 01       	movw	r24, r12
    2f16:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2f1a:	8c 01       	movw	r16, r24
    2f1c:	40 e0       	ldi	r20, 0x00	; 0
    2f1e:	50 e0       	ldi	r21, 0x00	; 0
    2f20:	6e 2d       	mov	r22, r14
    2f22:	7f 2d       	mov	r23, r15
    2f24:	c6 01       	movw	r24, r12
    2f26:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2f2a:	5c 01       	movw	r10, r24
    2f2c:	41 e0       	ldi	r20, 0x01	; 1
    2f2e:	50 e0       	ldi	r21, 0x00	; 0
    2f30:	64 2d       	mov	r22, r4
    2f32:	75 2d       	mov	r23, r5
    2f34:	c6 01       	movw	r24, r12
    2f36:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2f3a:	4c 01       	movw	r8, r24
    2f3c:	40 e0       	ldi	r20, 0x00	; 0
    2f3e:	50 e0       	ldi	r21, 0x00	; 0
    2f40:	64 2d       	mov	r22, r4
    2f42:	75 2d       	mov	r23, r5
    2f44:	c6 01       	movw	r24, r12
    2f46:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2f4a:	95 01       	movw	r18, r10
    2f4c:	a4 01       	movw	r20, r8
    2f4e:	bc 01       	movw	r22, r24
    2f50:	c6 01       	movw	r24, r12
    2f52:	05 96       	adiw	r24, 0x05	; 5
    2f54:	0e 94 f3 0a 	call	0x15e6	; 0x15e6 <_ZN5Gates3CNOEiiii>
    2f58:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    2f5a:	fc 01       	movw	r30, r24
    2f5c:	20 81       	ld	r18, Z
    2f5e:	31 81       	ldd	r19, Z+1	; 0x01
    2f60:	40 e0       	ldi	r20, 0x00	; 0
    2f62:	50 e0       	ldi	r21, 0x00	; 0
    2f64:	64 2d       	mov	r22, r4
    2f66:	75 2d       	mov	r23, r5
    2f68:	c6 01       	movw	r24, r12
    2f6a:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    2f6e:	f8 01       	movw	r30, r16
    2f70:	22 81       	ldd	r18, Z+2	; 0x02
    2f72:	33 81       	ldd	r19, Z+3	; 0x03
    2f74:	41 e0       	ldi	r20, 0x01	; 1
    2f76:	50 e0       	ldi	r21, 0x00	; 0
    2f78:	64 2d       	mov	r22, r4
    2f7a:	75 2d       	mov	r23, r5
    2f7c:	c6 01       	movw	r24, r12
    2f7e:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    2f82:	f8 01       	movw	r30, r16
    2f84:	24 81       	ldd	r18, Z+4	; 0x04
    2f86:	35 81       	ldd	r19, Z+5	; 0x05
    2f88:	40 e0       	ldi	r20, 0x00	; 0
    2f8a:	50 e0       	ldi	r21, 0x00	; 0
    2f8c:	6e 2d       	mov	r22, r14
    2f8e:	7f 2d       	mov	r23, r15
    2f90:	c6 01       	movw	r24, r12
    2f92:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    2f96:	f8 01       	movw	r30, r16
    2f98:	26 81       	ldd	r18, Z+6	; 0x06
    2f9a:	37 81       	ldd	r19, Z+7	; 0x07
    2f9c:	41 e0       	ldi	r20, 0x01	; 1
    2f9e:	50 e0       	ldi	r21, 0x00	; 0
    2fa0:	6e 2d       	mov	r22, r14
    2fa2:	7f 2d       	mov	r23, r15
    2fa4:	c6 01       	movw	r24, r12
    2fa6:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    2faa:	66 c2       	rjmp	.+1228   	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x17:
			newthephi=gates.CSI(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    2fac:	41 e0       	ldi	r20, 0x01	; 1
    2fae:	50 e0       	ldi	r21, 0x00	; 0
    2fb0:	6e 2d       	mov	r22, r14
    2fb2:	7f 2d       	mov	r23, r15
    2fb4:	c6 01       	movw	r24, r12
    2fb6:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2fba:	8c 01       	movw	r16, r24
    2fbc:	40 e0       	ldi	r20, 0x00	; 0
    2fbe:	50 e0       	ldi	r21, 0x00	; 0
    2fc0:	6e 2d       	mov	r22, r14
    2fc2:	7f 2d       	mov	r23, r15
    2fc4:	c6 01       	movw	r24, r12
    2fc6:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2fca:	5c 01       	movw	r10, r24
    2fcc:	41 e0       	ldi	r20, 0x01	; 1
    2fce:	50 e0       	ldi	r21, 0x00	; 0
    2fd0:	64 2d       	mov	r22, r4
    2fd2:	75 2d       	mov	r23, r5
    2fd4:	c6 01       	movw	r24, r12
    2fd6:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2fda:	4c 01       	movw	r8, r24
    2fdc:	40 e0       	ldi	r20, 0x00	; 0
    2fde:	50 e0       	ldi	r21, 0x00	; 0
    2fe0:	64 2d       	mov	r22, r4
    2fe2:	75 2d       	mov	r23, r5
    2fe4:	c6 01       	movw	r24, r12
    2fe6:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    2fea:	95 01       	movw	r18, r10
    2fec:	a4 01       	movw	r20, r8
    2fee:	bc 01       	movw	r22, r24
    2ff0:	c6 01       	movw	r24, r12
    2ff2:	05 96       	adiw	r24, 0x05	; 5
    2ff4:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <_ZN5Gates3CSIEiiii>
    2ff8:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    2ffa:	fc 01       	movw	r30, r24
    2ffc:	20 81       	ld	r18, Z
    2ffe:	31 81       	ldd	r19, Z+1	; 0x01
    3000:	40 e0       	ldi	r20, 0x00	; 0
    3002:	50 e0       	ldi	r21, 0x00	; 0
    3004:	64 2d       	mov	r22, r4
    3006:	75 2d       	mov	r23, r5
    3008:	c6 01       	movw	r24, r12
    300a:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    300e:	f8 01       	movw	r30, r16
    3010:	22 81       	ldd	r18, Z+2	; 0x02
    3012:	33 81       	ldd	r19, Z+3	; 0x03
    3014:	41 e0       	ldi	r20, 0x01	; 1
    3016:	50 e0       	ldi	r21, 0x00	; 0
    3018:	64 2d       	mov	r22, r4
    301a:	75 2d       	mov	r23, r5
    301c:	c6 01       	movw	r24, r12
    301e:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    3022:	f8 01       	movw	r30, r16
    3024:	24 81       	ldd	r18, Z+4	; 0x04
    3026:	35 81       	ldd	r19, Z+5	; 0x05
    3028:	40 e0       	ldi	r20, 0x00	; 0
    302a:	50 e0       	ldi	r21, 0x00	; 0
    302c:	6e 2d       	mov	r22, r14
    302e:	7f 2d       	mov	r23, r15
    3030:	c6 01       	movw	r24, r12
    3032:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    3036:	f8 01       	movw	r30, r16
    3038:	26 81       	ldd	r18, Z+6	; 0x06
    303a:	37 81       	ldd	r19, Z+7	; 0x07
    303c:	41 e0       	ldi	r20, 0x01	; 1
    303e:	50 e0       	ldi	r21, 0x00	; 0
    3040:	6e 2d       	mov	r22, r14
    3042:	7f 2d       	mov	r23, r15
    3044:	c6 01       	movw	r24, r12
    3046:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    304a:	16 c2       	rjmp	.+1068   	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x18: 
			newthephi=gates.SWA(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    304c:	41 e0       	ldi	r20, 0x01	; 1
    304e:	50 e0       	ldi	r21, 0x00	; 0
    3050:	6e 2d       	mov	r22, r14
    3052:	7f 2d       	mov	r23, r15
    3054:	c6 01       	movw	r24, r12
    3056:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    305a:	8c 01       	movw	r16, r24
    305c:	40 e0       	ldi	r20, 0x00	; 0
    305e:	50 e0       	ldi	r21, 0x00	; 0
    3060:	6e 2d       	mov	r22, r14
    3062:	7f 2d       	mov	r23, r15
    3064:	c6 01       	movw	r24, r12
    3066:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    306a:	5c 01       	movw	r10, r24
    306c:	41 e0       	ldi	r20, 0x01	; 1
    306e:	50 e0       	ldi	r21, 0x00	; 0
    3070:	64 2d       	mov	r22, r4
    3072:	75 2d       	mov	r23, r5
    3074:	c6 01       	movw	r24, r12
    3076:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    307a:	4c 01       	movw	r8, r24
    307c:	40 e0       	ldi	r20, 0x00	; 0
    307e:	50 e0       	ldi	r21, 0x00	; 0
    3080:	64 2d       	mov	r22, r4
    3082:	75 2d       	mov	r23, r5
    3084:	c6 01       	movw	r24, r12
    3086:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    308a:	95 01       	movw	r18, r10
    308c:	a4 01       	movw	r20, r8
    308e:	bc 01       	movw	r22, r24
    3090:	c6 01       	movw	r24, r12
    3092:	05 96       	adiw	r24, 0x05	; 5
    3094:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <_ZN5Gates3SWAEiiii>
    3098:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    309a:	fc 01       	movw	r30, r24
    309c:	20 81       	ld	r18, Z
    309e:	31 81       	ldd	r19, Z+1	; 0x01
    30a0:	40 e0       	ldi	r20, 0x00	; 0
    30a2:	50 e0       	ldi	r21, 0x00	; 0
    30a4:	64 2d       	mov	r22, r4
    30a6:	75 2d       	mov	r23, r5
    30a8:	c6 01       	movw	r24, r12
    30aa:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    30ae:	f8 01       	movw	r30, r16
    30b0:	22 81       	ldd	r18, Z+2	; 0x02
    30b2:	33 81       	ldd	r19, Z+3	; 0x03
    30b4:	41 e0       	ldi	r20, 0x01	; 1
    30b6:	50 e0       	ldi	r21, 0x00	; 0
    30b8:	64 2d       	mov	r22, r4
    30ba:	75 2d       	mov	r23, r5
    30bc:	c6 01       	movw	r24, r12
    30be:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    30c2:	f8 01       	movw	r30, r16
    30c4:	24 81       	ldd	r18, Z+4	; 0x04
    30c6:	35 81       	ldd	r19, Z+5	; 0x05
    30c8:	40 e0       	ldi	r20, 0x00	; 0
    30ca:	50 e0       	ldi	r21, 0x00	; 0
    30cc:	6e 2d       	mov	r22, r14
    30ce:	7f 2d       	mov	r23, r15
    30d0:	c6 01       	movw	r24, r12
    30d2:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    30d6:	f8 01       	movw	r30, r16
    30d8:	26 81       	ldd	r18, Z+6	; 0x06
    30da:	37 81       	ldd	r19, Z+7	; 0x07
    30dc:	41 e0       	ldi	r20, 0x01	; 1
    30de:	50 e0       	ldi	r21, 0x00	; 0
    30e0:	6e 2d       	mov	r22, r14
    30e2:	7f 2d       	mov	r23, r15
    30e4:	c6 01       	movw	r24, r12
    30e6:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    30ea:	c6 c1       	rjmp	.+908    	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x19: 
			newthephi=gates.INC(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    30ec:	41 e0       	ldi	r20, 0x01	; 1
    30ee:	50 e0       	ldi	r21, 0x00	; 0
    30f0:	6e 2d       	mov	r22, r14
    30f2:	7f 2d       	mov	r23, r15
    30f4:	c6 01       	movw	r24, r12
    30f6:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    30fa:	8c 01       	movw	r16, r24
    30fc:	40 e0       	ldi	r20, 0x00	; 0
    30fe:	50 e0       	ldi	r21, 0x00	; 0
    3100:	6e 2d       	mov	r22, r14
    3102:	7f 2d       	mov	r23, r15
    3104:	c6 01       	movw	r24, r12
    3106:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    310a:	5c 01       	movw	r10, r24
    310c:	41 e0       	ldi	r20, 0x01	; 1
    310e:	50 e0       	ldi	r21, 0x00	; 0
    3110:	64 2d       	mov	r22, r4
    3112:	75 2d       	mov	r23, r5
    3114:	c6 01       	movw	r24, r12
    3116:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    311a:	4c 01       	movw	r8, r24
    311c:	40 e0       	ldi	r20, 0x00	; 0
    311e:	50 e0       	ldi	r21, 0x00	; 0
    3120:	64 2d       	mov	r22, r4
    3122:	75 2d       	mov	r23, r5
    3124:	c6 01       	movw	r24, r12
    3126:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    312a:	95 01       	movw	r18, r10
    312c:	a4 01       	movw	r20, r8
    312e:	bc 01       	movw	r22, r24
    3130:	c6 01       	movw	r24, r12
    3132:	05 96       	adiw	r24, 0x05	; 5
    3134:	0e 94 f9 0d 	call	0x1bf2	; 0x1bf2 <_ZN5Gates3INCEiiii>
    3138:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    313a:	fc 01       	movw	r30, r24
    313c:	20 81       	ld	r18, Z
    313e:	31 81       	ldd	r19, Z+1	; 0x01
    3140:	40 e0       	ldi	r20, 0x00	; 0
    3142:	50 e0       	ldi	r21, 0x00	; 0
    3144:	64 2d       	mov	r22, r4
    3146:	75 2d       	mov	r23, r5
    3148:	c6 01       	movw	r24, r12
    314a:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    314e:	f8 01       	movw	r30, r16
    3150:	22 81       	ldd	r18, Z+2	; 0x02
    3152:	33 81       	ldd	r19, Z+3	; 0x03
    3154:	41 e0       	ldi	r20, 0x01	; 1
    3156:	50 e0       	ldi	r21, 0x00	; 0
    3158:	64 2d       	mov	r22, r4
    315a:	75 2d       	mov	r23, r5
    315c:	c6 01       	movw	r24, r12
    315e:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    3162:	f8 01       	movw	r30, r16
    3164:	24 81       	ldd	r18, Z+4	; 0x04
    3166:	35 81       	ldd	r19, Z+5	; 0x05
    3168:	40 e0       	ldi	r20, 0x00	; 0
    316a:	50 e0       	ldi	r21, 0x00	; 0
    316c:	6e 2d       	mov	r22, r14
    316e:	7f 2d       	mov	r23, r15
    3170:	c6 01       	movw	r24, r12
    3172:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    3176:	f8 01       	movw	r30, r16
    3178:	26 81       	ldd	r18, Z+6	; 0x06
    317a:	37 81       	ldd	r19, Z+7	; 0x07
    317c:	41 e0       	ldi	r20, 0x01	; 1
    317e:	50 e0       	ldi	r21, 0x00	; 0
    3180:	6e 2d       	mov	r22, r14
    3182:	7f 2d       	mov	r23, r15
    3184:	c6 01       	movw	r24, r12
    3186:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    318a:	76 c1       	rjmp	.+748    	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x1A: 
			newthephi=gates.DEC(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    318c:	41 e0       	ldi	r20, 0x01	; 1
    318e:	50 e0       	ldi	r21, 0x00	; 0
    3190:	6e 2d       	mov	r22, r14
    3192:	7f 2d       	mov	r23, r15
    3194:	c6 01       	movw	r24, r12
    3196:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    319a:	8c 01       	movw	r16, r24
    319c:	40 e0       	ldi	r20, 0x00	; 0
    319e:	50 e0       	ldi	r21, 0x00	; 0
    31a0:	6e 2d       	mov	r22, r14
    31a2:	7f 2d       	mov	r23, r15
    31a4:	c6 01       	movw	r24, r12
    31a6:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    31aa:	5c 01       	movw	r10, r24
    31ac:	41 e0       	ldi	r20, 0x01	; 1
    31ae:	50 e0       	ldi	r21, 0x00	; 0
    31b0:	64 2d       	mov	r22, r4
    31b2:	75 2d       	mov	r23, r5
    31b4:	c6 01       	movw	r24, r12
    31b6:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    31ba:	4c 01       	movw	r8, r24
    31bc:	40 e0       	ldi	r20, 0x00	; 0
    31be:	50 e0       	ldi	r21, 0x00	; 0
    31c0:	64 2d       	mov	r22, r4
    31c2:	75 2d       	mov	r23, r5
    31c4:	c6 01       	movw	r24, r12
    31c6:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    31ca:	95 01       	movw	r18, r10
    31cc:	a4 01       	movw	r20, r8
    31ce:	bc 01       	movw	r22, r24
    31d0:	c6 01       	movw	r24, r12
    31d2:	05 96       	adiw	r24, 0x05	; 5
    31d4:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <_ZN5Gates3DECEiiii>
    31d8:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    31da:	fc 01       	movw	r30, r24
    31dc:	20 81       	ld	r18, Z
    31de:	31 81       	ldd	r19, Z+1	; 0x01
    31e0:	40 e0       	ldi	r20, 0x00	; 0
    31e2:	50 e0       	ldi	r21, 0x00	; 0
    31e4:	64 2d       	mov	r22, r4
    31e6:	75 2d       	mov	r23, r5
    31e8:	c6 01       	movw	r24, r12
    31ea:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    31ee:	f8 01       	movw	r30, r16
    31f0:	22 81       	ldd	r18, Z+2	; 0x02
    31f2:	33 81       	ldd	r19, Z+3	; 0x03
    31f4:	41 e0       	ldi	r20, 0x01	; 1
    31f6:	50 e0       	ldi	r21, 0x00	; 0
    31f8:	64 2d       	mov	r22, r4
    31fa:	75 2d       	mov	r23, r5
    31fc:	c6 01       	movw	r24, r12
    31fe:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    3202:	f8 01       	movw	r30, r16
    3204:	24 81       	ldd	r18, Z+4	; 0x04
    3206:	35 81       	ldd	r19, Z+5	; 0x05
    3208:	40 e0       	ldi	r20, 0x00	; 0
    320a:	50 e0       	ldi	r21, 0x00	; 0
    320c:	6e 2d       	mov	r22, r14
    320e:	7f 2d       	mov	r23, r15
    3210:	c6 01       	movw	r24, r12
    3212:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    3216:	f8 01       	movw	r30, r16
    3218:	26 81       	ldd	r18, Z+6	; 0x06
    321a:	37 81       	ldd	r19, Z+7	; 0x07
    321c:	41 e0       	ldi	r20, 0x01	; 1
    321e:	50 e0       	ldi	r21, 0x00	; 0
    3220:	6e 2d       	mov	r22, r14
    3222:	7f 2d       	mov	r23, r15
    3224:	c6 01       	movw	r24, r12
    3226:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    322a:	26 c1       	rjmp	.+588    	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		break;
		case 0x1D: 
			//DEUTSCH -> 3 QUBIT GATE
		break;
		case 0x1E: 
			newthephi=gates.SWQ(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    322c:	41 e0       	ldi	r20, 0x01	; 1
    322e:	50 e0       	ldi	r21, 0x00	; 0
    3230:	6e 2d       	mov	r22, r14
    3232:	7f 2d       	mov	r23, r15
    3234:	c6 01       	movw	r24, r12
    3236:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    323a:	8c 01       	movw	r16, r24
    323c:	40 e0       	ldi	r20, 0x00	; 0
    323e:	50 e0       	ldi	r21, 0x00	; 0
    3240:	6e 2d       	mov	r22, r14
    3242:	7f 2d       	mov	r23, r15
    3244:	c6 01       	movw	r24, r12
    3246:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    324a:	5c 01       	movw	r10, r24
    324c:	41 e0       	ldi	r20, 0x01	; 1
    324e:	50 e0       	ldi	r21, 0x00	; 0
    3250:	64 2d       	mov	r22, r4
    3252:	75 2d       	mov	r23, r5
    3254:	c6 01       	movw	r24, r12
    3256:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    325a:	4c 01       	movw	r8, r24
    325c:	40 e0       	ldi	r20, 0x00	; 0
    325e:	50 e0       	ldi	r21, 0x00	; 0
    3260:	64 2d       	mov	r22, r4
    3262:	75 2d       	mov	r23, r5
    3264:	c6 01       	movw	r24, r12
    3266:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    326a:	95 01       	movw	r18, r10
    326c:	a4 01       	movw	r20, r8
    326e:	bc 01       	movw	r22, r24
    3270:	c6 01       	movw	r24, r12
    3272:	05 96       	adiw	r24, 0x05	; 5
    3274:	0e 94 fd 0f 	call	0x1ffa	; 0x1ffa <_ZN5Gates3SWQEiiii>
    3278:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    327a:	fc 01       	movw	r30, r24
    327c:	20 81       	ld	r18, Z
    327e:	31 81       	ldd	r19, Z+1	; 0x01
    3280:	40 e0       	ldi	r20, 0x00	; 0
    3282:	50 e0       	ldi	r21, 0x00	; 0
    3284:	64 2d       	mov	r22, r4
    3286:	75 2d       	mov	r23, r5
    3288:	c6 01       	movw	r24, r12
    328a:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    328e:	f8 01       	movw	r30, r16
    3290:	22 81       	ldd	r18, Z+2	; 0x02
    3292:	33 81       	ldd	r19, Z+3	; 0x03
    3294:	41 e0       	ldi	r20, 0x01	; 1
    3296:	50 e0       	ldi	r21, 0x00	; 0
    3298:	64 2d       	mov	r22, r4
    329a:	75 2d       	mov	r23, r5
    329c:	c6 01       	movw	r24, r12
    329e:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    32a2:	f8 01       	movw	r30, r16
    32a4:	24 81       	ldd	r18, Z+4	; 0x04
    32a6:	35 81       	ldd	r19, Z+5	; 0x05
    32a8:	40 e0       	ldi	r20, 0x00	; 0
    32aa:	50 e0       	ldi	r21, 0x00	; 0
    32ac:	6e 2d       	mov	r22, r14
    32ae:	7f 2d       	mov	r23, r15
    32b0:	c6 01       	movw	r24, r12
    32b2:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    32b6:	f8 01       	movw	r30, r16
    32b8:	26 81       	ldd	r18, Z+6	; 0x06
    32ba:	37 81       	ldd	r19, Z+7	; 0x07
    32bc:	41 e0       	ldi	r20, 0x01	; 1
    32be:	50 e0       	ldi	r21, 0x00	; 0
    32c0:	6e 2d       	mov	r22, r14
    32c2:	7f 2d       	mov	r23, r15
    32c4:	c6 01       	movw	r24, r12
    32c6:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    32ca:	d6 c0       	rjmp	.+428    	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x1F: 
			newthephi=gates.SWI(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    32cc:	41 e0       	ldi	r20, 0x01	; 1
    32ce:	50 e0       	ldi	r21, 0x00	; 0
    32d0:	6e 2d       	mov	r22, r14
    32d2:	7f 2d       	mov	r23, r15
    32d4:	c6 01       	movw	r24, r12
    32d6:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    32da:	8c 01       	movw	r16, r24
    32dc:	40 e0       	ldi	r20, 0x00	; 0
    32de:	50 e0       	ldi	r21, 0x00	; 0
    32e0:	6e 2d       	mov	r22, r14
    32e2:	7f 2d       	mov	r23, r15
    32e4:	c6 01       	movw	r24, r12
    32e6:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    32ea:	5c 01       	movw	r10, r24
    32ec:	41 e0       	ldi	r20, 0x01	; 1
    32ee:	50 e0       	ldi	r21, 0x00	; 0
    32f0:	64 2d       	mov	r22, r4
    32f2:	75 2d       	mov	r23, r5
    32f4:	c6 01       	movw	r24, r12
    32f6:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    32fa:	4c 01       	movw	r8, r24
    32fc:	40 e0       	ldi	r20, 0x00	; 0
    32fe:	50 e0       	ldi	r21, 0x00	; 0
    3300:	64 2d       	mov	r22, r4
    3302:	75 2d       	mov	r23, r5
    3304:	c6 01       	movw	r24, r12
    3306:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    330a:	95 01       	movw	r18, r10
    330c:	a4 01       	movw	r20, r8
    330e:	bc 01       	movw	r22, r24
    3310:	c6 01       	movw	r24, r12
    3312:	05 96       	adiw	r24, 0x05	; 5
    3314:	0e 94 03 11 	call	0x2206	; 0x2206 <_ZN5Gates3SWIEiiii>
    3318:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    331a:	fc 01       	movw	r30, r24
    331c:	20 81       	ld	r18, Z
    331e:	31 81       	ldd	r19, Z+1	; 0x01
    3320:	40 e0       	ldi	r20, 0x00	; 0
    3322:	50 e0       	ldi	r21, 0x00	; 0
    3324:	64 2d       	mov	r22, r4
    3326:	75 2d       	mov	r23, r5
    3328:	c6 01       	movw	r24, r12
    332a:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    332e:	f8 01       	movw	r30, r16
    3330:	22 81       	ldd	r18, Z+2	; 0x02
    3332:	33 81       	ldd	r19, Z+3	; 0x03
    3334:	41 e0       	ldi	r20, 0x01	; 1
    3336:	50 e0       	ldi	r21, 0x00	; 0
    3338:	64 2d       	mov	r22, r4
    333a:	75 2d       	mov	r23, r5
    333c:	c6 01       	movw	r24, r12
    333e:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    3342:	f8 01       	movw	r30, r16
    3344:	24 81       	ldd	r18, Z+4	; 0x04
    3346:	35 81       	ldd	r19, Z+5	; 0x05
    3348:	40 e0       	ldi	r20, 0x00	; 0
    334a:	50 e0       	ldi	r21, 0x00	; 0
    334c:	6e 2d       	mov	r22, r14
    334e:	7f 2d       	mov	r23, r15
    3350:	c6 01       	movw	r24, r12
    3352:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    3356:	f8 01       	movw	r30, r16
    3358:	26 81       	ldd	r18, Z+6	; 0x06
    335a:	37 81       	ldd	r19, Z+7	; 0x07
    335c:	41 e0       	ldi	r20, 0x01	; 1
    335e:	50 e0       	ldi	r21, 0x00	; 0
    3360:	6e 2d       	mov	r22, r14
    3362:	7f 2d       	mov	r23, r15
    3364:	c6 01       	movw	r24, r12
    3366:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    336a:	86 c0       	rjmp	.+268    	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x20:
			newthephi=gates.ROX(read(op1,THE),read(op1,PHI),op2);
    336c:	41 e0       	ldi	r20, 0x01	; 1
    336e:	50 e0       	ldi	r21, 0x00	; 0
    3370:	64 2d       	mov	r22, r4
    3372:	75 2d       	mov	r23, r5
    3374:	c6 01       	movw	r24, r12
    3376:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    337a:	8c 01       	movw	r16, r24
    337c:	40 e0       	ldi	r20, 0x00	; 0
    337e:	50 e0       	ldi	r21, 0x00	; 0
    3380:	64 2d       	mov	r22, r4
    3382:	75 2d       	mov	r23, r5
    3384:	c6 01       	movw	r24, r12
    3386:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    338a:	2e 2d       	mov	r18, r14
    338c:	3f 2d       	mov	r19, r15
    338e:	a8 01       	movw	r20, r16
    3390:	bc 01       	movw	r22, r24
    3392:	c6 01       	movw	r24, r12
    3394:	05 96       	adiw	r24, 0x05	; 5
    3396:	0e 94 05 12 	call	0x240a	; 0x240a <_ZN5Gates3ROXEiii>
    339a:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    339c:	fc 01       	movw	r30, r24
    339e:	20 81       	ld	r18, Z
    33a0:	31 81       	ldd	r19, Z+1	; 0x01
    33a2:	40 e0       	ldi	r20, 0x00	; 0
    33a4:	50 e0       	ldi	r21, 0x00	; 0
    33a6:	64 2d       	mov	r22, r4
    33a8:	75 2d       	mov	r23, r5
    33aa:	c6 01       	movw	r24, r12
    33ac:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    33b0:	f8 01       	movw	r30, r16
    33b2:	22 81       	ldd	r18, Z+2	; 0x02
    33b4:	33 81       	ldd	r19, Z+3	; 0x03
    33b6:	41 e0       	ldi	r20, 0x01	; 1
    33b8:	50 e0       	ldi	r21, 0x00	; 0
    33ba:	64 2d       	mov	r22, r4
    33bc:	75 2d       	mov	r23, r5
    33be:	c6 01       	movw	r24, r12
    33c0:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    33c4:	59 c0       	rjmp	.+178    	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x21: 
			newthephi=gates.ROY(read(op1,THE),read(op1,PHI),op2);
    33c6:	41 e0       	ldi	r20, 0x01	; 1
    33c8:	50 e0       	ldi	r21, 0x00	; 0
    33ca:	64 2d       	mov	r22, r4
    33cc:	75 2d       	mov	r23, r5
    33ce:	c6 01       	movw	r24, r12
    33d0:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    33d4:	8c 01       	movw	r16, r24
    33d6:	40 e0       	ldi	r20, 0x00	; 0
    33d8:	50 e0       	ldi	r21, 0x00	; 0
    33da:	64 2d       	mov	r22, r4
    33dc:	75 2d       	mov	r23, r5
    33de:	c6 01       	movw	r24, r12
    33e0:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    33e4:	2e 2d       	mov	r18, r14
    33e6:	3f 2d       	mov	r19, r15
    33e8:	a8 01       	movw	r20, r16
    33ea:	bc 01       	movw	r22, r24
    33ec:	c6 01       	movw	r24, r12
    33ee:	05 96       	adiw	r24, 0x05	; 5
    33f0:	0e 94 a4 12 	call	0x2548	; 0x2548 <_ZN5Gates3ROYEiii>
    33f4:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    33f6:	fc 01       	movw	r30, r24
    33f8:	20 81       	ld	r18, Z
    33fa:	31 81       	ldd	r19, Z+1	; 0x01
    33fc:	40 e0       	ldi	r20, 0x00	; 0
    33fe:	50 e0       	ldi	r21, 0x00	; 0
    3400:	64 2d       	mov	r22, r4
    3402:	75 2d       	mov	r23, r5
    3404:	c6 01       	movw	r24, r12
    3406:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    340a:	f8 01       	movw	r30, r16
    340c:	22 81       	ldd	r18, Z+2	; 0x02
    340e:	33 81       	ldd	r19, Z+3	; 0x03
    3410:	41 e0       	ldi	r20, 0x01	; 1
    3412:	50 e0       	ldi	r21, 0x00	; 0
    3414:	64 2d       	mov	r22, r4
    3416:	75 2d       	mov	r23, r5
    3418:	c6 01       	movw	r24, r12
    341a:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
		break;
    341e:	2c c0       	rjmp	.+88     	; 0x3478 <_ZN4QEPU7executeEilll+0x932>
		case 0x22: 
			newthephi=gates.ROZ(read(op1,THE),read(op1,PHI),op2);
    3420:	41 e0       	ldi	r20, 0x01	; 1
    3422:	50 e0       	ldi	r21, 0x00	; 0
    3424:	64 2d       	mov	r22, r4
    3426:	75 2d       	mov	r23, r5
    3428:	c6 01       	movw	r24, r12
    342a:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    342e:	8c 01       	movw	r16, r24
    3430:	40 e0       	ldi	r20, 0x00	; 0
    3432:	50 e0       	ldi	r21, 0x00	; 0
    3434:	64 2d       	mov	r22, r4
    3436:	75 2d       	mov	r23, r5
    3438:	c6 01       	movw	r24, r12
    343a:	0e 94 2e 14 	call	0x285c	; 0x285c <_ZN4QEPU4readEii>
    343e:	2e 2d       	mov	r18, r14
    3440:	3f 2d       	mov	r19, r15
    3442:	a8 01       	movw	r20, r16
    3444:	bc 01       	movw	r22, r24
    3446:	c6 01       	movw	r24, r12
    3448:	05 96       	adiw	r24, 0x05	; 5
    344a:	0e 94 40 13 	call	0x2680	; 0x2680 <_ZN5Gates3ROZEiii>
    344e:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    3450:	fc 01       	movw	r30, r24
    3452:	20 81       	ld	r18, Z
    3454:	31 81       	ldd	r19, Z+1	; 0x01
    3456:	40 e0       	ldi	r20, 0x00	; 0
    3458:	50 e0       	ldi	r21, 0x00	; 0
    345a:	64 2d       	mov	r22, r4
    345c:	75 2d       	mov	r23, r5
    345e:	c6 01       	movw	r24, r12
    3460:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
    3464:	f8 01       	movw	r30, r16
    3466:	22 81       	ldd	r18, Z+2	; 0x02
    3468:	33 81       	ldd	r19, Z+3	; 0x03
    346a:	41 e0       	ldi	r20, 0x01	; 1
    346c:	50 e0       	ldi	r21, 0x00	; 0
    346e:	64 2d       	mov	r22, r4
    3470:	75 2d       	mov	r23, r5
    3472:	c6 01       	movw	r24, r12
    3474:	0e 94 10 14 	call	0x2820	; 0x2820 <_ZN4QEPU5writeEiii>
	/*serial.writestr("Function: "); serial.writestr(utils.int2str(func));
	serial.writestr(" , OP1: ");   serial.writestr(utils.int2str(op1));
	serial.writestr(" , OP2: ");   serial.writestr(utils.int2str(op2));
	serial.writestr(" PC: ");	   serial.writestrln(utils.int2str(program_counter));
	serial.writestrln("");*/
	free(newthephi);	
    3478:	c8 01       	movw	r24, r16
    347a:	0e 94 a4 21 	call	0x4348	; 0x4348 <free>
    347e:	ce 56       	subi	r28, 0x6E	; 110
    3480:	de 4f       	sbci	r29, 0xFE	; 254
    3482:	0f b6       	in	r0, 0x3f	; 63
    3484:	f8 94       	cli
    3486:	de bf       	out	0x3e, r29	; 62
    3488:	0f be       	out	0x3f, r0	; 63
    348a:	cd bf       	out	0x3d, r28	; 61
    348c:	df 91       	pop	r29
    348e:	cf 91       	pop	r28
    3490:	1f 91       	pop	r17
    3492:	0f 91       	pop	r16
    3494:	ff 90       	pop	r15
    3496:	ef 90       	pop	r14
    3498:	df 90       	pop	r13
    349a:	cf 90       	pop	r12
    349c:	bf 90       	pop	r11
    349e:	af 90       	pop	r10
    34a0:	9f 90       	pop	r9
    34a2:	8f 90       	pop	r8
    34a4:	7f 90       	pop	r7
    34a6:	6f 90       	pop	r6
    34a8:	5f 90       	pop	r5
    34aa:	4f 90       	pop	r4
    34ac:	3f 90       	pop	r3
    34ae:	2f 90       	pop	r2
    34b0:	08 95       	ret

000034b2 <_ZN4QEPU3runEv>:
}
int QEPU::Utils::delay(int ms){
	while(ms--) _delay_ms(1);
}

void QEPU::run(){
    34b2:	2f 92       	push	r2
    34b4:	3f 92       	push	r3
    34b6:	4f 92       	push	r4
    34b8:	5f 92       	push	r5
    34ba:	6f 92       	push	r6
    34bc:	7f 92       	push	r7
    34be:	8f 92       	push	r8
    34c0:	9f 92       	push	r9
    34c2:	af 92       	push	r10
    34c4:	bf 92       	push	r11
    34c6:	cf 92       	push	r12
    34c8:	df 92       	push	r13
    34ca:	ef 92       	push	r14
    34cc:	ff 92       	push	r15
    34ce:	0f 93       	push	r16
    34d0:	1f 93       	push	r17
    34d2:	cf 93       	push	r28
    34d4:	df 93       	push	r29
    34d6:	cd b7       	in	r28, 0x3d	; 61
    34d8:	de b7       	in	r29, 0x3e	; 62
    34da:	cd 52       	subi	r28, 0x2D	; 45
    34dc:	d2 40       	sbci	r29, 0x02	; 2
    34de:	0f b6       	in	r0, 0x3f	; 63
    34e0:	f8 94       	cli
    34e2:	de bf       	out	0x3e, r29	; 62
    34e4:	0f be       	out	0x3f, r0	; 63
    34e6:	cd bf       	out	0x3d, r28	; 61
    34e8:	c2 5e       	subi	r28, 0xE2	; 226
    34ea:	dd 4f       	sbci	r29, 0xFD	; 253
    34ec:	99 83       	std	Y+1, r25	; 0x01
    34ee:	88 83       	st	Y, r24
    34f0:	ce 51       	subi	r28, 0x1E	; 30
    34f2:	d2 40       	sbci	r29, 0x02	; 2
	//TEMPORARY PRINTING FOR DEBUGGING PURPOSES
	serial.writestrln(" RUNNING "); serial.writestrln("");
    34f4:	6c 01       	movw	r12, r24
    34f6:	2f ef       	ldi	r18, 0xFF	; 255
    34f8:	c2 1a       	sub	r12, r18
    34fa:	d2 0a       	sbc	r13, r18
    34fc:	61 ef       	ldi	r22, 0xF1	; 241
    34fe:	70 e0       	ldi	r23, 0x00	; 0
    3500:	c6 01       	movw	r24, r12
    3502:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN6Serial10writestrlnEPc>
    3506:	63 ec       	ldi	r22, 0xC3	; 195
    3508:	70 e0       	ldi	r23, 0x00	; 0
    350a:	c6 01       	movw	r24, r12
    350c:	0e 94 ae 1c 	call	0x395c	; 0x395c <_ZN6Serial10writestrlnEPc>
	
	dumpmem();
    3510:	c2 5e       	subi	r28, 0xE2	; 226
    3512:	dd 4f       	sbci	r29, 0xFD	; 253
    3514:	88 81       	ld	r24, Y
    3516:	99 81       	ldd	r25, Y+1	; 0x01
    3518:	ce 51       	subi	r28, 0x1E	; 30
    351a:	d2 40       	sbci	r29, 0x02	; 2
    351c:	0e 94 4c 14 	call	0x2898	; 0x2898 <_ZN4QEPU7dumpmemEv>
	/*EEPROM FETCH*/
	#pragma region EEPROM_FETCH
	int * eeprom_mem=utils.str2intarr(eeprom.readall()); //TODO: READ ALL EEPROM
    3520:	c2 5e       	subi	r28, 0xE2	; 226
    3522:	dd 4f       	sbci	r29, 0xFD	; 253
    3524:	88 81       	ld	r24, Y
    3526:	99 81       	ldd	r25, Y+1	; 0x01
    3528:	ce 51       	subi	r28, 0x1E	; 30
    352a:	d2 40       	sbci	r29, 0x02	; 2
    352c:	0e 94 6f 02 	call	0x4de	; 0x4de <_ZN6EEProm7readallEv>
    3530:	bc 01       	movw	r22, r24
    3532:	c2 5e       	subi	r28, 0xE2	; 226
    3534:	dd 4f       	sbci	r29, 0xFD	; 253
    3536:	88 81       	ld	r24, Y
    3538:	99 81       	ldd	r25, Y+1	; 0x01
    353a:	ce 51       	subi	r28, 0x1E	; 30
    353c:	d2 40       	sbci	r29, 0x02	; 2
    353e:	02 96       	adiw	r24, 0x02	; 2
    3540:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <_ZN4QEPU5Utils10str2intarrEPc>
    3544:	fc 01       	movw	r30, r24
    3546:	38 97       	sbiw	r30, 0x08	; 8
	int eeprom_mem_length=0;
    3548:	20 e0       	ldi	r18, 0x00	; 0
    354a:	30 e0       	ldi	r19, 0x00	; 0
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
    354c:	40 85       	ldd	r20, Z+8	; 0x08
    354e:	51 85       	ldd	r21, Z+9	; 0x09
    3550:	4f 3f       	cpi	r20, 0xFF	; 255
    3552:	51 05       	cpc	r21, r1
    3554:	a1 f4       	brne	.+40     	; 0x357e <_ZN4QEPU3runEv+0xcc>
    3556:	46 81       	ldd	r20, Z+6	; 0x06
    3558:	57 81       	ldd	r21, Z+7	; 0x07
    355a:	4f 3f       	cpi	r20, 0xFF	; 255
    355c:	51 05       	cpc	r21, r1
    355e:	79 f4       	brne	.+30     	; 0x357e <_ZN4QEPU3runEv+0xcc>
    3560:	44 81       	ldd	r20, Z+4	; 0x04
    3562:	55 81       	ldd	r21, Z+5	; 0x05
    3564:	4f 3f       	cpi	r20, 0xFF	; 255
    3566:	51 05       	cpc	r21, r1
    3568:	51 f4       	brne	.+20     	; 0x357e <_ZN4QEPU3runEv+0xcc>
    356a:	42 81       	ldd	r20, Z+2	; 0x02
    356c:	53 81       	ldd	r21, Z+3	; 0x03
    356e:	4f 3f       	cpi	r20, 0xFF	; 255
    3570:	51 05       	cpc	r21, r1
    3572:	29 f4       	brne	.+10     	; 0x357e <_ZN4QEPU3runEv+0xcc>
    3574:	40 81       	ld	r20, Z
    3576:	51 81       	ldd	r21, Z+1	; 0x01
    3578:	4f 3f       	cpi	r20, 0xFF	; 255
    357a:	51 05       	cpc	r21, r1
    357c:	21 f0       	breq	.+8      	; 0x3586 <_ZN4QEPU3runEv+0xd4>
    357e:	2f 5f       	subi	r18, 0xFF	; 255
    3580:	3f 4f       	sbci	r19, 0xFF	; 255
    3582:	32 96       	adiw	r30, 0x02	; 2
    3584:	e3 cf       	rjmp	.-58     	; 0x354c <_ZN4QEPU3runEv+0x9a>
    3586:	a9 01       	movw	r20, r18
    3588:	44 50       	subi	r20, 0x04	; 4
    358a:	51 09       	sbc	r21, r1
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
	for(int i=0;i<eeprom_mem_length;i++){
    358c:	14 16       	cp	r1, r20
    358e:	15 06       	cpc	r1, r21
    3590:	0c f0       	brlt	.+2      	; 0x3594 <_ZN4QEPU3runEv+0xe2>
    3592:	90 c1       	rjmp	.+800    	; 0x38b4 <_ZN4QEPU3runEv+0x402>
    3594:	fc 01       	movw	r30, r24
    3596:	25 50       	subi	r18, 0x05	; 5
    3598:	31 09       	sbc	r19, r1
    359a:	40 e0       	ldi	r20, 0x00	; 0
    359c:	50 e0       	ldi	r21, 0x00	; 0
	int * eeprom_mem=utils.str2intarr(eeprom.readall()); //TODO: READ ALL EEPROM
	int eeprom_mem_length=0;
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
    359e:	80 e0       	ldi	r24, 0x00	; 0
    35a0:	90 e0       	ldi	r25, 0x00	; 0
    35a2:	ca 5d       	subi	r28, 0xDA	; 218
    35a4:	dd 4f       	sbci	r29, 0xFD	; 253
    35a6:	19 82       	std	Y+1, r1	; 0x01
    35a8:	18 82       	st	Y, r1
    35aa:	c6 52       	subi	r28, 0x26	; 38
    35ac:	d2 40       	sbci	r29, 0x02	; 2
	for(int i=0;i<eeprom_mem_length;i++){
		if(eeprom_splittedx>=INSTR_WIDTH) {line++;eeprom_splittedx=0;} 
		eeprom_splitted[line][eeprom_splittedx++]=eeprom_mem[i];
    35ae:	1d e0       	ldi	r17, 0x0D	; 13
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
	for(int i=0;i<eeprom_mem_length;i++){
		if(eeprom_splittedx>=INSTR_WIDTH) {line++;eeprom_splittedx=0;} 
    35b0:	91 2c       	mov	r9, r1
    35b2:	a1 2c       	mov	r10, r1
    35b4:	61 2c       	mov	r6, r1
    35b6:	71 2c       	mov	r7, r1
    35b8:	0c c0       	rjmp	.+24     	; 0x35d2 <_ZN4QEPU3runEv+0x120>
    35ba:	6d 30       	cpi	r22, 0x0D	; 13
    35bc:	71 05       	cpc	r23, r1
    35be:	34 f0       	brlt	.+12     	; 0x35cc <_ZN4QEPU3runEv+0x11a>
    35c0:	8f ef       	ldi	r24, 0xFF	; 255
    35c2:	68 1a       	sub	r6, r24
    35c4:	78 0a       	sbc	r7, r24
    35c6:	89 2d       	mov	r24, r9
    35c8:	9a 2d       	mov	r25, r10
    35ca:	01 c0       	rjmp	.+2      	; 0x35ce <_ZN4QEPU3runEv+0x11c>
		eeprom_splitted[line][eeprom_splittedx++]=eeprom_mem[i];
    35cc:	cb 01       	movw	r24, r22
    35ce:	4f 5f       	subi	r20, 0xFF	; 255
    35d0:	5f 4f       	sbci	r21, 0xFF	; 255
    35d2:	bc 01       	movw	r22, r24
    35d4:	6f 5f       	subi	r22, 0xFF	; 255
    35d6:	7f 4f       	sbci	r23, 0xFF	; 255
    35d8:	c1 90       	ld	r12, Z+
    35da:	d1 90       	ld	r13, Z+
    35dc:	16 9d       	mul	r17, r6
    35de:	d0 01       	movw	r26, r0
    35e0:	17 9d       	mul	r17, r7
    35e2:	b0 0d       	add	r27, r0
    35e4:	11 24       	eor	r1, r1
    35e6:	8a 0f       	add	r24, r26
    35e8:	9b 1f       	adc	r25, r27
    35ea:	dc 01       	movw	r26, r24
    35ec:	aa 0f       	add	r26, r26
    35ee:	bb 1f       	adc	r27, r27
    35f0:	81 e0       	ldi	r24, 0x01	; 1
    35f2:	90 e0       	ldi	r25, 0x00	; 0
    35f4:	8c 0f       	add	r24, r28
    35f6:	9d 1f       	adc	r25, r29
    35f8:	a8 0f       	add	r26, r24
    35fa:	b9 1f       	adc	r27, r25
    35fc:	cd 92       	st	X+, r12
    35fe:	dc 92       	st	X, r13
	int eeprom_mem_length=0;
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
	for(int i=0;i<eeprom_mem_length;i++){
    3600:	42 17       	cp	r20, r18
    3602:	53 07       	cpc	r21, r19
    3604:	d1 f6       	brne	.-76     	; 0x35ba <_ZN4QEPU3runEv+0x108>
    3606:	ca 5d       	subi	r28, 0xDA	; 218
    3608:	dd 4f       	sbci	r29, 0xFD	; 253
    360a:	79 82       	std	Y+1, r7	; 0x01
    360c:	68 82       	st	Y, r6
    360e:	c6 52       	subi	r28, 0x26	; 38
    3610:	d2 40       	sbci	r29, 0x02	; 2
	}
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
    3612:	c2 5e       	subi	r28, 0xE2	; 226
    3614:	dd 4f       	sbci	r29, 0xFD	; 253
    3616:	e8 81       	ld	r30, Y
    3618:	f9 81       	ldd	r31, Y+1	; 0x01
    361a:	ce 51       	subi	r28, 0x1E	; 30
    361c:	d2 40       	sbci	r29, 0x02	; 2
    361e:	14 82       	std	Z+4, r1	; 0x04
    3620:	13 82       	std	Z+3, r1	; 0x03
    3622:	16 14       	cp	r1, r6
    3624:	17 04       	cpc	r1, r7
    3626:	0c f0       	brlt	.+2      	; 0x362a <_ZN4QEPU3runEv+0x178>
    3628:	3c c1       	rjmp	.+632    	; 0x38a2 <_ZN4QEPU3runEv+0x3f0>
    362a:	80 e0       	ldi	r24, 0x00	; 0
    362c:	90 e0       	ldi	r25, 0x00	; 0
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]=""; char op3s[OP3_WIDTH]="";	
    362e:	1e 01       	movw	r2, r28
    3630:	39 ee       	ldi	r19, 0xE9	; 233
    3632:	23 1a       	sub	r2, r19
    3634:	3d ef       	ldi	r19, 0xFD	; 253
    3636:	33 0a       	sbc	r3, r19
    3638:	2e 01       	movw	r4, r28
    363a:	e0 ef       	ldi	r30, 0xF0	; 240
    363c:	4e 1a       	sub	r4, r30
    363e:	ed ef       	ldi	r30, 0xFD	; 253
    3640:	5e 0a       	sbc	r5, r30
    3642:	3e 01       	movw	r6, r28
    3644:	f7 ef       	ldi	r31, 0xF7	; 247
    3646:	6f 1a       	sub	r6, r31
    3648:	fd ef       	ldi	r31, 0xFD	; 253
    364a:	7f 0a       	sbc	r7, r31
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
			sprintf(op1s,"%s%x",op1s,eeprom_splitted[program_counter][k+FIXED_OP1_OFFSET]); // HEX CONCAT TO STRING (OP1 FETCH)
    364c:	0f 2e       	mov	r0, r31
    364e:	fb ef       	ldi	r31, 0xFB	; 251
    3650:	8f 2e       	mov	r8, r31
    3652:	f0 e0       	ldi	r31, 0x00	; 0
    3654:	9f 2e       	mov	r9, r31
    3656:	f0 2d       	mov	r31, r0
    3658:	c8 5d       	subi	r28, 0xD8	; 216
    365a:	dd 4f       	sbci	r29, 0xFD	; 253
    365c:	28 82       	st	Y, r2
    365e:	c8 52       	subi	r28, 0x28	; 40
    3660:	d2 40       	sbci	r29, 0x02	; 2
    3662:	c7 5d       	subi	r28, 0xD7	; 215
    3664:	dd 4f       	sbci	r29, 0xFD	; 253
    3666:	38 82       	st	Y, r3
    3668:	c9 52       	subi	r28, 0x29	; 41
    366a:	d2 40       	sbci	r29, 0x02	; 2
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
    366c:	c6 5d       	subi	r28, 0xD6	; 214
    366e:	dd 4f       	sbci	r29, 0xFD	; 253
    3670:	48 82       	st	Y, r4
    3672:	ca 52       	subi	r28, 0x2A	; 42
    3674:	d2 40       	sbci	r29, 0x02	; 2
    3676:	c5 5d       	subi	r28, 0xD5	; 213
    3678:	dd 4f       	sbci	r29, 0xFD	; 253
    367a:	58 82       	st	Y, r5
    367c:	cb 52       	subi	r28, 0x2B	; 43
    367e:	d2 40       	sbci	r29, 0x02	; 2
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
    3680:	c4 5d       	subi	r28, 0xD4	; 212
    3682:	dd 4f       	sbci	r29, 0xFD	; 253
    3684:	68 82       	st	Y, r6
    3686:	cc 52       	subi	r28, 0x2C	; 44
    3688:	d2 40       	sbci	r29, 0x02	; 2
    368a:	c3 5d       	subi	r28, 0xD3	; 211
    368c:	dd 4f       	sbci	r29, 0xFD	; 253
    368e:	78 82       	st	Y, r7
    3690:	cd 52       	subi	r28, 0x2D	; 45
    3692:	d2 40       	sbci	r29, 0x02	; 2
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]=""; char op3s[OP3_WIDTH]="";	
    3694:	f1 01       	movw	r30, r2
    3696:	10 82       	st	Z, r1
    3698:	11 82       	std	Z+1, r1	; 0x01
    369a:	12 82       	std	Z+2, r1	; 0x02
    369c:	13 82       	std	Z+3, r1	; 0x03
    369e:	14 82       	std	Z+4, r1	; 0x04
    36a0:	15 82       	std	Z+5, r1	; 0x05
    36a2:	16 82       	std	Z+6, r1	; 0x06
    36a4:	f2 01       	movw	r30, r4
    36a6:	10 82       	st	Z, r1
    36a8:	11 82       	std	Z+1, r1	; 0x01
    36aa:	12 82       	std	Z+2, r1	; 0x02
    36ac:	13 82       	std	Z+3, r1	; 0x03
    36ae:	14 82       	std	Z+4, r1	; 0x04
    36b0:	15 82       	std	Z+5, r1	; 0x05
    36b2:	16 82       	std	Z+6, r1	; 0x06
    36b4:	f3 01       	movw	r30, r6
    36b6:	10 82       	st	Z, r1
    36b8:	11 82       	std	Z+1, r1	; 0x01
    36ba:	12 82       	std	Z+2, r1	; 0x02
    36bc:	13 82       	std	Z+3, r1	; 0x03
    36be:	14 82       	std	Z+4, r1	; 0x04
    36c0:	15 82       	std	Z+5, r1	; 0x05
    36c2:	16 82       	std	Z+6, r1	; 0x06
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
    36c4:	2a e1       	ldi	r18, 0x1A	; 26
    36c6:	28 9f       	mul	r18, r24
    36c8:	f0 01       	movw	r30, r0
    36ca:	29 9f       	mul	r18, r25
    36cc:	f0 0d       	add	r31, r0
    36ce:	11 24       	eor	r1, r1
    36d0:	21 e0       	ldi	r18, 0x01	; 1
    36d2:	30 e0       	ldi	r19, 0x00	; 0
    36d4:	2c 0f       	add	r18, r28
    36d6:	3d 1f       	adc	r19, r29
    36d8:	e2 0f       	add	r30, r18
    36da:	f3 1f       	adc	r31, r19
    36dc:	80 81       	ld	r24, Z
    36de:	91 81       	ldd	r25, Z+1	; 0x01
    36e0:	c0 5e       	subi	r28, 0xE0	; 224
    36e2:	dd 4f       	sbci	r29, 0xFD	; 253
    36e4:	99 83       	std	Y+1, r25	; 0x01
    36e6:	88 83       	st	Y, r24
    36e8:	c0 52       	subi	r28, 0x20	; 32
    36ea:	d2 40       	sbci	r29, 0x02	; 2
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
    36ec:	c1 2c       	mov	r12, r1
    36ee:	d1 2c       	mov	r13, r1
    36f0:	c2 5e       	subi	r28, 0xE2	; 226
    36f2:	dd 4f       	sbci	r29, 0xFD	; 253
    36f4:	a8 80       	ld	r10, Y
    36f6:	b9 80       	ldd	r11, Y+1	; 0x01
    36f8:	ce 51       	subi	r28, 0x1E	; 30
    36fa:	d2 40       	sbci	r29, 0x02	; 2
			sprintf(op1s,"%s%x",op1s,eeprom_splitted[program_counter][k+FIXED_OP1_OFFSET]); // HEX CONCAT TO STRING (OP1 FETCH)
    36fc:	9f ef       	ldi	r25, 0xFF	; 255
    36fe:	c9 1a       	sub	r12, r25
    3700:	d9 0a       	sbc	r13, r25
    3702:	f5 01       	movw	r30, r10
    3704:	83 81       	ldd	r24, Z+3	; 0x03
    3706:	94 81       	ldd	r25, Z+4	; 0x04
    3708:	2d e0       	ldi	r18, 0x0D	; 13
    370a:	28 9f       	mul	r18, r24
    370c:	f0 01       	movw	r30, r0
    370e:	29 9f       	mul	r18, r25
    3710:	f0 0d       	add	r31, r0
    3712:	11 24       	eor	r1, r1
    3714:	ec 0d       	add	r30, r12
    3716:	fd 1d       	adc	r31, r13
    3718:	ee 0f       	add	r30, r30
    371a:	ff 1f       	adc	r31, r31
    371c:	81 e0       	ldi	r24, 0x01	; 1
    371e:	90 e0       	ldi	r25, 0x00	; 0
    3720:	8c 0f       	add	r24, r28
    3722:	9d 1f       	adc	r25, r29
    3724:	e8 0f       	add	r30, r24
    3726:	f9 1f       	adc	r31, r25
    3728:	81 81       	ldd	r24, Z+1	; 0x01
    372a:	8f 93       	push	r24
    372c:	80 81       	ld	r24, Z
    372e:	8f 93       	push	r24
    3730:	3f 92       	push	r3
    3732:	2f 92       	push	r2
    3734:	9f 92       	push	r9
    3736:	8f 92       	push	r8
    3738:	3f 92       	push	r3
    373a:	2f 92       	push	r2
    373c:	0e 94 cd 23 	call	0x479a	; 0x479a <sprintf>
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
    3740:	f5 01       	movw	r30, r10
    3742:	83 81       	ldd	r24, Z+3	; 0x03
    3744:	94 81       	ldd	r25, Z+4	; 0x04
    3746:	2d e0       	ldi	r18, 0x0D	; 13
    3748:	28 9f       	mul	r18, r24
    374a:	f0 01       	movw	r30, r0
    374c:	29 9f       	mul	r18, r25
    374e:	f0 0d       	add	r31, r0
    3750:	11 24       	eor	r1, r1
    3752:	ec 0d       	add	r30, r12
    3754:	fd 1d       	adc	r31, r13
    3756:	34 96       	adiw	r30, 0x04	; 4
    3758:	ee 0f       	add	r30, r30
    375a:	ff 1f       	adc	r31, r31
    375c:	81 e0       	ldi	r24, 0x01	; 1
    375e:	90 e0       	ldi	r25, 0x00	; 0
    3760:	8c 0f       	add	r24, r28
    3762:	9d 1f       	adc	r25, r29
    3764:	e8 0f       	add	r30, r24
    3766:	f9 1f       	adc	r31, r25
    3768:	81 81       	ldd	r24, Z+1	; 0x01
    376a:	8f 93       	push	r24
    376c:	80 81       	ld	r24, Z
    376e:	8f 93       	push	r24
    3770:	5f 92       	push	r5
    3772:	4f 92       	push	r4
    3774:	9f 92       	push	r9
    3776:	8f 92       	push	r8
    3778:	5f 92       	push	r5
    377a:	4f 92       	push	r4
    377c:	0e 94 cd 23 	call	0x479a	; 0x479a <sprintf>
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
    3780:	f5 01       	movw	r30, r10
    3782:	83 81       	ldd	r24, Z+3	; 0x03
    3784:	94 81       	ldd	r25, Z+4	; 0x04
    3786:	2d e0       	ldi	r18, 0x0D	; 13
    3788:	28 9f       	mul	r18, r24
    378a:	f0 01       	movw	r30, r0
    378c:	29 9f       	mul	r18, r25
    378e:	f0 0d       	add	r31, r0
    3790:	11 24       	eor	r1, r1
    3792:	ec 0d       	add	r30, r12
    3794:	fd 1d       	adc	r31, r13
    3796:	38 96       	adiw	r30, 0x08	; 8
    3798:	ee 0f       	add	r30, r30
    379a:	ff 1f       	adc	r31, r31
    379c:	81 e0       	ldi	r24, 0x01	; 1
    379e:	90 e0       	ldi	r25, 0x00	; 0
    37a0:	8c 0f       	add	r24, r28
    37a2:	9d 1f       	adc	r25, r29
    37a4:	e8 0f       	add	r30, r24
    37a6:	f9 1f       	adc	r31, r25
    37a8:	81 81       	ldd	r24, Z+1	; 0x01
    37aa:	8f 93       	push	r24
    37ac:	80 81       	ld	r24, Z
    37ae:	8f 93       	push	r24
    37b0:	7f 92       	push	r7
    37b2:	6f 92       	push	r6
    37b4:	9f 92       	push	r9
    37b6:	8f 92       	push	r8
    37b8:	7f 92       	push	r7
    37ba:	6f 92       	push	r6
    37bc:	0e 94 cd 23 	call	0x479a	; 0x479a <sprintf>
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]=""; char op3s[OP3_WIDTH]="";	
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
    37c0:	0f b6       	in	r0, 0x3f	; 63
    37c2:	f8 94       	cli
    37c4:	de bf       	out	0x3e, r29	; 62
    37c6:	0f be       	out	0x3f, r0	; 63
    37c8:	cd bf       	out	0x3d, r28	; 61
    37ca:	f4 e0       	ldi	r31, 0x04	; 4
    37cc:	cf 16       	cp	r12, r31
    37ce:	d1 04       	cpc	r13, r1
    37d0:	09 f0       	breq	.+2      	; 0x37d4 <_ZN4QEPU3runEv+0x322>
    37d2:	94 cf       	rjmp	.-216    	; 0x36fc <_ZN4QEPU3runEv+0x24a>
			sprintf(op1s,"%s%x",op1s,eeprom_splitted[program_counter][k+FIXED_OP1_OFFSET]); // HEX CONCAT TO STRING (OP1 FETCH)
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
		}
		execute(func,strtol(op1s,NULL,16),strtol(op2s,NULL,16),strtol(op3s,NULL,16)); //*INSTRUCTION DECODE AND EXECUTE*/
    37d4:	40 e1       	ldi	r20, 0x10	; 16
    37d6:	50 e0       	ldi	r21, 0x00	; 0
    37d8:	60 e0       	ldi	r22, 0x00	; 0
    37da:	70 e0       	ldi	r23, 0x00	; 0
    37dc:	c4 5d       	subi	r28, 0xD4	; 212
    37de:	dd 4f       	sbci	r29, 0xFD	; 253
    37e0:	88 81       	ld	r24, Y
    37e2:	cc 52       	subi	r28, 0x2C	; 44
    37e4:	d2 40       	sbci	r29, 0x02	; 2
    37e6:	c3 5d       	subi	r28, 0xD3	; 211
    37e8:	dd 4f       	sbci	r29, 0xFD	; 253
    37ea:	98 81       	ld	r25, Y
    37ec:	cd 52       	subi	r28, 0x2D	; 45
    37ee:	d2 40       	sbci	r29, 0x02	; 2
    37f0:	0e 94 91 22 	call	0x4522	; 0x4522 <strtol>
    37f4:	5b 01       	movw	r10, r22
    37f6:	6c 01       	movw	r12, r24
    37f8:	40 e1       	ldi	r20, 0x10	; 16
    37fa:	50 e0       	ldi	r21, 0x00	; 0
    37fc:	60 e0       	ldi	r22, 0x00	; 0
    37fe:	70 e0       	ldi	r23, 0x00	; 0
    3800:	c6 5d       	subi	r28, 0xD6	; 214
    3802:	dd 4f       	sbci	r29, 0xFD	; 253
    3804:	88 81       	ld	r24, Y
    3806:	ca 52       	subi	r28, 0x2A	; 42
    3808:	d2 40       	sbci	r29, 0x02	; 2
    380a:	c5 5d       	subi	r28, 0xD5	; 213
    380c:	dd 4f       	sbci	r29, 0xFD	; 253
    380e:	98 81       	ld	r25, Y
    3810:	cb 52       	subi	r28, 0x2B	; 43
    3812:	d2 40       	sbci	r29, 0x02	; 2
    3814:	0e 94 91 22 	call	0x4522	; 0x4522 <strtol>
    3818:	ce 5d       	subi	r28, 0xDE	; 222
    381a:	dd 4f       	sbci	r29, 0xFD	; 253
    381c:	68 83       	st	Y, r22
    381e:	79 83       	std	Y+1, r23	; 0x01
    3820:	8a 83       	std	Y+2, r24	; 0x02
    3822:	9b 83       	std	Y+3, r25	; 0x03
    3824:	c2 52       	subi	r28, 0x22	; 34
    3826:	d2 40       	sbci	r29, 0x02	; 2
    3828:	40 e1       	ldi	r20, 0x10	; 16
    382a:	50 e0       	ldi	r21, 0x00	; 0
    382c:	60 e0       	ldi	r22, 0x00	; 0
    382e:	70 e0       	ldi	r23, 0x00	; 0
    3830:	c8 5d       	subi	r28, 0xD8	; 216
    3832:	dd 4f       	sbci	r29, 0xFD	; 253
    3834:	88 81       	ld	r24, Y
    3836:	c8 52       	subi	r28, 0x28	; 40
    3838:	d2 40       	sbci	r29, 0x02	; 2
    383a:	c7 5d       	subi	r28, 0xD7	; 215
    383c:	dd 4f       	sbci	r29, 0xFD	; 253
    383e:	98 81       	ld	r25, Y
    3840:	c9 52       	subi	r28, 0x29	; 41
    3842:	d2 40       	sbci	r29, 0x02	; 2
    3844:	0e 94 91 22 	call	0x4522	; 0x4522 <strtol>
    3848:	9b 01       	movw	r18, r22
    384a:	ac 01       	movw	r20, r24
    384c:	ce 5d       	subi	r28, 0xDE	; 222
    384e:	dd 4f       	sbci	r29, 0xFD	; 253
    3850:	e8 80       	ld	r14, Y
    3852:	f9 80       	ldd	r15, Y+1	; 0x01
    3854:	0a 81       	ldd	r16, Y+2	; 0x02
    3856:	1b 81       	ldd	r17, Y+3	; 0x03
    3858:	c2 52       	subi	r28, 0x22	; 34
    385a:	d2 40       	sbci	r29, 0x02	; 2
    385c:	c0 5e       	subi	r28, 0xE0	; 224
    385e:	dd 4f       	sbci	r29, 0xFD	; 253
    3860:	68 81       	ld	r22, Y
    3862:	79 81       	ldd	r23, Y+1	; 0x01
    3864:	c0 52       	subi	r28, 0x20	; 32
    3866:	d2 40       	sbci	r29, 0x02	; 2
    3868:	c2 5e       	subi	r28, 0xE2	; 226
    386a:	dd 4f       	sbci	r29, 0xFD	; 253
    386c:	88 81       	ld	r24, Y
    386e:	99 81       	ldd	r25, Y+1	; 0x01
    3870:	ce 51       	subi	r28, 0x1E	; 30
    3872:	d2 40       	sbci	r29, 0x02	; 2
    3874:	0e 94 a3 15 	call	0x2b46	; 0x2b46 <_ZN4QEPU7executeEilll>
	}
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
    3878:	c2 5e       	subi	r28, 0xE2	; 226
    387a:	dd 4f       	sbci	r29, 0xFD	; 253
    387c:	e8 81       	ld	r30, Y
    387e:	f9 81       	ldd	r31, Y+1	; 0x01
    3880:	ce 51       	subi	r28, 0x1E	; 30
    3882:	d2 40       	sbci	r29, 0x02	; 2
    3884:	83 81       	ldd	r24, Z+3	; 0x03
    3886:	94 81       	ldd	r25, Z+4	; 0x04
    3888:	01 96       	adiw	r24, 0x01	; 1
    388a:	94 83       	std	Z+4, r25	; 0x04
    388c:	83 83       	std	Z+3, r24	; 0x03
    388e:	ca 5d       	subi	r28, 0xDA	; 218
    3890:	dd 4f       	sbci	r29, 0xFD	; 253
    3892:	28 81       	ld	r18, Y
    3894:	39 81       	ldd	r19, Y+1	; 0x01
    3896:	c6 52       	subi	r28, 0x26	; 38
    3898:	d2 40       	sbci	r29, 0x02	; 2
    389a:	82 17       	cp	r24, r18
    389c:	93 07       	cpc	r25, r19
    389e:	0c f4       	brge	.+2      	; 0x38a2 <_ZN4QEPU3runEv+0x3f0>
    38a0:	f9 ce       	rjmp	.-526    	; 0x3694 <_ZN4QEPU3runEv+0x1e2>
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
		}
		execute(func,strtol(op1s,NULL,16),strtol(op2s,NULL,16),strtol(op3s,NULL,16)); //*INSTRUCTION DECODE AND EXECUTE*/
	}
	dumpmem();
    38a2:	c2 5e       	subi	r28, 0xE2	; 226
    38a4:	dd 4f       	sbci	r29, 0xFD	; 253
    38a6:	88 81       	ld	r24, Y
    38a8:	99 81       	ldd	r25, Y+1	; 0x01
    38aa:	ce 51       	subi	r28, 0x1E	; 30
    38ac:	d2 40       	sbci	r29, 0x02	; 2
    38ae:	0e 94 4c 14 	call	0x2898	; 0x2898 <_ZN4QEPU7dumpmemEv>
    38b2:	09 c0       	rjmp	.+18     	; 0x38c6 <_ZN4QEPU3runEv+0x414>
	}
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
    38b4:	c2 5e       	subi	r28, 0xE2	; 226
    38b6:	dd 4f       	sbci	r29, 0xFD	; 253
    38b8:	e8 81       	ld	r30, Y
    38ba:	f9 81       	ldd	r31, Y+1	; 0x01
    38bc:	ce 51       	subi	r28, 0x1E	; 30
    38be:	d2 40       	sbci	r29, 0x02	; 2
    38c0:	14 82       	std	Z+4, r1	; 0x04
    38c2:	13 82       	std	Z+3, r1	; 0x03
    38c4:	ee cf       	rjmp	.-36     	; 0x38a2 <_ZN4QEPU3runEv+0x3f0>
		}
		execute(func,strtol(op1s,NULL,16),strtol(op2s,NULL,16),strtol(op3s,NULL,16)); //*INSTRUCTION DECODE AND EXECUTE*/
	}
	dumpmem();
	#pragma endregion
}
    38c6:	c3 5d       	subi	r28, 0xD3	; 211
    38c8:	dd 4f       	sbci	r29, 0xFD	; 253
    38ca:	0f b6       	in	r0, 0x3f	; 63
    38cc:	f8 94       	cli
    38ce:	de bf       	out	0x3e, r29	; 62
    38d0:	0f be       	out	0x3f, r0	; 63
    38d2:	cd bf       	out	0x3d, r28	; 61
    38d4:	df 91       	pop	r29
    38d6:	cf 91       	pop	r28
    38d8:	1f 91       	pop	r17
    38da:	0f 91       	pop	r16
    38dc:	ff 90       	pop	r15
    38de:	ef 90       	pop	r14
    38e0:	df 90       	pop	r13
    38e2:	cf 90       	pop	r12
    38e4:	bf 90       	pop	r11
    38e6:	af 90       	pop	r10
    38e8:	9f 90       	pop	r9
    38ea:	8f 90       	pop	r8
    38ec:	7f 90       	pop	r7
    38ee:	6f 90       	pop	r6
    38f0:	5f 90       	pop	r5
    38f2:	4f 90       	pop	r4
    38f4:	3f 90       	pop	r3
    38f6:	2f 90       	pop	r2
    38f8:	08 95       	ret

000038fa <main>:
#include "qepu.h"
int main(void){
    38fa:	cf 93       	push	r28
    38fc:	df 93       	push	r29
    38fe:	00 d0       	rcall	.+0      	; 0x3900 <main+0x6>
    3900:	00 d0       	rcall	.+0      	; 0x3902 <main+0x8>
    3902:	00 d0       	rcall	.+0      	; 0x3904 <main+0xa>
    3904:	cd b7       	in	r28, 0x3d	; 61
    3906:	de b7       	in	r29, 0x3e	; 62
	QEPU qepu;
    3908:	ce 01       	movw	r24, r28
    390a:	01 96       	adiw	r24, 0x01	; 1
    390c:	0e 94 db 13 	call	0x27b6	; 0x27b6 <_ZN4QEPUC1Ev>
	qepu.run();
    3910:	ce 01       	movw	r24, r28
    3912:	01 96       	adiw	r24, 0x01	; 1
    3914:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <_ZN4QEPU3runEv>
    3918:	ff cf       	rjmp	.-2      	; 0x3918 <main+0x1e>

0000391a <_ZN6SerialC1Ev>:
    391a:	83 e3       	ldi	r24, 0x33	; 51
    391c:	89 b9       	out	0x09, r24	; 9
    391e:	10 bc       	out	0x20, r1	; 32
    3920:	86 e8       	ldi	r24, 0x86	; 134
    3922:	80 bd       	out	0x20, r24	; 32
    3924:	88 e1       	ldi	r24, 0x18	; 24
    3926:	8a b9       	out	0x0a, r24	; 10
    3928:	08 95       	ret

0000392a <_ZN6Serial5writeEc>:
    392a:	5d 9b       	sbis	0x0b, 5	; 11
    392c:	fe cf       	rjmp	.-4      	; 0x392a <_ZN6Serial5writeEc>
    392e:	6c b9       	out	0x0c, r22	; 12
    3930:	08 95       	ret

00003932 <_ZN6Serial8writestrEPc>:
    3932:	0f 93       	push	r16
    3934:	1f 93       	push	r17
    3936:	cf 93       	push	r28
    3938:	df 93       	push	r29
    393a:	8c 01       	movw	r16, r24
    393c:	eb 01       	movw	r28, r22
    393e:	68 81       	ld	r22, Y
    3940:	66 23       	and	r22, r22
    3942:	39 f0       	breq	.+14     	; 0x3952 <_ZN6Serial8writestrEPc+0x20>
    3944:	21 96       	adiw	r28, 0x01	; 1
    3946:	c8 01       	movw	r24, r16
    3948:	0e 94 95 1c 	call	0x392a	; 0x392a <_ZN6Serial5writeEc>
    394c:	69 91       	ld	r22, Y+
    394e:	61 11       	cpse	r22, r1
    3950:	fa cf       	rjmp	.-12     	; 0x3946 <_ZN6Serial8writestrEPc+0x14>
    3952:	df 91       	pop	r29
    3954:	cf 91       	pop	r28
    3956:	1f 91       	pop	r17
    3958:	0f 91       	pop	r16
    395a:	08 95       	ret

0000395c <_ZN6Serial10writestrlnEPc>:
    395c:	cf 93       	push	r28
    395e:	df 93       	push	r29
    3960:	ec 01       	movw	r28, r24
    3962:	0e 94 99 1c 	call	0x3932	; 0x3932 <_ZN6Serial8writestrEPc>
    3966:	6d e0       	ldi	r22, 0x0D	; 13
    3968:	ce 01       	movw	r24, r28
    396a:	0e 94 95 1c 	call	0x392a	; 0x392a <_ZN6Serial5writeEc>
    396e:	df 91       	pop	r29
    3970:	cf 91       	pop	r28
    3972:	08 95       	ret

00003974 <acos>:
    3974:	9f 93       	push	r25
    3976:	9f 77       	andi	r25, 0x7F	; 127
    3978:	a6 d1       	rcall	.+844    	; 0x3cc6 <__fp_arccos>
    397a:	0f 90       	pop	r0
    397c:	00 20       	and	r0, r0
    397e:	3a f4       	brpl	.+14     	; 0x398e <acos+0x1a>
    3980:	90 58       	subi	r25, 0x80	; 128
    3982:	a2 ea       	ldi	r26, 0xA2	; 162
    3984:	2a ed       	ldi	r18, 0xDA	; 218
    3986:	3f e0       	ldi	r19, 0x0F	; 15
    3988:	49 e4       	ldi	r20, 0x49	; 73
    398a:	50 e4       	ldi	r21, 0x40	; 64
    398c:	13 d0       	rcall	.+38     	; 0x39b4 <__addsf3x>
    398e:	3e c2       	rjmp	.+1148   	; 0x3e0c <__fp_round>

00003990 <__subsf3>:
    3990:	50 58       	subi	r21, 0x80	; 128

00003992 <__addsf3>:
    3992:	bb 27       	eor	r27, r27
    3994:	aa 27       	eor	r26, r26
    3996:	0e d0       	rcall	.+28     	; 0x39b4 <__addsf3x>
    3998:	39 c2       	rjmp	.+1138   	; 0x3e0c <__fp_round>
    399a:	02 d2       	rcall	.+1028   	; 0x3da0 <__fp_pscA>
    399c:	30 f0       	brcs	.+12     	; 0x39aa <__addsf3+0x18>
    399e:	07 d2       	rcall	.+1038   	; 0x3dae <__fp_pscB>
    39a0:	20 f0       	brcs	.+8      	; 0x39aa <__addsf3+0x18>
    39a2:	31 f4       	brne	.+12     	; 0x39b0 <__addsf3+0x1e>
    39a4:	9f 3f       	cpi	r25, 0xFF	; 255
    39a6:	11 f4       	brne	.+4      	; 0x39ac <__addsf3+0x1a>
    39a8:	1e f4       	brtc	.+6      	; 0x39b0 <__addsf3+0x1e>
    39aa:	d2 c1       	rjmp	.+932    	; 0x3d50 <__fp_nan>
    39ac:	0e f4       	brtc	.+2      	; 0x39b0 <__addsf3+0x1e>
    39ae:	e0 95       	com	r30
    39b0:	e7 fb       	bst	r30, 7
    39b2:	c8 c1       	rjmp	.+912    	; 0x3d44 <__fp_inf>

000039b4 <__addsf3x>:
    39b4:	e9 2f       	mov	r30, r25
    39b6:	4c d2       	rcall	.+1176   	; 0x3e50 <__fp_split3>
    39b8:	80 f3       	brcs	.-32     	; 0x399a <__addsf3+0x8>
    39ba:	ba 17       	cp	r27, r26
    39bc:	62 07       	cpc	r22, r18
    39be:	73 07       	cpc	r23, r19
    39c0:	84 07       	cpc	r24, r20
    39c2:	95 07       	cpc	r25, r21
    39c4:	18 f0       	brcs	.+6      	; 0x39cc <__addsf3x+0x18>
    39c6:	71 f4       	brne	.+28     	; 0x39e4 <__addsf3x+0x30>
    39c8:	9e f5       	brtc	.+102    	; 0x3a30 <__addsf3x+0x7c>
    39ca:	64 c2       	rjmp	.+1224   	; 0x3e94 <__fp_zero>
    39cc:	0e f4       	brtc	.+2      	; 0x39d0 <__addsf3x+0x1c>
    39ce:	e0 95       	com	r30
    39d0:	0b 2e       	mov	r0, r27
    39d2:	ba 2f       	mov	r27, r26
    39d4:	a0 2d       	mov	r26, r0
    39d6:	0b 01       	movw	r0, r22
    39d8:	b9 01       	movw	r22, r18
    39da:	90 01       	movw	r18, r0
    39dc:	0c 01       	movw	r0, r24
    39de:	ca 01       	movw	r24, r20
    39e0:	a0 01       	movw	r20, r0
    39e2:	11 24       	eor	r1, r1
    39e4:	ff 27       	eor	r31, r31
    39e6:	59 1b       	sub	r21, r25
    39e8:	99 f0       	breq	.+38     	; 0x3a10 <__addsf3x+0x5c>
    39ea:	59 3f       	cpi	r21, 0xF9	; 249
    39ec:	50 f4       	brcc	.+20     	; 0x3a02 <__addsf3x+0x4e>
    39ee:	50 3e       	cpi	r21, 0xE0	; 224
    39f0:	68 f1       	brcs	.+90     	; 0x3a4c <__addsf3x+0x98>
    39f2:	1a 16       	cp	r1, r26
    39f4:	f0 40       	sbci	r31, 0x00	; 0
    39f6:	a2 2f       	mov	r26, r18
    39f8:	23 2f       	mov	r18, r19
    39fa:	34 2f       	mov	r19, r20
    39fc:	44 27       	eor	r20, r20
    39fe:	58 5f       	subi	r21, 0xF8	; 248
    3a00:	f3 cf       	rjmp	.-26     	; 0x39e8 <__addsf3x+0x34>
    3a02:	46 95       	lsr	r20
    3a04:	37 95       	ror	r19
    3a06:	27 95       	ror	r18
    3a08:	a7 95       	ror	r26
    3a0a:	f0 40       	sbci	r31, 0x00	; 0
    3a0c:	53 95       	inc	r21
    3a0e:	c9 f7       	brne	.-14     	; 0x3a02 <__addsf3x+0x4e>
    3a10:	7e f4       	brtc	.+30     	; 0x3a30 <__addsf3x+0x7c>
    3a12:	1f 16       	cp	r1, r31
    3a14:	ba 0b       	sbc	r27, r26
    3a16:	62 0b       	sbc	r22, r18
    3a18:	73 0b       	sbc	r23, r19
    3a1a:	84 0b       	sbc	r24, r20
    3a1c:	ba f0       	brmi	.+46     	; 0x3a4c <__addsf3x+0x98>
    3a1e:	91 50       	subi	r25, 0x01	; 1
    3a20:	a1 f0       	breq	.+40     	; 0x3a4a <__addsf3x+0x96>
    3a22:	ff 0f       	add	r31, r31
    3a24:	bb 1f       	adc	r27, r27
    3a26:	66 1f       	adc	r22, r22
    3a28:	77 1f       	adc	r23, r23
    3a2a:	88 1f       	adc	r24, r24
    3a2c:	c2 f7       	brpl	.-16     	; 0x3a1e <__addsf3x+0x6a>
    3a2e:	0e c0       	rjmp	.+28     	; 0x3a4c <__addsf3x+0x98>
    3a30:	ba 0f       	add	r27, r26
    3a32:	62 1f       	adc	r22, r18
    3a34:	73 1f       	adc	r23, r19
    3a36:	84 1f       	adc	r24, r20
    3a38:	48 f4       	brcc	.+18     	; 0x3a4c <__addsf3x+0x98>
    3a3a:	87 95       	ror	r24
    3a3c:	77 95       	ror	r23
    3a3e:	67 95       	ror	r22
    3a40:	b7 95       	ror	r27
    3a42:	f7 95       	ror	r31
    3a44:	9e 3f       	cpi	r25, 0xFE	; 254
    3a46:	08 f0       	brcs	.+2      	; 0x3a4a <__addsf3x+0x96>
    3a48:	b3 cf       	rjmp	.-154    	; 0x39b0 <__addsf3+0x1e>
    3a4a:	93 95       	inc	r25
    3a4c:	88 0f       	add	r24, r24
    3a4e:	08 f0       	brcs	.+2      	; 0x3a52 <__addsf3x+0x9e>
    3a50:	99 27       	eor	r25, r25
    3a52:	ee 0f       	add	r30, r30
    3a54:	97 95       	ror	r25
    3a56:	87 95       	ror	r24
    3a58:	08 95       	ret

00003a5a <atan>:
    3a5a:	df 93       	push	r29
    3a5c:	dd 27       	eor	r29, r29
    3a5e:	b9 2f       	mov	r27, r25
    3a60:	bf 77       	andi	r27, 0x7F	; 127
    3a62:	40 e8       	ldi	r20, 0x80	; 128
    3a64:	5f e3       	ldi	r21, 0x3F	; 63
    3a66:	16 16       	cp	r1, r22
    3a68:	17 06       	cpc	r1, r23
    3a6a:	48 07       	cpc	r20, r24
    3a6c:	5b 07       	cpc	r21, r27
    3a6e:	10 f4       	brcc	.+4      	; 0x3a74 <atan+0x1a>
    3a70:	d9 2f       	mov	r29, r25
    3a72:	1b d2       	rcall	.+1078   	; 0x3eaa <inverse>
    3a74:	9f 93       	push	r25
    3a76:	8f 93       	push	r24
    3a78:	7f 93       	push	r23
    3a7a:	6f 93       	push	r22
    3a7c:	76 d3       	rcall	.+1772   	; 0x416a <square>
    3a7e:	e8 e9       	ldi	r30, 0x98	; 152
    3a80:	f0 e0       	ldi	r31, 0x00	; 0
    3a82:	69 d1       	rcall	.+722    	; 0x3d56 <__fp_powser>
    3a84:	c3 d1       	rcall	.+902    	; 0x3e0c <__fp_round>
    3a86:	2f 91       	pop	r18
    3a88:	3f 91       	pop	r19
    3a8a:	4f 91       	pop	r20
    3a8c:	5f 91       	pop	r21
    3a8e:	ce d2       	rcall	.+1436   	; 0x402c <__mulsf3x>
    3a90:	dd 23       	and	r29, r29
    3a92:	49 f0       	breq	.+18     	; 0x3aa6 <atan+0x4c>
    3a94:	90 58       	subi	r25, 0x80	; 128
    3a96:	a2 ea       	ldi	r26, 0xA2	; 162
    3a98:	2a ed       	ldi	r18, 0xDA	; 218
    3a9a:	3f e0       	ldi	r19, 0x0F	; 15
    3a9c:	49 ec       	ldi	r20, 0xC9	; 201
    3a9e:	5f e3       	ldi	r21, 0x3F	; 63
    3aa0:	d0 78       	andi	r29, 0x80	; 128
    3aa2:	5d 27       	eor	r21, r29
    3aa4:	87 df       	rcall	.-242    	; 0x39b4 <__addsf3x>
    3aa6:	df 91       	pop	r29
    3aa8:	b1 c1       	rjmp	.+866    	; 0x3e0c <__fp_round>

00003aaa <__cmpsf2>:
    3aaa:	28 d1       	rcall	.+592    	; 0x3cfc <__fp_cmp>
    3aac:	08 f4       	brcc	.+2      	; 0x3ab0 <__cmpsf2+0x6>
    3aae:	81 e0       	ldi	r24, 0x01	; 1
    3ab0:	08 95       	ret

00003ab2 <cos>:
    3ab2:	85 d1       	rcall	.+778    	; 0x3dbe <__fp_rempio2>
    3ab4:	e3 95       	inc	r30
    3ab6:	bb c1       	rjmp	.+886    	; 0x3e2e <__fp_sinus>

00003ab8 <__divsf3>:
    3ab8:	0c d0       	rcall	.+24     	; 0x3ad2 <__divsf3x>
    3aba:	a8 c1       	rjmp	.+848    	; 0x3e0c <__fp_round>
    3abc:	78 d1       	rcall	.+752    	; 0x3dae <__fp_pscB>
    3abe:	40 f0       	brcs	.+16     	; 0x3ad0 <__divsf3+0x18>
    3ac0:	6f d1       	rcall	.+734    	; 0x3da0 <__fp_pscA>
    3ac2:	30 f0       	brcs	.+12     	; 0x3ad0 <__divsf3+0x18>
    3ac4:	21 f4       	brne	.+8      	; 0x3ace <__divsf3+0x16>
    3ac6:	5f 3f       	cpi	r21, 0xFF	; 255
    3ac8:	19 f0       	breq	.+6      	; 0x3ad0 <__divsf3+0x18>
    3aca:	3c c1       	rjmp	.+632    	; 0x3d44 <__fp_inf>
    3acc:	51 11       	cpse	r21, r1
    3ace:	e3 c1       	rjmp	.+966    	; 0x3e96 <__fp_szero>
    3ad0:	3f c1       	rjmp	.+638    	; 0x3d50 <__fp_nan>

00003ad2 <__divsf3x>:
    3ad2:	be d1       	rcall	.+892    	; 0x3e50 <__fp_split3>
    3ad4:	98 f3       	brcs	.-26     	; 0x3abc <__divsf3+0x4>

00003ad6 <__divsf3_pse>:
    3ad6:	99 23       	and	r25, r25
    3ad8:	c9 f3       	breq	.-14     	; 0x3acc <__divsf3+0x14>
    3ada:	55 23       	and	r21, r21
    3adc:	b1 f3       	breq	.-20     	; 0x3aca <__divsf3+0x12>
    3ade:	95 1b       	sub	r25, r21
    3ae0:	55 0b       	sbc	r21, r21
    3ae2:	bb 27       	eor	r27, r27
    3ae4:	aa 27       	eor	r26, r26
    3ae6:	62 17       	cp	r22, r18
    3ae8:	73 07       	cpc	r23, r19
    3aea:	84 07       	cpc	r24, r20
    3aec:	38 f0       	brcs	.+14     	; 0x3afc <__divsf3_pse+0x26>
    3aee:	9f 5f       	subi	r25, 0xFF	; 255
    3af0:	5f 4f       	sbci	r21, 0xFF	; 255
    3af2:	22 0f       	add	r18, r18
    3af4:	33 1f       	adc	r19, r19
    3af6:	44 1f       	adc	r20, r20
    3af8:	aa 1f       	adc	r26, r26
    3afa:	a9 f3       	breq	.-22     	; 0x3ae6 <__divsf3_pse+0x10>
    3afc:	33 d0       	rcall	.+102    	; 0x3b64 <__divsf3_pse+0x8e>
    3afe:	0e 2e       	mov	r0, r30
    3b00:	3a f0       	brmi	.+14     	; 0x3b10 <__divsf3_pse+0x3a>
    3b02:	e0 e8       	ldi	r30, 0x80	; 128
    3b04:	30 d0       	rcall	.+96     	; 0x3b66 <__divsf3_pse+0x90>
    3b06:	91 50       	subi	r25, 0x01	; 1
    3b08:	50 40       	sbci	r21, 0x00	; 0
    3b0a:	e6 95       	lsr	r30
    3b0c:	00 1c       	adc	r0, r0
    3b0e:	ca f7       	brpl	.-14     	; 0x3b02 <__divsf3_pse+0x2c>
    3b10:	29 d0       	rcall	.+82     	; 0x3b64 <__divsf3_pse+0x8e>
    3b12:	fe 2f       	mov	r31, r30
    3b14:	27 d0       	rcall	.+78     	; 0x3b64 <__divsf3_pse+0x8e>
    3b16:	66 0f       	add	r22, r22
    3b18:	77 1f       	adc	r23, r23
    3b1a:	88 1f       	adc	r24, r24
    3b1c:	bb 1f       	adc	r27, r27
    3b1e:	26 17       	cp	r18, r22
    3b20:	37 07       	cpc	r19, r23
    3b22:	48 07       	cpc	r20, r24
    3b24:	ab 07       	cpc	r26, r27
    3b26:	b0 e8       	ldi	r27, 0x80	; 128
    3b28:	09 f0       	breq	.+2      	; 0x3b2c <__divsf3_pse+0x56>
    3b2a:	bb 0b       	sbc	r27, r27
    3b2c:	80 2d       	mov	r24, r0
    3b2e:	bf 01       	movw	r22, r30
    3b30:	ff 27       	eor	r31, r31
    3b32:	93 58       	subi	r25, 0x83	; 131
    3b34:	5f 4f       	sbci	r21, 0xFF	; 255
    3b36:	2a f0       	brmi	.+10     	; 0x3b42 <__divsf3_pse+0x6c>
    3b38:	9e 3f       	cpi	r25, 0xFE	; 254
    3b3a:	51 05       	cpc	r21, r1
    3b3c:	68 f0       	brcs	.+26     	; 0x3b58 <__divsf3_pse+0x82>
    3b3e:	02 c1       	rjmp	.+516    	; 0x3d44 <__fp_inf>
    3b40:	aa c1       	rjmp	.+852    	; 0x3e96 <__fp_szero>
    3b42:	5f 3f       	cpi	r21, 0xFF	; 255
    3b44:	ec f3       	brlt	.-6      	; 0x3b40 <__divsf3_pse+0x6a>
    3b46:	98 3e       	cpi	r25, 0xE8	; 232
    3b48:	dc f3       	brlt	.-10     	; 0x3b40 <__divsf3_pse+0x6a>
    3b4a:	86 95       	lsr	r24
    3b4c:	77 95       	ror	r23
    3b4e:	67 95       	ror	r22
    3b50:	b7 95       	ror	r27
    3b52:	f7 95       	ror	r31
    3b54:	9f 5f       	subi	r25, 0xFF	; 255
    3b56:	c9 f7       	brne	.-14     	; 0x3b4a <__divsf3_pse+0x74>
    3b58:	88 0f       	add	r24, r24
    3b5a:	91 1d       	adc	r25, r1
    3b5c:	96 95       	lsr	r25
    3b5e:	87 95       	ror	r24
    3b60:	97 f9       	bld	r25, 7
    3b62:	08 95       	ret
    3b64:	e1 e0       	ldi	r30, 0x01	; 1
    3b66:	66 0f       	add	r22, r22
    3b68:	77 1f       	adc	r23, r23
    3b6a:	88 1f       	adc	r24, r24
    3b6c:	bb 1f       	adc	r27, r27
    3b6e:	62 17       	cp	r22, r18
    3b70:	73 07       	cpc	r23, r19
    3b72:	84 07       	cpc	r24, r20
    3b74:	ba 07       	cpc	r27, r26
    3b76:	20 f0       	brcs	.+8      	; 0x3b80 <__divsf3_pse+0xaa>
    3b78:	62 1b       	sub	r22, r18
    3b7a:	73 0b       	sbc	r23, r19
    3b7c:	84 0b       	sbc	r24, r20
    3b7e:	ba 0b       	sbc	r27, r26
    3b80:	ee 1f       	adc	r30, r30
    3b82:	88 f7       	brcc	.-30     	; 0x3b66 <__divsf3_pse+0x90>
    3b84:	e0 95       	com	r30
    3b86:	08 95       	ret
    3b88:	19 f4       	brne	.+6      	; 0x3b90 <__divsf3_pse+0xba>
    3b8a:	0e f0       	brts	.+2      	; 0x3b8e <__divsf3_pse+0xb8>
    3b8c:	db c0       	rjmp	.+438    	; 0x3d44 <__fp_inf>
    3b8e:	82 c1       	rjmp	.+772    	; 0x3e94 <__fp_zero>
    3b90:	df c0       	rjmp	.+446    	; 0x3d50 <__fp_nan>

00003b92 <exp>:
    3b92:	66 d1       	rcall	.+716    	; 0x3e60 <__fp_splitA>
    3b94:	c8 f3       	brcs	.-14     	; 0x3b88 <__divsf3_pse+0xb2>
    3b96:	96 38       	cpi	r25, 0x86	; 134
    3b98:	c0 f7       	brcc	.-16     	; 0x3b8a <__divsf3_pse+0xb4>
    3b9a:	07 f8       	bld	r0, 7
    3b9c:	0f 92       	push	r0
    3b9e:	e8 94       	clt
    3ba0:	2b e3       	ldi	r18, 0x3B	; 59
    3ba2:	3a ea       	ldi	r19, 0xAA	; 170
    3ba4:	48 eb       	ldi	r20, 0xB8	; 184
    3ba6:	5f e7       	ldi	r21, 0x7F	; 127
    3ba8:	43 d2       	rcall	.+1158   	; 0x4030 <__mulsf3_pse>
    3baa:	0f 92       	push	r0
    3bac:	0f 92       	push	r0
    3bae:	0f 92       	push	r0
    3bb0:	4d b7       	in	r20, 0x3d	; 61
    3bb2:	5e b7       	in	r21, 0x3e	; 62
    3bb4:	0f 92       	push	r0
    3bb6:	fb d1       	rcall	.+1014   	; 0x3fae <modf>
    3bb8:	e5 ec       	ldi	r30, 0xC5	; 197
    3bba:	f0 e0       	ldi	r31, 0x00	; 0
    3bbc:	cc d0       	rcall	.+408    	; 0x3d56 <__fp_powser>
    3bbe:	4f 91       	pop	r20
    3bc0:	5f 91       	pop	r21
    3bc2:	ef 91       	pop	r30
    3bc4:	ff 91       	pop	r31
    3bc6:	e5 95       	asr	r30
    3bc8:	ee 1f       	adc	r30, r30
    3bca:	ff 1f       	adc	r31, r31
    3bcc:	49 f0       	breq	.+18     	; 0x3be0 <exp+0x4e>
    3bce:	fe 57       	subi	r31, 0x7E	; 126
    3bd0:	e0 68       	ori	r30, 0x80	; 128
    3bd2:	44 27       	eor	r20, r20
    3bd4:	ee 0f       	add	r30, r30
    3bd6:	44 1f       	adc	r20, r20
    3bd8:	fa 95       	dec	r31
    3bda:	e1 f7       	brne	.-8      	; 0x3bd4 <exp+0x42>
    3bdc:	41 95       	neg	r20
    3bde:	55 0b       	sbc	r21, r21
    3be0:	6d d1       	rcall	.+730    	; 0x3ebc <ldexp>
    3be2:	0f 90       	pop	r0
    3be4:	07 fe       	sbrs	r0, 7
    3be6:	61 c1       	rjmp	.+706    	; 0x3eaa <inverse>
    3be8:	08 95       	ret

00003bea <__fixsfsi>:
    3bea:	04 d0       	rcall	.+8      	; 0x3bf4 <__fixunssfsi>
    3bec:	68 94       	set
    3bee:	b1 11       	cpse	r27, r1
    3bf0:	52 c1       	rjmp	.+676    	; 0x3e96 <__fp_szero>
    3bf2:	08 95       	ret

00003bf4 <__fixunssfsi>:
    3bf4:	35 d1       	rcall	.+618    	; 0x3e60 <__fp_splitA>
    3bf6:	88 f0       	brcs	.+34     	; 0x3c1a <__fixunssfsi+0x26>
    3bf8:	9f 57       	subi	r25, 0x7F	; 127
    3bfa:	90 f0       	brcs	.+36     	; 0x3c20 <__fixunssfsi+0x2c>
    3bfc:	b9 2f       	mov	r27, r25
    3bfe:	99 27       	eor	r25, r25
    3c00:	b7 51       	subi	r27, 0x17	; 23
    3c02:	a0 f0       	brcs	.+40     	; 0x3c2c <__fixunssfsi+0x38>
    3c04:	d1 f0       	breq	.+52     	; 0x3c3a <__fixunssfsi+0x46>
    3c06:	66 0f       	add	r22, r22
    3c08:	77 1f       	adc	r23, r23
    3c0a:	88 1f       	adc	r24, r24
    3c0c:	99 1f       	adc	r25, r25
    3c0e:	1a f0       	brmi	.+6      	; 0x3c16 <__fixunssfsi+0x22>
    3c10:	ba 95       	dec	r27
    3c12:	c9 f7       	brne	.-14     	; 0x3c06 <__fixunssfsi+0x12>
    3c14:	12 c0       	rjmp	.+36     	; 0x3c3a <__fixunssfsi+0x46>
    3c16:	b1 30       	cpi	r27, 0x01	; 1
    3c18:	81 f0       	breq	.+32     	; 0x3c3a <__fixunssfsi+0x46>
    3c1a:	3c d1       	rcall	.+632    	; 0x3e94 <__fp_zero>
    3c1c:	b1 e0       	ldi	r27, 0x01	; 1
    3c1e:	08 95       	ret
    3c20:	39 c1       	rjmp	.+626    	; 0x3e94 <__fp_zero>
    3c22:	67 2f       	mov	r22, r23
    3c24:	78 2f       	mov	r23, r24
    3c26:	88 27       	eor	r24, r24
    3c28:	b8 5f       	subi	r27, 0xF8	; 248
    3c2a:	39 f0       	breq	.+14     	; 0x3c3a <__fixunssfsi+0x46>
    3c2c:	b9 3f       	cpi	r27, 0xF9	; 249
    3c2e:	cc f3       	brlt	.-14     	; 0x3c22 <__fixunssfsi+0x2e>
    3c30:	86 95       	lsr	r24
    3c32:	77 95       	ror	r23
    3c34:	67 95       	ror	r22
    3c36:	b3 95       	inc	r27
    3c38:	d9 f7       	brne	.-10     	; 0x3c30 <__fixunssfsi+0x3c>
    3c3a:	3e f4       	brtc	.+14     	; 0x3c4a <__fixunssfsi+0x56>
    3c3c:	90 95       	com	r25
    3c3e:	80 95       	com	r24
    3c40:	70 95       	com	r23
    3c42:	61 95       	neg	r22
    3c44:	7f 4f       	sbci	r23, 0xFF	; 255
    3c46:	8f 4f       	sbci	r24, 0xFF	; 255
    3c48:	9f 4f       	sbci	r25, 0xFF	; 255
    3c4a:	08 95       	ret

00003c4c <__floatunsisf>:
    3c4c:	e8 94       	clt
    3c4e:	09 c0       	rjmp	.+18     	; 0x3c62 <__floatsisf+0x12>

00003c50 <__floatsisf>:
    3c50:	97 fb       	bst	r25, 7
    3c52:	3e f4       	brtc	.+14     	; 0x3c62 <__floatsisf+0x12>
    3c54:	90 95       	com	r25
    3c56:	80 95       	com	r24
    3c58:	70 95       	com	r23
    3c5a:	61 95       	neg	r22
    3c5c:	7f 4f       	sbci	r23, 0xFF	; 255
    3c5e:	8f 4f       	sbci	r24, 0xFF	; 255
    3c60:	9f 4f       	sbci	r25, 0xFF	; 255
    3c62:	99 23       	and	r25, r25
    3c64:	a9 f0       	breq	.+42     	; 0x3c90 <__floatsisf+0x40>
    3c66:	f9 2f       	mov	r31, r25
    3c68:	96 e9       	ldi	r25, 0x96	; 150
    3c6a:	bb 27       	eor	r27, r27
    3c6c:	93 95       	inc	r25
    3c6e:	f6 95       	lsr	r31
    3c70:	87 95       	ror	r24
    3c72:	77 95       	ror	r23
    3c74:	67 95       	ror	r22
    3c76:	b7 95       	ror	r27
    3c78:	f1 11       	cpse	r31, r1
    3c7a:	f8 cf       	rjmp	.-16     	; 0x3c6c <__floatsisf+0x1c>
    3c7c:	fa f4       	brpl	.+62     	; 0x3cbc <__floatsisf+0x6c>
    3c7e:	bb 0f       	add	r27, r27
    3c80:	11 f4       	brne	.+4      	; 0x3c86 <__floatsisf+0x36>
    3c82:	60 ff       	sbrs	r22, 0
    3c84:	1b c0       	rjmp	.+54     	; 0x3cbc <__floatsisf+0x6c>
    3c86:	6f 5f       	subi	r22, 0xFF	; 255
    3c88:	7f 4f       	sbci	r23, 0xFF	; 255
    3c8a:	8f 4f       	sbci	r24, 0xFF	; 255
    3c8c:	9f 4f       	sbci	r25, 0xFF	; 255
    3c8e:	16 c0       	rjmp	.+44     	; 0x3cbc <__floatsisf+0x6c>
    3c90:	88 23       	and	r24, r24
    3c92:	11 f0       	breq	.+4      	; 0x3c98 <__floatsisf+0x48>
    3c94:	96 e9       	ldi	r25, 0x96	; 150
    3c96:	11 c0       	rjmp	.+34     	; 0x3cba <__floatsisf+0x6a>
    3c98:	77 23       	and	r23, r23
    3c9a:	21 f0       	breq	.+8      	; 0x3ca4 <__floatsisf+0x54>
    3c9c:	9e e8       	ldi	r25, 0x8E	; 142
    3c9e:	87 2f       	mov	r24, r23
    3ca0:	76 2f       	mov	r23, r22
    3ca2:	05 c0       	rjmp	.+10     	; 0x3cae <__floatsisf+0x5e>
    3ca4:	66 23       	and	r22, r22
    3ca6:	71 f0       	breq	.+28     	; 0x3cc4 <__floatsisf+0x74>
    3ca8:	96 e8       	ldi	r25, 0x86	; 134
    3caa:	86 2f       	mov	r24, r22
    3cac:	70 e0       	ldi	r23, 0x00	; 0
    3cae:	60 e0       	ldi	r22, 0x00	; 0
    3cb0:	2a f0       	brmi	.+10     	; 0x3cbc <__floatsisf+0x6c>
    3cb2:	9a 95       	dec	r25
    3cb4:	66 0f       	add	r22, r22
    3cb6:	77 1f       	adc	r23, r23
    3cb8:	88 1f       	adc	r24, r24
    3cba:	da f7       	brpl	.-10     	; 0x3cb2 <__floatsisf+0x62>
    3cbc:	88 0f       	add	r24, r24
    3cbe:	96 95       	lsr	r25
    3cc0:	87 95       	ror	r24
    3cc2:	97 f9       	bld	r25, 7
    3cc4:	08 95       	ret

00003cc6 <__fp_arccos>:
    3cc6:	df 93       	push	r29
    3cc8:	cf 93       	push	r28
    3cca:	1f 93       	push	r17
    3ccc:	0f 93       	push	r16
    3cce:	8b 01       	movw	r16, r22
    3cd0:	ec 01       	movw	r28, r24
    3cd2:	ed ee       	ldi	r30, 0xED	; 237
    3cd4:	f0 e0       	ldi	r31, 0x00	; 0
    3cd6:	3f d0       	rcall	.+126    	; 0x3d56 <__fp_powser>
    3cd8:	99 d0       	rcall	.+306    	; 0x3e0c <__fp_round>
    3cda:	98 01       	movw	r18, r16
    3cdc:	ae 01       	movw	r20, r28
    3cde:	8b 01       	movw	r16, r22
    3ce0:	ec 01       	movw	r28, r24
    3ce2:	60 e0       	ldi	r22, 0x00	; 0
    3ce4:	70 e0       	ldi	r23, 0x00	; 0
    3ce6:	80 e8       	ldi	r24, 0x80	; 128
    3ce8:	9f e3       	ldi	r25, 0x3F	; 63
    3cea:	52 de       	rcall	.-860    	; 0x3990 <__subsf3>
    3cec:	00 d2       	rcall	.+1024   	; 0x40ee <sqrt>
    3cee:	98 01       	movw	r18, r16
    3cf0:	ae 01       	movw	r20, r28
    3cf2:	0f 91       	pop	r16
    3cf4:	1f 91       	pop	r17
    3cf6:	cf 91       	pop	r28
    3cf8:	df 91       	pop	r29
    3cfa:	98 c1       	rjmp	.+816    	; 0x402c <__mulsf3x>

00003cfc <__fp_cmp>:
    3cfc:	99 0f       	add	r25, r25
    3cfe:	00 08       	sbc	r0, r0
    3d00:	55 0f       	add	r21, r21
    3d02:	aa 0b       	sbc	r26, r26
    3d04:	e0 e8       	ldi	r30, 0x80	; 128
    3d06:	fe ef       	ldi	r31, 0xFE	; 254
    3d08:	16 16       	cp	r1, r22
    3d0a:	17 06       	cpc	r1, r23
    3d0c:	e8 07       	cpc	r30, r24
    3d0e:	f9 07       	cpc	r31, r25
    3d10:	c0 f0       	brcs	.+48     	; 0x3d42 <__fp_cmp+0x46>
    3d12:	12 16       	cp	r1, r18
    3d14:	13 06       	cpc	r1, r19
    3d16:	e4 07       	cpc	r30, r20
    3d18:	f5 07       	cpc	r31, r21
    3d1a:	98 f0       	brcs	.+38     	; 0x3d42 <__fp_cmp+0x46>
    3d1c:	62 1b       	sub	r22, r18
    3d1e:	73 0b       	sbc	r23, r19
    3d20:	84 0b       	sbc	r24, r20
    3d22:	95 0b       	sbc	r25, r21
    3d24:	39 f4       	brne	.+14     	; 0x3d34 <__fp_cmp+0x38>
    3d26:	0a 26       	eor	r0, r26
    3d28:	61 f0       	breq	.+24     	; 0x3d42 <__fp_cmp+0x46>
    3d2a:	23 2b       	or	r18, r19
    3d2c:	24 2b       	or	r18, r20
    3d2e:	25 2b       	or	r18, r21
    3d30:	21 f4       	brne	.+8      	; 0x3d3a <__fp_cmp+0x3e>
    3d32:	08 95       	ret
    3d34:	0a 26       	eor	r0, r26
    3d36:	09 f4       	brne	.+2      	; 0x3d3a <__fp_cmp+0x3e>
    3d38:	a1 40       	sbci	r26, 0x01	; 1
    3d3a:	a6 95       	lsr	r26
    3d3c:	8f ef       	ldi	r24, 0xFF	; 255
    3d3e:	81 1d       	adc	r24, r1
    3d40:	81 1d       	adc	r24, r1
    3d42:	08 95       	ret

00003d44 <__fp_inf>:
    3d44:	97 f9       	bld	r25, 7
    3d46:	9f 67       	ori	r25, 0x7F	; 127
    3d48:	80 e8       	ldi	r24, 0x80	; 128
    3d4a:	70 e0       	ldi	r23, 0x00	; 0
    3d4c:	60 e0       	ldi	r22, 0x00	; 0
    3d4e:	08 95       	ret

00003d50 <__fp_nan>:
    3d50:	9f ef       	ldi	r25, 0xFF	; 255
    3d52:	80 ec       	ldi	r24, 0xC0	; 192
    3d54:	08 95       	ret

00003d56 <__fp_powser>:
    3d56:	df 93       	push	r29
    3d58:	cf 93       	push	r28
    3d5a:	1f 93       	push	r17
    3d5c:	0f 93       	push	r16
    3d5e:	ff 92       	push	r15
    3d60:	ef 92       	push	r14
    3d62:	df 92       	push	r13
    3d64:	7b 01       	movw	r14, r22
    3d66:	8c 01       	movw	r16, r24
    3d68:	68 94       	set
    3d6a:	05 c0       	rjmp	.+10     	; 0x3d76 <__fp_powser+0x20>
    3d6c:	da 2e       	mov	r13, r26
    3d6e:	ef 01       	movw	r28, r30
    3d70:	5d d1       	rcall	.+698    	; 0x402c <__mulsf3x>
    3d72:	fe 01       	movw	r30, r28
    3d74:	e8 94       	clt
    3d76:	a5 91       	lpm	r26, Z+
    3d78:	25 91       	lpm	r18, Z+
    3d7a:	35 91       	lpm	r19, Z+
    3d7c:	45 91       	lpm	r20, Z+
    3d7e:	55 91       	lpm	r21, Z+
    3d80:	ae f3       	brts	.-22     	; 0x3d6c <__fp_powser+0x16>
    3d82:	ef 01       	movw	r28, r30
    3d84:	17 de       	rcall	.-978    	; 0x39b4 <__addsf3x>
    3d86:	fe 01       	movw	r30, r28
    3d88:	97 01       	movw	r18, r14
    3d8a:	a8 01       	movw	r20, r16
    3d8c:	da 94       	dec	r13
    3d8e:	79 f7       	brne	.-34     	; 0x3d6e <__fp_powser+0x18>
    3d90:	df 90       	pop	r13
    3d92:	ef 90       	pop	r14
    3d94:	ff 90       	pop	r15
    3d96:	0f 91       	pop	r16
    3d98:	1f 91       	pop	r17
    3d9a:	cf 91       	pop	r28
    3d9c:	df 91       	pop	r29
    3d9e:	08 95       	ret

00003da0 <__fp_pscA>:
    3da0:	00 24       	eor	r0, r0
    3da2:	0a 94       	dec	r0
    3da4:	16 16       	cp	r1, r22
    3da6:	17 06       	cpc	r1, r23
    3da8:	18 06       	cpc	r1, r24
    3daa:	09 06       	cpc	r0, r25
    3dac:	08 95       	ret

00003dae <__fp_pscB>:
    3dae:	00 24       	eor	r0, r0
    3db0:	0a 94       	dec	r0
    3db2:	12 16       	cp	r1, r18
    3db4:	13 06       	cpc	r1, r19
    3db6:	14 06       	cpc	r1, r20
    3db8:	05 06       	cpc	r0, r21
    3dba:	08 95       	ret
    3dbc:	c9 cf       	rjmp	.-110    	; 0x3d50 <__fp_nan>

00003dbe <__fp_rempio2>:
    3dbe:	50 d0       	rcall	.+160    	; 0x3e60 <__fp_splitA>
    3dc0:	e8 f3       	brcs	.-6      	; 0x3dbc <__fp_pscB+0xe>
    3dc2:	e8 94       	clt
    3dc4:	e0 e0       	ldi	r30, 0x00	; 0
    3dc6:	bb 27       	eor	r27, r27
    3dc8:	9f 57       	subi	r25, 0x7F	; 127
    3dca:	f0 f0       	brcs	.+60     	; 0x3e08 <__fp_rempio2+0x4a>
    3dcc:	2a ed       	ldi	r18, 0xDA	; 218
    3dce:	3f e0       	ldi	r19, 0x0F	; 15
    3dd0:	49 ec       	ldi	r20, 0xC9	; 201
    3dd2:	06 c0       	rjmp	.+12     	; 0x3de0 <__fp_rempio2+0x22>
    3dd4:	ee 0f       	add	r30, r30
    3dd6:	bb 0f       	add	r27, r27
    3dd8:	66 1f       	adc	r22, r22
    3dda:	77 1f       	adc	r23, r23
    3ddc:	88 1f       	adc	r24, r24
    3dde:	28 f0       	brcs	.+10     	; 0x3dea <__fp_rempio2+0x2c>
    3de0:	b2 3a       	cpi	r27, 0xA2	; 162
    3de2:	62 07       	cpc	r22, r18
    3de4:	73 07       	cpc	r23, r19
    3de6:	84 07       	cpc	r24, r20
    3de8:	28 f0       	brcs	.+10     	; 0x3df4 <__fp_rempio2+0x36>
    3dea:	b2 5a       	subi	r27, 0xA2	; 162
    3dec:	62 0b       	sbc	r22, r18
    3dee:	73 0b       	sbc	r23, r19
    3df0:	84 0b       	sbc	r24, r20
    3df2:	e3 95       	inc	r30
    3df4:	9a 95       	dec	r25
    3df6:	72 f7       	brpl	.-36     	; 0x3dd4 <__fp_rempio2+0x16>
    3df8:	80 38       	cpi	r24, 0x80	; 128
    3dfa:	30 f4       	brcc	.+12     	; 0x3e08 <__fp_rempio2+0x4a>
    3dfc:	9a 95       	dec	r25
    3dfe:	bb 0f       	add	r27, r27
    3e00:	66 1f       	adc	r22, r22
    3e02:	77 1f       	adc	r23, r23
    3e04:	88 1f       	adc	r24, r24
    3e06:	d2 f7       	brpl	.-12     	; 0x3dfc <__fp_rempio2+0x3e>
    3e08:	90 48       	sbci	r25, 0x80	; 128
    3e0a:	b4 c1       	rjmp	.+872    	; 0x4174 <__fp_mpack_finite>

00003e0c <__fp_round>:
    3e0c:	09 2e       	mov	r0, r25
    3e0e:	03 94       	inc	r0
    3e10:	00 0c       	add	r0, r0
    3e12:	11 f4       	brne	.+4      	; 0x3e18 <__fp_round+0xc>
    3e14:	88 23       	and	r24, r24
    3e16:	52 f0       	brmi	.+20     	; 0x3e2c <__fp_round+0x20>
    3e18:	bb 0f       	add	r27, r27
    3e1a:	40 f4       	brcc	.+16     	; 0x3e2c <__fp_round+0x20>
    3e1c:	bf 2b       	or	r27, r31
    3e1e:	11 f4       	brne	.+4      	; 0x3e24 <__fp_round+0x18>
    3e20:	60 ff       	sbrs	r22, 0
    3e22:	04 c0       	rjmp	.+8      	; 0x3e2c <__fp_round+0x20>
    3e24:	6f 5f       	subi	r22, 0xFF	; 255
    3e26:	7f 4f       	sbci	r23, 0xFF	; 255
    3e28:	8f 4f       	sbci	r24, 0xFF	; 255
    3e2a:	9f 4f       	sbci	r25, 0xFF	; 255
    3e2c:	08 95       	ret

00003e2e <__fp_sinus>:
    3e2e:	ef 93       	push	r30
    3e30:	e0 ff       	sbrs	r30, 0
    3e32:	06 c0       	rjmp	.+12     	; 0x3e40 <__fp_sinus+0x12>
    3e34:	a2 ea       	ldi	r26, 0xA2	; 162
    3e36:	2a ed       	ldi	r18, 0xDA	; 218
    3e38:	3f e0       	ldi	r19, 0x0F	; 15
    3e3a:	49 ec       	ldi	r20, 0xC9	; 201
    3e3c:	5f eb       	ldi	r21, 0xBF	; 191
    3e3e:	ba dd       	rcall	.-1164   	; 0x39b4 <__addsf3x>
    3e40:	e5 df       	rcall	.-54     	; 0x3e0c <__fp_round>
    3e42:	0f 90       	pop	r0
    3e44:	03 94       	inc	r0
    3e46:	01 fc       	sbrc	r0, 1
    3e48:	90 58       	subi	r25, 0x80	; 128
    3e4a:	e5 e1       	ldi	r30, 0x15	; 21
    3e4c:	f1 e0       	ldi	r31, 0x01	; 1
    3e4e:	a5 c1       	rjmp	.+842    	; 0x419a <__fp_powsodd>

00003e50 <__fp_split3>:
    3e50:	57 fd       	sbrc	r21, 7
    3e52:	90 58       	subi	r25, 0x80	; 128
    3e54:	44 0f       	add	r20, r20
    3e56:	55 1f       	adc	r21, r21
    3e58:	59 f0       	breq	.+22     	; 0x3e70 <__fp_splitA+0x10>
    3e5a:	5f 3f       	cpi	r21, 0xFF	; 255
    3e5c:	71 f0       	breq	.+28     	; 0x3e7a <__fp_splitA+0x1a>
    3e5e:	47 95       	ror	r20

00003e60 <__fp_splitA>:
    3e60:	88 0f       	add	r24, r24
    3e62:	97 fb       	bst	r25, 7
    3e64:	99 1f       	adc	r25, r25
    3e66:	61 f0       	breq	.+24     	; 0x3e80 <__fp_splitA+0x20>
    3e68:	9f 3f       	cpi	r25, 0xFF	; 255
    3e6a:	79 f0       	breq	.+30     	; 0x3e8a <__fp_splitA+0x2a>
    3e6c:	87 95       	ror	r24
    3e6e:	08 95       	ret
    3e70:	12 16       	cp	r1, r18
    3e72:	13 06       	cpc	r1, r19
    3e74:	14 06       	cpc	r1, r20
    3e76:	55 1f       	adc	r21, r21
    3e78:	f2 cf       	rjmp	.-28     	; 0x3e5e <__fp_split3+0xe>
    3e7a:	46 95       	lsr	r20
    3e7c:	f1 df       	rcall	.-30     	; 0x3e60 <__fp_splitA>
    3e7e:	08 c0       	rjmp	.+16     	; 0x3e90 <__fp_splitA+0x30>
    3e80:	16 16       	cp	r1, r22
    3e82:	17 06       	cpc	r1, r23
    3e84:	18 06       	cpc	r1, r24
    3e86:	99 1f       	adc	r25, r25
    3e88:	f1 cf       	rjmp	.-30     	; 0x3e6c <__fp_splitA+0xc>
    3e8a:	86 95       	lsr	r24
    3e8c:	71 05       	cpc	r23, r1
    3e8e:	61 05       	cpc	r22, r1
    3e90:	08 94       	sec
    3e92:	08 95       	ret

00003e94 <__fp_zero>:
    3e94:	e8 94       	clt

00003e96 <__fp_szero>:
    3e96:	bb 27       	eor	r27, r27
    3e98:	66 27       	eor	r22, r22
    3e9a:	77 27       	eor	r23, r23
    3e9c:	cb 01       	movw	r24, r22
    3e9e:	97 f9       	bld	r25, 7
    3ea0:	08 95       	ret

00003ea2 <__gesf2>:
    3ea2:	2c df       	rcall	.-424    	; 0x3cfc <__fp_cmp>
    3ea4:	08 f4       	brcc	.+2      	; 0x3ea8 <__gesf2+0x6>
    3ea6:	8f ef       	ldi	r24, 0xFF	; 255
    3ea8:	08 95       	ret

00003eaa <inverse>:
    3eaa:	9b 01       	movw	r18, r22
    3eac:	ac 01       	movw	r20, r24
    3eae:	60 e0       	ldi	r22, 0x00	; 0
    3eb0:	70 e0       	ldi	r23, 0x00	; 0
    3eb2:	80 e8       	ldi	r24, 0x80	; 128
    3eb4:	9f e3       	ldi	r25, 0x3F	; 63
    3eb6:	00 ce       	rjmp	.-1024   	; 0x3ab8 <__divsf3>
    3eb8:	45 cf       	rjmp	.-374    	; 0x3d44 <__fp_inf>
    3eba:	5a c1       	rjmp	.+692    	; 0x4170 <__fp_mpack>

00003ebc <ldexp>:
    3ebc:	d1 df       	rcall	.-94     	; 0x3e60 <__fp_splitA>
    3ebe:	e8 f3       	brcs	.-6      	; 0x3eba <inverse+0x10>
    3ec0:	99 23       	and	r25, r25
    3ec2:	d9 f3       	breq	.-10     	; 0x3eba <inverse+0x10>
    3ec4:	94 0f       	add	r25, r20
    3ec6:	51 1d       	adc	r21, r1
    3ec8:	bb f3       	brvs	.-18     	; 0x3eb8 <inverse+0xe>
    3eca:	91 50       	subi	r25, 0x01	; 1
    3ecc:	50 40       	sbci	r21, 0x00	; 0
    3ece:	94 f0       	brlt	.+36     	; 0x3ef4 <ldexp+0x38>
    3ed0:	59 f0       	breq	.+22     	; 0x3ee8 <ldexp+0x2c>
    3ed2:	88 23       	and	r24, r24
    3ed4:	32 f0       	brmi	.+12     	; 0x3ee2 <ldexp+0x26>
    3ed6:	66 0f       	add	r22, r22
    3ed8:	77 1f       	adc	r23, r23
    3eda:	88 1f       	adc	r24, r24
    3edc:	91 50       	subi	r25, 0x01	; 1
    3ede:	50 40       	sbci	r21, 0x00	; 0
    3ee0:	c1 f7       	brne	.-16     	; 0x3ed2 <ldexp+0x16>
    3ee2:	9e 3f       	cpi	r25, 0xFE	; 254
    3ee4:	51 05       	cpc	r21, r1
    3ee6:	44 f7       	brge	.-48     	; 0x3eb8 <inverse+0xe>
    3ee8:	88 0f       	add	r24, r24
    3eea:	91 1d       	adc	r25, r1
    3eec:	96 95       	lsr	r25
    3eee:	87 95       	ror	r24
    3ef0:	97 f9       	bld	r25, 7
    3ef2:	08 95       	ret
    3ef4:	5f 3f       	cpi	r21, 0xFF	; 255
    3ef6:	ac f0       	brlt	.+42     	; 0x3f22 <ldexp+0x66>
    3ef8:	98 3e       	cpi	r25, 0xE8	; 232
    3efa:	9c f0       	brlt	.+38     	; 0x3f22 <ldexp+0x66>
    3efc:	bb 27       	eor	r27, r27
    3efe:	86 95       	lsr	r24
    3f00:	77 95       	ror	r23
    3f02:	67 95       	ror	r22
    3f04:	b7 95       	ror	r27
    3f06:	08 f4       	brcc	.+2      	; 0x3f0a <ldexp+0x4e>
    3f08:	b1 60       	ori	r27, 0x01	; 1
    3f0a:	93 95       	inc	r25
    3f0c:	c1 f7       	brne	.-16     	; 0x3efe <ldexp+0x42>
    3f0e:	bb 0f       	add	r27, r27
    3f10:	58 f7       	brcc	.-42     	; 0x3ee8 <ldexp+0x2c>
    3f12:	11 f4       	brne	.+4      	; 0x3f18 <ldexp+0x5c>
    3f14:	60 ff       	sbrs	r22, 0
    3f16:	e8 cf       	rjmp	.-48     	; 0x3ee8 <ldexp+0x2c>
    3f18:	6f 5f       	subi	r22, 0xFF	; 255
    3f1a:	7f 4f       	sbci	r23, 0xFF	; 255
    3f1c:	8f 4f       	sbci	r24, 0xFF	; 255
    3f1e:	9f 4f       	sbci	r25, 0xFF	; 255
    3f20:	e3 cf       	rjmp	.-58     	; 0x3ee8 <ldexp+0x2c>
    3f22:	b9 cf       	rjmp	.-142    	; 0x3e96 <__fp_szero>
    3f24:	0e f0       	brts	.+2      	; 0x3f28 <ldexp+0x6c>
    3f26:	24 c1       	rjmp	.+584    	; 0x4170 <__fp_mpack>
    3f28:	13 cf       	rjmp	.-474    	; 0x3d50 <__fp_nan>
    3f2a:	68 94       	set
    3f2c:	0b cf       	rjmp	.-490    	; 0x3d44 <__fp_inf>

00003f2e <log>:
    3f2e:	98 df       	rcall	.-208    	; 0x3e60 <__fp_splitA>
    3f30:	c8 f3       	brcs	.-14     	; 0x3f24 <ldexp+0x68>
    3f32:	99 23       	and	r25, r25
    3f34:	d1 f3       	breq	.-12     	; 0x3f2a <ldexp+0x6e>
    3f36:	c6 f3       	brts	.-16     	; 0x3f28 <ldexp+0x6c>
    3f38:	df 93       	push	r29
    3f3a:	cf 93       	push	r28
    3f3c:	1f 93       	push	r17
    3f3e:	0f 93       	push	r16
    3f40:	ff 92       	push	r15
    3f42:	c9 2f       	mov	r28, r25
    3f44:	dd 27       	eor	r29, r29
    3f46:	88 23       	and	r24, r24
    3f48:	2a f0       	brmi	.+10     	; 0x3f54 <log+0x26>
    3f4a:	21 97       	sbiw	r28, 0x01	; 1
    3f4c:	66 0f       	add	r22, r22
    3f4e:	77 1f       	adc	r23, r23
    3f50:	88 1f       	adc	r24, r24
    3f52:	da f7       	brpl	.-10     	; 0x3f4a <log+0x1c>
    3f54:	20 e0       	ldi	r18, 0x00	; 0
    3f56:	30 e0       	ldi	r19, 0x00	; 0
    3f58:	40 e8       	ldi	r20, 0x80	; 128
    3f5a:	5f eb       	ldi	r21, 0xBF	; 191
    3f5c:	9f e3       	ldi	r25, 0x3F	; 63
    3f5e:	88 39       	cpi	r24, 0x98	; 152
    3f60:	20 f0       	brcs	.+8      	; 0x3f6a <log+0x3c>
    3f62:	80 3e       	cpi	r24, 0xE0	; 224
    3f64:	30 f0       	brcs	.+12     	; 0x3f72 <log+0x44>
    3f66:	21 96       	adiw	r28, 0x01	; 1
    3f68:	8f 77       	andi	r24, 0x7F	; 127
    3f6a:	13 dd       	rcall	.-1498   	; 0x3992 <__addsf3>
    3f6c:	e3 e3       	ldi	r30, 0x33	; 51
    3f6e:	f1 e0       	ldi	r31, 0x01	; 1
    3f70:	03 c0       	rjmp	.+6      	; 0x3f78 <log+0x4a>
    3f72:	0f dd       	rcall	.-1506   	; 0x3992 <__addsf3>
    3f74:	e0 e6       	ldi	r30, 0x60	; 96
    3f76:	f1 e0       	ldi	r31, 0x01	; 1
    3f78:	ee de       	rcall	.-548    	; 0x3d56 <__fp_powser>
    3f7a:	8b 01       	movw	r16, r22
    3f7c:	be 01       	movw	r22, r28
    3f7e:	ec 01       	movw	r28, r24
    3f80:	fb 2e       	mov	r15, r27
    3f82:	6f 57       	subi	r22, 0x7F	; 127
    3f84:	71 09       	sbc	r23, r1
    3f86:	75 95       	asr	r23
    3f88:	77 1f       	adc	r23, r23
    3f8a:	88 0b       	sbc	r24, r24
    3f8c:	99 0b       	sbc	r25, r25
    3f8e:	60 de       	rcall	.-832    	; 0x3c50 <__floatsisf>
    3f90:	28 e1       	ldi	r18, 0x18	; 24
    3f92:	32 e7       	ldi	r19, 0x72	; 114
    3f94:	41 e3       	ldi	r20, 0x31	; 49
    3f96:	5f e3       	ldi	r21, 0x3F	; 63
    3f98:	49 d0       	rcall	.+146    	; 0x402c <__mulsf3x>
    3f9a:	af 2d       	mov	r26, r15
    3f9c:	98 01       	movw	r18, r16
    3f9e:	ae 01       	movw	r20, r28
    3fa0:	ff 90       	pop	r15
    3fa2:	0f 91       	pop	r16
    3fa4:	1f 91       	pop	r17
    3fa6:	cf 91       	pop	r28
    3fa8:	df 91       	pop	r29
    3faa:	04 dd       	rcall	.-1528   	; 0x39b4 <__addsf3x>
    3fac:	2f cf       	rjmp	.-418    	; 0x3e0c <__fp_round>

00003fae <modf>:
    3fae:	fa 01       	movw	r30, r20
    3fb0:	dc 01       	movw	r26, r24
    3fb2:	aa 0f       	add	r26, r26
    3fb4:	bb 1f       	adc	r27, r27
    3fb6:	9b 01       	movw	r18, r22
    3fb8:	ac 01       	movw	r20, r24
    3fba:	bf 57       	subi	r27, 0x7F	; 127
    3fbc:	28 f4       	brcc	.+10     	; 0x3fc8 <modf+0x1a>
    3fbe:	22 27       	eor	r18, r18
    3fc0:	33 27       	eor	r19, r19
    3fc2:	44 27       	eor	r20, r20
    3fc4:	50 78       	andi	r21, 0x80	; 128
    3fc6:	1f c0       	rjmp	.+62     	; 0x4006 <modf+0x58>
    3fc8:	b7 51       	subi	r27, 0x17	; 23
    3fca:	88 f4       	brcc	.+34     	; 0x3fee <modf+0x40>
    3fcc:	ab 2f       	mov	r26, r27
    3fce:	00 24       	eor	r0, r0
    3fd0:	46 95       	lsr	r20
    3fd2:	37 95       	ror	r19
    3fd4:	27 95       	ror	r18
    3fd6:	01 1c       	adc	r0, r1
    3fd8:	a3 95       	inc	r26
    3fda:	d2 f3       	brmi	.-12     	; 0x3fd0 <modf+0x22>
    3fdc:	00 20       	and	r0, r0
    3fde:	69 f0       	breq	.+26     	; 0x3ffa <modf+0x4c>
    3fe0:	22 0f       	add	r18, r18
    3fe2:	33 1f       	adc	r19, r19
    3fe4:	44 1f       	adc	r20, r20
    3fe6:	b3 95       	inc	r27
    3fe8:	da f3       	brmi	.-10     	; 0x3fe0 <modf+0x32>
    3fea:	0d d0       	rcall	.+26     	; 0x4006 <modf+0x58>
    3fec:	d1 cc       	rjmp	.-1630   	; 0x3990 <__subsf3>
    3fee:	61 30       	cpi	r22, 0x01	; 1
    3ff0:	71 05       	cpc	r23, r1
    3ff2:	a0 e8       	ldi	r26, 0x80	; 128
    3ff4:	8a 07       	cpc	r24, r26
    3ff6:	b9 46       	sbci	r27, 0x69	; 105
    3ff8:	30 f4       	brcc	.+12     	; 0x4006 <modf+0x58>
    3ffa:	9b 01       	movw	r18, r22
    3ffc:	ac 01       	movw	r20, r24
    3ffe:	66 27       	eor	r22, r22
    4000:	77 27       	eor	r23, r23
    4002:	88 27       	eor	r24, r24
    4004:	90 78       	andi	r25, 0x80	; 128
    4006:	30 96       	adiw	r30, 0x00	; 0
    4008:	21 f0       	breq	.+8      	; 0x4012 <modf+0x64>
    400a:	20 83       	st	Z, r18
    400c:	31 83       	std	Z+1, r19	; 0x01
    400e:	42 83       	std	Z+2, r20	; 0x02
    4010:	53 83       	std	Z+3, r21	; 0x03
    4012:	08 95       	ret

00004014 <__mulsf3>:
    4014:	0b d0       	rcall	.+22     	; 0x402c <__mulsf3x>
    4016:	fa ce       	rjmp	.-524    	; 0x3e0c <__fp_round>
    4018:	c3 de       	rcall	.-634    	; 0x3da0 <__fp_pscA>
    401a:	28 f0       	brcs	.+10     	; 0x4026 <__mulsf3+0x12>
    401c:	c8 de       	rcall	.-624    	; 0x3dae <__fp_pscB>
    401e:	18 f0       	brcs	.+6      	; 0x4026 <__mulsf3+0x12>
    4020:	95 23       	and	r25, r21
    4022:	09 f0       	breq	.+2      	; 0x4026 <__mulsf3+0x12>
    4024:	8f ce       	rjmp	.-738    	; 0x3d44 <__fp_inf>
    4026:	94 ce       	rjmp	.-728    	; 0x3d50 <__fp_nan>
    4028:	11 24       	eor	r1, r1
    402a:	35 cf       	rjmp	.-406    	; 0x3e96 <__fp_szero>

0000402c <__mulsf3x>:
    402c:	11 df       	rcall	.-478    	; 0x3e50 <__fp_split3>
    402e:	a0 f3       	brcs	.-24     	; 0x4018 <__mulsf3+0x4>

00004030 <__mulsf3_pse>:
    4030:	95 9f       	mul	r25, r21
    4032:	d1 f3       	breq	.-12     	; 0x4028 <__mulsf3+0x14>
    4034:	95 0f       	add	r25, r21
    4036:	50 e0       	ldi	r21, 0x00	; 0
    4038:	55 1f       	adc	r21, r21
    403a:	62 9f       	mul	r22, r18
    403c:	f0 01       	movw	r30, r0
    403e:	72 9f       	mul	r23, r18
    4040:	bb 27       	eor	r27, r27
    4042:	f0 0d       	add	r31, r0
    4044:	b1 1d       	adc	r27, r1
    4046:	63 9f       	mul	r22, r19
    4048:	aa 27       	eor	r26, r26
    404a:	f0 0d       	add	r31, r0
    404c:	b1 1d       	adc	r27, r1
    404e:	aa 1f       	adc	r26, r26
    4050:	64 9f       	mul	r22, r20
    4052:	66 27       	eor	r22, r22
    4054:	b0 0d       	add	r27, r0
    4056:	a1 1d       	adc	r26, r1
    4058:	66 1f       	adc	r22, r22
    405a:	82 9f       	mul	r24, r18
    405c:	22 27       	eor	r18, r18
    405e:	b0 0d       	add	r27, r0
    4060:	a1 1d       	adc	r26, r1
    4062:	62 1f       	adc	r22, r18
    4064:	73 9f       	mul	r23, r19
    4066:	b0 0d       	add	r27, r0
    4068:	a1 1d       	adc	r26, r1
    406a:	62 1f       	adc	r22, r18
    406c:	83 9f       	mul	r24, r19
    406e:	a0 0d       	add	r26, r0
    4070:	61 1d       	adc	r22, r1
    4072:	22 1f       	adc	r18, r18
    4074:	74 9f       	mul	r23, r20
    4076:	33 27       	eor	r19, r19
    4078:	a0 0d       	add	r26, r0
    407a:	61 1d       	adc	r22, r1
    407c:	23 1f       	adc	r18, r19
    407e:	84 9f       	mul	r24, r20
    4080:	60 0d       	add	r22, r0
    4082:	21 1d       	adc	r18, r1
    4084:	82 2f       	mov	r24, r18
    4086:	76 2f       	mov	r23, r22
    4088:	6a 2f       	mov	r22, r26
    408a:	11 24       	eor	r1, r1
    408c:	9f 57       	subi	r25, 0x7F	; 127
    408e:	50 40       	sbci	r21, 0x00	; 0
    4090:	8a f0       	brmi	.+34     	; 0x40b4 <__mulsf3_pse+0x84>
    4092:	e1 f0       	breq	.+56     	; 0x40cc <__mulsf3_pse+0x9c>
    4094:	88 23       	and	r24, r24
    4096:	4a f0       	brmi	.+18     	; 0x40aa <__mulsf3_pse+0x7a>
    4098:	ee 0f       	add	r30, r30
    409a:	ff 1f       	adc	r31, r31
    409c:	bb 1f       	adc	r27, r27
    409e:	66 1f       	adc	r22, r22
    40a0:	77 1f       	adc	r23, r23
    40a2:	88 1f       	adc	r24, r24
    40a4:	91 50       	subi	r25, 0x01	; 1
    40a6:	50 40       	sbci	r21, 0x00	; 0
    40a8:	a9 f7       	brne	.-22     	; 0x4094 <__mulsf3_pse+0x64>
    40aa:	9e 3f       	cpi	r25, 0xFE	; 254
    40ac:	51 05       	cpc	r21, r1
    40ae:	70 f0       	brcs	.+28     	; 0x40cc <__mulsf3_pse+0x9c>
    40b0:	49 ce       	rjmp	.-878    	; 0x3d44 <__fp_inf>
    40b2:	f1 ce       	rjmp	.-542    	; 0x3e96 <__fp_szero>
    40b4:	5f 3f       	cpi	r21, 0xFF	; 255
    40b6:	ec f3       	brlt	.-6      	; 0x40b2 <__mulsf3_pse+0x82>
    40b8:	98 3e       	cpi	r25, 0xE8	; 232
    40ba:	dc f3       	brlt	.-10     	; 0x40b2 <__mulsf3_pse+0x82>
    40bc:	86 95       	lsr	r24
    40be:	77 95       	ror	r23
    40c0:	67 95       	ror	r22
    40c2:	b7 95       	ror	r27
    40c4:	f7 95       	ror	r31
    40c6:	e7 95       	ror	r30
    40c8:	9f 5f       	subi	r25, 0xFF	; 255
    40ca:	c1 f7       	brne	.-16     	; 0x40bc <__mulsf3_pse+0x8c>
    40cc:	fe 2b       	or	r31, r30
    40ce:	88 0f       	add	r24, r24
    40d0:	91 1d       	adc	r25, r1
    40d2:	96 95       	lsr	r25
    40d4:	87 95       	ror	r24
    40d6:	97 f9       	bld	r25, 7
    40d8:	08 95       	ret

000040da <sin>:
    40da:	9f 93       	push	r25
    40dc:	70 de       	rcall	.-800    	; 0x3dbe <__fp_rempio2>
    40de:	0f 90       	pop	r0
    40e0:	07 fc       	sbrc	r0, 7
    40e2:	ee 5f       	subi	r30, 0xFE	; 254
    40e4:	a4 ce       	rjmp	.-696    	; 0x3e2e <__fp_sinus>
    40e6:	11 f4       	brne	.+4      	; 0x40ec <sin+0x12>
    40e8:	0e f4       	brtc	.+2      	; 0x40ec <sin+0x12>
    40ea:	32 ce       	rjmp	.-924    	; 0x3d50 <__fp_nan>
    40ec:	41 c0       	rjmp	.+130    	; 0x4170 <__fp_mpack>

000040ee <sqrt>:
    40ee:	b8 de       	rcall	.-656    	; 0x3e60 <__fp_splitA>
    40f0:	d0 f3       	brcs	.-12     	; 0x40e6 <sin+0xc>
    40f2:	99 23       	and	r25, r25
    40f4:	d9 f3       	breq	.-10     	; 0x40ec <sin+0x12>
    40f6:	ce f3       	brts	.-14     	; 0x40ea <sin+0x10>
    40f8:	9f 57       	subi	r25, 0x7F	; 127
    40fa:	55 0b       	sbc	r21, r21
    40fc:	87 ff       	sbrs	r24, 7
    40fe:	46 d0       	rcall	.+140    	; 0x418c <__fp_norm2>
    4100:	00 24       	eor	r0, r0
    4102:	a0 e6       	ldi	r26, 0x60	; 96
    4104:	40 ea       	ldi	r20, 0xA0	; 160
    4106:	90 01       	movw	r18, r0
    4108:	80 58       	subi	r24, 0x80	; 128
    410a:	56 95       	lsr	r21
    410c:	97 95       	ror	r25
    410e:	28 f4       	brcc	.+10     	; 0x411a <sqrt+0x2c>
    4110:	80 5c       	subi	r24, 0xC0	; 192
    4112:	66 0f       	add	r22, r22
    4114:	77 1f       	adc	r23, r23
    4116:	88 1f       	adc	r24, r24
    4118:	20 f0       	brcs	.+8      	; 0x4122 <sqrt+0x34>
    411a:	26 17       	cp	r18, r22
    411c:	37 07       	cpc	r19, r23
    411e:	48 07       	cpc	r20, r24
    4120:	30 f4       	brcc	.+12     	; 0x412e <sqrt+0x40>
    4122:	62 1b       	sub	r22, r18
    4124:	73 0b       	sbc	r23, r19
    4126:	84 0b       	sbc	r24, r20
    4128:	20 29       	or	r18, r0
    412a:	31 29       	or	r19, r1
    412c:	4a 2b       	or	r20, r26
    412e:	a6 95       	lsr	r26
    4130:	17 94       	ror	r1
    4132:	07 94       	ror	r0
    4134:	20 25       	eor	r18, r0
    4136:	31 25       	eor	r19, r1
    4138:	4a 27       	eor	r20, r26
    413a:	58 f7       	brcc	.-42     	; 0x4112 <sqrt+0x24>
    413c:	66 0f       	add	r22, r22
    413e:	77 1f       	adc	r23, r23
    4140:	88 1f       	adc	r24, r24
    4142:	20 f0       	brcs	.+8      	; 0x414c <sqrt+0x5e>
    4144:	26 17       	cp	r18, r22
    4146:	37 07       	cpc	r19, r23
    4148:	48 07       	cpc	r20, r24
    414a:	30 f4       	brcc	.+12     	; 0x4158 <sqrt+0x6a>
    414c:	62 0b       	sbc	r22, r18
    414e:	73 0b       	sbc	r23, r19
    4150:	84 0b       	sbc	r24, r20
    4152:	20 0d       	add	r18, r0
    4154:	31 1d       	adc	r19, r1
    4156:	41 1d       	adc	r20, r1
    4158:	a0 95       	com	r26
    415a:	81 f7       	brne	.-32     	; 0x413c <sqrt+0x4e>
    415c:	b9 01       	movw	r22, r18
    415e:	84 2f       	mov	r24, r20
    4160:	91 58       	subi	r25, 0x81	; 129
    4162:	88 0f       	add	r24, r24
    4164:	96 95       	lsr	r25
    4166:	87 95       	ror	r24
    4168:	08 95       	ret

0000416a <square>:
    416a:	9b 01       	movw	r18, r22
    416c:	ac 01       	movw	r20, r24
    416e:	52 cf       	rjmp	.-348    	; 0x4014 <__mulsf3>

00004170 <__fp_mpack>:
    4170:	9f 3f       	cpi	r25, 0xFF	; 255
    4172:	31 f0       	breq	.+12     	; 0x4180 <__fp_mpack_finite+0xc>

00004174 <__fp_mpack_finite>:
    4174:	91 50       	subi	r25, 0x01	; 1
    4176:	20 f4       	brcc	.+8      	; 0x4180 <__fp_mpack_finite+0xc>
    4178:	87 95       	ror	r24
    417a:	77 95       	ror	r23
    417c:	67 95       	ror	r22
    417e:	b7 95       	ror	r27
    4180:	88 0f       	add	r24, r24
    4182:	91 1d       	adc	r25, r1
    4184:	96 95       	lsr	r25
    4186:	87 95       	ror	r24
    4188:	97 f9       	bld	r25, 7
    418a:	08 95       	ret

0000418c <__fp_norm2>:
    418c:	91 50       	subi	r25, 0x01	; 1
    418e:	50 40       	sbci	r21, 0x00	; 0
    4190:	66 0f       	add	r22, r22
    4192:	77 1f       	adc	r23, r23
    4194:	88 1f       	adc	r24, r24
    4196:	d2 f7       	brpl	.-12     	; 0x418c <__fp_norm2>
    4198:	08 95       	ret

0000419a <__fp_powsodd>:
    419a:	9f 93       	push	r25
    419c:	8f 93       	push	r24
    419e:	7f 93       	push	r23
    41a0:	6f 93       	push	r22
    41a2:	ff 93       	push	r31
    41a4:	ef 93       	push	r30
    41a6:	9b 01       	movw	r18, r22
    41a8:	ac 01       	movw	r20, r24
    41aa:	34 df       	rcall	.-408    	; 0x4014 <__mulsf3>
    41ac:	ef 91       	pop	r30
    41ae:	ff 91       	pop	r31
    41b0:	d2 dd       	rcall	.-1116   	; 0x3d56 <__fp_powser>
    41b2:	2f 91       	pop	r18
    41b4:	3f 91       	pop	r19
    41b6:	4f 91       	pop	r20
    41b8:	5f 91       	pop	r21
    41ba:	2c cf       	rjmp	.-424    	; 0x4014 <__mulsf3>

000041bc <__divmodhi4>:
    41bc:	97 fb       	bst	r25, 7
    41be:	07 2e       	mov	r0, r23
    41c0:	16 f4       	brtc	.+4      	; 0x41c6 <__divmodhi4+0xa>
    41c2:	00 94       	com	r0
    41c4:	07 d0       	rcall	.+14     	; 0x41d4 <__divmodhi4_neg1>
    41c6:	77 fd       	sbrc	r23, 7
    41c8:	09 d0       	rcall	.+18     	; 0x41dc <__divmodhi4_neg2>
    41ca:	0e 94 f8 20 	call	0x41f0	; 0x41f0 <__udivmodhi4>
    41ce:	07 fc       	sbrc	r0, 7
    41d0:	05 d0       	rcall	.+10     	; 0x41dc <__divmodhi4_neg2>
    41d2:	3e f4       	brtc	.+14     	; 0x41e2 <__divmodhi4_exit>

000041d4 <__divmodhi4_neg1>:
    41d4:	90 95       	com	r25
    41d6:	81 95       	neg	r24
    41d8:	9f 4f       	sbci	r25, 0xFF	; 255
    41da:	08 95       	ret

000041dc <__divmodhi4_neg2>:
    41dc:	70 95       	com	r23
    41de:	61 95       	neg	r22
    41e0:	7f 4f       	sbci	r23, 0xFF	; 255

000041e2 <__divmodhi4_exit>:
    41e2:	08 95       	ret

000041e4 <__tablejump2__>:
    41e4:	ee 0f       	add	r30, r30
    41e6:	ff 1f       	adc	r31, r31

000041e8 <__tablejump__>:
    41e8:	05 90       	lpm	r0, Z+
    41ea:	f4 91       	lpm	r31, Z
    41ec:	e0 2d       	mov	r30, r0
    41ee:	09 94       	ijmp

000041f0 <__udivmodhi4>:
    41f0:	aa 1b       	sub	r26, r26
    41f2:	bb 1b       	sub	r27, r27
    41f4:	51 e1       	ldi	r21, 0x11	; 17
    41f6:	07 c0       	rjmp	.+14     	; 0x4206 <__udivmodhi4_ep>

000041f8 <__udivmodhi4_loop>:
    41f8:	aa 1f       	adc	r26, r26
    41fa:	bb 1f       	adc	r27, r27
    41fc:	a6 17       	cp	r26, r22
    41fe:	b7 07       	cpc	r27, r23
    4200:	10 f0       	brcs	.+4      	; 0x4206 <__udivmodhi4_ep>
    4202:	a6 1b       	sub	r26, r22
    4204:	b7 0b       	sbc	r27, r23

00004206 <__udivmodhi4_ep>:
    4206:	88 1f       	adc	r24, r24
    4208:	99 1f       	adc	r25, r25
    420a:	5a 95       	dec	r21
    420c:	a9 f7       	brne	.-22     	; 0x41f8 <__udivmodhi4_loop>
    420e:	80 95       	com	r24
    4210:	90 95       	com	r25
    4212:	bc 01       	movw	r22, r24
    4214:	cd 01       	movw	r24, r26
    4216:	08 95       	ret

00004218 <malloc>:
    4218:	cf 93       	push	r28
    421a:	df 93       	push	r29
    421c:	82 30       	cpi	r24, 0x02	; 2
    421e:	91 05       	cpc	r25, r1
    4220:	10 f4       	brcc	.+4      	; 0x4226 <malloc+0xe>
    4222:	82 e0       	ldi	r24, 0x02	; 2
    4224:	90 e0       	ldi	r25, 0x00	; 0
    4226:	e0 91 04 01 	lds	r30, 0x0104
    422a:	f0 91 05 01 	lds	r31, 0x0105
    422e:	20 e0       	ldi	r18, 0x00	; 0
    4230:	30 e0       	ldi	r19, 0x00	; 0
    4232:	a0 e0       	ldi	r26, 0x00	; 0
    4234:	b0 e0       	ldi	r27, 0x00	; 0
    4236:	30 97       	sbiw	r30, 0x00	; 0
    4238:	39 f1       	breq	.+78     	; 0x4288 <malloc+0x70>
    423a:	40 81       	ld	r20, Z
    423c:	51 81       	ldd	r21, Z+1	; 0x01
    423e:	48 17       	cp	r20, r24
    4240:	59 07       	cpc	r21, r25
    4242:	b8 f0       	brcs	.+46     	; 0x4272 <malloc+0x5a>
    4244:	48 17       	cp	r20, r24
    4246:	59 07       	cpc	r21, r25
    4248:	71 f4       	brne	.+28     	; 0x4266 <malloc+0x4e>
    424a:	82 81       	ldd	r24, Z+2	; 0x02
    424c:	93 81       	ldd	r25, Z+3	; 0x03
    424e:	10 97       	sbiw	r26, 0x00	; 0
    4250:	29 f0       	breq	.+10     	; 0x425c <malloc+0x44>
    4252:	13 96       	adiw	r26, 0x03	; 3
    4254:	9c 93       	st	X, r25
    4256:	8e 93       	st	-X, r24
    4258:	12 97       	sbiw	r26, 0x02	; 2
    425a:	2c c0       	rjmp	.+88     	; 0x42b4 <malloc+0x9c>
    425c:	90 93 05 01 	sts	0x0105, r25
    4260:	80 93 04 01 	sts	0x0104, r24
    4264:	27 c0       	rjmp	.+78     	; 0x42b4 <malloc+0x9c>
    4266:	21 15       	cp	r18, r1
    4268:	31 05       	cpc	r19, r1
    426a:	31 f0       	breq	.+12     	; 0x4278 <malloc+0x60>
    426c:	42 17       	cp	r20, r18
    426e:	53 07       	cpc	r21, r19
    4270:	18 f0       	brcs	.+6      	; 0x4278 <malloc+0x60>
    4272:	a9 01       	movw	r20, r18
    4274:	db 01       	movw	r26, r22
    4276:	01 c0       	rjmp	.+2      	; 0x427a <malloc+0x62>
    4278:	ef 01       	movw	r28, r30
    427a:	9a 01       	movw	r18, r20
    427c:	bd 01       	movw	r22, r26
    427e:	df 01       	movw	r26, r30
    4280:	02 80       	ldd	r0, Z+2	; 0x02
    4282:	f3 81       	ldd	r31, Z+3	; 0x03
    4284:	e0 2d       	mov	r30, r0
    4286:	d7 cf       	rjmp	.-82     	; 0x4236 <malloc+0x1e>
    4288:	21 15       	cp	r18, r1
    428a:	31 05       	cpc	r19, r1
    428c:	f9 f0       	breq	.+62     	; 0x42cc <malloc+0xb4>
    428e:	28 1b       	sub	r18, r24
    4290:	39 0b       	sbc	r19, r25
    4292:	24 30       	cpi	r18, 0x04	; 4
    4294:	31 05       	cpc	r19, r1
    4296:	80 f4       	brcc	.+32     	; 0x42b8 <malloc+0xa0>
    4298:	8a 81       	ldd	r24, Y+2	; 0x02
    429a:	9b 81       	ldd	r25, Y+3	; 0x03
    429c:	61 15       	cp	r22, r1
    429e:	71 05       	cpc	r23, r1
    42a0:	21 f0       	breq	.+8      	; 0x42aa <malloc+0x92>
    42a2:	fb 01       	movw	r30, r22
    42a4:	93 83       	std	Z+3, r25	; 0x03
    42a6:	82 83       	std	Z+2, r24	; 0x02
    42a8:	04 c0       	rjmp	.+8      	; 0x42b2 <malloc+0x9a>
    42aa:	90 93 05 01 	sts	0x0105, r25
    42ae:	80 93 04 01 	sts	0x0104, r24
    42b2:	fe 01       	movw	r30, r28
    42b4:	32 96       	adiw	r30, 0x02	; 2
    42b6:	44 c0       	rjmp	.+136    	; 0x4340 <malloc+0x128>
    42b8:	fe 01       	movw	r30, r28
    42ba:	e2 0f       	add	r30, r18
    42bc:	f3 1f       	adc	r31, r19
    42be:	81 93       	st	Z+, r24
    42c0:	91 93       	st	Z+, r25
    42c2:	22 50       	subi	r18, 0x02	; 2
    42c4:	31 09       	sbc	r19, r1
    42c6:	39 83       	std	Y+1, r19	; 0x01
    42c8:	28 83       	st	Y, r18
    42ca:	3a c0       	rjmp	.+116    	; 0x4340 <malloc+0x128>
    42cc:	20 91 02 01 	lds	r18, 0x0102
    42d0:	30 91 03 01 	lds	r19, 0x0103
    42d4:	23 2b       	or	r18, r19
    42d6:	41 f4       	brne	.+16     	; 0x42e8 <malloc+0xd0>
    42d8:	20 91 62 00 	lds	r18, 0x0062
    42dc:	30 91 63 00 	lds	r19, 0x0063
    42e0:	30 93 03 01 	sts	0x0103, r19
    42e4:	20 93 02 01 	sts	0x0102, r18
    42e8:	20 91 60 00 	lds	r18, 0x0060
    42ec:	30 91 61 00 	lds	r19, 0x0061
    42f0:	21 15       	cp	r18, r1
    42f2:	31 05       	cpc	r19, r1
    42f4:	41 f4       	brne	.+16     	; 0x4306 <malloc+0xee>
    42f6:	2d b7       	in	r18, 0x3d	; 61
    42f8:	3e b7       	in	r19, 0x3e	; 62
    42fa:	40 91 64 00 	lds	r20, 0x0064
    42fe:	50 91 65 00 	lds	r21, 0x0065
    4302:	24 1b       	sub	r18, r20
    4304:	35 0b       	sbc	r19, r21
    4306:	e0 91 02 01 	lds	r30, 0x0102
    430a:	f0 91 03 01 	lds	r31, 0x0103
    430e:	e2 17       	cp	r30, r18
    4310:	f3 07       	cpc	r31, r19
    4312:	a0 f4       	brcc	.+40     	; 0x433c <malloc+0x124>
    4314:	2e 1b       	sub	r18, r30
    4316:	3f 0b       	sbc	r19, r31
    4318:	28 17       	cp	r18, r24
    431a:	39 07       	cpc	r19, r25
    431c:	78 f0       	brcs	.+30     	; 0x433c <malloc+0x124>
    431e:	ac 01       	movw	r20, r24
    4320:	4e 5f       	subi	r20, 0xFE	; 254
    4322:	5f 4f       	sbci	r21, 0xFF	; 255
    4324:	24 17       	cp	r18, r20
    4326:	35 07       	cpc	r19, r21
    4328:	48 f0       	brcs	.+18     	; 0x433c <malloc+0x124>
    432a:	4e 0f       	add	r20, r30
    432c:	5f 1f       	adc	r21, r31
    432e:	50 93 03 01 	sts	0x0103, r21
    4332:	40 93 02 01 	sts	0x0102, r20
    4336:	81 93       	st	Z+, r24
    4338:	91 93       	st	Z+, r25
    433a:	02 c0       	rjmp	.+4      	; 0x4340 <malloc+0x128>
    433c:	e0 e0       	ldi	r30, 0x00	; 0
    433e:	f0 e0       	ldi	r31, 0x00	; 0
    4340:	cf 01       	movw	r24, r30
    4342:	df 91       	pop	r29
    4344:	cf 91       	pop	r28
    4346:	08 95       	ret

00004348 <free>:
    4348:	cf 93       	push	r28
    434a:	df 93       	push	r29
    434c:	00 97       	sbiw	r24, 0x00	; 0
    434e:	09 f4       	brne	.+2      	; 0x4352 <free+0xa>
    4350:	87 c0       	rjmp	.+270    	; 0x4460 <free+0x118>
    4352:	fc 01       	movw	r30, r24
    4354:	32 97       	sbiw	r30, 0x02	; 2
    4356:	13 82       	std	Z+3, r1	; 0x03
    4358:	12 82       	std	Z+2, r1	; 0x02
    435a:	c0 91 04 01 	lds	r28, 0x0104
    435e:	d0 91 05 01 	lds	r29, 0x0105
    4362:	20 97       	sbiw	r28, 0x00	; 0
    4364:	81 f4       	brne	.+32     	; 0x4386 <free+0x3e>
    4366:	20 81       	ld	r18, Z
    4368:	31 81       	ldd	r19, Z+1	; 0x01
    436a:	28 0f       	add	r18, r24
    436c:	39 1f       	adc	r19, r25
    436e:	80 91 02 01 	lds	r24, 0x0102
    4372:	90 91 03 01 	lds	r25, 0x0103
    4376:	82 17       	cp	r24, r18
    4378:	93 07       	cpc	r25, r19
    437a:	79 f5       	brne	.+94     	; 0x43da <free+0x92>
    437c:	f0 93 03 01 	sts	0x0103, r31
    4380:	e0 93 02 01 	sts	0x0102, r30
    4384:	6d c0       	rjmp	.+218    	; 0x4460 <free+0x118>
    4386:	de 01       	movw	r26, r28
    4388:	20 e0       	ldi	r18, 0x00	; 0
    438a:	30 e0       	ldi	r19, 0x00	; 0
    438c:	ae 17       	cp	r26, r30
    438e:	bf 07       	cpc	r27, r31
    4390:	50 f4       	brcc	.+20     	; 0x43a6 <free+0x5e>
    4392:	12 96       	adiw	r26, 0x02	; 2
    4394:	4d 91       	ld	r20, X+
    4396:	5c 91       	ld	r21, X
    4398:	13 97       	sbiw	r26, 0x03	; 3
    439a:	9d 01       	movw	r18, r26
    439c:	41 15       	cp	r20, r1
    439e:	51 05       	cpc	r21, r1
    43a0:	09 f1       	breq	.+66     	; 0x43e4 <free+0x9c>
    43a2:	da 01       	movw	r26, r20
    43a4:	f3 cf       	rjmp	.-26     	; 0x438c <free+0x44>
    43a6:	b3 83       	std	Z+3, r27	; 0x03
    43a8:	a2 83       	std	Z+2, r26	; 0x02
    43aa:	40 81       	ld	r20, Z
    43ac:	51 81       	ldd	r21, Z+1	; 0x01
    43ae:	84 0f       	add	r24, r20
    43b0:	95 1f       	adc	r25, r21
    43b2:	8a 17       	cp	r24, r26
    43b4:	9b 07       	cpc	r25, r27
    43b6:	71 f4       	brne	.+28     	; 0x43d4 <free+0x8c>
    43b8:	8d 91       	ld	r24, X+
    43ba:	9c 91       	ld	r25, X
    43bc:	11 97       	sbiw	r26, 0x01	; 1
    43be:	84 0f       	add	r24, r20
    43c0:	95 1f       	adc	r25, r21
    43c2:	02 96       	adiw	r24, 0x02	; 2
    43c4:	91 83       	std	Z+1, r25	; 0x01
    43c6:	80 83       	st	Z, r24
    43c8:	12 96       	adiw	r26, 0x02	; 2
    43ca:	8d 91       	ld	r24, X+
    43cc:	9c 91       	ld	r25, X
    43ce:	13 97       	sbiw	r26, 0x03	; 3
    43d0:	93 83       	std	Z+3, r25	; 0x03
    43d2:	82 83       	std	Z+2, r24	; 0x02
    43d4:	21 15       	cp	r18, r1
    43d6:	31 05       	cpc	r19, r1
    43d8:	29 f4       	brne	.+10     	; 0x43e4 <free+0x9c>
    43da:	f0 93 05 01 	sts	0x0105, r31
    43de:	e0 93 04 01 	sts	0x0104, r30
    43e2:	3e c0       	rjmp	.+124    	; 0x4460 <free+0x118>
    43e4:	d9 01       	movw	r26, r18
    43e6:	13 96       	adiw	r26, 0x03	; 3
    43e8:	fc 93       	st	X, r31
    43ea:	ee 93       	st	-X, r30
    43ec:	12 97       	sbiw	r26, 0x02	; 2
    43ee:	4d 91       	ld	r20, X+
    43f0:	5d 91       	ld	r21, X+
    43f2:	a4 0f       	add	r26, r20
    43f4:	b5 1f       	adc	r27, r21
    43f6:	ea 17       	cp	r30, r26
    43f8:	fb 07       	cpc	r31, r27
    43fa:	79 f4       	brne	.+30     	; 0x441a <free+0xd2>
    43fc:	80 81       	ld	r24, Z
    43fe:	91 81       	ldd	r25, Z+1	; 0x01
    4400:	84 0f       	add	r24, r20
    4402:	95 1f       	adc	r25, r21
    4404:	02 96       	adiw	r24, 0x02	; 2
    4406:	d9 01       	movw	r26, r18
    4408:	11 96       	adiw	r26, 0x01	; 1
    440a:	9c 93       	st	X, r25
    440c:	8e 93       	st	-X, r24
    440e:	82 81       	ldd	r24, Z+2	; 0x02
    4410:	93 81       	ldd	r25, Z+3	; 0x03
    4412:	13 96       	adiw	r26, 0x03	; 3
    4414:	9c 93       	st	X, r25
    4416:	8e 93       	st	-X, r24
    4418:	12 97       	sbiw	r26, 0x02	; 2
    441a:	e0 e0       	ldi	r30, 0x00	; 0
    441c:	f0 e0       	ldi	r31, 0x00	; 0
    441e:	8a 81       	ldd	r24, Y+2	; 0x02
    4420:	9b 81       	ldd	r25, Y+3	; 0x03
    4422:	00 97       	sbiw	r24, 0x00	; 0
    4424:	19 f0       	breq	.+6      	; 0x442c <free+0xe4>
    4426:	fe 01       	movw	r30, r28
    4428:	ec 01       	movw	r28, r24
    442a:	f9 cf       	rjmp	.-14     	; 0x441e <free+0xd6>
    442c:	ce 01       	movw	r24, r28
    442e:	02 96       	adiw	r24, 0x02	; 2
    4430:	28 81       	ld	r18, Y
    4432:	39 81       	ldd	r19, Y+1	; 0x01
    4434:	82 0f       	add	r24, r18
    4436:	93 1f       	adc	r25, r19
    4438:	20 91 02 01 	lds	r18, 0x0102
    443c:	30 91 03 01 	lds	r19, 0x0103
    4440:	28 17       	cp	r18, r24
    4442:	39 07       	cpc	r19, r25
    4444:	69 f4       	brne	.+26     	; 0x4460 <free+0x118>
    4446:	30 97       	sbiw	r30, 0x00	; 0
    4448:	29 f4       	brne	.+10     	; 0x4454 <free+0x10c>
    444a:	10 92 05 01 	sts	0x0105, r1
    444e:	10 92 04 01 	sts	0x0104, r1
    4452:	02 c0       	rjmp	.+4      	; 0x4458 <free+0x110>
    4454:	13 82       	std	Z+3, r1	; 0x03
    4456:	12 82       	std	Z+2, r1	; 0x02
    4458:	d0 93 03 01 	sts	0x0103, r29
    445c:	c0 93 02 01 	sts	0x0102, r28
    4460:	df 91       	pop	r29
    4462:	cf 91       	pop	r28
    4464:	08 95       	ret

00004466 <do_rand>:
    4466:	8f 92       	push	r8
    4468:	9f 92       	push	r9
    446a:	af 92       	push	r10
    446c:	bf 92       	push	r11
    446e:	cf 92       	push	r12
    4470:	df 92       	push	r13
    4472:	ef 92       	push	r14
    4474:	ff 92       	push	r15
    4476:	cf 93       	push	r28
    4478:	df 93       	push	r29
    447a:	ec 01       	movw	r28, r24
    447c:	68 81       	ld	r22, Y
    447e:	79 81       	ldd	r23, Y+1	; 0x01
    4480:	8a 81       	ldd	r24, Y+2	; 0x02
    4482:	9b 81       	ldd	r25, Y+3	; 0x03
    4484:	61 15       	cp	r22, r1
    4486:	71 05       	cpc	r23, r1
    4488:	81 05       	cpc	r24, r1
    448a:	91 05       	cpc	r25, r1
    448c:	21 f4       	brne	.+8      	; 0x4496 <do_rand+0x30>
    448e:	64 e2       	ldi	r22, 0x24	; 36
    4490:	79 ed       	ldi	r23, 0xD9	; 217
    4492:	8b e5       	ldi	r24, 0x5B	; 91
    4494:	97 e0       	ldi	r25, 0x07	; 7
    4496:	2d e1       	ldi	r18, 0x1D	; 29
    4498:	33 ef       	ldi	r19, 0xF3	; 243
    449a:	41 e0       	ldi	r20, 0x01	; 1
    449c:	50 e0       	ldi	r21, 0x00	; 0
    449e:	0e 94 c4 26 	call	0x4d88	; 0x4d88 <__divmodsi4>
    44a2:	49 01       	movw	r8, r18
    44a4:	5a 01       	movw	r10, r20
    44a6:	9b 01       	movw	r18, r22
    44a8:	ac 01       	movw	r20, r24
    44aa:	a7 ea       	ldi	r26, 0xA7	; 167
    44ac:	b1 e4       	ldi	r27, 0x41	; 65
    44ae:	0e 94 e3 26 	call	0x4dc6	; 0x4dc6 <__muluhisi3>
    44b2:	6b 01       	movw	r12, r22
    44b4:	7c 01       	movw	r14, r24
    44b6:	ac ee       	ldi	r26, 0xEC	; 236
    44b8:	b4 ef       	ldi	r27, 0xF4	; 244
    44ba:	a5 01       	movw	r20, r10
    44bc:	94 01       	movw	r18, r8
    44be:	0e 94 f1 26 	call	0x4de2	; 0x4de2 <__mulohisi3>
    44c2:	c6 0e       	add	r12, r22
    44c4:	d7 1e       	adc	r13, r23
    44c6:	e8 1e       	adc	r14, r24
    44c8:	f9 1e       	adc	r15, r25
    44ca:	f7 fe       	sbrs	r15, 7
    44cc:	06 c0       	rjmp	.+12     	; 0x44da <do_rand+0x74>
    44ce:	81 e0       	ldi	r24, 0x01	; 1
    44d0:	c8 1a       	sub	r12, r24
    44d2:	d1 08       	sbc	r13, r1
    44d4:	e1 08       	sbc	r14, r1
    44d6:	80 e8       	ldi	r24, 0x80	; 128
    44d8:	f8 0a       	sbc	r15, r24
    44da:	c8 82       	st	Y, r12
    44dc:	d9 82       	std	Y+1, r13	; 0x01
    44de:	ea 82       	std	Y+2, r14	; 0x02
    44e0:	fb 82       	std	Y+3, r15	; 0x03
    44e2:	c6 01       	movw	r24, r12
    44e4:	9f 77       	andi	r25, 0x7F	; 127
    44e6:	df 91       	pop	r29
    44e8:	cf 91       	pop	r28
    44ea:	ff 90       	pop	r15
    44ec:	ef 90       	pop	r14
    44ee:	df 90       	pop	r13
    44f0:	cf 90       	pop	r12
    44f2:	bf 90       	pop	r11
    44f4:	af 90       	pop	r10
    44f6:	9f 90       	pop	r9
    44f8:	8f 90       	pop	r8
    44fa:	08 95       	ret

000044fc <rand_r>:
    44fc:	0e 94 33 22 	call	0x4466	; 0x4466 <do_rand>
    4500:	08 95       	ret

00004502 <rand>:
    4502:	86 e6       	ldi	r24, 0x66	; 102
    4504:	90 e0       	ldi	r25, 0x00	; 0
    4506:	0e 94 33 22 	call	0x4466	; 0x4466 <do_rand>
    450a:	08 95       	ret

0000450c <srand>:
    450c:	a0 e0       	ldi	r26, 0x00	; 0
    450e:	b0 e0       	ldi	r27, 0x00	; 0
    4510:	80 93 66 00 	sts	0x0066, r24
    4514:	90 93 67 00 	sts	0x0067, r25
    4518:	a0 93 68 00 	sts	0x0068, r26
    451c:	b0 93 69 00 	sts	0x0069, r27
    4520:	08 95       	ret

00004522 <strtol>:
    4522:	2f 92       	push	r2
    4524:	3f 92       	push	r3
    4526:	5f 92       	push	r5
    4528:	6f 92       	push	r6
    452a:	7f 92       	push	r7
    452c:	8f 92       	push	r8
    452e:	9f 92       	push	r9
    4530:	af 92       	push	r10
    4532:	bf 92       	push	r11
    4534:	cf 92       	push	r12
    4536:	df 92       	push	r13
    4538:	ef 92       	push	r14
    453a:	ff 92       	push	r15
    453c:	0f 93       	push	r16
    453e:	1f 93       	push	r17
    4540:	cf 93       	push	r28
    4542:	df 93       	push	r29
    4544:	8b 01       	movw	r16, r22
    4546:	ea 01       	movw	r28, r20
    4548:	61 15       	cp	r22, r1
    454a:	71 05       	cpc	r23, r1
    454c:	21 f0       	breq	.+8      	; 0x4556 <strtol+0x34>
    454e:	db 01       	movw	r26, r22
    4550:	8c 93       	st	X, r24
    4552:	11 96       	adiw	r26, 0x01	; 1
    4554:	9c 93       	st	X, r25
    4556:	20 97       	sbiw	r28, 0x00	; 0
    4558:	39 f0       	breq	.+14     	; 0x4568 <strtol+0x46>
    455a:	9e 01       	movw	r18, r28
    455c:	22 50       	subi	r18, 0x02	; 2
    455e:	31 09       	sbc	r19, r1
    4560:	23 32       	cpi	r18, 0x23	; 35
    4562:	31 05       	cpc	r19, r1
    4564:	08 f0       	brcs	.+2      	; 0x4568 <strtol+0x46>
    4566:	fb c0       	rjmp	.+502    	; 0x475e <strtol+0x23c>
    4568:	7c 01       	movw	r14, r24
    456a:	67 01       	movw	r12, r14
    456c:	bf ef       	ldi	r27, 0xFF	; 255
    456e:	cb 1a       	sub	r12, r27
    4570:	db 0a       	sbc	r13, r27
    4572:	56 01       	movw	r10, r12
    4574:	f7 01       	movw	r30, r14
    4576:	60 80       	ld	r6, Z
    4578:	86 2d       	mov	r24, r6
    457a:	90 e0       	ldi	r25, 0x00	; 0
    457c:	0e 94 c5 23 	call	0x478a	; 0x478a <isspace>
    4580:	89 2b       	or	r24, r25
    4582:	11 f0       	breq	.+4      	; 0x4588 <strtol+0x66>
    4584:	76 01       	movw	r14, r12
    4586:	f1 cf       	rjmp	.-30     	; 0x456a <strtol+0x48>
    4588:	fd e2       	ldi	r31, 0x2D	; 45
    458a:	6f 12       	cpse	r6, r31
    458c:	0a c0       	rjmp	.+20     	; 0x45a2 <strtol+0x80>
    458e:	57 01       	movw	r10, r14
    4590:	82 e0       	ldi	r24, 0x02	; 2
    4592:	a8 0e       	add	r10, r24
    4594:	b1 1c       	adc	r11, r1
    4596:	d7 01       	movw	r26, r14
    4598:	11 96       	adiw	r26, 0x01	; 1
    459a:	6c 90       	ld	r6, X
    459c:	77 24       	eor	r7, r7
    459e:	73 94       	inc	r7
    45a0:	0b c0       	rjmp	.+22     	; 0x45b8 <strtol+0x96>
    45a2:	bb e2       	ldi	r27, 0x2B	; 43
    45a4:	6b 12       	cpse	r6, r27
    45a6:	07 c0       	rjmp	.+14     	; 0x45b6 <strtol+0x94>
    45a8:	57 01       	movw	r10, r14
    45aa:	e2 e0       	ldi	r30, 0x02	; 2
    45ac:	ae 0e       	add	r10, r30
    45ae:	b1 1c       	adc	r11, r1
    45b0:	d7 01       	movw	r26, r14
    45b2:	11 96       	adiw	r26, 0x01	; 1
    45b4:	6c 90       	ld	r6, X
    45b6:	71 2c       	mov	r7, r1
    45b8:	ce 01       	movw	r24, r28
    45ba:	8f 7e       	andi	r24, 0xEF	; 239
    45bc:	89 2b       	or	r24, r25
    45be:	89 f4       	brne	.+34     	; 0x45e2 <strtol+0xc0>
    45c0:	b0 e3       	ldi	r27, 0x30	; 48
    45c2:	6b 12       	cpse	r6, r27
    45c4:	22 c0       	rjmp	.+68     	; 0x460a <strtol+0xe8>
    45c6:	f5 01       	movw	r30, r10
    45c8:	80 81       	ld	r24, Z
    45ca:	8f 7d       	andi	r24, 0xDF	; 223
    45cc:	88 35       	cpi	r24, 0x58	; 88
    45ce:	41 f5       	brne	.+80     	; 0x4620 <strtol+0xfe>
    45d0:	61 80       	ldd	r6, Z+1	; 0x01
    45d2:	f2 e0       	ldi	r31, 0x02	; 2
    45d4:	af 0e       	add	r10, r31
    45d6:	b1 1c       	adc	r11, r1
    45d8:	87 2d       	mov	r24, r7
    45da:	82 60       	ori	r24, 0x02	; 2
    45dc:	78 2e       	mov	r7, r24
    45de:	c0 e1       	ldi	r28, 0x10	; 16
    45e0:	d0 e0       	ldi	r29, 0x00	; 0
    45e2:	c8 30       	cpi	r28, 0x08	; 8
    45e4:	d1 05       	cpc	r29, r1
    45e6:	f1 f0       	breq	.+60     	; 0x4624 <strtol+0x102>
    45e8:	4c f4       	brge	.+18     	; 0x45fc <strtol+0xda>
    45ea:	c2 30       	cpi	r28, 0x02	; 2
    45ec:	d1 05       	cpc	r29, r1
    45ee:	11 f5       	brne	.+68     	; 0x4634 <strtol+0x112>
    45f0:	c1 2c       	mov	r12, r1
    45f2:	d1 2c       	mov	r13, r1
    45f4:	e1 2c       	mov	r14, r1
    45f6:	b0 e4       	ldi	r27, 0x40	; 64
    45f8:	fb 2e       	mov	r15, r27
    45fa:	2f c0       	rjmp	.+94     	; 0x465a <strtol+0x138>
    45fc:	ca 30       	cpi	r28, 0x0A	; 10
    45fe:	d1 05       	cpc	r29, r1
    4600:	31 f0       	breq	.+12     	; 0x460e <strtol+0xec>
    4602:	c0 31       	cpi	r28, 0x10	; 16
    4604:	d1 05       	cpc	r29, r1
    4606:	21 f1       	breq	.+72     	; 0x4650 <strtol+0x12e>
    4608:	15 c0       	rjmp	.+42     	; 0x4634 <strtol+0x112>
    460a:	20 97       	sbiw	r28, 0x00	; 0
    460c:	51 f7       	brne	.-44     	; 0x45e2 <strtol+0xc0>
    460e:	ca e0       	ldi	r28, 0x0A	; 10
    4610:	d0 e0       	ldi	r29, 0x00	; 0
    4612:	ac ec       	ldi	r26, 0xCC	; 204
    4614:	ca 2e       	mov	r12, r26
    4616:	dc 2c       	mov	r13, r12
    4618:	ec 2c       	mov	r14, r12
    461a:	ac e0       	ldi	r26, 0x0C	; 12
    461c:	fa 2e       	mov	r15, r26
    461e:	1d c0       	rjmp	.+58     	; 0x465a <strtol+0x138>
    4620:	20 97       	sbiw	r28, 0x00	; 0
    4622:	f9 f6       	brne	.-66     	; 0x45e2 <strtol+0xc0>
    4624:	c8 e0       	ldi	r28, 0x08	; 8
    4626:	d0 e0       	ldi	r29, 0x00	; 0
    4628:	c1 2c       	mov	r12, r1
    462a:	d1 2c       	mov	r13, r1
    462c:	e1 2c       	mov	r14, r1
    462e:	f0 e1       	ldi	r31, 0x10	; 16
    4630:	ff 2e       	mov	r15, r31
    4632:	13 c0       	rjmp	.+38     	; 0x465a <strtol+0x138>
    4634:	60 e0       	ldi	r22, 0x00	; 0
    4636:	70 e0       	ldi	r23, 0x00	; 0
    4638:	80 e0       	ldi	r24, 0x00	; 0
    463a:	90 e8       	ldi	r25, 0x80	; 128
    463c:	9e 01       	movw	r18, r28
    463e:	44 27       	eor	r20, r20
    4640:	37 fd       	sbrc	r19, 7
    4642:	40 95       	com	r20
    4644:	54 2f       	mov	r21, r20
    4646:	0e 94 a2 26 	call	0x4d44	; 0x4d44 <__udivmodsi4>
    464a:	69 01       	movw	r12, r18
    464c:	7a 01       	movw	r14, r20
    464e:	05 c0       	rjmp	.+10     	; 0x465a <strtol+0x138>
    4650:	c1 2c       	mov	r12, r1
    4652:	d1 2c       	mov	r13, r1
    4654:	e1 2c       	mov	r14, r1
    4656:	e8 e0       	ldi	r30, 0x08	; 8
    4658:	fe 2e       	mov	r15, r30
    465a:	f5 01       	movw	r30, r10
    465c:	60 e0       	ldi	r22, 0x00	; 0
    465e:	20 e0       	ldi	r18, 0x00	; 0
    4660:	30 e0       	ldi	r19, 0x00	; 0
    4662:	a9 01       	movw	r20, r18
    4664:	4e 01       	movw	r8, r28
    4666:	aa 24       	eor	r10, r10
    4668:	97 fc       	sbrc	r9, 7
    466a:	a0 94       	com	r10
    466c:	ba 2c       	mov	r11, r10
    466e:	1f 01       	movw	r2, r30
    4670:	70 ed       	ldi	r23, 0xD0	; 208
    4672:	57 2e       	mov	r5, r23
    4674:	56 0c       	add	r5, r6
    4676:	a9 e0       	ldi	r26, 0x09	; 9
    4678:	a5 15       	cp	r26, r5
    467a:	70 f4       	brcc	.+28     	; 0x4698 <strtol+0x176>
    467c:	8f eb       	ldi	r24, 0xBF	; 191
    467e:	86 0d       	add	r24, r6
    4680:	8a 31       	cpi	r24, 0x1A	; 26
    4682:	18 f4       	brcc	.+6      	; 0x468a <strtol+0x168>
    4684:	99 ec       	ldi	r25, 0xC9	; 201
    4686:	59 2e       	mov	r5, r25
    4688:	06 c0       	rjmp	.+12     	; 0x4696 <strtol+0x174>
    468a:	8f e9       	ldi	r24, 0x9F	; 159
    468c:	86 0d       	add	r24, r6
    468e:	8a 31       	cpi	r24, 0x1A	; 26
    4690:	30 f5       	brcc	.+76     	; 0x46de <strtol+0x1bc>
    4692:	89 ea       	ldi	r24, 0xA9	; 169
    4694:	58 2e       	mov	r5, r24
    4696:	56 0c       	add	r5, r6
    4698:	85 2d       	mov	r24, r5
    469a:	90 e0       	ldi	r25, 0x00	; 0
    469c:	8c 17       	cp	r24, r28
    469e:	9d 07       	cpc	r25, r29
    46a0:	f4 f4       	brge	.+60     	; 0x46de <strtol+0x1bc>
    46a2:	67 fd       	sbrc	r22, 7
    46a4:	18 c0       	rjmp	.+48     	; 0x46d6 <strtol+0x1b4>
    46a6:	c2 16       	cp	r12, r18
    46a8:	d3 06       	cpc	r13, r19
    46aa:	e4 06       	cpc	r14, r20
    46ac:	f5 06       	cpc	r15, r21
    46ae:	80 f0       	brcs	.+32     	; 0x46d0 <strtol+0x1ae>
    46b0:	c5 01       	movw	r24, r10
    46b2:	b4 01       	movw	r22, r8
    46b4:	0e 94 92 26 	call	0x4d24	; 0x4d24 <__mulsi3>
    46b8:	9b 01       	movw	r18, r22
    46ba:	ac 01       	movw	r20, r24
    46bc:	25 0d       	add	r18, r5
    46be:	31 1d       	adc	r19, r1
    46c0:	41 1d       	adc	r20, r1
    46c2:	51 1d       	adc	r21, r1
    46c4:	21 30       	cpi	r18, 0x01	; 1
    46c6:	31 05       	cpc	r19, r1
    46c8:	41 05       	cpc	r20, r1
    46ca:	b0 e8       	ldi	r27, 0x80	; 128
    46cc:	5b 07       	cpc	r21, r27
    46ce:	10 f0       	brcs	.+4      	; 0x46d4 <strtol+0x1b2>
    46d0:	6f ef       	ldi	r22, 0xFF	; 255
    46d2:	01 c0       	rjmp	.+2      	; 0x46d6 <strtol+0x1b4>
    46d4:	61 e0       	ldi	r22, 0x01	; 1
    46d6:	31 96       	adiw	r30, 0x01	; 1
    46d8:	d1 01       	movw	r26, r2
    46da:	6c 90       	ld	r6, X
    46dc:	c8 cf       	rjmp	.-112    	; 0x466e <strtol+0x14c>
    46de:	87 2d       	mov	r24, r7
    46e0:	81 70       	andi	r24, 0x01	; 1
    46e2:	01 15       	cp	r16, r1
    46e4:	11 05       	cpc	r17, r1
    46e6:	71 f0       	breq	.+28     	; 0x4704 <strtol+0x1e2>
    46e8:	66 23       	and	r22, r22
    46ea:	29 f0       	breq	.+10     	; 0x46f6 <strtol+0x1d4>
    46ec:	31 97       	sbiw	r30, 0x01	; 1
    46ee:	d8 01       	movw	r26, r16
    46f0:	ed 93       	st	X+, r30
    46f2:	fc 93       	st	X, r31
    46f4:	07 c0       	rjmp	.+14     	; 0x4704 <strtol+0x1e2>
    46f6:	71 fe       	sbrs	r7, 1
    46f8:	19 c0       	rjmp	.+50     	; 0x472c <strtol+0x20a>
    46fa:	32 97       	sbiw	r30, 0x02	; 2
    46fc:	d8 01       	movw	r26, r16
    46fe:	ed 93       	st	X+, r30
    4700:	fc 93       	st	X, r31
    4702:	14 c0       	rjmp	.+40     	; 0x472c <strtol+0x20a>
    4704:	67 ff       	sbrs	r22, 7
    4706:	12 c0       	rjmp	.+36     	; 0x472c <strtol+0x20a>
    4708:	88 23       	and	r24, r24
    470a:	29 f0       	breq	.+10     	; 0x4716 <strtol+0x1f4>
    470c:	20 e0       	ldi	r18, 0x00	; 0
    470e:	30 e0       	ldi	r19, 0x00	; 0
    4710:	40 e0       	ldi	r20, 0x00	; 0
    4712:	50 e8       	ldi	r21, 0x80	; 128
    4714:	04 c0       	rjmp	.+8      	; 0x471e <strtol+0x1fc>
    4716:	2f ef       	ldi	r18, 0xFF	; 255
    4718:	3f ef       	ldi	r19, 0xFF	; 255
    471a:	4f ef       	ldi	r20, 0xFF	; 255
    471c:	5f e7       	ldi	r21, 0x7F	; 127
    471e:	82 e2       	ldi	r24, 0x22	; 34
    4720:	90 e0       	ldi	r25, 0x00	; 0
    4722:	90 93 07 01 	sts	0x0107, r25
    4726:	80 93 06 01 	sts	0x0106, r24
    472a:	16 c0       	rjmp	.+44     	; 0x4758 <strtol+0x236>
    472c:	88 23       	and	r24, r24
    472e:	41 f0       	breq	.+16     	; 0x4740 <strtol+0x21e>
    4730:	50 95       	com	r21
    4732:	40 95       	com	r20
    4734:	30 95       	com	r19
    4736:	21 95       	neg	r18
    4738:	3f 4f       	sbci	r19, 0xFF	; 255
    473a:	4f 4f       	sbci	r20, 0xFF	; 255
    473c:	5f 4f       	sbci	r21, 0xFF	; 255
    473e:	0c c0       	rjmp	.+24     	; 0x4758 <strtol+0x236>
    4740:	57 ff       	sbrs	r21, 7
    4742:	0a c0       	rjmp	.+20     	; 0x4758 <strtol+0x236>
    4744:	82 e2       	ldi	r24, 0x22	; 34
    4746:	90 e0       	ldi	r25, 0x00	; 0
    4748:	90 93 07 01 	sts	0x0107, r25
    474c:	80 93 06 01 	sts	0x0106, r24
    4750:	2f ef       	ldi	r18, 0xFF	; 255
    4752:	3f ef       	ldi	r19, 0xFF	; 255
    4754:	4f ef       	ldi	r20, 0xFF	; 255
    4756:	5f e7       	ldi	r21, 0x7F	; 127
    4758:	b9 01       	movw	r22, r18
    475a:	ca 01       	movw	r24, r20
    475c:	04 c0       	rjmp	.+8      	; 0x4766 <strtol+0x244>
    475e:	60 e0       	ldi	r22, 0x00	; 0
    4760:	70 e0       	ldi	r23, 0x00	; 0
    4762:	80 e0       	ldi	r24, 0x00	; 0
    4764:	90 e0       	ldi	r25, 0x00	; 0
    4766:	df 91       	pop	r29
    4768:	cf 91       	pop	r28
    476a:	1f 91       	pop	r17
    476c:	0f 91       	pop	r16
    476e:	ff 90       	pop	r15
    4770:	ef 90       	pop	r14
    4772:	df 90       	pop	r13
    4774:	cf 90       	pop	r12
    4776:	bf 90       	pop	r11
    4778:	af 90       	pop	r10
    477a:	9f 90       	pop	r9
    477c:	8f 90       	pop	r8
    477e:	7f 90       	pop	r7
    4780:	6f 90       	pop	r6
    4782:	5f 90       	pop	r5
    4784:	3f 90       	pop	r3
    4786:	2f 90       	pop	r2
    4788:	08 95       	ret

0000478a <isspace>:
    478a:	91 11       	cpse	r25, r1
    478c:	05 c2       	rjmp	.+1034   	; 0x4b98 <__ctype_isfalse>
    478e:	80 32       	cpi	r24, 0x20	; 32
    4790:	19 f0       	breq	.+6      	; 0x4798 <isspace+0xe>
    4792:	89 50       	subi	r24, 0x09	; 9
    4794:	85 50       	subi	r24, 0x05	; 5
    4796:	d0 f7       	brcc	.-12     	; 0x478c <isspace+0x2>
    4798:	08 95       	ret

0000479a <sprintf>:
    479a:	ae e0       	ldi	r26, 0x0E	; 14
    479c:	b0 e0       	ldi	r27, 0x00	; 0
    479e:	e3 ed       	ldi	r30, 0xD3	; 211
    47a0:	f3 e2       	ldi	r31, 0x23	; 35
    47a2:	0c 94 04 27 	jmp	0x4e08	; 0x4e08 <__prologue_saves__+0x1c>
    47a6:	0d 89       	ldd	r16, Y+21	; 0x15
    47a8:	1e 89       	ldd	r17, Y+22	; 0x16
    47aa:	86 e0       	ldi	r24, 0x06	; 6
    47ac:	8c 83       	std	Y+4, r24	; 0x04
    47ae:	1a 83       	std	Y+2, r17	; 0x02
    47b0:	09 83       	std	Y+1, r16	; 0x01
    47b2:	8f ef       	ldi	r24, 0xFF	; 255
    47b4:	9f e7       	ldi	r25, 0x7F	; 127
    47b6:	9e 83       	std	Y+6, r25	; 0x06
    47b8:	8d 83       	std	Y+5, r24	; 0x05
    47ba:	ae 01       	movw	r20, r28
    47bc:	47 5e       	subi	r20, 0xE7	; 231
    47be:	5f 4f       	sbci	r21, 0xFF	; 255
    47c0:	6f 89       	ldd	r22, Y+23	; 0x17
    47c2:	78 8d       	ldd	r23, Y+24	; 0x18
    47c4:	ce 01       	movw	r24, r28
    47c6:	01 96       	adiw	r24, 0x01	; 1
    47c8:	0e 94 ef 23 	call	0x47de	; 0x47de <vfprintf>
    47cc:	ef 81       	ldd	r30, Y+7	; 0x07
    47ce:	f8 85       	ldd	r31, Y+8	; 0x08
    47d0:	e0 0f       	add	r30, r16
    47d2:	f1 1f       	adc	r31, r17
    47d4:	10 82       	st	Z, r1
    47d6:	2e 96       	adiw	r28, 0x0e	; 14
    47d8:	e4 e0       	ldi	r30, 0x04	; 4
    47da:	0c 94 20 27 	jmp	0x4e40	; 0x4e40 <__epilogue_restores__+0x1c>

000047de <vfprintf>:
    47de:	ac e0       	ldi	r26, 0x0C	; 12
    47e0:	b0 e0       	ldi	r27, 0x00	; 0
    47e2:	e5 ef       	ldi	r30, 0xF5	; 245
    47e4:	f3 e2       	ldi	r31, 0x23	; 35
    47e6:	0c 94 f6 26 	jmp	0x4dec	; 0x4dec <__prologue_saves__>
    47ea:	7c 01       	movw	r14, r24
    47ec:	6b 01       	movw	r12, r22
    47ee:	8a 01       	movw	r16, r20
    47f0:	fc 01       	movw	r30, r24
    47f2:	17 82       	std	Z+7, r1	; 0x07
    47f4:	16 82       	std	Z+6, r1	; 0x06
    47f6:	83 81       	ldd	r24, Z+3	; 0x03
    47f8:	81 ff       	sbrs	r24, 1
    47fa:	bd c1       	rjmp	.+890    	; 0x4b76 <vfprintf+0x398>
    47fc:	ce 01       	movw	r24, r28
    47fe:	01 96       	adiw	r24, 0x01	; 1
    4800:	4c 01       	movw	r8, r24
    4802:	f7 01       	movw	r30, r14
    4804:	93 81       	ldd	r25, Z+3	; 0x03
    4806:	f6 01       	movw	r30, r12
    4808:	93 fd       	sbrc	r25, 3
    480a:	85 91       	lpm	r24, Z+
    480c:	93 ff       	sbrs	r25, 3
    480e:	81 91       	ld	r24, Z+
    4810:	6f 01       	movw	r12, r30
    4812:	88 23       	and	r24, r24
    4814:	09 f4       	brne	.+2      	; 0x4818 <vfprintf+0x3a>
    4816:	ab c1       	rjmp	.+854    	; 0x4b6e <vfprintf+0x390>
    4818:	85 32       	cpi	r24, 0x25	; 37
    481a:	39 f4       	brne	.+14     	; 0x482a <vfprintf+0x4c>
    481c:	93 fd       	sbrc	r25, 3
    481e:	85 91       	lpm	r24, Z+
    4820:	93 ff       	sbrs	r25, 3
    4822:	81 91       	ld	r24, Z+
    4824:	6f 01       	movw	r12, r30
    4826:	85 32       	cpi	r24, 0x25	; 37
    4828:	29 f4       	brne	.+10     	; 0x4834 <vfprintf+0x56>
    482a:	b7 01       	movw	r22, r14
    482c:	90 e0       	ldi	r25, 0x00	; 0
    482e:	0e 94 e5 25 	call	0x4bca	; 0x4bca <fputc>
    4832:	e7 cf       	rjmp	.-50     	; 0x4802 <vfprintf+0x24>
    4834:	51 2c       	mov	r5, r1
    4836:	31 2c       	mov	r3, r1
    4838:	20 e0       	ldi	r18, 0x00	; 0
    483a:	20 32       	cpi	r18, 0x20	; 32
    483c:	a0 f4       	brcc	.+40     	; 0x4866 <vfprintf+0x88>
    483e:	8b 32       	cpi	r24, 0x2B	; 43
    4840:	69 f0       	breq	.+26     	; 0x485c <vfprintf+0x7e>
    4842:	30 f4       	brcc	.+12     	; 0x4850 <vfprintf+0x72>
    4844:	80 32       	cpi	r24, 0x20	; 32
    4846:	59 f0       	breq	.+22     	; 0x485e <vfprintf+0x80>
    4848:	83 32       	cpi	r24, 0x23	; 35
    484a:	69 f4       	brne	.+26     	; 0x4866 <vfprintf+0x88>
    484c:	20 61       	ori	r18, 0x10	; 16
    484e:	2c c0       	rjmp	.+88     	; 0x48a8 <vfprintf+0xca>
    4850:	8d 32       	cpi	r24, 0x2D	; 45
    4852:	39 f0       	breq	.+14     	; 0x4862 <vfprintf+0x84>
    4854:	80 33       	cpi	r24, 0x30	; 48
    4856:	39 f4       	brne	.+14     	; 0x4866 <vfprintf+0x88>
    4858:	21 60       	ori	r18, 0x01	; 1
    485a:	26 c0       	rjmp	.+76     	; 0x48a8 <vfprintf+0xca>
    485c:	22 60       	ori	r18, 0x02	; 2
    485e:	24 60       	ori	r18, 0x04	; 4
    4860:	23 c0       	rjmp	.+70     	; 0x48a8 <vfprintf+0xca>
    4862:	28 60       	ori	r18, 0x08	; 8
    4864:	21 c0       	rjmp	.+66     	; 0x48a8 <vfprintf+0xca>
    4866:	27 fd       	sbrc	r18, 7
    4868:	27 c0       	rjmp	.+78     	; 0x48b8 <vfprintf+0xda>
    486a:	30 ed       	ldi	r19, 0xD0	; 208
    486c:	38 0f       	add	r19, r24
    486e:	3a 30       	cpi	r19, 0x0A	; 10
    4870:	78 f4       	brcc	.+30     	; 0x4890 <vfprintf+0xb2>
    4872:	26 ff       	sbrs	r18, 6
    4874:	06 c0       	rjmp	.+12     	; 0x4882 <vfprintf+0xa4>
    4876:	fa e0       	ldi	r31, 0x0A	; 10
    4878:	5f 9e       	mul	r5, r31
    487a:	30 0d       	add	r19, r0
    487c:	11 24       	eor	r1, r1
    487e:	53 2e       	mov	r5, r19
    4880:	13 c0       	rjmp	.+38     	; 0x48a8 <vfprintf+0xca>
    4882:	8a e0       	ldi	r24, 0x0A	; 10
    4884:	38 9e       	mul	r3, r24
    4886:	30 0d       	add	r19, r0
    4888:	11 24       	eor	r1, r1
    488a:	33 2e       	mov	r3, r19
    488c:	20 62       	ori	r18, 0x20	; 32
    488e:	0c c0       	rjmp	.+24     	; 0x48a8 <vfprintf+0xca>
    4890:	8e 32       	cpi	r24, 0x2E	; 46
    4892:	21 f4       	brne	.+8      	; 0x489c <vfprintf+0xbe>
    4894:	26 fd       	sbrc	r18, 6
    4896:	6b c1       	rjmp	.+726    	; 0x4b6e <vfprintf+0x390>
    4898:	20 64       	ori	r18, 0x40	; 64
    489a:	06 c0       	rjmp	.+12     	; 0x48a8 <vfprintf+0xca>
    489c:	8c 36       	cpi	r24, 0x6C	; 108
    489e:	11 f4       	brne	.+4      	; 0x48a4 <vfprintf+0xc6>
    48a0:	20 68       	ori	r18, 0x80	; 128
    48a2:	02 c0       	rjmp	.+4      	; 0x48a8 <vfprintf+0xca>
    48a4:	88 36       	cpi	r24, 0x68	; 104
    48a6:	41 f4       	brne	.+16     	; 0x48b8 <vfprintf+0xda>
    48a8:	f6 01       	movw	r30, r12
    48aa:	93 fd       	sbrc	r25, 3
    48ac:	85 91       	lpm	r24, Z+
    48ae:	93 ff       	sbrs	r25, 3
    48b0:	81 91       	ld	r24, Z+
    48b2:	6f 01       	movw	r12, r30
    48b4:	81 11       	cpse	r24, r1
    48b6:	c1 cf       	rjmp	.-126    	; 0x483a <vfprintf+0x5c>
    48b8:	98 2f       	mov	r25, r24
    48ba:	9f 7d       	andi	r25, 0xDF	; 223
    48bc:	95 54       	subi	r25, 0x45	; 69
    48be:	93 30       	cpi	r25, 0x03	; 3
    48c0:	28 f4       	brcc	.+10     	; 0x48cc <vfprintf+0xee>
    48c2:	0c 5f       	subi	r16, 0xFC	; 252
    48c4:	1f 4f       	sbci	r17, 0xFF	; 255
    48c6:	ff e3       	ldi	r31, 0x3F	; 63
    48c8:	f9 83       	std	Y+1, r31	; 0x01
    48ca:	0d c0       	rjmp	.+26     	; 0x48e6 <vfprintf+0x108>
    48cc:	83 36       	cpi	r24, 0x63	; 99
    48ce:	31 f0       	breq	.+12     	; 0x48dc <vfprintf+0xfe>
    48d0:	83 37       	cpi	r24, 0x73	; 115
    48d2:	71 f0       	breq	.+28     	; 0x48f0 <vfprintf+0x112>
    48d4:	83 35       	cpi	r24, 0x53	; 83
    48d6:	09 f0       	breq	.+2      	; 0x48da <vfprintf+0xfc>
    48d8:	5b c0       	rjmp	.+182    	; 0x4990 <vfprintf+0x1b2>
    48da:	22 c0       	rjmp	.+68     	; 0x4920 <vfprintf+0x142>
    48dc:	f8 01       	movw	r30, r16
    48de:	80 81       	ld	r24, Z
    48e0:	89 83       	std	Y+1, r24	; 0x01
    48e2:	0e 5f       	subi	r16, 0xFE	; 254
    48e4:	1f 4f       	sbci	r17, 0xFF	; 255
    48e6:	44 24       	eor	r4, r4
    48e8:	43 94       	inc	r4
    48ea:	51 2c       	mov	r5, r1
    48ec:	54 01       	movw	r10, r8
    48ee:	15 c0       	rjmp	.+42     	; 0x491a <vfprintf+0x13c>
    48f0:	38 01       	movw	r6, r16
    48f2:	f2 e0       	ldi	r31, 0x02	; 2
    48f4:	6f 0e       	add	r6, r31
    48f6:	71 1c       	adc	r7, r1
    48f8:	f8 01       	movw	r30, r16
    48fa:	a0 80       	ld	r10, Z
    48fc:	b1 80       	ldd	r11, Z+1	; 0x01
    48fe:	26 ff       	sbrs	r18, 6
    4900:	03 c0       	rjmp	.+6      	; 0x4908 <vfprintf+0x12a>
    4902:	65 2d       	mov	r22, r5
    4904:	70 e0       	ldi	r23, 0x00	; 0
    4906:	02 c0       	rjmp	.+4      	; 0x490c <vfprintf+0x12e>
    4908:	6f ef       	ldi	r22, 0xFF	; 255
    490a:	7f ef       	ldi	r23, 0xFF	; 255
    490c:	c5 01       	movw	r24, r10
    490e:	2c 87       	std	Y+12, r18	; 0x0c
    4910:	0e 94 da 25 	call	0x4bb4	; 0x4bb4 <strnlen>
    4914:	2c 01       	movw	r4, r24
    4916:	83 01       	movw	r16, r6
    4918:	2c 85       	ldd	r18, Y+12	; 0x0c
    491a:	2f 77       	andi	r18, 0x7F	; 127
    491c:	22 2e       	mov	r2, r18
    491e:	17 c0       	rjmp	.+46     	; 0x494e <vfprintf+0x170>
    4920:	38 01       	movw	r6, r16
    4922:	f2 e0       	ldi	r31, 0x02	; 2
    4924:	6f 0e       	add	r6, r31
    4926:	71 1c       	adc	r7, r1
    4928:	f8 01       	movw	r30, r16
    492a:	a0 80       	ld	r10, Z
    492c:	b1 80       	ldd	r11, Z+1	; 0x01
    492e:	26 ff       	sbrs	r18, 6
    4930:	03 c0       	rjmp	.+6      	; 0x4938 <vfprintf+0x15a>
    4932:	65 2d       	mov	r22, r5
    4934:	70 e0       	ldi	r23, 0x00	; 0
    4936:	02 c0       	rjmp	.+4      	; 0x493c <vfprintf+0x15e>
    4938:	6f ef       	ldi	r22, 0xFF	; 255
    493a:	7f ef       	ldi	r23, 0xFF	; 255
    493c:	c5 01       	movw	r24, r10
    493e:	2c 87       	std	Y+12, r18	; 0x0c
    4940:	0e 94 cf 25 	call	0x4b9e	; 0x4b9e <strnlen_P>
    4944:	2c 01       	movw	r4, r24
    4946:	2c 85       	ldd	r18, Y+12	; 0x0c
    4948:	20 68       	ori	r18, 0x80	; 128
    494a:	22 2e       	mov	r2, r18
    494c:	83 01       	movw	r16, r6
    494e:	23 fc       	sbrc	r2, 3
    4950:	1b c0       	rjmp	.+54     	; 0x4988 <vfprintf+0x1aa>
    4952:	83 2d       	mov	r24, r3
    4954:	90 e0       	ldi	r25, 0x00	; 0
    4956:	48 16       	cp	r4, r24
    4958:	59 06       	cpc	r5, r25
    495a:	b0 f4       	brcc	.+44     	; 0x4988 <vfprintf+0x1aa>
    495c:	b7 01       	movw	r22, r14
    495e:	80 e2       	ldi	r24, 0x20	; 32
    4960:	90 e0       	ldi	r25, 0x00	; 0
    4962:	0e 94 e5 25 	call	0x4bca	; 0x4bca <fputc>
    4966:	3a 94       	dec	r3
    4968:	f4 cf       	rjmp	.-24     	; 0x4952 <vfprintf+0x174>
    496a:	f5 01       	movw	r30, r10
    496c:	27 fc       	sbrc	r2, 7
    496e:	85 91       	lpm	r24, Z+
    4970:	27 fe       	sbrs	r2, 7
    4972:	81 91       	ld	r24, Z+
    4974:	5f 01       	movw	r10, r30
    4976:	b7 01       	movw	r22, r14
    4978:	90 e0       	ldi	r25, 0x00	; 0
    497a:	0e 94 e5 25 	call	0x4bca	; 0x4bca <fputc>
    497e:	31 10       	cpse	r3, r1
    4980:	3a 94       	dec	r3
    4982:	f1 e0       	ldi	r31, 0x01	; 1
    4984:	4f 1a       	sub	r4, r31
    4986:	51 08       	sbc	r5, r1
    4988:	41 14       	cp	r4, r1
    498a:	51 04       	cpc	r5, r1
    498c:	71 f7       	brne	.-36     	; 0x496a <vfprintf+0x18c>
    498e:	e5 c0       	rjmp	.+458    	; 0x4b5a <vfprintf+0x37c>
    4990:	84 36       	cpi	r24, 0x64	; 100
    4992:	11 f0       	breq	.+4      	; 0x4998 <vfprintf+0x1ba>
    4994:	89 36       	cpi	r24, 0x69	; 105
    4996:	39 f5       	brne	.+78     	; 0x49e6 <vfprintf+0x208>
    4998:	f8 01       	movw	r30, r16
    499a:	27 ff       	sbrs	r18, 7
    499c:	07 c0       	rjmp	.+14     	; 0x49ac <vfprintf+0x1ce>
    499e:	60 81       	ld	r22, Z
    49a0:	71 81       	ldd	r23, Z+1	; 0x01
    49a2:	82 81       	ldd	r24, Z+2	; 0x02
    49a4:	93 81       	ldd	r25, Z+3	; 0x03
    49a6:	0c 5f       	subi	r16, 0xFC	; 252
    49a8:	1f 4f       	sbci	r17, 0xFF	; 255
    49aa:	08 c0       	rjmp	.+16     	; 0x49bc <vfprintf+0x1de>
    49ac:	60 81       	ld	r22, Z
    49ae:	71 81       	ldd	r23, Z+1	; 0x01
    49b0:	88 27       	eor	r24, r24
    49b2:	77 fd       	sbrc	r23, 7
    49b4:	80 95       	com	r24
    49b6:	98 2f       	mov	r25, r24
    49b8:	0e 5f       	subi	r16, 0xFE	; 254
    49ba:	1f 4f       	sbci	r17, 0xFF	; 255
    49bc:	2f 76       	andi	r18, 0x6F	; 111
    49be:	b2 2e       	mov	r11, r18
    49c0:	97 ff       	sbrs	r25, 7
    49c2:	09 c0       	rjmp	.+18     	; 0x49d6 <vfprintf+0x1f8>
    49c4:	90 95       	com	r25
    49c6:	80 95       	com	r24
    49c8:	70 95       	com	r23
    49ca:	61 95       	neg	r22
    49cc:	7f 4f       	sbci	r23, 0xFF	; 255
    49ce:	8f 4f       	sbci	r24, 0xFF	; 255
    49d0:	9f 4f       	sbci	r25, 0xFF	; 255
    49d2:	20 68       	ori	r18, 0x80	; 128
    49d4:	b2 2e       	mov	r11, r18
    49d6:	2a e0       	ldi	r18, 0x0A	; 10
    49d8:	30 e0       	ldi	r19, 0x00	; 0
    49da:	a4 01       	movw	r20, r8
    49dc:	0e 94 17 26 	call	0x4c2e	; 0x4c2e <__ultoa_invert>
    49e0:	a8 2e       	mov	r10, r24
    49e2:	a8 18       	sub	r10, r8
    49e4:	44 c0       	rjmp	.+136    	; 0x4a6e <vfprintf+0x290>
    49e6:	85 37       	cpi	r24, 0x75	; 117
    49e8:	29 f4       	brne	.+10     	; 0x49f4 <vfprintf+0x216>
    49ea:	2f 7e       	andi	r18, 0xEF	; 239
    49ec:	b2 2e       	mov	r11, r18
    49ee:	2a e0       	ldi	r18, 0x0A	; 10
    49f0:	30 e0       	ldi	r19, 0x00	; 0
    49f2:	25 c0       	rjmp	.+74     	; 0x4a3e <vfprintf+0x260>
    49f4:	f2 2f       	mov	r31, r18
    49f6:	f9 7f       	andi	r31, 0xF9	; 249
    49f8:	bf 2e       	mov	r11, r31
    49fa:	8f 36       	cpi	r24, 0x6F	; 111
    49fc:	c1 f0       	breq	.+48     	; 0x4a2e <vfprintf+0x250>
    49fe:	18 f4       	brcc	.+6      	; 0x4a06 <vfprintf+0x228>
    4a00:	88 35       	cpi	r24, 0x58	; 88
    4a02:	79 f0       	breq	.+30     	; 0x4a22 <vfprintf+0x244>
    4a04:	b4 c0       	rjmp	.+360    	; 0x4b6e <vfprintf+0x390>
    4a06:	80 37       	cpi	r24, 0x70	; 112
    4a08:	19 f0       	breq	.+6      	; 0x4a10 <vfprintf+0x232>
    4a0a:	88 37       	cpi	r24, 0x78	; 120
    4a0c:	21 f0       	breq	.+8      	; 0x4a16 <vfprintf+0x238>
    4a0e:	af c0       	rjmp	.+350    	; 0x4b6e <vfprintf+0x390>
    4a10:	2f 2f       	mov	r18, r31
    4a12:	20 61       	ori	r18, 0x10	; 16
    4a14:	b2 2e       	mov	r11, r18
    4a16:	b4 fe       	sbrs	r11, 4
    4a18:	0d c0       	rjmp	.+26     	; 0x4a34 <vfprintf+0x256>
    4a1a:	8b 2d       	mov	r24, r11
    4a1c:	84 60       	ori	r24, 0x04	; 4
    4a1e:	b8 2e       	mov	r11, r24
    4a20:	09 c0       	rjmp	.+18     	; 0x4a34 <vfprintf+0x256>
    4a22:	24 ff       	sbrs	r18, 4
    4a24:	0a c0       	rjmp	.+20     	; 0x4a3a <vfprintf+0x25c>
    4a26:	9f 2f       	mov	r25, r31
    4a28:	96 60       	ori	r25, 0x06	; 6
    4a2a:	b9 2e       	mov	r11, r25
    4a2c:	06 c0       	rjmp	.+12     	; 0x4a3a <vfprintf+0x25c>
    4a2e:	28 e0       	ldi	r18, 0x08	; 8
    4a30:	30 e0       	ldi	r19, 0x00	; 0
    4a32:	05 c0       	rjmp	.+10     	; 0x4a3e <vfprintf+0x260>
    4a34:	20 e1       	ldi	r18, 0x10	; 16
    4a36:	30 e0       	ldi	r19, 0x00	; 0
    4a38:	02 c0       	rjmp	.+4      	; 0x4a3e <vfprintf+0x260>
    4a3a:	20 e1       	ldi	r18, 0x10	; 16
    4a3c:	32 e0       	ldi	r19, 0x02	; 2
    4a3e:	f8 01       	movw	r30, r16
    4a40:	b7 fe       	sbrs	r11, 7
    4a42:	07 c0       	rjmp	.+14     	; 0x4a52 <vfprintf+0x274>
    4a44:	60 81       	ld	r22, Z
    4a46:	71 81       	ldd	r23, Z+1	; 0x01
    4a48:	82 81       	ldd	r24, Z+2	; 0x02
    4a4a:	93 81       	ldd	r25, Z+3	; 0x03
    4a4c:	0c 5f       	subi	r16, 0xFC	; 252
    4a4e:	1f 4f       	sbci	r17, 0xFF	; 255
    4a50:	06 c0       	rjmp	.+12     	; 0x4a5e <vfprintf+0x280>
    4a52:	60 81       	ld	r22, Z
    4a54:	71 81       	ldd	r23, Z+1	; 0x01
    4a56:	80 e0       	ldi	r24, 0x00	; 0
    4a58:	90 e0       	ldi	r25, 0x00	; 0
    4a5a:	0e 5f       	subi	r16, 0xFE	; 254
    4a5c:	1f 4f       	sbci	r17, 0xFF	; 255
    4a5e:	a4 01       	movw	r20, r8
    4a60:	0e 94 17 26 	call	0x4c2e	; 0x4c2e <__ultoa_invert>
    4a64:	a8 2e       	mov	r10, r24
    4a66:	a8 18       	sub	r10, r8
    4a68:	fb 2d       	mov	r31, r11
    4a6a:	ff 77       	andi	r31, 0x7F	; 127
    4a6c:	bf 2e       	mov	r11, r31
    4a6e:	b6 fe       	sbrs	r11, 6
    4a70:	0b c0       	rjmp	.+22     	; 0x4a88 <vfprintf+0x2aa>
    4a72:	2b 2d       	mov	r18, r11
    4a74:	2e 7f       	andi	r18, 0xFE	; 254
    4a76:	a5 14       	cp	r10, r5
    4a78:	50 f4       	brcc	.+20     	; 0x4a8e <vfprintf+0x2b0>
    4a7a:	b4 fe       	sbrs	r11, 4
    4a7c:	0a c0       	rjmp	.+20     	; 0x4a92 <vfprintf+0x2b4>
    4a7e:	b2 fc       	sbrc	r11, 2
    4a80:	08 c0       	rjmp	.+16     	; 0x4a92 <vfprintf+0x2b4>
    4a82:	2b 2d       	mov	r18, r11
    4a84:	2e 7e       	andi	r18, 0xEE	; 238
    4a86:	05 c0       	rjmp	.+10     	; 0x4a92 <vfprintf+0x2b4>
    4a88:	7a 2c       	mov	r7, r10
    4a8a:	2b 2d       	mov	r18, r11
    4a8c:	03 c0       	rjmp	.+6      	; 0x4a94 <vfprintf+0x2b6>
    4a8e:	7a 2c       	mov	r7, r10
    4a90:	01 c0       	rjmp	.+2      	; 0x4a94 <vfprintf+0x2b6>
    4a92:	75 2c       	mov	r7, r5
    4a94:	24 ff       	sbrs	r18, 4
    4a96:	0d c0       	rjmp	.+26     	; 0x4ab2 <vfprintf+0x2d4>
    4a98:	fe 01       	movw	r30, r28
    4a9a:	ea 0d       	add	r30, r10
    4a9c:	f1 1d       	adc	r31, r1
    4a9e:	80 81       	ld	r24, Z
    4aa0:	80 33       	cpi	r24, 0x30	; 48
    4aa2:	11 f4       	brne	.+4      	; 0x4aa8 <vfprintf+0x2ca>
    4aa4:	29 7e       	andi	r18, 0xE9	; 233
    4aa6:	09 c0       	rjmp	.+18     	; 0x4aba <vfprintf+0x2dc>
    4aa8:	22 ff       	sbrs	r18, 2
    4aaa:	06 c0       	rjmp	.+12     	; 0x4ab8 <vfprintf+0x2da>
    4aac:	73 94       	inc	r7
    4aae:	73 94       	inc	r7
    4ab0:	04 c0       	rjmp	.+8      	; 0x4aba <vfprintf+0x2dc>
    4ab2:	82 2f       	mov	r24, r18
    4ab4:	86 78       	andi	r24, 0x86	; 134
    4ab6:	09 f0       	breq	.+2      	; 0x4aba <vfprintf+0x2dc>
    4ab8:	73 94       	inc	r7
    4aba:	23 fd       	sbrc	r18, 3
    4abc:	13 c0       	rjmp	.+38     	; 0x4ae4 <vfprintf+0x306>
    4abe:	20 ff       	sbrs	r18, 0
    4ac0:	06 c0       	rjmp	.+12     	; 0x4ace <vfprintf+0x2f0>
    4ac2:	5a 2c       	mov	r5, r10
    4ac4:	73 14       	cp	r7, r3
    4ac6:	18 f4       	brcc	.+6      	; 0x4ace <vfprintf+0x2f0>
    4ac8:	53 0c       	add	r5, r3
    4aca:	57 18       	sub	r5, r7
    4acc:	73 2c       	mov	r7, r3
    4ace:	73 14       	cp	r7, r3
    4ad0:	68 f4       	brcc	.+26     	; 0x4aec <vfprintf+0x30e>
    4ad2:	b7 01       	movw	r22, r14
    4ad4:	80 e2       	ldi	r24, 0x20	; 32
    4ad6:	90 e0       	ldi	r25, 0x00	; 0
    4ad8:	2c 87       	std	Y+12, r18	; 0x0c
    4ada:	0e 94 e5 25 	call	0x4bca	; 0x4bca <fputc>
    4ade:	73 94       	inc	r7
    4ae0:	2c 85       	ldd	r18, Y+12	; 0x0c
    4ae2:	f5 cf       	rjmp	.-22     	; 0x4ace <vfprintf+0x2f0>
    4ae4:	73 14       	cp	r7, r3
    4ae6:	10 f4       	brcc	.+4      	; 0x4aec <vfprintf+0x30e>
    4ae8:	37 18       	sub	r3, r7
    4aea:	01 c0       	rjmp	.+2      	; 0x4aee <vfprintf+0x310>
    4aec:	31 2c       	mov	r3, r1
    4aee:	24 ff       	sbrs	r18, 4
    4af0:	12 c0       	rjmp	.+36     	; 0x4b16 <vfprintf+0x338>
    4af2:	b7 01       	movw	r22, r14
    4af4:	80 e3       	ldi	r24, 0x30	; 48
    4af6:	90 e0       	ldi	r25, 0x00	; 0
    4af8:	2c 87       	std	Y+12, r18	; 0x0c
    4afa:	0e 94 e5 25 	call	0x4bca	; 0x4bca <fputc>
    4afe:	2c 85       	ldd	r18, Y+12	; 0x0c
    4b00:	22 ff       	sbrs	r18, 2
    4b02:	17 c0       	rjmp	.+46     	; 0x4b32 <vfprintf+0x354>
    4b04:	21 ff       	sbrs	r18, 1
    4b06:	03 c0       	rjmp	.+6      	; 0x4b0e <vfprintf+0x330>
    4b08:	88 e5       	ldi	r24, 0x58	; 88
    4b0a:	90 e0       	ldi	r25, 0x00	; 0
    4b0c:	02 c0       	rjmp	.+4      	; 0x4b12 <vfprintf+0x334>
    4b0e:	88 e7       	ldi	r24, 0x78	; 120
    4b10:	90 e0       	ldi	r25, 0x00	; 0
    4b12:	b7 01       	movw	r22, r14
    4b14:	0c c0       	rjmp	.+24     	; 0x4b2e <vfprintf+0x350>
    4b16:	82 2f       	mov	r24, r18
    4b18:	86 78       	andi	r24, 0x86	; 134
    4b1a:	59 f0       	breq	.+22     	; 0x4b32 <vfprintf+0x354>
    4b1c:	21 fd       	sbrc	r18, 1
    4b1e:	02 c0       	rjmp	.+4      	; 0x4b24 <vfprintf+0x346>
    4b20:	80 e2       	ldi	r24, 0x20	; 32
    4b22:	01 c0       	rjmp	.+2      	; 0x4b26 <vfprintf+0x348>
    4b24:	8b e2       	ldi	r24, 0x2B	; 43
    4b26:	27 fd       	sbrc	r18, 7
    4b28:	8d e2       	ldi	r24, 0x2D	; 45
    4b2a:	b7 01       	movw	r22, r14
    4b2c:	90 e0       	ldi	r25, 0x00	; 0
    4b2e:	0e 94 e5 25 	call	0x4bca	; 0x4bca <fputc>
    4b32:	a5 14       	cp	r10, r5
    4b34:	38 f4       	brcc	.+14     	; 0x4b44 <vfprintf+0x366>
    4b36:	b7 01       	movw	r22, r14
    4b38:	80 e3       	ldi	r24, 0x30	; 48
    4b3a:	90 e0       	ldi	r25, 0x00	; 0
    4b3c:	0e 94 e5 25 	call	0x4bca	; 0x4bca <fputc>
    4b40:	5a 94       	dec	r5
    4b42:	f7 cf       	rjmp	.-18     	; 0x4b32 <vfprintf+0x354>
    4b44:	aa 94       	dec	r10
    4b46:	f4 01       	movw	r30, r8
    4b48:	ea 0d       	add	r30, r10
    4b4a:	f1 1d       	adc	r31, r1
    4b4c:	80 81       	ld	r24, Z
    4b4e:	b7 01       	movw	r22, r14
    4b50:	90 e0       	ldi	r25, 0x00	; 0
    4b52:	0e 94 e5 25 	call	0x4bca	; 0x4bca <fputc>
    4b56:	a1 10       	cpse	r10, r1
    4b58:	f5 cf       	rjmp	.-22     	; 0x4b44 <vfprintf+0x366>
    4b5a:	33 20       	and	r3, r3
    4b5c:	09 f4       	brne	.+2      	; 0x4b60 <vfprintf+0x382>
    4b5e:	51 ce       	rjmp	.-862    	; 0x4802 <vfprintf+0x24>
    4b60:	b7 01       	movw	r22, r14
    4b62:	80 e2       	ldi	r24, 0x20	; 32
    4b64:	90 e0       	ldi	r25, 0x00	; 0
    4b66:	0e 94 e5 25 	call	0x4bca	; 0x4bca <fputc>
    4b6a:	3a 94       	dec	r3
    4b6c:	f6 cf       	rjmp	.-20     	; 0x4b5a <vfprintf+0x37c>
    4b6e:	f7 01       	movw	r30, r14
    4b70:	86 81       	ldd	r24, Z+6	; 0x06
    4b72:	97 81       	ldd	r25, Z+7	; 0x07
    4b74:	02 c0       	rjmp	.+4      	; 0x4b7a <vfprintf+0x39c>
    4b76:	8f ef       	ldi	r24, 0xFF	; 255
    4b78:	9f ef       	ldi	r25, 0xFF	; 255
    4b7a:	2c 96       	adiw	r28, 0x0c	; 12
    4b7c:	e2 e1       	ldi	r30, 0x12	; 18
    4b7e:	0c 94 12 27 	jmp	0x4e24	; 0x4e24 <__epilogue_restores__>

00004b82 <__eerd_word_m32>:
    4b82:	a8 e1       	ldi	r26, 0x18	; 24
    4b84:	b0 e0       	ldi	r27, 0x00	; 0
    4b86:	42 e0       	ldi	r20, 0x02	; 2
    4b88:	50 e0       	ldi	r21, 0x00	; 0
    4b8a:	0c 94 77 26 	jmp	0x4cee	; 0x4cee <__eerd_blraw_m32>

00004b8e <__eewr_word_m32>:
    4b8e:	0e 94 85 26 	call	0x4d0a	; 0x4d0a <__eewr_byte_m32>
    4b92:	27 2f       	mov	r18, r23
    4b94:	0c 94 86 26 	jmp	0x4d0c	; 0x4d0c <__eewr_r18_m32>

00004b98 <__ctype_isfalse>:
    4b98:	99 27       	eor	r25, r25
    4b9a:	88 27       	eor	r24, r24

00004b9c <__ctype_istrue>:
    4b9c:	08 95       	ret

00004b9e <strnlen_P>:
    4b9e:	fc 01       	movw	r30, r24
    4ba0:	05 90       	lpm	r0, Z+
    4ba2:	61 50       	subi	r22, 0x01	; 1
    4ba4:	70 40       	sbci	r23, 0x00	; 0
    4ba6:	01 10       	cpse	r0, r1
    4ba8:	d8 f7       	brcc	.-10     	; 0x4ba0 <strnlen_P+0x2>
    4baa:	80 95       	com	r24
    4bac:	90 95       	com	r25
    4bae:	8e 0f       	add	r24, r30
    4bb0:	9f 1f       	adc	r25, r31
    4bb2:	08 95       	ret

00004bb4 <strnlen>:
    4bb4:	fc 01       	movw	r30, r24
    4bb6:	61 50       	subi	r22, 0x01	; 1
    4bb8:	70 40       	sbci	r23, 0x00	; 0
    4bba:	01 90       	ld	r0, Z+
    4bbc:	01 10       	cpse	r0, r1
    4bbe:	d8 f7       	brcc	.-10     	; 0x4bb6 <strnlen+0x2>
    4bc0:	80 95       	com	r24
    4bc2:	90 95       	com	r25
    4bc4:	8e 0f       	add	r24, r30
    4bc6:	9f 1f       	adc	r25, r31
    4bc8:	08 95       	ret

00004bca <fputc>:
    4bca:	0f 93       	push	r16
    4bcc:	1f 93       	push	r17
    4bce:	cf 93       	push	r28
    4bd0:	df 93       	push	r29
    4bd2:	18 2f       	mov	r17, r24
    4bd4:	09 2f       	mov	r16, r25
    4bd6:	eb 01       	movw	r28, r22
    4bd8:	8b 81       	ldd	r24, Y+3	; 0x03
    4bda:	81 fd       	sbrc	r24, 1
    4bdc:	03 c0       	rjmp	.+6      	; 0x4be4 <fputc+0x1a>
    4bde:	8f ef       	ldi	r24, 0xFF	; 255
    4be0:	9f ef       	ldi	r25, 0xFF	; 255
    4be2:	20 c0       	rjmp	.+64     	; 0x4c24 <fputc+0x5a>
    4be4:	82 ff       	sbrs	r24, 2
    4be6:	10 c0       	rjmp	.+32     	; 0x4c08 <fputc+0x3e>
    4be8:	4e 81       	ldd	r20, Y+6	; 0x06
    4bea:	5f 81       	ldd	r21, Y+7	; 0x07
    4bec:	2c 81       	ldd	r18, Y+4	; 0x04
    4bee:	3d 81       	ldd	r19, Y+5	; 0x05
    4bf0:	42 17       	cp	r20, r18
    4bf2:	53 07       	cpc	r21, r19
    4bf4:	7c f4       	brge	.+30     	; 0x4c14 <fputc+0x4a>
    4bf6:	e8 81       	ld	r30, Y
    4bf8:	f9 81       	ldd	r31, Y+1	; 0x01
    4bfa:	9f 01       	movw	r18, r30
    4bfc:	2f 5f       	subi	r18, 0xFF	; 255
    4bfe:	3f 4f       	sbci	r19, 0xFF	; 255
    4c00:	39 83       	std	Y+1, r19	; 0x01
    4c02:	28 83       	st	Y, r18
    4c04:	10 83       	st	Z, r17
    4c06:	06 c0       	rjmp	.+12     	; 0x4c14 <fputc+0x4a>
    4c08:	e8 85       	ldd	r30, Y+8	; 0x08
    4c0a:	f9 85       	ldd	r31, Y+9	; 0x09
    4c0c:	81 2f       	mov	r24, r17
    4c0e:	09 95       	icall
    4c10:	89 2b       	or	r24, r25
    4c12:	29 f7       	brne	.-54     	; 0x4bde <fputc+0x14>
    4c14:	2e 81       	ldd	r18, Y+6	; 0x06
    4c16:	3f 81       	ldd	r19, Y+7	; 0x07
    4c18:	2f 5f       	subi	r18, 0xFF	; 255
    4c1a:	3f 4f       	sbci	r19, 0xFF	; 255
    4c1c:	3f 83       	std	Y+7, r19	; 0x07
    4c1e:	2e 83       	std	Y+6, r18	; 0x06
    4c20:	81 2f       	mov	r24, r17
    4c22:	90 2f       	mov	r25, r16
    4c24:	df 91       	pop	r29
    4c26:	cf 91       	pop	r28
    4c28:	1f 91       	pop	r17
    4c2a:	0f 91       	pop	r16
    4c2c:	08 95       	ret

00004c2e <__ultoa_invert>:
    4c2e:	fa 01       	movw	r30, r20
    4c30:	aa 27       	eor	r26, r26
    4c32:	28 30       	cpi	r18, 0x08	; 8
    4c34:	51 f1       	breq	.+84     	; 0x4c8a <__ultoa_invert+0x5c>
    4c36:	20 31       	cpi	r18, 0x10	; 16
    4c38:	81 f1       	breq	.+96     	; 0x4c9a <__ultoa_invert+0x6c>
    4c3a:	e8 94       	clt
    4c3c:	6f 93       	push	r22
    4c3e:	6e 7f       	andi	r22, 0xFE	; 254
    4c40:	6e 5f       	subi	r22, 0xFE	; 254
    4c42:	7f 4f       	sbci	r23, 0xFF	; 255
    4c44:	8f 4f       	sbci	r24, 0xFF	; 255
    4c46:	9f 4f       	sbci	r25, 0xFF	; 255
    4c48:	af 4f       	sbci	r26, 0xFF	; 255
    4c4a:	b1 e0       	ldi	r27, 0x01	; 1
    4c4c:	3e d0       	rcall	.+124    	; 0x4cca <__ultoa_invert+0x9c>
    4c4e:	b4 e0       	ldi	r27, 0x04	; 4
    4c50:	3c d0       	rcall	.+120    	; 0x4cca <__ultoa_invert+0x9c>
    4c52:	67 0f       	add	r22, r23
    4c54:	78 1f       	adc	r23, r24
    4c56:	89 1f       	adc	r24, r25
    4c58:	9a 1f       	adc	r25, r26
    4c5a:	a1 1d       	adc	r26, r1
    4c5c:	68 0f       	add	r22, r24
    4c5e:	79 1f       	adc	r23, r25
    4c60:	8a 1f       	adc	r24, r26
    4c62:	91 1d       	adc	r25, r1
    4c64:	a1 1d       	adc	r26, r1
    4c66:	6a 0f       	add	r22, r26
    4c68:	71 1d       	adc	r23, r1
    4c6a:	81 1d       	adc	r24, r1
    4c6c:	91 1d       	adc	r25, r1
    4c6e:	a1 1d       	adc	r26, r1
    4c70:	20 d0       	rcall	.+64     	; 0x4cb2 <__ultoa_invert+0x84>
    4c72:	09 f4       	brne	.+2      	; 0x4c76 <__ultoa_invert+0x48>
    4c74:	68 94       	set
    4c76:	3f 91       	pop	r19
    4c78:	2a e0       	ldi	r18, 0x0A	; 10
    4c7a:	26 9f       	mul	r18, r22
    4c7c:	11 24       	eor	r1, r1
    4c7e:	30 19       	sub	r19, r0
    4c80:	30 5d       	subi	r19, 0xD0	; 208
    4c82:	31 93       	st	Z+, r19
    4c84:	de f6       	brtc	.-74     	; 0x4c3c <__ultoa_invert+0xe>
    4c86:	cf 01       	movw	r24, r30
    4c88:	08 95       	ret
    4c8a:	46 2f       	mov	r20, r22
    4c8c:	47 70       	andi	r20, 0x07	; 7
    4c8e:	40 5d       	subi	r20, 0xD0	; 208
    4c90:	41 93       	st	Z+, r20
    4c92:	b3 e0       	ldi	r27, 0x03	; 3
    4c94:	0f d0       	rcall	.+30     	; 0x4cb4 <__ultoa_invert+0x86>
    4c96:	c9 f7       	brne	.-14     	; 0x4c8a <__ultoa_invert+0x5c>
    4c98:	f6 cf       	rjmp	.-20     	; 0x4c86 <__ultoa_invert+0x58>
    4c9a:	46 2f       	mov	r20, r22
    4c9c:	4f 70       	andi	r20, 0x0F	; 15
    4c9e:	40 5d       	subi	r20, 0xD0	; 208
    4ca0:	4a 33       	cpi	r20, 0x3A	; 58
    4ca2:	18 f0       	brcs	.+6      	; 0x4caa <__ultoa_invert+0x7c>
    4ca4:	49 5d       	subi	r20, 0xD9	; 217
    4ca6:	31 fd       	sbrc	r19, 1
    4ca8:	40 52       	subi	r20, 0x20	; 32
    4caa:	41 93       	st	Z+, r20
    4cac:	02 d0       	rcall	.+4      	; 0x4cb2 <__ultoa_invert+0x84>
    4cae:	a9 f7       	brne	.-22     	; 0x4c9a <__ultoa_invert+0x6c>
    4cb0:	ea cf       	rjmp	.-44     	; 0x4c86 <__ultoa_invert+0x58>
    4cb2:	b4 e0       	ldi	r27, 0x04	; 4
    4cb4:	a6 95       	lsr	r26
    4cb6:	97 95       	ror	r25
    4cb8:	87 95       	ror	r24
    4cba:	77 95       	ror	r23
    4cbc:	67 95       	ror	r22
    4cbe:	ba 95       	dec	r27
    4cc0:	c9 f7       	brne	.-14     	; 0x4cb4 <__ultoa_invert+0x86>
    4cc2:	00 97       	sbiw	r24, 0x00	; 0
    4cc4:	61 05       	cpc	r22, r1
    4cc6:	71 05       	cpc	r23, r1
    4cc8:	08 95       	ret
    4cca:	9b 01       	movw	r18, r22
    4ccc:	ac 01       	movw	r20, r24
    4cce:	0a 2e       	mov	r0, r26
    4cd0:	06 94       	lsr	r0
    4cd2:	57 95       	ror	r21
    4cd4:	47 95       	ror	r20
    4cd6:	37 95       	ror	r19
    4cd8:	27 95       	ror	r18
    4cda:	ba 95       	dec	r27
    4cdc:	c9 f7       	brne	.-14     	; 0x4cd0 <__ultoa_invert+0xa2>
    4cde:	62 0f       	add	r22, r18
    4ce0:	73 1f       	adc	r23, r19
    4ce2:	84 1f       	adc	r24, r20
    4ce4:	95 1f       	adc	r25, r21
    4ce6:	a0 1d       	adc	r26, r0
    4ce8:	08 95       	ret

00004cea <__eerd_block_m32>:
    4cea:	dc 01       	movw	r26, r24
    4cec:	cb 01       	movw	r24, r22

00004cee <__eerd_blraw_m32>:
    4cee:	fc 01       	movw	r30, r24
    4cf0:	e1 99       	sbic	0x1c, 1	; 28
    4cf2:	fe cf       	rjmp	.-4      	; 0x4cf0 <__eerd_blraw_m32+0x2>
    4cf4:	06 c0       	rjmp	.+12     	; 0x4d02 <__eerd_blraw_m32+0x14>
    4cf6:	ff bb       	out	0x1f, r31	; 31
    4cf8:	ee bb       	out	0x1e, r30	; 30
    4cfa:	e0 9a       	sbi	0x1c, 0	; 28
    4cfc:	31 96       	adiw	r30, 0x01	; 1
    4cfe:	0d b2       	in	r0, 0x1d	; 29
    4d00:	0d 92       	st	X+, r0
    4d02:	41 50       	subi	r20, 0x01	; 1
    4d04:	50 40       	sbci	r21, 0x00	; 0
    4d06:	b8 f7       	brcc	.-18     	; 0x4cf6 <__eerd_blraw_m32+0x8>
    4d08:	08 95       	ret

00004d0a <__eewr_byte_m32>:
    4d0a:	26 2f       	mov	r18, r22

00004d0c <__eewr_r18_m32>:
    4d0c:	e1 99       	sbic	0x1c, 1	; 28
    4d0e:	fe cf       	rjmp	.-4      	; 0x4d0c <__eewr_r18_m32>
    4d10:	9f bb       	out	0x1f, r25	; 31
    4d12:	8e bb       	out	0x1e, r24	; 30
    4d14:	2d bb       	out	0x1d, r18	; 29
    4d16:	0f b6       	in	r0, 0x3f	; 63
    4d18:	f8 94       	cli
    4d1a:	e2 9a       	sbi	0x1c, 2	; 28
    4d1c:	e1 9a       	sbi	0x1c, 1	; 28
    4d1e:	0f be       	out	0x3f, r0	; 63
    4d20:	01 96       	adiw	r24, 0x01	; 1
    4d22:	08 95       	ret

00004d24 <__mulsi3>:
    4d24:	db 01       	movw	r26, r22
    4d26:	8f 93       	push	r24
    4d28:	9f 93       	push	r25
    4d2a:	0e 94 e3 26 	call	0x4dc6	; 0x4dc6 <__muluhisi3>
    4d2e:	bf 91       	pop	r27
    4d30:	af 91       	pop	r26
    4d32:	a2 9f       	mul	r26, r18
    4d34:	80 0d       	add	r24, r0
    4d36:	91 1d       	adc	r25, r1
    4d38:	a3 9f       	mul	r26, r19
    4d3a:	90 0d       	add	r25, r0
    4d3c:	b2 9f       	mul	r27, r18
    4d3e:	90 0d       	add	r25, r0
    4d40:	11 24       	eor	r1, r1
    4d42:	08 95       	ret

00004d44 <__udivmodsi4>:
    4d44:	a1 e2       	ldi	r26, 0x21	; 33
    4d46:	1a 2e       	mov	r1, r26
    4d48:	aa 1b       	sub	r26, r26
    4d4a:	bb 1b       	sub	r27, r27
    4d4c:	fd 01       	movw	r30, r26
    4d4e:	0d c0       	rjmp	.+26     	; 0x4d6a <__udivmodsi4_ep>

00004d50 <__udivmodsi4_loop>:
    4d50:	aa 1f       	adc	r26, r26
    4d52:	bb 1f       	adc	r27, r27
    4d54:	ee 1f       	adc	r30, r30
    4d56:	ff 1f       	adc	r31, r31
    4d58:	a2 17       	cp	r26, r18
    4d5a:	b3 07       	cpc	r27, r19
    4d5c:	e4 07       	cpc	r30, r20
    4d5e:	f5 07       	cpc	r31, r21
    4d60:	20 f0       	brcs	.+8      	; 0x4d6a <__udivmodsi4_ep>
    4d62:	a2 1b       	sub	r26, r18
    4d64:	b3 0b       	sbc	r27, r19
    4d66:	e4 0b       	sbc	r30, r20
    4d68:	f5 0b       	sbc	r31, r21

00004d6a <__udivmodsi4_ep>:
    4d6a:	66 1f       	adc	r22, r22
    4d6c:	77 1f       	adc	r23, r23
    4d6e:	88 1f       	adc	r24, r24
    4d70:	99 1f       	adc	r25, r25
    4d72:	1a 94       	dec	r1
    4d74:	69 f7       	brne	.-38     	; 0x4d50 <__udivmodsi4_loop>
    4d76:	60 95       	com	r22
    4d78:	70 95       	com	r23
    4d7a:	80 95       	com	r24
    4d7c:	90 95       	com	r25
    4d7e:	9b 01       	movw	r18, r22
    4d80:	ac 01       	movw	r20, r24
    4d82:	bd 01       	movw	r22, r26
    4d84:	cf 01       	movw	r24, r30
    4d86:	08 95       	ret

00004d88 <__divmodsi4>:
    4d88:	05 2e       	mov	r0, r21
    4d8a:	97 fb       	bst	r25, 7
    4d8c:	1e f4       	brtc	.+6      	; 0x4d94 <__divmodsi4+0xc>
    4d8e:	00 94       	com	r0
    4d90:	0e 94 db 26 	call	0x4db6	; 0x4db6 <__negsi2>
    4d94:	57 fd       	sbrc	r21, 7
    4d96:	07 d0       	rcall	.+14     	; 0x4da6 <__divmodsi4_neg2>
    4d98:	0e 94 a2 26 	call	0x4d44	; 0x4d44 <__udivmodsi4>
    4d9c:	07 fc       	sbrc	r0, 7
    4d9e:	03 d0       	rcall	.+6      	; 0x4da6 <__divmodsi4_neg2>
    4da0:	4e f4       	brtc	.+18     	; 0x4db4 <__divmodsi4_exit>
    4da2:	0c 94 db 26 	jmp	0x4db6	; 0x4db6 <__negsi2>

00004da6 <__divmodsi4_neg2>:
    4da6:	50 95       	com	r21
    4da8:	40 95       	com	r20
    4daa:	30 95       	com	r19
    4dac:	21 95       	neg	r18
    4dae:	3f 4f       	sbci	r19, 0xFF	; 255
    4db0:	4f 4f       	sbci	r20, 0xFF	; 255
    4db2:	5f 4f       	sbci	r21, 0xFF	; 255

00004db4 <__divmodsi4_exit>:
    4db4:	08 95       	ret

00004db6 <__negsi2>:
    4db6:	90 95       	com	r25
    4db8:	80 95       	com	r24
    4dba:	70 95       	com	r23
    4dbc:	61 95       	neg	r22
    4dbe:	7f 4f       	sbci	r23, 0xFF	; 255
    4dc0:	8f 4f       	sbci	r24, 0xFF	; 255
    4dc2:	9f 4f       	sbci	r25, 0xFF	; 255
    4dc4:	08 95       	ret

00004dc6 <__muluhisi3>:
    4dc6:	0e 94 2d 27 	call	0x4e5a	; 0x4e5a <__umulhisi3>
    4dca:	a5 9f       	mul	r26, r21
    4dcc:	90 0d       	add	r25, r0
    4dce:	b4 9f       	mul	r27, r20
    4dd0:	90 0d       	add	r25, r0
    4dd2:	a4 9f       	mul	r26, r20
    4dd4:	80 0d       	add	r24, r0
    4dd6:	91 1d       	adc	r25, r1
    4dd8:	11 24       	eor	r1, r1
    4dda:	08 95       	ret

00004ddc <__mulshisi3>:
    4ddc:	b7 ff       	sbrs	r27, 7
    4dde:	0c 94 e3 26 	jmp	0x4dc6	; 0x4dc6 <__muluhisi3>

00004de2 <__mulohisi3>:
    4de2:	0e 94 e3 26 	call	0x4dc6	; 0x4dc6 <__muluhisi3>
    4de6:	82 1b       	sub	r24, r18
    4de8:	93 0b       	sbc	r25, r19
    4dea:	08 95       	ret

00004dec <__prologue_saves__>:
    4dec:	2f 92       	push	r2
    4dee:	3f 92       	push	r3
    4df0:	4f 92       	push	r4
    4df2:	5f 92       	push	r5
    4df4:	6f 92       	push	r6
    4df6:	7f 92       	push	r7
    4df8:	8f 92       	push	r8
    4dfa:	9f 92       	push	r9
    4dfc:	af 92       	push	r10
    4dfe:	bf 92       	push	r11
    4e00:	cf 92       	push	r12
    4e02:	df 92       	push	r13
    4e04:	ef 92       	push	r14
    4e06:	ff 92       	push	r15
    4e08:	0f 93       	push	r16
    4e0a:	1f 93       	push	r17
    4e0c:	cf 93       	push	r28
    4e0e:	df 93       	push	r29
    4e10:	cd b7       	in	r28, 0x3d	; 61
    4e12:	de b7       	in	r29, 0x3e	; 62
    4e14:	ca 1b       	sub	r28, r26
    4e16:	db 0b       	sbc	r29, r27
    4e18:	0f b6       	in	r0, 0x3f	; 63
    4e1a:	f8 94       	cli
    4e1c:	de bf       	out	0x3e, r29	; 62
    4e1e:	0f be       	out	0x3f, r0	; 63
    4e20:	cd bf       	out	0x3d, r28	; 61
    4e22:	09 94       	ijmp

00004e24 <__epilogue_restores__>:
    4e24:	2a 88       	ldd	r2, Y+18	; 0x12
    4e26:	39 88       	ldd	r3, Y+17	; 0x11
    4e28:	48 88       	ldd	r4, Y+16	; 0x10
    4e2a:	5f 84       	ldd	r5, Y+15	; 0x0f
    4e2c:	6e 84       	ldd	r6, Y+14	; 0x0e
    4e2e:	7d 84       	ldd	r7, Y+13	; 0x0d
    4e30:	8c 84       	ldd	r8, Y+12	; 0x0c
    4e32:	9b 84       	ldd	r9, Y+11	; 0x0b
    4e34:	aa 84       	ldd	r10, Y+10	; 0x0a
    4e36:	b9 84       	ldd	r11, Y+9	; 0x09
    4e38:	c8 84       	ldd	r12, Y+8	; 0x08
    4e3a:	df 80       	ldd	r13, Y+7	; 0x07
    4e3c:	ee 80       	ldd	r14, Y+6	; 0x06
    4e3e:	fd 80       	ldd	r15, Y+5	; 0x05
    4e40:	0c 81       	ldd	r16, Y+4	; 0x04
    4e42:	1b 81       	ldd	r17, Y+3	; 0x03
    4e44:	aa 81       	ldd	r26, Y+2	; 0x02
    4e46:	b9 81       	ldd	r27, Y+1	; 0x01
    4e48:	ce 0f       	add	r28, r30
    4e4a:	d1 1d       	adc	r29, r1
    4e4c:	0f b6       	in	r0, 0x3f	; 63
    4e4e:	f8 94       	cli
    4e50:	de bf       	out	0x3e, r29	; 62
    4e52:	0f be       	out	0x3f, r0	; 63
    4e54:	cd bf       	out	0x3d, r28	; 61
    4e56:	ed 01       	movw	r28, r26
    4e58:	08 95       	ret

00004e5a <__umulhisi3>:
    4e5a:	a2 9f       	mul	r26, r18
    4e5c:	b0 01       	movw	r22, r0
    4e5e:	b3 9f       	mul	r27, r19
    4e60:	c0 01       	movw	r24, r0
    4e62:	a3 9f       	mul	r26, r19
    4e64:	70 0d       	add	r23, r0
    4e66:	81 1d       	adc	r24, r1
    4e68:	11 24       	eor	r1, r1
    4e6a:	91 1d       	adc	r25, r1
    4e6c:	b2 9f       	mul	r27, r18
    4e6e:	70 0d       	add	r23, r0
    4e70:	81 1d       	adc	r24, r1
    4e72:	11 24       	eor	r1, r1
    4e74:	91 1d       	adc	r25, r1
    4e76:	08 95       	ret

00004e78 <_exit>:
    4e78:	f8 94       	cli

00004e7a <__stop_program>:
    4e7a:	ff cf       	rjmp	.-2      	; 0x4e7a <__stop_program>
