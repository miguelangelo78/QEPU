
QEPU_Project_Atmega32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000063b4  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000007e  00800060  000063b4  00006468  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  008000de  008000de  000064e6  2**0
                  ALLOC
  3 .eeprom       00000002  00810000  00810000  000064e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  000064e8  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000002a0  00000000  00000000  00006544  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000c8b9  00000000  00000000  000067e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ffb  00000000  00000000  0001309d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000efd  00000000  00000000  00014098  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001058  00000000  00000000  00014f98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c2d  00000000  00000000  00015ff0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005641  00000000  00000000  00016c1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002d0  00000000  00000000  0001c25e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c8 00 	jmp	0x190	; 0x190 <__ctors_end>
       4:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
       8:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
       c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      10:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      14:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      18:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      1c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      20:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      24:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      28:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      2c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      30:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      34:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      38:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      3c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      40:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      44:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      48:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      4c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      50:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__bad_interrupt>
      54:	c9 1f       	adc	r28, r25
      56:	e6 1f       	adc	r30, r22
      58:	d9 24       	eor	r13, r9
      5a:	d9 24       	eor	r13, r9
      5c:	ed 1f       	adc	r30, r29
      5e:	d9 24       	eor	r13, r9
      60:	d9 24       	eor	r13, r9
      62:	d9 24       	eor	r13, r9
      64:	ee 1f       	adc	r30, r30
      66:	ef 1f       	adc	r30, r31
      68:	d9 24       	eor	r13, r9
      6a:	d9 24       	eor	r13, r9
      6c:	d9 24       	eor	r13, r9
      6e:	f5 1f       	adc	r31, r21
      70:	fe 1f       	adc	r31, r30
      72:	07 20       	and	r0, r7
      74:	2e 20       	and	r2, r14
      76:	55 20       	and	r5, r5
      78:	7c 20       	and	r7, r12
      7a:	a3 20       	and	r10, r3
      7c:	ca 20       	and	r12, r10
      7e:	f1 20       	and	r15, r1
      80:	3d 21       	and	r19, r13
      82:	89 21       	and	r24, r9
      84:	d5 21       	and	r29, r5
      86:	21 22       	and	r2, r17
      88:	6d 22       	and	r6, r29
      8a:	dd 22       	and	r13, r29
      8c:	4d 23       	and	r20, r29
      8e:	c7 23       	and	r28, r23
      90:	13 24       	eor	r1, r3
      92:	5f 24       	eor	r5, r15
      94:	88 24       	eor	r8, r8
      96:	b1 24       	eor	r11, r1
      98:	08 4a       	sbci	r16, 0xA8	; 168
      9a:	d7 3b       	cpi	r29, 0xB7	; 183
      9c:	3b ce       	rjmp	.-906    	; 0xfffffd14 <__eeprom_end+0xff7efd12>
      9e:	01 6e       	ori	r16, 0xE1	; 225
      a0:	84 bc       	out	0x24, r8	; 36
      a2:	bf fd       	.word	0xfdbf	; ????
      a4:	c1 2f       	mov	r28, r17
      a6:	3d 6c       	ori	r19, 0xCD	; 205
      a8:	74 31       	cpi	r23, 0x14	; 20
      aa:	9a bd       	out	0x2a, r25	; 42
      ac:	56 83       	std	Z+6, r21	; 0x06
      ae:	3d da       	rcall	.-2950   	; 0xfffff52a <__eeprom_end+0xff7ef528>
      b0:	3d 00       	.word	0x003d	; ????
      b2:	c7 7f       	andi	r28, 0xF7	; 247
      b4:	11 be       	out	0x31, r1	; 49
      b6:	d9 e4       	ldi	r29, 0x49	; 73
      b8:	bb 4c       	sbci	r27, 0xCB	; 203
      ba:	3e 91       	ld	r19, -X
      bc:	6b aa       	std	Y+51, r6	; 0x33
      be:	aa be       	out	0x3a, r10	; 58
      c0:	00 00       	nop
      c2:	00 80       	ld	r0, Z
      c4:	3f 07       	cpc	r19, r31
      c6:	63 42       	sbci	r22, 0x23	; 35
      c8:	36 b7       	in	r19, 0x36	; 54
      ca:	9b d8       	rcall	.-3786   	; 0xfffff202 <__eeprom_end+0xff7ef200>
      cc:	a7 1a       	sub	r10, r23
      ce:	39 68       	ori	r19, 0x89	; 137
      d0:	56 18       	sub	r5, r6
      d2:	ae ba       	out	0x1e, r10	; 30
      d4:	ab 55       	subi	r26, 0x5B	; 91
      d6:	8c 1d       	adc	r24, r12
      d8:	3c b7       	in	r19, 0x3c	; 60
      da:	cc 57       	subi	r28, 0x7C	; 124
      dc:	63 bd       	out	0x23, r22	; 35
      de:	6d ed       	ldi	r22, 0xDD	; 221
      e0:	fd 75       	andi	r31, 0x5D	; 93
      e2:	3e f6       	brtc	.-114    	; 0x72 <__SREG__+0x33>
      e4:	17 72       	andi	r17, 0x27	; 39
      e6:	31 bf       	out	0x31, r19	; 49
      e8:	00 00       	nop
      ea:	00 80       	ld	r0, Z
      ec:	3f 07       	cpc	r19, r31
      ee:	2c 7a       	andi	r18, 0xAC	; 172
      f0:	a5 ba       	out	0x15, r10	; 21
      f2:	6c c5       	rjmp	.+2776   	; 0xbcc <_ZN5Gates8ampl2vecEiPiS0_+0xea>
      f4:	90 da       	rcall	.-2784   	; 0xfffff616 <__eeprom_end+0xff7ef614>
      f6:	3b 93       	.word	0x933b	; ????
      f8:	65 fc       	sbrc	r6, 5
      fa:	8b bc       	out	0x2b, r8	; 43
      fc:	53 f8       	bld	r5, 3
      fe:	10 fd       	sbrc	r17, 0
     100:	3c 56       	subi	r19, 0x6C	; 108
     102:	92 83       	std	Z+2, r25	; 0x02
     104:	4d bd       	out	0x2d, r20	; 45
     106:	87 9d       	mul	r24, r7
     108:	3a b6       	in	r3, 0x3a	; 58
     10a:	3d cb       	rjmp	.-2438   	; 0xfffff786 <__eeprom_end+0xff7ef784>
     10c:	c9 bf       	out	0x39, r28	; 57
     10e:	5b be       	out	0x3b, r5	; 59
     110:	73 da       	rcall	.-2842   	; 0xfffff5f8 <__eeprom_end+0xff7ef5f6>
     112:	0f c9       	rjmp	.-3554   	; 0xfffff332 <__eeprom_end+0xff7ef330>
     114:	3f 05       	cpc	r19, r15
     116:	a8 4c       	sbci	r26, 0xC8	; 200
     118:	cd b2       	in	r12, 0x1d	; 29
     11a:	d4 4e       	sbci	r29, 0xE4	; 228
     11c:	b9 38       	cpi	r27, 0x89	; 137
     11e:	36 a9       	ldd	r19, Z+54	; 0x36
     120:	02 0c       	add	r0, r2
     122:	50 b9       	out	0x00, r21	; 0
     124:	91 86       	std	Z+9, r9	; 0x09
     126:	88 08       	sbc	r8, r8
     128:	3c a6       	std	Y+44, r3	; 0x2c
     12a:	aa aa       	std	Y+50, r10	; 0x32
     12c:	2a be       	out	0x3a, r2	; 58
     12e:	00 00       	nop
     130:	00 80       	ld	r0, Z
     132:	3f 08       	sbc	r3, r15
     134:	00 00       	nop
     136:	00 be       	out	0x30, r0	; 48
     138:	92 24       	eor	r9, r2
     13a:	49 12       	cpse	r4, r25
     13c:	3e ab       	std	Y+54, r19	; 0x36
     13e:	aa aa       	std	Y+50, r10	; 0x32
     140:	2a be       	out	0x3a, r2	; 58
     142:	cd cc       	rjmp	.-1638   	; 0xfffffade <__eeprom_end+0xff7efadc>
     144:	cc 4c       	sbci	r28, 0xCC	; 204
     146:	3e 00       	.word	0x003e	; ????
     148:	00 00       	nop
     14a:	80 be       	out	0x30, r8	; 48
     14c:	ab aa       	std	Y+51, r10	; 0x33
     14e:	aa aa       	std	Y+50, r10	; 0x32
     150:	3e 00       	.word	0x003e	; ????
     152:	00 00       	nop
     154:	00 bf       	out	0x30, r16	; 48
     156:	00 00       	nop
     158:	00 80       	ld	r0, Z
     15a:	3f 00       	.word	0x003f	; ????
     15c:	00 00       	nop
     15e:	00 00       	nop
     160:	08 41       	sbci	r16, 0x18	; 24
     162:	78 d3       	rcall	.+1776   	; 0x854 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x1a2>
     164:	bb 43       	sbci	r27, 0x3B	; 59
     166:	87 d1       	rcall	.+782    	; 0x476 <_ZN6EEProm4readEj+0x4a>
     168:	13 3d       	cpi	r17, 0xD3	; 211
     16a:	19 0e       	add	r1, r25
     16c:	3c c3       	rjmp	.+1656   	; 0x7e6 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x134>
     16e:	bd 42       	sbci	r27, 0x2D	; 45
     170:	82 ad       	ldd	r24, Z+58	; 0x3a
     172:	2b 3e       	cpi	r18, 0xEB	; 235
     174:	68 ec       	ldi	r22, 0xC8	; 200
     176:	82 76       	andi	r24, 0x62	; 98
     178:	be d9       	rcall	.-3204   	; 0xfffff4f6 <__eeprom_end+0xff7ef4f4>
     17a:	8f e1       	ldi	r24, 0x1F	; 31
     17c:	a9 3e       	cpi	r26, 0xE9	; 233
     17e:	4c 80       	ldd	r4, Y+4	; 0x04
     180:	ef ff       	.word	0xffef	; ????
     182:	be 01       	movw	r22, r28
     184:	c4 ff       	sbrs	r28, 4
     186:	7f 3f       	cpi	r23, 0xFF	; 255
     188:	00 00       	nop
     18a:	00 00       	nop
	...

0000018e <__ctors_start>:
     18e:	c7 1d       	adc	r28, r7

00000190 <__ctors_end>:
     190:	11 24       	eor	r1, r1
     192:	1f be       	out	0x3f, r1	; 63
     194:	cf e5       	ldi	r28, 0x5F	; 95
     196:	d8 e0       	ldi	r29, 0x08	; 8
     198:	de bf       	out	0x3e, r29	; 62
     19a:	cd bf       	out	0x3d, r28	; 61

0000019c <__do_copy_data>:
     19c:	10 e0       	ldi	r17, 0x00	; 0
     19e:	a0 e6       	ldi	r26, 0x60	; 96
     1a0:	b0 e0       	ldi	r27, 0x00	; 0
     1a2:	e4 eb       	ldi	r30, 0xB4	; 180
     1a4:	f3 e6       	ldi	r31, 0x63	; 99
     1a6:	02 c0       	rjmp	.+4      	; 0x1ac <__do_copy_data+0x10>
     1a8:	05 90       	lpm	r0, Z+
     1aa:	0d 92       	st	X+, r0
     1ac:	ae 3d       	cpi	r26, 0xDE	; 222
     1ae:	b1 07       	cpc	r27, r17
     1b0:	d9 f7       	brne	.-10     	; 0x1a8 <__do_copy_data+0xc>

000001b2 <__do_clear_bss>:
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	ae ed       	ldi	r26, 0xDE	; 222
     1b6:	b0 e0       	ldi	r27, 0x00	; 0
     1b8:	01 c0       	rjmp	.+2      	; 0x1bc <.do_clear_bss_start>

000001ba <.do_clear_bss_loop>:
     1ba:	1d 92       	st	X+, r1

000001bc <.do_clear_bss_start>:
     1bc:	a6 3e       	cpi	r26, 0xE6	; 230
     1be:	b2 07       	cpc	r27, r18
     1c0:	e1 f7       	brne	.-8      	; 0x1ba <.do_clear_bss_loop>

000001c2 <__do_global_ctors>:
     1c2:	11 e0       	ldi	r17, 0x01	; 1
     1c4:	c0 e9       	ldi	r28, 0x90	; 144
     1c6:	d1 e0       	ldi	r29, 0x01	; 1
     1c8:	04 c0       	rjmp	.+8      	; 0x1d2 <__do_global_ctors+0x10>
     1ca:	22 97       	sbiw	r28, 0x02	; 2
     1cc:	fe 01       	movw	r30, r28
     1ce:	0e 94 90 2b 	call	0x5720	; 0x5720 <__tablejump__>
     1d2:	ce 38       	cpi	r28, 0x8E	; 142
     1d4:	d1 07       	cpc	r29, r17
     1d6:	c9 f7       	brne	.-14     	; 0x1ca <__do_global_ctors+0x8>
     1d8:	0e 94 19 27 	call	0x4e32	; 0x4e32 <main>
     1dc:	0c 94 d8 31 	jmp	0x63b0	; 0x63b0 <_exit>

000001e0 <__bad_interrupt>:
     1e0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001e4 <_ZN7ComplexC1Eff>:
     1e4:	0f 93       	push	r16
     1e6:	1f 93       	push	r17
     1e8:	fc 01       	movw	r30, r24
     1ea:	40 83       	st	Z, r20
     1ec:	51 83       	std	Z+1, r21	; 0x01
     1ee:	62 83       	std	Z+2, r22	; 0x02
     1f0:	73 83       	std	Z+3, r23	; 0x03
     1f2:	04 83       	std	Z+4, r16	; 0x04
     1f4:	15 83       	std	Z+5, r17	; 0x05
     1f6:	26 83       	std	Z+6, r18	; 0x06
     1f8:	37 83       	std	Z+7, r19	; 0x07
     1fa:	1f 91       	pop	r17
     1fc:	0f 91       	pop	r16
     1fe:	08 95       	ret

00000200 <_ZN7ComplexC1Ev>:
     200:	fc 01       	movw	r30, r24
     202:	10 82       	st	Z, r1
     204:	11 82       	std	Z+1, r1	; 0x01
     206:	12 82       	std	Z+2, r1	; 0x02
     208:	13 82       	std	Z+3, r1	; 0x03
     20a:	14 82       	std	Z+4, r1	; 0x04
     20c:	15 82       	std	Z+5, r1	; 0x05
     20e:	16 82       	std	Z+6, r1	; 0x06
     210:	17 82       	std	Z+7, r1	; 0x07
     212:	08 95       	ret

00000214 <_ZN7Complex3addES_>:
     214:	af 92       	push	r10
     216:	bf 92       	push	r11
     218:	cf 92       	push	r12
     21a:	df 92       	push	r13
     21c:	ef 92       	push	r14
     21e:	ff 92       	push	r15
     220:	0f 93       	push	r16
     222:	1f 93       	push	r17
     224:	cf 93       	push	r28
     226:	df 93       	push	r29
     228:	cd b7       	in	r28, 0x3d	; 61
     22a:	de b7       	in	r29, 0x3e	; 62
     22c:	68 97       	sbiw	r28, 0x18	; 24
     22e:	0f b6       	in	r0, 0x3f	; 63
     230:	f8 94       	cli
     232:	de bf       	out	0x3e, r29	; 62
     234:	0f be       	out	0x3f, r0	; 63
     236:	cd bf       	out	0x3d, r28	; 61
     238:	5c 01       	movw	r10, r24
     23a:	09 8b       	std	Y+17, r16	; 0x11
     23c:	1a 8b       	std	Y+18, r17	; 0x12
     23e:	2b 8b       	std	Y+19, r18	; 0x13
     240:	3c 8b       	std	Y+20, r19	; 0x14
     242:	4d 8b       	std	Y+21, r20	; 0x15
     244:	5e 8b       	std	Y+22, r21	; 0x16
     246:	6f 8b       	std	Y+23, r22	; 0x17
     248:	78 8f       	std	Y+24, r23	; 0x18
     24a:	2d 89       	ldd	r18, Y+21	; 0x15
     24c:	3e 89       	ldd	r19, Y+22	; 0x16
     24e:	4f 89       	ldd	r20, Y+23	; 0x17
     250:	58 8d       	ldd	r21, Y+24	; 0x18
     252:	fc 01       	movw	r30, r24
     254:	64 81       	ldd	r22, Z+4	; 0x04
     256:	75 81       	ldd	r23, Z+5	; 0x05
     258:	86 81       	ldd	r24, Z+6	; 0x06
     25a:	97 81       	ldd	r25, Z+7	; 0x07
     25c:	0e 94 65 27 	call	0x4eca	; 0x4eca <__addsf3>
     260:	6b 01       	movw	r12, r22
     262:	7c 01       	movw	r14, r24
     264:	29 89       	ldd	r18, Y+17	; 0x11
     266:	3a 89       	ldd	r19, Y+18	; 0x12
     268:	4b 89       	ldd	r20, Y+19	; 0x13
     26a:	5c 89       	ldd	r21, Y+20	; 0x14
     26c:	f5 01       	movw	r30, r10
     26e:	60 81       	ld	r22, Z
     270:	71 81       	ldd	r23, Z+1	; 0x01
     272:	82 81       	ldd	r24, Z+2	; 0x02
     274:	93 81       	ldd	r25, Z+3	; 0x03
     276:	0e 94 65 27 	call	0x4eca	; 0x4eca <__addsf3>
     27a:	ab 01       	movw	r20, r22
     27c:	bc 01       	movw	r22, r24
     27e:	97 01       	movw	r18, r14
     280:	86 01       	movw	r16, r12
     282:	ce 01       	movw	r24, r28
     284:	01 96       	adiw	r24, 0x01	; 1
     286:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     28a:	88 e0       	ldi	r24, 0x08	; 8
     28c:	fe 01       	movw	r30, r28
     28e:	31 96       	adiw	r30, 0x01	; 1
     290:	de 01       	movw	r26, r28
     292:	19 96       	adiw	r26, 0x09	; 9
     294:	01 90       	ld	r0, Z+
     296:	0d 92       	st	X+, r0
     298:	8a 95       	dec	r24
     29a:	e1 f7       	brne	.-8      	; 0x294 <_ZN7Complex3addES_+0x80>
     29c:	29 85       	ldd	r18, Y+9	; 0x09
     29e:	3a 85       	ldd	r19, Y+10	; 0x0a
     2a0:	4b 85       	ldd	r20, Y+11	; 0x0b
     2a2:	5c 85       	ldd	r21, Y+12	; 0x0c
     2a4:	6d 85       	ldd	r22, Y+13	; 0x0d
     2a6:	7e 85       	ldd	r23, Y+14	; 0x0e
     2a8:	8f 85       	ldd	r24, Y+15	; 0x0f
     2aa:	98 89       	ldd	r25, Y+16	; 0x10
     2ac:	68 96       	adiw	r28, 0x18	; 24
     2ae:	0f b6       	in	r0, 0x3f	; 63
     2b0:	f8 94       	cli
     2b2:	de bf       	out	0x3e, r29	; 62
     2b4:	0f be       	out	0x3f, r0	; 63
     2b6:	cd bf       	out	0x3d, r28	; 61
     2b8:	df 91       	pop	r29
     2ba:	cf 91       	pop	r28
     2bc:	1f 91       	pop	r17
     2be:	0f 91       	pop	r16
     2c0:	ff 90       	pop	r15
     2c2:	ef 90       	pop	r14
     2c4:	df 90       	pop	r13
     2c6:	cf 90       	pop	r12
     2c8:	bf 90       	pop	r11
     2ca:	af 90       	pop	r10
     2cc:	08 95       	ret

000002ce <_ZN7Complex3mulES_>:
     2ce:	4f 92       	push	r4
     2d0:	5f 92       	push	r5
     2d2:	6f 92       	push	r6
     2d4:	7f 92       	push	r7
     2d6:	8f 92       	push	r8
     2d8:	9f 92       	push	r9
     2da:	af 92       	push	r10
     2dc:	bf 92       	push	r11
     2de:	cf 92       	push	r12
     2e0:	df 92       	push	r13
     2e2:	ef 92       	push	r14
     2e4:	ff 92       	push	r15
     2e6:	0f 93       	push	r16
     2e8:	1f 93       	push	r17
     2ea:	cf 93       	push	r28
     2ec:	df 93       	push	r29
     2ee:	cd b7       	in	r28, 0x3d	; 61
     2f0:	de b7       	in	r29, 0x3e	; 62
     2f2:	a0 97       	sbiw	r28, 0x20	; 32
     2f4:	0f b6       	in	r0, 0x3f	; 63
     2f6:	f8 94       	cli
     2f8:	de bf       	out	0x3e, r29	; 62
     2fa:	0f be       	out	0x3f, r0	; 63
     2fc:	cd bf       	out	0x3d, r28	; 61
     2fe:	09 8b       	std	Y+17, r16	; 0x11
     300:	1a 8b       	std	Y+18, r17	; 0x12
     302:	2b 8b       	std	Y+19, r18	; 0x13
     304:	3c 8b       	std	Y+20, r19	; 0x14
     306:	4d 8b       	std	Y+21, r20	; 0x15
     308:	5e 8b       	std	Y+22, r21	; 0x16
     30a:	6f 8b       	std	Y+23, r22	; 0x17
     30c:	78 8f       	std	Y+24, r23	; 0x18
     30e:	89 88       	ldd	r8, Y+17	; 0x11
     310:	9a 88       	ldd	r9, Y+18	; 0x12
     312:	ab 88       	ldd	r10, Y+19	; 0x13
     314:	bc 88       	ldd	r11, Y+20	; 0x14
     316:	2d 89       	ldd	r18, Y+21	; 0x15
     318:	3e 89       	ldd	r19, Y+22	; 0x16
     31a:	4f 89       	ldd	r20, Y+23	; 0x17
     31c:	58 8d       	ldd	r21, Y+24	; 0x18
     31e:	2d 8f       	std	Y+29, r18	; 0x1d
     320:	3e 8f       	std	Y+30, r19	; 0x1e
     322:	4f 8f       	std	Y+31, r20	; 0x1f
     324:	58 a3       	std	Y+32, r21	; 0x20
     326:	fc 01       	movw	r30, r24
     328:	c0 80       	ld	r12, Z
     32a:	d1 80       	ldd	r13, Z+1	; 0x01
     32c:	e2 80       	ldd	r14, Z+2	; 0x02
     32e:	f3 80       	ldd	r15, Z+3	; 0x03
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	29 8f       	std	Y+25, r18	; 0x19
     33a:	3a 8f       	std	Y+26, r19	; 0x1a
     33c:	4b 8f       	std	Y+27, r20	; 0x1b
     33e:	5c 8f       	std	Y+28, r21	; 0x1c
     340:	2d 8d       	ldd	r18, Y+29	; 0x1d
     342:	3e 8d       	ldd	r19, Y+30	; 0x1e
     344:	4f 8d       	ldd	r20, Y+31	; 0x1f
     346:	58 a1       	ldd	r21, Y+32	; 0x20
     348:	c7 01       	movw	r24, r14
     34a:	b6 01       	movw	r22, r12
     34c:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     350:	2b 01       	movw	r4, r22
     352:	3c 01       	movw	r6, r24
     354:	a5 01       	movw	r20, r10
     356:	94 01       	movw	r18, r8
     358:	69 8d       	ldd	r22, Y+25	; 0x19
     35a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     35c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     35e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     360:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     364:	9b 01       	movw	r18, r22
     366:	ac 01       	movw	r20, r24
     368:	c3 01       	movw	r24, r6
     36a:	b2 01       	movw	r22, r4
     36c:	0e 94 65 27 	call	0x4eca	; 0x4eca <__addsf3>
     370:	2b 01       	movw	r4, r22
     372:	3c 01       	movw	r6, r24
     374:	a5 01       	movw	r20, r10
     376:	94 01       	movw	r18, r8
     378:	c7 01       	movw	r24, r14
     37a:	b6 01       	movw	r22, r12
     37c:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     380:	6b 01       	movw	r12, r22
     382:	7c 01       	movw	r14, r24
     384:	2d 8d       	ldd	r18, Y+29	; 0x1d
     386:	3e 8d       	ldd	r19, Y+30	; 0x1e
     388:	4f 8d       	ldd	r20, Y+31	; 0x1f
     38a:	58 a1       	ldd	r21, Y+32	; 0x20
     38c:	69 8d       	ldd	r22, Y+25	; 0x19
     38e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     390:	8b 8d       	ldd	r24, Y+27	; 0x1b
     392:	9c 8d       	ldd	r25, Y+28	; 0x1c
     394:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     398:	9b 01       	movw	r18, r22
     39a:	ac 01       	movw	r20, r24
     39c:	c7 01       	movw	r24, r14
     39e:	b6 01       	movw	r22, r12
     3a0:	0e 94 64 27 	call	0x4ec8	; 0x4ec8 <__subsf3>
     3a4:	ab 01       	movw	r20, r22
     3a6:	bc 01       	movw	r22, r24
     3a8:	93 01       	movw	r18, r6
     3aa:	82 01       	movw	r16, r4
     3ac:	ce 01       	movw	r24, r28
     3ae:	01 96       	adiw	r24, 0x01	; 1
     3b0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     3b4:	88 e0       	ldi	r24, 0x08	; 8
     3b6:	fe 01       	movw	r30, r28
     3b8:	31 96       	adiw	r30, 0x01	; 1
     3ba:	de 01       	movw	r26, r28
     3bc:	19 96       	adiw	r26, 0x09	; 9
     3be:	01 90       	ld	r0, Z+
     3c0:	0d 92       	st	X+, r0
     3c2:	8a 95       	dec	r24
     3c4:	e1 f7       	brne	.-8      	; 0x3be <_ZN7Complex3mulES_+0xf0>
     3c6:	29 85       	ldd	r18, Y+9	; 0x09
     3c8:	3a 85       	ldd	r19, Y+10	; 0x0a
     3ca:	4b 85       	ldd	r20, Y+11	; 0x0b
     3cc:	5c 85       	ldd	r21, Y+12	; 0x0c
     3ce:	6d 85       	ldd	r22, Y+13	; 0x0d
     3d0:	7e 85       	ldd	r23, Y+14	; 0x0e
     3d2:	8f 85       	ldd	r24, Y+15	; 0x0f
     3d4:	98 89       	ldd	r25, Y+16	; 0x10
     3d6:	a0 96       	adiw	r28, 0x20	; 32
     3d8:	0f b6       	in	r0, 0x3f	; 63
     3da:	f8 94       	cli
     3dc:	de bf       	out	0x3e, r29	; 62
     3de:	0f be       	out	0x3f, r0	; 63
     3e0:	cd bf       	out	0x3d, r28	; 61
     3e2:	df 91       	pop	r29
     3e4:	cf 91       	pop	r28
     3e6:	1f 91       	pop	r17
     3e8:	0f 91       	pop	r16
     3ea:	ff 90       	pop	r15
     3ec:	ef 90       	pop	r14
     3ee:	df 90       	pop	r13
     3f0:	cf 90       	pop	r12
     3f2:	bf 90       	pop	r11
     3f4:	af 90       	pop	r10
     3f6:	9f 90       	pop	r9
     3f8:	8f 90       	pop	r8
     3fa:	7f 90       	pop	r7
     3fc:	6f 90       	pop	r6
     3fe:	5f 90       	pop	r5
     400:	4f 90       	pop	r4
     402:	08 95       	ret

00000404 <_ZN7Complex3argEv>:
     404:	fc 01       	movw	r30, r24
     406:	20 81       	ld	r18, Z
     408:	31 81       	ldd	r19, Z+1	; 0x01
     40a:	42 81       	ldd	r20, Z+2	; 0x02
     40c:	53 81       	ldd	r21, Z+3	; 0x03
     40e:	64 81       	ldd	r22, Z+4	; 0x04
     410:	75 81       	ldd	r23, Z+5	; 0x05
     412:	86 81       	ldd	r24, Z+6	; 0x06
     414:	97 81       	ldd	r25, Z+7	; 0x07
     416:	0e 94 f8 27 	call	0x4ff0	; 0x4ff0 <__divsf3>
     41a:	0e 94 c9 27 	call	0x4f92	; 0x4f92 <atan>
     41e:	08 95       	ret

00000420 <_ZN6EEPromC1Ev>:
     420:	85 e0       	ldi	r24, 0x05	; 5
     422:	80 b9       	out	0x00, r24	; 0
     424:	81 b1       	in	r24, 0x01	; 1
     426:	8c 7f       	andi	r24, 0xFC	; 252
     428:	81 b9       	out	0x01, r24	; 1
     42a:	08 95       	ret

0000042c <_ZN6EEProm4readEj>:
     42c:	94 ea       	ldi	r25, 0xA4	; 164
     42e:	30 ea       	ldi	r19, 0xA0	; 160
     430:	24 e8       	ldi	r18, 0x84	; 132
     432:	96 bf       	out	0x36, r25	; 54
     434:	06 b6       	in	r0, 0x36	; 54
     436:	07 fe       	sbrs	r0, 7
     438:	fd cf       	rjmp	.-6      	; 0x434 <_ZN6EEProm4readEj+0x8>
     43a:	81 b1       	in	r24, 0x01	; 1
     43c:	88 7f       	andi	r24, 0xF8	; 248
     43e:	88 30       	cpi	r24, 0x08	; 8
     440:	09 f0       	breq	.+2      	; 0x444 <_ZN6EEProm4readEj+0x18>
     442:	41 c0       	rjmp	.+130    	; 0x4c6 <_ZN6EEProm4readEj+0x9a>
     444:	33 b9       	out	0x03, r19	; 3
     446:	26 bf       	out	0x36, r18	; 54
     448:	06 b6       	in	r0, 0x36	; 54
     44a:	07 fe       	sbrs	r0, 7
     44c:	fd cf       	rjmp	.-6      	; 0x448 <_ZN6EEProm4readEj+0x1c>
     44e:	81 b1       	in	r24, 0x01	; 1
     450:	88 7f       	andi	r24, 0xF8	; 248
     452:	88 31       	cpi	r24, 0x18	; 24
     454:	71 f7       	brne	.-36     	; 0x432 <_ZN6EEProm4readEj+0x6>
     456:	73 b9       	out	0x03, r23	; 3
     458:	84 e8       	ldi	r24, 0x84	; 132
     45a:	86 bf       	out	0x36, r24	; 54
     45c:	06 b6       	in	r0, 0x36	; 54
     45e:	07 fe       	sbrs	r0, 7
     460:	fd cf       	rjmp	.-6      	; 0x45c <_ZN6EEProm4readEj+0x30>
     462:	81 b1       	in	r24, 0x01	; 1
     464:	88 7f       	andi	r24, 0xF8	; 248
     466:	88 32       	cpi	r24, 0x28	; 40
     468:	81 f5       	brne	.+96     	; 0x4ca <_ZN6EEProm4readEj+0x9e>
     46a:	63 b9       	out	0x03, r22	; 3
     46c:	84 e8       	ldi	r24, 0x84	; 132
     46e:	86 bf       	out	0x36, r24	; 54
     470:	06 b6       	in	r0, 0x36	; 54
     472:	07 fe       	sbrs	r0, 7
     474:	fd cf       	rjmp	.-6      	; 0x470 <_ZN6EEProm4readEj+0x44>
     476:	81 b1       	in	r24, 0x01	; 1
     478:	88 7f       	andi	r24, 0xF8	; 248
     47a:	88 32       	cpi	r24, 0x28	; 40
     47c:	41 f5       	brne	.+80     	; 0x4ce <_ZN6EEProm4readEj+0xa2>
     47e:	84 ea       	ldi	r24, 0xA4	; 164
     480:	86 bf       	out	0x36, r24	; 54
     482:	06 b6       	in	r0, 0x36	; 54
     484:	07 fe       	sbrs	r0, 7
     486:	fd cf       	rjmp	.-6      	; 0x482 <_ZN6EEProm4readEj+0x56>
     488:	81 b1       	in	r24, 0x01	; 1
     48a:	88 7f       	andi	r24, 0xF8	; 248
     48c:	80 31       	cpi	r24, 0x10	; 16
     48e:	09 f5       	brne	.+66     	; 0x4d2 <_ZN6EEProm4readEj+0xa6>
     490:	81 ea       	ldi	r24, 0xA1	; 161
     492:	83 b9       	out	0x03, r24	; 3
     494:	84 e8       	ldi	r24, 0x84	; 132
     496:	86 bf       	out	0x36, r24	; 54
     498:	06 b6       	in	r0, 0x36	; 54
     49a:	07 fe       	sbrs	r0, 7
     49c:	fd cf       	rjmp	.-6      	; 0x498 <_ZN6EEProm4readEj+0x6c>
     49e:	81 b1       	in	r24, 0x01	; 1
     4a0:	88 7f       	andi	r24, 0xF8	; 248
     4a2:	80 34       	cpi	r24, 0x40	; 64
     4a4:	c1 f4       	brne	.+48     	; 0x4d6 <_ZN6EEProm4readEj+0xaa>
     4a6:	84 e8       	ldi	r24, 0x84	; 132
     4a8:	86 bf       	out	0x36, r24	; 54
     4aa:	06 b6       	in	r0, 0x36	; 54
     4ac:	07 fe       	sbrs	r0, 7
     4ae:	fd cf       	rjmp	.-6      	; 0x4aa <_ZN6EEProm4readEj+0x7e>
     4b0:	81 b1       	in	r24, 0x01	; 1
     4b2:	88 7f       	andi	r24, 0xF8	; 248
     4b4:	88 35       	cpi	r24, 0x58	; 88
     4b6:	89 f4       	brne	.+34     	; 0x4da <_ZN6EEProm4readEj+0xae>
     4b8:	83 b1       	in	r24, 0x03	; 3
     4ba:	94 e9       	ldi	r25, 0x94	; 148
     4bc:	96 bf       	out	0x36, r25	; 54
     4be:	06 b6       	in	r0, 0x36	; 54
     4c0:	04 fc       	sbrc	r0, 4
     4c2:	fd cf       	rjmp	.-6      	; 0x4be <_ZN6EEProm4readEj+0x92>
     4c4:	08 95       	ret
     4c6:	80 e0       	ldi	r24, 0x00	; 0
     4c8:	08 95       	ret
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	08 95       	ret
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	08 95       	ret
     4d2:	80 e0       	ldi	r24, 0x00	; 0
     4d4:	08 95       	ret
     4d6:	80 e0       	ldi	r24, 0x00	; 0
     4d8:	08 95       	ret
     4da:	80 e0       	ldi	r24, 0x00	; 0
     4dc:	08 95       	ret

000004de <_ZN6EEProm7readallEv>:
     4de:	cf 92       	push	r12
     4e0:	df 92       	push	r13
     4e2:	ef 92       	push	r14
     4e4:	ff 92       	push	r15
     4e6:	0f 93       	push	r16
     4e8:	1f 93       	push	r17
     4ea:	cf 93       	push	r28
     4ec:	df 93       	push	r29
     4ee:	cd b7       	in	r28, 0x3d	; 61
     4f0:	de b7       	in	r29, 0x3e	; 62
     4f2:	c4 56       	subi	r28, 0x64	; 100
     4f4:	d1 09       	sbc	r29, r1
     4f6:	0f b6       	in	r0, 0x3f	; 63
     4f8:	f8 94       	cli
     4fa:	de bf       	out	0x3e, r29	; 62
     4fc:	0f be       	out	0x3f, r0	; 63
     4fe:	cd bf       	out	0x3d, r28	; 61
     500:	6c 01       	movw	r12, r24
     502:	ce 01       	movw	r24, r28
     504:	01 96       	adiw	r24, 0x01	; 1
     506:	7c 01       	movw	r14, r24
     508:	00 e0       	ldi	r16, 0x00	; 0
     50a:	10 e0       	ldi	r17, 0x00	; 0
     50c:	b8 01       	movw	r22, r16
     50e:	c6 01       	movw	r24, r12
     510:	0e 94 16 02 	call	0x42c	; 0x42c <_ZN6EEProm4readEj>
     514:	f7 01       	movw	r30, r14
     516:	81 93       	st	Z+, r24
     518:	7f 01       	movw	r14, r30
     51a:	8f 3f       	cpi	r24, 0xFF	; 255
     51c:	81 f4       	brne	.+32     	; 0x53e <_ZN6EEProm7readallEv+0x60>
     51e:	32 97       	sbiw	r30, 0x02	; 2
     520:	20 81       	ld	r18, Z
     522:	2f 3f       	cpi	r18, 0xFF	; 255
     524:	61 f4       	brne	.+24     	; 0x53e <_ZN6EEProm7readallEv+0x60>
     526:	31 97       	sbiw	r30, 0x01	; 1
     528:	20 81       	ld	r18, Z
     52a:	2f 3f       	cpi	r18, 0xFF	; 255
     52c:	41 f4       	brne	.+16     	; 0x53e <_ZN6EEProm7readallEv+0x60>
     52e:	31 97       	sbiw	r30, 0x01	; 1
     530:	20 81       	ld	r18, Z
     532:	2f 3f       	cpi	r18, 0xFF	; 255
     534:	21 f4       	brne	.+8      	; 0x53e <_ZN6EEProm7readallEv+0x60>
     536:	31 97       	sbiw	r30, 0x01	; 1
     538:	80 81       	ld	r24, Z
     53a:	8f 3f       	cpi	r24, 0xFF	; 255
     53c:	19 f0       	breq	.+6      	; 0x544 <_ZN6EEProm7readallEv+0x66>
     53e:	0f 5f       	subi	r16, 0xFF	; 255
     540:	1f 4f       	sbci	r17, 0xFF	; 255
     542:	e4 cf       	rjmp	.-56     	; 0x50c <_ZN6EEProm7readallEv+0x2e>
     544:	ce 01       	movw	r24, r28
     546:	01 96       	adiw	r24, 0x01	; 1
     548:	cc 59       	subi	r28, 0x9C	; 156
     54a:	df 4f       	sbci	r29, 0xFF	; 255
     54c:	0f b6       	in	r0, 0x3f	; 63
     54e:	f8 94       	cli
     550:	de bf       	out	0x3e, r29	; 62
     552:	0f be       	out	0x3f, r0	; 63
     554:	cd bf       	out	0x3d, r28	; 61
     556:	df 91       	pop	r29
     558:	cf 91       	pop	r28
     55a:	1f 91       	pop	r17
     55c:	0f 91       	pop	r16
     55e:	ff 90       	pop	r15
     560:	ef 90       	pop	r14
     562:	df 90       	pop	r13
     564:	cf 90       	pop	r12
     566:	08 95       	ret

00000568 <_Z12print_statesiP7ComplexPc>:

Serial s;
QEPU::Utils utils;
uint16_t EEMEM randinit;

void print_states(int qb_count,Complex * vec,char* message){
     568:	ef 92       	push	r14
     56a:	ff 92       	push	r15
     56c:	0f 93       	push	r16
     56e:	1f 93       	push	r17
     570:	cf 93       	push	r28
     572:	df 93       	push	r29
     574:	7c 01       	movw	r14, r24
     576:	06 2f       	mov	r16, r22
     578:	17 2f       	mov	r17, r23
	s.writestrln(message);
     57a:	ba 01       	movw	r22, r20
     57c:	8f ed       	ldi	r24, 0xDF	; 223
     57e:	90 e0       	ldi	r25, 0x00	; 0
     580:	0e 94 4a 27 	call	0x4e94	; 0x4e94 <_ZN6Serial10writestrlnEPc>
	for(int i=0;i<qb_count;i++){
     584:	1e 14       	cp	r1, r14
     586:	1f 04       	cpc	r1, r15
     588:	0c f0       	brlt	.+2      	; 0x58c <_Z12print_statesiP7ComplexPc+0x24>
     58a:	47 c0       	rjmp	.+142    	; 0x61a <_Z12print_statesiP7ComplexPc+0xb2>
     58c:	c0 2f       	mov	r28, r16
     58e:	d1 2f       	mov	r29, r17
     590:	00 e0       	ldi	r16, 0x00	; 0
     592:	10 e0       	ldi	r17, 0x00	; 0
		s.writestr("R: "); s.writestr(utils.int2str(vec[i].re*1000));
     594:	6a e6       	ldi	r22, 0x6A	; 106
     596:	70 e0       	ldi	r23, 0x00	; 0
     598:	8f ed       	ldi	r24, 0xDF	; 223
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_ZN6Serial8writestrEPc>
     5a0:	20 e0       	ldi	r18, 0x00	; 0
     5a2:	30 e0       	ldi	r19, 0x00	; 0
     5a4:	4a e7       	ldi	r20, 0x7A	; 122
     5a6:	54 e4       	ldi	r21, 0x44	; 68
     5a8:	68 81       	ld	r22, Y
     5aa:	79 81       	ldd	r23, Y+1	; 0x01
     5ac:	8a 81       	ldd	r24, Y+2	; 0x02
     5ae:	9b 81       	ldd	r25, Y+3	; 0x03
     5b0:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     5b4:	0e 94 91 28 	call	0x5122	; 0x5122 <__fixsfsi>
     5b8:	8e ed       	ldi	r24, 0xDE	; 222
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <_ZN4QEPU5Utils7int2strEi>
     5c0:	bc 01       	movw	r22, r24
     5c2:	8f ed       	ldi	r24, 0xDF	; 223
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_ZN6Serial8writestrEPc>
		s.writestr(" . I: "); s.writestr(utils.int2str(vec[i].im*1000));
     5ca:	6e e6       	ldi	r22, 0x6E	; 110
     5cc:	70 e0       	ldi	r23, 0x00	; 0
     5ce:	8f ed       	ldi	r24, 0xDF	; 223
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_ZN6Serial8writestrEPc>
     5d6:	20 e0       	ldi	r18, 0x00	; 0
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	4a e7       	ldi	r20, 0x7A	; 122
     5dc:	54 e4       	ldi	r21, 0x44	; 68
     5de:	6c 81       	ldd	r22, Y+4	; 0x04
     5e0:	7d 81       	ldd	r23, Y+5	; 0x05
     5e2:	8e 81       	ldd	r24, Y+6	; 0x06
     5e4:	9f 81       	ldd	r25, Y+7	; 0x07
     5e6:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     5ea:	0e 94 91 28 	call	0x5122	; 0x5122 <__fixsfsi>
     5ee:	8e ed       	ldi	r24, 0xDE	; 222
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <_ZN4QEPU5Utils7int2strEi>
     5f6:	bc 01       	movw	r22, r24
     5f8:	8f ed       	ldi	r24, 0xDF	; 223
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_ZN6Serial8writestrEPc>
		s.writestrln("");
     600:	63 ec       	ldi	r22, 0xC3	; 195
     602:	70 e0       	ldi	r23, 0x00	; 0
     604:	8f ed       	ldi	r24, 0xDF	; 223
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	0e 94 4a 27 	call	0x4e94	; 0x4e94 <_ZN6Serial10writestrlnEPc>
QEPU::Utils utils;
uint16_t EEMEM randinit;

void print_states(int qb_count,Complex * vec,char* message){
	s.writestrln(message);
	for(int i=0;i<qb_count;i++){
     60c:	0f 5f       	subi	r16, 0xFF	; 255
     60e:	1f 4f       	sbci	r17, 0xFF	; 255
     610:	28 96       	adiw	r28, 0x08	; 8
     612:	0e 15       	cp	r16, r14
     614:	1f 05       	cpc	r17, r15
     616:	09 f0       	breq	.+2      	; 0x61a <_Z12print_statesiP7ComplexPc+0xb2>
     618:	bd cf       	rjmp	.-134    	; 0x594 <_Z12print_statesiP7ComplexPc+0x2c>
		s.writestr("R: "); s.writestr(utils.int2str(vec[i].re*1000));
		s.writestr(" . I: "); s.writestr(utils.int2str(vec[i].im*1000));
		s.writestrln("");
	}
}
     61a:	df 91       	pop	r29
     61c:	cf 91       	pop	r28
     61e:	1f 91       	pop	r17
     620:	0f 91       	pop	r16
     622:	ff 90       	pop	r15
     624:	ef 90       	pop	r14
     626:	08 95       	ret

00000628 <_ZN5Gates10setup_seedEv>:

void Gates::setup_seed(){
	srand(eeprom_read_word(&randinit));
     628:	80 e0       	ldi	r24, 0x00	; 0
     62a:	90 e0       	ldi	r25, 0x00	; 0
     62c:	0e 94 5d 30 	call	0x60ba	; 0x60ba <__eerd_word_m32>
     630:	0e 94 22 2d 	call	0x5a44	; 0x5a44 <srand>
	eeprom_write_word(&randinit,rand()%10000);
     634:	0e 94 1d 2d 	call	0x5a3a	; 0x5a3a <rand>
     638:	60 e1       	ldi	r22, 0x10	; 16
     63a:	77 e2       	ldi	r23, 0x27	; 39
     63c:	0e 94 7a 2b 	call	0x56f4	; 0x56f4 <__divmodhi4>
     640:	bc 01       	movw	r22, r24
     642:	80 e0       	ldi	r24, 0x00	; 0
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	0e 94 63 30 	call	0x60c6	; 0x60c6 <__eewr_word_m32>
     64a:	08 95       	ret

0000064c <_ZN5GatesC1Ev>:
#include "uart.h"
#include "qepu.h"
#include <stdarg.h>
#include <stdlib.h>
#include <avr/eeprom.h>
Gates::Gates(){setup_seed();}
     64c:	0e 94 14 03 	call	0x628	; 0x628 <_ZN5Gates10setup_seedEv>
     650:	08 95       	ret

00000652 <_ZN5Gates5touchEd>:
void Gates::setup_seed(){
	srand(eeprom_read_word(&randinit));
	eeprom_write_word(&randinit,rand()%10000);
}

int Gates::touch(double probability){
     652:	cf 92       	push	r12
     654:	df 92       	push	r13
     656:	ef 92       	push	r14
     658:	ff 92       	push	r15
     65a:	cf 93       	push	r28
     65c:	df 93       	push	r29
     65e:	6a 01       	movw	r12, r20
     660:	7b 01       	movw	r14, r22
	return RAND_MAX*probability>=rand();
     662:	0e 94 1d 2d 	call	0x5a3a	; 0x5a3a <rand>
     666:	ec 01       	movw	r28, r24
     668:	20 e0       	ldi	r18, 0x00	; 0
     66a:	3e ef       	ldi	r19, 0xFE	; 254
     66c:	4f ef       	ldi	r20, 0xFF	; 255
     66e:	56 e4       	ldi	r21, 0x46	; 70
     670:	c7 01       	movw	r24, r14
     672:	b6 01       	movw	r22, r12
     674:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     678:	6b 01       	movw	r12, r22
     67a:	7c 01       	movw	r14, r24
     67c:	be 01       	movw	r22, r28
     67e:	88 27       	eor	r24, r24
     680:	77 fd       	sbrc	r23, 7
     682:	80 95       	com	r24
     684:	98 2f       	mov	r25, r24
     686:	0e 94 c4 28 	call	0x5188	; 0x5188 <__floatsisf>
     68a:	9b 01       	movw	r18, r22
     68c:	ac 01       	movw	r20, r24
     68e:	c1 e0       	ldi	r28, 0x01	; 1
     690:	d0 e0       	ldi	r29, 0x00	; 0
     692:	c7 01       	movw	r24, r14
     694:	b6 01       	movw	r22, r12
     696:	0e 94 ed 29 	call	0x53da	; 0x53da <__gesf2>
     69a:	88 23       	and	r24, r24
     69c:	14 f4       	brge	.+4      	; 0x6a2 <_ZN5Gates5touchEd+0x50>
     69e:	c0 e0       	ldi	r28, 0x00	; 0
     6a0:	d0 e0       	ldi	r29, 0x00	; 0
}
     6a2:	ce 01       	movw	r24, r28
     6a4:	df 91       	pop	r29
     6a6:	cf 91       	pop	r28
     6a8:	ff 90       	pop	r15
     6aa:	ef 90       	pop	r14
     6ac:	df 90       	pop	r13
     6ae:	cf 90       	pop	r12
     6b0:	08 95       	ret

000006b2 <_ZN5Gates17reverse_kroneckerEP7Complexi>:
int Gates::custom_pow(int base,int exp){
	int result=1; for(int i=0;i<exp;i++) result*=base;
	return result;
}

Complex * Gates::reverse_kronecker(Complex * kron,int kron_size){
     6b2:	4f 92       	push	r4
     6b4:	5f 92       	push	r5
     6b6:	6f 92       	push	r6
     6b8:	7f 92       	push	r7
     6ba:	8f 92       	push	r8
     6bc:	9f 92       	push	r9
     6be:	af 92       	push	r10
     6c0:	bf 92       	push	r11
     6c2:	cf 92       	push	r12
     6c4:	df 92       	push	r13
     6c6:	ef 92       	push	r14
     6c8:	ff 92       	push	r15
     6ca:	0f 93       	push	r16
     6cc:	1f 93       	push	r17
     6ce:	cf 93       	push	r28
     6d0:	df 93       	push	r29
     6d2:	cd b7       	in	r28, 0x3d	; 61
     6d4:	de b7       	in	r29, 0x3e	; 62
     6d6:	a4 97       	sbiw	r28, 0x24	; 36
     6d8:	0f b6       	in	r0, 0x3f	; 63
     6da:	f8 94       	cli
     6dc:	de bf       	out	0x3e, r29	; 62
     6de:	0f be       	out	0x3f, r0	; 63
     6e0:	cd bf       	out	0x3d, r28	; 61
     6e2:	6b 01       	movw	r12, r22
     6e4:	5a 01       	movw	r10, r20
	int reversed_kron_size=(log(kron_size)/log(2))*2;
     6e6:	ba 01       	movw	r22, r20
     6e8:	88 27       	eor	r24, r24
     6ea:	77 fd       	sbrc	r23, 7
     6ec:	80 95       	com	r24
     6ee:	98 2f       	mov	r25, r24
     6f0:	0e 94 c4 28 	call	0x5188	; 0x5188 <__floatsisf>
     6f4:	0e 94 33 2a 	call	0x5466	; 0x5466 <log>
     6f8:	28 e1       	ldi	r18, 0x18	; 24
     6fa:	32 e7       	ldi	r19, 0x72	; 114
     6fc:	41 e3       	ldi	r20, 0x31	; 49
     6fe:	5f e3       	ldi	r21, 0x3F	; 63
     700:	0e 94 f8 27 	call	0x4ff0	; 0x4ff0 <__divsf3>
     704:	2b 01       	movw	r4, r22
     706:	3c 01       	movw	r6, r24
     708:	9b 01       	movw	r18, r22
     70a:	ac 01       	movw	r20, r24
     70c:	0e 94 65 27 	call	0x4eca	; 0x4eca <__addsf3>
     710:	0e 94 91 28 	call	0x5122	; 0x5122 <__fixsfsi>
     714:	69 a3       	std	Y+33, r22	; 0x21
     716:	7a a3       	std	Y+34, r23	; 0x22
     718:	8b a3       	std	Y+35, r24	; 0x23
     71a:	9c a3       	std	Y+36, r25	; 0x24
     71c:	09 a1       	ldd	r16, Y+33	; 0x21
     71e:	1a a1       	ldd	r17, Y+34	; 0x22
	Complex * reversed_kronecker=(Complex*)malloc(sizeof(Complex)*reversed_kron_size);
     720:	c8 01       	movw	r24, r16
     722:	88 0f       	add	r24, r24
     724:	99 1f       	adc	r25, r25
     726:	88 0f       	add	r24, r24
     728:	99 1f       	adc	r25, r25
     72a:	88 0f       	add	r24, r24
     72c:	99 1f       	adc	r25, r25
     72e:	0e 94 a8 2b 	call	0x5750	; 0x5750 <malloc>
     732:	4c 01       	movw	r8, r24
		
	for(int i=0;i<kron_size;i++)
     734:	1a 14       	cp	r1, r10
     736:	1b 04       	cpc	r1, r11
     738:	0c f0       	brlt	.+2      	; 0x73c <_ZN5Gates17reverse_kroneckerEP7Complexi+0x8a>
     73a:	9e c0       	rjmp	.+316    	; 0x878 <__stack+0x19>
		if(kron[i].re==1){
     73c:	20 e0       	ldi	r18, 0x00	; 0
     73e:	30 e0       	ldi	r19, 0x00	; 0
     740:	40 e8       	ldi	r20, 0x80	; 128
     742:	5f e3       	ldi	r21, 0x3F	; 63
     744:	f6 01       	movw	r30, r12
     746:	60 81       	ld	r22, Z
     748:	71 81       	ldd	r23, Z+1	; 0x01
     74a:	82 81       	ldd	r24, Z+2	; 0x02
     74c:	93 81       	ldd	r25, Z+3	; 0x03
     74e:	0e 94 f1 27 	call	0x4fe2	; 0x4fe2 <__cmpsf2>
     752:	81 11       	cpse	r24, r1
     754:	88 c0       	rjmp	.+272    	; 0x866 <__stack+0x7>
     756:	11 c0       	rjmp	.+34     	; 0x77a <_ZN5Gates17reverse_kroneckerEP7Complexi+0xc8>
     758:	f8 e0       	ldi	r31, 0x08	; 8
     75a:	cf 0e       	add	r12, r31
     75c:	d1 1c       	adc	r13, r1
     75e:	20 e0       	ldi	r18, 0x00	; 0
     760:	30 e0       	ldi	r19, 0x00	; 0
     762:	40 e8       	ldi	r20, 0x80	; 128
     764:	5f e3       	ldi	r21, 0x3F	; 63
     766:	f6 01       	movw	r30, r12
     768:	60 81       	ld	r22, Z
     76a:	71 81       	ldd	r23, Z+1	; 0x01
     76c:	82 81       	ldd	r24, Z+2	; 0x02
     76e:	93 81       	ldd	r25, Z+3	; 0x03
     770:	0e 94 f1 27 	call	0x4fe2	; 0x4fe2 <__cmpsf2>
     774:	81 11       	cpse	r24, r1
     776:	79 c0       	rjmp	.+242    	; 0x86a <__stack+0xb>
     778:	02 c0       	rjmp	.+4      	; 0x77e <_ZN5Gates17reverse_kroneckerEP7Complexi+0xcc>

Complex * Gates::reverse_kronecker(Complex * kron,int kron_size){
	int reversed_kron_size=(log(kron_size)/log(2))*2;
	Complex * reversed_kronecker=(Complex*)malloc(sizeof(Complex)*reversed_kron_size);
		
	for(int i=0;i<kron_size;i++)
     77a:	e1 2c       	mov	r14, r1
     77c:	f1 2c       	mov	r15, r1
		if(kron[i].re==1){
			char *toBin=utils.int2binstr(i,log(kron_size)/log(2));
     77e:	c3 01       	movw	r24, r6
     780:	b2 01       	movw	r22, r4
     782:	0e 94 91 28 	call	0x5122	; 0x5122 <__fixsfsi>
     786:	ab 01       	movw	r20, r22
     788:	b7 01       	movw	r22, r14
     78a:	8e ed       	ldi	r24, 0xDE	; 222
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <_ZN4QEPU5Utils10int2binstrEii>
			int index_rev_kro=0; //USE ITS OWN INDEX BECAUSE J IS THE INDEX OF TOBIN AN TOBIN HAS TO GO REVERSED
			for(int j=0;j<reversed_kron_size;j++){
     792:	10 16       	cp	r1, r16
     794:	11 06       	cpc	r1, r17
     796:	0c f0       	brlt	.+2      	; 0x79a <_ZN5Gates17reverse_kroneckerEP7Complexi+0xe8>
     798:	6f c0       	rjmp	.+222    	; 0x878 <__stack+0x19>
     79a:	7c 01       	movw	r14, r24
     79c:	54 01       	movw	r10, r8
     79e:	64 01       	movw	r12, r8
     7a0:	f8 e0       	ldi	r31, 0x08	; 8
     7a2:	cf 0e       	add	r12, r31
     7a4:	d1 1c       	adc	r13, r1
     7a6:	49 a0       	ldd	r4, Y+33	; 0x21
     7a8:	5a a0       	ldd	r5, Y+34	; 0x22
     7aa:	48 0e       	add	r4, r24
     7ac:	59 1e       	adc	r5, r25
				if(toBin[j]=='1'){
					reversed_kronecker[index_rev_kro]=Complex(0,0); reversed_kronecker[index_rev_kro+1]=Complex(1,0);
				}else{
					reversed_kronecker[index_rev_kro]=Complex(1,0); reversed_kronecker[index_rev_kro+1]=Complex(0,0);
     7ae:	68 94       	set
     7b0:	77 24       	eor	r7, r7
     7b2:	73 f8       	bld	r7, 3
	for(int i=0;i<kron_size;i++)
		if(kron[i].re==1){
			char *toBin=utils.int2binstr(i,log(kron_size)/log(2));
			int index_rev_kro=0; //USE ITS OWN INDEX BECAUSE J IS THE INDEX OF TOBIN AN TOBIN HAS TO GO REVERSED
			for(int j=0;j<reversed_kron_size;j++){
				if(toBin[j]=='1'){
     7b4:	f7 01       	movw	r30, r14
     7b6:	81 91       	ld	r24, Z+
     7b8:	7f 01       	movw	r14, r30
     7ba:	81 33       	cpi	r24, 0x31	; 49
     7bc:	29 f5       	brne	.+74     	; 0x808 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x156>
					reversed_kronecker[index_rev_kro]=Complex(0,0); reversed_kronecker[index_rev_kro+1]=Complex(1,0);
     7be:	00 e0       	ldi	r16, 0x00	; 0
     7c0:	10 e0       	ldi	r17, 0x00	; 0
     7c2:	98 01       	movw	r18, r16
     7c4:	b9 01       	movw	r22, r18
     7c6:	a8 01       	movw	r20, r16
     7c8:	ce 01       	movw	r24, r28
     7ca:	49 96       	adiw	r24, 0x19	; 25
     7cc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     7d0:	fe 01       	movw	r30, r28
     7d2:	79 96       	adiw	r30, 0x19	; 25
     7d4:	d5 01       	movw	r26, r10
     7d6:	87 2d       	mov	r24, r7
     7d8:	01 90       	ld	r0, Z+
     7da:	0d 92       	st	X+, r0
     7dc:	8a 95       	dec	r24
     7de:	e1 f7       	brne	.-8      	; 0x7d8 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x126>
     7e0:	00 e0       	ldi	r16, 0x00	; 0
     7e2:	10 e0       	ldi	r17, 0x00	; 0
     7e4:	98 01       	movw	r18, r16
     7e6:	40 e0       	ldi	r20, 0x00	; 0
     7e8:	50 e0       	ldi	r21, 0x00	; 0
     7ea:	60 e8       	ldi	r22, 0x80	; 128
     7ec:	7f e3       	ldi	r23, 0x3F	; 63
     7ee:	ce 01       	movw	r24, r28
     7f0:	41 96       	adiw	r24, 0x11	; 17
     7f2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     7f6:	fe 01       	movw	r30, r28
     7f8:	71 96       	adiw	r30, 0x11	; 17
     7fa:	d6 01       	movw	r26, r12
     7fc:	87 2d       	mov	r24, r7
     7fe:	01 90       	ld	r0, Z+
     800:	0d 92       	st	X+, r0
     802:	8a 95       	dec	r24
     804:	e1 f7       	brne	.-8      	; 0x7fe <_ZN5Gates17reverse_kroneckerEP7Complexi+0x14c>
     806:	24 c0       	rjmp	.+72     	; 0x850 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x19e>
				}else{
					reversed_kronecker[index_rev_kro]=Complex(1,0); reversed_kronecker[index_rev_kro+1]=Complex(0,0);
     808:	00 e0       	ldi	r16, 0x00	; 0
     80a:	10 e0       	ldi	r17, 0x00	; 0
     80c:	98 01       	movw	r18, r16
     80e:	40 e0       	ldi	r20, 0x00	; 0
     810:	50 e0       	ldi	r21, 0x00	; 0
     812:	60 e8       	ldi	r22, 0x80	; 128
     814:	7f e3       	ldi	r23, 0x3F	; 63
     816:	ce 01       	movw	r24, r28
     818:	09 96       	adiw	r24, 0x09	; 9
     81a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     81e:	fe 01       	movw	r30, r28
     820:	39 96       	adiw	r30, 0x09	; 9
     822:	d5 01       	movw	r26, r10
     824:	87 2d       	mov	r24, r7
     826:	01 90       	ld	r0, Z+
     828:	0d 92       	st	X+, r0
     82a:	8a 95       	dec	r24
     82c:	e1 f7       	brne	.-8      	; 0x826 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x174>
     82e:	00 e0       	ldi	r16, 0x00	; 0
     830:	10 e0       	ldi	r17, 0x00	; 0
     832:	98 01       	movw	r18, r16
     834:	b9 01       	movw	r22, r18
     836:	a8 01       	movw	r20, r16
     838:	ce 01       	movw	r24, r28
     83a:	01 96       	adiw	r24, 0x01	; 1
     83c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
     840:	fe 01       	movw	r30, r28
     842:	31 96       	adiw	r30, 0x01	; 1
     844:	d6 01       	movw	r26, r12
     846:	87 2d       	mov	r24, r7
     848:	01 90       	ld	r0, Z+
     84a:	0d 92       	st	X+, r0
     84c:	8a 95       	dec	r24
     84e:	e1 f7       	brne	.-8      	; 0x848 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x196>
     850:	f0 e1       	ldi	r31, 0x10	; 16
     852:	af 0e       	add	r10, r31
     854:	b1 1c       	adc	r11, r1
     856:	20 e1       	ldi	r18, 0x10	; 16
     858:	c2 0e       	add	r12, r18
     85a:	d1 1c       	adc	r13, r1
		
	for(int i=0;i<kron_size;i++)
		if(kron[i].re==1){
			char *toBin=utils.int2binstr(i,log(kron_size)/log(2));
			int index_rev_kro=0; //USE ITS OWN INDEX BECAUSE J IS THE INDEX OF TOBIN AN TOBIN HAS TO GO REVERSED
			for(int j=0;j<reversed_kron_size;j++){
     85c:	e4 14       	cp	r14, r4
     85e:	f5 04       	cpc	r15, r5
     860:	09 f0       	breq	.+2      	; 0x864 <__stack+0x5>
     862:	a8 cf       	rjmp	.-176    	; 0x7b4 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x102>
     864:	09 c0       	rjmp	.+18     	; 0x878 <__stack+0x19>

Complex * Gates::reverse_kronecker(Complex * kron,int kron_size){
	int reversed_kron_size=(log(kron_size)/log(2))*2;
	Complex * reversed_kronecker=(Complex*)malloc(sizeof(Complex)*reversed_kron_size);
		
	for(int i=0;i<kron_size;i++)
     866:	e1 2c       	mov	r14, r1
     868:	f1 2c       	mov	r15, r1
     86a:	8f ef       	ldi	r24, 0xFF	; 255
     86c:	e8 1a       	sub	r14, r24
     86e:	f8 0a       	sbc	r15, r24
     870:	ea 14       	cp	r14, r10
     872:	fb 04       	cpc	r15, r11
     874:	09 f0       	breq	.+2      	; 0x878 <__stack+0x19>
     876:	70 cf       	rjmp	.-288    	; 0x758 <_ZN5Gates17reverse_kroneckerEP7Complexi+0xa6>
			}
			break;
		}
	//print_states(reversed_kron_size,reversed_kronecker,"Reversed kronecker AFTER mul: ");
	return reversed_kronecker;
}
     878:	c4 01       	movw	r24, r8
     87a:	a4 96       	adiw	r28, 0x24	; 36
     87c:	0f b6       	in	r0, 0x3f	; 63
     87e:	f8 94       	cli
     880:	de bf       	out	0x3e, r29	; 62
     882:	0f be       	out	0x3f, r0	; 63
     884:	cd bf       	out	0x3d, r28	; 61
     886:	df 91       	pop	r29
     888:	cf 91       	pop	r28
     88a:	1f 91       	pop	r17
     88c:	0f 91       	pop	r16
     88e:	ff 90       	pop	r15
     890:	ef 90       	pop	r14
     892:	df 90       	pop	r13
     894:	cf 90       	pop	r12
     896:	bf 90       	pop	r11
     898:	af 90       	pop	r10
     89a:	9f 90       	pop	r9
     89c:	8f 90       	pop	r8
     89e:	7f 90       	pop	r7
     8a0:	6f 90       	pop	r6
     8a2:	5f 90       	pop	r5
     8a4:	4f 90       	pop	r4
     8a6:	08 95       	ret

000008a8 <_ZN5Gates9kroneckerEP7Complexii>:

Complex * Gates::kronecker(Complex * vec,int qb_count,int touch_enable){
     8a8:	2f 92       	push	r2
     8aa:	3f 92       	push	r3
     8ac:	4f 92       	push	r4
     8ae:	5f 92       	push	r5
     8b0:	6f 92       	push	r6
     8b2:	7f 92       	push	r7
     8b4:	8f 92       	push	r8
     8b6:	9f 92       	push	r9
     8b8:	af 92       	push	r10
     8ba:	bf 92       	push	r11
     8bc:	cf 92       	push	r12
     8be:	df 92       	push	r13
     8c0:	ef 92       	push	r14
     8c2:	ff 92       	push	r15
     8c4:	0f 93       	push	r16
     8c6:	1f 93       	push	r17
     8c8:	cf 93       	push	r28
     8ca:	df 93       	push	r29
     8cc:	cd b7       	in	r28, 0x3d	; 61
     8ce:	de b7       	in	r29, 0x3e	; 62
     8d0:	28 97       	sbiw	r28, 0x08	; 8
     8d2:	0f b6       	in	r0, 0x3f	; 63
     8d4:	f8 94       	cli
     8d6:	de bf       	out	0x3e, r29	; 62
     8d8:	0f be       	out	0x3f, r0	; 63
     8da:	cd bf       	out	0x3d, r28	; 61
     8dc:	7c 01       	movw	r14, r24
     8de:	5b 01       	movw	r10, r22
     8e0:	4a 01       	movw	r8, r20
     8e2:	3e 83       	std	Y+6, r19	; 0x06
     8e4:	2d 83       	std	Y+5, r18	; 0x05
	if(qb_count==1) return vec;
     8e6:	41 30       	cpi	r20, 0x01	; 1
     8e8:	51 05       	cpc	r21, r1
     8ea:	09 f4       	brne	.+2      	; 0x8ee <_ZN5Gates9kroneckerEP7Complexii+0x46>
     8ec:	c1 c0       	rjmp	.+386    	; 0xa70 <_ZN5Gates9kroneckerEP7Complexii+0x1c8>
int Gates::touch(double probability){
	return RAND_MAX*probability>=rand();
}

int Gates::custom_pow(int base,int exp){
	int result=1; for(int i=0;i<exp;i++) result*=base;
     8ee:	14 16       	cp	r1, r20
     8f0:	15 06       	cpc	r1, r21
     8f2:	0c f0       	brlt	.+2      	; 0x8f6 <_ZN5Gates9kroneckerEP7Complexii+0x4e>
     8f4:	c0 c0       	rjmp	.+384    	; 0xa76 <_ZN5Gates9kroneckerEP7Complexii+0x1ce>
     8f6:	80 e0       	ldi	r24, 0x00	; 0
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	21 e0       	ldi	r18, 0x01	; 1
     8fc:	30 e0       	ldi	r19, 0x00	; 0
     8fe:	22 0f       	add	r18, r18
     900:	33 1f       	adc	r19, r19
     902:	01 96       	adiw	r24, 0x01	; 1
     904:	88 15       	cp	r24, r8
     906:	99 05       	cpc	r25, r9
     908:	d1 f7       	brne	.-12     	; 0x8fe <_ZN5Gates9kroneckerEP7Complexii+0x56>
     90a:	38 87       	std	Y+8, r19	; 0x08
     90c:	2f 83       	std	Y+7, r18	; 0x07
}

Complex * Gates::kronecker(Complex * vec,int qb_count,int touch_enable){
	if(qb_count==1) return vec;
	int kron_size=custom_pow(2,qb_count);
	Complex * kronvec=(Complex*)malloc(sizeof(Complex)*kron_size);
     90e:	c9 01       	movw	r24, r18
     910:	88 0f       	add	r24, r24
     912:	99 1f       	adc	r25, r25
     914:	88 0f       	add	r24, r24
     916:	99 1f       	adc	r25, r25
     918:	88 0f       	add	r24, r24
     91a:	99 1f       	adc	r25, r25
     91c:	0e 94 a8 2b 	call	0x5750	; 0x5750 <malloc>
     920:	89 83       	std	Y+1, r24	; 0x01
     922:	9a 83       	std	Y+2, r25	; 0x02
	
	int vec1i=0;
	int vec2i_default=qb_count;
	int vec2i=vec2i_default;
	for(int i=0;i<kron_size;i++){
     924:	ef 81       	ldd	r30, Y+7	; 0x07
     926:	f8 85       	ldd	r31, Y+8	; 0x08
     928:	1e 16       	cp	r1, r30
     92a:	1f 06       	cpc	r1, r31
     92c:	0c f4       	brge	.+2      	; 0x930 <_ZN5Gates9kroneckerEP7Complexii+0x88>
     92e:	ad c0       	rjmp	.+346    	; 0xa8a <_ZN5Gates9kroneckerEP7Complexii+0x1e2>
     930:	4e c0       	rjmp	.+156    	; 0x9ce <_ZN5Gates9kroneckerEP7Complexii+0x126>
    	if(vec2i==qb_count*2){vec2i=vec2i_default;vec1i++;}
     932:	2e 16       	cp	r2, r30
     934:	3f 06       	cpc	r3, r31
     936:	29 f4       	brne	.+10     	; 0x942 <_ZN5Gates9kroneckerEP7Complexii+0x9a>
     938:	ff ef       	ldi	r31, 0xFF	; 255
     93a:	4f 1a       	sub	r4, r31
     93c:	5f 0a       	sbc	r5, r31
     93e:	eb 81       	ldd	r30, Y+3	; 0x03
     940:	fc 81       	ldd	r31, Y+4	; 0x04
		kronvec[i]=vec[vec1i].mul(vec[vec2i++]);
     942:	7f 01       	movw	r14, r30
     944:	2f ef       	ldi	r18, 0xFF	; 255
     946:	e2 1a       	sub	r14, r18
     948:	f2 0a       	sbc	r15, r18
     94a:	ee 0f       	add	r30, r30
     94c:	ff 1f       	adc	r31, r31
     94e:	ee 0f       	add	r30, r30
     950:	ff 1f       	adc	r31, r31
     952:	ee 0f       	add	r30, r30
     954:	ff 1f       	adc	r31, r31
     956:	ea 0d       	add	r30, r10
     958:	fb 1d       	adc	r31, r11
     95a:	00 81       	ld	r16, Z
     95c:	11 81       	ldd	r17, Z+1	; 0x01
     95e:	22 81       	ldd	r18, Z+2	; 0x02
     960:	33 81       	ldd	r19, Z+3	; 0x03
     962:	44 81       	ldd	r20, Z+4	; 0x04
     964:	55 81       	ldd	r21, Z+5	; 0x05
     966:	66 81       	ldd	r22, Z+6	; 0x06
     968:	77 81       	ldd	r23, Z+7	; 0x07
     96a:	c2 01       	movw	r24, r4
     96c:	88 0f       	add	r24, r24
     96e:	99 1f       	adc	r25, r25
     970:	88 0f       	add	r24, r24
     972:	99 1f       	adc	r25, r25
     974:	88 0f       	add	r24, r24
     976:	99 1f       	adc	r25, r25
     978:	8a 0d       	add	r24, r10
     97a:	9b 1d       	adc	r25, r11
     97c:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN7Complex3mulES_>
     980:	af 81       	ldd	r26, Y+7	; 0x07
     982:	b8 85       	ldd	r27, Y+8	; 0x08
     984:	2c 93       	st	X, r18
     986:	11 96       	adiw	r26, 0x01	; 1
     988:	3c 93       	st	X, r19
     98a:	11 97       	sbiw	r26, 0x01	; 1
     98c:	12 96       	adiw	r26, 0x02	; 2
     98e:	4c 93       	st	X, r20
     990:	12 97       	sbiw	r26, 0x02	; 2
     992:	13 96       	adiw	r26, 0x03	; 3
     994:	5c 93       	st	X, r21
     996:	13 97       	sbiw	r26, 0x03	; 3
     998:	14 96       	adiw	r26, 0x04	; 4
     99a:	6c 93       	st	X, r22
     99c:	14 97       	sbiw	r26, 0x04	; 4
     99e:	15 96       	adiw	r26, 0x05	; 5
     9a0:	7c 93       	st	X, r23
     9a2:	15 97       	sbiw	r26, 0x05	; 5
     9a4:	16 96       	adiw	r26, 0x06	; 6
     9a6:	8c 93       	st	X, r24
     9a8:	16 97       	sbiw	r26, 0x06	; 6
     9aa:	17 96       	adiw	r26, 0x07	; 7
     9ac:	9c 93       	st	X, r25
	Complex * kronvec=(Complex*)malloc(sizeof(Complex)*kron_size);
	
	int vec1i=0;
	int vec2i_default=qb_count;
	int vec2i=vec2i_default;
	for(int i=0;i<kron_size;i++){
     9ae:	bf ef       	ldi	r27, 0xFF	; 255
     9b0:	6b 1a       	sub	r6, r27
     9b2:	7b 0a       	sbc	r7, r27
     9b4:	ef 81       	ldd	r30, Y+7	; 0x07
     9b6:	f8 85       	ldd	r31, Y+8	; 0x08
     9b8:	38 96       	adiw	r30, 0x08	; 8
     9ba:	f8 87       	std	Y+8, r31	; 0x08
     9bc:	ef 83       	std	Y+7, r30	; 0x07
     9be:	6c 14       	cp	r6, r12
     9c0:	7d 04       	cpc	r7, r13
     9c2:	14 f4       	brge	.+4      	; 0x9c8 <_ZN5Gates9kroneckerEP7Complexii+0x120>
    	if(vec2i==qb_count*2){vec2i=vec2i_default;vec1i++;}
		kronvec[i]=vec[vec1i].mul(vec[vec2i++]);
     9c4:	f7 01       	movw	r30, r14
     9c6:	b5 cf       	rjmp	.-150    	; 0x932 <_ZN5Gates9kroneckerEP7Complexii+0x8a>
     9c8:	d8 86       	std	Y+8, r13	; 0x08
     9ca:	cf 82       	std	Y+7, r12	; 0x07
     9cc:	74 01       	movw	r14, r8
	}
	
	if(touch_enable){
     9ce:	2d 81       	ldd	r18, Y+5	; 0x05
     9d0:	3e 81       	ldd	r19, Y+6	; 0x06
     9d2:	23 2b       	or	r18, r19
     9d4:	e9 f5       	brne	.+122    	; 0xa50 <_ZN5Gates9kroneckerEP7Complexii+0x1a8>
     9d6:	89 81       	ldd	r24, Y+1	; 0x01
     9d8:	9a 81       	ldd	r25, Y+2	; 0x02
     9da:	6a c0       	rjmp	.+212    	; 0xab0 <_ZN5Gates9kroneckerEP7Complexii+0x208>
		//TOUCH THE ENTANGLED/SUPERPOSITIONED QUBIT BEFORE GIVING IT TO A MATRIX:
		int binary_touch=1;
		while(binary_touch)	for(int i=0;i<kron_size;i++)
			if(touch(kronvec[i].re)==binary_touch){
     9dc:	51 01       	movw	r10, r2
     9de:	d1 01       	movw	r26, r2
     9e0:	4d 91       	ld	r20, X+
     9e2:	5d 91       	ld	r21, X+
     9e4:	6d 91       	ld	r22, X+
     9e6:	7c 91       	ld	r23, X
     9e8:	c7 01       	movw	r24, r14
     9ea:	0e 94 29 03 	call	0x652	; 0x652 <_ZN5Gates5touchEd>
     9ee:	01 97       	sbiw	r24, 0x01	; 1
     9f0:	29 f5       	brne	.+74     	; 0xa3c <_ZN5Gates9kroneckerEP7Complexii+0x194>
     9f2:	98 86       	std	Y+8, r9	; 0x08
     9f4:	8f 82       	std	Y+7, r8	; 0x07
     9f6:	8f 81       	ldd	r24, Y+7	; 0x07
     9f8:	98 85       	ldd	r25, Y+8	; 0x08
     9fa:	88 0f       	add	r24, r24
     9fc:	99 1f       	adc	r25, r25
     9fe:	88 0f       	add	r24, r24
     a00:	99 1f       	adc	r25, r25
     a02:	88 0f       	add	r24, r24
     a04:	99 1f       	adc	r25, r25
     a06:	86 0d       	add	r24, r6
     a08:	97 1d       	adc	r25, r7
     a0a:	f3 01       	movw	r30, r6
				for(int j=0;j<kron_size;j++){kronvec[j].re=0; kronvec[j].im=0;}
     a0c:	10 82       	st	Z, r1
     a0e:	11 82       	std	Z+1, r1	; 0x01
     a10:	12 82       	std	Z+2, r1	; 0x02
     a12:	13 82       	std	Z+3, r1	; 0x03
     a14:	14 82       	std	Z+4, r1	; 0x04
     a16:	15 82       	std	Z+5, r1	; 0x05
     a18:	16 82       	std	Z+6, r1	; 0x06
     a1a:	17 82       	std	Z+7, r1	; 0x07
     a1c:	38 96       	adiw	r30, 0x08	; 8
     a1e:	e8 17       	cp	r30, r24
     a20:	f9 07       	cpc	r31, r25
     a22:	a1 f7       	brne	.-24     	; 0xa0c <_ZN5Gates9kroneckerEP7Complexii+0x164>
				kronvec[i].re=binary_touch;
     a24:	80 e0       	ldi	r24, 0x00	; 0
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	a0 e8       	ldi	r26, 0x80	; 128
     a2a:	bf e3       	ldi	r27, 0x3F	; 63
     a2c:	f5 01       	movw	r30, r10
     a2e:	80 83       	st	Z, r24
     a30:	91 83       	std	Z+1, r25	; 0x01
     a32:	a2 83       	std	Z+2, r26	; 0x02
     a34:	b3 83       	std	Z+3, r27	; 0x03
     a36:	89 81       	ldd	r24, Y+1	; 0x01
     a38:	9a 81       	ldd	r25, Y+2	; 0x02
     a3a:	3a c0       	rjmp	.+116    	; 0xab0 <_ZN5Gates9kroneckerEP7Complexii+0x208>
	}
	
	if(touch_enable){
		//TOUCH THE ENTANGLED/SUPERPOSITIONED QUBIT BEFORE GIVING IT TO A MATRIX:
		int binary_touch=1;
		while(binary_touch)	for(int i=0;i<kron_size;i++)
     a3c:	ff ef       	ldi	r31, 0xFF	; 255
     a3e:	cf 1a       	sub	r12, r31
     a40:	df 0a       	sbc	r13, r31
     a42:	28 e0       	ldi	r18, 0x08	; 8
     a44:	22 0e       	add	r2, r18
     a46:	31 1c       	adc	r3, r1
     a48:	c8 14       	cp	r12, r8
     a4a:	d9 04       	cpc	r13, r9
     a4c:	39 f6       	brne	.-114    	; 0x9dc <_ZN5Gates9kroneckerEP7Complexii+0x134>
     a4e:	06 c0       	rjmp	.+12     	; 0xa5c <_ZN5Gates9kroneckerEP7Complexii+0x1b4>
     a50:	49 80       	ldd	r4, Y+1	; 0x01
     a52:	5a 80       	ldd	r5, Y+2	; 0x02
     a54:	00 e0       	ldi	r16, 0x00	; 0
     a56:	10 e0       	ldi	r17, 0x00	; 0
     a58:	8f 80       	ldd	r8, Y+7	; 0x07
     a5a:	98 84       	ldd	r9, Y+8	; 0x08
     a5c:	18 14       	cp	r1, r8
     a5e:	19 04       	cpc	r1, r9
     a60:	ec f7       	brge	.-6      	; 0xa5c <_ZN5Gates9kroneckerEP7Complexii+0x1b4>
     a62:	64 2c       	mov	r6, r4
     a64:	75 2c       	mov	r7, r5
     a66:	24 2c       	mov	r2, r4
     a68:	35 2c       	mov	r3, r5
     a6a:	c0 2e       	mov	r12, r16
     a6c:	d1 2e       	mov	r13, r17
     a6e:	b6 cf       	rjmp	.-148    	; 0x9dc <_ZN5Gates9kroneckerEP7Complexii+0x134>
	//print_states(reversed_kron_size,reversed_kronecker,"Reversed kronecker AFTER mul: ");
	return reversed_kronecker;
}

Complex * Gates::kronecker(Complex * vec,int qb_count,int touch_enable){
	if(qb_count==1) return vec;
     a70:	86 2f       	mov	r24, r22
     a72:	9b 2d       	mov	r25, r11
     a74:	1d c0       	rjmp	.+58     	; 0xab0 <_ZN5Gates9kroneckerEP7Complexii+0x208>
	int kron_size=custom_pow(2,qb_count);
	Complex * kronvec=(Complex*)malloc(sizeof(Complex)*kron_size);
     a76:	88 e0       	ldi	r24, 0x08	; 8
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	0e 94 a8 2b 	call	0x5750	; 0x5750 <malloc>
     a7e:	89 83       	std	Y+1, r24	; 0x01
     a80:	9a 83       	std	Y+2, r25	; 0x02
     a82:	81 e0       	ldi	r24, 0x01	; 1
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	98 87       	std	Y+8, r25	; 0x08
     a88:	8f 83       	std	Y+7, r24	; 0x07
	
	int vec1i=0;
	int vec2i_default=qb_count;
	int vec2i=vec2i_default;
	for(int i=0;i<kron_size;i++){
    	if(vec2i==qb_count*2){vec2i=vec2i_default;vec1i++;}
     a8a:	14 01       	movw	r2, r8
     a8c:	22 0c       	add	r2, r2
     a8e:	33 1c       	adc	r3, r3
     a90:	c9 80       	ldd	r12, Y+1	; 0x01
     a92:	da 80       	ldd	r13, Y+2	; 0x02
     a94:	f4 01       	movw	r30, r8
     a96:	61 2c       	mov	r6, r1
     a98:	71 2c       	mov	r7, r1
     a9a:	41 2c       	mov	r4, r1
     a9c:	51 2c       	mov	r5, r1
     a9e:	8b 82       	std	Y+3, r8	; 0x03
     aa0:	9c 82       	std	Y+4, r9	; 0x04
     aa2:	c6 01       	movw	r24, r12
     aa4:	cf 80       	ldd	r12, Y+7	; 0x07
     aa6:	d8 84       	ldd	r13, Y+8	; 0x08
     aa8:	47 01       	movw	r8, r14
     aaa:	98 87       	std	Y+8, r25	; 0x08
     aac:	8f 83       	std	Y+7, r24	; 0x07
     aae:	41 cf       	rjmp	.-382    	; 0x932 <_ZN5Gates9kroneckerEP7Complexii+0x8a>
				break;
			}
	}
	//print_states(kron_size,kronvec,"Kronecker: ");
	return kronvec;
}
     ab0:	28 96       	adiw	r28, 0x08	; 8
     ab2:	0f b6       	in	r0, 0x3f	; 63
     ab4:	f8 94       	cli
     ab6:	de bf       	out	0x3e, r29	; 62
     ab8:	0f be       	out	0x3f, r0	; 63
     aba:	cd bf       	out	0x3d, r28	; 61
     abc:	df 91       	pop	r29
     abe:	cf 91       	pop	r28
     ac0:	1f 91       	pop	r17
     ac2:	0f 91       	pop	r16
     ac4:	ff 90       	pop	r15
     ac6:	ef 90       	pop	r14
     ac8:	df 90       	pop	r13
     aca:	cf 90       	pop	r12
     acc:	bf 90       	pop	r11
     ace:	af 90       	pop	r10
     ad0:	9f 90       	pop	r9
     ad2:	8f 90       	pop	r8
     ad4:	7f 90       	pop	r7
     ad6:	6f 90       	pop	r6
     ad8:	5f 90       	pop	r5
     ada:	4f 90       	pop	r4
     adc:	3f 90       	pop	r3
     ade:	2f 90       	pop	r2
     ae0:	08 95       	ret

00000ae2 <_ZN5Gates8ampl2vecEiPiS0_>:

Complex * Gates::ampl2vec(int qb_count,int theta_list[6],int phi_list[6]){
     ae2:	2f 92       	push	r2
     ae4:	3f 92       	push	r3
     ae6:	4f 92       	push	r4
     ae8:	5f 92       	push	r5
     aea:	6f 92       	push	r6
     aec:	7f 92       	push	r7
     aee:	8f 92       	push	r8
     af0:	9f 92       	push	r9
     af2:	af 92       	push	r10
     af4:	bf 92       	push	r11
     af6:	cf 92       	push	r12
     af8:	df 92       	push	r13
     afa:	ef 92       	push	r14
     afc:	ff 92       	push	r15
     afe:	0f 93       	push	r16
     b00:	1f 93       	push	r17
     b02:	cf 93       	push	r28
     b04:	df 93       	push	r29
     b06:	cd b7       	in	r28, 0x3d	; 61
     b08:	de b7       	in	r29, 0x3e	; 62
     b0a:	28 97       	sbiw	r28, 0x08	; 8
     b0c:	0f b6       	in	r0, 0x3f	; 63
     b0e:	f8 94       	cli
     b10:	de bf       	out	0x3e, r29	; 62
     b12:	0f be       	out	0x3f, r0	; 63
     b14:	cd bf       	out	0x3d, r28	; 61
     b16:	9e 83       	std	Y+6, r25	; 0x06
     b18:	8d 83       	std	Y+5, r24	; 0x05
     b1a:	7a 83       	std	Y+2, r23	; 0x02
     b1c:	69 83       	std	Y+1, r22	; 0x01
     b1e:	04 2f       	mov	r16, r20
     b20:	15 2f       	mov	r17, r21
     b22:	c2 2e       	mov	r12, r18
     b24:	d3 2e       	mov	r13, r19
	Complex* vec=(Complex*)malloc(sizeof(Complex)*(qb_count*2));
     b26:	cb 01       	movw	r24, r22
     b28:	82 95       	swap	r24
     b2a:	92 95       	swap	r25
     b2c:	90 7f       	andi	r25, 0xF0	; 240
     b2e:	98 27       	eor	r25, r24
     b30:	80 7f       	andi	r24, 0xF0	; 240
     b32:	98 27       	eor	r25, r24
     b34:	0e 94 a8 2b 	call	0x5750	; 0x5750 <malloc>
     b38:	8b 83       	std	Y+3, r24	; 0x03
     b3a:	9c 83       	std	Y+4, r25	; 0x04
	int thephi_index=0;
	for(int i=0;i<qb_count*2;i+=2){
     b3c:	29 80       	ldd	r2, Y+1	; 0x01
     b3e:	3a 80       	ldd	r3, Y+2	; 0x02
     b40:	22 0c       	add	r2, r2
     b42:	33 1c       	adc	r3, r3
     b44:	12 14       	cp	r1, r2
     b46:	13 04       	cpc	r1, r3
     b48:	0c f0       	brlt	.+2      	; 0xb4c <_ZN5Gates8ampl2vecEiPiS0_+0x6a>
     b4a:	ac c0       	rjmp	.+344    	; 0xca4 <_ZN5Gates8ampl2vecEiPiS0_+0x1c2>
     b4c:	a8 2e       	mov	r10, r24
     b4e:	b9 2e       	mov	r11, r25
     b50:	e0 2e       	mov	r14, r16
     b52:	f1 2e       	mov	r15, r17
     b54:	0c 2d       	mov	r16, r12
     b56:	1d 2d       	mov	r17, r13
     b58:	81 2c       	mov	r8, r1
     b5a:	91 2c       	mov	r9, r1
     b5c:	b8 86       	std	Y+8, r11	; 0x08
     b5e:	af 82       	std	Y+7, r10	; 0x07
     b60:	67 01       	movw	r12, r14
		vec[i].re=cos(theta_list[thephi_index]*M_PI/360);												// ALPHA RE (IM=0)
     b62:	f7 01       	movw	r30, r14
     b64:	41 90       	ld	r4, Z+
     b66:	51 90       	ld	r5, Z+
     b68:	7f 01       	movw	r14, r30
     b6a:	66 24       	eor	r6, r6
     b6c:	57 fc       	sbrc	r5, 7
     b6e:	60 94       	com	r6
     b70:	76 2c       	mov	r7, r6
     b72:	c3 01       	movw	r24, r6
     b74:	b2 01       	movw	r22, r4
     b76:	0e 94 c4 28 	call	0x5188	; 0x5188 <__floatsisf>
     b7a:	2b ed       	ldi	r18, 0xDB	; 219
     b7c:	3f e0       	ldi	r19, 0x0F	; 15
     b7e:	49 e4       	ldi	r20, 0x49	; 73
     b80:	50 e4       	ldi	r21, 0x40	; 64
     b82:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     b86:	20 e0       	ldi	r18, 0x00	; 0
     b88:	30 e0       	ldi	r19, 0x00	; 0
     b8a:	44 eb       	ldi	r20, 0xB4	; 180
     b8c:	53 e4       	ldi	r21, 0x43	; 67
     b8e:	0e 94 f8 27 	call	0x4ff0	; 0x4ff0 <__divsf3>
     b92:	0e 94 f5 27 	call	0x4fea	; 0x4fea <cos>
     b96:	ef 81       	ldd	r30, Y+7	; 0x07
     b98:	f8 85       	ldd	r31, Y+8	; 0x08
     b9a:	60 83       	st	Z, r22
     b9c:	71 83       	std	Z+1, r23	; 0x01
     b9e:	82 83       	std	Z+2, r24	; 0x02
     ba0:	93 83       	std	Z+3, r25	; 0x03
		vec[i+1].re=sin((theta_list[thephi_index]*M_PI)/360)*cos((phi_list[thephi_index]*M_PI)/180);	// BETA RE
     ba2:	c3 01       	movw	r24, r6
     ba4:	b2 01       	movw	r22, r4
     ba6:	0e 94 c4 28 	call	0x5188	; 0x5188 <__floatsisf>
     baa:	2b ed       	ldi	r18, 0xDB	; 219
     bac:	3f e0       	ldi	r19, 0x0F	; 15
     bae:	49 e4       	ldi	r20, 0x49	; 73
     bb0:	50 e4       	ldi	r21, 0x40	; 64
     bb2:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     bb6:	20 e0       	ldi	r18, 0x00	; 0
     bb8:	30 e0       	ldi	r19, 0x00	; 0
     bba:	44 eb       	ldi	r20, 0xB4	; 180
     bbc:	53 e4       	ldi	r21, 0x43	; 67
     bbe:	0e 94 f8 27 	call	0x4ff0	; 0x4ff0 <__divsf3>
     bc2:	0e 94 09 2b 	call	0x5612	; 0x5612 <sin>
     bc6:	2b 01       	movw	r4, r22
     bc8:	3c 01       	movw	r6, r24
     bca:	58 01       	movw	r10, r16
     bcc:	f8 01       	movw	r30, r16
     bce:	61 91       	ld	r22, Z+
     bd0:	71 91       	ld	r23, Z+
     bd2:	8f 01       	movw	r16, r30
     bd4:	88 27       	eor	r24, r24
     bd6:	77 fd       	sbrc	r23, 7
     bd8:	80 95       	com	r24
     bda:	98 2f       	mov	r25, r24
     bdc:	0e 94 c4 28 	call	0x5188	; 0x5188 <__floatsisf>
     be0:	2b ed       	ldi	r18, 0xDB	; 219
     be2:	3f e0       	ldi	r19, 0x0F	; 15
     be4:	49 e4       	ldi	r20, 0x49	; 73
     be6:	50 e4       	ldi	r21, 0x40	; 64
     be8:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     bec:	20 e0       	ldi	r18, 0x00	; 0
     bee:	30 e0       	ldi	r19, 0x00	; 0
     bf0:	44 e3       	ldi	r20, 0x34	; 52
     bf2:	53 e4       	ldi	r21, 0x43	; 67
     bf4:	0e 94 f8 27 	call	0x4ff0	; 0x4ff0 <__divsf3>
     bf8:	0e 94 f5 27 	call	0x4fea	; 0x4fea <cos>
     bfc:	9b 01       	movw	r18, r22
     bfe:	ac 01       	movw	r20, r24
     c00:	c3 01       	movw	r24, r6
     c02:	b2 01       	movw	r22, r4
     c04:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     c08:	ef 81       	ldd	r30, Y+7	; 0x07
     c0a:	f8 85       	ldd	r31, Y+8	; 0x08
     c0c:	60 87       	std	Z+8, r22	; 0x08
     c0e:	71 87       	std	Z+9, r23	; 0x09
     c10:	82 87       	std	Z+10, r24	; 0x0a
     c12:	93 87       	std	Z+11, r25	; 0x0b
		vec[i+1].im=sin((theta_list[thephi_index]*M_PI)/360)*sin((phi_list[thephi_index++]*M_PI)/180);  // BETA IM
     c14:	f6 01       	movw	r30, r12
     c16:	60 81       	ld	r22, Z
     c18:	71 81       	ldd	r23, Z+1	; 0x01
     c1a:	88 27       	eor	r24, r24
     c1c:	77 fd       	sbrc	r23, 7
     c1e:	80 95       	com	r24
     c20:	98 2f       	mov	r25, r24
     c22:	0e 94 c4 28 	call	0x5188	; 0x5188 <__floatsisf>
     c26:	2b ed       	ldi	r18, 0xDB	; 219
     c28:	3f e0       	ldi	r19, 0x0F	; 15
     c2a:	49 e4       	ldi	r20, 0x49	; 73
     c2c:	50 e4       	ldi	r21, 0x40	; 64
     c2e:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	44 eb       	ldi	r20, 0xB4	; 180
     c38:	53 e4       	ldi	r21, 0x43	; 67
     c3a:	0e 94 f8 27 	call	0x4ff0	; 0x4ff0 <__divsf3>
     c3e:	0e 94 09 2b 	call	0x5612	; 0x5612 <sin>
     c42:	2b 01       	movw	r4, r22
     c44:	3c 01       	movw	r6, r24
     c46:	f5 01       	movw	r30, r10
     c48:	60 81       	ld	r22, Z
     c4a:	71 81       	ldd	r23, Z+1	; 0x01
     c4c:	88 27       	eor	r24, r24
     c4e:	77 fd       	sbrc	r23, 7
     c50:	80 95       	com	r24
     c52:	98 2f       	mov	r25, r24
     c54:	0e 94 c4 28 	call	0x5188	; 0x5188 <__floatsisf>
     c58:	2b ed       	ldi	r18, 0xDB	; 219
     c5a:	3f e0       	ldi	r19, 0x0F	; 15
     c5c:	49 e4       	ldi	r20, 0x49	; 73
     c5e:	50 e4       	ldi	r21, 0x40	; 64
     c60:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     c64:	20 e0       	ldi	r18, 0x00	; 0
     c66:	30 e0       	ldi	r19, 0x00	; 0
     c68:	44 e3       	ldi	r20, 0x34	; 52
     c6a:	53 e4       	ldi	r21, 0x43	; 67
     c6c:	0e 94 f8 27 	call	0x4ff0	; 0x4ff0 <__divsf3>
     c70:	0e 94 09 2b 	call	0x5612	; 0x5612 <sin>
     c74:	9b 01       	movw	r18, r22
     c76:	ac 01       	movw	r20, r24
     c78:	c3 01       	movw	r24, r6
     c7a:	b2 01       	movw	r22, r4
     c7c:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     c80:	ef 81       	ldd	r30, Y+7	; 0x07
     c82:	f8 85       	ldd	r31, Y+8	; 0x08
     c84:	64 87       	std	Z+12, r22	; 0x0c
     c86:	75 87       	std	Z+13, r23	; 0x0d
     c88:	86 87       	std	Z+14, r24	; 0x0e
     c8a:	97 87       	std	Z+15, r25	; 0x0f
}

Complex * Gates::ampl2vec(int qb_count,int theta_list[6],int phi_list[6]){
	Complex* vec=(Complex*)malloc(sizeof(Complex)*(qb_count*2));
	int thephi_index=0;
	for(int i=0;i<qb_count*2;i+=2){
     c8c:	f2 e0       	ldi	r31, 0x02	; 2
     c8e:	8f 0e       	add	r8, r31
     c90:	91 1c       	adc	r9, r1
     c92:	8f 81       	ldd	r24, Y+7	; 0x07
     c94:	98 85       	ldd	r25, Y+8	; 0x08
     c96:	40 96       	adiw	r24, 0x10	; 16
     c98:	98 87       	std	Y+8, r25	; 0x08
     c9a:	8f 83       	std	Y+7, r24	; 0x07
     c9c:	82 14       	cp	r8, r2
     c9e:	93 04       	cpc	r9, r3
     ca0:	0c f4       	brge	.+2      	; 0xca4 <_ZN5Gates8ampl2vecEiPiS0_+0x1c2>
     ca2:	5e cf       	rjmp	.-324    	; 0xb60 <_ZN5Gates8ampl2vecEiPiS0_+0x7e>
		vec[i].re=cos(theta_list[thephi_index]*M_PI/360);												// ALPHA RE (IM=0)
		vec[i+1].re=sin((theta_list[thephi_index]*M_PI)/360)*cos((phi_list[thephi_index]*M_PI)/180);	// BETA RE
		vec[i+1].im=sin((theta_list[thephi_index]*M_PI)/360)*sin((phi_list[thephi_index++]*M_PI)/180);  // BETA IM
	}
	print_states(qb_count*2,vec,"Before: ");
     ca4:	45 e7       	ldi	r20, 0x75	; 117
     ca6:	50 e0       	ldi	r21, 0x00	; 0
     ca8:	6b 81       	ldd	r22, Y+3	; 0x03
     caa:	7c 81       	ldd	r23, Y+4	; 0x04
     cac:	c1 01       	movw	r24, r2
     cae:	0e 94 b4 02 	call	0x568	; 0x568 <_Z12print_statesiP7ComplexPc>
	return kronecker(vec,qb_count,true); // PUT VEC INTO KRONECKER AND RETURN THE RESULT
     cb2:	21 e0       	ldi	r18, 0x01	; 1
     cb4:	30 e0       	ldi	r19, 0x00	; 0
     cb6:	49 81       	ldd	r20, Y+1	; 0x01
     cb8:	5a 81       	ldd	r21, Y+2	; 0x02
     cba:	6b 81       	ldd	r22, Y+3	; 0x03
     cbc:	7c 81       	ldd	r23, Y+4	; 0x04
     cbe:	8d 81       	ldd	r24, Y+5	; 0x05
     cc0:	9e 81       	ldd	r25, Y+6	; 0x06
     cc2:	0e 94 54 04 	call	0x8a8	; 0x8a8 <_ZN5Gates9kroneckerEP7Complexii>
}
     cc6:	28 96       	adiw	r28, 0x08	; 8
     cc8:	0f b6       	in	r0, 0x3f	; 63
     cca:	f8 94       	cli
     ccc:	de bf       	out	0x3e, r29	; 62
     cce:	0f be       	out	0x3f, r0	; 63
     cd0:	cd bf       	out	0x3d, r28	; 61
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
     cd6:	1f 91       	pop	r17
     cd8:	0f 91       	pop	r16
     cda:	ff 90       	pop	r15
     cdc:	ef 90       	pop	r14
     cde:	df 90       	pop	r13
     ce0:	cf 90       	pop	r12
     ce2:	bf 90       	pop	r11
     ce4:	af 90       	pop	r10
     ce6:	9f 90       	pop	r9
     ce8:	8f 90       	pop	r8
     cea:	7f 90       	pop	r7
     cec:	6f 90       	pop	r6
     cee:	5f 90       	pop	r5
     cf0:	4f 90       	pop	r4
     cf2:	3f 90       	pop	r3
     cf4:	2f 90       	pop	r2
     cf6:	08 95       	ret

00000cf8 <_ZN5Gates8vec2amplEP7Complexi>:
int * Gates::vec2ampl(Complex * vec,int qb_count){
     cf8:	6f 92       	push	r6
     cfa:	7f 92       	push	r7
     cfc:	8f 92       	push	r8
     cfe:	9f 92       	push	r9
     d00:	af 92       	push	r10
     d02:	bf 92       	push	r11
     d04:	cf 92       	push	r12
     d06:	df 92       	push	r13
     d08:	ef 92       	push	r14
     d0a:	ff 92       	push	r15
     d0c:	0f 93       	push	r16
     d0e:	1f 93       	push	r17
     d10:	cf 93       	push	r28
     d12:	df 93       	push	r29
     d14:	86 2e       	mov	r8, r22
     d16:	97 2e       	mov	r9, r23
     d18:	5a 01       	movw	r10, r20
int Gates::touch(double probability){
	return RAND_MAX*probability>=rand();
}

int Gates::custom_pow(int base,int exp){
	int result=1; for(int i=0;i<exp;i++) result*=base;
     d1a:	14 16       	cp	r1, r20
     d1c:	15 06       	cpc	r1, r21
     d1e:	6c f4       	brge	.+26     	; 0xd3a <_ZN5Gates8vec2amplEP7Complexi+0x42>
     d20:	20 e0       	ldi	r18, 0x00	; 0
     d22:	30 e0       	ldi	r19, 0x00	; 0
     d24:	cc 24       	eor	r12, r12
     d26:	c3 94       	inc	r12
     d28:	d1 2c       	mov	r13, r1
     d2a:	cc 0c       	add	r12, r12
     d2c:	dd 1c       	adc	r13, r13
     d2e:	2f 5f       	subi	r18, 0xFF	; 255
     d30:	3f 4f       	sbci	r19, 0xFF	; 255
     d32:	2a 15       	cp	r18, r10
     d34:	3b 05       	cpc	r19, r11
     d36:	c9 f7       	brne	.-14     	; 0xd2a <_ZN5Gates8vec2amplEP7Complexi+0x32>
     d38:	03 c0       	rjmp	.+6      	; 0xd40 <_ZN5Gates8vec2amplEP7Complexi+0x48>
     d3a:	cc 24       	eor	r12, r12
     d3c:	c3 94       	inc	r12
     d3e:	d1 2c       	mov	r13, r1
	print_states(qb_count*2,vec,"Before: ");
	return kronecker(vec,qb_count,true); // PUT VEC INTO KRONECKER AND RETURN THE RESULT
}
int * Gates::vec2ampl(Complex * vec,int qb_count){
	int kron_size=custom_pow(2,qb_count);
	if(qb_count>1) vec=reverse_kronecker(vec,kron_size);
     d40:	22 e0       	ldi	r18, 0x02	; 2
     d42:	a2 16       	cp	r10, r18
     d44:	b1 04       	cpc	r11, r1
     d46:	3c f0       	brlt	.+14     	; 0xd56 <_ZN5Gates8vec2amplEP7Complexi+0x5e>
     d48:	a6 01       	movw	r20, r12
     d4a:	68 2d       	mov	r22, r8
     d4c:	79 2d       	mov	r23, r9
     d4e:	0e 94 59 03 	call	0x6b2	; 0x6b2 <_ZN5Gates17reverse_kroneckerEP7Complexi>
     d52:	88 2e       	mov	r8, r24
     d54:	99 2e       	mov	r9, r25
	
	int* newthephi=(int*)malloc(sizeof(int)*(qb_count*2));
     d56:	c5 01       	movw	r24, r10
     d58:	88 0f       	add	r24, r24
     d5a:	99 1f       	adc	r25, r25
     d5c:	88 0f       	add	r24, r24
     d5e:	99 1f       	adc	r25, r25
     d60:	0e 94 a8 2b 	call	0x5750	; 0x5750 <malloc>
     d64:	68 2e       	mov	r6, r24
     d66:	79 2e       	mov	r7, r25
	for(int i=0;i<qb_count*2;i++) if(i%2==0) newthephi[i]=(360*acos(vec[i].re))/M_PI; else newthephi[i]=(180*vec[i].arg())/M_PI;
     d68:	aa 0c       	add	r10, r10
     d6a:	bb 1c       	adc	r11, r11
     d6c:	1a 14       	cp	r1, r10
     d6e:	1b 04       	cpc	r1, r11
     d70:	f4 f5       	brge	.+124    	; 0xdee <_ZN5Gates8vec2amplEP7Complexi+0xf6>
     d72:	e8 2c       	mov	r14, r8
     d74:	f9 2c       	mov	r15, r9
     d76:	08 2f       	mov	r16, r24
     d78:	19 2f       	mov	r17, r25
     d7a:	c0 e0       	ldi	r28, 0x00	; 0
     d7c:	d0 e0       	ldi	r29, 0x00	; 0
     d7e:	c0 fd       	sbrc	r28, 0
     d80:	19 c0       	rjmp	.+50     	; 0xdb4 <_ZN5Gates8vec2amplEP7Complexi+0xbc>
     d82:	f7 01       	movw	r30, r14
     d84:	60 81       	ld	r22, Z
     d86:	71 81       	ldd	r23, Z+1	; 0x01
     d88:	82 81       	ldd	r24, Z+2	; 0x02
     d8a:	93 81       	ldd	r25, Z+3	; 0x03
     d8c:	0e 94 56 27 	call	0x4eac	; 0x4eac <acos>
     d90:	20 e0       	ldi	r18, 0x00	; 0
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	44 eb       	ldi	r20, 0xB4	; 180
     d96:	53 e4       	ldi	r21, 0x43	; 67
     d98:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     d9c:	2b ed       	ldi	r18, 0xDB	; 219
     d9e:	3f e0       	ldi	r19, 0x0F	; 15
     da0:	49 e4       	ldi	r20, 0x49	; 73
     da2:	50 e4       	ldi	r21, 0x40	; 64
     da4:	0e 94 f8 27 	call	0x4ff0	; 0x4ff0 <__divsf3>
     da8:	0e 94 91 28 	call	0x5122	; 0x5122 <__fixsfsi>
     dac:	f8 01       	movw	r30, r16
     dae:	71 83       	std	Z+1, r23	; 0x01
     db0:	60 83       	st	Z, r22
     db2:	14 c0       	rjmp	.+40     	; 0xddc <_ZN5Gates8vec2amplEP7Complexi+0xe4>
     db4:	c7 01       	movw	r24, r14
     db6:	0e 94 02 02 	call	0x404	; 0x404 <_ZN7Complex3argEv>
     dba:	20 e0       	ldi	r18, 0x00	; 0
     dbc:	30 e0       	ldi	r19, 0x00	; 0
     dbe:	44 e3       	ldi	r20, 0x34	; 52
     dc0:	53 e4       	ldi	r21, 0x43	; 67
     dc2:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
     dc6:	2b ed       	ldi	r18, 0xDB	; 219
     dc8:	3f e0       	ldi	r19, 0x0F	; 15
     dca:	49 e4       	ldi	r20, 0x49	; 73
     dcc:	50 e4       	ldi	r21, 0x40	; 64
     dce:	0e 94 f8 27 	call	0x4ff0	; 0x4ff0 <__divsf3>
     dd2:	0e 94 91 28 	call	0x5122	; 0x5122 <__fixsfsi>
     dd6:	f8 01       	movw	r30, r16
     dd8:	71 83       	std	Z+1, r23	; 0x01
     dda:	60 83       	st	Z, r22
     ddc:	21 96       	adiw	r28, 0x01	; 1
     dde:	f8 e0       	ldi	r31, 0x08	; 8
     de0:	ef 0e       	add	r14, r31
     de2:	f1 1c       	adc	r15, r1
     de4:	0e 5f       	subi	r16, 0xFE	; 254
     de6:	1f 4f       	sbci	r17, 0xFF	; 255
     de8:	ca 15       	cp	r28, r10
     dea:	db 05       	cpc	r29, r11
     dec:	41 f6       	brne	.-112    	; 0xd7e <_ZN5Gates8vec2amplEP7Complexi+0x86>

	print_states(kron_size,vec,"After: ");
     dee:	4e e7       	ldi	r20, 0x7E	; 126
     df0:	50 e0       	ldi	r21, 0x00	; 0
     df2:	68 2d       	mov	r22, r8
     df4:	79 2d       	mov	r23, r9
     df6:	c6 01       	movw	r24, r12
     df8:	0e 94 b4 02 	call	0x568	; 0x568 <_Z12print_statesiP7ComplexPc>
	return newthephi;
}
     dfc:	86 2d       	mov	r24, r6
     dfe:	97 2d       	mov	r25, r7
     e00:	df 91       	pop	r29
     e02:	cf 91       	pop	r28
     e04:	1f 91       	pop	r17
     e06:	0f 91       	pop	r16
     e08:	ff 90       	pop	r15
     e0a:	ef 90       	pop	r14
     e0c:	df 90       	pop	r13
     e0e:	cf 90       	pop	r12
     e10:	bf 90       	pop	r11
     e12:	af 90       	pop	r10
     e14:	9f 90       	pop	r9
     e16:	8f 90       	pop	r8
     e18:	7f 90       	pop	r7
     e1a:	6f 90       	pop	r6
     e1c:	08 95       	ret

00000e1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>:

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
     e1e:	2f 92       	push	r2
     e20:	3f 92       	push	r3
     e22:	4f 92       	push	r4
     e24:	5f 92       	push	r5
     e26:	6f 92       	push	r6
     e28:	7f 92       	push	r7
     e2a:	8f 92       	push	r8
     e2c:	9f 92       	push	r9
     e2e:	af 92       	push	r10
     e30:	bf 92       	push	r11
     e32:	cf 92       	push	r12
     e34:	df 92       	push	r13
     e36:	ef 92       	push	r14
     e38:	ff 92       	push	r15
     e3a:	0f 93       	push	r16
     e3c:	1f 93       	push	r17
     e3e:	cf 93       	push	r28
     e40:	df 93       	push	r29
     e42:	cd b7       	in	r28, 0x3d	; 61
     e44:	de b7       	in	r29, 0x3e	; 62
     e46:	60 97       	sbiw	r28, 0x10	; 16
     e48:	0f b6       	in	r0, 0x3f	; 63
     e4a:	f8 94       	cli
     e4c:	de bf       	out	0x3e, r29	; 62
     e4e:	0f be       	out	0x3f, r0	; 63
     e50:	cd bf       	out	0x3d, r28	; 61
     e52:	4b 01       	movw	r8, r22
     e54:	3a 01       	movw	r6, r20
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
     e56:	80 e1       	ldi	r24, 0x10	; 16
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	0e 94 a8 2b 	call	0x5750	; 0x5750 <malloc>
     e5e:	38 2e       	mov	r3, r24
     e60:	29 2e       	mov	r2, r25
     e62:	c8 2e       	mov	r12, r24
     e64:	d9 2e       	mov	r13, r25
	for(int i=0;i<qb_size;i++){
     e66:	a1 2c       	mov	r10, r1
     e68:	b1 2c       	mov	r11, r1
		Complex tmp;
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
     e6a:	24 01       	movw	r4, r8
     e6c:	88 e0       	ldi	r24, 0x08	; 8
     e6e:	48 0e       	add	r4, r24
     e70:	51 1c       	adc	r5, r1

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
		Complex tmp;
     e72:	ce 01       	movw	r24, r28
     e74:	09 96       	adiw	r24, 0x09	; 9
     e76:	0e 94 00 01 	call	0x200	; 0x200 <_ZN7ComplexC1Ev>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
     e7a:	75 01       	movw	r14, r10
     e7c:	ee 0c       	add	r14, r14
     e7e:	ff 1c       	adc	r15, r15
     e80:	ee 0c       	add	r14, r14
     e82:	ff 1c       	adc	r15, r15
     e84:	ee 0c       	add	r14, r14
     e86:	ff 1c       	adc	r15, r15
     e88:	e6 0c       	add	r14, r6
     e8a:	f7 1c       	adc	r15, r7
     e8c:	d7 01       	movw	r26, r14
     e8e:	0c 91       	ld	r16, X
     e90:	11 96       	adiw	r26, 0x01	; 1
     e92:	1c 91       	ld	r17, X
     e94:	11 97       	sbiw	r26, 0x01	; 1
     e96:	12 96       	adiw	r26, 0x02	; 2
     e98:	2c 91       	ld	r18, X
     e9a:	12 97       	sbiw	r26, 0x02	; 2
     e9c:	13 96       	adiw	r26, 0x03	; 3
     e9e:	3c 91       	ld	r19, X
     ea0:	13 97       	sbiw	r26, 0x03	; 3
     ea2:	14 96       	adiw	r26, 0x04	; 4
     ea4:	4c 91       	ld	r20, X
     ea6:	14 97       	sbiw	r26, 0x04	; 4
     ea8:	15 96       	adiw	r26, 0x05	; 5
     eaa:	5c 91       	ld	r21, X
     eac:	15 97       	sbiw	r26, 0x05	; 5
     eae:	16 96       	adiw	r26, 0x06	; 6
     eb0:	6c 91       	ld	r22, X
     eb2:	16 97       	sbiw	r26, 0x06	; 6
     eb4:	17 96       	adiw	r26, 0x07	; 7
     eb6:	7c 91       	ld	r23, X
     eb8:	c4 01       	movw	r24, r8
     eba:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN7Complex3mulES_>
     ebe:	02 2f       	mov	r16, r18
     ec0:	13 2f       	mov	r17, r19
     ec2:	24 2f       	mov	r18, r20
     ec4:	35 2f       	mov	r19, r21
     ec6:	46 2f       	mov	r20, r22
     ec8:	57 2f       	mov	r21, r23
     eca:	68 2f       	mov	r22, r24
     ecc:	79 2f       	mov	r23, r25
     ece:	ce 01       	movw	r24, r28
     ed0:	09 96       	adiw	r24, 0x09	; 9
     ed2:	0e 94 0a 01 	call	0x214	; 0x214 <_ZN7Complex3addES_>
     ed6:	29 87       	std	Y+9, r18	; 0x09
     ed8:	3a 87       	std	Y+10, r19	; 0x0a
     eda:	4b 87       	std	Y+11, r20	; 0x0b
     edc:	5c 87       	std	Y+12, r21	; 0x0c
     ede:	6d 87       	std	Y+13, r22	; 0x0d
     ee0:	7e 87       	std	Y+14, r23	; 0x0e
     ee2:	8f 87       	std	Y+15, r24	; 0x0f
     ee4:	98 8b       	std	Y+16, r25	; 0x10
     ee6:	f7 01       	movw	r30, r14
     ee8:	70 96       	adiw	r30, 0x10	; 16
     eea:	d7 01       	movw	r26, r14
     eec:	50 96       	adiw	r26, 0x10	; 16
     eee:	0c 91       	ld	r16, X
     ef0:	11 81       	ldd	r17, Z+1	; 0x01
     ef2:	22 81       	ldd	r18, Z+2	; 0x02
     ef4:	33 81       	ldd	r19, Z+3	; 0x03
     ef6:	44 81       	ldd	r20, Z+4	; 0x04
     ef8:	55 81       	ldd	r21, Z+5	; 0x05
     efa:	66 81       	ldd	r22, Z+6	; 0x06
     efc:	77 81       	ldd	r23, Z+7	; 0x07
     efe:	c2 01       	movw	r24, r4
     f00:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN7Complex3mulES_>
     f04:	02 2f       	mov	r16, r18
     f06:	13 2f       	mov	r17, r19
     f08:	24 2f       	mov	r18, r20
     f0a:	35 2f       	mov	r19, r21
     f0c:	46 2f       	mov	r20, r22
     f0e:	57 2f       	mov	r21, r23
     f10:	68 2f       	mov	r22, r24
     f12:	79 2f       	mov	r23, r25
     f14:	ce 01       	movw	r24, r28
     f16:	09 96       	adiw	r24, 0x09	; 9
     f18:	0e 94 0a 01 	call	0x214	; 0x214 <_ZN7Complex3addES_>
     f1c:	29 87       	std	Y+9, r18	; 0x09
     f1e:	3a 87       	std	Y+10, r19	; 0x0a
     f20:	4b 87       	std	Y+11, r20	; 0x0b
     f22:	5c 87       	std	Y+12, r21	; 0x0c
     f24:	6d 87       	std	Y+13, r22	; 0x0d
     f26:	7e 87       	std	Y+14, r23	; 0x0e
     f28:	8f 87       	std	Y+15, r24	; 0x0f
     f2a:	98 8b       	std	Y+16, r25	; 0x10
		result[i].re=tmp.re;
     f2c:	89 85       	ldd	r24, Y+9	; 0x09
     f2e:	9a 85       	ldd	r25, Y+10	; 0x0a
     f30:	ab 85       	ldd	r26, Y+11	; 0x0b
     f32:	bc 85       	ldd	r27, Y+12	; 0x0c
     f34:	f6 01       	movw	r30, r12
     f36:	80 83       	st	Z, r24
     f38:	91 83       	std	Z+1, r25	; 0x01
     f3a:	a2 83       	std	Z+2, r26	; 0x02
     f3c:	b3 83       	std	Z+3, r27	; 0x03
		result[i].im=tmp.im;
     f3e:	8d 85       	ldd	r24, Y+13	; 0x0d
     f40:	9e 85       	ldd	r25, Y+14	; 0x0e
     f42:	af 85       	ldd	r26, Y+15	; 0x0f
     f44:	b8 89       	ldd	r27, Y+16	; 0x10
     f46:	84 83       	std	Z+4, r24	; 0x04
     f48:	95 83       	std	Z+5, r25	; 0x05
     f4a:	a6 83       	std	Z+6, r26	; 0x06
     f4c:	b7 83       	std	Z+7, r27	; 0x07
}

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
     f4e:	ff ef       	ldi	r31, 0xFF	; 255
     f50:	af 1a       	sub	r10, r31
     f52:	bf 0a       	sbc	r11, r31
     f54:	88 e0       	ldi	r24, 0x08	; 8
     f56:	c8 0e       	add	r12, r24
     f58:	d1 1c       	adc	r13, r1
     f5a:	a2 e0       	ldi	r26, 0x02	; 2
     f5c:	aa 16       	cp	r10, r26
     f5e:	b1 04       	cpc	r11, r1
     f60:	09 f0       	breq	.+2      	; 0xf64 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_+0x146>
     f62:	87 cf       	rjmp	.-242    	; 0xe72 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_+0x54>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
		result[i].re=tmp.re;
		result[i].im=tmp.im;
	}
	return result;
}
     f64:	83 2d       	mov	r24, r3
     f66:	92 2d       	mov	r25, r2
     f68:	60 96       	adiw	r28, 0x10	; 16
     f6a:	0f b6       	in	r0, 0x3f	; 63
     f6c:	f8 94       	cli
     f6e:	de bf       	out	0x3e, r29	; 62
     f70:	0f be       	out	0x3f, r0	; 63
     f72:	cd bf       	out	0x3d, r28	; 61
     f74:	df 91       	pop	r29
     f76:	cf 91       	pop	r28
     f78:	1f 91       	pop	r17
     f7a:	0f 91       	pop	r16
     f7c:	ff 90       	pop	r15
     f7e:	ef 90       	pop	r14
     f80:	df 90       	pop	r13
     f82:	cf 90       	pop	r12
     f84:	bf 90       	pop	r11
     f86:	af 90       	pop	r10
     f88:	9f 90       	pop	r9
     f8a:	8f 90       	pop	r8
     f8c:	7f 90       	pop	r7
     f8e:	6f 90       	pop	r6
     f90:	5f 90       	pop	r5
     f92:	4f 90       	pop	r4
     f94:	3f 90       	pop	r3
     f96:	2f 90       	pop	r2
     f98:	08 95       	ret

00000f9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>:
Complex * Gates::multiply4x4(Complex *q,Complex matrix[4][4]){
     f9a:	2f 92       	push	r2
     f9c:	3f 92       	push	r3
     f9e:	4f 92       	push	r4
     fa0:	5f 92       	push	r5
     fa2:	6f 92       	push	r6
     fa4:	7f 92       	push	r7
     fa6:	8f 92       	push	r8
     fa8:	9f 92       	push	r9
     faa:	af 92       	push	r10
     fac:	bf 92       	push	r11
     fae:	cf 92       	push	r12
     fb0:	df 92       	push	r13
     fb2:	ef 92       	push	r14
     fb4:	ff 92       	push	r15
     fb6:	0f 93       	push	r16
     fb8:	1f 93       	push	r17
     fba:	cf 93       	push	r28
     fbc:	df 93       	push	r29
     fbe:	cd b7       	in	r28, 0x3d	; 61
     fc0:	de b7       	in	r29, 0x3e	; 62
     fc2:	64 97       	sbiw	r28, 0x14	; 20
     fc4:	0f b6       	in	r0, 0x3f	; 63
     fc6:	f8 94       	cli
     fc8:	de bf       	out	0x3e, r29	; 62
     fca:	0f be       	out	0x3f, r0	; 63
     fcc:	cd bf       	out	0x3d, r28	; 61
     fce:	3b 01       	movw	r6, r22
     fd0:	e4 2e       	mov	r14, r20
     fd2:	f5 2e       	mov	r15, r21
	int qb_size=4;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
     fd4:	80 e2       	ldi	r24, 0x20	; 32
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	0e 94 a8 2b 	call	0x5750	; 0x5750 <malloc>
     fdc:	8b 8b       	std	Y+19, r24	; 0x13
     fde:	9c 8b       	std	Y+20, r25	; 0x14
     fe0:	48 2e       	mov	r4, r24
     fe2:	59 2e       	mov	r5, r25
	for(int i=0;i<qb_size;i++){
     fe4:	81 2c       	mov	r8, r1
     fe6:	91 2c       	mov	r9, r1
     fe8:	e9 8a       	std	Y+17, r14	; 0x11
     fea:	fa 8a       	std	Y+18, r15	; 0x12
		Complex tmp;
     fec:	21 2c       	mov	r2, r1
     fee:	31 2c       	mov	r3, r1
     ff0:	ce 01       	movw	r24, r28
     ff2:	09 96       	adiw	r24, 0x09	; 9
     ff4:	0e 94 00 01 	call	0x200	; 0x200 <_ZN7ComplexC1Ev>
     ff8:	c9 88       	ldd	r12, Y+17	; 0x11
     ffa:	da 88       	ldd	r13, Y+18	; 0x12
     ffc:	e2 2c       	mov	r14, r2
     ffe:	f3 2c       	mov	r15, r3
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
    1000:	54 01       	movw	r10, r8
    1002:	aa 0c       	add	r10, r10
    1004:	bb 1c       	adc	r11, r11
    1006:	aa 0c       	add	r10, r10
    1008:	bb 1c       	adc	r11, r11
    100a:	aa 0c       	add	r10, r10
    100c:	bb 1c       	adc	r11, r11
    100e:	f5 01       	movw	r30, r10
    1010:	ec 0d       	add	r30, r12
    1012:	fd 1d       	adc	r31, r13
    1014:	00 81       	ld	r16, Z
    1016:	11 81       	ldd	r17, Z+1	; 0x01
    1018:	22 81       	ldd	r18, Z+2	; 0x02
    101a:	33 81       	ldd	r19, Z+3	; 0x03
    101c:	44 81       	ldd	r20, Z+4	; 0x04
    101e:	55 81       	ldd	r21, Z+5	; 0x05
    1020:	66 81       	ldd	r22, Z+6	; 0x06
    1022:	77 81       	ldd	r23, Z+7	; 0x07
    1024:	c3 01       	movw	r24, r6
    1026:	8e 0d       	add	r24, r14
    1028:	9f 1d       	adc	r25, r15
    102a:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN7Complex3mulES_>
    102e:	29 83       	std	Y+1, r18	; 0x01
    1030:	3a 83       	std	Y+2, r19	; 0x02
    1032:	4b 83       	std	Y+3, r20	; 0x03
    1034:	5c 83       	std	Y+4, r21	; 0x04
    1036:	6d 83       	std	Y+5, r22	; 0x05
    1038:	7e 83       	std	Y+6, r23	; 0x06
    103a:	8f 83       	std	Y+7, r24	; 0x07
    103c:	98 87       	std	Y+8, r25	; 0x08
    103e:	02 2f       	mov	r16, r18
    1040:	13 2f       	mov	r17, r19
    1042:	24 2f       	mov	r18, r20
    1044:	35 2f       	mov	r19, r21
    1046:	46 2f       	mov	r20, r22
    1048:	57 2f       	mov	r21, r23
    104a:	68 2f       	mov	r22, r24
    104c:	79 2f       	mov	r23, r25
    104e:	ce 01       	movw	r24, r28
    1050:	09 96       	adiw	r24, 0x09	; 9
    1052:	0e 94 0a 01 	call	0x214	; 0x214 <_ZN7Complex3addES_>
    1056:	29 87       	std	Y+9, r18	; 0x09
    1058:	3a 87       	std	Y+10, r19	; 0x0a
    105a:	4b 87       	std	Y+11, r20	; 0x0b
    105c:	5c 87       	std	Y+12, r21	; 0x0c
    105e:	6d 87       	std	Y+13, r22	; 0x0d
    1060:	7e 87       	std	Y+14, r23	; 0x0e
    1062:	8f 87       	std	Y+15, r24	; 0x0f
    1064:	98 8b       	std	Y+16, r25	; 0x10
    1066:	88 e0       	ldi	r24, 0x08	; 8
    1068:	e8 0e       	add	r14, r24
    106a:	f1 1c       	adc	r15, r1
    106c:	e0 e2       	ldi	r30, 0x20	; 32
    106e:	ce 0e       	add	r12, r30
    1070:	d1 1c       	adc	r13, r1
    1072:	f0 e2       	ldi	r31, 0x20	; 32
    1074:	ef 16       	cp	r14, r31
    1076:	f1 04       	cpc	r15, r1
    1078:	51 f6       	brne	.-108    	; 0x100e <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_+0x74>
		result[i].re=tmp.re;
    107a:	89 85       	ldd	r24, Y+9	; 0x09
    107c:	9a 85       	ldd	r25, Y+10	; 0x0a
    107e:	ab 85       	ldd	r26, Y+11	; 0x0b
    1080:	bc 85       	ldd	r27, Y+12	; 0x0c
    1082:	f2 01       	movw	r30, r4
    1084:	80 83       	st	Z, r24
    1086:	91 83       	std	Z+1, r25	; 0x01
    1088:	a2 83       	std	Z+2, r26	; 0x02
    108a:	b3 83       	std	Z+3, r27	; 0x03
		result[i].im=tmp.im;
    108c:	8d 85       	ldd	r24, Y+13	; 0x0d
    108e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1090:	af 85       	ldd	r26, Y+15	; 0x0f
    1092:	b8 89       	ldd	r27, Y+16	; 0x10
    1094:	84 83       	std	Z+4, r24	; 0x04
    1096:	95 83       	std	Z+5, r25	; 0x05
    1098:	a6 83       	std	Z+6, r26	; 0x06
    109a:	b7 83       	std	Z+7, r27	; 0x07
	return result;
}
Complex * Gates::multiply4x4(Complex *q,Complex matrix[4][4]){
	int qb_size=4;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
    109c:	ff ef       	ldi	r31, 0xFF	; 255
    109e:	8f 1a       	sub	r8, r31
    10a0:	9f 0a       	sbc	r9, r31
    10a2:	88 e0       	ldi	r24, 0x08	; 8
    10a4:	48 0e       	add	r4, r24
    10a6:	51 1c       	adc	r5, r1
    10a8:	e4 e0       	ldi	r30, 0x04	; 4
    10aa:	8e 16       	cp	r8, r30
    10ac:	91 04       	cpc	r9, r1
    10ae:	09 f0       	breq	.+2      	; 0x10b2 <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_+0x118>
    10b0:	9f cf       	rjmp	.-194    	; 0xff0 <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_+0x56>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
		result[i].re=tmp.re;
		result[i].im=tmp.im;
	}
	return result;
}
    10b2:	8b 89       	ldd	r24, Y+19	; 0x13
    10b4:	9c 89       	ldd	r25, Y+20	; 0x14
    10b6:	64 96       	adiw	r28, 0x14	; 20
    10b8:	0f b6       	in	r0, 0x3f	; 63
    10ba:	f8 94       	cli
    10bc:	de bf       	out	0x3e, r29	; 62
    10be:	0f be       	out	0x3f, r0	; 63
    10c0:	cd bf       	out	0x3d, r28	; 61
    10c2:	df 91       	pop	r29
    10c4:	cf 91       	pop	r28
    10c6:	1f 91       	pop	r17
    10c8:	0f 91       	pop	r16
    10ca:	ff 90       	pop	r15
    10cc:	ef 90       	pop	r14
    10ce:	df 90       	pop	r13
    10d0:	cf 90       	pop	r12
    10d2:	bf 90       	pop	r11
    10d4:	af 90       	pop	r10
    10d6:	9f 90       	pop	r9
    10d8:	8f 90       	pop	r8
    10da:	7f 90       	pop	r7
    10dc:	6f 90       	pop	r6
    10de:	5f 90       	pop	r5
    10e0:	4f 90       	pop	r4
    10e2:	3f 90       	pop	r3
    10e4:	2f 90       	pop	r2
    10e6:	08 95       	ret

000010e8 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_>:
Complex * Gates::multiply8x8(Complex *q,Complex matrix[8][8]){
    10e8:	2f 92       	push	r2
    10ea:	3f 92       	push	r3
    10ec:	4f 92       	push	r4
    10ee:	5f 92       	push	r5
    10f0:	6f 92       	push	r6
    10f2:	7f 92       	push	r7
    10f4:	8f 92       	push	r8
    10f6:	9f 92       	push	r9
    10f8:	af 92       	push	r10
    10fa:	bf 92       	push	r11
    10fc:	cf 92       	push	r12
    10fe:	df 92       	push	r13
    1100:	ef 92       	push	r14
    1102:	ff 92       	push	r15
    1104:	0f 93       	push	r16
    1106:	1f 93       	push	r17
    1108:	cf 93       	push	r28
    110a:	df 93       	push	r29
    110c:	cd b7       	in	r28, 0x3d	; 61
    110e:	de b7       	in	r29, 0x3e	; 62
    1110:	62 97       	sbiw	r28, 0x12	; 18
    1112:	0f b6       	in	r0, 0x3f	; 63
    1114:	f8 94       	cli
    1116:	de bf       	out	0x3e, r29	; 62
    1118:	0f be       	out	0x3f, r0	; 63
    111a:	cd bf       	out	0x3d, r28	; 61
    111c:	4b 01       	movw	r8, r22
    111e:	34 2e       	mov	r3, r20
    1120:	25 2e       	mov	r2, r21
	int qb_size=8;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
    1122:	80 e4       	ldi	r24, 0x40	; 64
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	0e 94 a8 2b 	call	0x5750	; 0x5750 <malloc>
    112a:	89 8b       	std	Y+17, r24	; 0x11
    112c:	9a 8b       	std	Y+18, r25	; 0x12
    112e:	48 2e       	mov	r4, r24
    1130:	59 2e       	mov	r5, r25
	for(int i=0;i<qb_size;i++){
    1132:	61 2c       	mov	r6, r1
    1134:	71 2c       	mov	r7, r1
		Complex tmp;
    1136:	ce 01       	movw	r24, r28
    1138:	09 96       	adiw	r24, 0x09	; 9
    113a:	0e 94 00 01 	call	0x200	; 0x200 <_ZN7ComplexC1Ev>
    113e:	c3 2c       	mov	r12, r3
    1140:	d2 2c       	mov	r13, r2
    1142:	e1 2c       	mov	r14, r1
    1144:	f1 2c       	mov	r15, r1
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
    1146:	53 01       	movw	r10, r6
    1148:	aa 0c       	add	r10, r10
    114a:	bb 1c       	adc	r11, r11
    114c:	aa 0c       	add	r10, r10
    114e:	bb 1c       	adc	r11, r11
    1150:	aa 0c       	add	r10, r10
    1152:	bb 1c       	adc	r11, r11
    1154:	f5 01       	movw	r30, r10
    1156:	ec 0d       	add	r30, r12
    1158:	fd 1d       	adc	r31, r13
    115a:	00 81       	ld	r16, Z
    115c:	11 81       	ldd	r17, Z+1	; 0x01
    115e:	22 81       	ldd	r18, Z+2	; 0x02
    1160:	33 81       	ldd	r19, Z+3	; 0x03
    1162:	44 81       	ldd	r20, Z+4	; 0x04
    1164:	55 81       	ldd	r21, Z+5	; 0x05
    1166:	66 81       	ldd	r22, Z+6	; 0x06
    1168:	77 81       	ldd	r23, Z+7	; 0x07
    116a:	c4 01       	movw	r24, r8
    116c:	8e 0d       	add	r24, r14
    116e:	9f 1d       	adc	r25, r15
    1170:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN7Complex3mulES_>
    1174:	29 83       	std	Y+1, r18	; 0x01
    1176:	3a 83       	std	Y+2, r19	; 0x02
    1178:	4b 83       	std	Y+3, r20	; 0x03
    117a:	5c 83       	std	Y+4, r21	; 0x04
    117c:	6d 83       	std	Y+5, r22	; 0x05
    117e:	7e 83       	std	Y+6, r23	; 0x06
    1180:	8f 83       	std	Y+7, r24	; 0x07
    1182:	98 87       	std	Y+8, r25	; 0x08
    1184:	02 2f       	mov	r16, r18
    1186:	13 2f       	mov	r17, r19
    1188:	24 2f       	mov	r18, r20
    118a:	35 2f       	mov	r19, r21
    118c:	46 2f       	mov	r20, r22
    118e:	57 2f       	mov	r21, r23
    1190:	68 2f       	mov	r22, r24
    1192:	79 2f       	mov	r23, r25
    1194:	ce 01       	movw	r24, r28
    1196:	09 96       	adiw	r24, 0x09	; 9
    1198:	0e 94 0a 01 	call	0x214	; 0x214 <_ZN7Complex3addES_>
    119c:	29 87       	std	Y+9, r18	; 0x09
    119e:	3a 87       	std	Y+10, r19	; 0x0a
    11a0:	4b 87       	std	Y+11, r20	; 0x0b
    11a2:	5c 87       	std	Y+12, r21	; 0x0c
    11a4:	6d 87       	std	Y+13, r22	; 0x0d
    11a6:	7e 87       	std	Y+14, r23	; 0x0e
    11a8:	8f 87       	std	Y+15, r24	; 0x0f
    11aa:	98 8b       	std	Y+16, r25	; 0x10
    11ac:	88 e0       	ldi	r24, 0x08	; 8
    11ae:	e8 0e       	add	r14, r24
    11b0:	f1 1c       	adc	r15, r1
    11b2:	e0 e4       	ldi	r30, 0x40	; 64
    11b4:	ce 0e       	add	r12, r30
    11b6:	d1 1c       	adc	r13, r1
    11b8:	f0 e4       	ldi	r31, 0x40	; 64
    11ba:	ef 16       	cp	r14, r31
    11bc:	f1 04       	cpc	r15, r1
    11be:	51 f6       	brne	.-108    	; 0x1154 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_+0x6c>
		result[i].re=tmp.re;
    11c0:	89 85       	ldd	r24, Y+9	; 0x09
    11c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    11c4:	ab 85       	ldd	r26, Y+11	; 0x0b
    11c6:	bc 85       	ldd	r27, Y+12	; 0x0c
    11c8:	f2 01       	movw	r30, r4
    11ca:	80 83       	st	Z, r24
    11cc:	91 83       	std	Z+1, r25	; 0x01
    11ce:	a2 83       	std	Z+2, r26	; 0x02
    11d0:	b3 83       	std	Z+3, r27	; 0x03
		result[i].im=tmp.im;
    11d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    11d4:	9e 85       	ldd	r25, Y+14	; 0x0e
    11d6:	af 85       	ldd	r26, Y+15	; 0x0f
    11d8:	b8 89       	ldd	r27, Y+16	; 0x10
    11da:	84 83       	std	Z+4, r24	; 0x04
    11dc:	95 83       	std	Z+5, r25	; 0x05
    11de:	a6 83       	std	Z+6, r26	; 0x06
    11e0:	b7 83       	std	Z+7, r27	; 0x07
	return result;
}
Complex * Gates::multiply8x8(Complex *q,Complex matrix[8][8]){
	int qb_size=8;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
    11e2:	ff ef       	ldi	r31, 0xFF	; 255
    11e4:	6f 1a       	sub	r6, r31
    11e6:	7f 0a       	sbc	r7, r31
    11e8:	88 e0       	ldi	r24, 0x08	; 8
    11ea:	48 0e       	add	r4, r24
    11ec:	51 1c       	adc	r5, r1
    11ee:	e8 e0       	ldi	r30, 0x08	; 8
    11f0:	6e 16       	cp	r6, r30
    11f2:	71 04       	cpc	r7, r1
    11f4:	09 f0       	breq	.+2      	; 0x11f8 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_+0x110>
    11f6:	9f cf       	rjmp	.-194    	; 0x1136 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_+0x4e>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
		result[i].re=tmp.re;
		result[i].im=tmp.im;
	}
	return result;
}
    11f8:	89 89       	ldd	r24, Y+17	; 0x11
    11fa:	9a 89       	ldd	r25, Y+18	; 0x12
    11fc:	62 96       	adiw	r28, 0x12	; 18
    11fe:	0f b6       	in	r0, 0x3f	; 63
    1200:	f8 94       	cli
    1202:	de bf       	out	0x3e, r29	; 62
    1204:	0f be       	out	0x3f, r0	; 63
    1206:	cd bf       	out	0x3d, r28	; 61
    1208:	df 91       	pop	r29
    120a:	cf 91       	pop	r28
    120c:	1f 91       	pop	r17
    120e:	0f 91       	pop	r16
    1210:	ff 90       	pop	r15
    1212:	ef 90       	pop	r14
    1214:	df 90       	pop	r13
    1216:	cf 90       	pop	r12
    1218:	bf 90       	pop	r11
    121a:	af 90       	pop	r10
    121c:	9f 90       	pop	r9
    121e:	8f 90       	pop	r8
    1220:	7f 90       	pop	r7
    1222:	6f 90       	pop	r6
    1224:	5f 90       	pop	r5
    1226:	4f 90       	pop	r4
    1228:	3f 90       	pop	r3
    122a:	2f 90       	pop	r2
    122c:	08 95       	ret

0000122e <_ZN5Gates1XEii>:

int * Gates::X(int theta,int phi){
    122e:	af 92       	push	r10
    1230:	bf 92       	push	r11
    1232:	cf 92       	push	r12
    1234:	df 92       	push	r13
    1236:	ef 92       	push	r14
    1238:	ff 92       	push	r15
    123a:	0f 93       	push	r16
    123c:	1f 93       	push	r17
    123e:	cf 93       	push	r28
    1240:	df 93       	push	r29
    1242:	cd b7       	in	r28, 0x3d	; 61
    1244:	de b7       	in	r29, 0x3e	; 62
    1246:	a4 97       	sbiw	r28, 0x24	; 36
    1248:	0f b6       	in	r0, 0x3f	; 63
    124a:	f8 94       	cli
    124c:	de bf       	out	0x3e, r29	; 62
    124e:	0f be       	out	0x3f, r0	; 63
    1250:	cd bf       	out	0x3d, r28	; 61
    1252:	7c 01       	movw	r14, r24
    1254:	5b 01       	movw	r10, r22
    1256:	6a 01       	movw	r12, r20
	Complex x_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(0,0),Complex(1,0)},
													   {Complex(1,0),Complex(0,0)}};
    1258:	00 e0       	ldi	r16, 0x00	; 0
    125a:	10 e0       	ldi	r17, 0x00	; 0
    125c:	98 01       	movw	r18, r16
    125e:	b9 01       	movw	r22, r18
    1260:	a8 01       	movw	r20, r16
    1262:	ce 01       	movw	r24, r28
    1264:	01 96       	adiw	r24, 0x01	; 1
    1266:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    126a:	00 e0       	ldi	r16, 0x00	; 0
    126c:	10 e0       	ldi	r17, 0x00	; 0
    126e:	98 01       	movw	r18, r16
    1270:	40 e0       	ldi	r20, 0x00	; 0
    1272:	50 e0       	ldi	r21, 0x00	; 0
    1274:	60 e8       	ldi	r22, 0x80	; 128
    1276:	7f e3       	ldi	r23, 0x3F	; 63
    1278:	ce 01       	movw	r24, r28
    127a:	09 96       	adiw	r24, 0x09	; 9
    127c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1280:	00 e0       	ldi	r16, 0x00	; 0
    1282:	10 e0       	ldi	r17, 0x00	; 0
    1284:	98 01       	movw	r18, r16
    1286:	40 e0       	ldi	r20, 0x00	; 0
    1288:	50 e0       	ldi	r21, 0x00	; 0
    128a:	60 e8       	ldi	r22, 0x80	; 128
    128c:	7f e3       	ldi	r23, 0x3F	; 63
    128e:	ce 01       	movw	r24, r28
    1290:	41 96       	adiw	r24, 0x11	; 17
    1292:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1296:	00 e0       	ldi	r16, 0x00	; 0
    1298:	10 e0       	ldi	r17, 0x00	; 0
    129a:	98 01       	movw	r18, r16
    129c:	b9 01       	movw	r22, r18
    129e:	a8 01       	movw	r20, r16
    12a0:	ce 01       	movw	r24, r28
    12a2:	49 96       	adiw	r24, 0x19	; 25
    12a4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[1]={phi};
    12a8:	bc a2       	std	Y+36, r11	; 0x24
    12aa:	ab a2       	std	Y+35, r10	; 0x23
    12ac:	da a2       	std	Y+34, r13	; 0x22
    12ae:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),x_matrix),QB_SIZE1);
    12b0:	9e 01       	movw	r18, r28
    12b2:	2f 5d       	subi	r18, 0xDF	; 223
    12b4:	3f 4f       	sbci	r19, 0xFF	; 255
    12b6:	ae 01       	movw	r20, r28
    12b8:	4d 5d       	subi	r20, 0xDD	; 221
    12ba:	5f 4f       	sbci	r21, 0xFF	; 255
    12bc:	61 e0       	ldi	r22, 0x01	; 1
    12be:	70 e0       	ldi	r23, 0x00	; 0
    12c0:	c7 01       	movw	r24, r14
    12c2:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    12c6:	ae 01       	movw	r20, r28
    12c8:	4f 5f       	subi	r20, 0xFF	; 255
    12ca:	5f 4f       	sbci	r21, 0xFF	; 255
    12cc:	bc 01       	movw	r22, r24
    12ce:	c7 01       	movw	r24, r14
    12d0:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    12d4:	41 e0       	ldi	r20, 0x01	; 1
    12d6:	50 e0       	ldi	r21, 0x00	; 0
    12d8:	bc 01       	movw	r22, r24
    12da:	c7 01       	movw	r24, r14
    12dc:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    12e0:	a4 96       	adiw	r28, 0x24	; 36
    12e2:	0f b6       	in	r0, 0x3f	; 63
    12e4:	f8 94       	cli
    12e6:	de bf       	out	0x3e, r29	; 62
    12e8:	0f be       	out	0x3f, r0	; 63
    12ea:	cd bf       	out	0x3d, r28	; 61
    12ec:	df 91       	pop	r29
    12ee:	cf 91       	pop	r28
    12f0:	1f 91       	pop	r17
    12f2:	0f 91       	pop	r16
    12f4:	ff 90       	pop	r15
    12f6:	ef 90       	pop	r14
    12f8:	df 90       	pop	r13
    12fa:	cf 90       	pop	r12
    12fc:	bf 90       	pop	r11
    12fe:	af 90       	pop	r10
    1300:	08 95       	ret

00001302 <_ZN5Gates1YEii>:
int * Gates::Y(int theta,int phi){
    1302:	af 92       	push	r10
    1304:	bf 92       	push	r11
    1306:	cf 92       	push	r12
    1308:	df 92       	push	r13
    130a:	ef 92       	push	r14
    130c:	ff 92       	push	r15
    130e:	0f 93       	push	r16
    1310:	1f 93       	push	r17
    1312:	cf 93       	push	r28
    1314:	df 93       	push	r29
    1316:	cd b7       	in	r28, 0x3d	; 61
    1318:	de b7       	in	r29, 0x3e	; 62
    131a:	a4 97       	sbiw	r28, 0x24	; 36
    131c:	0f b6       	in	r0, 0x3f	; 63
    131e:	f8 94       	cli
    1320:	de bf       	out	0x3e, r29	; 62
    1322:	0f be       	out	0x3f, r0	; 63
    1324:	cd bf       	out	0x3d, r28	; 61
    1326:	7c 01       	movw	r14, r24
    1328:	5b 01       	movw	r10, r22
    132a:	6a 01       	movw	r12, r20
	Complex y_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(0,0),Complex(0,-1)},
													   {Complex(0,1),Complex(0,0)}};
    132c:	00 e0       	ldi	r16, 0x00	; 0
    132e:	10 e0       	ldi	r17, 0x00	; 0
    1330:	98 01       	movw	r18, r16
    1332:	b9 01       	movw	r22, r18
    1334:	a8 01       	movw	r20, r16
    1336:	ce 01       	movw	r24, r28
    1338:	01 96       	adiw	r24, 0x01	; 1
    133a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    133e:	00 e0       	ldi	r16, 0x00	; 0
    1340:	10 e0       	ldi	r17, 0x00	; 0
    1342:	20 e8       	ldi	r18, 0x80	; 128
    1344:	3f eb       	ldi	r19, 0xBF	; 191
    1346:	40 e0       	ldi	r20, 0x00	; 0
    1348:	50 e0       	ldi	r21, 0x00	; 0
    134a:	ba 01       	movw	r22, r20
    134c:	ce 01       	movw	r24, r28
    134e:	09 96       	adiw	r24, 0x09	; 9
    1350:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1354:	00 e0       	ldi	r16, 0x00	; 0
    1356:	10 e0       	ldi	r17, 0x00	; 0
    1358:	20 e8       	ldi	r18, 0x80	; 128
    135a:	3f e3       	ldi	r19, 0x3F	; 63
    135c:	40 e0       	ldi	r20, 0x00	; 0
    135e:	50 e0       	ldi	r21, 0x00	; 0
    1360:	ba 01       	movw	r22, r20
    1362:	ce 01       	movw	r24, r28
    1364:	41 96       	adiw	r24, 0x11	; 17
    1366:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    136a:	00 e0       	ldi	r16, 0x00	; 0
    136c:	10 e0       	ldi	r17, 0x00	; 0
    136e:	98 01       	movw	r18, r16
    1370:	b9 01       	movw	r22, r18
    1372:	a8 01       	movw	r20, r16
    1374:	ce 01       	movw	r24, r28
    1376:	49 96       	adiw	r24, 0x19	; 25
    1378:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    137c:	bc a2       	std	Y+36, r11	; 0x24
    137e:	ab a2       	std	Y+35, r10	; 0x23
    1380:	da a2       	std	Y+34, r13	; 0x22
    1382:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),y_matrix),QB_SIZE1);
    1384:	9e 01       	movw	r18, r28
    1386:	2f 5d       	subi	r18, 0xDF	; 223
    1388:	3f 4f       	sbci	r19, 0xFF	; 255
    138a:	ae 01       	movw	r20, r28
    138c:	4d 5d       	subi	r20, 0xDD	; 221
    138e:	5f 4f       	sbci	r21, 0xFF	; 255
    1390:	61 e0       	ldi	r22, 0x01	; 1
    1392:	70 e0       	ldi	r23, 0x00	; 0
    1394:	c7 01       	movw	r24, r14
    1396:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    139a:	ae 01       	movw	r20, r28
    139c:	4f 5f       	subi	r20, 0xFF	; 255
    139e:	5f 4f       	sbci	r21, 0xFF	; 255
    13a0:	bc 01       	movw	r22, r24
    13a2:	c7 01       	movw	r24, r14
    13a4:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    13a8:	41 e0       	ldi	r20, 0x01	; 1
    13aa:	50 e0       	ldi	r21, 0x00	; 0
    13ac:	bc 01       	movw	r22, r24
    13ae:	c7 01       	movw	r24, r14
    13b0:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    13b4:	a4 96       	adiw	r28, 0x24	; 36
    13b6:	0f b6       	in	r0, 0x3f	; 63
    13b8:	f8 94       	cli
    13ba:	de bf       	out	0x3e, r29	; 62
    13bc:	0f be       	out	0x3f, r0	; 63
    13be:	cd bf       	out	0x3d, r28	; 61
    13c0:	df 91       	pop	r29
    13c2:	cf 91       	pop	r28
    13c4:	1f 91       	pop	r17
    13c6:	0f 91       	pop	r16
    13c8:	ff 90       	pop	r15
    13ca:	ef 90       	pop	r14
    13cc:	df 90       	pop	r13
    13ce:	cf 90       	pop	r12
    13d0:	bf 90       	pop	r11
    13d2:	af 90       	pop	r10
    13d4:	08 95       	ret

000013d6 <_ZN5Gates1ZEii>:
int * Gates::Z(int theta,int phi){
    13d6:	af 92       	push	r10
    13d8:	bf 92       	push	r11
    13da:	cf 92       	push	r12
    13dc:	df 92       	push	r13
    13de:	ef 92       	push	r14
    13e0:	ff 92       	push	r15
    13e2:	0f 93       	push	r16
    13e4:	1f 93       	push	r17
    13e6:	cf 93       	push	r28
    13e8:	df 93       	push	r29
    13ea:	cd b7       	in	r28, 0x3d	; 61
    13ec:	de b7       	in	r29, 0x3e	; 62
    13ee:	a4 97       	sbiw	r28, 0x24	; 36
    13f0:	0f b6       	in	r0, 0x3f	; 63
    13f2:	f8 94       	cli
    13f4:	de bf       	out	0x3e, r29	; 62
    13f6:	0f be       	out	0x3f, r0	; 63
    13f8:	cd bf       	out	0x3d, r28	; 61
    13fa:	7c 01       	movw	r14, r24
    13fc:	5b 01       	movw	r10, r22
    13fe:	6a 01       	movw	r12, r20
	Complex z_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(1,0),Complex(0,0)},
													   {Complex(0,0),Complex(-1,0)}};
    1400:	00 e0       	ldi	r16, 0x00	; 0
    1402:	10 e0       	ldi	r17, 0x00	; 0
    1404:	98 01       	movw	r18, r16
    1406:	40 e0       	ldi	r20, 0x00	; 0
    1408:	50 e0       	ldi	r21, 0x00	; 0
    140a:	60 e8       	ldi	r22, 0x80	; 128
    140c:	7f e3       	ldi	r23, 0x3F	; 63
    140e:	ce 01       	movw	r24, r28
    1410:	01 96       	adiw	r24, 0x01	; 1
    1412:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1416:	00 e0       	ldi	r16, 0x00	; 0
    1418:	10 e0       	ldi	r17, 0x00	; 0
    141a:	98 01       	movw	r18, r16
    141c:	b9 01       	movw	r22, r18
    141e:	a8 01       	movw	r20, r16
    1420:	ce 01       	movw	r24, r28
    1422:	09 96       	adiw	r24, 0x09	; 9
    1424:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1428:	00 e0       	ldi	r16, 0x00	; 0
    142a:	10 e0       	ldi	r17, 0x00	; 0
    142c:	98 01       	movw	r18, r16
    142e:	b9 01       	movw	r22, r18
    1430:	a8 01       	movw	r20, r16
    1432:	ce 01       	movw	r24, r28
    1434:	41 96       	adiw	r24, 0x11	; 17
    1436:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    143a:	00 e0       	ldi	r16, 0x00	; 0
    143c:	10 e0       	ldi	r17, 0x00	; 0
    143e:	98 01       	movw	r18, r16
    1440:	40 e0       	ldi	r20, 0x00	; 0
    1442:	50 e0       	ldi	r21, 0x00	; 0
    1444:	60 e8       	ldi	r22, 0x80	; 128
    1446:	7f eb       	ldi	r23, 0xBF	; 191
    1448:	ce 01       	movw	r24, r28
    144a:	49 96       	adiw	r24, 0x19	; 25
    144c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    1450:	bc a2       	std	Y+36, r11	; 0x24
    1452:	ab a2       	std	Y+35, r10	; 0x23
    1454:	da a2       	std	Y+34, r13	; 0x22
    1456:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),z_matrix),QB_SIZE1);
    1458:	9e 01       	movw	r18, r28
    145a:	2f 5d       	subi	r18, 0xDF	; 223
    145c:	3f 4f       	sbci	r19, 0xFF	; 255
    145e:	ae 01       	movw	r20, r28
    1460:	4d 5d       	subi	r20, 0xDD	; 221
    1462:	5f 4f       	sbci	r21, 0xFF	; 255
    1464:	61 e0       	ldi	r22, 0x01	; 1
    1466:	70 e0       	ldi	r23, 0x00	; 0
    1468:	c7 01       	movw	r24, r14
    146a:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    146e:	ae 01       	movw	r20, r28
    1470:	4f 5f       	subi	r20, 0xFF	; 255
    1472:	5f 4f       	sbci	r21, 0xFF	; 255
    1474:	bc 01       	movw	r22, r24
    1476:	c7 01       	movw	r24, r14
    1478:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    147c:	41 e0       	ldi	r20, 0x01	; 1
    147e:	50 e0       	ldi	r21, 0x00	; 0
    1480:	bc 01       	movw	r22, r24
    1482:	c7 01       	movw	r24, r14
    1484:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1488:	a4 96       	adiw	r28, 0x24	; 36
    148a:	0f b6       	in	r0, 0x3f	; 63
    148c:	f8 94       	cli
    148e:	de bf       	out	0x3e, r29	; 62
    1490:	0f be       	out	0x3f, r0	; 63
    1492:	cd bf       	out	0x3d, r28	; 61
    1494:	df 91       	pop	r29
    1496:	cf 91       	pop	r28
    1498:	1f 91       	pop	r17
    149a:	0f 91       	pop	r16
    149c:	ff 90       	pop	r15
    149e:	ef 90       	pop	r14
    14a0:	df 90       	pop	r13
    14a2:	cf 90       	pop	r12
    14a4:	bf 90       	pop	r11
    14a6:	af 90       	pop	r10
    14a8:	08 95       	ret

000014aa <_ZN5Gates1HEii>:
int * Gates::H(int theta,int phi){
    14aa:	af 92       	push	r10
    14ac:	bf 92       	push	r11
    14ae:	cf 92       	push	r12
    14b0:	df 92       	push	r13
    14b2:	ef 92       	push	r14
    14b4:	ff 92       	push	r15
    14b6:	0f 93       	push	r16
    14b8:	1f 93       	push	r17
    14ba:	cf 93       	push	r28
    14bc:	df 93       	push	r29
    14be:	cd b7       	in	r28, 0x3d	; 61
    14c0:	de b7       	in	r29, 0x3e	; 62
    14c2:	a4 97       	sbiw	r28, 0x24	; 36
    14c4:	0f b6       	in	r0, 0x3f	; 63
    14c6:	f8 94       	cli
    14c8:	de bf       	out	0x3e, r29	; 62
    14ca:	0f be       	out	0x3f, r0	; 63
    14cc:	cd bf       	out	0x3d, r28	; 61
    14ce:	7c 01       	movw	r14, r24
    14d0:	5b 01       	movw	r10, r22
    14d2:	6a 01       	movw	r12, r20
	Complex h_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(1/sqrt(2),0),Complex(1/sqrt(2),0)},
													   {Complex(1/sqrt(2),0),Complex(-1/sqrt(2),0)}};
    14d4:	00 e0       	ldi	r16, 0x00	; 0
    14d6:	10 e0       	ldi	r17, 0x00	; 0
    14d8:	98 01       	movw	r18, r16
    14da:	43 ef       	ldi	r20, 0xF3	; 243
    14dc:	54 e0       	ldi	r21, 0x04	; 4
    14de:	65 e3       	ldi	r22, 0x35	; 53
    14e0:	7f e3       	ldi	r23, 0x3F	; 63
    14e2:	ce 01       	movw	r24, r28
    14e4:	01 96       	adiw	r24, 0x01	; 1
    14e6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    14ea:	00 e0       	ldi	r16, 0x00	; 0
    14ec:	10 e0       	ldi	r17, 0x00	; 0
    14ee:	98 01       	movw	r18, r16
    14f0:	43 ef       	ldi	r20, 0xF3	; 243
    14f2:	54 e0       	ldi	r21, 0x04	; 4
    14f4:	65 e3       	ldi	r22, 0x35	; 53
    14f6:	7f e3       	ldi	r23, 0x3F	; 63
    14f8:	ce 01       	movw	r24, r28
    14fa:	09 96       	adiw	r24, 0x09	; 9
    14fc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1500:	00 e0       	ldi	r16, 0x00	; 0
    1502:	10 e0       	ldi	r17, 0x00	; 0
    1504:	98 01       	movw	r18, r16
    1506:	43 ef       	ldi	r20, 0xF3	; 243
    1508:	54 e0       	ldi	r21, 0x04	; 4
    150a:	65 e3       	ldi	r22, 0x35	; 53
    150c:	7f e3       	ldi	r23, 0x3F	; 63
    150e:	ce 01       	movw	r24, r28
    1510:	41 96       	adiw	r24, 0x11	; 17
    1512:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1516:	00 e0       	ldi	r16, 0x00	; 0
    1518:	10 e0       	ldi	r17, 0x00	; 0
    151a:	98 01       	movw	r18, r16
    151c:	43 ef       	ldi	r20, 0xF3	; 243
    151e:	54 e0       	ldi	r21, 0x04	; 4
    1520:	65 e3       	ldi	r22, 0x35	; 53
    1522:	7f eb       	ldi	r23, 0xBF	; 191
    1524:	ce 01       	movw	r24, r28
    1526:	49 96       	adiw	r24, 0x19	; 25
    1528:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    152c:	bc a2       	std	Y+36, r11	; 0x24
    152e:	ab a2       	std	Y+35, r10	; 0x23
    1530:	da a2       	std	Y+34, r13	; 0x22
    1532:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),h_matrix),QB_SIZE1);
    1534:	9e 01       	movw	r18, r28
    1536:	2f 5d       	subi	r18, 0xDF	; 223
    1538:	3f 4f       	sbci	r19, 0xFF	; 255
    153a:	ae 01       	movw	r20, r28
    153c:	4d 5d       	subi	r20, 0xDD	; 221
    153e:	5f 4f       	sbci	r21, 0xFF	; 255
    1540:	61 e0       	ldi	r22, 0x01	; 1
    1542:	70 e0       	ldi	r23, 0x00	; 0
    1544:	c7 01       	movw	r24, r14
    1546:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    154a:	ae 01       	movw	r20, r28
    154c:	4f 5f       	subi	r20, 0xFF	; 255
    154e:	5f 4f       	sbci	r21, 0xFF	; 255
    1550:	bc 01       	movw	r22, r24
    1552:	c7 01       	movw	r24, r14
    1554:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    1558:	41 e0       	ldi	r20, 0x01	; 1
    155a:	50 e0       	ldi	r21, 0x00	; 0
    155c:	bc 01       	movw	r22, r24
    155e:	c7 01       	movw	r24, r14
    1560:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1564:	a4 96       	adiw	r28, 0x24	; 36
    1566:	0f b6       	in	r0, 0x3f	; 63
    1568:	f8 94       	cli
    156a:	de bf       	out	0x3e, r29	; 62
    156c:	0f be       	out	0x3f, r0	; 63
    156e:	cd bf       	out	0x3d, r28	; 61
    1570:	df 91       	pop	r29
    1572:	cf 91       	pop	r28
    1574:	1f 91       	pop	r17
    1576:	0f 91       	pop	r16
    1578:	ff 90       	pop	r15
    157a:	ef 90       	pop	r14
    157c:	df 90       	pop	r13
    157e:	cf 90       	pop	r12
    1580:	bf 90       	pop	r11
    1582:	af 90       	pop	r10
    1584:	08 95       	ret

00001586 <_ZN5Gates1SEii>:
int * Gates::S(int theta,int phi){
    1586:	af 92       	push	r10
    1588:	bf 92       	push	r11
    158a:	cf 92       	push	r12
    158c:	df 92       	push	r13
    158e:	ef 92       	push	r14
    1590:	ff 92       	push	r15
    1592:	0f 93       	push	r16
    1594:	1f 93       	push	r17
    1596:	cf 93       	push	r28
    1598:	df 93       	push	r29
    159a:	cd b7       	in	r28, 0x3d	; 61
    159c:	de b7       	in	r29, 0x3e	; 62
    159e:	a4 97       	sbiw	r28, 0x24	; 36
    15a0:	0f b6       	in	r0, 0x3f	; 63
    15a2:	f8 94       	cli
    15a4:	de bf       	out	0x3e, r29	; 62
    15a6:	0f be       	out	0x3f, r0	; 63
    15a8:	cd bf       	out	0x3d, r28	; 61
    15aa:	7c 01       	movw	r14, r24
    15ac:	5b 01       	movw	r10, r22
    15ae:	6a 01       	movw	r12, r20
	Complex s_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(1,0),Complex(0,0)},
													   {Complex(0,0),Complex(0,1)}};
    15b0:	00 e0       	ldi	r16, 0x00	; 0
    15b2:	10 e0       	ldi	r17, 0x00	; 0
    15b4:	98 01       	movw	r18, r16
    15b6:	40 e0       	ldi	r20, 0x00	; 0
    15b8:	50 e0       	ldi	r21, 0x00	; 0
    15ba:	60 e8       	ldi	r22, 0x80	; 128
    15bc:	7f e3       	ldi	r23, 0x3F	; 63
    15be:	ce 01       	movw	r24, r28
    15c0:	01 96       	adiw	r24, 0x01	; 1
    15c2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    15c6:	00 e0       	ldi	r16, 0x00	; 0
    15c8:	10 e0       	ldi	r17, 0x00	; 0
    15ca:	98 01       	movw	r18, r16
    15cc:	b9 01       	movw	r22, r18
    15ce:	a8 01       	movw	r20, r16
    15d0:	ce 01       	movw	r24, r28
    15d2:	09 96       	adiw	r24, 0x09	; 9
    15d4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    15d8:	00 e0       	ldi	r16, 0x00	; 0
    15da:	10 e0       	ldi	r17, 0x00	; 0
    15dc:	98 01       	movw	r18, r16
    15de:	b9 01       	movw	r22, r18
    15e0:	a8 01       	movw	r20, r16
    15e2:	ce 01       	movw	r24, r28
    15e4:	41 96       	adiw	r24, 0x11	; 17
    15e6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    15ea:	00 e0       	ldi	r16, 0x00	; 0
    15ec:	10 e0       	ldi	r17, 0x00	; 0
    15ee:	20 e8       	ldi	r18, 0x80	; 128
    15f0:	3f e3       	ldi	r19, 0x3F	; 63
    15f2:	40 e0       	ldi	r20, 0x00	; 0
    15f4:	50 e0       	ldi	r21, 0x00	; 0
    15f6:	ba 01       	movw	r22, r20
    15f8:	ce 01       	movw	r24, r28
    15fa:	49 96       	adiw	r24, 0x19	; 25
    15fc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    1600:	bc a2       	std	Y+36, r11	; 0x24
    1602:	ab a2       	std	Y+35, r10	; 0x23
    1604:	da a2       	std	Y+34, r13	; 0x22
    1606:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),s_matrix),QB_SIZE1);
    1608:	9e 01       	movw	r18, r28
    160a:	2f 5d       	subi	r18, 0xDF	; 223
    160c:	3f 4f       	sbci	r19, 0xFF	; 255
    160e:	ae 01       	movw	r20, r28
    1610:	4d 5d       	subi	r20, 0xDD	; 221
    1612:	5f 4f       	sbci	r21, 0xFF	; 255
    1614:	61 e0       	ldi	r22, 0x01	; 1
    1616:	70 e0       	ldi	r23, 0x00	; 0
    1618:	c7 01       	movw	r24, r14
    161a:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    161e:	ae 01       	movw	r20, r28
    1620:	4f 5f       	subi	r20, 0xFF	; 255
    1622:	5f 4f       	sbci	r21, 0xFF	; 255
    1624:	bc 01       	movw	r22, r24
    1626:	c7 01       	movw	r24, r14
    1628:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    162c:	41 e0       	ldi	r20, 0x01	; 1
    162e:	50 e0       	ldi	r21, 0x00	; 0
    1630:	bc 01       	movw	r22, r24
    1632:	c7 01       	movw	r24, r14
    1634:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1638:	a4 96       	adiw	r28, 0x24	; 36
    163a:	0f b6       	in	r0, 0x3f	; 63
    163c:	f8 94       	cli
    163e:	de bf       	out	0x3e, r29	; 62
    1640:	0f be       	out	0x3f, r0	; 63
    1642:	cd bf       	out	0x3d, r28	; 61
    1644:	df 91       	pop	r29
    1646:	cf 91       	pop	r28
    1648:	1f 91       	pop	r17
    164a:	0f 91       	pop	r16
    164c:	ff 90       	pop	r15
    164e:	ef 90       	pop	r14
    1650:	df 90       	pop	r13
    1652:	cf 90       	pop	r12
    1654:	bf 90       	pop	r11
    1656:	af 90       	pop	r10
    1658:	08 95       	ret

0000165a <_ZN5Gates1TEii>:
int * Gates::T(int theta,int phi){
    165a:	af 92       	push	r10
    165c:	bf 92       	push	r11
    165e:	cf 92       	push	r12
    1660:	df 92       	push	r13
    1662:	ef 92       	push	r14
    1664:	ff 92       	push	r15
    1666:	0f 93       	push	r16
    1668:	1f 93       	push	r17
    166a:	cf 93       	push	r28
    166c:	df 93       	push	r29
    166e:	cd b7       	in	r28, 0x3d	; 61
    1670:	de b7       	in	r29, 0x3e	; 62
    1672:	a4 97       	sbiw	r28, 0x24	; 36
    1674:	0f b6       	in	r0, 0x3f	; 63
    1676:	f8 94       	cli
    1678:	de bf       	out	0x3e, r29	; 62
    167a:	0f be       	out	0x3f, r0	; 63
    167c:	cd bf       	out	0x3d, r28	; 61
    167e:	7c 01       	movw	r14, r24
    1680:	5b 01       	movw	r10, r22
    1682:	6a 01       	movw	r12, r20
	Complex t_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(1,0),Complex(0,0)},
													   {Complex(0,0),Complex(1/sqrt(2),1/sqrt(2))}};
    1684:	00 e0       	ldi	r16, 0x00	; 0
    1686:	10 e0       	ldi	r17, 0x00	; 0
    1688:	98 01       	movw	r18, r16
    168a:	40 e0       	ldi	r20, 0x00	; 0
    168c:	50 e0       	ldi	r21, 0x00	; 0
    168e:	60 e8       	ldi	r22, 0x80	; 128
    1690:	7f e3       	ldi	r23, 0x3F	; 63
    1692:	ce 01       	movw	r24, r28
    1694:	01 96       	adiw	r24, 0x01	; 1
    1696:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    169a:	00 e0       	ldi	r16, 0x00	; 0
    169c:	10 e0       	ldi	r17, 0x00	; 0
    169e:	98 01       	movw	r18, r16
    16a0:	b9 01       	movw	r22, r18
    16a2:	a8 01       	movw	r20, r16
    16a4:	ce 01       	movw	r24, r28
    16a6:	09 96       	adiw	r24, 0x09	; 9
    16a8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    16ac:	00 e0       	ldi	r16, 0x00	; 0
    16ae:	10 e0       	ldi	r17, 0x00	; 0
    16b0:	98 01       	movw	r18, r16
    16b2:	b9 01       	movw	r22, r18
    16b4:	a8 01       	movw	r20, r16
    16b6:	ce 01       	movw	r24, r28
    16b8:	41 96       	adiw	r24, 0x11	; 17
    16ba:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    16be:	03 ef       	ldi	r16, 0xF3	; 243
    16c0:	14 e0       	ldi	r17, 0x04	; 4
    16c2:	25 e3       	ldi	r18, 0x35	; 53
    16c4:	3f e3       	ldi	r19, 0x3F	; 63
    16c6:	b9 01       	movw	r22, r18
    16c8:	a8 01       	movw	r20, r16
    16ca:	ce 01       	movw	r24, r28
    16cc:	49 96       	adiw	r24, 0x19	; 25
    16ce:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    16d2:	bc a2       	std	Y+36, r11	; 0x24
    16d4:	ab a2       	std	Y+35, r10	; 0x23
    16d6:	da a2       	std	Y+34, r13	; 0x22
    16d8:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),t_matrix),QB_SIZE1);
    16da:	9e 01       	movw	r18, r28
    16dc:	2f 5d       	subi	r18, 0xDF	; 223
    16de:	3f 4f       	sbci	r19, 0xFF	; 255
    16e0:	ae 01       	movw	r20, r28
    16e2:	4d 5d       	subi	r20, 0xDD	; 221
    16e4:	5f 4f       	sbci	r21, 0xFF	; 255
    16e6:	61 e0       	ldi	r22, 0x01	; 1
    16e8:	70 e0       	ldi	r23, 0x00	; 0
    16ea:	c7 01       	movw	r24, r14
    16ec:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    16f0:	ae 01       	movw	r20, r28
    16f2:	4f 5f       	subi	r20, 0xFF	; 255
    16f4:	5f 4f       	sbci	r21, 0xFF	; 255
    16f6:	bc 01       	movw	r22, r24
    16f8:	c7 01       	movw	r24, r14
    16fa:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    16fe:	41 e0       	ldi	r20, 0x01	; 1
    1700:	50 e0       	ldi	r21, 0x00	; 0
    1702:	bc 01       	movw	r22, r24
    1704:	c7 01       	movw	r24, r14
    1706:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    170a:	a4 96       	adiw	r28, 0x24	; 36
    170c:	0f b6       	in	r0, 0x3f	; 63
    170e:	f8 94       	cli
    1710:	de bf       	out	0x3e, r29	; 62
    1712:	0f be       	out	0x3f, r0	; 63
    1714:	cd bf       	out	0x3d, r28	; 61
    1716:	df 91       	pop	r29
    1718:	cf 91       	pop	r28
    171a:	1f 91       	pop	r17
    171c:	0f 91       	pop	r16
    171e:	ff 90       	pop	r15
    1720:	ef 90       	pop	r14
    1722:	df 90       	pop	r13
    1724:	cf 90       	pop	r12
    1726:	bf 90       	pop	r11
    1728:	af 90       	pop	r10
    172a:	08 95       	ret

0000172c <_ZN5Gates3CNOEiiii>:

int * Gates::CNO(int theta1, int phi1, int theta2,int phi2){
    172c:	6f 92       	push	r6
    172e:	7f 92       	push	r7
    1730:	8f 92       	push	r8
    1732:	9f 92       	push	r9
    1734:	af 92       	push	r10
    1736:	bf 92       	push	r11
    1738:	cf 92       	push	r12
    173a:	df 92       	push	r13
    173c:	ef 92       	push	r14
    173e:	ff 92       	push	r15
    1740:	0f 93       	push	r16
    1742:	1f 93       	push	r17
    1744:	cf 93       	push	r28
    1746:	df 93       	push	r29
    1748:	cd b7       	in	r28, 0x3d	; 61
    174a:	de b7       	in	r29, 0x3e	; 62
    174c:	c8 58       	subi	r28, 0x88	; 136
    174e:	d1 09       	sbc	r29, r1
    1750:	0f b6       	in	r0, 0x3f	; 63
    1752:	f8 94       	cli
    1754:	de bf       	out	0x3e, r29	; 62
    1756:	0f be       	out	0x3f, r0	; 63
    1758:	cd bf       	out	0x3d, r28	; 61
    175a:	7c 01       	movw	r14, r24
    175c:	3b 01       	movw	r6, r22
    175e:	5a 01       	movw	r10, r20
    1760:	49 01       	movw	r8, r18
    1762:	68 01       	movw	r12, r16
	Complex cno_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)}};
    1764:	00 e0       	ldi	r16, 0x00	; 0
    1766:	10 e0       	ldi	r17, 0x00	; 0
    1768:	98 01       	movw	r18, r16
    176a:	40 e0       	ldi	r20, 0x00	; 0
    176c:	50 e0       	ldi	r21, 0x00	; 0
    176e:	60 e8       	ldi	r22, 0x80	; 128
    1770:	7f e3       	ldi	r23, 0x3F	; 63
    1772:	ce 01       	movw	r24, r28
    1774:	01 96       	adiw	r24, 0x01	; 1
    1776:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    177a:	00 e0       	ldi	r16, 0x00	; 0
    177c:	10 e0       	ldi	r17, 0x00	; 0
    177e:	98 01       	movw	r18, r16
    1780:	b9 01       	movw	r22, r18
    1782:	a8 01       	movw	r20, r16
    1784:	ce 01       	movw	r24, r28
    1786:	09 96       	adiw	r24, 0x09	; 9
    1788:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    178c:	00 e0       	ldi	r16, 0x00	; 0
    178e:	10 e0       	ldi	r17, 0x00	; 0
    1790:	98 01       	movw	r18, r16
    1792:	b9 01       	movw	r22, r18
    1794:	a8 01       	movw	r20, r16
    1796:	ce 01       	movw	r24, r28
    1798:	41 96       	adiw	r24, 0x11	; 17
    179a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    179e:	00 e0       	ldi	r16, 0x00	; 0
    17a0:	10 e0       	ldi	r17, 0x00	; 0
    17a2:	98 01       	movw	r18, r16
    17a4:	b9 01       	movw	r22, r18
    17a6:	a8 01       	movw	r20, r16
    17a8:	ce 01       	movw	r24, r28
    17aa:	49 96       	adiw	r24, 0x19	; 25
    17ac:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    17b0:	00 e0       	ldi	r16, 0x00	; 0
    17b2:	10 e0       	ldi	r17, 0x00	; 0
    17b4:	98 01       	movw	r18, r16
    17b6:	b9 01       	movw	r22, r18
    17b8:	a8 01       	movw	r20, r16
    17ba:	ce 01       	movw	r24, r28
    17bc:	81 96       	adiw	r24, 0x21	; 33
    17be:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    17c2:	00 e0       	ldi	r16, 0x00	; 0
    17c4:	10 e0       	ldi	r17, 0x00	; 0
    17c6:	98 01       	movw	r18, r16
    17c8:	40 e0       	ldi	r20, 0x00	; 0
    17ca:	50 e0       	ldi	r21, 0x00	; 0
    17cc:	60 e8       	ldi	r22, 0x80	; 128
    17ce:	7f e3       	ldi	r23, 0x3F	; 63
    17d0:	ce 01       	movw	r24, r28
    17d2:	89 96       	adiw	r24, 0x29	; 41
    17d4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    17d8:	00 e0       	ldi	r16, 0x00	; 0
    17da:	10 e0       	ldi	r17, 0x00	; 0
    17dc:	98 01       	movw	r18, r16
    17de:	b9 01       	movw	r22, r18
    17e0:	a8 01       	movw	r20, r16
    17e2:	ce 01       	movw	r24, r28
    17e4:	c1 96       	adiw	r24, 0x31	; 49
    17e6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    17ea:	00 e0       	ldi	r16, 0x00	; 0
    17ec:	10 e0       	ldi	r17, 0x00	; 0
    17ee:	98 01       	movw	r18, r16
    17f0:	b9 01       	movw	r22, r18
    17f2:	a8 01       	movw	r20, r16
    17f4:	ce 01       	movw	r24, r28
    17f6:	c9 96       	adiw	r24, 0x39	; 57
    17f8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    17fc:	00 e0       	ldi	r16, 0x00	; 0
    17fe:	10 e0       	ldi	r17, 0x00	; 0
    1800:	98 01       	movw	r18, r16
    1802:	b9 01       	movw	r22, r18
    1804:	a8 01       	movw	r20, r16
    1806:	ce 01       	movw	r24, r28
    1808:	8f 5b       	subi	r24, 0xBF	; 191
    180a:	9f 4f       	sbci	r25, 0xFF	; 255
    180c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1810:	00 e0       	ldi	r16, 0x00	; 0
    1812:	10 e0       	ldi	r17, 0x00	; 0
    1814:	98 01       	movw	r18, r16
    1816:	b9 01       	movw	r22, r18
    1818:	a8 01       	movw	r20, r16
    181a:	ce 01       	movw	r24, r28
    181c:	87 5b       	subi	r24, 0xB7	; 183
    181e:	9f 4f       	sbci	r25, 0xFF	; 255
    1820:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1824:	00 e0       	ldi	r16, 0x00	; 0
    1826:	10 e0       	ldi	r17, 0x00	; 0
    1828:	98 01       	movw	r18, r16
    182a:	b9 01       	movw	r22, r18
    182c:	a8 01       	movw	r20, r16
    182e:	ce 01       	movw	r24, r28
    1830:	8f 5a       	subi	r24, 0xAF	; 175
    1832:	9f 4f       	sbci	r25, 0xFF	; 255
    1834:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1838:	00 e0       	ldi	r16, 0x00	; 0
    183a:	10 e0       	ldi	r17, 0x00	; 0
    183c:	98 01       	movw	r18, r16
    183e:	40 e0       	ldi	r20, 0x00	; 0
    1840:	50 e0       	ldi	r21, 0x00	; 0
    1842:	60 e8       	ldi	r22, 0x80	; 128
    1844:	7f e3       	ldi	r23, 0x3F	; 63
    1846:	ce 01       	movw	r24, r28
    1848:	87 5a       	subi	r24, 0xA7	; 167
    184a:	9f 4f       	sbci	r25, 0xFF	; 255
    184c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1850:	00 e0       	ldi	r16, 0x00	; 0
    1852:	10 e0       	ldi	r17, 0x00	; 0
    1854:	98 01       	movw	r18, r16
    1856:	b9 01       	movw	r22, r18
    1858:	a8 01       	movw	r20, r16
    185a:	ce 01       	movw	r24, r28
    185c:	8f 59       	subi	r24, 0x9F	; 159
    185e:	9f 4f       	sbci	r25, 0xFF	; 255
    1860:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1864:	00 e0       	ldi	r16, 0x00	; 0
    1866:	10 e0       	ldi	r17, 0x00	; 0
    1868:	98 01       	movw	r18, r16
    186a:	b9 01       	movw	r22, r18
    186c:	a8 01       	movw	r20, r16
    186e:	ce 01       	movw	r24, r28
    1870:	87 59       	subi	r24, 0x97	; 151
    1872:	9f 4f       	sbci	r25, 0xFF	; 255
    1874:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1878:	00 e0       	ldi	r16, 0x00	; 0
    187a:	10 e0       	ldi	r17, 0x00	; 0
    187c:	98 01       	movw	r18, r16
    187e:	40 e0       	ldi	r20, 0x00	; 0
    1880:	50 e0       	ldi	r21, 0x00	; 0
    1882:	60 e8       	ldi	r22, 0x80	; 128
    1884:	7f e3       	ldi	r23, 0x3F	; 63
    1886:	ce 01       	movw	r24, r28
    1888:	8f 58       	subi	r24, 0x8F	; 143
    188a:	9f 4f       	sbci	r25, 0xFF	; 255
    188c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1890:	00 e0       	ldi	r16, 0x00	; 0
    1892:	10 e0       	ldi	r17, 0x00	; 0
    1894:	98 01       	movw	r18, r16
    1896:	b9 01       	movw	r22, r18
    1898:	a8 01       	movw	r20, r16
    189a:	ce 01       	movw	r24, r28
    189c:	87 58       	subi	r24, 0x87	; 135
    189e:	9f 4f       	sbci	r25, 0xFF	; 255
    18a0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};						
    18a4:	cb 57       	subi	r28, 0x7B	; 123
    18a6:	df 4f       	sbci	r29, 0xFF	; 255
    18a8:	79 82       	std	Y+1, r7	; 0x01
    18aa:	68 82       	st	Y, r6
    18ac:	c5 58       	subi	r28, 0x85	; 133
    18ae:	d0 40       	sbci	r29, 0x00	; 0
    18b0:	c9 57       	subi	r28, 0x79	; 121
    18b2:	df 4f       	sbci	r29, 0xFF	; 255
    18b4:	99 82       	std	Y+1, r9	; 0x01
    18b6:	88 82       	st	Y, r8
    18b8:	c7 58       	subi	r28, 0x87	; 135
    18ba:	d0 40       	sbci	r29, 0x00	; 0
    18bc:	cf 57       	subi	r28, 0x7F	; 127
    18be:	df 4f       	sbci	r29, 0xFF	; 255
    18c0:	b9 82       	std	Y+1, r11	; 0x01
    18c2:	a8 82       	st	Y, r10
    18c4:	c1 58       	subi	r28, 0x81	; 129
    18c6:	d0 40       	sbci	r29, 0x00	; 0
    18c8:	cd 57       	subi	r28, 0x7D	; 125
    18ca:	df 4f       	sbci	r29, 0xFF	; 255
    18cc:	d9 82       	std	Y+1, r13	; 0x01
    18ce:	c8 82       	st	Y, r12
    18d0:	c3 58       	subi	r28, 0x83	; 131
    18d2:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),cno_matrix),QB_SIZE2);
    18d4:	9e 01       	movw	r18, r28
    18d6:	2f 57       	subi	r18, 0x7F	; 127
    18d8:	3f 4f       	sbci	r19, 0xFF	; 255
    18da:	ae 01       	movw	r20, r28
    18dc:	4b 57       	subi	r20, 0x7B	; 123
    18de:	5f 4f       	sbci	r21, 0xFF	; 255
    18e0:	62 e0       	ldi	r22, 0x02	; 2
    18e2:	70 e0       	ldi	r23, 0x00	; 0
    18e4:	c7 01       	movw	r24, r14
    18e6:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    18ea:	ae 01       	movw	r20, r28
    18ec:	4f 5f       	subi	r20, 0xFF	; 255
    18ee:	5f 4f       	sbci	r21, 0xFF	; 255
    18f0:	bc 01       	movw	r22, r24
    18f2:	c7 01       	movw	r24, r14
    18f4:	0e 94 cd 07 	call	0xf9a	; 0xf9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    18f8:	42 e0       	ldi	r20, 0x02	; 2
    18fa:	50 e0       	ldi	r21, 0x00	; 0
    18fc:	bc 01       	movw	r22, r24
    18fe:	c7 01       	movw	r24, r14
    1900:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1904:	c8 57       	subi	r28, 0x78	; 120
    1906:	df 4f       	sbci	r29, 0xFF	; 255
    1908:	0f b6       	in	r0, 0x3f	; 63
    190a:	f8 94       	cli
    190c:	de bf       	out	0x3e, r29	; 62
    190e:	0f be       	out	0x3f, r0	; 63
    1910:	cd bf       	out	0x3d, r28	; 61
    1912:	df 91       	pop	r29
    1914:	cf 91       	pop	r28
    1916:	1f 91       	pop	r17
    1918:	0f 91       	pop	r16
    191a:	ff 90       	pop	r15
    191c:	ef 90       	pop	r14
    191e:	df 90       	pop	r13
    1920:	cf 90       	pop	r12
    1922:	bf 90       	pop	r11
    1924:	af 90       	pop	r10
    1926:	9f 90       	pop	r9
    1928:	8f 90       	pop	r8
    192a:	7f 90       	pop	r7
    192c:	6f 90       	pop	r6
    192e:	08 95       	ret

00001930 <_ZN5Gates3CSIEiiii>:
int * Gates::CSI(int theta1, int phi1, int theta2,int phi2){
    1930:	6f 92       	push	r6
    1932:	7f 92       	push	r7
    1934:	8f 92       	push	r8
    1936:	9f 92       	push	r9
    1938:	af 92       	push	r10
    193a:	bf 92       	push	r11
    193c:	cf 92       	push	r12
    193e:	df 92       	push	r13
    1940:	ef 92       	push	r14
    1942:	ff 92       	push	r15
    1944:	0f 93       	push	r16
    1946:	1f 93       	push	r17
    1948:	cf 93       	push	r28
    194a:	df 93       	push	r29
    194c:	cd b7       	in	r28, 0x3d	; 61
    194e:	de b7       	in	r29, 0x3e	; 62
    1950:	c8 58       	subi	r28, 0x88	; 136
    1952:	d1 09       	sbc	r29, r1
    1954:	0f b6       	in	r0, 0x3f	; 63
    1956:	f8 94       	cli
    1958:	de bf       	out	0x3e, r29	; 62
    195a:	0f be       	out	0x3f, r0	; 63
    195c:	cd bf       	out	0x3d, r28	; 61
    195e:	7c 01       	movw	r14, r24
    1960:	3b 01       	movw	r6, r22
    1962:	5a 01       	movw	r10, r20
    1964:	49 01       	movw	r8, r18
    1966:	68 01       	movw	r12, r16
	Complex csi_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(-1,0)}};
    1968:	00 e0       	ldi	r16, 0x00	; 0
    196a:	10 e0       	ldi	r17, 0x00	; 0
    196c:	98 01       	movw	r18, r16
    196e:	40 e0       	ldi	r20, 0x00	; 0
    1970:	50 e0       	ldi	r21, 0x00	; 0
    1972:	60 e8       	ldi	r22, 0x80	; 128
    1974:	7f e3       	ldi	r23, 0x3F	; 63
    1976:	ce 01       	movw	r24, r28
    1978:	01 96       	adiw	r24, 0x01	; 1
    197a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    197e:	00 e0       	ldi	r16, 0x00	; 0
    1980:	10 e0       	ldi	r17, 0x00	; 0
    1982:	98 01       	movw	r18, r16
    1984:	b9 01       	movw	r22, r18
    1986:	a8 01       	movw	r20, r16
    1988:	ce 01       	movw	r24, r28
    198a:	09 96       	adiw	r24, 0x09	; 9
    198c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1990:	00 e0       	ldi	r16, 0x00	; 0
    1992:	10 e0       	ldi	r17, 0x00	; 0
    1994:	98 01       	movw	r18, r16
    1996:	b9 01       	movw	r22, r18
    1998:	a8 01       	movw	r20, r16
    199a:	ce 01       	movw	r24, r28
    199c:	41 96       	adiw	r24, 0x11	; 17
    199e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    19a2:	00 e0       	ldi	r16, 0x00	; 0
    19a4:	10 e0       	ldi	r17, 0x00	; 0
    19a6:	98 01       	movw	r18, r16
    19a8:	b9 01       	movw	r22, r18
    19aa:	a8 01       	movw	r20, r16
    19ac:	ce 01       	movw	r24, r28
    19ae:	49 96       	adiw	r24, 0x19	; 25
    19b0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    19b4:	00 e0       	ldi	r16, 0x00	; 0
    19b6:	10 e0       	ldi	r17, 0x00	; 0
    19b8:	98 01       	movw	r18, r16
    19ba:	b9 01       	movw	r22, r18
    19bc:	a8 01       	movw	r20, r16
    19be:	ce 01       	movw	r24, r28
    19c0:	81 96       	adiw	r24, 0x21	; 33
    19c2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    19c6:	00 e0       	ldi	r16, 0x00	; 0
    19c8:	10 e0       	ldi	r17, 0x00	; 0
    19ca:	98 01       	movw	r18, r16
    19cc:	40 e0       	ldi	r20, 0x00	; 0
    19ce:	50 e0       	ldi	r21, 0x00	; 0
    19d0:	60 e8       	ldi	r22, 0x80	; 128
    19d2:	7f e3       	ldi	r23, 0x3F	; 63
    19d4:	ce 01       	movw	r24, r28
    19d6:	89 96       	adiw	r24, 0x29	; 41
    19d8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    19dc:	00 e0       	ldi	r16, 0x00	; 0
    19de:	10 e0       	ldi	r17, 0x00	; 0
    19e0:	98 01       	movw	r18, r16
    19e2:	b9 01       	movw	r22, r18
    19e4:	a8 01       	movw	r20, r16
    19e6:	ce 01       	movw	r24, r28
    19e8:	c1 96       	adiw	r24, 0x31	; 49
    19ea:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    19ee:	00 e0       	ldi	r16, 0x00	; 0
    19f0:	10 e0       	ldi	r17, 0x00	; 0
    19f2:	98 01       	movw	r18, r16
    19f4:	b9 01       	movw	r22, r18
    19f6:	a8 01       	movw	r20, r16
    19f8:	ce 01       	movw	r24, r28
    19fa:	c9 96       	adiw	r24, 0x39	; 57
    19fc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a00:	00 e0       	ldi	r16, 0x00	; 0
    1a02:	10 e0       	ldi	r17, 0x00	; 0
    1a04:	98 01       	movw	r18, r16
    1a06:	b9 01       	movw	r22, r18
    1a08:	a8 01       	movw	r20, r16
    1a0a:	ce 01       	movw	r24, r28
    1a0c:	8f 5b       	subi	r24, 0xBF	; 191
    1a0e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a10:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a14:	00 e0       	ldi	r16, 0x00	; 0
    1a16:	10 e0       	ldi	r17, 0x00	; 0
    1a18:	98 01       	movw	r18, r16
    1a1a:	b9 01       	movw	r22, r18
    1a1c:	a8 01       	movw	r20, r16
    1a1e:	ce 01       	movw	r24, r28
    1a20:	87 5b       	subi	r24, 0xB7	; 183
    1a22:	9f 4f       	sbci	r25, 0xFF	; 255
    1a24:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a28:	00 e0       	ldi	r16, 0x00	; 0
    1a2a:	10 e0       	ldi	r17, 0x00	; 0
    1a2c:	98 01       	movw	r18, r16
    1a2e:	40 e0       	ldi	r20, 0x00	; 0
    1a30:	50 e0       	ldi	r21, 0x00	; 0
    1a32:	60 e8       	ldi	r22, 0x80	; 128
    1a34:	7f e3       	ldi	r23, 0x3F	; 63
    1a36:	ce 01       	movw	r24, r28
    1a38:	8f 5a       	subi	r24, 0xAF	; 175
    1a3a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a3c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a40:	00 e0       	ldi	r16, 0x00	; 0
    1a42:	10 e0       	ldi	r17, 0x00	; 0
    1a44:	98 01       	movw	r18, r16
    1a46:	b9 01       	movw	r22, r18
    1a48:	a8 01       	movw	r20, r16
    1a4a:	ce 01       	movw	r24, r28
    1a4c:	87 5a       	subi	r24, 0xA7	; 167
    1a4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a50:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a54:	00 e0       	ldi	r16, 0x00	; 0
    1a56:	10 e0       	ldi	r17, 0x00	; 0
    1a58:	98 01       	movw	r18, r16
    1a5a:	b9 01       	movw	r22, r18
    1a5c:	a8 01       	movw	r20, r16
    1a5e:	ce 01       	movw	r24, r28
    1a60:	8f 59       	subi	r24, 0x9F	; 159
    1a62:	9f 4f       	sbci	r25, 0xFF	; 255
    1a64:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a68:	00 e0       	ldi	r16, 0x00	; 0
    1a6a:	10 e0       	ldi	r17, 0x00	; 0
    1a6c:	98 01       	movw	r18, r16
    1a6e:	b9 01       	movw	r22, r18
    1a70:	a8 01       	movw	r20, r16
    1a72:	ce 01       	movw	r24, r28
    1a74:	87 59       	subi	r24, 0x97	; 151
    1a76:	9f 4f       	sbci	r25, 0xFF	; 255
    1a78:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a7c:	00 e0       	ldi	r16, 0x00	; 0
    1a7e:	10 e0       	ldi	r17, 0x00	; 0
    1a80:	98 01       	movw	r18, r16
    1a82:	b9 01       	movw	r22, r18
    1a84:	a8 01       	movw	r20, r16
    1a86:	ce 01       	movw	r24, r28
    1a88:	8f 58       	subi	r24, 0x8F	; 143
    1a8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a8c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1a90:	00 e0       	ldi	r16, 0x00	; 0
    1a92:	10 e0       	ldi	r17, 0x00	; 0
    1a94:	98 01       	movw	r18, r16
    1a96:	40 e0       	ldi	r20, 0x00	; 0
    1a98:	50 e0       	ldi	r21, 0x00	; 0
    1a9a:	60 e8       	ldi	r22, 0x80	; 128
    1a9c:	7f eb       	ldi	r23, 0xBF	; 191
    1a9e:	ce 01       	movw	r24, r28
    1aa0:	87 58       	subi	r24, 0x87	; 135
    1aa2:	9f 4f       	sbci	r25, 0xFF	; 255
    1aa4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    1aa8:	cb 57       	subi	r28, 0x7B	; 123
    1aaa:	df 4f       	sbci	r29, 0xFF	; 255
    1aac:	79 82       	std	Y+1, r7	; 0x01
    1aae:	68 82       	st	Y, r6
    1ab0:	c5 58       	subi	r28, 0x85	; 133
    1ab2:	d0 40       	sbci	r29, 0x00	; 0
    1ab4:	c9 57       	subi	r28, 0x79	; 121
    1ab6:	df 4f       	sbci	r29, 0xFF	; 255
    1ab8:	99 82       	std	Y+1, r9	; 0x01
    1aba:	88 82       	st	Y, r8
    1abc:	c7 58       	subi	r28, 0x87	; 135
    1abe:	d0 40       	sbci	r29, 0x00	; 0
    1ac0:	cf 57       	subi	r28, 0x7F	; 127
    1ac2:	df 4f       	sbci	r29, 0xFF	; 255
    1ac4:	b9 82       	std	Y+1, r11	; 0x01
    1ac6:	a8 82       	st	Y, r10
    1ac8:	c1 58       	subi	r28, 0x81	; 129
    1aca:	d0 40       	sbci	r29, 0x00	; 0
    1acc:	cd 57       	subi	r28, 0x7D	; 125
    1ace:	df 4f       	sbci	r29, 0xFF	; 255
    1ad0:	d9 82       	std	Y+1, r13	; 0x01
    1ad2:	c8 82       	st	Y, r12
    1ad4:	c3 58       	subi	r28, 0x83	; 131
    1ad6:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),csi_matrix),QB_SIZE2);
    1ad8:	9e 01       	movw	r18, r28
    1ada:	2f 57       	subi	r18, 0x7F	; 127
    1adc:	3f 4f       	sbci	r19, 0xFF	; 255
    1ade:	ae 01       	movw	r20, r28
    1ae0:	4b 57       	subi	r20, 0x7B	; 123
    1ae2:	5f 4f       	sbci	r21, 0xFF	; 255
    1ae4:	62 e0       	ldi	r22, 0x02	; 2
    1ae6:	70 e0       	ldi	r23, 0x00	; 0
    1ae8:	c7 01       	movw	r24, r14
    1aea:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    1aee:	ae 01       	movw	r20, r28
    1af0:	4f 5f       	subi	r20, 0xFF	; 255
    1af2:	5f 4f       	sbci	r21, 0xFF	; 255
    1af4:	bc 01       	movw	r22, r24
    1af6:	c7 01       	movw	r24, r14
    1af8:	0e 94 cd 07 	call	0xf9a	; 0xf9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    1afc:	42 e0       	ldi	r20, 0x02	; 2
    1afe:	50 e0       	ldi	r21, 0x00	; 0
    1b00:	bc 01       	movw	r22, r24
    1b02:	c7 01       	movw	r24, r14
    1b04:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1b08:	c8 57       	subi	r28, 0x78	; 120
    1b0a:	df 4f       	sbci	r29, 0xFF	; 255
    1b0c:	0f b6       	in	r0, 0x3f	; 63
    1b0e:	f8 94       	cli
    1b10:	de bf       	out	0x3e, r29	; 62
    1b12:	0f be       	out	0x3f, r0	; 63
    1b14:	cd bf       	out	0x3d, r28	; 61
    1b16:	df 91       	pop	r29
    1b18:	cf 91       	pop	r28
    1b1a:	1f 91       	pop	r17
    1b1c:	0f 91       	pop	r16
    1b1e:	ff 90       	pop	r15
    1b20:	ef 90       	pop	r14
    1b22:	df 90       	pop	r13
    1b24:	cf 90       	pop	r12
    1b26:	bf 90       	pop	r11
    1b28:	af 90       	pop	r10
    1b2a:	9f 90       	pop	r9
    1b2c:	8f 90       	pop	r8
    1b2e:	7f 90       	pop	r7
    1b30:	6f 90       	pop	r6
    1b32:	08 95       	ret

00001b34 <_ZN5Gates3SWAEiiii>:
int * Gates::SWA(int theta1, int phi1, int theta2,int phi2){
    1b34:	6f 92       	push	r6
    1b36:	7f 92       	push	r7
    1b38:	8f 92       	push	r8
    1b3a:	9f 92       	push	r9
    1b3c:	af 92       	push	r10
    1b3e:	bf 92       	push	r11
    1b40:	cf 92       	push	r12
    1b42:	df 92       	push	r13
    1b44:	ef 92       	push	r14
    1b46:	ff 92       	push	r15
    1b48:	0f 93       	push	r16
    1b4a:	1f 93       	push	r17
    1b4c:	cf 93       	push	r28
    1b4e:	df 93       	push	r29
    1b50:	cd b7       	in	r28, 0x3d	; 61
    1b52:	de b7       	in	r29, 0x3e	; 62
    1b54:	c8 58       	subi	r28, 0x88	; 136
    1b56:	d1 09       	sbc	r29, r1
    1b58:	0f b6       	in	r0, 0x3f	; 63
    1b5a:	f8 94       	cli
    1b5c:	de bf       	out	0x3e, r29	; 62
    1b5e:	0f be       	out	0x3f, r0	; 63
    1b60:	cd bf       	out	0x3d, r28	; 61
    1b62:	7c 01       	movw	r14, r24
    1b64:	3b 01       	movw	r6, r22
    1b66:	5a 01       	movw	r10, r20
    1b68:	49 01       	movw	r8, r18
    1b6a:	68 01       	movw	r12, r16
	Complex swa_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
													     {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)}};
    1b6c:	00 e0       	ldi	r16, 0x00	; 0
    1b6e:	10 e0       	ldi	r17, 0x00	; 0
    1b70:	98 01       	movw	r18, r16
    1b72:	40 e0       	ldi	r20, 0x00	; 0
    1b74:	50 e0       	ldi	r21, 0x00	; 0
    1b76:	60 e8       	ldi	r22, 0x80	; 128
    1b78:	7f e3       	ldi	r23, 0x3F	; 63
    1b7a:	ce 01       	movw	r24, r28
    1b7c:	01 96       	adiw	r24, 0x01	; 1
    1b7e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1b82:	00 e0       	ldi	r16, 0x00	; 0
    1b84:	10 e0       	ldi	r17, 0x00	; 0
    1b86:	98 01       	movw	r18, r16
    1b88:	b9 01       	movw	r22, r18
    1b8a:	a8 01       	movw	r20, r16
    1b8c:	ce 01       	movw	r24, r28
    1b8e:	09 96       	adiw	r24, 0x09	; 9
    1b90:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1b94:	00 e0       	ldi	r16, 0x00	; 0
    1b96:	10 e0       	ldi	r17, 0x00	; 0
    1b98:	98 01       	movw	r18, r16
    1b9a:	b9 01       	movw	r22, r18
    1b9c:	a8 01       	movw	r20, r16
    1b9e:	ce 01       	movw	r24, r28
    1ba0:	41 96       	adiw	r24, 0x11	; 17
    1ba2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1ba6:	00 e0       	ldi	r16, 0x00	; 0
    1ba8:	10 e0       	ldi	r17, 0x00	; 0
    1baa:	98 01       	movw	r18, r16
    1bac:	b9 01       	movw	r22, r18
    1bae:	a8 01       	movw	r20, r16
    1bb0:	ce 01       	movw	r24, r28
    1bb2:	49 96       	adiw	r24, 0x19	; 25
    1bb4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1bb8:	00 e0       	ldi	r16, 0x00	; 0
    1bba:	10 e0       	ldi	r17, 0x00	; 0
    1bbc:	98 01       	movw	r18, r16
    1bbe:	b9 01       	movw	r22, r18
    1bc0:	a8 01       	movw	r20, r16
    1bc2:	ce 01       	movw	r24, r28
    1bc4:	81 96       	adiw	r24, 0x21	; 33
    1bc6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1bca:	00 e0       	ldi	r16, 0x00	; 0
    1bcc:	10 e0       	ldi	r17, 0x00	; 0
    1bce:	98 01       	movw	r18, r16
    1bd0:	b9 01       	movw	r22, r18
    1bd2:	a8 01       	movw	r20, r16
    1bd4:	ce 01       	movw	r24, r28
    1bd6:	89 96       	adiw	r24, 0x29	; 41
    1bd8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1bdc:	00 e0       	ldi	r16, 0x00	; 0
    1bde:	10 e0       	ldi	r17, 0x00	; 0
    1be0:	98 01       	movw	r18, r16
    1be2:	40 e0       	ldi	r20, 0x00	; 0
    1be4:	50 e0       	ldi	r21, 0x00	; 0
    1be6:	60 e8       	ldi	r22, 0x80	; 128
    1be8:	7f e3       	ldi	r23, 0x3F	; 63
    1bea:	ce 01       	movw	r24, r28
    1bec:	c1 96       	adiw	r24, 0x31	; 49
    1bee:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1bf2:	00 e0       	ldi	r16, 0x00	; 0
    1bf4:	10 e0       	ldi	r17, 0x00	; 0
    1bf6:	98 01       	movw	r18, r16
    1bf8:	b9 01       	movw	r22, r18
    1bfa:	a8 01       	movw	r20, r16
    1bfc:	ce 01       	movw	r24, r28
    1bfe:	c9 96       	adiw	r24, 0x39	; 57
    1c00:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c04:	00 e0       	ldi	r16, 0x00	; 0
    1c06:	10 e0       	ldi	r17, 0x00	; 0
    1c08:	98 01       	movw	r18, r16
    1c0a:	b9 01       	movw	r22, r18
    1c0c:	a8 01       	movw	r20, r16
    1c0e:	ce 01       	movw	r24, r28
    1c10:	8f 5b       	subi	r24, 0xBF	; 191
    1c12:	9f 4f       	sbci	r25, 0xFF	; 255
    1c14:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c18:	00 e0       	ldi	r16, 0x00	; 0
    1c1a:	10 e0       	ldi	r17, 0x00	; 0
    1c1c:	98 01       	movw	r18, r16
    1c1e:	40 e0       	ldi	r20, 0x00	; 0
    1c20:	50 e0       	ldi	r21, 0x00	; 0
    1c22:	60 e8       	ldi	r22, 0x80	; 128
    1c24:	7f e3       	ldi	r23, 0x3F	; 63
    1c26:	ce 01       	movw	r24, r28
    1c28:	87 5b       	subi	r24, 0xB7	; 183
    1c2a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c2c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c30:	00 e0       	ldi	r16, 0x00	; 0
    1c32:	10 e0       	ldi	r17, 0x00	; 0
    1c34:	98 01       	movw	r18, r16
    1c36:	b9 01       	movw	r22, r18
    1c38:	a8 01       	movw	r20, r16
    1c3a:	ce 01       	movw	r24, r28
    1c3c:	8f 5a       	subi	r24, 0xAF	; 175
    1c3e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c40:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c44:	00 e0       	ldi	r16, 0x00	; 0
    1c46:	10 e0       	ldi	r17, 0x00	; 0
    1c48:	98 01       	movw	r18, r16
    1c4a:	b9 01       	movw	r22, r18
    1c4c:	a8 01       	movw	r20, r16
    1c4e:	ce 01       	movw	r24, r28
    1c50:	87 5a       	subi	r24, 0xA7	; 167
    1c52:	9f 4f       	sbci	r25, 0xFF	; 255
    1c54:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c58:	00 e0       	ldi	r16, 0x00	; 0
    1c5a:	10 e0       	ldi	r17, 0x00	; 0
    1c5c:	98 01       	movw	r18, r16
    1c5e:	b9 01       	movw	r22, r18
    1c60:	a8 01       	movw	r20, r16
    1c62:	ce 01       	movw	r24, r28
    1c64:	8f 59       	subi	r24, 0x9F	; 159
    1c66:	9f 4f       	sbci	r25, 0xFF	; 255
    1c68:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c6c:	00 e0       	ldi	r16, 0x00	; 0
    1c6e:	10 e0       	ldi	r17, 0x00	; 0
    1c70:	98 01       	movw	r18, r16
    1c72:	b9 01       	movw	r22, r18
    1c74:	a8 01       	movw	r20, r16
    1c76:	ce 01       	movw	r24, r28
    1c78:	87 59       	subi	r24, 0x97	; 151
    1c7a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c7c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c80:	00 e0       	ldi	r16, 0x00	; 0
    1c82:	10 e0       	ldi	r17, 0x00	; 0
    1c84:	98 01       	movw	r18, r16
    1c86:	b9 01       	movw	r22, r18
    1c88:	a8 01       	movw	r20, r16
    1c8a:	ce 01       	movw	r24, r28
    1c8c:	8f 58       	subi	r24, 0x8F	; 143
    1c8e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c90:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1c94:	00 e0       	ldi	r16, 0x00	; 0
    1c96:	10 e0       	ldi	r17, 0x00	; 0
    1c98:	98 01       	movw	r18, r16
    1c9a:	40 e0       	ldi	r20, 0x00	; 0
    1c9c:	50 e0       	ldi	r21, 0x00	; 0
    1c9e:	60 e8       	ldi	r22, 0x80	; 128
    1ca0:	7f e3       	ldi	r23, 0x3F	; 63
    1ca2:	ce 01       	movw	r24, r28
    1ca4:	87 58       	subi	r24, 0x87	; 135
    1ca6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ca8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    1cac:	cb 57       	subi	r28, 0x7B	; 123
    1cae:	df 4f       	sbci	r29, 0xFF	; 255
    1cb0:	79 82       	std	Y+1, r7	; 0x01
    1cb2:	68 82       	st	Y, r6
    1cb4:	c5 58       	subi	r28, 0x85	; 133
    1cb6:	d0 40       	sbci	r29, 0x00	; 0
    1cb8:	c9 57       	subi	r28, 0x79	; 121
    1cba:	df 4f       	sbci	r29, 0xFF	; 255
    1cbc:	99 82       	std	Y+1, r9	; 0x01
    1cbe:	88 82       	st	Y, r8
    1cc0:	c7 58       	subi	r28, 0x87	; 135
    1cc2:	d0 40       	sbci	r29, 0x00	; 0
    1cc4:	cf 57       	subi	r28, 0x7F	; 127
    1cc6:	df 4f       	sbci	r29, 0xFF	; 255
    1cc8:	b9 82       	std	Y+1, r11	; 0x01
    1cca:	a8 82       	st	Y, r10
    1ccc:	c1 58       	subi	r28, 0x81	; 129
    1cce:	d0 40       	sbci	r29, 0x00	; 0
    1cd0:	cd 57       	subi	r28, 0x7D	; 125
    1cd2:	df 4f       	sbci	r29, 0xFF	; 255
    1cd4:	d9 82       	std	Y+1, r13	; 0x01
    1cd6:	c8 82       	st	Y, r12
    1cd8:	c3 58       	subi	r28, 0x83	; 131
    1cda:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),swa_matrix),QB_SIZE2);	
    1cdc:	9e 01       	movw	r18, r28
    1cde:	2f 57       	subi	r18, 0x7F	; 127
    1ce0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ce2:	ae 01       	movw	r20, r28
    1ce4:	4b 57       	subi	r20, 0x7B	; 123
    1ce6:	5f 4f       	sbci	r21, 0xFF	; 255
    1ce8:	62 e0       	ldi	r22, 0x02	; 2
    1cea:	70 e0       	ldi	r23, 0x00	; 0
    1cec:	c7 01       	movw	r24, r14
    1cee:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    1cf2:	ae 01       	movw	r20, r28
    1cf4:	4f 5f       	subi	r20, 0xFF	; 255
    1cf6:	5f 4f       	sbci	r21, 0xFF	; 255
    1cf8:	bc 01       	movw	r22, r24
    1cfa:	c7 01       	movw	r24, r14
    1cfc:	0e 94 cd 07 	call	0xf9a	; 0xf9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    1d00:	42 e0       	ldi	r20, 0x02	; 2
    1d02:	50 e0       	ldi	r21, 0x00	; 0
    1d04:	bc 01       	movw	r22, r24
    1d06:	c7 01       	movw	r24, r14
    1d08:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1d0c:	c8 57       	subi	r28, 0x78	; 120
    1d0e:	df 4f       	sbci	r29, 0xFF	; 255
    1d10:	0f b6       	in	r0, 0x3f	; 63
    1d12:	f8 94       	cli
    1d14:	de bf       	out	0x3e, r29	; 62
    1d16:	0f be       	out	0x3f, r0	; 63
    1d18:	cd bf       	out	0x3d, r28	; 61
    1d1a:	df 91       	pop	r29
    1d1c:	cf 91       	pop	r28
    1d1e:	1f 91       	pop	r17
    1d20:	0f 91       	pop	r16
    1d22:	ff 90       	pop	r15
    1d24:	ef 90       	pop	r14
    1d26:	df 90       	pop	r13
    1d28:	cf 90       	pop	r12
    1d2a:	bf 90       	pop	r11
    1d2c:	af 90       	pop	r10
    1d2e:	9f 90       	pop	r9
    1d30:	8f 90       	pop	r8
    1d32:	7f 90       	pop	r7
    1d34:	6f 90       	pop	r6
    1d36:	08 95       	ret

00001d38 <_ZN5Gates3INCEiiii>:
int * Gates::INC(int theta1, int phi1, int theta2,int phi2){
    1d38:	6f 92       	push	r6
    1d3a:	7f 92       	push	r7
    1d3c:	8f 92       	push	r8
    1d3e:	9f 92       	push	r9
    1d40:	af 92       	push	r10
    1d42:	bf 92       	push	r11
    1d44:	cf 92       	push	r12
    1d46:	df 92       	push	r13
    1d48:	ef 92       	push	r14
    1d4a:	ff 92       	push	r15
    1d4c:	0f 93       	push	r16
    1d4e:	1f 93       	push	r17
    1d50:	cf 93       	push	r28
    1d52:	df 93       	push	r29
    1d54:	cd b7       	in	r28, 0x3d	; 61
    1d56:	de b7       	in	r29, 0x3e	; 62
    1d58:	c8 58       	subi	r28, 0x88	; 136
    1d5a:	d1 09       	sbc	r29, r1
    1d5c:	0f b6       	in	r0, 0x3f	; 63
    1d5e:	f8 94       	cli
    1d60:	de bf       	out	0x3e, r29	; 62
    1d62:	0f be       	out	0x3f, r0	; 63
    1d64:	cd bf       	out	0x3d, r28	; 61
    1d66:	7c 01       	movw	r14, r24
    1d68:	3b 01       	movw	r6, r22
    1d6a:	5a 01       	movw	r10, r20
    1d6c:	49 01       	movw	r8, r18
    1d6e:	68 01       	movw	r12, r16
	Complex inc_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
													     {Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)}};
    1d70:	00 e0       	ldi	r16, 0x00	; 0
    1d72:	10 e0       	ldi	r17, 0x00	; 0
    1d74:	98 01       	movw	r18, r16
    1d76:	b9 01       	movw	r22, r18
    1d78:	a8 01       	movw	r20, r16
    1d7a:	ce 01       	movw	r24, r28
    1d7c:	01 96       	adiw	r24, 0x01	; 1
    1d7e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1d82:	00 e0       	ldi	r16, 0x00	; 0
    1d84:	10 e0       	ldi	r17, 0x00	; 0
    1d86:	98 01       	movw	r18, r16
    1d88:	40 e0       	ldi	r20, 0x00	; 0
    1d8a:	50 e0       	ldi	r21, 0x00	; 0
    1d8c:	60 e8       	ldi	r22, 0x80	; 128
    1d8e:	7f e3       	ldi	r23, 0x3F	; 63
    1d90:	ce 01       	movw	r24, r28
    1d92:	09 96       	adiw	r24, 0x09	; 9
    1d94:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1d98:	00 e0       	ldi	r16, 0x00	; 0
    1d9a:	10 e0       	ldi	r17, 0x00	; 0
    1d9c:	98 01       	movw	r18, r16
    1d9e:	b9 01       	movw	r22, r18
    1da0:	a8 01       	movw	r20, r16
    1da2:	ce 01       	movw	r24, r28
    1da4:	41 96       	adiw	r24, 0x11	; 17
    1da6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1daa:	00 e0       	ldi	r16, 0x00	; 0
    1dac:	10 e0       	ldi	r17, 0x00	; 0
    1dae:	98 01       	movw	r18, r16
    1db0:	b9 01       	movw	r22, r18
    1db2:	a8 01       	movw	r20, r16
    1db4:	ce 01       	movw	r24, r28
    1db6:	49 96       	adiw	r24, 0x19	; 25
    1db8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1dbc:	00 e0       	ldi	r16, 0x00	; 0
    1dbe:	10 e0       	ldi	r17, 0x00	; 0
    1dc0:	98 01       	movw	r18, r16
    1dc2:	b9 01       	movw	r22, r18
    1dc4:	a8 01       	movw	r20, r16
    1dc6:	ce 01       	movw	r24, r28
    1dc8:	81 96       	adiw	r24, 0x21	; 33
    1dca:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1dce:	00 e0       	ldi	r16, 0x00	; 0
    1dd0:	10 e0       	ldi	r17, 0x00	; 0
    1dd2:	98 01       	movw	r18, r16
    1dd4:	b9 01       	movw	r22, r18
    1dd6:	a8 01       	movw	r20, r16
    1dd8:	ce 01       	movw	r24, r28
    1dda:	89 96       	adiw	r24, 0x29	; 41
    1ddc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1de0:	00 e0       	ldi	r16, 0x00	; 0
    1de2:	10 e0       	ldi	r17, 0x00	; 0
    1de4:	98 01       	movw	r18, r16
    1de6:	40 e0       	ldi	r20, 0x00	; 0
    1de8:	50 e0       	ldi	r21, 0x00	; 0
    1dea:	60 e8       	ldi	r22, 0x80	; 128
    1dec:	7f e3       	ldi	r23, 0x3F	; 63
    1dee:	ce 01       	movw	r24, r28
    1df0:	c1 96       	adiw	r24, 0x31	; 49
    1df2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1df6:	00 e0       	ldi	r16, 0x00	; 0
    1df8:	10 e0       	ldi	r17, 0x00	; 0
    1dfa:	98 01       	movw	r18, r16
    1dfc:	b9 01       	movw	r22, r18
    1dfe:	a8 01       	movw	r20, r16
    1e00:	ce 01       	movw	r24, r28
    1e02:	c9 96       	adiw	r24, 0x39	; 57
    1e04:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e08:	00 e0       	ldi	r16, 0x00	; 0
    1e0a:	10 e0       	ldi	r17, 0x00	; 0
    1e0c:	98 01       	movw	r18, r16
    1e0e:	b9 01       	movw	r22, r18
    1e10:	a8 01       	movw	r20, r16
    1e12:	ce 01       	movw	r24, r28
    1e14:	8f 5b       	subi	r24, 0xBF	; 191
    1e16:	9f 4f       	sbci	r25, 0xFF	; 255
    1e18:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e1c:	00 e0       	ldi	r16, 0x00	; 0
    1e1e:	10 e0       	ldi	r17, 0x00	; 0
    1e20:	98 01       	movw	r18, r16
    1e22:	b9 01       	movw	r22, r18
    1e24:	a8 01       	movw	r20, r16
    1e26:	ce 01       	movw	r24, r28
    1e28:	87 5b       	subi	r24, 0xB7	; 183
    1e2a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e2c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e30:	00 e0       	ldi	r16, 0x00	; 0
    1e32:	10 e0       	ldi	r17, 0x00	; 0
    1e34:	98 01       	movw	r18, r16
    1e36:	b9 01       	movw	r22, r18
    1e38:	a8 01       	movw	r20, r16
    1e3a:	ce 01       	movw	r24, r28
    1e3c:	8f 5a       	subi	r24, 0xAF	; 175
    1e3e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e40:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e44:	00 e0       	ldi	r16, 0x00	; 0
    1e46:	10 e0       	ldi	r17, 0x00	; 0
    1e48:	98 01       	movw	r18, r16
    1e4a:	40 e0       	ldi	r20, 0x00	; 0
    1e4c:	50 e0       	ldi	r21, 0x00	; 0
    1e4e:	60 e8       	ldi	r22, 0x80	; 128
    1e50:	7f e3       	ldi	r23, 0x3F	; 63
    1e52:	ce 01       	movw	r24, r28
    1e54:	87 5a       	subi	r24, 0xA7	; 167
    1e56:	9f 4f       	sbci	r25, 0xFF	; 255
    1e58:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e5c:	00 e0       	ldi	r16, 0x00	; 0
    1e5e:	10 e0       	ldi	r17, 0x00	; 0
    1e60:	98 01       	movw	r18, r16
    1e62:	40 e0       	ldi	r20, 0x00	; 0
    1e64:	50 e0       	ldi	r21, 0x00	; 0
    1e66:	60 e8       	ldi	r22, 0x80	; 128
    1e68:	7f e3       	ldi	r23, 0x3F	; 63
    1e6a:	ce 01       	movw	r24, r28
    1e6c:	8f 59       	subi	r24, 0x9F	; 159
    1e6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e70:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e74:	00 e0       	ldi	r16, 0x00	; 0
    1e76:	10 e0       	ldi	r17, 0x00	; 0
    1e78:	98 01       	movw	r18, r16
    1e7a:	b9 01       	movw	r22, r18
    1e7c:	a8 01       	movw	r20, r16
    1e7e:	ce 01       	movw	r24, r28
    1e80:	87 59       	subi	r24, 0x97	; 151
    1e82:	9f 4f       	sbci	r25, 0xFF	; 255
    1e84:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e88:	00 e0       	ldi	r16, 0x00	; 0
    1e8a:	10 e0       	ldi	r17, 0x00	; 0
    1e8c:	98 01       	movw	r18, r16
    1e8e:	b9 01       	movw	r22, r18
    1e90:	a8 01       	movw	r20, r16
    1e92:	ce 01       	movw	r24, r28
    1e94:	8f 58       	subi	r24, 0x8F	; 143
    1e96:	9f 4f       	sbci	r25, 0xFF	; 255
    1e98:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1e9c:	00 e0       	ldi	r16, 0x00	; 0
    1e9e:	10 e0       	ldi	r17, 0x00	; 0
    1ea0:	98 01       	movw	r18, r16
    1ea2:	b9 01       	movw	r22, r18
    1ea4:	a8 01       	movw	r20, r16
    1ea6:	ce 01       	movw	r24, r28
    1ea8:	87 58       	subi	r24, 0x87	; 135
    1eaa:	9f 4f       	sbci	r25, 0xFF	; 255
    1eac:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    1eb0:	cb 57       	subi	r28, 0x7B	; 123
    1eb2:	df 4f       	sbci	r29, 0xFF	; 255
    1eb4:	79 82       	std	Y+1, r7	; 0x01
    1eb6:	68 82       	st	Y, r6
    1eb8:	c5 58       	subi	r28, 0x85	; 133
    1eba:	d0 40       	sbci	r29, 0x00	; 0
    1ebc:	c9 57       	subi	r28, 0x79	; 121
    1ebe:	df 4f       	sbci	r29, 0xFF	; 255
    1ec0:	99 82       	std	Y+1, r9	; 0x01
    1ec2:	88 82       	st	Y, r8
    1ec4:	c7 58       	subi	r28, 0x87	; 135
    1ec6:	d0 40       	sbci	r29, 0x00	; 0
    1ec8:	cf 57       	subi	r28, 0x7F	; 127
    1eca:	df 4f       	sbci	r29, 0xFF	; 255
    1ecc:	b9 82       	std	Y+1, r11	; 0x01
    1ece:	a8 82       	st	Y, r10
    1ed0:	c1 58       	subi	r28, 0x81	; 129
    1ed2:	d0 40       	sbci	r29, 0x00	; 0
    1ed4:	cd 57       	subi	r28, 0x7D	; 125
    1ed6:	df 4f       	sbci	r29, 0xFF	; 255
    1ed8:	d9 82       	std	Y+1, r13	; 0x01
    1eda:	c8 82       	st	Y, r12
    1edc:	c3 58       	subi	r28, 0x83	; 131
    1ede:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),inc_matrix),QB_SIZE2);
    1ee0:	9e 01       	movw	r18, r28
    1ee2:	2f 57       	subi	r18, 0x7F	; 127
    1ee4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ee6:	ae 01       	movw	r20, r28
    1ee8:	4b 57       	subi	r20, 0x7B	; 123
    1eea:	5f 4f       	sbci	r21, 0xFF	; 255
    1eec:	62 e0       	ldi	r22, 0x02	; 2
    1eee:	70 e0       	ldi	r23, 0x00	; 0
    1ef0:	c7 01       	movw	r24, r14
    1ef2:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    1ef6:	ae 01       	movw	r20, r28
    1ef8:	4f 5f       	subi	r20, 0xFF	; 255
    1efa:	5f 4f       	sbci	r21, 0xFF	; 255
    1efc:	bc 01       	movw	r22, r24
    1efe:	c7 01       	movw	r24, r14
    1f00:	0e 94 cd 07 	call	0xf9a	; 0xf9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    1f04:	42 e0       	ldi	r20, 0x02	; 2
    1f06:	50 e0       	ldi	r21, 0x00	; 0
    1f08:	bc 01       	movw	r22, r24
    1f0a:	c7 01       	movw	r24, r14
    1f0c:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    1f10:	c8 57       	subi	r28, 0x78	; 120
    1f12:	df 4f       	sbci	r29, 0xFF	; 255
    1f14:	0f b6       	in	r0, 0x3f	; 63
    1f16:	f8 94       	cli
    1f18:	de bf       	out	0x3e, r29	; 62
    1f1a:	0f be       	out	0x3f, r0	; 63
    1f1c:	cd bf       	out	0x3d, r28	; 61
    1f1e:	df 91       	pop	r29
    1f20:	cf 91       	pop	r28
    1f22:	1f 91       	pop	r17
    1f24:	0f 91       	pop	r16
    1f26:	ff 90       	pop	r15
    1f28:	ef 90       	pop	r14
    1f2a:	df 90       	pop	r13
    1f2c:	cf 90       	pop	r12
    1f2e:	bf 90       	pop	r11
    1f30:	af 90       	pop	r10
    1f32:	9f 90       	pop	r9
    1f34:	8f 90       	pop	r8
    1f36:	7f 90       	pop	r7
    1f38:	6f 90       	pop	r6
    1f3a:	08 95       	ret

00001f3c <_ZN5Gates3DECEiiii>:
int * Gates::DEC(int theta1, int phi1, int theta2,int phi2){
    1f3c:	6f 92       	push	r6
    1f3e:	7f 92       	push	r7
    1f40:	8f 92       	push	r8
    1f42:	9f 92       	push	r9
    1f44:	af 92       	push	r10
    1f46:	bf 92       	push	r11
    1f48:	cf 92       	push	r12
    1f4a:	df 92       	push	r13
    1f4c:	ef 92       	push	r14
    1f4e:	ff 92       	push	r15
    1f50:	0f 93       	push	r16
    1f52:	1f 93       	push	r17
    1f54:	cf 93       	push	r28
    1f56:	df 93       	push	r29
    1f58:	cd b7       	in	r28, 0x3d	; 61
    1f5a:	de b7       	in	r29, 0x3e	; 62
    1f5c:	c8 58       	subi	r28, 0x88	; 136
    1f5e:	d1 09       	sbc	r29, r1
    1f60:	0f b6       	in	r0, 0x3f	; 63
    1f62:	f8 94       	cli
    1f64:	de bf       	out	0x3e, r29	; 62
    1f66:	0f be       	out	0x3f, r0	; 63
    1f68:	cd bf       	out	0x3d, r28	; 61
    1f6a:	7c 01       	movw	r14, r24
    1f6c:	3b 01       	movw	r6, r22
    1f6e:	5a 01       	movw	r10, r20
    1f70:	49 01       	movw	r8, r18
    1f72:	68 01       	movw	r12, r16
	Complex dec_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
													     {Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)}};
    1f74:	00 e0       	ldi	r16, 0x00	; 0
    1f76:	10 e0       	ldi	r17, 0x00	; 0
    1f78:	98 01       	movw	r18, r16
    1f7a:	b9 01       	movw	r22, r18
    1f7c:	a8 01       	movw	r20, r16
    1f7e:	ce 01       	movw	r24, r28
    1f80:	01 96       	adiw	r24, 0x01	; 1
    1f82:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1f86:	00 e0       	ldi	r16, 0x00	; 0
    1f88:	10 e0       	ldi	r17, 0x00	; 0
    1f8a:	98 01       	movw	r18, r16
    1f8c:	b9 01       	movw	r22, r18
    1f8e:	a8 01       	movw	r20, r16
    1f90:	ce 01       	movw	r24, r28
    1f92:	09 96       	adiw	r24, 0x09	; 9
    1f94:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1f98:	00 e0       	ldi	r16, 0x00	; 0
    1f9a:	10 e0       	ldi	r17, 0x00	; 0
    1f9c:	98 01       	movw	r18, r16
    1f9e:	b9 01       	movw	r22, r18
    1fa0:	a8 01       	movw	r20, r16
    1fa2:	ce 01       	movw	r24, r28
    1fa4:	41 96       	adiw	r24, 0x11	; 17
    1fa6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1faa:	00 e0       	ldi	r16, 0x00	; 0
    1fac:	10 e0       	ldi	r17, 0x00	; 0
    1fae:	98 01       	movw	r18, r16
    1fb0:	40 e0       	ldi	r20, 0x00	; 0
    1fb2:	50 e0       	ldi	r21, 0x00	; 0
    1fb4:	60 e8       	ldi	r22, 0x80	; 128
    1fb6:	7f e3       	ldi	r23, 0x3F	; 63
    1fb8:	ce 01       	movw	r24, r28
    1fba:	49 96       	adiw	r24, 0x19	; 25
    1fbc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1fc0:	00 e0       	ldi	r16, 0x00	; 0
    1fc2:	10 e0       	ldi	r17, 0x00	; 0
    1fc4:	98 01       	movw	r18, r16
    1fc6:	40 e0       	ldi	r20, 0x00	; 0
    1fc8:	50 e0       	ldi	r21, 0x00	; 0
    1fca:	60 e8       	ldi	r22, 0x80	; 128
    1fcc:	7f e3       	ldi	r23, 0x3F	; 63
    1fce:	ce 01       	movw	r24, r28
    1fd0:	81 96       	adiw	r24, 0x21	; 33
    1fd2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1fd6:	00 e0       	ldi	r16, 0x00	; 0
    1fd8:	10 e0       	ldi	r17, 0x00	; 0
    1fda:	98 01       	movw	r18, r16
    1fdc:	b9 01       	movw	r22, r18
    1fde:	a8 01       	movw	r20, r16
    1fe0:	ce 01       	movw	r24, r28
    1fe2:	89 96       	adiw	r24, 0x29	; 41
    1fe4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1fe8:	00 e0       	ldi	r16, 0x00	; 0
    1fea:	10 e0       	ldi	r17, 0x00	; 0
    1fec:	98 01       	movw	r18, r16
    1fee:	b9 01       	movw	r22, r18
    1ff0:	a8 01       	movw	r20, r16
    1ff2:	ce 01       	movw	r24, r28
    1ff4:	c1 96       	adiw	r24, 0x31	; 49
    1ff6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    1ffa:	00 e0       	ldi	r16, 0x00	; 0
    1ffc:	10 e0       	ldi	r17, 0x00	; 0
    1ffe:	98 01       	movw	r18, r16
    2000:	b9 01       	movw	r22, r18
    2002:	a8 01       	movw	r20, r16
    2004:	ce 01       	movw	r24, r28
    2006:	c9 96       	adiw	r24, 0x39	; 57
    2008:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    200c:	00 e0       	ldi	r16, 0x00	; 0
    200e:	10 e0       	ldi	r17, 0x00	; 0
    2010:	98 01       	movw	r18, r16
    2012:	b9 01       	movw	r22, r18
    2014:	a8 01       	movw	r20, r16
    2016:	ce 01       	movw	r24, r28
    2018:	8f 5b       	subi	r24, 0xBF	; 191
    201a:	9f 4f       	sbci	r25, 0xFF	; 255
    201c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2020:	00 e0       	ldi	r16, 0x00	; 0
    2022:	10 e0       	ldi	r17, 0x00	; 0
    2024:	98 01       	movw	r18, r16
    2026:	40 e0       	ldi	r20, 0x00	; 0
    2028:	50 e0       	ldi	r21, 0x00	; 0
    202a:	60 e8       	ldi	r22, 0x80	; 128
    202c:	7f e3       	ldi	r23, 0x3F	; 63
    202e:	ce 01       	movw	r24, r28
    2030:	87 5b       	subi	r24, 0xB7	; 183
    2032:	9f 4f       	sbci	r25, 0xFF	; 255
    2034:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2038:	00 e0       	ldi	r16, 0x00	; 0
    203a:	10 e0       	ldi	r17, 0x00	; 0
    203c:	98 01       	movw	r18, r16
    203e:	b9 01       	movw	r22, r18
    2040:	a8 01       	movw	r20, r16
    2042:	ce 01       	movw	r24, r28
    2044:	8f 5a       	subi	r24, 0xAF	; 175
    2046:	9f 4f       	sbci	r25, 0xFF	; 255
    2048:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    204c:	00 e0       	ldi	r16, 0x00	; 0
    204e:	10 e0       	ldi	r17, 0x00	; 0
    2050:	98 01       	movw	r18, r16
    2052:	b9 01       	movw	r22, r18
    2054:	a8 01       	movw	r20, r16
    2056:	ce 01       	movw	r24, r28
    2058:	87 5a       	subi	r24, 0xA7	; 167
    205a:	9f 4f       	sbci	r25, 0xFF	; 255
    205c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2060:	00 e0       	ldi	r16, 0x00	; 0
    2062:	10 e0       	ldi	r17, 0x00	; 0
    2064:	98 01       	movw	r18, r16
    2066:	b9 01       	movw	r22, r18
    2068:	a8 01       	movw	r20, r16
    206a:	ce 01       	movw	r24, r28
    206c:	8f 59       	subi	r24, 0x9F	; 159
    206e:	9f 4f       	sbci	r25, 0xFF	; 255
    2070:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2074:	00 e0       	ldi	r16, 0x00	; 0
    2076:	10 e0       	ldi	r17, 0x00	; 0
    2078:	98 01       	movw	r18, r16
    207a:	b9 01       	movw	r22, r18
    207c:	a8 01       	movw	r20, r16
    207e:	ce 01       	movw	r24, r28
    2080:	87 59       	subi	r24, 0x97	; 151
    2082:	9f 4f       	sbci	r25, 0xFF	; 255
    2084:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2088:	00 e0       	ldi	r16, 0x00	; 0
    208a:	10 e0       	ldi	r17, 0x00	; 0
    208c:	98 01       	movw	r18, r16
    208e:	40 e0       	ldi	r20, 0x00	; 0
    2090:	50 e0       	ldi	r21, 0x00	; 0
    2092:	60 e8       	ldi	r22, 0x80	; 128
    2094:	7f e3       	ldi	r23, 0x3F	; 63
    2096:	ce 01       	movw	r24, r28
    2098:	8f 58       	subi	r24, 0x8F	; 143
    209a:	9f 4f       	sbci	r25, 0xFF	; 255
    209c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    20a0:	00 e0       	ldi	r16, 0x00	; 0
    20a2:	10 e0       	ldi	r17, 0x00	; 0
    20a4:	98 01       	movw	r18, r16
    20a6:	b9 01       	movw	r22, r18
    20a8:	a8 01       	movw	r20, r16
    20aa:	ce 01       	movw	r24, r28
    20ac:	87 58       	subi	r24, 0x87	; 135
    20ae:	9f 4f       	sbci	r25, 0xFF	; 255
    20b0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    20b4:	cb 57       	subi	r28, 0x7B	; 123
    20b6:	df 4f       	sbci	r29, 0xFF	; 255
    20b8:	79 82       	std	Y+1, r7	; 0x01
    20ba:	68 82       	st	Y, r6
    20bc:	c5 58       	subi	r28, 0x85	; 133
    20be:	d0 40       	sbci	r29, 0x00	; 0
    20c0:	c9 57       	subi	r28, 0x79	; 121
    20c2:	df 4f       	sbci	r29, 0xFF	; 255
    20c4:	99 82       	std	Y+1, r9	; 0x01
    20c6:	88 82       	st	Y, r8
    20c8:	c7 58       	subi	r28, 0x87	; 135
    20ca:	d0 40       	sbci	r29, 0x00	; 0
    20cc:	cf 57       	subi	r28, 0x7F	; 127
    20ce:	df 4f       	sbci	r29, 0xFF	; 255
    20d0:	b9 82       	std	Y+1, r11	; 0x01
    20d2:	a8 82       	st	Y, r10
    20d4:	c1 58       	subi	r28, 0x81	; 129
    20d6:	d0 40       	sbci	r29, 0x00	; 0
    20d8:	cd 57       	subi	r28, 0x7D	; 125
    20da:	df 4f       	sbci	r29, 0xFF	; 255
    20dc:	d9 82       	std	Y+1, r13	; 0x01
    20de:	c8 82       	st	Y, r12
    20e0:	c3 58       	subi	r28, 0x83	; 131
    20e2:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),dec_matrix),QB_SIZE2);
    20e4:	9e 01       	movw	r18, r28
    20e6:	2f 57       	subi	r18, 0x7F	; 127
    20e8:	3f 4f       	sbci	r19, 0xFF	; 255
    20ea:	ae 01       	movw	r20, r28
    20ec:	4b 57       	subi	r20, 0x7B	; 123
    20ee:	5f 4f       	sbci	r21, 0xFF	; 255
    20f0:	62 e0       	ldi	r22, 0x02	; 2
    20f2:	70 e0       	ldi	r23, 0x00	; 0
    20f4:	c7 01       	movw	r24, r14
    20f6:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    20fa:	ae 01       	movw	r20, r28
    20fc:	4f 5f       	subi	r20, 0xFF	; 255
    20fe:	5f 4f       	sbci	r21, 0xFF	; 255
    2100:	bc 01       	movw	r22, r24
    2102:	c7 01       	movw	r24, r14
    2104:	0e 94 cd 07 	call	0xf9a	; 0xf9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    2108:	42 e0       	ldi	r20, 0x02	; 2
    210a:	50 e0       	ldi	r21, 0x00	; 0
    210c:	bc 01       	movw	r22, r24
    210e:	c7 01       	movw	r24, r14
    2110:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    2114:	c8 57       	subi	r28, 0x78	; 120
    2116:	df 4f       	sbci	r29, 0xFF	; 255
    2118:	0f b6       	in	r0, 0x3f	; 63
    211a:	f8 94       	cli
    211c:	de bf       	out	0x3e, r29	; 62
    211e:	0f be       	out	0x3f, r0	; 63
    2120:	cd bf       	out	0x3d, r28	; 61
    2122:	df 91       	pop	r29
    2124:	cf 91       	pop	r28
    2126:	1f 91       	pop	r17
    2128:	0f 91       	pop	r16
    212a:	ff 90       	pop	r15
    212c:	ef 90       	pop	r14
    212e:	df 90       	pop	r13
    2130:	cf 90       	pop	r12
    2132:	bf 90       	pop	r11
    2134:	af 90       	pop	r10
    2136:	9f 90       	pop	r9
    2138:	8f 90       	pop	r8
    213a:	7f 90       	pop	r7
    213c:	6f 90       	pop	r6
    213e:	08 95       	ret

00002140 <_ZN5Gates3SWQEiiii>:
int * Gates::SWQ(int theta1, int phi1, int theta2,int phi2){
    2140:	6f 92       	push	r6
    2142:	7f 92       	push	r7
    2144:	8f 92       	push	r8
    2146:	9f 92       	push	r9
    2148:	af 92       	push	r10
    214a:	bf 92       	push	r11
    214c:	cf 92       	push	r12
    214e:	df 92       	push	r13
    2150:	ef 92       	push	r14
    2152:	ff 92       	push	r15
    2154:	0f 93       	push	r16
    2156:	1f 93       	push	r17
    2158:	cf 93       	push	r28
    215a:	df 93       	push	r29
    215c:	cd b7       	in	r28, 0x3d	; 61
    215e:	de b7       	in	r29, 0x3e	; 62
    2160:	c8 58       	subi	r28, 0x88	; 136
    2162:	d1 09       	sbc	r29, r1
    2164:	0f b6       	in	r0, 0x3f	; 63
    2166:	f8 94       	cli
    2168:	de bf       	out	0x3e, r29	; 62
    216a:	0f be       	out	0x3f, r0	; 63
    216c:	cd bf       	out	0x3d, r28	; 61
    216e:	7c 01       	movw	r14, r24
    2170:	3b 01       	movw	r6, r22
    2172:	5a 01       	movw	r10, r20
    2174:	49 01       	movw	r8, r18
    2176:	68 01       	movw	r12, r16
	Complex swq_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),   Complex(0,0),   Complex(0,0)},
	 												     {Complex(0,0),Complex(.5,.5), Complex(.5,-.5),Complex(0,0)},
													     {Complex(0,0),Complex(.5,-.5),Complex(.5,.5), Complex(0,0)},
													     {Complex(0,0),Complex(0,0),   Complex(0,0),   Complex(1,0)}};
    2178:	00 e0       	ldi	r16, 0x00	; 0
    217a:	10 e0       	ldi	r17, 0x00	; 0
    217c:	98 01       	movw	r18, r16
    217e:	40 e0       	ldi	r20, 0x00	; 0
    2180:	50 e0       	ldi	r21, 0x00	; 0
    2182:	60 e8       	ldi	r22, 0x80	; 128
    2184:	7f e3       	ldi	r23, 0x3F	; 63
    2186:	ce 01       	movw	r24, r28
    2188:	01 96       	adiw	r24, 0x01	; 1
    218a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    218e:	00 e0       	ldi	r16, 0x00	; 0
    2190:	10 e0       	ldi	r17, 0x00	; 0
    2192:	98 01       	movw	r18, r16
    2194:	b9 01       	movw	r22, r18
    2196:	a8 01       	movw	r20, r16
    2198:	ce 01       	movw	r24, r28
    219a:	09 96       	adiw	r24, 0x09	; 9
    219c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    21a0:	00 e0       	ldi	r16, 0x00	; 0
    21a2:	10 e0       	ldi	r17, 0x00	; 0
    21a4:	98 01       	movw	r18, r16
    21a6:	b9 01       	movw	r22, r18
    21a8:	a8 01       	movw	r20, r16
    21aa:	ce 01       	movw	r24, r28
    21ac:	41 96       	adiw	r24, 0x11	; 17
    21ae:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    21b2:	00 e0       	ldi	r16, 0x00	; 0
    21b4:	10 e0       	ldi	r17, 0x00	; 0
    21b6:	98 01       	movw	r18, r16
    21b8:	b9 01       	movw	r22, r18
    21ba:	a8 01       	movw	r20, r16
    21bc:	ce 01       	movw	r24, r28
    21be:	49 96       	adiw	r24, 0x19	; 25
    21c0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    21c4:	00 e0       	ldi	r16, 0x00	; 0
    21c6:	10 e0       	ldi	r17, 0x00	; 0
    21c8:	98 01       	movw	r18, r16
    21ca:	b9 01       	movw	r22, r18
    21cc:	a8 01       	movw	r20, r16
    21ce:	ce 01       	movw	r24, r28
    21d0:	81 96       	adiw	r24, 0x21	; 33
    21d2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    21d6:	00 e0       	ldi	r16, 0x00	; 0
    21d8:	10 e0       	ldi	r17, 0x00	; 0
    21da:	20 e0       	ldi	r18, 0x00	; 0
    21dc:	3f e3       	ldi	r19, 0x3F	; 63
    21de:	b9 01       	movw	r22, r18
    21e0:	a8 01       	movw	r20, r16
    21e2:	ce 01       	movw	r24, r28
    21e4:	89 96       	adiw	r24, 0x29	; 41
    21e6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    21ea:	00 e0       	ldi	r16, 0x00	; 0
    21ec:	10 e0       	ldi	r17, 0x00	; 0
    21ee:	20 e0       	ldi	r18, 0x00	; 0
    21f0:	3f eb       	ldi	r19, 0xBF	; 191
    21f2:	40 e0       	ldi	r20, 0x00	; 0
    21f4:	50 e0       	ldi	r21, 0x00	; 0
    21f6:	60 e0       	ldi	r22, 0x00	; 0
    21f8:	7f e3       	ldi	r23, 0x3F	; 63
    21fa:	ce 01       	movw	r24, r28
    21fc:	c1 96       	adiw	r24, 0x31	; 49
    21fe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2202:	00 e0       	ldi	r16, 0x00	; 0
    2204:	10 e0       	ldi	r17, 0x00	; 0
    2206:	98 01       	movw	r18, r16
    2208:	b9 01       	movw	r22, r18
    220a:	a8 01       	movw	r20, r16
    220c:	ce 01       	movw	r24, r28
    220e:	c9 96       	adiw	r24, 0x39	; 57
    2210:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2214:	00 e0       	ldi	r16, 0x00	; 0
    2216:	10 e0       	ldi	r17, 0x00	; 0
    2218:	98 01       	movw	r18, r16
    221a:	b9 01       	movw	r22, r18
    221c:	a8 01       	movw	r20, r16
    221e:	ce 01       	movw	r24, r28
    2220:	8f 5b       	subi	r24, 0xBF	; 191
    2222:	9f 4f       	sbci	r25, 0xFF	; 255
    2224:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2228:	00 e0       	ldi	r16, 0x00	; 0
    222a:	10 e0       	ldi	r17, 0x00	; 0
    222c:	20 e0       	ldi	r18, 0x00	; 0
    222e:	3f eb       	ldi	r19, 0xBF	; 191
    2230:	40 e0       	ldi	r20, 0x00	; 0
    2232:	50 e0       	ldi	r21, 0x00	; 0
    2234:	60 e0       	ldi	r22, 0x00	; 0
    2236:	7f e3       	ldi	r23, 0x3F	; 63
    2238:	ce 01       	movw	r24, r28
    223a:	87 5b       	subi	r24, 0xB7	; 183
    223c:	9f 4f       	sbci	r25, 0xFF	; 255
    223e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2242:	00 e0       	ldi	r16, 0x00	; 0
    2244:	10 e0       	ldi	r17, 0x00	; 0
    2246:	20 e0       	ldi	r18, 0x00	; 0
    2248:	3f e3       	ldi	r19, 0x3F	; 63
    224a:	b9 01       	movw	r22, r18
    224c:	a8 01       	movw	r20, r16
    224e:	ce 01       	movw	r24, r28
    2250:	8f 5a       	subi	r24, 0xAF	; 175
    2252:	9f 4f       	sbci	r25, 0xFF	; 255
    2254:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2258:	00 e0       	ldi	r16, 0x00	; 0
    225a:	10 e0       	ldi	r17, 0x00	; 0
    225c:	98 01       	movw	r18, r16
    225e:	b9 01       	movw	r22, r18
    2260:	a8 01       	movw	r20, r16
    2262:	ce 01       	movw	r24, r28
    2264:	87 5a       	subi	r24, 0xA7	; 167
    2266:	9f 4f       	sbci	r25, 0xFF	; 255
    2268:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    226c:	00 e0       	ldi	r16, 0x00	; 0
    226e:	10 e0       	ldi	r17, 0x00	; 0
    2270:	98 01       	movw	r18, r16
    2272:	b9 01       	movw	r22, r18
    2274:	a8 01       	movw	r20, r16
    2276:	ce 01       	movw	r24, r28
    2278:	8f 59       	subi	r24, 0x9F	; 159
    227a:	9f 4f       	sbci	r25, 0xFF	; 255
    227c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2280:	00 e0       	ldi	r16, 0x00	; 0
    2282:	10 e0       	ldi	r17, 0x00	; 0
    2284:	98 01       	movw	r18, r16
    2286:	b9 01       	movw	r22, r18
    2288:	a8 01       	movw	r20, r16
    228a:	ce 01       	movw	r24, r28
    228c:	87 59       	subi	r24, 0x97	; 151
    228e:	9f 4f       	sbci	r25, 0xFF	; 255
    2290:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2294:	00 e0       	ldi	r16, 0x00	; 0
    2296:	10 e0       	ldi	r17, 0x00	; 0
    2298:	98 01       	movw	r18, r16
    229a:	b9 01       	movw	r22, r18
    229c:	a8 01       	movw	r20, r16
    229e:	ce 01       	movw	r24, r28
    22a0:	8f 58       	subi	r24, 0x8F	; 143
    22a2:	9f 4f       	sbci	r25, 0xFF	; 255
    22a4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    22a8:	00 e0       	ldi	r16, 0x00	; 0
    22aa:	10 e0       	ldi	r17, 0x00	; 0
    22ac:	98 01       	movw	r18, r16
    22ae:	40 e0       	ldi	r20, 0x00	; 0
    22b0:	50 e0       	ldi	r21, 0x00	; 0
    22b2:	60 e8       	ldi	r22, 0x80	; 128
    22b4:	7f e3       	ldi	r23, 0x3F	; 63
    22b6:	ce 01       	movw	r24, r28
    22b8:	87 58       	subi	r24, 0x87	; 135
    22ba:	9f 4f       	sbci	r25, 0xFF	; 255
    22bc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    22c0:	cb 57       	subi	r28, 0x7B	; 123
    22c2:	df 4f       	sbci	r29, 0xFF	; 255
    22c4:	79 82       	std	Y+1, r7	; 0x01
    22c6:	68 82       	st	Y, r6
    22c8:	c5 58       	subi	r28, 0x85	; 133
    22ca:	d0 40       	sbci	r29, 0x00	; 0
    22cc:	c9 57       	subi	r28, 0x79	; 121
    22ce:	df 4f       	sbci	r29, 0xFF	; 255
    22d0:	99 82       	std	Y+1, r9	; 0x01
    22d2:	88 82       	st	Y, r8
    22d4:	c7 58       	subi	r28, 0x87	; 135
    22d6:	d0 40       	sbci	r29, 0x00	; 0
    22d8:	cf 57       	subi	r28, 0x7F	; 127
    22da:	df 4f       	sbci	r29, 0xFF	; 255
    22dc:	b9 82       	std	Y+1, r11	; 0x01
    22de:	a8 82       	st	Y, r10
    22e0:	c1 58       	subi	r28, 0x81	; 129
    22e2:	d0 40       	sbci	r29, 0x00	; 0
    22e4:	cd 57       	subi	r28, 0x7D	; 125
    22e6:	df 4f       	sbci	r29, 0xFF	; 255
    22e8:	d9 82       	std	Y+1, r13	; 0x01
    22ea:	c8 82       	st	Y, r12
    22ec:	c3 58       	subi	r28, 0x83	; 131
    22ee:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),swq_matrix),QB_SIZE2);
    22f0:	9e 01       	movw	r18, r28
    22f2:	2f 57       	subi	r18, 0x7F	; 127
    22f4:	3f 4f       	sbci	r19, 0xFF	; 255
    22f6:	ae 01       	movw	r20, r28
    22f8:	4b 57       	subi	r20, 0x7B	; 123
    22fa:	5f 4f       	sbci	r21, 0xFF	; 255
    22fc:	62 e0       	ldi	r22, 0x02	; 2
    22fe:	70 e0       	ldi	r23, 0x00	; 0
    2300:	c7 01       	movw	r24, r14
    2302:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    2306:	ae 01       	movw	r20, r28
    2308:	4f 5f       	subi	r20, 0xFF	; 255
    230a:	5f 4f       	sbci	r21, 0xFF	; 255
    230c:	bc 01       	movw	r22, r24
    230e:	c7 01       	movw	r24, r14
    2310:	0e 94 cd 07 	call	0xf9a	; 0xf9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    2314:	42 e0       	ldi	r20, 0x02	; 2
    2316:	50 e0       	ldi	r21, 0x00	; 0
    2318:	bc 01       	movw	r22, r24
    231a:	c7 01       	movw	r24, r14
    231c:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    2320:	c8 57       	subi	r28, 0x78	; 120
    2322:	df 4f       	sbci	r29, 0xFF	; 255
    2324:	0f b6       	in	r0, 0x3f	; 63
    2326:	f8 94       	cli
    2328:	de bf       	out	0x3e, r29	; 62
    232a:	0f be       	out	0x3f, r0	; 63
    232c:	cd bf       	out	0x3d, r28	; 61
    232e:	df 91       	pop	r29
    2330:	cf 91       	pop	r28
    2332:	1f 91       	pop	r17
    2334:	0f 91       	pop	r16
    2336:	ff 90       	pop	r15
    2338:	ef 90       	pop	r14
    233a:	df 90       	pop	r13
    233c:	cf 90       	pop	r12
    233e:	bf 90       	pop	r11
    2340:	af 90       	pop	r10
    2342:	9f 90       	pop	r9
    2344:	8f 90       	pop	r8
    2346:	7f 90       	pop	r7
    2348:	6f 90       	pop	r6
    234a:	08 95       	ret

0000234c <_ZN5Gates3SWIEiiii>:
int * Gates::SWI(int theta1, int phi1, int theta2,int phi2){
    234c:	6f 92       	push	r6
    234e:	7f 92       	push	r7
    2350:	8f 92       	push	r8
    2352:	9f 92       	push	r9
    2354:	af 92       	push	r10
    2356:	bf 92       	push	r11
    2358:	cf 92       	push	r12
    235a:	df 92       	push	r13
    235c:	ef 92       	push	r14
    235e:	ff 92       	push	r15
    2360:	0f 93       	push	r16
    2362:	1f 93       	push	r17
    2364:	cf 93       	push	r28
    2366:	df 93       	push	r29
    2368:	cd b7       	in	r28, 0x3d	; 61
    236a:	de b7       	in	r29, 0x3e	; 62
    236c:	c8 58       	subi	r28, 0x88	; 136
    236e:	d1 09       	sbc	r29, r1
    2370:	0f b6       	in	r0, 0x3f	; 63
    2372:	f8 94       	cli
    2374:	de bf       	out	0x3e, r29	; 62
    2376:	0f be       	out	0x3f, r0	; 63
    2378:	cd bf       	out	0x3d, r28	; 61
    237a:	7c 01       	movw	r14, r24
    237c:	3b 01       	movw	r6, r22
    237e:	5a 01       	movw	r10, r20
    2380:	49 01       	movw	r8, r18
    2382:	68 01       	movw	r12, r16
	Complex dec_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,1),Complex(0,0)},
 													     {Complex(0,0),Complex(0,1),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)}};
    2384:	00 e0       	ldi	r16, 0x00	; 0
    2386:	10 e0       	ldi	r17, 0x00	; 0
    2388:	98 01       	movw	r18, r16
    238a:	40 e0       	ldi	r20, 0x00	; 0
    238c:	50 e0       	ldi	r21, 0x00	; 0
    238e:	60 e8       	ldi	r22, 0x80	; 128
    2390:	7f e3       	ldi	r23, 0x3F	; 63
    2392:	ce 01       	movw	r24, r28
    2394:	01 96       	adiw	r24, 0x01	; 1
    2396:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    239a:	00 e0       	ldi	r16, 0x00	; 0
    239c:	10 e0       	ldi	r17, 0x00	; 0
    239e:	98 01       	movw	r18, r16
    23a0:	b9 01       	movw	r22, r18
    23a2:	a8 01       	movw	r20, r16
    23a4:	ce 01       	movw	r24, r28
    23a6:	09 96       	adiw	r24, 0x09	; 9
    23a8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    23ac:	00 e0       	ldi	r16, 0x00	; 0
    23ae:	10 e0       	ldi	r17, 0x00	; 0
    23b0:	98 01       	movw	r18, r16
    23b2:	b9 01       	movw	r22, r18
    23b4:	a8 01       	movw	r20, r16
    23b6:	ce 01       	movw	r24, r28
    23b8:	41 96       	adiw	r24, 0x11	; 17
    23ba:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    23be:	00 e0       	ldi	r16, 0x00	; 0
    23c0:	10 e0       	ldi	r17, 0x00	; 0
    23c2:	98 01       	movw	r18, r16
    23c4:	b9 01       	movw	r22, r18
    23c6:	a8 01       	movw	r20, r16
    23c8:	ce 01       	movw	r24, r28
    23ca:	49 96       	adiw	r24, 0x19	; 25
    23cc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    23d0:	00 e0       	ldi	r16, 0x00	; 0
    23d2:	10 e0       	ldi	r17, 0x00	; 0
    23d4:	98 01       	movw	r18, r16
    23d6:	b9 01       	movw	r22, r18
    23d8:	a8 01       	movw	r20, r16
    23da:	ce 01       	movw	r24, r28
    23dc:	81 96       	adiw	r24, 0x21	; 33
    23de:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    23e2:	00 e0       	ldi	r16, 0x00	; 0
    23e4:	10 e0       	ldi	r17, 0x00	; 0
    23e6:	98 01       	movw	r18, r16
    23e8:	b9 01       	movw	r22, r18
    23ea:	a8 01       	movw	r20, r16
    23ec:	ce 01       	movw	r24, r28
    23ee:	89 96       	adiw	r24, 0x29	; 41
    23f0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    23f4:	00 e0       	ldi	r16, 0x00	; 0
    23f6:	10 e0       	ldi	r17, 0x00	; 0
    23f8:	20 e8       	ldi	r18, 0x80	; 128
    23fa:	3f e3       	ldi	r19, 0x3F	; 63
    23fc:	40 e0       	ldi	r20, 0x00	; 0
    23fe:	50 e0       	ldi	r21, 0x00	; 0
    2400:	ba 01       	movw	r22, r20
    2402:	ce 01       	movw	r24, r28
    2404:	c1 96       	adiw	r24, 0x31	; 49
    2406:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    240a:	00 e0       	ldi	r16, 0x00	; 0
    240c:	10 e0       	ldi	r17, 0x00	; 0
    240e:	98 01       	movw	r18, r16
    2410:	b9 01       	movw	r22, r18
    2412:	a8 01       	movw	r20, r16
    2414:	ce 01       	movw	r24, r28
    2416:	c9 96       	adiw	r24, 0x39	; 57
    2418:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    241c:	00 e0       	ldi	r16, 0x00	; 0
    241e:	10 e0       	ldi	r17, 0x00	; 0
    2420:	98 01       	movw	r18, r16
    2422:	b9 01       	movw	r22, r18
    2424:	a8 01       	movw	r20, r16
    2426:	ce 01       	movw	r24, r28
    2428:	8f 5b       	subi	r24, 0xBF	; 191
    242a:	9f 4f       	sbci	r25, 0xFF	; 255
    242c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2430:	00 e0       	ldi	r16, 0x00	; 0
    2432:	10 e0       	ldi	r17, 0x00	; 0
    2434:	20 e8       	ldi	r18, 0x80	; 128
    2436:	3f e3       	ldi	r19, 0x3F	; 63
    2438:	40 e0       	ldi	r20, 0x00	; 0
    243a:	50 e0       	ldi	r21, 0x00	; 0
    243c:	ba 01       	movw	r22, r20
    243e:	ce 01       	movw	r24, r28
    2440:	87 5b       	subi	r24, 0xB7	; 183
    2442:	9f 4f       	sbci	r25, 0xFF	; 255
    2444:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2448:	00 e0       	ldi	r16, 0x00	; 0
    244a:	10 e0       	ldi	r17, 0x00	; 0
    244c:	98 01       	movw	r18, r16
    244e:	b9 01       	movw	r22, r18
    2450:	a8 01       	movw	r20, r16
    2452:	ce 01       	movw	r24, r28
    2454:	8f 5a       	subi	r24, 0xAF	; 175
    2456:	9f 4f       	sbci	r25, 0xFF	; 255
    2458:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    245c:	00 e0       	ldi	r16, 0x00	; 0
    245e:	10 e0       	ldi	r17, 0x00	; 0
    2460:	98 01       	movw	r18, r16
    2462:	b9 01       	movw	r22, r18
    2464:	a8 01       	movw	r20, r16
    2466:	ce 01       	movw	r24, r28
    2468:	87 5a       	subi	r24, 0xA7	; 167
    246a:	9f 4f       	sbci	r25, 0xFF	; 255
    246c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2470:	00 e0       	ldi	r16, 0x00	; 0
    2472:	10 e0       	ldi	r17, 0x00	; 0
    2474:	98 01       	movw	r18, r16
    2476:	b9 01       	movw	r22, r18
    2478:	a8 01       	movw	r20, r16
    247a:	ce 01       	movw	r24, r28
    247c:	8f 59       	subi	r24, 0x9F	; 159
    247e:	9f 4f       	sbci	r25, 0xFF	; 255
    2480:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2484:	00 e0       	ldi	r16, 0x00	; 0
    2486:	10 e0       	ldi	r17, 0x00	; 0
    2488:	98 01       	movw	r18, r16
    248a:	b9 01       	movw	r22, r18
    248c:	a8 01       	movw	r20, r16
    248e:	ce 01       	movw	r24, r28
    2490:	87 59       	subi	r24, 0x97	; 151
    2492:	9f 4f       	sbci	r25, 0xFF	; 255
    2494:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2498:	00 e0       	ldi	r16, 0x00	; 0
    249a:	10 e0       	ldi	r17, 0x00	; 0
    249c:	98 01       	movw	r18, r16
    249e:	b9 01       	movw	r22, r18
    24a0:	a8 01       	movw	r20, r16
    24a2:	ce 01       	movw	r24, r28
    24a4:	8f 58       	subi	r24, 0x8F	; 143
    24a6:	9f 4f       	sbci	r25, 0xFF	; 255
    24a8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    24ac:	00 e0       	ldi	r16, 0x00	; 0
    24ae:	10 e0       	ldi	r17, 0x00	; 0
    24b0:	98 01       	movw	r18, r16
    24b2:	40 e0       	ldi	r20, 0x00	; 0
    24b4:	50 e0       	ldi	r21, 0x00	; 0
    24b6:	60 e8       	ldi	r22, 0x80	; 128
    24b8:	7f e3       	ldi	r23, 0x3F	; 63
    24ba:	ce 01       	movw	r24, r28
    24bc:	87 58       	subi	r24, 0x87	; 135
    24be:	9f 4f       	sbci	r25, 0xFF	; 255
    24c0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    24c4:	cb 57       	subi	r28, 0x7B	; 123
    24c6:	df 4f       	sbci	r29, 0xFF	; 255
    24c8:	79 82       	std	Y+1, r7	; 0x01
    24ca:	68 82       	st	Y, r6
    24cc:	c5 58       	subi	r28, 0x85	; 133
    24ce:	d0 40       	sbci	r29, 0x00	; 0
    24d0:	c9 57       	subi	r28, 0x79	; 121
    24d2:	df 4f       	sbci	r29, 0xFF	; 255
    24d4:	99 82       	std	Y+1, r9	; 0x01
    24d6:	88 82       	st	Y, r8
    24d8:	c7 58       	subi	r28, 0x87	; 135
    24da:	d0 40       	sbci	r29, 0x00	; 0
    24dc:	cf 57       	subi	r28, 0x7F	; 127
    24de:	df 4f       	sbci	r29, 0xFF	; 255
    24e0:	b9 82       	std	Y+1, r11	; 0x01
    24e2:	a8 82       	st	Y, r10
    24e4:	c1 58       	subi	r28, 0x81	; 129
    24e6:	d0 40       	sbci	r29, 0x00	; 0
    24e8:	cd 57       	subi	r28, 0x7D	; 125
    24ea:	df 4f       	sbci	r29, 0xFF	; 255
    24ec:	d9 82       	std	Y+1, r13	; 0x01
    24ee:	c8 82       	st	Y, r12
    24f0:	c3 58       	subi	r28, 0x83	; 131
    24f2:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),dec_matrix),QB_SIZE2);
    24f4:	9e 01       	movw	r18, r28
    24f6:	2f 57       	subi	r18, 0x7F	; 127
    24f8:	3f 4f       	sbci	r19, 0xFF	; 255
    24fa:	ae 01       	movw	r20, r28
    24fc:	4b 57       	subi	r20, 0x7B	; 123
    24fe:	5f 4f       	sbci	r21, 0xFF	; 255
    2500:	62 e0       	ldi	r22, 0x02	; 2
    2502:	70 e0       	ldi	r23, 0x00	; 0
    2504:	c7 01       	movw	r24, r14
    2506:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    250a:	ae 01       	movw	r20, r28
    250c:	4f 5f       	subi	r20, 0xFF	; 255
    250e:	5f 4f       	sbci	r21, 0xFF	; 255
    2510:	bc 01       	movw	r22, r24
    2512:	c7 01       	movw	r24, r14
    2514:	0e 94 cd 07 	call	0xf9a	; 0xf9a <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    2518:	42 e0       	ldi	r20, 0x02	; 2
    251a:	50 e0       	ldi	r21, 0x00	; 0
    251c:	bc 01       	movw	r22, r24
    251e:	c7 01       	movw	r24, r14
    2520:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    2524:	c8 57       	subi	r28, 0x78	; 120
    2526:	df 4f       	sbci	r29, 0xFF	; 255
    2528:	0f b6       	in	r0, 0x3f	; 63
    252a:	f8 94       	cli
    252c:	de bf       	out	0x3e, r29	; 62
    252e:	0f be       	out	0x3f, r0	; 63
    2530:	cd bf       	out	0x3d, r28	; 61
    2532:	df 91       	pop	r29
    2534:	cf 91       	pop	r28
    2536:	1f 91       	pop	r17
    2538:	0f 91       	pop	r16
    253a:	ff 90       	pop	r15
    253c:	ef 90       	pop	r14
    253e:	df 90       	pop	r13
    2540:	cf 90       	pop	r12
    2542:	bf 90       	pop	r11
    2544:	af 90       	pop	r10
    2546:	9f 90       	pop	r9
    2548:	8f 90       	pop	r8
    254a:	7f 90       	pop	r7
    254c:	6f 90       	pop	r6
    254e:	08 95       	ret

00002550 <_ZN5Gates3ROXEiii>:
int * Gates::ROX(int theta,int phi,int delta){
    2550:	2f 92       	push	r2
    2552:	3f 92       	push	r3
    2554:	4f 92       	push	r4
    2556:	5f 92       	push	r5
    2558:	6f 92       	push	r6
    255a:	7f 92       	push	r7
    255c:	8f 92       	push	r8
    255e:	9f 92       	push	r9
    2560:	af 92       	push	r10
    2562:	bf 92       	push	r11
    2564:	cf 92       	push	r12
    2566:	df 92       	push	r13
    2568:	ef 92       	push	r14
    256a:	ff 92       	push	r15
    256c:	0f 93       	push	r16
    256e:	1f 93       	push	r17
    2570:	cf 93       	push	r28
    2572:	df 93       	push	r29
    2574:	cd b7       	in	r28, 0x3d	; 61
    2576:	de b7       	in	r29, 0x3e	; 62
    2578:	a4 97       	sbiw	r28, 0x24	; 36
    257a:	0f b6       	in	r0, 0x3f	; 63
    257c:	f8 94       	cli
    257e:	de bf       	out	0x3e, r29	; 62
    2580:	0f be       	out	0x3f, r0	; 63
    2582:	cd bf       	out	0x3d, r28	; 61
    2584:	7c 01       	movw	r14, r24
    2586:	1b 01       	movw	r2, r22
    2588:	6a 01       	movw	r12, r20
	float delta_float=(delta*M_PI)/180;
    258a:	b9 01       	movw	r22, r18
    258c:	88 27       	eor	r24, r24
    258e:	77 fd       	sbrc	r23, 7
    2590:	80 95       	com	r24
    2592:	98 2f       	mov	r25, r24
    2594:	0e 94 c4 28 	call	0x5188	; 0x5188 <__floatsisf>
    2598:	2b ed       	ldi	r18, 0xDB	; 219
    259a:	3f e0       	ldi	r19, 0x0F	; 15
    259c:	49 e4       	ldi	r20, 0x49	; 73
    259e:	50 e4       	ldi	r21, 0x40	; 64
    25a0:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
    25a4:	20 e0       	ldi	r18, 0x00	; 0
    25a6:	30 e0       	ldi	r19, 0x00	; 0
    25a8:	44 e3       	ldi	r20, 0x34	; 52
    25aa:	53 e4       	ldi	r21, 0x43	; 67
    25ac:	0e 94 f8 27 	call	0x4ff0	; 0x4ff0 <__divsf3>
	Complex rox_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(cos(delta_float/2),0), Complex(0,-sin(delta_float/2))},
    25b0:	20 e0       	ldi	r18, 0x00	; 0
    25b2:	30 e0       	ldi	r19, 0x00	; 0
    25b4:	40 e0       	ldi	r20, 0x00	; 0
    25b6:	5f e3       	ldi	r21, 0x3F	; 63
    25b8:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
    25bc:	4b 01       	movw	r8, r22
    25be:	5c 01       	movw	r10, r24
    25c0:	0e 94 f5 27 	call	0x4fea	; 0x4fea <cos>
    25c4:	2b 01       	movw	r4, r22
    25c6:	3c 01       	movw	r6, r24
														 {Complex(0,-sin(delta_float/2)),Complex(cos(delta_float/2),0)}};
    25c8:	00 e0       	ldi	r16, 0x00	; 0
    25ca:	10 e0       	ldi	r17, 0x00	; 0
    25cc:	98 01       	movw	r18, r16
    25ce:	ab 01       	movw	r20, r22
    25d0:	bc 01       	movw	r22, r24
    25d2:	ce 01       	movw	r24, r28
    25d4:	01 96       	adiw	r24, 0x01	; 1
    25d6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),dec_matrix),QB_SIZE2);
}
int * Gates::ROX(int theta,int phi,int delta){
	float delta_float=(delta*M_PI)/180;
	Complex rox_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(cos(delta_float/2),0), Complex(0,-sin(delta_float/2))},
    25da:	c5 01       	movw	r24, r10
    25dc:	b4 01       	movw	r22, r8
    25de:	0e 94 09 2b 	call	0x5612	; 0x5612 <sin>
														 {Complex(0,-sin(delta_float/2)),Complex(cos(delta_float/2),0)}};
    25e2:	4b 01       	movw	r8, r22
    25e4:	5c 01       	movw	r10, r24
    25e6:	b7 fa       	bst	r11, 7
    25e8:	b0 94       	com	r11
    25ea:	b7 f8       	bld	r11, 7
    25ec:	b0 94       	com	r11
    25ee:	95 01       	movw	r18, r10
    25f0:	84 01       	movw	r16, r8
    25f2:	40 e0       	ldi	r20, 0x00	; 0
    25f4:	50 e0       	ldi	r21, 0x00	; 0
    25f6:	ba 01       	movw	r22, r20
    25f8:	ce 01       	movw	r24, r28
    25fa:	09 96       	adiw	r24, 0x09	; 9
    25fc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2600:	95 01       	movw	r18, r10
    2602:	84 01       	movw	r16, r8
    2604:	40 e0       	ldi	r20, 0x00	; 0
    2606:	50 e0       	ldi	r21, 0x00	; 0
    2608:	ba 01       	movw	r22, r20
    260a:	ce 01       	movw	r24, r28
    260c:	41 96       	adiw	r24, 0x11	; 17
    260e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2612:	00 e0       	ldi	r16, 0x00	; 0
    2614:	10 e0       	ldi	r17, 0x00	; 0
    2616:	98 01       	movw	r18, r16
    2618:	b3 01       	movw	r22, r6
    261a:	a2 01       	movw	r20, r4
    261c:	ce 01       	movw	r24, r28
    261e:	49 96       	adiw	r24, 0x19	; 25
    2620:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    2624:	3c a2       	std	Y+36, r3	; 0x24
    2626:	2b a2       	std	Y+35, r2	; 0x23
    2628:	da a2       	std	Y+34, r13	; 0x22
    262a:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),rox_matrix),QB_SIZE1);		
    262c:	9e 01       	movw	r18, r28
    262e:	2f 5d       	subi	r18, 0xDF	; 223
    2630:	3f 4f       	sbci	r19, 0xFF	; 255
    2632:	ae 01       	movw	r20, r28
    2634:	4d 5d       	subi	r20, 0xDD	; 221
    2636:	5f 4f       	sbci	r21, 0xFF	; 255
    2638:	61 e0       	ldi	r22, 0x01	; 1
    263a:	70 e0       	ldi	r23, 0x00	; 0
    263c:	c7 01       	movw	r24, r14
    263e:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    2642:	ae 01       	movw	r20, r28
    2644:	4f 5f       	subi	r20, 0xFF	; 255
    2646:	5f 4f       	sbci	r21, 0xFF	; 255
    2648:	bc 01       	movw	r22, r24
    264a:	c7 01       	movw	r24, r14
    264c:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    2650:	41 e0       	ldi	r20, 0x01	; 1
    2652:	50 e0       	ldi	r21, 0x00	; 0
    2654:	bc 01       	movw	r22, r24
    2656:	c7 01       	movw	r24, r14
    2658:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    265c:	a4 96       	adiw	r28, 0x24	; 36
    265e:	0f b6       	in	r0, 0x3f	; 63
    2660:	f8 94       	cli
    2662:	de bf       	out	0x3e, r29	; 62
    2664:	0f be       	out	0x3f, r0	; 63
    2666:	cd bf       	out	0x3d, r28	; 61
    2668:	df 91       	pop	r29
    266a:	cf 91       	pop	r28
    266c:	1f 91       	pop	r17
    266e:	0f 91       	pop	r16
    2670:	ff 90       	pop	r15
    2672:	ef 90       	pop	r14
    2674:	df 90       	pop	r13
    2676:	cf 90       	pop	r12
    2678:	bf 90       	pop	r11
    267a:	af 90       	pop	r10
    267c:	9f 90       	pop	r9
    267e:	8f 90       	pop	r8
    2680:	7f 90       	pop	r7
    2682:	6f 90       	pop	r6
    2684:	5f 90       	pop	r5
    2686:	4f 90       	pop	r4
    2688:	3f 90       	pop	r3
    268a:	2f 90       	pop	r2
    268c:	08 95       	ret

0000268e <_ZN5Gates3ROYEiii>:
int * Gates::ROY(int theta,int phi,int delta){
    268e:	2f 92       	push	r2
    2690:	3f 92       	push	r3
    2692:	4f 92       	push	r4
    2694:	5f 92       	push	r5
    2696:	6f 92       	push	r6
    2698:	7f 92       	push	r7
    269a:	8f 92       	push	r8
    269c:	9f 92       	push	r9
    269e:	af 92       	push	r10
    26a0:	bf 92       	push	r11
    26a2:	cf 92       	push	r12
    26a4:	df 92       	push	r13
    26a6:	ef 92       	push	r14
    26a8:	ff 92       	push	r15
    26aa:	0f 93       	push	r16
    26ac:	1f 93       	push	r17
    26ae:	cf 93       	push	r28
    26b0:	df 93       	push	r29
    26b2:	cd b7       	in	r28, 0x3d	; 61
    26b4:	de b7       	in	r29, 0x3e	; 62
    26b6:	a4 97       	sbiw	r28, 0x24	; 36
    26b8:	0f b6       	in	r0, 0x3f	; 63
    26ba:	f8 94       	cli
    26bc:	de bf       	out	0x3e, r29	; 62
    26be:	0f be       	out	0x3f, r0	; 63
    26c0:	cd bf       	out	0x3d, r28	; 61
    26c2:	7c 01       	movw	r14, r24
    26c4:	1b 01       	movw	r2, r22
    26c6:	6a 01       	movw	r12, r20
	float delta_float=(delta*M_PI)/180;
    26c8:	b9 01       	movw	r22, r18
    26ca:	88 27       	eor	r24, r24
    26cc:	77 fd       	sbrc	r23, 7
    26ce:	80 95       	com	r24
    26d0:	98 2f       	mov	r25, r24
    26d2:	0e 94 c4 28 	call	0x5188	; 0x5188 <__floatsisf>
    26d6:	2b ed       	ldi	r18, 0xDB	; 219
    26d8:	3f e0       	ldi	r19, 0x0F	; 15
    26da:	49 e4       	ldi	r20, 0x49	; 73
    26dc:	50 e4       	ldi	r21, 0x40	; 64
    26de:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
    26e2:	20 e0       	ldi	r18, 0x00	; 0
    26e4:	30 e0       	ldi	r19, 0x00	; 0
    26e6:	44 e3       	ldi	r20, 0x34	; 52
    26e8:	53 e4       	ldi	r21, 0x43	; 67
    26ea:	0e 94 f8 27 	call	0x4ff0	; 0x4ff0 <__divsf3>
	Complex roy_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(cos(delta_float/2),0),Complex(-sin(delta_float/2),0)},
    26ee:	20 e0       	ldi	r18, 0x00	; 0
    26f0:	30 e0       	ldi	r19, 0x00	; 0
    26f2:	40 e0       	ldi	r20, 0x00	; 0
    26f4:	5f e3       	ldi	r21, 0x3F	; 63
    26f6:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
    26fa:	4b 01       	movw	r8, r22
    26fc:	5c 01       	movw	r10, r24
    26fe:	0e 94 f5 27 	call	0x4fea	; 0x4fea <cos>
    2702:	2b 01       	movw	r4, r22
    2704:	3c 01       	movw	r6, r24
														 {Complex(sin(delta_float/2),0),Complex(cos(delta_float/2),0)}};
    2706:	00 e0       	ldi	r16, 0x00	; 0
    2708:	10 e0       	ldi	r17, 0x00	; 0
    270a:	98 01       	movw	r18, r16
    270c:	ab 01       	movw	r20, r22
    270e:	bc 01       	movw	r22, r24
    2710:	ce 01       	movw	r24, r28
    2712:	01 96       	adiw	r24, 0x01	; 1
    2714:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),rox_matrix),QB_SIZE1);		
}
int * Gates::ROY(int theta,int phi,int delta){
	float delta_float=(delta*M_PI)/180;
	Complex roy_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(cos(delta_float/2),0),Complex(-sin(delta_float/2),0)},
    2718:	c5 01       	movw	r24, r10
    271a:	b4 01       	movw	r22, r8
    271c:	0e 94 09 2b 	call	0x5612	; 0x5612 <sin>
    2720:	4b 01       	movw	r8, r22
    2722:	5c 01       	movw	r10, r24
														 {Complex(sin(delta_float/2),0),Complex(cos(delta_float/2),0)}};
    2724:	ab 01       	movw	r20, r22
    2726:	bc 01       	movw	r22, r24
    2728:	70 58       	subi	r23, 0x80	; 128
    272a:	00 e0       	ldi	r16, 0x00	; 0
    272c:	10 e0       	ldi	r17, 0x00	; 0
    272e:	98 01       	movw	r18, r16
    2730:	ce 01       	movw	r24, r28
    2732:	09 96       	adiw	r24, 0x09	; 9
    2734:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2738:	00 e0       	ldi	r16, 0x00	; 0
    273a:	10 e0       	ldi	r17, 0x00	; 0
    273c:	98 01       	movw	r18, r16
    273e:	b5 01       	movw	r22, r10
    2740:	a4 01       	movw	r20, r8
    2742:	ce 01       	movw	r24, r28
    2744:	41 96       	adiw	r24, 0x11	; 17
    2746:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    274a:	00 e0       	ldi	r16, 0x00	; 0
    274c:	10 e0       	ldi	r17, 0x00	; 0
    274e:	98 01       	movw	r18, r16
    2750:	b3 01       	movw	r22, r6
    2752:	a2 01       	movw	r20, r4
    2754:	ce 01       	movw	r24, r28
    2756:	49 96       	adiw	r24, 0x19	; 25
    2758:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    275c:	3c a2       	std	Y+36, r3	; 0x24
    275e:	2b a2       	std	Y+35, r2	; 0x23
    2760:	da a2       	std	Y+34, r13	; 0x22
    2762:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),roy_matrix),QB_SIZE1);
    2764:	9e 01       	movw	r18, r28
    2766:	2f 5d       	subi	r18, 0xDF	; 223
    2768:	3f 4f       	sbci	r19, 0xFF	; 255
    276a:	ae 01       	movw	r20, r28
    276c:	4d 5d       	subi	r20, 0xDD	; 221
    276e:	5f 4f       	sbci	r21, 0xFF	; 255
    2770:	61 e0       	ldi	r22, 0x01	; 1
    2772:	70 e0       	ldi	r23, 0x00	; 0
    2774:	c7 01       	movw	r24, r14
    2776:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    277a:	ae 01       	movw	r20, r28
    277c:	4f 5f       	subi	r20, 0xFF	; 255
    277e:	5f 4f       	sbci	r21, 0xFF	; 255
    2780:	bc 01       	movw	r22, r24
    2782:	c7 01       	movw	r24, r14
    2784:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    2788:	41 e0       	ldi	r20, 0x01	; 1
    278a:	50 e0       	ldi	r21, 0x00	; 0
    278c:	bc 01       	movw	r22, r24
    278e:	c7 01       	movw	r24, r14
    2790:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    2794:	a4 96       	adiw	r28, 0x24	; 36
    2796:	0f b6       	in	r0, 0x3f	; 63
    2798:	f8 94       	cli
    279a:	de bf       	out	0x3e, r29	; 62
    279c:	0f be       	out	0x3f, r0	; 63
    279e:	cd bf       	out	0x3d, r28	; 61
    27a0:	df 91       	pop	r29
    27a2:	cf 91       	pop	r28
    27a4:	1f 91       	pop	r17
    27a6:	0f 91       	pop	r16
    27a8:	ff 90       	pop	r15
    27aa:	ef 90       	pop	r14
    27ac:	df 90       	pop	r13
    27ae:	cf 90       	pop	r12
    27b0:	bf 90       	pop	r11
    27b2:	af 90       	pop	r10
    27b4:	9f 90       	pop	r9
    27b6:	8f 90       	pop	r8
    27b8:	7f 90       	pop	r7
    27ba:	6f 90       	pop	r6
    27bc:	5f 90       	pop	r5
    27be:	4f 90       	pop	r4
    27c0:	3f 90       	pop	r3
    27c2:	2f 90       	pop	r2
    27c4:	08 95       	ret

000027c6 <_ZN5Gates3ROZEiii>:
int * Gates::ROZ(int theta,int phi,int delta){
    27c6:	4f 92       	push	r4
    27c8:	5f 92       	push	r5
    27ca:	6f 92       	push	r6
    27cc:	7f 92       	push	r7
    27ce:	af 92       	push	r10
    27d0:	bf 92       	push	r11
    27d2:	cf 92       	push	r12
    27d4:	df 92       	push	r13
    27d6:	ef 92       	push	r14
    27d8:	ff 92       	push	r15
    27da:	0f 93       	push	r16
    27dc:	1f 93       	push	r17
    27de:	cf 93       	push	r28
    27e0:	df 93       	push	r29
    27e2:	cd b7       	in	r28, 0x3d	; 61
    27e4:	de b7       	in	r29, 0x3e	; 62
    27e6:	a4 97       	sbiw	r28, 0x24	; 36
    27e8:	0f b6       	in	r0, 0x3f	; 63
    27ea:	f8 94       	cli
    27ec:	de bf       	out	0x3e, r29	; 62
    27ee:	0f be       	out	0x3f, r0	; 63
    27f0:	cd bf       	out	0x3d, r28	; 61
    27f2:	7c 01       	movw	r14, r24
    27f4:	5b 01       	movw	r10, r22
    27f6:	6a 01       	movw	r12, r20
	float delta_float=(delta*M_PI)/180;
    27f8:	b9 01       	movw	r22, r18
    27fa:	88 27       	eor	r24, r24
    27fc:	77 fd       	sbrc	r23, 7
    27fe:	80 95       	com	r24
    2800:	98 2f       	mov	r25, r24
    2802:	0e 94 c4 28 	call	0x5188	; 0x5188 <__floatsisf>
    2806:	2b ed       	ldi	r18, 0xDB	; 219
    2808:	3f e0       	ldi	r19, 0x0F	; 15
    280a:	49 e4       	ldi	r20, 0x49	; 73
    280c:	50 e4       	ldi	r21, 0x40	; 64
    280e:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
    2812:	20 e0       	ldi	r18, 0x00	; 0
    2814:	30 e0       	ldi	r19, 0x00	; 0
    2816:	44 e3       	ldi	r20, 0x34	; 52
    2818:	53 e4       	ldi	r21, 0x43	; 67
    281a:	0e 94 f8 27 	call	0x4ff0	; 0x4ff0 <__divsf3>
    281e:	2b 01       	movw	r4, r22
    2820:	3c 01       	movw	r6, r24
	Complex roy_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(0,exp(-delta_float/2)),Complex(0,0)},
    2822:	90 58       	subi	r25, 0x80	; 128
    2824:	20 e0       	ldi	r18, 0x00	; 0
    2826:	30 e0       	ldi	r19, 0x00	; 0
    2828:	40 e0       	ldi	r20, 0x00	; 0
    282a:	5f e3       	ldi	r21, 0x3F	; 63
    282c:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
    2830:	0e 94 65 28 	call	0x50ca	; 0x50ca <exp>
    2834:	8b 01       	movw	r16, r22
    2836:	9c 01       	movw	r18, r24
														 {Complex(0,0),		  		     Complex(0,exp(delta_float/2))}};
    2838:	40 e0       	ldi	r20, 0x00	; 0
    283a:	50 e0       	ldi	r21, 0x00	; 0
    283c:	ba 01       	movw	r22, r20
    283e:	ce 01       	movw	r24, r28
    2840:	01 96       	adiw	r24, 0x01	; 1
    2842:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2846:	00 e0       	ldi	r16, 0x00	; 0
    2848:	10 e0       	ldi	r17, 0x00	; 0
    284a:	98 01       	movw	r18, r16
    284c:	b9 01       	movw	r22, r18
    284e:	a8 01       	movw	r20, r16
    2850:	ce 01       	movw	r24, r28
    2852:	09 96       	adiw	r24, 0x09	; 9
    2854:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2858:	00 e0       	ldi	r16, 0x00	; 0
    285a:	10 e0       	ldi	r17, 0x00	; 0
    285c:	98 01       	movw	r18, r16
    285e:	b9 01       	movw	r22, r18
    2860:	a8 01       	movw	r20, r16
    2862:	ce 01       	movw	r24, r28
    2864:	41 96       	adiw	r24, 0x11	; 17
    2866:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    286a:	20 e0       	ldi	r18, 0x00	; 0
    286c:	30 e0       	ldi	r19, 0x00	; 0
    286e:	40 e0       	ldi	r20, 0x00	; 0
    2870:	5f e3       	ldi	r21, 0x3F	; 63
    2872:	c3 01       	movw	r24, r6
    2874:	b2 01       	movw	r22, r4
    2876:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
    287a:	0e 94 65 28 	call	0x50ca	; 0x50ca <exp>
    287e:	8b 01       	movw	r16, r22
    2880:	9c 01       	movw	r18, r24
    2882:	40 e0       	ldi	r20, 0x00	; 0
    2884:	50 e0       	ldi	r21, 0x00	; 0
    2886:	ba 01       	movw	r22, r20
    2888:	ce 01       	movw	r24, r28
    288a:	49 96       	adiw	r24, 0x19	; 25
    288c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    2890:	bc a2       	std	Y+36, r11	; 0x24
    2892:	ab a2       	std	Y+35, r10	; 0x23
    2894:	da a2       	std	Y+34, r13	; 0x22
    2896:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),roy_matrix),QB_SIZE1);
    2898:	9e 01       	movw	r18, r28
    289a:	2f 5d       	subi	r18, 0xDF	; 223
    289c:	3f 4f       	sbci	r19, 0xFF	; 255
    289e:	ae 01       	movw	r20, r28
    28a0:	4d 5d       	subi	r20, 0xDD	; 221
    28a2:	5f 4f       	sbci	r21, 0xFF	; 255
    28a4:	61 e0       	ldi	r22, 0x01	; 1
    28a6:	70 e0       	ldi	r23, 0x00	; 0
    28a8:	c7 01       	movw	r24, r14
    28aa:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    28ae:	ae 01       	movw	r20, r28
    28b0:	4f 5f       	subi	r20, 0xFF	; 255
    28b2:	5f 4f       	sbci	r21, 0xFF	; 255
    28b4:	bc 01       	movw	r22, r24
    28b6:	c7 01       	movw	r24, r14
    28b8:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    28bc:	41 e0       	ldi	r20, 0x01	; 1
    28be:	50 e0       	ldi	r21, 0x00	; 0
    28c0:	bc 01       	movw	r22, r24
    28c2:	c7 01       	movw	r24, r14
    28c4:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    28c8:	a4 96       	adiw	r28, 0x24	; 36
    28ca:	0f b6       	in	r0, 0x3f	; 63
    28cc:	f8 94       	cli
    28ce:	de bf       	out	0x3e, r29	; 62
    28d0:	0f be       	out	0x3f, r0	; 63
    28d2:	cd bf       	out	0x3d, r28	; 61
    28d4:	df 91       	pop	r29
    28d6:	cf 91       	pop	r28
    28d8:	1f 91       	pop	r17
    28da:	0f 91       	pop	r16
    28dc:	ff 90       	pop	r15
    28de:	ef 90       	pop	r14
    28e0:	df 90       	pop	r13
    28e2:	cf 90       	pop	r12
    28e4:	bf 90       	pop	r11
    28e6:	af 90       	pop	r10
    28e8:	7f 90       	pop	r7
    28ea:	6f 90       	pop	r6
    28ec:	5f 90       	pop	r5
    28ee:	4f 90       	pop	r4
    28f0:	08 95       	ret

000028f2 <_ZN5Gates3CSWEiiiiii>:
int * Gates::CSW(int theta1, int phi1,int theta2,int phi2,int theta3,int phi3){
    28f2:	2f 92       	push	r2
    28f4:	3f 92       	push	r3
    28f6:	4f 92       	push	r4
    28f8:	5f 92       	push	r5
    28fa:	6f 92       	push	r6
    28fc:	7f 92       	push	r7
    28fe:	8f 92       	push	r8
    2900:	9f 92       	push	r9
    2902:	af 92       	push	r10
    2904:	bf 92       	push	r11
    2906:	cf 92       	push	r12
    2908:	df 92       	push	r13
    290a:	ef 92       	push	r14
    290c:	ff 92       	push	r15
    290e:	0f 93       	push	r16
    2910:	1f 93       	push	r17
    2912:	cf 93       	push	r28
    2914:	df 93       	push	r29
    2916:	cd b7       	in	r28, 0x3d	; 61
    2918:	de b7       	in	r29, 0x3e	; 62
    291a:	cc 50       	subi	r28, 0x0C	; 12
    291c:	d2 40       	sbci	r29, 0x02	; 2
    291e:	0f b6       	in	r0, 0x3f	; 63
    2920:	f8 94       	cli
    2922:	de bf       	out	0x3e, r29	; 62
    2924:	0f be       	out	0x3f, r0	; 63
    2926:	cd bf       	out	0x3d, r28	; 61
    2928:	5c 01       	movw	r10, r24
    292a:	3b 01       	movw	r6, r22
    292c:	2a 01       	movw	r4, r20
    292e:	49 01       	movw	r8, r18
    2930:	18 01       	movw	r2, r16
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)}};
    2932:	00 e0       	ldi	r16, 0x00	; 0
    2934:	10 e0       	ldi	r17, 0x00	; 0
    2936:	98 01       	movw	r18, r16
    2938:	40 e0       	ldi	r20, 0x00	; 0
    293a:	50 e0       	ldi	r21, 0x00	; 0
    293c:	60 e8       	ldi	r22, 0x80	; 128
    293e:	7f e3       	ldi	r23, 0x3F	; 63
    2940:	ce 01       	movw	r24, r28
    2942:	01 96       	adiw	r24, 0x01	; 1
    2944:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2948:	00 e0       	ldi	r16, 0x00	; 0
    294a:	10 e0       	ldi	r17, 0x00	; 0
    294c:	98 01       	movw	r18, r16
    294e:	b9 01       	movw	r22, r18
    2950:	a8 01       	movw	r20, r16
    2952:	ce 01       	movw	r24, r28
    2954:	09 96       	adiw	r24, 0x09	; 9
    2956:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    295a:	00 e0       	ldi	r16, 0x00	; 0
    295c:	10 e0       	ldi	r17, 0x00	; 0
    295e:	98 01       	movw	r18, r16
    2960:	b9 01       	movw	r22, r18
    2962:	a8 01       	movw	r20, r16
    2964:	ce 01       	movw	r24, r28
    2966:	41 96       	adiw	r24, 0x11	; 17
    2968:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    296c:	00 e0       	ldi	r16, 0x00	; 0
    296e:	10 e0       	ldi	r17, 0x00	; 0
    2970:	98 01       	movw	r18, r16
    2972:	b9 01       	movw	r22, r18
    2974:	a8 01       	movw	r20, r16
    2976:	ce 01       	movw	r24, r28
    2978:	49 96       	adiw	r24, 0x19	; 25
    297a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    297e:	00 e0       	ldi	r16, 0x00	; 0
    2980:	10 e0       	ldi	r17, 0x00	; 0
    2982:	98 01       	movw	r18, r16
    2984:	b9 01       	movw	r22, r18
    2986:	a8 01       	movw	r20, r16
    2988:	ce 01       	movw	r24, r28
    298a:	81 96       	adiw	r24, 0x21	; 33
    298c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2990:	00 e0       	ldi	r16, 0x00	; 0
    2992:	10 e0       	ldi	r17, 0x00	; 0
    2994:	98 01       	movw	r18, r16
    2996:	b9 01       	movw	r22, r18
    2998:	a8 01       	movw	r20, r16
    299a:	ce 01       	movw	r24, r28
    299c:	89 96       	adiw	r24, 0x29	; 41
    299e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    29a2:	00 e0       	ldi	r16, 0x00	; 0
    29a4:	10 e0       	ldi	r17, 0x00	; 0
    29a6:	98 01       	movw	r18, r16
    29a8:	b9 01       	movw	r22, r18
    29aa:	a8 01       	movw	r20, r16
    29ac:	ce 01       	movw	r24, r28
    29ae:	c1 96       	adiw	r24, 0x31	; 49
    29b0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    29b4:	00 e0       	ldi	r16, 0x00	; 0
    29b6:	10 e0       	ldi	r17, 0x00	; 0
    29b8:	98 01       	movw	r18, r16
    29ba:	b9 01       	movw	r22, r18
    29bc:	a8 01       	movw	r20, r16
    29be:	ce 01       	movw	r24, r28
    29c0:	c9 96       	adiw	r24, 0x39	; 57
    29c2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    29c6:	00 e0       	ldi	r16, 0x00	; 0
    29c8:	10 e0       	ldi	r17, 0x00	; 0
    29ca:	98 01       	movw	r18, r16
    29cc:	b9 01       	movw	r22, r18
    29ce:	a8 01       	movw	r20, r16
    29d0:	ce 01       	movw	r24, r28
    29d2:	8f 5b       	subi	r24, 0xBF	; 191
    29d4:	9f 4f       	sbci	r25, 0xFF	; 255
    29d6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    29da:	00 e0       	ldi	r16, 0x00	; 0
    29dc:	10 e0       	ldi	r17, 0x00	; 0
    29de:	98 01       	movw	r18, r16
    29e0:	40 e0       	ldi	r20, 0x00	; 0
    29e2:	50 e0       	ldi	r21, 0x00	; 0
    29e4:	60 e8       	ldi	r22, 0x80	; 128
    29e6:	7f e3       	ldi	r23, 0x3F	; 63
    29e8:	ce 01       	movw	r24, r28
    29ea:	87 5b       	subi	r24, 0xB7	; 183
    29ec:	9f 4f       	sbci	r25, 0xFF	; 255
    29ee:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    29f2:	00 e0       	ldi	r16, 0x00	; 0
    29f4:	10 e0       	ldi	r17, 0x00	; 0
    29f6:	98 01       	movw	r18, r16
    29f8:	b9 01       	movw	r22, r18
    29fa:	a8 01       	movw	r20, r16
    29fc:	ce 01       	movw	r24, r28
    29fe:	8f 5a       	subi	r24, 0xAF	; 175
    2a00:	9f 4f       	sbci	r25, 0xFF	; 255
    2a02:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a06:	00 e0       	ldi	r16, 0x00	; 0
    2a08:	10 e0       	ldi	r17, 0x00	; 0
    2a0a:	98 01       	movw	r18, r16
    2a0c:	b9 01       	movw	r22, r18
    2a0e:	a8 01       	movw	r20, r16
    2a10:	ce 01       	movw	r24, r28
    2a12:	87 5a       	subi	r24, 0xA7	; 167
    2a14:	9f 4f       	sbci	r25, 0xFF	; 255
    2a16:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a1a:	00 e0       	ldi	r16, 0x00	; 0
    2a1c:	10 e0       	ldi	r17, 0x00	; 0
    2a1e:	98 01       	movw	r18, r16
    2a20:	b9 01       	movw	r22, r18
    2a22:	a8 01       	movw	r20, r16
    2a24:	ce 01       	movw	r24, r28
    2a26:	8f 59       	subi	r24, 0x9F	; 159
    2a28:	9f 4f       	sbci	r25, 0xFF	; 255
    2a2a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a2e:	00 e0       	ldi	r16, 0x00	; 0
    2a30:	10 e0       	ldi	r17, 0x00	; 0
    2a32:	98 01       	movw	r18, r16
    2a34:	b9 01       	movw	r22, r18
    2a36:	a8 01       	movw	r20, r16
    2a38:	ce 01       	movw	r24, r28
    2a3a:	87 59       	subi	r24, 0x97	; 151
    2a3c:	9f 4f       	sbci	r25, 0xFF	; 255
    2a3e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a42:	00 e0       	ldi	r16, 0x00	; 0
    2a44:	10 e0       	ldi	r17, 0x00	; 0
    2a46:	98 01       	movw	r18, r16
    2a48:	b9 01       	movw	r22, r18
    2a4a:	a8 01       	movw	r20, r16
    2a4c:	ce 01       	movw	r24, r28
    2a4e:	8f 58       	subi	r24, 0x8F	; 143
    2a50:	9f 4f       	sbci	r25, 0xFF	; 255
    2a52:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a56:	00 e0       	ldi	r16, 0x00	; 0
    2a58:	10 e0       	ldi	r17, 0x00	; 0
    2a5a:	98 01       	movw	r18, r16
    2a5c:	b9 01       	movw	r22, r18
    2a5e:	a8 01       	movw	r20, r16
    2a60:	ce 01       	movw	r24, r28
    2a62:	87 58       	subi	r24, 0x87	; 135
    2a64:	9f 4f       	sbci	r25, 0xFF	; 255
    2a66:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a6a:	00 e0       	ldi	r16, 0x00	; 0
    2a6c:	10 e0       	ldi	r17, 0x00	; 0
    2a6e:	98 01       	movw	r18, r16
    2a70:	b9 01       	movw	r22, r18
    2a72:	a8 01       	movw	r20, r16
    2a74:	ce 01       	movw	r24, r28
    2a76:	8f 57       	subi	r24, 0x7F	; 127
    2a78:	9f 4f       	sbci	r25, 0xFF	; 255
    2a7a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a7e:	00 e0       	ldi	r16, 0x00	; 0
    2a80:	10 e0       	ldi	r17, 0x00	; 0
    2a82:	98 01       	movw	r18, r16
    2a84:	b9 01       	movw	r22, r18
    2a86:	a8 01       	movw	r20, r16
    2a88:	ce 01       	movw	r24, r28
    2a8a:	87 57       	subi	r24, 0x77	; 119
    2a8c:	9f 4f       	sbci	r25, 0xFF	; 255
    2a8e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2a92:	00 e0       	ldi	r16, 0x00	; 0
    2a94:	10 e0       	ldi	r17, 0x00	; 0
    2a96:	98 01       	movw	r18, r16
    2a98:	40 e0       	ldi	r20, 0x00	; 0
    2a9a:	50 e0       	ldi	r21, 0x00	; 0
    2a9c:	60 e8       	ldi	r22, 0x80	; 128
    2a9e:	7f e3       	ldi	r23, 0x3F	; 63
    2aa0:	ce 01       	movw	r24, r28
    2aa2:	8f 56       	subi	r24, 0x6F	; 111
    2aa4:	9f 4f       	sbci	r25, 0xFF	; 255
    2aa6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2aaa:	00 e0       	ldi	r16, 0x00	; 0
    2aac:	10 e0       	ldi	r17, 0x00	; 0
    2aae:	98 01       	movw	r18, r16
    2ab0:	b9 01       	movw	r22, r18
    2ab2:	a8 01       	movw	r20, r16
    2ab4:	ce 01       	movw	r24, r28
    2ab6:	87 56       	subi	r24, 0x67	; 103
    2ab8:	9f 4f       	sbci	r25, 0xFF	; 255
    2aba:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2abe:	00 e0       	ldi	r16, 0x00	; 0
    2ac0:	10 e0       	ldi	r17, 0x00	; 0
    2ac2:	98 01       	movw	r18, r16
    2ac4:	b9 01       	movw	r22, r18
    2ac6:	a8 01       	movw	r20, r16
    2ac8:	ce 01       	movw	r24, r28
    2aca:	8f 55       	subi	r24, 0x5F	; 95
    2acc:	9f 4f       	sbci	r25, 0xFF	; 255
    2ace:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2ad2:	00 e0       	ldi	r16, 0x00	; 0
    2ad4:	10 e0       	ldi	r17, 0x00	; 0
    2ad6:	98 01       	movw	r18, r16
    2ad8:	b9 01       	movw	r22, r18
    2ada:	a8 01       	movw	r20, r16
    2adc:	ce 01       	movw	r24, r28
    2ade:	87 55       	subi	r24, 0x57	; 87
    2ae0:	9f 4f       	sbci	r25, 0xFF	; 255
    2ae2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2ae6:	00 e0       	ldi	r16, 0x00	; 0
    2ae8:	10 e0       	ldi	r17, 0x00	; 0
    2aea:	98 01       	movw	r18, r16
    2aec:	b9 01       	movw	r22, r18
    2aee:	a8 01       	movw	r20, r16
    2af0:	ce 01       	movw	r24, r28
    2af2:	8f 54       	subi	r24, 0x4F	; 79
    2af4:	9f 4f       	sbci	r25, 0xFF	; 255
    2af6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2afa:	00 e0       	ldi	r16, 0x00	; 0
    2afc:	10 e0       	ldi	r17, 0x00	; 0
    2afe:	98 01       	movw	r18, r16
    2b00:	b9 01       	movw	r22, r18
    2b02:	a8 01       	movw	r20, r16
    2b04:	ce 01       	movw	r24, r28
    2b06:	87 54       	subi	r24, 0x47	; 71
    2b08:	9f 4f       	sbci	r25, 0xFF	; 255
    2b0a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b0e:	00 e0       	ldi	r16, 0x00	; 0
    2b10:	10 e0       	ldi	r17, 0x00	; 0
    2b12:	98 01       	movw	r18, r16
    2b14:	b9 01       	movw	r22, r18
    2b16:	a8 01       	movw	r20, r16
    2b18:	ce 01       	movw	r24, r28
    2b1a:	8f 53       	subi	r24, 0x3F	; 63
    2b1c:	9f 4f       	sbci	r25, 0xFF	; 255
    2b1e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b22:	00 e0       	ldi	r16, 0x00	; 0
    2b24:	10 e0       	ldi	r17, 0x00	; 0
    2b26:	98 01       	movw	r18, r16
    2b28:	b9 01       	movw	r22, r18
    2b2a:	a8 01       	movw	r20, r16
    2b2c:	ce 01       	movw	r24, r28
    2b2e:	87 53       	subi	r24, 0x37	; 55
    2b30:	9f 4f       	sbci	r25, 0xFF	; 255
    2b32:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b36:	00 e0       	ldi	r16, 0x00	; 0
    2b38:	10 e0       	ldi	r17, 0x00	; 0
    2b3a:	98 01       	movw	r18, r16
    2b3c:	b9 01       	movw	r22, r18
    2b3e:	a8 01       	movw	r20, r16
    2b40:	ce 01       	movw	r24, r28
    2b42:	8f 52       	subi	r24, 0x2F	; 47
    2b44:	9f 4f       	sbci	r25, 0xFF	; 255
    2b46:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b4a:	00 e0       	ldi	r16, 0x00	; 0
    2b4c:	10 e0       	ldi	r17, 0x00	; 0
    2b4e:	98 01       	movw	r18, r16
    2b50:	40 e0       	ldi	r20, 0x00	; 0
    2b52:	50 e0       	ldi	r21, 0x00	; 0
    2b54:	60 e8       	ldi	r22, 0x80	; 128
    2b56:	7f e3       	ldi	r23, 0x3F	; 63
    2b58:	ce 01       	movw	r24, r28
    2b5a:	87 52       	subi	r24, 0x27	; 39
    2b5c:	9f 4f       	sbci	r25, 0xFF	; 255
    2b5e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b62:	00 e0       	ldi	r16, 0x00	; 0
    2b64:	10 e0       	ldi	r17, 0x00	; 0
    2b66:	98 01       	movw	r18, r16
    2b68:	b9 01       	movw	r22, r18
    2b6a:	a8 01       	movw	r20, r16
    2b6c:	ce 01       	movw	r24, r28
    2b6e:	8f 51       	subi	r24, 0x1F	; 31
    2b70:	9f 4f       	sbci	r25, 0xFF	; 255
    2b72:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b76:	00 e0       	ldi	r16, 0x00	; 0
    2b78:	10 e0       	ldi	r17, 0x00	; 0
    2b7a:	98 01       	movw	r18, r16
    2b7c:	b9 01       	movw	r22, r18
    2b7e:	a8 01       	movw	r20, r16
    2b80:	ce 01       	movw	r24, r28
    2b82:	87 51       	subi	r24, 0x17	; 23
    2b84:	9f 4f       	sbci	r25, 0xFF	; 255
    2b86:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b8a:	00 e0       	ldi	r16, 0x00	; 0
    2b8c:	10 e0       	ldi	r17, 0x00	; 0
    2b8e:	98 01       	movw	r18, r16
    2b90:	b9 01       	movw	r22, r18
    2b92:	a8 01       	movw	r20, r16
    2b94:	ce 01       	movw	r24, r28
    2b96:	8f 50       	subi	r24, 0x0F	; 15
    2b98:	9f 4f       	sbci	r25, 0xFF	; 255
    2b9a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2b9e:	00 e0       	ldi	r16, 0x00	; 0
    2ba0:	10 e0       	ldi	r17, 0x00	; 0
    2ba2:	98 01       	movw	r18, r16
    2ba4:	b9 01       	movw	r22, r18
    2ba6:	a8 01       	movw	r20, r16
    2ba8:	ce 01       	movw	r24, r28
    2baa:	87 50       	subi	r24, 0x07	; 7
    2bac:	9f 4f       	sbci	r25, 0xFF	; 255
    2bae:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2bb2:	00 e0       	ldi	r16, 0x00	; 0
    2bb4:	10 e0       	ldi	r17, 0x00	; 0
    2bb6:	98 01       	movw	r18, r16
    2bb8:	b9 01       	movw	r22, r18
    2bba:	a8 01       	movw	r20, r16
    2bbc:	ce 01       	movw	r24, r28
    2bbe:	8f 5f       	subi	r24, 0xFF	; 255
    2bc0:	9e 4f       	sbci	r25, 0xFE	; 254
    2bc2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2bc6:	00 e0       	ldi	r16, 0x00	; 0
    2bc8:	10 e0       	ldi	r17, 0x00	; 0
    2bca:	98 01       	movw	r18, r16
    2bcc:	b9 01       	movw	r22, r18
    2bce:	a8 01       	movw	r20, r16
    2bd0:	ce 01       	movw	r24, r28
    2bd2:	87 5f       	subi	r24, 0xF7	; 247
    2bd4:	9e 4f       	sbci	r25, 0xFE	; 254
    2bd6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2bda:	00 e0       	ldi	r16, 0x00	; 0
    2bdc:	10 e0       	ldi	r17, 0x00	; 0
    2bde:	98 01       	movw	r18, r16
    2be0:	b9 01       	movw	r22, r18
    2be2:	a8 01       	movw	r20, r16
    2be4:	ce 01       	movw	r24, r28
    2be6:	8f 5e       	subi	r24, 0xEF	; 239
    2be8:	9e 4f       	sbci	r25, 0xFE	; 254
    2bea:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2bee:	00 e0       	ldi	r16, 0x00	; 0
    2bf0:	10 e0       	ldi	r17, 0x00	; 0
    2bf2:	98 01       	movw	r18, r16
    2bf4:	b9 01       	movw	r22, r18
    2bf6:	a8 01       	movw	r20, r16
    2bf8:	ce 01       	movw	r24, r28
    2bfa:	87 5e       	subi	r24, 0xE7	; 231
    2bfc:	9e 4f       	sbci	r25, 0xFE	; 254
    2bfe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c02:	00 e0       	ldi	r16, 0x00	; 0
    2c04:	10 e0       	ldi	r17, 0x00	; 0
    2c06:	98 01       	movw	r18, r16
    2c08:	40 e0       	ldi	r20, 0x00	; 0
    2c0a:	50 e0       	ldi	r21, 0x00	; 0
    2c0c:	60 e8       	ldi	r22, 0x80	; 128
    2c0e:	7f e3       	ldi	r23, 0x3F	; 63
    2c10:	ce 01       	movw	r24, r28
    2c12:	8f 5d       	subi	r24, 0xDF	; 223
    2c14:	9e 4f       	sbci	r25, 0xFE	; 254
    2c16:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c1a:	00 e0       	ldi	r16, 0x00	; 0
    2c1c:	10 e0       	ldi	r17, 0x00	; 0
    2c1e:	98 01       	movw	r18, r16
    2c20:	b9 01       	movw	r22, r18
    2c22:	a8 01       	movw	r20, r16
    2c24:	ce 01       	movw	r24, r28
    2c26:	87 5d       	subi	r24, 0xD7	; 215
    2c28:	9e 4f       	sbci	r25, 0xFE	; 254
    2c2a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c2e:	00 e0       	ldi	r16, 0x00	; 0
    2c30:	10 e0       	ldi	r17, 0x00	; 0
    2c32:	98 01       	movw	r18, r16
    2c34:	b9 01       	movw	r22, r18
    2c36:	a8 01       	movw	r20, r16
    2c38:	ce 01       	movw	r24, r28
    2c3a:	8f 5c       	subi	r24, 0xCF	; 207
    2c3c:	9e 4f       	sbci	r25, 0xFE	; 254
    2c3e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c42:	00 e0       	ldi	r16, 0x00	; 0
    2c44:	10 e0       	ldi	r17, 0x00	; 0
    2c46:	98 01       	movw	r18, r16
    2c48:	b9 01       	movw	r22, r18
    2c4a:	a8 01       	movw	r20, r16
    2c4c:	ce 01       	movw	r24, r28
    2c4e:	87 5c       	subi	r24, 0xC7	; 199
    2c50:	9e 4f       	sbci	r25, 0xFE	; 254
    2c52:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c56:	00 e0       	ldi	r16, 0x00	; 0
    2c58:	10 e0       	ldi	r17, 0x00	; 0
    2c5a:	98 01       	movw	r18, r16
    2c5c:	b9 01       	movw	r22, r18
    2c5e:	a8 01       	movw	r20, r16
    2c60:	ce 01       	movw	r24, r28
    2c62:	8f 5b       	subi	r24, 0xBF	; 191
    2c64:	9e 4f       	sbci	r25, 0xFE	; 254
    2c66:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c6a:	00 e0       	ldi	r16, 0x00	; 0
    2c6c:	10 e0       	ldi	r17, 0x00	; 0
    2c6e:	98 01       	movw	r18, r16
    2c70:	b9 01       	movw	r22, r18
    2c72:	a8 01       	movw	r20, r16
    2c74:	ce 01       	movw	r24, r28
    2c76:	87 5b       	subi	r24, 0xB7	; 183
    2c78:	9e 4f       	sbci	r25, 0xFE	; 254
    2c7a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c7e:	00 e0       	ldi	r16, 0x00	; 0
    2c80:	10 e0       	ldi	r17, 0x00	; 0
    2c82:	98 01       	movw	r18, r16
    2c84:	b9 01       	movw	r22, r18
    2c86:	a8 01       	movw	r20, r16
    2c88:	ce 01       	movw	r24, r28
    2c8a:	8f 5a       	subi	r24, 0xAF	; 175
    2c8c:	9e 4f       	sbci	r25, 0xFE	; 254
    2c8e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2c92:	00 e0       	ldi	r16, 0x00	; 0
    2c94:	10 e0       	ldi	r17, 0x00	; 0
    2c96:	98 01       	movw	r18, r16
    2c98:	b9 01       	movw	r22, r18
    2c9a:	a8 01       	movw	r20, r16
    2c9c:	ce 01       	movw	r24, r28
    2c9e:	87 5a       	subi	r24, 0xA7	; 167
    2ca0:	9e 4f       	sbci	r25, 0xFE	; 254
    2ca2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2ca6:	00 e0       	ldi	r16, 0x00	; 0
    2ca8:	10 e0       	ldi	r17, 0x00	; 0
    2caa:	98 01       	movw	r18, r16
    2cac:	b9 01       	movw	r22, r18
    2cae:	a8 01       	movw	r20, r16
    2cb0:	ce 01       	movw	r24, r28
    2cb2:	8f 59       	subi	r24, 0x9F	; 159
    2cb4:	9e 4f       	sbci	r25, 0xFE	; 254
    2cb6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2cba:	00 e0       	ldi	r16, 0x00	; 0
    2cbc:	10 e0       	ldi	r17, 0x00	; 0
    2cbe:	98 01       	movw	r18, r16
    2cc0:	b9 01       	movw	r22, r18
    2cc2:	a8 01       	movw	r20, r16
    2cc4:	ce 01       	movw	r24, r28
    2cc6:	87 59       	subi	r24, 0x97	; 151
    2cc8:	9e 4f       	sbci	r25, 0xFE	; 254
    2cca:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2cce:	00 e0       	ldi	r16, 0x00	; 0
    2cd0:	10 e0       	ldi	r17, 0x00	; 0
    2cd2:	98 01       	movw	r18, r16
    2cd4:	40 e0       	ldi	r20, 0x00	; 0
    2cd6:	50 e0       	ldi	r21, 0x00	; 0
    2cd8:	60 e8       	ldi	r22, 0x80	; 128
    2cda:	7f e3       	ldi	r23, 0x3F	; 63
    2cdc:	ce 01       	movw	r24, r28
    2cde:	8f 58       	subi	r24, 0x8F	; 143
    2ce0:	9e 4f       	sbci	r25, 0xFE	; 254
    2ce2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2ce6:	00 e0       	ldi	r16, 0x00	; 0
    2ce8:	10 e0       	ldi	r17, 0x00	; 0
    2cea:	98 01       	movw	r18, r16
    2cec:	b9 01       	movw	r22, r18
    2cee:	a8 01       	movw	r20, r16
    2cf0:	ce 01       	movw	r24, r28
    2cf2:	87 58       	subi	r24, 0x87	; 135
    2cf4:	9e 4f       	sbci	r25, 0xFE	; 254
    2cf6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2cfa:	00 e0       	ldi	r16, 0x00	; 0
    2cfc:	10 e0       	ldi	r17, 0x00	; 0
    2cfe:	98 01       	movw	r18, r16
    2d00:	b9 01       	movw	r22, r18
    2d02:	a8 01       	movw	r20, r16
    2d04:	ce 01       	movw	r24, r28
    2d06:	8f 57       	subi	r24, 0x7F	; 127
    2d08:	9e 4f       	sbci	r25, 0xFE	; 254
    2d0a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d0e:	00 e0       	ldi	r16, 0x00	; 0
    2d10:	10 e0       	ldi	r17, 0x00	; 0
    2d12:	98 01       	movw	r18, r16
    2d14:	b9 01       	movw	r22, r18
    2d16:	a8 01       	movw	r20, r16
    2d18:	ce 01       	movw	r24, r28
    2d1a:	87 57       	subi	r24, 0x77	; 119
    2d1c:	9e 4f       	sbci	r25, 0xFE	; 254
    2d1e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d22:	00 e0       	ldi	r16, 0x00	; 0
    2d24:	10 e0       	ldi	r17, 0x00	; 0
    2d26:	98 01       	movw	r18, r16
    2d28:	b9 01       	movw	r22, r18
    2d2a:	a8 01       	movw	r20, r16
    2d2c:	ce 01       	movw	r24, r28
    2d2e:	8f 56       	subi	r24, 0x6F	; 111
    2d30:	9e 4f       	sbci	r25, 0xFE	; 254
    2d32:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d36:	00 e0       	ldi	r16, 0x00	; 0
    2d38:	10 e0       	ldi	r17, 0x00	; 0
    2d3a:	98 01       	movw	r18, r16
    2d3c:	b9 01       	movw	r22, r18
    2d3e:	a8 01       	movw	r20, r16
    2d40:	ce 01       	movw	r24, r28
    2d42:	87 56       	subi	r24, 0x67	; 103
    2d44:	9e 4f       	sbci	r25, 0xFE	; 254
    2d46:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d4a:	00 e0       	ldi	r16, 0x00	; 0
    2d4c:	10 e0       	ldi	r17, 0x00	; 0
    2d4e:	98 01       	movw	r18, r16
    2d50:	b9 01       	movw	r22, r18
    2d52:	a8 01       	movw	r20, r16
    2d54:	ce 01       	movw	r24, r28
    2d56:	8f 55       	subi	r24, 0x5F	; 95
    2d58:	9e 4f       	sbci	r25, 0xFE	; 254
    2d5a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d5e:	00 e0       	ldi	r16, 0x00	; 0
    2d60:	10 e0       	ldi	r17, 0x00	; 0
    2d62:	98 01       	movw	r18, r16
    2d64:	40 e0       	ldi	r20, 0x00	; 0
    2d66:	50 e0       	ldi	r21, 0x00	; 0
    2d68:	60 e8       	ldi	r22, 0x80	; 128
    2d6a:	7f e3       	ldi	r23, 0x3F	; 63
    2d6c:	ce 01       	movw	r24, r28
    2d6e:	87 55       	subi	r24, 0x57	; 87
    2d70:	9e 4f       	sbci	r25, 0xFE	; 254
    2d72:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d76:	00 e0       	ldi	r16, 0x00	; 0
    2d78:	10 e0       	ldi	r17, 0x00	; 0
    2d7a:	98 01       	movw	r18, r16
    2d7c:	b9 01       	movw	r22, r18
    2d7e:	a8 01       	movw	r20, r16
    2d80:	ce 01       	movw	r24, r28
    2d82:	8f 54       	subi	r24, 0x4F	; 79
    2d84:	9e 4f       	sbci	r25, 0xFE	; 254
    2d86:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d8a:	00 e0       	ldi	r16, 0x00	; 0
    2d8c:	10 e0       	ldi	r17, 0x00	; 0
    2d8e:	98 01       	movw	r18, r16
    2d90:	b9 01       	movw	r22, r18
    2d92:	a8 01       	movw	r20, r16
    2d94:	ce 01       	movw	r24, r28
    2d96:	87 54       	subi	r24, 0x47	; 71
    2d98:	9e 4f       	sbci	r25, 0xFE	; 254
    2d9a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2d9e:	00 e0       	ldi	r16, 0x00	; 0
    2da0:	10 e0       	ldi	r17, 0x00	; 0
    2da2:	98 01       	movw	r18, r16
    2da4:	b9 01       	movw	r22, r18
    2da6:	a8 01       	movw	r20, r16
    2da8:	ce 01       	movw	r24, r28
    2daa:	8f 53       	subi	r24, 0x3F	; 63
    2dac:	9e 4f       	sbci	r25, 0xFE	; 254
    2dae:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2db2:	00 e0       	ldi	r16, 0x00	; 0
    2db4:	10 e0       	ldi	r17, 0x00	; 0
    2db6:	98 01       	movw	r18, r16
    2db8:	b9 01       	movw	r22, r18
    2dba:	a8 01       	movw	r20, r16
    2dbc:	ce 01       	movw	r24, r28
    2dbe:	87 53       	subi	r24, 0x37	; 55
    2dc0:	9e 4f       	sbci	r25, 0xFE	; 254
    2dc2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2dc6:	00 e0       	ldi	r16, 0x00	; 0
    2dc8:	10 e0       	ldi	r17, 0x00	; 0
    2dca:	98 01       	movw	r18, r16
    2dcc:	b9 01       	movw	r22, r18
    2dce:	a8 01       	movw	r20, r16
    2dd0:	ce 01       	movw	r24, r28
    2dd2:	8f 52       	subi	r24, 0x2F	; 47
    2dd4:	9e 4f       	sbci	r25, 0xFE	; 254
    2dd6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2dda:	00 e0       	ldi	r16, 0x00	; 0
    2ddc:	10 e0       	ldi	r17, 0x00	; 0
    2dde:	98 01       	movw	r18, r16
    2de0:	b9 01       	movw	r22, r18
    2de2:	a8 01       	movw	r20, r16
    2de4:	ce 01       	movw	r24, r28
    2de6:	87 52       	subi	r24, 0x27	; 39
    2de8:	9e 4f       	sbci	r25, 0xFE	; 254
    2dea:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2dee:	00 e0       	ldi	r16, 0x00	; 0
    2df0:	10 e0       	ldi	r17, 0x00	; 0
    2df2:	98 01       	movw	r18, r16
    2df4:	b9 01       	movw	r22, r18
    2df6:	a8 01       	movw	r20, r16
    2df8:	ce 01       	movw	r24, r28
    2dfa:	8f 51       	subi	r24, 0x1F	; 31
    2dfc:	9e 4f       	sbci	r25, 0xFE	; 254
    2dfe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2e02:	00 e0       	ldi	r16, 0x00	; 0
    2e04:	10 e0       	ldi	r17, 0x00	; 0
    2e06:	98 01       	movw	r18, r16
    2e08:	b9 01       	movw	r22, r18
    2e0a:	a8 01       	movw	r20, r16
    2e0c:	ce 01       	movw	r24, r28
    2e0e:	87 51       	subi	r24, 0x17	; 23
    2e10:	9e 4f       	sbci	r25, 0xFE	; 254
    2e12:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2e16:	00 e0       	ldi	r16, 0x00	; 0
    2e18:	10 e0       	ldi	r17, 0x00	; 0
    2e1a:	98 01       	movw	r18, r16
    2e1c:	b9 01       	movw	r22, r18
    2e1e:	a8 01       	movw	r20, r16
    2e20:	ce 01       	movw	r24, r28
    2e22:	8f 50       	subi	r24, 0x0F	; 15
    2e24:	9e 4f       	sbci	r25, 0xFE	; 254
    2e26:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2e2a:	00 e0       	ldi	r16, 0x00	; 0
    2e2c:	10 e0       	ldi	r17, 0x00	; 0
    2e2e:	98 01       	movw	r18, r16
    2e30:	40 e0       	ldi	r20, 0x00	; 0
    2e32:	50 e0       	ldi	r21, 0x00	; 0
    2e34:	60 e8       	ldi	r22, 0x80	; 128
    2e36:	7f e3       	ldi	r23, 0x3F	; 63
    2e38:	ce 01       	movw	r24, r28
    2e3a:	87 50       	subi	r24, 0x07	; 7
    2e3c:	9e 4f       	sbci	r25, 0xFE	; 254
    2e3e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE3]={theta1,theta2,theta3}; int phi_list[QB_SIZE3]={phi1,phi2,phi3};
    2e42:	c9 5f       	subi	r28, 0xF9	; 249
    2e44:	dd 4f       	sbci	r29, 0xFD	; 253
    2e46:	79 82       	std	Y+1, r7	; 0x01
    2e48:	68 82       	st	Y, r6
    2e4a:	c7 50       	subi	r28, 0x07	; 7
    2e4c:	d2 40       	sbci	r29, 0x02	; 2
    2e4e:	c7 5f       	subi	r28, 0xF7	; 247
    2e50:	dd 4f       	sbci	r29, 0xFD	; 253
    2e52:	99 82       	std	Y+1, r9	; 0x01
    2e54:	88 82       	st	Y, r8
    2e56:	c9 50       	subi	r28, 0x09	; 9
    2e58:	d2 40       	sbci	r29, 0x02	; 2
    2e5a:	c5 5f       	subi	r28, 0xF5	; 245
    2e5c:	dd 4f       	sbci	r29, 0xFD	; 253
    2e5e:	f9 82       	std	Y+1, r15	; 0x01
    2e60:	e8 82       	st	Y, r14
    2e62:	cb 50       	subi	r28, 0x0B	; 11
    2e64:	d2 40       	sbci	r29, 0x02	; 2
    2e66:	cf 5f       	subi	r28, 0xFF	; 255
    2e68:	dd 4f       	sbci	r29, 0xFD	; 253
    2e6a:	59 82       	std	Y+1, r5	; 0x01
    2e6c:	48 82       	st	Y, r4
    2e6e:	c1 50       	subi	r28, 0x01	; 1
    2e70:	d2 40       	sbci	r29, 0x02	; 2
    2e72:	cd 5f       	subi	r28, 0xFD	; 253
    2e74:	dd 4f       	sbci	r29, 0xFD	; 253
    2e76:	39 82       	std	Y+1, r3	; 0x01
    2e78:	28 82       	st	Y, r2
    2e7a:	c3 50       	subi	r28, 0x03	; 3
    2e7c:	d2 40       	sbci	r29, 0x02	; 2
    2e7e:	cb 5f       	subi	r28, 0xFB	; 251
    2e80:	dd 4f       	sbci	r29, 0xFD	; 253
    2e82:	d9 82       	std	Y+1, r13	; 0x01
    2e84:	c8 82       	st	Y, r12
    2e86:	c5 50       	subi	r28, 0x05	; 5
    2e88:	d2 40       	sbci	r29, 0x02	; 2
	return vec2ampl(multiply8x8(ampl2vec(QB_SIZE3,theta_list,phi_list),csw_matrix),QB_SIZE3);
    2e8a:	9e 01       	movw	r18, r28
    2e8c:	2f 5f       	subi	r18, 0xFF	; 255
    2e8e:	3d 4f       	sbci	r19, 0xFD	; 253
    2e90:	ae 01       	movw	r20, r28
    2e92:	49 5f       	subi	r20, 0xF9	; 249
    2e94:	5d 4f       	sbci	r21, 0xFD	; 253
    2e96:	63 e0       	ldi	r22, 0x03	; 3
    2e98:	70 e0       	ldi	r23, 0x00	; 0
    2e9a:	c5 01       	movw	r24, r10
    2e9c:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    2ea0:	ae 01       	movw	r20, r28
    2ea2:	4f 5f       	subi	r20, 0xFF	; 255
    2ea4:	5f 4f       	sbci	r21, 0xFF	; 255
    2ea6:	bc 01       	movw	r22, r24
    2ea8:	c5 01       	movw	r24, r10
    2eaa:	0e 94 74 08 	call	0x10e8	; 0x10e8 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_>
    2eae:	43 e0       	ldi	r20, 0x03	; 3
    2eb0:	50 e0       	ldi	r21, 0x00	; 0
    2eb2:	bc 01       	movw	r22, r24
    2eb4:	c5 01       	movw	r24, r10
    2eb6:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    2eba:	c4 5f       	subi	r28, 0xF4	; 244
    2ebc:	dd 4f       	sbci	r29, 0xFD	; 253
    2ebe:	0f b6       	in	r0, 0x3f	; 63
    2ec0:	f8 94       	cli
    2ec2:	de bf       	out	0x3e, r29	; 62
    2ec4:	0f be       	out	0x3f, r0	; 63
    2ec6:	cd bf       	out	0x3d, r28	; 61
    2ec8:	df 91       	pop	r29
    2eca:	cf 91       	pop	r28
    2ecc:	1f 91       	pop	r17
    2ece:	0f 91       	pop	r16
    2ed0:	ff 90       	pop	r15
    2ed2:	ef 90       	pop	r14
    2ed4:	df 90       	pop	r13
    2ed6:	cf 90       	pop	r12
    2ed8:	bf 90       	pop	r11
    2eda:	af 90       	pop	r10
    2edc:	9f 90       	pop	r9
    2ede:	8f 90       	pop	r8
    2ee0:	7f 90       	pop	r7
    2ee2:	6f 90       	pop	r6
    2ee4:	5f 90       	pop	r5
    2ee6:	4f 90       	pop	r4
    2ee8:	3f 90       	pop	r3
    2eea:	2f 90       	pop	r2
    2eec:	08 95       	ret

00002eee <_ZN5Gates3TOFEiiiiii>:
int * Gates::TOF(int theta1, int phi1,int theta2,int phi2,int theta3,int phi3){
    2eee:	2f 92       	push	r2
    2ef0:	3f 92       	push	r3
    2ef2:	4f 92       	push	r4
    2ef4:	5f 92       	push	r5
    2ef6:	6f 92       	push	r6
    2ef8:	7f 92       	push	r7
    2efa:	8f 92       	push	r8
    2efc:	9f 92       	push	r9
    2efe:	af 92       	push	r10
    2f00:	bf 92       	push	r11
    2f02:	cf 92       	push	r12
    2f04:	df 92       	push	r13
    2f06:	ef 92       	push	r14
    2f08:	ff 92       	push	r15
    2f0a:	0f 93       	push	r16
    2f0c:	1f 93       	push	r17
    2f0e:	cf 93       	push	r28
    2f10:	df 93       	push	r29
    2f12:	cd b7       	in	r28, 0x3d	; 61
    2f14:	de b7       	in	r29, 0x3e	; 62
    2f16:	cc 50       	subi	r28, 0x0C	; 12
    2f18:	d2 40       	sbci	r29, 0x02	; 2
    2f1a:	0f b6       	in	r0, 0x3f	; 63
    2f1c:	f8 94       	cli
    2f1e:	de bf       	out	0x3e, r29	; 62
    2f20:	0f be       	out	0x3f, r0	; 63
    2f22:	cd bf       	out	0x3d, r28	; 61
    2f24:	5c 01       	movw	r10, r24
    2f26:	3b 01       	movw	r6, r22
    2f28:	2a 01       	movw	r4, r20
    2f2a:	49 01       	movw	r8, r18
    2f2c:	18 01       	movw	r2, r16
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)}};
    2f2e:	00 e0       	ldi	r16, 0x00	; 0
    2f30:	10 e0       	ldi	r17, 0x00	; 0
    2f32:	98 01       	movw	r18, r16
    2f34:	40 e0       	ldi	r20, 0x00	; 0
    2f36:	50 e0       	ldi	r21, 0x00	; 0
    2f38:	60 e8       	ldi	r22, 0x80	; 128
    2f3a:	7f e3       	ldi	r23, 0x3F	; 63
    2f3c:	ce 01       	movw	r24, r28
    2f3e:	01 96       	adiw	r24, 0x01	; 1
    2f40:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2f44:	00 e0       	ldi	r16, 0x00	; 0
    2f46:	10 e0       	ldi	r17, 0x00	; 0
    2f48:	98 01       	movw	r18, r16
    2f4a:	b9 01       	movw	r22, r18
    2f4c:	a8 01       	movw	r20, r16
    2f4e:	ce 01       	movw	r24, r28
    2f50:	09 96       	adiw	r24, 0x09	; 9
    2f52:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2f56:	00 e0       	ldi	r16, 0x00	; 0
    2f58:	10 e0       	ldi	r17, 0x00	; 0
    2f5a:	98 01       	movw	r18, r16
    2f5c:	b9 01       	movw	r22, r18
    2f5e:	a8 01       	movw	r20, r16
    2f60:	ce 01       	movw	r24, r28
    2f62:	41 96       	adiw	r24, 0x11	; 17
    2f64:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2f68:	00 e0       	ldi	r16, 0x00	; 0
    2f6a:	10 e0       	ldi	r17, 0x00	; 0
    2f6c:	98 01       	movw	r18, r16
    2f6e:	b9 01       	movw	r22, r18
    2f70:	a8 01       	movw	r20, r16
    2f72:	ce 01       	movw	r24, r28
    2f74:	49 96       	adiw	r24, 0x19	; 25
    2f76:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2f7a:	00 e0       	ldi	r16, 0x00	; 0
    2f7c:	10 e0       	ldi	r17, 0x00	; 0
    2f7e:	98 01       	movw	r18, r16
    2f80:	b9 01       	movw	r22, r18
    2f82:	a8 01       	movw	r20, r16
    2f84:	ce 01       	movw	r24, r28
    2f86:	81 96       	adiw	r24, 0x21	; 33
    2f88:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2f8c:	00 e0       	ldi	r16, 0x00	; 0
    2f8e:	10 e0       	ldi	r17, 0x00	; 0
    2f90:	98 01       	movw	r18, r16
    2f92:	b9 01       	movw	r22, r18
    2f94:	a8 01       	movw	r20, r16
    2f96:	ce 01       	movw	r24, r28
    2f98:	89 96       	adiw	r24, 0x29	; 41
    2f9a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2f9e:	00 e0       	ldi	r16, 0x00	; 0
    2fa0:	10 e0       	ldi	r17, 0x00	; 0
    2fa2:	98 01       	movw	r18, r16
    2fa4:	b9 01       	movw	r22, r18
    2fa6:	a8 01       	movw	r20, r16
    2fa8:	ce 01       	movw	r24, r28
    2faa:	c1 96       	adiw	r24, 0x31	; 49
    2fac:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2fb0:	00 e0       	ldi	r16, 0x00	; 0
    2fb2:	10 e0       	ldi	r17, 0x00	; 0
    2fb4:	98 01       	movw	r18, r16
    2fb6:	b9 01       	movw	r22, r18
    2fb8:	a8 01       	movw	r20, r16
    2fba:	ce 01       	movw	r24, r28
    2fbc:	c9 96       	adiw	r24, 0x39	; 57
    2fbe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2fc2:	00 e0       	ldi	r16, 0x00	; 0
    2fc4:	10 e0       	ldi	r17, 0x00	; 0
    2fc6:	98 01       	movw	r18, r16
    2fc8:	b9 01       	movw	r22, r18
    2fca:	a8 01       	movw	r20, r16
    2fcc:	ce 01       	movw	r24, r28
    2fce:	8f 5b       	subi	r24, 0xBF	; 191
    2fd0:	9f 4f       	sbci	r25, 0xFF	; 255
    2fd2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2fd6:	00 e0       	ldi	r16, 0x00	; 0
    2fd8:	10 e0       	ldi	r17, 0x00	; 0
    2fda:	98 01       	movw	r18, r16
    2fdc:	40 e0       	ldi	r20, 0x00	; 0
    2fde:	50 e0       	ldi	r21, 0x00	; 0
    2fe0:	60 e8       	ldi	r22, 0x80	; 128
    2fe2:	7f e3       	ldi	r23, 0x3F	; 63
    2fe4:	ce 01       	movw	r24, r28
    2fe6:	87 5b       	subi	r24, 0xB7	; 183
    2fe8:	9f 4f       	sbci	r25, 0xFF	; 255
    2fea:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    2fee:	00 e0       	ldi	r16, 0x00	; 0
    2ff0:	10 e0       	ldi	r17, 0x00	; 0
    2ff2:	98 01       	movw	r18, r16
    2ff4:	b9 01       	movw	r22, r18
    2ff6:	a8 01       	movw	r20, r16
    2ff8:	ce 01       	movw	r24, r28
    2ffa:	8f 5a       	subi	r24, 0xAF	; 175
    2ffc:	9f 4f       	sbci	r25, 0xFF	; 255
    2ffe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3002:	00 e0       	ldi	r16, 0x00	; 0
    3004:	10 e0       	ldi	r17, 0x00	; 0
    3006:	98 01       	movw	r18, r16
    3008:	b9 01       	movw	r22, r18
    300a:	a8 01       	movw	r20, r16
    300c:	ce 01       	movw	r24, r28
    300e:	87 5a       	subi	r24, 0xA7	; 167
    3010:	9f 4f       	sbci	r25, 0xFF	; 255
    3012:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3016:	00 e0       	ldi	r16, 0x00	; 0
    3018:	10 e0       	ldi	r17, 0x00	; 0
    301a:	98 01       	movw	r18, r16
    301c:	b9 01       	movw	r22, r18
    301e:	a8 01       	movw	r20, r16
    3020:	ce 01       	movw	r24, r28
    3022:	8f 59       	subi	r24, 0x9F	; 159
    3024:	9f 4f       	sbci	r25, 0xFF	; 255
    3026:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    302a:	00 e0       	ldi	r16, 0x00	; 0
    302c:	10 e0       	ldi	r17, 0x00	; 0
    302e:	98 01       	movw	r18, r16
    3030:	b9 01       	movw	r22, r18
    3032:	a8 01       	movw	r20, r16
    3034:	ce 01       	movw	r24, r28
    3036:	87 59       	subi	r24, 0x97	; 151
    3038:	9f 4f       	sbci	r25, 0xFF	; 255
    303a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    303e:	00 e0       	ldi	r16, 0x00	; 0
    3040:	10 e0       	ldi	r17, 0x00	; 0
    3042:	98 01       	movw	r18, r16
    3044:	b9 01       	movw	r22, r18
    3046:	a8 01       	movw	r20, r16
    3048:	ce 01       	movw	r24, r28
    304a:	8f 58       	subi	r24, 0x8F	; 143
    304c:	9f 4f       	sbci	r25, 0xFF	; 255
    304e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3052:	00 e0       	ldi	r16, 0x00	; 0
    3054:	10 e0       	ldi	r17, 0x00	; 0
    3056:	98 01       	movw	r18, r16
    3058:	b9 01       	movw	r22, r18
    305a:	a8 01       	movw	r20, r16
    305c:	ce 01       	movw	r24, r28
    305e:	87 58       	subi	r24, 0x87	; 135
    3060:	9f 4f       	sbci	r25, 0xFF	; 255
    3062:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3066:	00 e0       	ldi	r16, 0x00	; 0
    3068:	10 e0       	ldi	r17, 0x00	; 0
    306a:	98 01       	movw	r18, r16
    306c:	b9 01       	movw	r22, r18
    306e:	a8 01       	movw	r20, r16
    3070:	ce 01       	movw	r24, r28
    3072:	8f 57       	subi	r24, 0x7F	; 127
    3074:	9f 4f       	sbci	r25, 0xFF	; 255
    3076:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    307a:	00 e0       	ldi	r16, 0x00	; 0
    307c:	10 e0       	ldi	r17, 0x00	; 0
    307e:	98 01       	movw	r18, r16
    3080:	b9 01       	movw	r22, r18
    3082:	a8 01       	movw	r20, r16
    3084:	ce 01       	movw	r24, r28
    3086:	87 57       	subi	r24, 0x77	; 119
    3088:	9f 4f       	sbci	r25, 0xFF	; 255
    308a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    308e:	00 e0       	ldi	r16, 0x00	; 0
    3090:	10 e0       	ldi	r17, 0x00	; 0
    3092:	98 01       	movw	r18, r16
    3094:	40 e0       	ldi	r20, 0x00	; 0
    3096:	50 e0       	ldi	r21, 0x00	; 0
    3098:	60 e8       	ldi	r22, 0x80	; 128
    309a:	7f e3       	ldi	r23, 0x3F	; 63
    309c:	ce 01       	movw	r24, r28
    309e:	8f 56       	subi	r24, 0x6F	; 111
    30a0:	9f 4f       	sbci	r25, 0xFF	; 255
    30a2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    30a6:	00 e0       	ldi	r16, 0x00	; 0
    30a8:	10 e0       	ldi	r17, 0x00	; 0
    30aa:	98 01       	movw	r18, r16
    30ac:	b9 01       	movw	r22, r18
    30ae:	a8 01       	movw	r20, r16
    30b0:	ce 01       	movw	r24, r28
    30b2:	87 56       	subi	r24, 0x67	; 103
    30b4:	9f 4f       	sbci	r25, 0xFF	; 255
    30b6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    30ba:	00 e0       	ldi	r16, 0x00	; 0
    30bc:	10 e0       	ldi	r17, 0x00	; 0
    30be:	98 01       	movw	r18, r16
    30c0:	b9 01       	movw	r22, r18
    30c2:	a8 01       	movw	r20, r16
    30c4:	ce 01       	movw	r24, r28
    30c6:	8f 55       	subi	r24, 0x5F	; 95
    30c8:	9f 4f       	sbci	r25, 0xFF	; 255
    30ca:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    30ce:	00 e0       	ldi	r16, 0x00	; 0
    30d0:	10 e0       	ldi	r17, 0x00	; 0
    30d2:	98 01       	movw	r18, r16
    30d4:	b9 01       	movw	r22, r18
    30d6:	a8 01       	movw	r20, r16
    30d8:	ce 01       	movw	r24, r28
    30da:	87 55       	subi	r24, 0x57	; 87
    30dc:	9f 4f       	sbci	r25, 0xFF	; 255
    30de:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    30e2:	00 e0       	ldi	r16, 0x00	; 0
    30e4:	10 e0       	ldi	r17, 0x00	; 0
    30e6:	98 01       	movw	r18, r16
    30e8:	b9 01       	movw	r22, r18
    30ea:	a8 01       	movw	r20, r16
    30ec:	ce 01       	movw	r24, r28
    30ee:	8f 54       	subi	r24, 0x4F	; 79
    30f0:	9f 4f       	sbci	r25, 0xFF	; 255
    30f2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    30f6:	00 e0       	ldi	r16, 0x00	; 0
    30f8:	10 e0       	ldi	r17, 0x00	; 0
    30fa:	98 01       	movw	r18, r16
    30fc:	b9 01       	movw	r22, r18
    30fe:	a8 01       	movw	r20, r16
    3100:	ce 01       	movw	r24, r28
    3102:	87 54       	subi	r24, 0x47	; 71
    3104:	9f 4f       	sbci	r25, 0xFF	; 255
    3106:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    310a:	00 e0       	ldi	r16, 0x00	; 0
    310c:	10 e0       	ldi	r17, 0x00	; 0
    310e:	98 01       	movw	r18, r16
    3110:	b9 01       	movw	r22, r18
    3112:	a8 01       	movw	r20, r16
    3114:	ce 01       	movw	r24, r28
    3116:	8f 53       	subi	r24, 0x3F	; 63
    3118:	9f 4f       	sbci	r25, 0xFF	; 255
    311a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    311e:	00 e0       	ldi	r16, 0x00	; 0
    3120:	10 e0       	ldi	r17, 0x00	; 0
    3122:	98 01       	movw	r18, r16
    3124:	b9 01       	movw	r22, r18
    3126:	a8 01       	movw	r20, r16
    3128:	ce 01       	movw	r24, r28
    312a:	87 53       	subi	r24, 0x37	; 55
    312c:	9f 4f       	sbci	r25, 0xFF	; 255
    312e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3132:	00 e0       	ldi	r16, 0x00	; 0
    3134:	10 e0       	ldi	r17, 0x00	; 0
    3136:	98 01       	movw	r18, r16
    3138:	b9 01       	movw	r22, r18
    313a:	a8 01       	movw	r20, r16
    313c:	ce 01       	movw	r24, r28
    313e:	8f 52       	subi	r24, 0x2F	; 47
    3140:	9f 4f       	sbci	r25, 0xFF	; 255
    3142:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3146:	00 e0       	ldi	r16, 0x00	; 0
    3148:	10 e0       	ldi	r17, 0x00	; 0
    314a:	98 01       	movw	r18, r16
    314c:	40 e0       	ldi	r20, 0x00	; 0
    314e:	50 e0       	ldi	r21, 0x00	; 0
    3150:	60 e8       	ldi	r22, 0x80	; 128
    3152:	7f e3       	ldi	r23, 0x3F	; 63
    3154:	ce 01       	movw	r24, r28
    3156:	87 52       	subi	r24, 0x27	; 39
    3158:	9f 4f       	sbci	r25, 0xFF	; 255
    315a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    315e:	00 e0       	ldi	r16, 0x00	; 0
    3160:	10 e0       	ldi	r17, 0x00	; 0
    3162:	98 01       	movw	r18, r16
    3164:	b9 01       	movw	r22, r18
    3166:	a8 01       	movw	r20, r16
    3168:	ce 01       	movw	r24, r28
    316a:	8f 51       	subi	r24, 0x1F	; 31
    316c:	9f 4f       	sbci	r25, 0xFF	; 255
    316e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3172:	00 e0       	ldi	r16, 0x00	; 0
    3174:	10 e0       	ldi	r17, 0x00	; 0
    3176:	98 01       	movw	r18, r16
    3178:	b9 01       	movw	r22, r18
    317a:	a8 01       	movw	r20, r16
    317c:	ce 01       	movw	r24, r28
    317e:	87 51       	subi	r24, 0x17	; 23
    3180:	9f 4f       	sbci	r25, 0xFF	; 255
    3182:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3186:	00 e0       	ldi	r16, 0x00	; 0
    3188:	10 e0       	ldi	r17, 0x00	; 0
    318a:	98 01       	movw	r18, r16
    318c:	b9 01       	movw	r22, r18
    318e:	a8 01       	movw	r20, r16
    3190:	ce 01       	movw	r24, r28
    3192:	8f 50       	subi	r24, 0x0F	; 15
    3194:	9f 4f       	sbci	r25, 0xFF	; 255
    3196:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    319a:	00 e0       	ldi	r16, 0x00	; 0
    319c:	10 e0       	ldi	r17, 0x00	; 0
    319e:	98 01       	movw	r18, r16
    31a0:	b9 01       	movw	r22, r18
    31a2:	a8 01       	movw	r20, r16
    31a4:	ce 01       	movw	r24, r28
    31a6:	87 50       	subi	r24, 0x07	; 7
    31a8:	9f 4f       	sbci	r25, 0xFF	; 255
    31aa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    31ae:	00 e0       	ldi	r16, 0x00	; 0
    31b0:	10 e0       	ldi	r17, 0x00	; 0
    31b2:	98 01       	movw	r18, r16
    31b4:	b9 01       	movw	r22, r18
    31b6:	a8 01       	movw	r20, r16
    31b8:	ce 01       	movw	r24, r28
    31ba:	8f 5f       	subi	r24, 0xFF	; 255
    31bc:	9e 4f       	sbci	r25, 0xFE	; 254
    31be:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    31c2:	00 e0       	ldi	r16, 0x00	; 0
    31c4:	10 e0       	ldi	r17, 0x00	; 0
    31c6:	98 01       	movw	r18, r16
    31c8:	b9 01       	movw	r22, r18
    31ca:	a8 01       	movw	r20, r16
    31cc:	ce 01       	movw	r24, r28
    31ce:	87 5f       	subi	r24, 0xF7	; 247
    31d0:	9e 4f       	sbci	r25, 0xFE	; 254
    31d2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    31d6:	00 e0       	ldi	r16, 0x00	; 0
    31d8:	10 e0       	ldi	r17, 0x00	; 0
    31da:	98 01       	movw	r18, r16
    31dc:	b9 01       	movw	r22, r18
    31de:	a8 01       	movw	r20, r16
    31e0:	ce 01       	movw	r24, r28
    31e2:	8f 5e       	subi	r24, 0xEF	; 239
    31e4:	9e 4f       	sbci	r25, 0xFE	; 254
    31e6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    31ea:	00 e0       	ldi	r16, 0x00	; 0
    31ec:	10 e0       	ldi	r17, 0x00	; 0
    31ee:	98 01       	movw	r18, r16
    31f0:	b9 01       	movw	r22, r18
    31f2:	a8 01       	movw	r20, r16
    31f4:	ce 01       	movw	r24, r28
    31f6:	87 5e       	subi	r24, 0xE7	; 231
    31f8:	9e 4f       	sbci	r25, 0xFE	; 254
    31fa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    31fe:	00 e0       	ldi	r16, 0x00	; 0
    3200:	10 e0       	ldi	r17, 0x00	; 0
    3202:	98 01       	movw	r18, r16
    3204:	40 e0       	ldi	r20, 0x00	; 0
    3206:	50 e0       	ldi	r21, 0x00	; 0
    3208:	60 e8       	ldi	r22, 0x80	; 128
    320a:	7f e3       	ldi	r23, 0x3F	; 63
    320c:	ce 01       	movw	r24, r28
    320e:	8f 5d       	subi	r24, 0xDF	; 223
    3210:	9e 4f       	sbci	r25, 0xFE	; 254
    3212:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3216:	00 e0       	ldi	r16, 0x00	; 0
    3218:	10 e0       	ldi	r17, 0x00	; 0
    321a:	98 01       	movw	r18, r16
    321c:	b9 01       	movw	r22, r18
    321e:	a8 01       	movw	r20, r16
    3220:	ce 01       	movw	r24, r28
    3222:	87 5d       	subi	r24, 0xD7	; 215
    3224:	9e 4f       	sbci	r25, 0xFE	; 254
    3226:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    322a:	00 e0       	ldi	r16, 0x00	; 0
    322c:	10 e0       	ldi	r17, 0x00	; 0
    322e:	98 01       	movw	r18, r16
    3230:	b9 01       	movw	r22, r18
    3232:	a8 01       	movw	r20, r16
    3234:	ce 01       	movw	r24, r28
    3236:	8f 5c       	subi	r24, 0xCF	; 207
    3238:	9e 4f       	sbci	r25, 0xFE	; 254
    323a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    323e:	00 e0       	ldi	r16, 0x00	; 0
    3240:	10 e0       	ldi	r17, 0x00	; 0
    3242:	98 01       	movw	r18, r16
    3244:	b9 01       	movw	r22, r18
    3246:	a8 01       	movw	r20, r16
    3248:	ce 01       	movw	r24, r28
    324a:	87 5c       	subi	r24, 0xC7	; 199
    324c:	9e 4f       	sbci	r25, 0xFE	; 254
    324e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3252:	00 e0       	ldi	r16, 0x00	; 0
    3254:	10 e0       	ldi	r17, 0x00	; 0
    3256:	98 01       	movw	r18, r16
    3258:	b9 01       	movw	r22, r18
    325a:	a8 01       	movw	r20, r16
    325c:	ce 01       	movw	r24, r28
    325e:	8f 5b       	subi	r24, 0xBF	; 191
    3260:	9e 4f       	sbci	r25, 0xFE	; 254
    3262:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3266:	00 e0       	ldi	r16, 0x00	; 0
    3268:	10 e0       	ldi	r17, 0x00	; 0
    326a:	98 01       	movw	r18, r16
    326c:	b9 01       	movw	r22, r18
    326e:	a8 01       	movw	r20, r16
    3270:	ce 01       	movw	r24, r28
    3272:	87 5b       	subi	r24, 0xB7	; 183
    3274:	9e 4f       	sbci	r25, 0xFE	; 254
    3276:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    327a:	00 e0       	ldi	r16, 0x00	; 0
    327c:	10 e0       	ldi	r17, 0x00	; 0
    327e:	98 01       	movw	r18, r16
    3280:	b9 01       	movw	r22, r18
    3282:	a8 01       	movw	r20, r16
    3284:	ce 01       	movw	r24, r28
    3286:	8f 5a       	subi	r24, 0xAF	; 175
    3288:	9e 4f       	sbci	r25, 0xFE	; 254
    328a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    328e:	00 e0       	ldi	r16, 0x00	; 0
    3290:	10 e0       	ldi	r17, 0x00	; 0
    3292:	98 01       	movw	r18, r16
    3294:	b9 01       	movw	r22, r18
    3296:	a8 01       	movw	r20, r16
    3298:	ce 01       	movw	r24, r28
    329a:	87 5a       	subi	r24, 0xA7	; 167
    329c:	9e 4f       	sbci	r25, 0xFE	; 254
    329e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    32a2:	00 e0       	ldi	r16, 0x00	; 0
    32a4:	10 e0       	ldi	r17, 0x00	; 0
    32a6:	98 01       	movw	r18, r16
    32a8:	b9 01       	movw	r22, r18
    32aa:	a8 01       	movw	r20, r16
    32ac:	ce 01       	movw	r24, r28
    32ae:	8f 59       	subi	r24, 0x9F	; 159
    32b0:	9e 4f       	sbci	r25, 0xFE	; 254
    32b2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    32b6:	00 e0       	ldi	r16, 0x00	; 0
    32b8:	10 e0       	ldi	r17, 0x00	; 0
    32ba:	98 01       	movw	r18, r16
    32bc:	40 e0       	ldi	r20, 0x00	; 0
    32be:	50 e0       	ldi	r21, 0x00	; 0
    32c0:	60 e8       	ldi	r22, 0x80	; 128
    32c2:	7f e3       	ldi	r23, 0x3F	; 63
    32c4:	ce 01       	movw	r24, r28
    32c6:	87 59       	subi	r24, 0x97	; 151
    32c8:	9e 4f       	sbci	r25, 0xFE	; 254
    32ca:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    32ce:	00 e0       	ldi	r16, 0x00	; 0
    32d0:	10 e0       	ldi	r17, 0x00	; 0
    32d2:	98 01       	movw	r18, r16
    32d4:	b9 01       	movw	r22, r18
    32d6:	a8 01       	movw	r20, r16
    32d8:	ce 01       	movw	r24, r28
    32da:	8f 58       	subi	r24, 0x8F	; 143
    32dc:	9e 4f       	sbci	r25, 0xFE	; 254
    32de:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    32e2:	00 e0       	ldi	r16, 0x00	; 0
    32e4:	10 e0       	ldi	r17, 0x00	; 0
    32e6:	98 01       	movw	r18, r16
    32e8:	b9 01       	movw	r22, r18
    32ea:	a8 01       	movw	r20, r16
    32ec:	ce 01       	movw	r24, r28
    32ee:	87 58       	subi	r24, 0x87	; 135
    32f0:	9e 4f       	sbci	r25, 0xFE	; 254
    32f2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    32f6:	00 e0       	ldi	r16, 0x00	; 0
    32f8:	10 e0       	ldi	r17, 0x00	; 0
    32fa:	98 01       	movw	r18, r16
    32fc:	b9 01       	movw	r22, r18
    32fe:	a8 01       	movw	r20, r16
    3300:	ce 01       	movw	r24, r28
    3302:	8f 57       	subi	r24, 0x7F	; 127
    3304:	9e 4f       	sbci	r25, 0xFE	; 254
    3306:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    330a:	00 e0       	ldi	r16, 0x00	; 0
    330c:	10 e0       	ldi	r17, 0x00	; 0
    330e:	98 01       	movw	r18, r16
    3310:	b9 01       	movw	r22, r18
    3312:	a8 01       	movw	r20, r16
    3314:	ce 01       	movw	r24, r28
    3316:	87 57       	subi	r24, 0x77	; 119
    3318:	9e 4f       	sbci	r25, 0xFE	; 254
    331a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    331e:	00 e0       	ldi	r16, 0x00	; 0
    3320:	10 e0       	ldi	r17, 0x00	; 0
    3322:	98 01       	movw	r18, r16
    3324:	b9 01       	movw	r22, r18
    3326:	a8 01       	movw	r20, r16
    3328:	ce 01       	movw	r24, r28
    332a:	8f 56       	subi	r24, 0x6F	; 111
    332c:	9e 4f       	sbci	r25, 0xFE	; 254
    332e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3332:	00 e0       	ldi	r16, 0x00	; 0
    3334:	10 e0       	ldi	r17, 0x00	; 0
    3336:	98 01       	movw	r18, r16
    3338:	b9 01       	movw	r22, r18
    333a:	a8 01       	movw	r20, r16
    333c:	ce 01       	movw	r24, r28
    333e:	87 56       	subi	r24, 0x67	; 103
    3340:	9e 4f       	sbci	r25, 0xFE	; 254
    3342:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3346:	00 e0       	ldi	r16, 0x00	; 0
    3348:	10 e0       	ldi	r17, 0x00	; 0
    334a:	98 01       	movw	r18, r16
    334c:	b9 01       	movw	r22, r18
    334e:	a8 01       	movw	r20, r16
    3350:	ce 01       	movw	r24, r28
    3352:	8f 55       	subi	r24, 0x5F	; 95
    3354:	9e 4f       	sbci	r25, 0xFE	; 254
    3356:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    335a:	00 e0       	ldi	r16, 0x00	; 0
    335c:	10 e0       	ldi	r17, 0x00	; 0
    335e:	98 01       	movw	r18, r16
    3360:	b9 01       	movw	r22, r18
    3362:	a8 01       	movw	r20, r16
    3364:	ce 01       	movw	r24, r28
    3366:	87 55       	subi	r24, 0x57	; 87
    3368:	9e 4f       	sbci	r25, 0xFE	; 254
    336a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    336e:	00 e0       	ldi	r16, 0x00	; 0
    3370:	10 e0       	ldi	r17, 0x00	; 0
    3372:	98 01       	movw	r18, r16
    3374:	b9 01       	movw	r22, r18
    3376:	a8 01       	movw	r20, r16
    3378:	ce 01       	movw	r24, r28
    337a:	8f 54       	subi	r24, 0x4F	; 79
    337c:	9e 4f       	sbci	r25, 0xFE	; 254
    337e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3382:	00 e0       	ldi	r16, 0x00	; 0
    3384:	10 e0       	ldi	r17, 0x00	; 0
    3386:	98 01       	movw	r18, r16
    3388:	40 e0       	ldi	r20, 0x00	; 0
    338a:	50 e0       	ldi	r21, 0x00	; 0
    338c:	60 e8       	ldi	r22, 0x80	; 128
    338e:	7f e3       	ldi	r23, 0x3F	; 63
    3390:	ce 01       	movw	r24, r28
    3392:	87 54       	subi	r24, 0x47	; 71
    3394:	9e 4f       	sbci	r25, 0xFE	; 254
    3396:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    339a:	00 e0       	ldi	r16, 0x00	; 0
    339c:	10 e0       	ldi	r17, 0x00	; 0
    339e:	98 01       	movw	r18, r16
    33a0:	b9 01       	movw	r22, r18
    33a2:	a8 01       	movw	r20, r16
    33a4:	ce 01       	movw	r24, r28
    33a6:	8f 53       	subi	r24, 0x3F	; 63
    33a8:	9e 4f       	sbci	r25, 0xFE	; 254
    33aa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    33ae:	00 e0       	ldi	r16, 0x00	; 0
    33b0:	10 e0       	ldi	r17, 0x00	; 0
    33b2:	98 01       	movw	r18, r16
    33b4:	b9 01       	movw	r22, r18
    33b6:	a8 01       	movw	r20, r16
    33b8:	ce 01       	movw	r24, r28
    33ba:	87 53       	subi	r24, 0x37	; 55
    33bc:	9e 4f       	sbci	r25, 0xFE	; 254
    33be:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    33c2:	00 e0       	ldi	r16, 0x00	; 0
    33c4:	10 e0       	ldi	r17, 0x00	; 0
    33c6:	98 01       	movw	r18, r16
    33c8:	b9 01       	movw	r22, r18
    33ca:	a8 01       	movw	r20, r16
    33cc:	ce 01       	movw	r24, r28
    33ce:	8f 52       	subi	r24, 0x2F	; 47
    33d0:	9e 4f       	sbci	r25, 0xFE	; 254
    33d2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    33d6:	00 e0       	ldi	r16, 0x00	; 0
    33d8:	10 e0       	ldi	r17, 0x00	; 0
    33da:	98 01       	movw	r18, r16
    33dc:	b9 01       	movw	r22, r18
    33de:	a8 01       	movw	r20, r16
    33e0:	ce 01       	movw	r24, r28
    33e2:	87 52       	subi	r24, 0x27	; 39
    33e4:	9e 4f       	sbci	r25, 0xFE	; 254
    33e6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    33ea:	00 e0       	ldi	r16, 0x00	; 0
    33ec:	10 e0       	ldi	r17, 0x00	; 0
    33ee:	98 01       	movw	r18, r16
    33f0:	b9 01       	movw	r22, r18
    33f2:	a8 01       	movw	r20, r16
    33f4:	ce 01       	movw	r24, r28
    33f6:	8f 51       	subi	r24, 0x1F	; 31
    33f8:	9e 4f       	sbci	r25, 0xFE	; 254
    33fa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    33fe:	00 e0       	ldi	r16, 0x00	; 0
    3400:	10 e0       	ldi	r17, 0x00	; 0
    3402:	98 01       	movw	r18, r16
    3404:	b9 01       	movw	r22, r18
    3406:	a8 01       	movw	r20, r16
    3408:	ce 01       	movw	r24, r28
    340a:	87 51       	subi	r24, 0x17	; 23
    340c:	9e 4f       	sbci	r25, 0xFE	; 254
    340e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3412:	00 e0       	ldi	r16, 0x00	; 0
    3414:	10 e0       	ldi	r17, 0x00	; 0
    3416:	98 01       	movw	r18, r16
    3418:	40 e0       	ldi	r20, 0x00	; 0
    341a:	50 e0       	ldi	r21, 0x00	; 0
    341c:	60 e8       	ldi	r22, 0x80	; 128
    341e:	7f e3       	ldi	r23, 0x3F	; 63
    3420:	ce 01       	movw	r24, r28
    3422:	8f 50       	subi	r24, 0x0F	; 15
    3424:	9e 4f       	sbci	r25, 0xFE	; 254
    3426:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    342a:	00 e0       	ldi	r16, 0x00	; 0
    342c:	10 e0       	ldi	r17, 0x00	; 0
    342e:	98 01       	movw	r18, r16
    3430:	b9 01       	movw	r22, r18
    3432:	a8 01       	movw	r20, r16
    3434:	ce 01       	movw	r24, r28
    3436:	87 50       	subi	r24, 0x07	; 7
    3438:	9e 4f       	sbci	r25, 0xFE	; 254
    343a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE3]={theta1,theta2,theta3}; int phi_list[QB_SIZE3]={phi1,phi2,phi3};
    343e:	c9 5f       	subi	r28, 0xF9	; 249
    3440:	dd 4f       	sbci	r29, 0xFD	; 253
    3442:	79 82       	std	Y+1, r7	; 0x01
    3444:	68 82       	st	Y, r6
    3446:	c7 50       	subi	r28, 0x07	; 7
    3448:	d2 40       	sbci	r29, 0x02	; 2
    344a:	c7 5f       	subi	r28, 0xF7	; 247
    344c:	dd 4f       	sbci	r29, 0xFD	; 253
    344e:	99 82       	std	Y+1, r9	; 0x01
    3450:	88 82       	st	Y, r8
    3452:	c9 50       	subi	r28, 0x09	; 9
    3454:	d2 40       	sbci	r29, 0x02	; 2
    3456:	c5 5f       	subi	r28, 0xF5	; 245
    3458:	dd 4f       	sbci	r29, 0xFD	; 253
    345a:	f9 82       	std	Y+1, r15	; 0x01
    345c:	e8 82       	st	Y, r14
    345e:	cb 50       	subi	r28, 0x0B	; 11
    3460:	d2 40       	sbci	r29, 0x02	; 2
    3462:	cf 5f       	subi	r28, 0xFF	; 255
    3464:	dd 4f       	sbci	r29, 0xFD	; 253
    3466:	59 82       	std	Y+1, r5	; 0x01
    3468:	48 82       	st	Y, r4
    346a:	c1 50       	subi	r28, 0x01	; 1
    346c:	d2 40       	sbci	r29, 0x02	; 2
    346e:	cd 5f       	subi	r28, 0xFD	; 253
    3470:	dd 4f       	sbci	r29, 0xFD	; 253
    3472:	39 82       	std	Y+1, r3	; 0x01
    3474:	28 82       	st	Y, r2
    3476:	c3 50       	subi	r28, 0x03	; 3
    3478:	d2 40       	sbci	r29, 0x02	; 2
    347a:	cb 5f       	subi	r28, 0xFB	; 251
    347c:	dd 4f       	sbci	r29, 0xFD	; 253
    347e:	d9 82       	std	Y+1, r13	; 0x01
    3480:	c8 82       	st	Y, r12
    3482:	c5 50       	subi	r28, 0x05	; 5
    3484:	d2 40       	sbci	r29, 0x02	; 2
	return vec2ampl(multiply8x8(ampl2vec(QB_SIZE3,theta_list,phi_list),tof_matrix),QB_SIZE3);
    3486:	9e 01       	movw	r18, r28
    3488:	2f 5f       	subi	r18, 0xFF	; 255
    348a:	3d 4f       	sbci	r19, 0xFD	; 253
    348c:	ae 01       	movw	r20, r28
    348e:	49 5f       	subi	r20, 0xF9	; 249
    3490:	5d 4f       	sbci	r21, 0xFD	; 253
    3492:	63 e0       	ldi	r22, 0x03	; 3
    3494:	70 e0       	ldi	r23, 0x00	; 0
    3496:	c5 01       	movw	r24, r10
    3498:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    349c:	ae 01       	movw	r20, r28
    349e:	4f 5f       	subi	r20, 0xFF	; 255
    34a0:	5f 4f       	sbci	r21, 0xFF	; 255
    34a2:	bc 01       	movw	r22, r24
    34a4:	c5 01       	movw	r24, r10
    34a6:	0e 94 74 08 	call	0x10e8	; 0x10e8 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_>
    34aa:	43 e0       	ldi	r20, 0x03	; 3
    34ac:	50 e0       	ldi	r21, 0x00	; 0
    34ae:	bc 01       	movw	r22, r24
    34b0:	c5 01       	movw	r24, r10
    34b2:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
}
    34b6:	c4 5f       	subi	r28, 0xF4	; 244
    34b8:	dd 4f       	sbci	r29, 0xFD	; 253
    34ba:	0f b6       	in	r0, 0x3f	; 63
    34bc:	f8 94       	cli
    34be:	de bf       	out	0x3e, r29	; 62
    34c0:	0f be       	out	0x3f, r0	; 63
    34c2:	cd bf       	out	0x3d, r28	; 61
    34c4:	df 91       	pop	r29
    34c6:	cf 91       	pop	r28
    34c8:	1f 91       	pop	r17
    34ca:	0f 91       	pop	r16
    34cc:	ff 90       	pop	r15
    34ce:	ef 90       	pop	r14
    34d0:	df 90       	pop	r13
    34d2:	cf 90       	pop	r12
    34d4:	bf 90       	pop	r11
    34d6:	af 90       	pop	r10
    34d8:	9f 90       	pop	r9
    34da:	8f 90       	pop	r8
    34dc:	7f 90       	pop	r7
    34de:	6f 90       	pop	r6
    34e0:	5f 90       	pop	r5
    34e2:	4f 90       	pop	r4
    34e4:	3f 90       	pop	r3
    34e6:	2f 90       	pop	r2
    34e8:	08 95       	ret

000034ea <_ZN5Gates3DEUEiiiiiii>:
int * Gates::DEU(int theta1, int phi1,int theta2,int phi2,int theta3,int phi3,int delta){
    34ea:	2f 92       	push	r2
    34ec:	3f 92       	push	r3
    34ee:	4f 92       	push	r4
    34f0:	5f 92       	push	r5
    34f2:	6f 92       	push	r6
    34f4:	7f 92       	push	r7
    34f6:	8f 92       	push	r8
    34f8:	9f 92       	push	r9
    34fa:	af 92       	push	r10
    34fc:	bf 92       	push	r11
    34fe:	cf 92       	push	r12
    3500:	df 92       	push	r13
    3502:	ef 92       	push	r14
    3504:	ff 92       	push	r15
    3506:	0f 93       	push	r16
    3508:	1f 93       	push	r17
    350a:	cf 93       	push	r28
    350c:	df 93       	push	r29
    350e:	cd b7       	in	r28, 0x3d	; 61
    3510:	de b7       	in	r29, 0x3e	; 62
    3512:	c4 51       	subi	r28, 0x14	; 20
    3514:	d2 40       	sbci	r29, 0x02	; 2
    3516:	0f b6       	in	r0, 0x3f	; 63
    3518:	f8 94       	cli
    351a:	de bf       	out	0x3e, r29	; 62
    351c:	0f be       	out	0x3f, r0	; 63
    351e:	cd bf       	out	0x3d, r28	; 61
    3520:	c3 5f       	subi	r28, 0xF3	; 243
    3522:	dd 4f       	sbci	r29, 0xFD	; 253
    3524:	99 83       	std	Y+1, r25	; 0x01
    3526:	88 83       	st	Y, r24
    3528:	cd 50       	subi	r28, 0x0D	; 13
    352a:	d2 40       	sbci	r29, 0x02	; 2
    352c:	2b 01       	movw	r4, r22
    352e:	c1 5f       	subi	r28, 0xF1	; 241
    3530:	dd 4f       	sbci	r29, 0xFD	; 253
    3532:	59 83       	std	Y+1, r21	; 0x01
    3534:	48 83       	st	Y, r20
    3536:	cf 50       	subi	r28, 0x0F	; 15
    3538:	d2 40       	sbci	r29, 0x02	; 2
    353a:	39 01       	movw	r6, r18
    353c:	cf 5e       	subi	r28, 0xEF	; 239
    353e:	dd 4f       	sbci	r29, 0xFD	; 253
    3540:	19 83       	std	Y+1, r17	; 0x01
    3542:	08 83       	st	Y, r16
    3544:	c1 51       	subi	r28, 0x11	; 17
    3546:	d2 40       	sbci	r29, 0x02	; 2
    3548:	17 01       	movw	r2, r14
    354a:	cd 5e       	subi	r28, 0xED	; 237
    354c:	dd 4f       	sbci	r29, 0xFD	; 253
    354e:	d9 82       	std	Y+1, r13	; 0x01
    3550:	c8 82       	st	Y, r12
    3552:	c3 51       	subi	r28, 0x13	; 19
    3554:	d2 40       	sbci	r29, 0x02	; 2
	float delta_float=(delta*M_PI)/180;
    3556:	b5 01       	movw	r22, r10
    3558:	88 27       	eor	r24, r24
    355a:	77 fd       	sbrc	r23, 7
    355c:	80 95       	com	r24
    355e:	98 2f       	mov	r25, r24
    3560:	0e 94 c4 28 	call	0x5188	; 0x5188 <__floatsisf>
    3564:	2b ed       	ldi	r18, 0xDB	; 219
    3566:	3f e0       	ldi	r19, 0x0F	; 15
    3568:	49 e4       	ldi	r20, 0x49	; 73
    356a:	50 e4       	ldi	r21, 0x40	; 64
    356c:	0e 94 a6 2a 	call	0x554c	; 0x554c <__mulsf3>
    3570:	20 e0       	ldi	r18, 0x00	; 0
    3572:	30 e0       	ldi	r19, 0x00	; 0
    3574:	44 e3       	ldi	r20, 0x34	; 52
    3576:	53 e4       	ldi	r21, 0x43	; 67
    3578:	0e 94 f8 27 	call	0x4ff0	; 0x4ff0 <__divsf3>
    357c:	4b 01       	movw	r8, r22
    357e:	5c 01       	movw	r10, r24
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,cos(delta_float)),Complex(sin(delta_float),0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(sin(delta_float),0),Complex(0,cos(delta_float))}};
    3580:	00 e0       	ldi	r16, 0x00	; 0
    3582:	10 e0       	ldi	r17, 0x00	; 0
    3584:	98 01       	movw	r18, r16
    3586:	40 e0       	ldi	r20, 0x00	; 0
    3588:	50 e0       	ldi	r21, 0x00	; 0
    358a:	60 e8       	ldi	r22, 0x80	; 128
    358c:	7f e3       	ldi	r23, 0x3F	; 63
    358e:	ce 01       	movw	r24, r28
    3590:	01 96       	adiw	r24, 0x01	; 1
    3592:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3596:	00 e0       	ldi	r16, 0x00	; 0
    3598:	10 e0       	ldi	r17, 0x00	; 0
    359a:	98 01       	movw	r18, r16
    359c:	b9 01       	movw	r22, r18
    359e:	a8 01       	movw	r20, r16
    35a0:	ce 01       	movw	r24, r28
    35a2:	09 96       	adiw	r24, 0x09	; 9
    35a4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    35a8:	00 e0       	ldi	r16, 0x00	; 0
    35aa:	10 e0       	ldi	r17, 0x00	; 0
    35ac:	98 01       	movw	r18, r16
    35ae:	b9 01       	movw	r22, r18
    35b0:	a8 01       	movw	r20, r16
    35b2:	ce 01       	movw	r24, r28
    35b4:	41 96       	adiw	r24, 0x11	; 17
    35b6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    35ba:	00 e0       	ldi	r16, 0x00	; 0
    35bc:	10 e0       	ldi	r17, 0x00	; 0
    35be:	98 01       	movw	r18, r16
    35c0:	b9 01       	movw	r22, r18
    35c2:	a8 01       	movw	r20, r16
    35c4:	ce 01       	movw	r24, r28
    35c6:	49 96       	adiw	r24, 0x19	; 25
    35c8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    35cc:	00 e0       	ldi	r16, 0x00	; 0
    35ce:	10 e0       	ldi	r17, 0x00	; 0
    35d0:	98 01       	movw	r18, r16
    35d2:	b9 01       	movw	r22, r18
    35d4:	a8 01       	movw	r20, r16
    35d6:	ce 01       	movw	r24, r28
    35d8:	81 96       	adiw	r24, 0x21	; 33
    35da:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    35de:	00 e0       	ldi	r16, 0x00	; 0
    35e0:	10 e0       	ldi	r17, 0x00	; 0
    35e2:	98 01       	movw	r18, r16
    35e4:	b9 01       	movw	r22, r18
    35e6:	a8 01       	movw	r20, r16
    35e8:	ce 01       	movw	r24, r28
    35ea:	89 96       	adiw	r24, 0x29	; 41
    35ec:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    35f0:	00 e0       	ldi	r16, 0x00	; 0
    35f2:	10 e0       	ldi	r17, 0x00	; 0
    35f4:	98 01       	movw	r18, r16
    35f6:	b9 01       	movw	r22, r18
    35f8:	a8 01       	movw	r20, r16
    35fa:	ce 01       	movw	r24, r28
    35fc:	c1 96       	adiw	r24, 0x31	; 49
    35fe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3602:	00 e0       	ldi	r16, 0x00	; 0
    3604:	10 e0       	ldi	r17, 0x00	; 0
    3606:	98 01       	movw	r18, r16
    3608:	b9 01       	movw	r22, r18
    360a:	a8 01       	movw	r20, r16
    360c:	ce 01       	movw	r24, r28
    360e:	c9 96       	adiw	r24, 0x39	; 57
    3610:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3614:	00 e0       	ldi	r16, 0x00	; 0
    3616:	10 e0       	ldi	r17, 0x00	; 0
    3618:	98 01       	movw	r18, r16
    361a:	b9 01       	movw	r22, r18
    361c:	a8 01       	movw	r20, r16
    361e:	ce 01       	movw	r24, r28
    3620:	8f 5b       	subi	r24, 0xBF	; 191
    3622:	9f 4f       	sbci	r25, 0xFF	; 255
    3624:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3628:	00 e0       	ldi	r16, 0x00	; 0
    362a:	10 e0       	ldi	r17, 0x00	; 0
    362c:	98 01       	movw	r18, r16
    362e:	40 e0       	ldi	r20, 0x00	; 0
    3630:	50 e0       	ldi	r21, 0x00	; 0
    3632:	60 e8       	ldi	r22, 0x80	; 128
    3634:	7f e3       	ldi	r23, 0x3F	; 63
    3636:	ce 01       	movw	r24, r28
    3638:	87 5b       	subi	r24, 0xB7	; 183
    363a:	9f 4f       	sbci	r25, 0xFF	; 255
    363c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3640:	00 e0       	ldi	r16, 0x00	; 0
    3642:	10 e0       	ldi	r17, 0x00	; 0
    3644:	98 01       	movw	r18, r16
    3646:	b9 01       	movw	r22, r18
    3648:	a8 01       	movw	r20, r16
    364a:	ce 01       	movw	r24, r28
    364c:	8f 5a       	subi	r24, 0xAF	; 175
    364e:	9f 4f       	sbci	r25, 0xFF	; 255
    3650:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3654:	00 e0       	ldi	r16, 0x00	; 0
    3656:	10 e0       	ldi	r17, 0x00	; 0
    3658:	98 01       	movw	r18, r16
    365a:	b9 01       	movw	r22, r18
    365c:	a8 01       	movw	r20, r16
    365e:	ce 01       	movw	r24, r28
    3660:	87 5a       	subi	r24, 0xA7	; 167
    3662:	9f 4f       	sbci	r25, 0xFF	; 255
    3664:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3668:	00 e0       	ldi	r16, 0x00	; 0
    366a:	10 e0       	ldi	r17, 0x00	; 0
    366c:	98 01       	movw	r18, r16
    366e:	b9 01       	movw	r22, r18
    3670:	a8 01       	movw	r20, r16
    3672:	ce 01       	movw	r24, r28
    3674:	8f 59       	subi	r24, 0x9F	; 159
    3676:	9f 4f       	sbci	r25, 0xFF	; 255
    3678:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    367c:	00 e0       	ldi	r16, 0x00	; 0
    367e:	10 e0       	ldi	r17, 0x00	; 0
    3680:	98 01       	movw	r18, r16
    3682:	b9 01       	movw	r22, r18
    3684:	a8 01       	movw	r20, r16
    3686:	ce 01       	movw	r24, r28
    3688:	87 59       	subi	r24, 0x97	; 151
    368a:	9f 4f       	sbci	r25, 0xFF	; 255
    368c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3690:	00 e0       	ldi	r16, 0x00	; 0
    3692:	10 e0       	ldi	r17, 0x00	; 0
    3694:	98 01       	movw	r18, r16
    3696:	b9 01       	movw	r22, r18
    3698:	a8 01       	movw	r20, r16
    369a:	ce 01       	movw	r24, r28
    369c:	8f 58       	subi	r24, 0x8F	; 143
    369e:	9f 4f       	sbci	r25, 0xFF	; 255
    36a0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    36a4:	00 e0       	ldi	r16, 0x00	; 0
    36a6:	10 e0       	ldi	r17, 0x00	; 0
    36a8:	98 01       	movw	r18, r16
    36aa:	b9 01       	movw	r22, r18
    36ac:	a8 01       	movw	r20, r16
    36ae:	ce 01       	movw	r24, r28
    36b0:	87 58       	subi	r24, 0x87	; 135
    36b2:	9f 4f       	sbci	r25, 0xFF	; 255
    36b4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    36b8:	00 e0       	ldi	r16, 0x00	; 0
    36ba:	10 e0       	ldi	r17, 0x00	; 0
    36bc:	98 01       	movw	r18, r16
    36be:	b9 01       	movw	r22, r18
    36c0:	a8 01       	movw	r20, r16
    36c2:	ce 01       	movw	r24, r28
    36c4:	8f 57       	subi	r24, 0x7F	; 127
    36c6:	9f 4f       	sbci	r25, 0xFF	; 255
    36c8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    36cc:	00 e0       	ldi	r16, 0x00	; 0
    36ce:	10 e0       	ldi	r17, 0x00	; 0
    36d0:	98 01       	movw	r18, r16
    36d2:	b9 01       	movw	r22, r18
    36d4:	a8 01       	movw	r20, r16
    36d6:	ce 01       	movw	r24, r28
    36d8:	87 57       	subi	r24, 0x77	; 119
    36da:	9f 4f       	sbci	r25, 0xFF	; 255
    36dc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    36e0:	00 e0       	ldi	r16, 0x00	; 0
    36e2:	10 e0       	ldi	r17, 0x00	; 0
    36e4:	98 01       	movw	r18, r16
    36e6:	40 e0       	ldi	r20, 0x00	; 0
    36e8:	50 e0       	ldi	r21, 0x00	; 0
    36ea:	60 e8       	ldi	r22, 0x80	; 128
    36ec:	7f e3       	ldi	r23, 0x3F	; 63
    36ee:	ce 01       	movw	r24, r28
    36f0:	8f 56       	subi	r24, 0x6F	; 111
    36f2:	9f 4f       	sbci	r25, 0xFF	; 255
    36f4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    36f8:	00 e0       	ldi	r16, 0x00	; 0
    36fa:	10 e0       	ldi	r17, 0x00	; 0
    36fc:	98 01       	movw	r18, r16
    36fe:	b9 01       	movw	r22, r18
    3700:	a8 01       	movw	r20, r16
    3702:	ce 01       	movw	r24, r28
    3704:	87 56       	subi	r24, 0x67	; 103
    3706:	9f 4f       	sbci	r25, 0xFF	; 255
    3708:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    370c:	00 e0       	ldi	r16, 0x00	; 0
    370e:	10 e0       	ldi	r17, 0x00	; 0
    3710:	98 01       	movw	r18, r16
    3712:	b9 01       	movw	r22, r18
    3714:	a8 01       	movw	r20, r16
    3716:	ce 01       	movw	r24, r28
    3718:	8f 55       	subi	r24, 0x5F	; 95
    371a:	9f 4f       	sbci	r25, 0xFF	; 255
    371c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3720:	00 e0       	ldi	r16, 0x00	; 0
    3722:	10 e0       	ldi	r17, 0x00	; 0
    3724:	98 01       	movw	r18, r16
    3726:	b9 01       	movw	r22, r18
    3728:	a8 01       	movw	r20, r16
    372a:	ce 01       	movw	r24, r28
    372c:	87 55       	subi	r24, 0x57	; 87
    372e:	9f 4f       	sbci	r25, 0xFF	; 255
    3730:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3734:	00 e0       	ldi	r16, 0x00	; 0
    3736:	10 e0       	ldi	r17, 0x00	; 0
    3738:	98 01       	movw	r18, r16
    373a:	b9 01       	movw	r22, r18
    373c:	a8 01       	movw	r20, r16
    373e:	ce 01       	movw	r24, r28
    3740:	8f 54       	subi	r24, 0x4F	; 79
    3742:	9f 4f       	sbci	r25, 0xFF	; 255
    3744:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3748:	00 e0       	ldi	r16, 0x00	; 0
    374a:	10 e0       	ldi	r17, 0x00	; 0
    374c:	98 01       	movw	r18, r16
    374e:	b9 01       	movw	r22, r18
    3750:	a8 01       	movw	r20, r16
    3752:	ce 01       	movw	r24, r28
    3754:	87 54       	subi	r24, 0x47	; 71
    3756:	9f 4f       	sbci	r25, 0xFF	; 255
    3758:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    375c:	00 e0       	ldi	r16, 0x00	; 0
    375e:	10 e0       	ldi	r17, 0x00	; 0
    3760:	98 01       	movw	r18, r16
    3762:	b9 01       	movw	r22, r18
    3764:	a8 01       	movw	r20, r16
    3766:	ce 01       	movw	r24, r28
    3768:	8f 53       	subi	r24, 0x3F	; 63
    376a:	9f 4f       	sbci	r25, 0xFF	; 255
    376c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3770:	00 e0       	ldi	r16, 0x00	; 0
    3772:	10 e0       	ldi	r17, 0x00	; 0
    3774:	98 01       	movw	r18, r16
    3776:	b9 01       	movw	r22, r18
    3778:	a8 01       	movw	r20, r16
    377a:	ce 01       	movw	r24, r28
    377c:	87 53       	subi	r24, 0x37	; 55
    377e:	9f 4f       	sbci	r25, 0xFF	; 255
    3780:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3784:	00 e0       	ldi	r16, 0x00	; 0
    3786:	10 e0       	ldi	r17, 0x00	; 0
    3788:	98 01       	movw	r18, r16
    378a:	b9 01       	movw	r22, r18
    378c:	a8 01       	movw	r20, r16
    378e:	ce 01       	movw	r24, r28
    3790:	8f 52       	subi	r24, 0x2F	; 47
    3792:	9f 4f       	sbci	r25, 0xFF	; 255
    3794:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3798:	00 e0       	ldi	r16, 0x00	; 0
    379a:	10 e0       	ldi	r17, 0x00	; 0
    379c:	98 01       	movw	r18, r16
    379e:	40 e0       	ldi	r20, 0x00	; 0
    37a0:	50 e0       	ldi	r21, 0x00	; 0
    37a2:	60 e8       	ldi	r22, 0x80	; 128
    37a4:	7f e3       	ldi	r23, 0x3F	; 63
    37a6:	ce 01       	movw	r24, r28
    37a8:	87 52       	subi	r24, 0x27	; 39
    37aa:	9f 4f       	sbci	r25, 0xFF	; 255
    37ac:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    37b0:	00 e0       	ldi	r16, 0x00	; 0
    37b2:	10 e0       	ldi	r17, 0x00	; 0
    37b4:	98 01       	movw	r18, r16
    37b6:	b9 01       	movw	r22, r18
    37b8:	a8 01       	movw	r20, r16
    37ba:	ce 01       	movw	r24, r28
    37bc:	8f 51       	subi	r24, 0x1F	; 31
    37be:	9f 4f       	sbci	r25, 0xFF	; 255
    37c0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    37c4:	00 e0       	ldi	r16, 0x00	; 0
    37c6:	10 e0       	ldi	r17, 0x00	; 0
    37c8:	98 01       	movw	r18, r16
    37ca:	b9 01       	movw	r22, r18
    37cc:	a8 01       	movw	r20, r16
    37ce:	ce 01       	movw	r24, r28
    37d0:	87 51       	subi	r24, 0x17	; 23
    37d2:	9f 4f       	sbci	r25, 0xFF	; 255
    37d4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    37d8:	00 e0       	ldi	r16, 0x00	; 0
    37da:	10 e0       	ldi	r17, 0x00	; 0
    37dc:	98 01       	movw	r18, r16
    37de:	b9 01       	movw	r22, r18
    37e0:	a8 01       	movw	r20, r16
    37e2:	ce 01       	movw	r24, r28
    37e4:	8f 50       	subi	r24, 0x0F	; 15
    37e6:	9f 4f       	sbci	r25, 0xFF	; 255
    37e8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    37ec:	00 e0       	ldi	r16, 0x00	; 0
    37ee:	10 e0       	ldi	r17, 0x00	; 0
    37f0:	98 01       	movw	r18, r16
    37f2:	b9 01       	movw	r22, r18
    37f4:	a8 01       	movw	r20, r16
    37f6:	ce 01       	movw	r24, r28
    37f8:	87 50       	subi	r24, 0x07	; 7
    37fa:	9f 4f       	sbci	r25, 0xFF	; 255
    37fc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3800:	00 e0       	ldi	r16, 0x00	; 0
    3802:	10 e0       	ldi	r17, 0x00	; 0
    3804:	98 01       	movw	r18, r16
    3806:	b9 01       	movw	r22, r18
    3808:	a8 01       	movw	r20, r16
    380a:	ce 01       	movw	r24, r28
    380c:	8f 5f       	subi	r24, 0xFF	; 255
    380e:	9e 4f       	sbci	r25, 0xFE	; 254
    3810:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3814:	00 e0       	ldi	r16, 0x00	; 0
    3816:	10 e0       	ldi	r17, 0x00	; 0
    3818:	98 01       	movw	r18, r16
    381a:	b9 01       	movw	r22, r18
    381c:	a8 01       	movw	r20, r16
    381e:	ce 01       	movw	r24, r28
    3820:	87 5f       	subi	r24, 0xF7	; 247
    3822:	9e 4f       	sbci	r25, 0xFE	; 254
    3824:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3828:	00 e0       	ldi	r16, 0x00	; 0
    382a:	10 e0       	ldi	r17, 0x00	; 0
    382c:	98 01       	movw	r18, r16
    382e:	b9 01       	movw	r22, r18
    3830:	a8 01       	movw	r20, r16
    3832:	ce 01       	movw	r24, r28
    3834:	8f 5e       	subi	r24, 0xEF	; 239
    3836:	9e 4f       	sbci	r25, 0xFE	; 254
    3838:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    383c:	00 e0       	ldi	r16, 0x00	; 0
    383e:	10 e0       	ldi	r17, 0x00	; 0
    3840:	98 01       	movw	r18, r16
    3842:	b9 01       	movw	r22, r18
    3844:	a8 01       	movw	r20, r16
    3846:	ce 01       	movw	r24, r28
    3848:	87 5e       	subi	r24, 0xE7	; 231
    384a:	9e 4f       	sbci	r25, 0xFE	; 254
    384c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3850:	00 e0       	ldi	r16, 0x00	; 0
    3852:	10 e0       	ldi	r17, 0x00	; 0
    3854:	98 01       	movw	r18, r16
    3856:	40 e0       	ldi	r20, 0x00	; 0
    3858:	50 e0       	ldi	r21, 0x00	; 0
    385a:	60 e8       	ldi	r22, 0x80	; 128
    385c:	7f e3       	ldi	r23, 0x3F	; 63
    385e:	ce 01       	movw	r24, r28
    3860:	8f 5d       	subi	r24, 0xDF	; 223
    3862:	9e 4f       	sbci	r25, 0xFE	; 254
    3864:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3868:	00 e0       	ldi	r16, 0x00	; 0
    386a:	10 e0       	ldi	r17, 0x00	; 0
    386c:	98 01       	movw	r18, r16
    386e:	b9 01       	movw	r22, r18
    3870:	a8 01       	movw	r20, r16
    3872:	ce 01       	movw	r24, r28
    3874:	87 5d       	subi	r24, 0xD7	; 215
    3876:	9e 4f       	sbci	r25, 0xFE	; 254
    3878:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    387c:	00 e0       	ldi	r16, 0x00	; 0
    387e:	10 e0       	ldi	r17, 0x00	; 0
    3880:	98 01       	movw	r18, r16
    3882:	b9 01       	movw	r22, r18
    3884:	a8 01       	movw	r20, r16
    3886:	ce 01       	movw	r24, r28
    3888:	8f 5c       	subi	r24, 0xCF	; 207
    388a:	9e 4f       	sbci	r25, 0xFE	; 254
    388c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3890:	00 e0       	ldi	r16, 0x00	; 0
    3892:	10 e0       	ldi	r17, 0x00	; 0
    3894:	98 01       	movw	r18, r16
    3896:	b9 01       	movw	r22, r18
    3898:	a8 01       	movw	r20, r16
    389a:	ce 01       	movw	r24, r28
    389c:	87 5c       	subi	r24, 0xC7	; 199
    389e:	9e 4f       	sbci	r25, 0xFE	; 254
    38a0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    38a4:	00 e0       	ldi	r16, 0x00	; 0
    38a6:	10 e0       	ldi	r17, 0x00	; 0
    38a8:	98 01       	movw	r18, r16
    38aa:	b9 01       	movw	r22, r18
    38ac:	a8 01       	movw	r20, r16
    38ae:	ce 01       	movw	r24, r28
    38b0:	8f 5b       	subi	r24, 0xBF	; 191
    38b2:	9e 4f       	sbci	r25, 0xFE	; 254
    38b4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    38b8:	00 e0       	ldi	r16, 0x00	; 0
    38ba:	10 e0       	ldi	r17, 0x00	; 0
    38bc:	98 01       	movw	r18, r16
    38be:	b9 01       	movw	r22, r18
    38c0:	a8 01       	movw	r20, r16
    38c2:	ce 01       	movw	r24, r28
    38c4:	87 5b       	subi	r24, 0xB7	; 183
    38c6:	9e 4f       	sbci	r25, 0xFE	; 254
    38c8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    38cc:	00 e0       	ldi	r16, 0x00	; 0
    38ce:	10 e0       	ldi	r17, 0x00	; 0
    38d0:	98 01       	movw	r18, r16
    38d2:	b9 01       	movw	r22, r18
    38d4:	a8 01       	movw	r20, r16
    38d6:	ce 01       	movw	r24, r28
    38d8:	8f 5a       	subi	r24, 0xAF	; 175
    38da:	9e 4f       	sbci	r25, 0xFE	; 254
    38dc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    38e0:	00 e0       	ldi	r16, 0x00	; 0
    38e2:	10 e0       	ldi	r17, 0x00	; 0
    38e4:	98 01       	movw	r18, r16
    38e6:	b9 01       	movw	r22, r18
    38e8:	a8 01       	movw	r20, r16
    38ea:	ce 01       	movw	r24, r28
    38ec:	87 5a       	subi	r24, 0xA7	; 167
    38ee:	9e 4f       	sbci	r25, 0xFE	; 254
    38f0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    38f4:	00 e0       	ldi	r16, 0x00	; 0
    38f6:	10 e0       	ldi	r17, 0x00	; 0
    38f8:	98 01       	movw	r18, r16
    38fa:	b9 01       	movw	r22, r18
    38fc:	a8 01       	movw	r20, r16
    38fe:	ce 01       	movw	r24, r28
    3900:	8f 59       	subi	r24, 0x9F	; 159
    3902:	9e 4f       	sbci	r25, 0xFE	; 254
    3904:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3908:	00 e0       	ldi	r16, 0x00	; 0
    390a:	10 e0       	ldi	r17, 0x00	; 0
    390c:	98 01       	movw	r18, r16
    390e:	40 e0       	ldi	r20, 0x00	; 0
    3910:	50 e0       	ldi	r21, 0x00	; 0
    3912:	60 e8       	ldi	r22, 0x80	; 128
    3914:	7f e3       	ldi	r23, 0x3F	; 63
    3916:	ce 01       	movw	r24, r28
    3918:	87 59       	subi	r24, 0x97	; 151
    391a:	9e 4f       	sbci	r25, 0xFE	; 254
    391c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3920:	00 e0       	ldi	r16, 0x00	; 0
    3922:	10 e0       	ldi	r17, 0x00	; 0
    3924:	98 01       	movw	r18, r16
    3926:	b9 01       	movw	r22, r18
    3928:	a8 01       	movw	r20, r16
    392a:	ce 01       	movw	r24, r28
    392c:	8f 58       	subi	r24, 0x8F	; 143
    392e:	9e 4f       	sbci	r25, 0xFE	; 254
    3930:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3934:	00 e0       	ldi	r16, 0x00	; 0
    3936:	10 e0       	ldi	r17, 0x00	; 0
    3938:	98 01       	movw	r18, r16
    393a:	b9 01       	movw	r22, r18
    393c:	a8 01       	movw	r20, r16
    393e:	ce 01       	movw	r24, r28
    3940:	87 58       	subi	r24, 0x87	; 135
    3942:	9e 4f       	sbci	r25, 0xFE	; 254
    3944:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3948:	00 e0       	ldi	r16, 0x00	; 0
    394a:	10 e0       	ldi	r17, 0x00	; 0
    394c:	98 01       	movw	r18, r16
    394e:	b9 01       	movw	r22, r18
    3950:	a8 01       	movw	r20, r16
    3952:	ce 01       	movw	r24, r28
    3954:	8f 57       	subi	r24, 0x7F	; 127
    3956:	9e 4f       	sbci	r25, 0xFE	; 254
    3958:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    395c:	00 e0       	ldi	r16, 0x00	; 0
    395e:	10 e0       	ldi	r17, 0x00	; 0
    3960:	98 01       	movw	r18, r16
    3962:	b9 01       	movw	r22, r18
    3964:	a8 01       	movw	r20, r16
    3966:	ce 01       	movw	r24, r28
    3968:	87 57       	subi	r24, 0x77	; 119
    396a:	9e 4f       	sbci	r25, 0xFE	; 254
    396c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3970:	00 e0       	ldi	r16, 0x00	; 0
    3972:	10 e0       	ldi	r17, 0x00	; 0
    3974:	98 01       	movw	r18, r16
    3976:	b9 01       	movw	r22, r18
    3978:	a8 01       	movw	r20, r16
    397a:	ce 01       	movw	r24, r28
    397c:	8f 56       	subi	r24, 0x6F	; 111
    397e:	9e 4f       	sbci	r25, 0xFE	; 254
    3980:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3984:	00 e0       	ldi	r16, 0x00	; 0
    3986:	10 e0       	ldi	r17, 0x00	; 0
    3988:	98 01       	movw	r18, r16
    398a:	b9 01       	movw	r22, r18
    398c:	a8 01       	movw	r20, r16
    398e:	ce 01       	movw	r24, r28
    3990:	87 56       	subi	r24, 0x67	; 103
    3992:	9e 4f       	sbci	r25, 0xFE	; 254
    3994:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3998:	00 e0       	ldi	r16, 0x00	; 0
    399a:	10 e0       	ldi	r17, 0x00	; 0
    399c:	98 01       	movw	r18, r16
    399e:	b9 01       	movw	r22, r18
    39a0:	a8 01       	movw	r20, r16
    39a2:	ce 01       	movw	r24, r28
    39a4:	8f 55       	subi	r24, 0x5F	; 95
    39a6:	9e 4f       	sbci	r25, 0xFE	; 254
    39a8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    39ac:	00 e0       	ldi	r16, 0x00	; 0
    39ae:	10 e0       	ldi	r17, 0x00	; 0
    39b0:	98 01       	movw	r18, r16
    39b2:	b9 01       	movw	r22, r18
    39b4:	a8 01       	movw	r20, r16
    39b6:	ce 01       	movw	r24, r28
    39b8:	87 55       	subi	r24, 0x57	; 87
    39ba:	9e 4f       	sbci	r25, 0xFE	; 254
    39bc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
														  {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),               Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,cos(delta_float)),Complex(sin(delta_float),0)},
    39c0:	c5 01       	movw	r24, r10
    39c2:	b4 01       	movw	r22, r8
    39c4:	0e 94 f5 27 	call	0x4fea	; 0x4fea <cos>
    39c8:	6b 01       	movw	r12, r22
    39ca:	7c 01       	movw	r14, r24
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(sin(delta_float),0),Complex(0,cos(delta_float))}};
    39cc:	8b 01       	movw	r16, r22
    39ce:	9c 01       	movw	r18, r24
    39d0:	40 e0       	ldi	r20, 0x00	; 0
    39d2:	50 e0       	ldi	r21, 0x00	; 0
    39d4:	ba 01       	movw	r22, r20
    39d6:	ce 01       	movw	r24, r28
    39d8:	8f 54       	subi	r24, 0x4F	; 79
    39da:	9e 4f       	sbci	r25, 0xFE	; 254
    39dc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
														  {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),               Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,cos(delta_float)),Complex(sin(delta_float),0)},
    39e0:	c5 01       	movw	r24, r10
    39e2:	b4 01       	movw	r22, r8
    39e4:	0e 94 09 2b 	call	0x5612	; 0x5612 <sin>
    39e8:	4b 01       	movw	r8, r22
    39ea:	5c 01       	movw	r10, r24
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(sin(delta_float),0),Complex(0,cos(delta_float))}};
    39ec:	00 e0       	ldi	r16, 0x00	; 0
    39ee:	10 e0       	ldi	r17, 0x00	; 0
    39f0:	98 01       	movw	r18, r16
    39f2:	ab 01       	movw	r20, r22
    39f4:	bc 01       	movw	r22, r24
    39f6:	ce 01       	movw	r24, r28
    39f8:	87 54       	subi	r24, 0x47	; 71
    39fa:	9e 4f       	sbci	r25, 0xFE	; 254
    39fc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3a00:	00 e0       	ldi	r16, 0x00	; 0
    3a02:	10 e0       	ldi	r17, 0x00	; 0
    3a04:	98 01       	movw	r18, r16
    3a06:	b9 01       	movw	r22, r18
    3a08:	a8 01       	movw	r20, r16
    3a0a:	ce 01       	movw	r24, r28
    3a0c:	8f 53       	subi	r24, 0x3F	; 63
    3a0e:	9e 4f       	sbci	r25, 0xFE	; 254
    3a10:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3a14:	00 e0       	ldi	r16, 0x00	; 0
    3a16:	10 e0       	ldi	r17, 0x00	; 0
    3a18:	98 01       	movw	r18, r16
    3a1a:	b9 01       	movw	r22, r18
    3a1c:	a8 01       	movw	r20, r16
    3a1e:	ce 01       	movw	r24, r28
    3a20:	87 53       	subi	r24, 0x37	; 55
    3a22:	9e 4f       	sbci	r25, 0xFE	; 254
    3a24:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3a28:	00 e0       	ldi	r16, 0x00	; 0
    3a2a:	10 e0       	ldi	r17, 0x00	; 0
    3a2c:	98 01       	movw	r18, r16
    3a2e:	b9 01       	movw	r22, r18
    3a30:	a8 01       	movw	r20, r16
    3a32:	ce 01       	movw	r24, r28
    3a34:	8f 52       	subi	r24, 0x2F	; 47
    3a36:	9e 4f       	sbci	r25, 0xFE	; 254
    3a38:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3a3c:	00 e0       	ldi	r16, 0x00	; 0
    3a3e:	10 e0       	ldi	r17, 0x00	; 0
    3a40:	98 01       	movw	r18, r16
    3a42:	b9 01       	movw	r22, r18
    3a44:	a8 01       	movw	r20, r16
    3a46:	ce 01       	movw	r24, r28
    3a48:	87 52       	subi	r24, 0x27	; 39
    3a4a:	9e 4f       	sbci	r25, 0xFE	; 254
    3a4c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3a50:	00 e0       	ldi	r16, 0x00	; 0
    3a52:	10 e0       	ldi	r17, 0x00	; 0
    3a54:	98 01       	movw	r18, r16
    3a56:	b9 01       	movw	r22, r18
    3a58:	a8 01       	movw	r20, r16
    3a5a:	ce 01       	movw	r24, r28
    3a5c:	8f 51       	subi	r24, 0x1F	; 31
    3a5e:	9e 4f       	sbci	r25, 0xFE	; 254
    3a60:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3a64:	00 e0       	ldi	r16, 0x00	; 0
    3a66:	10 e0       	ldi	r17, 0x00	; 0
    3a68:	98 01       	movw	r18, r16
    3a6a:	b9 01       	movw	r22, r18
    3a6c:	a8 01       	movw	r20, r16
    3a6e:	ce 01       	movw	r24, r28
    3a70:	87 51       	subi	r24, 0x17	; 23
    3a72:	9e 4f       	sbci	r25, 0xFE	; 254
    3a74:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3a78:	00 e0       	ldi	r16, 0x00	; 0
    3a7a:	10 e0       	ldi	r17, 0x00	; 0
    3a7c:	98 01       	movw	r18, r16
    3a7e:	b5 01       	movw	r22, r10
    3a80:	a4 01       	movw	r20, r8
    3a82:	ce 01       	movw	r24, r28
    3a84:	8f 50       	subi	r24, 0x0F	; 15
    3a86:	9e 4f       	sbci	r25, 0xFE	; 254
    3a88:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
    3a8c:	97 01       	movw	r18, r14
    3a8e:	86 01       	movw	r16, r12
    3a90:	40 e0       	ldi	r20, 0x00	; 0
    3a92:	50 e0       	ldi	r21, 0x00	; 0
    3a94:	ba 01       	movw	r22, r20
    3a96:	ce 01       	movw	r24, r28
    3a98:	87 50       	subi	r24, 0x07	; 7
    3a9a:	9e 4f       	sbci	r25, 0xFE	; 254
    3a9c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE3]={theta1,theta2,theta3}; int phi_list[QB_SIZE3]={phi1,phi2,phi3};
    3aa0:	c9 5f       	subi	r28, 0xF9	; 249
    3aa2:	dd 4f       	sbci	r29, 0xFD	; 253
    3aa4:	59 82       	std	Y+1, r5	; 0x01
    3aa6:	48 82       	st	Y, r4
    3aa8:	c7 50       	subi	r28, 0x07	; 7
    3aaa:	d2 40       	sbci	r29, 0x02	; 2
    3aac:	c7 5f       	subi	r28, 0xF7	; 247
    3aae:	dd 4f       	sbci	r29, 0xFD	; 253
    3ab0:	79 82       	std	Y+1, r7	; 0x01
    3ab2:	68 82       	st	Y, r6
    3ab4:	c9 50       	subi	r28, 0x09	; 9
    3ab6:	d2 40       	sbci	r29, 0x02	; 2
    3ab8:	c5 5f       	subi	r28, 0xF5	; 245
    3aba:	dd 4f       	sbci	r29, 0xFD	; 253
    3abc:	39 82       	std	Y+1, r3	; 0x01
    3abe:	28 82       	st	Y, r2
    3ac0:	cb 50       	subi	r28, 0x0B	; 11
    3ac2:	d2 40       	sbci	r29, 0x02	; 2
    3ac4:	c1 5f       	subi	r28, 0xF1	; 241
    3ac6:	dd 4f       	sbci	r29, 0xFD	; 253
    3ac8:	88 81       	ld	r24, Y
    3aca:	99 81       	ldd	r25, Y+1	; 0x01
    3acc:	cf 50       	subi	r28, 0x0F	; 15
    3ace:	d2 40       	sbci	r29, 0x02	; 2
    3ad0:	cf 5f       	subi	r28, 0xFF	; 255
    3ad2:	dd 4f       	sbci	r29, 0xFD	; 253
    3ad4:	99 83       	std	Y+1, r25	; 0x01
    3ad6:	88 83       	st	Y, r24
    3ad8:	c1 50       	subi	r28, 0x01	; 1
    3ada:	d2 40       	sbci	r29, 0x02	; 2
    3adc:	cf 5e       	subi	r28, 0xEF	; 239
    3ade:	dd 4f       	sbci	r29, 0xFD	; 253
    3ae0:	88 81       	ld	r24, Y
    3ae2:	99 81       	ldd	r25, Y+1	; 0x01
    3ae4:	c1 51       	subi	r28, 0x11	; 17
    3ae6:	d2 40       	sbci	r29, 0x02	; 2
    3ae8:	cd 5f       	subi	r28, 0xFD	; 253
    3aea:	dd 4f       	sbci	r29, 0xFD	; 253
    3aec:	99 83       	std	Y+1, r25	; 0x01
    3aee:	88 83       	st	Y, r24
    3af0:	c3 50       	subi	r28, 0x03	; 3
    3af2:	d2 40       	sbci	r29, 0x02	; 2
    3af4:	cd 5e       	subi	r28, 0xED	; 237
    3af6:	dd 4f       	sbci	r29, 0xFD	; 253
    3af8:	88 81       	ld	r24, Y
    3afa:	99 81       	ldd	r25, Y+1	; 0x01
    3afc:	c3 51       	subi	r28, 0x13	; 19
    3afe:	d2 40       	sbci	r29, 0x02	; 2
    3b00:	cb 5f       	subi	r28, 0xFB	; 251
    3b02:	dd 4f       	sbci	r29, 0xFD	; 253
    3b04:	99 83       	std	Y+1, r25	; 0x01
    3b06:	88 83       	st	Y, r24
    3b08:	c5 50       	subi	r28, 0x05	; 5
    3b0a:	d2 40       	sbci	r29, 0x02	; 2
	return vec2ampl(multiply8x8(ampl2vec(QB_SIZE3,theta_list,phi_list),deu_matrix),QB_SIZE3);	
    3b0c:	9e 01       	movw	r18, r28
    3b0e:	2f 5f       	subi	r18, 0xFF	; 255
    3b10:	3d 4f       	sbci	r19, 0xFD	; 253
    3b12:	ae 01       	movw	r20, r28
    3b14:	49 5f       	subi	r20, 0xF9	; 249
    3b16:	5d 4f       	sbci	r21, 0xFD	; 253
    3b18:	63 e0       	ldi	r22, 0x03	; 3
    3b1a:	70 e0       	ldi	r23, 0x00	; 0
    3b1c:	c3 5f       	subi	r28, 0xF3	; 243
    3b1e:	dd 4f       	sbci	r29, 0xFD	; 253
    3b20:	88 81       	ld	r24, Y
    3b22:	99 81       	ldd	r25, Y+1	; 0x01
    3b24:	cd 50       	subi	r28, 0x0D	; 13
    3b26:	d2 40       	sbci	r29, 0x02	; 2
    3b28:	0e 94 71 05 	call	0xae2	; 0xae2 <_ZN5Gates8ampl2vecEiPiS0_>
    3b2c:	ae 01       	movw	r20, r28
    3b2e:	4f 5f       	subi	r20, 0xFF	; 255
    3b30:	5f 4f       	sbci	r21, 0xFF	; 255
    3b32:	bc 01       	movw	r22, r24
    3b34:	c3 5f       	subi	r28, 0xF3	; 243
    3b36:	dd 4f       	sbci	r29, 0xFD	; 253
    3b38:	88 81       	ld	r24, Y
    3b3a:	99 81       	ldd	r25, Y+1	; 0x01
    3b3c:	cd 50       	subi	r28, 0x0D	; 13
    3b3e:	d2 40       	sbci	r29, 0x02	; 2
    3b40:	0e 94 74 08 	call	0x10e8	; 0x10e8 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_>
    3b44:	43 e0       	ldi	r20, 0x03	; 3
    3b46:	50 e0       	ldi	r21, 0x00	; 0
    3b48:	bc 01       	movw	r22, r24
    3b4a:	c3 5f       	subi	r28, 0xF3	; 243
    3b4c:	dd 4f       	sbci	r29, 0xFD	; 253
    3b4e:	88 81       	ld	r24, Y
    3b50:	99 81       	ldd	r25, Y+1	; 0x01
    3b52:	cd 50       	subi	r28, 0x0D	; 13
    3b54:	d2 40       	sbci	r29, 0x02	; 2
    3b56:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <_ZN5Gates8vec2amplEP7Complexi>
    3b5a:	cc 5e       	subi	r28, 0xEC	; 236
    3b5c:	dd 4f       	sbci	r29, 0xFD	; 253
    3b5e:	0f b6       	in	r0, 0x3f	; 63
    3b60:	f8 94       	cli
    3b62:	de bf       	out	0x3e, r29	; 62
    3b64:	0f be       	out	0x3f, r0	; 63
    3b66:	cd bf       	out	0x3d, r28	; 61
    3b68:	df 91       	pop	r29
    3b6a:	cf 91       	pop	r28
    3b6c:	1f 91       	pop	r17
    3b6e:	0f 91       	pop	r16
    3b70:	ff 90       	pop	r15
    3b72:	ef 90       	pop	r14
    3b74:	df 90       	pop	r13
    3b76:	cf 90       	pop	r12
    3b78:	bf 90       	pop	r11
    3b7a:	af 90       	pop	r10
    3b7c:	9f 90       	pop	r9
    3b7e:	8f 90       	pop	r8
    3b80:	7f 90       	pop	r7
    3b82:	6f 90       	pop	r6
    3b84:	5f 90       	pop	r5
    3b86:	4f 90       	pop	r4
    3b88:	3f 90       	pop	r3
    3b8a:	2f 90       	pop	r2
    3b8c:	08 95       	ret

00003b8e <_GLOBAL__sub_I__ZN5GatesC2Ev>:
#include <stdarg.h>
#include <stdlib.h>
#include <avr/eeprom.h>
Gates::Gates(){setup_seed();}

Serial s;
    3b8e:	8f ed       	ldi	r24, 0xDF	; 223
    3b90:	90 e0       	ldi	r25, 0x00	; 0
    3b92:	0e 94 29 27 	call	0x4e52	; 0x4e52 <_ZN6SerialC1Ev>
    3b96:	08 95       	ret

00003b98 <_ZN4QEPUC1Ev>:
#include "qepu.h"
QEPU::QEPU(){serial.writestr("INITIALIZING . . . ");DDRA=0xFF;program_counter=0;}
    3b98:	0f 93       	push	r16
    3b9a:	1f 93       	push	r17
    3b9c:	cf 93       	push	r28
    3b9e:	df 93       	push	r29
    3ba0:	ec 01       	movw	r28, r24
    3ba2:	0e 94 10 02 	call	0x420	; 0x420 <_ZN6EEPromC1Ev>
    3ba6:	8e 01       	movw	r16, r28
    3ba8:	0f 5f       	subi	r16, 0xFF	; 255
    3baa:	1f 4f       	sbci	r17, 0xFF	; 255
    3bac:	c8 01       	movw	r24, r16
    3bae:	0e 94 29 27 	call	0x4e52	; 0x4e52 <_ZN6SerialC1Ev>
    3bb2:	ce 01       	movw	r24, r28
    3bb4:	05 96       	adiw	r24, 0x05	; 5
    3bb6:	0e 94 26 03 	call	0x64c	; 0x64c <_ZN5GatesC1Ev>
    3bba:	66 e8       	ldi	r22, 0x86	; 134
    3bbc:	70 e0       	ldi	r23, 0x00	; 0
    3bbe:	c8 01       	movw	r24, r16
    3bc0:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_ZN6Serial8writestrEPc>
    3bc4:	8f ef       	ldi	r24, 0xFF	; 255
    3bc6:	8a bb       	out	0x1a, r24	; 26
    3bc8:	1c 82       	std	Y+4, r1	; 0x04
    3bca:	1b 82       	std	Y+3, r1	; 0x03
    3bcc:	df 91       	pop	r29
    3bce:	cf 91       	pop	r28
    3bd0:	1f 91       	pop	r17
    3bd2:	0f 91       	pop	r16
    3bd4:	08 95       	ret

00003bd6 <_ZN4QEPU10setctrlpinEii>:
void QEPU::setdatapin(int pin,int state){
	PORTB&=~(1<<pin); // CLEAR PIN
	PORTB|=(state<<pin); // SET PIN
}
void QEPU::setctrlpin(int pin,int state){
	PORTA&=~(1<<pin); // CLEAR PIN
    3bd6:	7b b3       	in	r23, 0x1b	; 27
    3bd8:	21 e0       	ldi	r18, 0x01	; 1
    3bda:	30 e0       	ldi	r19, 0x00	; 0
    3bdc:	c9 01       	movw	r24, r18
    3bde:	06 2e       	mov	r0, r22
    3be0:	02 c0       	rjmp	.+4      	; 0x3be6 <_ZN4QEPU10setctrlpinEii+0x10>
    3be2:	88 0f       	add	r24, r24
    3be4:	99 1f       	adc	r25, r25
    3be6:	0a 94       	dec	r0
    3be8:	e2 f7       	brpl	.-8      	; 0x3be2 <_ZN4QEPU10setctrlpinEii+0xc>
    3bea:	80 95       	com	r24
    3bec:	87 23       	and	r24, r23
    3bee:	8b bb       	out	0x1b, r24	; 27
	PORTA|=(state<<pin); // SET PIN
    3bf0:	8b b3       	in	r24, 0x1b	; 27
    3bf2:	02 c0       	rjmp	.+4      	; 0x3bf8 <_ZN4QEPU10setctrlpinEii+0x22>
    3bf4:	44 0f       	add	r20, r20
    3bf6:	55 1f       	adc	r21, r21
    3bf8:	6a 95       	dec	r22
    3bfa:	e2 f7       	brpl	.-8      	; 0x3bf4 <_ZN4QEPU10setctrlpinEii+0x1e>
    3bfc:	48 2b       	or	r20, r24
    3bfe:	4b bb       	out	0x1b, r20	; 27
    3c00:	08 95       	ret

00003c02 <_ZN4QEPU5writeEiii>:
#include "qepu.h"
QEPU::QEPU(){serial.writestr("INITIALIZING . . . ");DDRA=0xFF;program_counter=0;}
void QEPU::write(int index,int dim,int deg){
    3c02:	cf 93       	push	r28
    3c04:	df 93       	push	r29
    3c06:	ec 01       	movw	r28, r24
	DDRB=0xFF;
    3c08:	8f ef       	ldi	r24, 0xFF	; 255
    3c0a:	87 bb       	out	0x17, r24	; 23
	setctrl(0); // CLOSE ALL CONTROLS
	DDRB=0xFF;
	return deg_read;
}
void QEPU::setdata(int bin){
	PORTB=bin;
    3c0c:	28 bb       	out	0x18, r18	; 24
}
void QEPU::setctrl(int bin){
	PORTA=bin;
    3c0e:	6b bb       	out	0x1b, r22	; 27
void QEPU::write(int index,int dim,int deg){
	DDRB=0xFF;
	
	setdata(deg);
	setctrl(index);
	setctrlpin(4,dim);
    3c10:	64 e0       	ldi	r22, 0x04	; 4
    3c12:	70 e0       	ldi	r23, 0x00	; 0
    3c14:	ce 01       	movw	r24, r28
    3c16:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(6,1); // CLOCK UP LOAD
    3c1a:	41 e0       	ldi	r20, 0x01	; 1
    3c1c:	50 e0       	ldi	r21, 0x00	; 0
    3c1e:	66 e0       	ldi	r22, 0x06	; 6
    3c20:	70 e0       	ldi	r23, 0x00	; 0
    3c22:	ce 01       	movw	r24, r28
    3c24:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(6,0); // CLOCK DOWN LOAD
    3c28:	40 e0       	ldi	r20, 0x00	; 0
    3c2a:	50 e0       	ldi	r21, 0x00	; 0
    3c2c:	66 e0       	ldi	r22, 0x06	; 6
    3c2e:	70 e0       	ldi	r23, 0x00	; 0
    3c30:	ce 01       	movw	r24, r28
    3c32:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <_ZN4QEPU10setctrlpinEii>
	setctrl(0); // CLOSE ALL CONTROLS
	DDRB=0xFF;
	return deg_read;
}
void QEPU::setdata(int bin){
	PORTB=bin;
    3c36:	18 ba       	out	0x18, r1	; 24
	setctrl(index);
	setctrlpin(4,dim);
	setctrlpin(6,1); // CLOCK UP LOAD
	setctrlpin(6,0); // CLOCK DOWN LOAD
	setdata(0);
}
    3c38:	df 91       	pop	r29
    3c3a:	cf 91       	pop	r28
    3c3c:	08 95       	ret

00003c3e <_ZN4QEPU4readEii>:
int QEPU::read(int index,int dim){
    3c3e:	0f 93       	push	r16
    3c40:	1f 93       	push	r17
    3c42:	cf 93       	push	r28
    3c44:	df 93       	push	r29
    3c46:	ec 01       	movw	r28, r24
    3c48:	8a 01       	movw	r16, r20
	DDRB=0x00;
    3c4a:	17 ba       	out	0x17, r1	; 23
}
void QEPU::setdata(int bin){
	PORTB=bin;
}
void QEPU::setctrl(int bin){
	PORTA=bin;
    3c4c:	6b bb       	out	0x1b, r22	; 27
}
int QEPU::read(int index,int dim){
	DDRB=0x00;
	setctrl(index);
	//OPEN ALL AND GATES
	setctrlpin(5,1); // CLOCK UP READ
    3c4e:	41 e0       	ldi	r20, 0x01	; 1
    3c50:	50 e0       	ldi	r21, 0x00	; 0
    3c52:	65 e0       	ldi	r22, 0x05	; 5
    3c54:	70 e0       	ldi	r23, 0x00	; 0
    3c56:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(4,dim);
    3c5a:	a8 01       	movw	r20, r16
    3c5c:	64 e0       	ldi	r22, 0x04	; 4
    3c5e:	70 e0       	ldi	r23, 0x00	; 0
    3c60:	ce 01       	movw	r24, r28
    3c62:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <_ZN4QEPU10setctrlpinEii>
	int deg_read=PINB; // READ INPUT
    3c66:	86 b3       	in	r24, 0x16	; 22
}
void QEPU::setdata(int bin){
	PORTB=bin;
}
void QEPU::setctrl(int bin){
	PORTA=bin;
    3c68:	1b ba       	out	0x1b, r1	; 27
	setctrlpin(5,1); // CLOCK UP READ
	setctrlpin(4,dim);
	int deg_read=PINB; // READ INPUT
	//CLOSE ALL AND GATES
	setctrl(0); // CLOSE ALL CONTROLS
	DDRB=0xFF;
    3c6a:	9f ef       	ldi	r25, 0xFF	; 255
    3c6c:	97 bb       	out	0x17, r25	; 23
	return deg_read;
}
    3c6e:	90 e0       	ldi	r25, 0x00	; 0
    3c70:	df 91       	pop	r29
    3c72:	cf 91       	pop	r28
    3c74:	1f 91       	pop	r17
    3c76:	0f 91       	pop	r16
    3c78:	08 95       	ret

00003c7a <_ZN4QEPU7dumpmemEv>:
}
void QEPU::setctrlpin(int pin,int state){
	PORTA&=~(1<<pin); // CLEAR PIN
	PORTA|=(state<<pin); // SET PIN
}
void QEPU::dumpmem(){
    3c7a:	6f 92       	push	r6
    3c7c:	7f 92       	push	r7
    3c7e:	8f 92       	push	r8
    3c80:	9f 92       	push	r9
    3c82:	af 92       	push	r10
    3c84:	bf 92       	push	r11
    3c86:	cf 92       	push	r12
    3c88:	df 92       	push	r13
    3c8a:	ef 92       	push	r14
    3c8c:	ff 92       	push	r15
    3c8e:	0f 93       	push	r16
    3c90:	1f 93       	push	r17
    3c92:	cf 93       	push	r28
    3c94:	df 93       	push	r29
    3c96:	6c 01       	movw	r12, r24
	serial.writestrln("");
    3c98:	8c 01       	movw	r16, r24
    3c9a:	0f 5f       	subi	r16, 0xFF	; 255
    3c9c:	1f 4f       	sbci	r17, 0xFF	; 255
    3c9e:	63 ec       	ldi	r22, 0xC3	; 195
    3ca0:	70 e0       	ldi	r23, 0x00	; 0
    3ca2:	c8 01       	movw	r24, r16
    3ca4:	0e 94 4a 27 	call	0x4e94	; 0x4e94 <_ZN6Serial10writestrlnEPc>
	serial.writestrln("** QUANTUM MEMORY DUMP **");
    3ca8:	6a e9       	ldi	r22, 0x9A	; 154
    3caa:	70 e0       	ldi	r23, 0x00	; 0
    3cac:	c8 01       	movw	r24, r16
    3cae:	0e 94 4a 27 	call	0x4e94	; 0x4e94 <_ZN6Serial10writestrlnEPc>
	for(int i=0;i<QUBIT_COUNT;i++){
    3cb2:	c0 e0       	ldi	r28, 0x00	; 0
    3cb4:	d0 e0       	ldi	r29, 0x00	; 0
		char * thedim=(char*)malloc(sizeof(char)*3); sprintf(thedim,"%d",read(i,THE));
    3cb6:	0f 2e       	mov	r0, r31
    3cb8:	f4 eb       	ldi	r31, 0xB4	; 180
    3cba:	ef 2e       	mov	r14, r31
    3cbc:	f0 e0       	ldi	r31, 0x00	; 0
    3cbe:	ff 2e       	mov	r15, r31
    3cc0:	f0 2d       	mov	r31, r0
    3cc2:	83 e0       	ldi	r24, 0x03	; 3
    3cc4:	90 e0       	ldi	r25, 0x00	; 0
    3cc6:	0e 94 a8 2b 	call	0x5750	; 0x5750 <malloc>
    3cca:	88 2e       	mov	r8, r24
    3ccc:	99 2e       	mov	r9, r25
    3cce:	40 e0       	ldi	r20, 0x00	; 0
    3cd0:	50 e0       	ldi	r21, 0x00	; 0
    3cd2:	be 01       	movw	r22, r28
    3cd4:	c6 01       	movw	r24, r12
    3cd6:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    3cda:	9f 93       	push	r25
    3cdc:	8f 93       	push	r24
    3cde:	ff 92       	push	r15
    3ce0:	ef 92       	push	r14
    3ce2:	9f 92       	push	r9
    3ce4:	8f 92       	push	r8
    3ce6:	0e 94 69 2e 	call	0x5cd2	; 0x5cd2 <sprintf>
		char * phidim=(char*)malloc(sizeof(char)*3); sprintf(phidim,"%d",read(i,PHI));
    3cea:	83 e0       	ldi	r24, 0x03	; 3
    3cec:	90 e0       	ldi	r25, 0x00	; 0
    3cee:	0e 94 a8 2b 	call	0x5750	; 0x5750 <malloc>
    3cf2:	a8 2e       	mov	r10, r24
    3cf4:	b9 2e       	mov	r11, r25
    3cf6:	41 e0       	ldi	r20, 0x01	; 1
    3cf8:	50 e0       	ldi	r21, 0x00	; 0
    3cfa:	be 01       	movw	r22, r28
    3cfc:	c6 01       	movw	r24, r12
    3cfe:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    3d02:	9f 93       	push	r25
    3d04:	8f 93       	push	r24
    3d06:	ff 92       	push	r15
    3d08:	ef 92       	push	r14
    3d0a:	bf 92       	push	r11
    3d0c:	af 92       	push	r10
    3d0e:	0e 94 69 2e 	call	0x5cd2	; 0x5cd2 <sprintf>
		char * qindex=(char*)malloc(sizeof(char));	 sprintf(qindex,"%d",i);
    3d12:	81 e0       	ldi	r24, 0x01	; 1
    3d14:	90 e0       	ldi	r25, 0x00	; 0
    3d16:	0e 94 a8 2b 	call	0x5750	; 0x5750 <malloc>
    3d1a:	68 2e       	mov	r6, r24
    3d1c:	79 2e       	mov	r7, r25
    3d1e:	df 93       	push	r29
    3d20:	cf 93       	push	r28
    3d22:	ff 92       	push	r15
    3d24:	ef 92       	push	r14
    3d26:	7f 92       	push	r7
    3d28:	6f 92       	push	r6
    3d2a:	0e 94 69 2e 	call	0x5cd2	; 0x5cd2 <sprintf>
		serial.writestr("Q"); serial.writestr(qindex); serial.writestr(": Theta - ");
    3d2e:	67 eb       	ldi	r22, 0xB7	; 183
    3d30:	70 e0       	ldi	r23, 0x00	; 0
    3d32:	c8 01       	movw	r24, r16
    3d34:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_ZN6Serial8writestrEPc>
    3d38:	66 2d       	mov	r22, r6
    3d3a:	77 2d       	mov	r23, r7
    3d3c:	c8 01       	movw	r24, r16
    3d3e:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_ZN6Serial8writestrEPc>
    3d42:	69 eb       	ldi	r22, 0xB9	; 185
    3d44:	70 e0       	ldi	r23, 0x00	; 0
    3d46:	c8 01       	movw	r24, r16
    3d48:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_ZN6Serial8writestrEPc>
		serial.writestr(thedim);
    3d4c:	68 2d       	mov	r22, r8
    3d4e:	79 2d       	mov	r23, r9
    3d50:	c8 01       	movw	r24, r16
    3d52:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_ZN6Serial8writestrEPc>
		serial.writestr(" , Phi - ");
    3d56:	64 ec       	ldi	r22, 0xC4	; 196
    3d58:	70 e0       	ldi	r23, 0x00	; 0
    3d5a:	c8 01       	movw	r24, r16
    3d5c:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_ZN6Serial8writestrEPc>
		serial.writestrln(phidim);
    3d60:	6a 2d       	mov	r22, r10
    3d62:	7b 2d       	mov	r23, r11
    3d64:	c8 01       	movw	r24, r16
    3d66:	0e 94 4a 27 	call	0x4e94	; 0x4e94 <_ZN6Serial10writestrlnEPc>
	PORTA|=(state<<pin); // SET PIN
}
void QEPU::dumpmem(){
	serial.writestrln("");
	serial.writestrln("** QUANTUM MEMORY DUMP **");
	for(int i=0;i<QUBIT_COUNT;i++){
    3d6a:	21 96       	adiw	r28, 0x01	; 1
    3d6c:	8d b7       	in	r24, 0x3d	; 61
    3d6e:	9e b7       	in	r25, 0x3e	; 62
    3d70:	42 96       	adiw	r24, 0x12	; 18
    3d72:	0f b6       	in	r0, 0x3f	; 63
    3d74:	f8 94       	cli
    3d76:	9e bf       	out	0x3e, r25	; 62
    3d78:	0f be       	out	0x3f, r0	; 63
    3d7a:	8d bf       	out	0x3d, r24	; 61
    3d7c:	c4 30       	cpi	r28, 0x04	; 4
    3d7e:	d1 05       	cpc	r29, r1
    3d80:	09 f0       	breq	.+2      	; 0x3d84 <_ZN4QEPU7dumpmemEv+0x10a>
    3d82:	9f cf       	rjmp	.-194    	; 0x3cc2 <_ZN4QEPU7dumpmemEv+0x48>
		serial.writestr("Q"); serial.writestr(qindex); serial.writestr(": Theta - ");
		serial.writestr(thedim);
		serial.writestr(" , Phi - ");
		serial.writestrln(phidim);
	}
}
    3d84:	df 91       	pop	r29
    3d86:	cf 91       	pop	r28
    3d88:	1f 91       	pop	r17
    3d8a:	0f 91       	pop	r16
    3d8c:	ff 90       	pop	r15
    3d8e:	ef 90       	pop	r14
    3d90:	df 90       	pop	r13
    3d92:	cf 90       	pop	r12
    3d94:	bf 90       	pop	r11
    3d96:	af 90       	pop	r10
    3d98:	9f 90       	pop	r9
    3d9a:	8f 90       	pop	r8
    3d9c:	7f 90       	pop	r7
    3d9e:	6f 90       	pop	r6
    3da0:	08 95       	ret

00003da2 <_ZN4QEPU5Utils10int2binstrEii>:

char * QEPU::Utils::int2binstr(int num,int strlength){
    3da2:	0f 93       	push	r16
    3da4:	1f 93       	push	r17
    3da6:	cf 93       	push	r28
    3da8:	df 93       	push	r29
    3daa:	06 2f       	mov	r16, r22
    3dac:	17 2f       	mov	r17, r23
    3dae:	ea 01       	movw	r28, r20
    char * str = (char*)malloc(strlength + 1);
    3db0:	ca 01       	movw	r24, r20
    3db2:	01 96       	adiw	r24, 0x01	; 1
    3db4:	0e 94 a8 2b 	call	0x5750	; 0x5750 <malloc>
    if(!str) return NULL;
    3db8:	00 97       	sbiw	r24, 0x00	; 0
    3dba:	b9 f0       	breq	.+46     	; 0x3dea <_ZN4QEPU5Utils10int2binstrEii+0x48>
    str[strlength] = 0;
    3dbc:	fc 01       	movw	r30, r24
    3dbe:	ec 0f       	add	r30, r28
    3dc0:	fd 1f       	adc	r31, r29
    3dc2:	10 82       	st	Z, r1

    // type punning because signed shift is implementation-defined
    unsigned u = *(unsigned *)&num;
    3dc4:	20 2f       	mov	r18, r16
    3dc6:	31 2f       	mov	r19, r17
    for(; strlength--; u >>= 1)
    3dc8:	be 01       	movw	r22, r28
    3dca:	61 50       	subi	r22, 0x01	; 1
    3dcc:	71 09       	sbc	r23, r1
    3dce:	cd 2b       	or	r28, r29
    3dd0:	71 f0       	breq	.+28     	; 0x3dee <_ZN4QEPU5Utils10int2binstrEii+0x4c>
    str[strlength] = u & 1 ? '1' : '0';
    3dd2:	20 ff       	sbrs	r18, 0
    3dd4:	02 c0       	rjmp	.+4      	; 0x3dda <_ZN4QEPU5Utils10int2binstrEii+0x38>
    3dd6:	41 e3       	ldi	r20, 0x31	; 49
    3dd8:	01 c0       	rjmp	.+2      	; 0x3ddc <_ZN4QEPU5Utils10int2binstrEii+0x3a>
    3dda:	40 e3       	ldi	r20, 0x30	; 48
    3ddc:	42 93       	st	-Z, r20
    if(!str) return NULL;
    str[strlength] = 0;

    // type punning because signed shift is implementation-defined
    unsigned u = *(unsigned *)&num;
    for(; strlength--; u >>= 1)
    3dde:	36 95       	lsr	r19
    3de0:	27 95       	ror	r18
    3de2:	61 50       	subi	r22, 0x01	; 1
    3de4:	71 09       	sbc	r23, r1
    3de6:	a8 f7       	brcc	.-22     	; 0x3dd2 <_ZN4QEPU5Utils10int2binstrEii+0x30>
    3de8:	02 c0       	rjmp	.+4      	; 0x3dee <_ZN4QEPU5Utils10int2binstrEii+0x4c>
	}
}

char * QEPU::Utils::int2binstr(int num,int strlength){
    char * str = (char*)malloc(strlength + 1);
    if(!str) return NULL;
    3dea:	80 e0       	ldi	r24, 0x00	; 0
    3dec:	90 e0       	ldi	r25, 0x00	; 0
    unsigned u = *(unsigned *)&num;
    for(; strlength--; u >>= 1)
    str[strlength] = u & 1 ? '1' : '0';

    return str;
}
    3dee:	df 91       	pop	r29
    3df0:	cf 91       	pop	r28
    3df2:	1f 91       	pop	r17
    3df4:	0f 91       	pop	r16
    3df6:	08 95       	ret

00003df8 <_ZN4QEPU5Utils10str2intarrEPc>:
char* QEPU::Utils::char2str(char c){
	char*str=(char*)malloc(sizeof(char));
	sprintf(str,"%d",c);
	return str;
}
int*  QEPU::Utils::str2intarr(char* c){
    3df8:	cf 92       	push	r12
    3dfa:	df 92       	push	r13
    3dfc:	ef 92       	push	r14
    3dfe:	ff 92       	push	r15
    3e00:	0f 93       	push	r16
    3e02:	1f 93       	push	r17
    3e04:	cf 93       	push	r28
    3e06:	df 93       	push	r29
    3e08:	d6 2f       	mov	r29, r22
    3e0a:	c7 2f       	mov	r28, r23
    3e0c:	e6 2f       	mov	r30, r22
    3e0e:	f7 2f       	mov	r31, r23
	int c_length=0;
    3e10:	80 e0       	ldi	r24, 0x00	; 0
    3e12:	90 e0       	ldi	r25, 0x00	; 0
	for(int i=0;true;i++) if(c[i]==0xFF && c[i-1]==0xFF && c[i-2]==0xFF && c[i-3]==0xFF && c[i-4]==0xFF) break; else c_length++; c_length-=4;
    3e14:	21 91       	ld	r18, Z+
    3e16:	2f 3f       	cpi	r18, 0xFF	; 255
    3e18:	89 f4       	brne	.+34     	; 0x3e3c <_ZN4QEPU5Utils10str2intarrEPc+0x44>
    3e1a:	df 01       	movw	r26, r30
    3e1c:	12 97       	sbiw	r26, 0x02	; 2
    3e1e:	4c 91       	ld	r20, X
    3e20:	4f 3f       	cpi	r20, 0xFF	; 255
    3e22:	61 f4       	brne	.+24     	; 0x3e3c <_ZN4QEPU5Utils10str2intarrEPc+0x44>
    3e24:	11 97       	sbiw	r26, 0x01	; 1
    3e26:	4c 91       	ld	r20, X
    3e28:	4f 3f       	cpi	r20, 0xFF	; 255
    3e2a:	41 f4       	brne	.+16     	; 0x3e3c <_ZN4QEPU5Utils10str2intarrEPc+0x44>
    3e2c:	11 97       	sbiw	r26, 0x01	; 1
    3e2e:	4c 91       	ld	r20, X
    3e30:	4f 3f       	cpi	r20, 0xFF	; 255
    3e32:	21 f4       	brne	.+8      	; 0x3e3c <_ZN4QEPU5Utils10str2intarrEPc+0x44>
    3e34:	11 97       	sbiw	r26, 0x01	; 1
    3e36:	2c 91       	ld	r18, X
    3e38:	2f 3f       	cpi	r18, 0xFF	; 255
    3e3a:	11 f0       	breq	.+4      	; 0x3e40 <_ZN4QEPU5Utils10str2intarrEPc+0x48>
    3e3c:	01 96       	adiw	r24, 0x01	; 1
    3e3e:	ea cf       	rjmp	.-44     	; 0x3e14 <_ZN4QEPU5Utils10str2intarrEPc+0x1c>
    3e40:	8c 01       	movw	r16, r24
    3e42:	04 50       	subi	r16, 0x04	; 4
    3e44:	11 09       	sbc	r17, r1
	
	int *intarr=(int*)malloc(sizeof(int)*(c_length+5));
    3e46:	6c 01       	movw	r12, r24
    3e48:	2f ef       	ldi	r18, 0xFF	; 255
    3e4a:	c2 1a       	sub	r12, r18
    3e4c:	d2 0a       	sbc	r13, r18
    3e4e:	76 01       	movw	r14, r12
    3e50:	ee 0c       	add	r14, r14
    3e52:	ff 1c       	adc	r15, r15
    3e54:	c7 01       	movw	r24, r14
    3e56:	0e 94 a8 2b 	call	0x5750	; 0x5750 <malloc>
	for(int i=0;i<c_length;i++) intarr[i]=(int)c[i];
    3e5a:	10 16       	cp	r1, r16
    3e5c:	11 06       	cpc	r1, r17
    3e5e:	74 f4       	brge	.+28     	; 0x3e7c <_ZN4QEPU5Utils10str2intarrEPc+0x84>
    3e60:	dc 01       	movw	r26, r24
    3e62:	ed 2f       	mov	r30, r29
    3e64:	fc 2f       	mov	r31, r28
    3e66:	20 e0       	ldi	r18, 0x00	; 0
    3e68:	30 e0       	ldi	r19, 0x00	; 0
    3e6a:	41 91       	ld	r20, Z+
    3e6c:	50 e0       	ldi	r21, 0x00	; 0
    3e6e:	4d 93       	st	X+, r20
    3e70:	5d 93       	st	X+, r21
    3e72:	2f 5f       	subi	r18, 0xFF	; 255
    3e74:	3f 4f       	sbci	r19, 0xFF	; 255
    3e76:	20 17       	cp	r18, r16
    3e78:	31 07       	cpc	r19, r17
    3e7a:	bc f3       	brlt	.-18     	; 0x3e6a <_ZN4QEPU5Utils10str2intarrEPc+0x72>
	for(int i=c_length;i<c_length+5;i++) intarr[i]=0xFF;
    3e7c:	0c 15       	cp	r16, r12
    3e7e:	1d 05       	cpc	r17, r13
    3e80:	7c f4       	brge	.+30     	; 0x3ea0 <_ZN4QEPU5Utils10str2intarrEPc+0xa8>
    3e82:	f7 01       	movw	r30, r14
    3e84:	3a 97       	sbiw	r30, 0x0a	; 10
    3e86:	e8 0f       	add	r30, r24
    3e88:	f9 1f       	adc	r31, r25
    3e8a:	25 e0       	ldi	r18, 0x05	; 5
    3e8c:	30 e0       	ldi	r19, 0x00	; 0
    3e8e:	4f ef       	ldi	r20, 0xFF	; 255
    3e90:	50 e0       	ldi	r21, 0x00	; 0
    3e92:	41 93       	st	Z+, r20
    3e94:	51 93       	st	Z+, r21
    3e96:	21 50       	subi	r18, 0x01	; 1
    3e98:	31 09       	sbc	r19, r1
    3e9a:	21 15       	cp	r18, r1
    3e9c:	31 05       	cpc	r19, r1
    3e9e:	c9 f7       	brne	.-14     	; 0x3e92 <_ZN4QEPU5Utils10str2intarrEPc+0x9a>
	return intarr;
}
    3ea0:	df 91       	pop	r29
    3ea2:	cf 91       	pop	r28
    3ea4:	1f 91       	pop	r17
    3ea6:	0f 91       	pop	r16
    3ea8:	ff 90       	pop	r15
    3eaa:	ef 90       	pop	r14
    3eac:	df 90       	pop	r13
    3eae:	cf 90       	pop	r12
    3eb0:	08 95       	ret

00003eb2 <_ZN4QEPU5Utils7int2strEi>:
		dec/=10;
		++counter;
	}
	return counter;
}
char* QEPU::Utils::int2str(int dec){
    3eb2:	0f 93       	push	r16
    3eb4:	1f 93       	push	r17
    3eb6:	cf 93       	push	r28
    3eb8:	df 93       	push	r29
    3eba:	cd b7       	in	r28, 0x3d	; 61
    3ebc:	de b7       	in	r29, 0x3e	; 62
    3ebe:	c4 56       	subi	r28, 0x64	; 100
    3ec0:	d1 09       	sbc	r29, r1
    3ec2:	0f b6       	in	r0, 0x3f	; 63
    3ec4:	f8 94       	cli
    3ec6:	de bf       	out	0x3e, r29	; 62
    3ec8:	0f be       	out	0x3f, r0	; 63
    3eca:	cd bf       	out	0x3d, r28	; 61
	char str[100];
	sprintf(str,"%d",dec);
    3ecc:	7f 93       	push	r23
    3ece:	6f 93       	push	r22
    3ed0:	84 eb       	ldi	r24, 0xB4	; 180
    3ed2:	90 e0       	ldi	r25, 0x00	; 0
    3ed4:	9f 93       	push	r25
    3ed6:	8f 93       	push	r24
    3ed8:	8e 01       	movw	r16, r28
    3eda:	0f 5f       	subi	r16, 0xFF	; 255
    3edc:	1f 4f       	sbci	r17, 0xFF	; 255
    3ede:	1f 93       	push	r17
    3ee0:	0f 93       	push	r16
    3ee2:	0e 94 69 2e 	call	0x5cd2	; 0x5cd2 <sprintf>
	return str;
    3ee6:	0f 90       	pop	r0
    3ee8:	0f 90       	pop	r0
    3eea:	0f 90       	pop	r0
    3eec:	0f 90       	pop	r0
    3eee:	0f 90       	pop	r0
    3ef0:	0f 90       	pop	r0
}
    3ef2:	c8 01       	movw	r24, r16
    3ef4:	cc 59       	subi	r28, 0x9C	; 156
    3ef6:	df 4f       	sbci	r29, 0xFF	; 255
    3ef8:	0f b6       	in	r0, 0x3f	; 63
    3efa:	f8 94       	cli
    3efc:	de bf       	out	0x3e, r29	; 62
    3efe:	0f be       	out	0x3f, r0	; 63
    3f00:	cd bf       	out	0x3d, r28	; 61
    3f02:	df 91       	pop	r29
    3f04:	cf 91       	pop	r28
    3f06:	1f 91       	pop	r17
    3f08:	0f 91       	pop	r16
    3f0a:	08 95       	ret

00003f0c <_ZN4QEPU5Utils5delayEi>:
	sprintf(str2,"%d",n2);
	strcat(str1,str2);
	return atoi(str1);
}
int QEPU::Utils::delay(int ms){
	while(ms--) _delay_ms(1);
    3f0c:	61 15       	cp	r22, r1
    3f0e:	71 05       	cpc	r23, r1
    3f10:	51 f0       	breq	.+20     	; 0x3f26 <_ZN4QEPU5Utils5delayEi+0x1a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3f12:	86 e6       	ldi	r24, 0x66	; 102
    3f14:	9e e0       	ldi	r25, 0x0E	; 14
    3f16:	01 97       	sbiw	r24, 0x01	; 1
    3f18:	f1 f7       	brne	.-4      	; 0x3f16 <_ZN4QEPU5Utils5delayEi+0xa>
    3f1a:	00 00       	nop
    3f1c:	61 50       	subi	r22, 0x01	; 1
    3f1e:	71 09       	sbc	r23, r1
    3f20:	61 15       	cp	r22, r1
    3f22:	71 05       	cpc	r23, r1
    3f24:	b1 f7       	brne	.-20     	; 0x3f12 <_ZN4QEPU5Utils5delayEi+0x6>
}
    3f26:	08 95       	ret

00003f28 <_ZN4QEPU7executeEilll>:
	}
	dumpmem();
	#pragma endregion
}

void QEPU::execute(int func,int32_t op1,int32_t op2,int32_t op3){
    3f28:	2f 92       	push	r2
    3f2a:	3f 92       	push	r3
    3f2c:	4f 92       	push	r4
    3f2e:	5f 92       	push	r5
    3f30:	6f 92       	push	r6
    3f32:	7f 92       	push	r7
    3f34:	8f 92       	push	r8
    3f36:	9f 92       	push	r9
    3f38:	af 92       	push	r10
    3f3a:	bf 92       	push	r11
    3f3c:	cf 92       	push	r12
    3f3e:	df 92       	push	r13
    3f40:	ef 92       	push	r14
    3f42:	ff 92       	push	r15
    3f44:	0f 93       	push	r16
    3f46:	1f 93       	push	r17
    3f48:	cf 93       	push	r28
    3f4a:	df 93       	push	r29
    3f4c:	cd b7       	in	r28, 0x3d	; 61
    3f4e:	de b7       	in	r29, 0x3e	; 62
    3f50:	2a 97       	sbiw	r28, 0x0a	; 10
    3f52:	0f b6       	in	r0, 0x3f	; 63
    3f54:	f8 94       	cli
    3f56:	de bf       	out	0x3e, r29	; 62
    3f58:	0f be       	out	0x3f, r0	; 63
    3f5a:	cd bf       	out	0x3d, r28	; 61
    3f5c:	4c 01       	movw	r8, r24
    3f5e:	1b 01       	movw	r2, r22
    3f60:	29 01       	movw	r4, r18
    3f62:	3a 01       	movw	r6, r20
    3f64:	e9 82       	std	Y+1, r14	; 0x01
    3f66:	fa 82       	std	Y+2, r15	; 0x02
    3f68:	0b 83       	std	Y+3, r16	; 0x03
    3f6a:	1c 83       	std	Y+4, r17	; 0x04
    3f6c:	ad 82       	std	Y+5, r10	; 0x05
    3f6e:	be 82       	std	Y+6, r11	; 0x06
    3f70:	cf 82       	std	Y+7, r12	; 0x07
    3f72:	d8 86       	std	Y+8, r13	; 0x08
	int * newthephi=(int*)malloc(sizeof(int)*MAX_NEWTHEPHI);
    3f74:	8c e0       	ldi	r24, 0x0C	; 12
    3f76:	90 e0       	ldi	r25, 0x00	; 0
    3f78:	0e 94 a8 2b 	call	0x5750	; 0x5750 <malloc>
    3f7c:	8c 01       	movw	r16, r24
	//TODO: MAKE A SWITCH ON THE FUNCTION
	switch(func){
    3f7e:	f1 01       	movw	r30, r2
    3f80:	31 97       	sbiw	r30, 0x01	; 1
    3f82:	e2 32       	cpi	r30, 0x22	; 34
    3f84:	f1 05       	cpc	r31, r1
    3f86:	08 f0       	brcs	.+2      	; 0x3f8a <_ZN4QEPU7executeEilll+0x62>
    3f88:	14 c5       	rjmp	.+2600   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
    3f8a:	e6 5d       	subi	r30, 0xD6	; 214
    3f8c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f8e:	0c 94 8e 2b 	jmp	0x571c	; 0x571c <__tablejump2__>
		//DATA MOVEMENT AND PROGRAM CONTROL/FLUX/IO FUNCTIONS:
		case 0x01: /*MOV*/
			write(op1,THE,read(op2,THE));
    3f92:	40 e0       	ldi	r20, 0x00	; 0
    3f94:	50 e0       	ldi	r21, 0x00	; 0
    3f96:	69 81       	ldd	r22, Y+1	; 0x01
    3f98:	7a 81       	ldd	r23, Y+2	; 0x02
    3f9a:	c4 01       	movw	r24, r8
    3f9c:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    3fa0:	9c 01       	movw	r18, r24
    3fa2:	40 e0       	ldi	r20, 0x00	; 0
    3fa4:	50 e0       	ldi	r21, 0x00	; 0
    3fa6:	b2 01       	movw	r22, r4
    3fa8:	c4 01       	movw	r24, r8
    3faa:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
			write(op1,PHI,read(op2,PHI));
    3fae:	41 e0       	ldi	r20, 0x01	; 1
    3fb0:	50 e0       	ldi	r21, 0x00	; 0
    3fb2:	69 81       	ldd	r22, Y+1	; 0x01
    3fb4:	7a 81       	ldd	r23, Y+2	; 0x02
    3fb6:	c4 01       	movw	r24, r8
    3fb8:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    3fbc:	9c 01       	movw	r18, r24
    3fbe:	41 e0       	ldi	r20, 0x01	; 1
    3fc0:	50 e0       	ldi	r21, 0x00	; 0
    3fc2:	b2 01       	movw	r22, r4
    3fc4:	c4 01       	movw	r24, r8
    3fc6:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    3fca:	f3 c4       	rjmp	.+2534   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x02: /*JMP(jump)*/ 
			program_counter=op1-1; 
    3fcc:	81 e0       	ldi	r24, 0x01	; 1
    3fce:	48 1a       	sub	r4, r24
    3fd0:	51 08       	sbc	r5, r1
    3fd2:	f4 01       	movw	r30, r8
    3fd4:	54 82       	std	Z+4, r5	; 0x04
    3fd6:	43 82       	std	Z+3, r4	; 0x03
		break;
    3fd8:	ec c4       	rjmp	.+2520   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
    3fda:	ff cf       	rjmp	.-2      	; 0x3fda <_ZN4QEPU7executeEilll+0xb2>
    3fdc:	ff cf       	rjmp	.-2      	; 0x3fdc <_ZN4QEPU7executeEilll+0xb4>
		case 0x08: /*RET(return)*/ 
			//NEEDS ADDRESS FROM 'JUMP' SYSTEM
		break;
		case 0x09: /*END(end)*/ while(1); break;
		case 0x0A: /*DLY(delay)*/ 
			utils.delay(op1);	break;
    3fde:	b2 01       	movw	r22, r4
    3fe0:	c4 01       	movw	r24, r8
    3fe2:	02 96       	adiw	r24, 0x02	; 2
    3fe4:	0e 94 86 1f 	call	0x3f0c	; 0x3f0c <_ZN4QEPU5Utils5delayEi>
    3fe8:	e4 c4       	rjmp	.+2504   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		break;
		case 0x0D: /*STR(store)*/ 
			//NEEDS MEMORY SYSTEM
		break;
		case 0x0E: /*CMT(constantmovtheta)*/ 
			write(op1,THE,op2);
    3fea:	29 81       	ldd	r18, Y+1	; 0x01
    3fec:	3a 81       	ldd	r19, Y+2	; 0x02
    3fee:	40 e0       	ldi	r20, 0x00	; 0
    3ff0:	50 e0       	ldi	r21, 0x00	; 0
    3ff2:	b2 01       	movw	r22, r4
    3ff4:	c4 01       	movw	r24, r8
    3ff6:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    3ffa:	db c4       	rjmp	.+2486   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x0F: /*CMP(constantmovphi)*/
			write(op1,PHI,op2);
    3ffc:	29 81       	ldd	r18, Y+1	; 0x01
    3ffe:	3a 81       	ldd	r19, Y+2	; 0x02
    4000:	41 e0       	ldi	r20, 0x01	; 1
    4002:	50 e0       	ldi	r21, 0x00	; 0
    4004:	b2 01       	movw	r22, r4
    4006:	c4 01       	movw	r24, r8
    4008:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    400c:	d2 c4       	rjmp	.+2468   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		//QUANTUM FUNCTIONS:
		//1 QUBIT GATES -
		case 0x10: // X GATE
			newthephi=gates.X(read(op1,THE),read(op1,PHI));
    400e:	41 e0       	ldi	r20, 0x01	; 1
    4010:	50 e0       	ldi	r21, 0x00	; 0
    4012:	b2 01       	movw	r22, r4
    4014:	c4 01       	movw	r24, r8
    4016:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    401a:	8c 01       	movw	r16, r24
    401c:	40 e0       	ldi	r20, 0x00	; 0
    401e:	50 e0       	ldi	r21, 0x00	; 0
    4020:	b2 01       	movw	r22, r4
    4022:	c4 01       	movw	r24, r8
    4024:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4028:	a8 01       	movw	r20, r16
    402a:	bc 01       	movw	r22, r24
    402c:	c4 01       	movw	r24, r8
    402e:	05 96       	adiw	r24, 0x05	; 5
    4030:	0e 94 17 09 	call	0x122e	; 0x122e <_ZN5Gates1XEii>
    4034:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    4036:	fc 01       	movw	r30, r24
    4038:	20 81       	ld	r18, Z
    403a:	31 81       	ldd	r19, Z+1	; 0x01
    403c:	40 e0       	ldi	r20, 0x00	; 0
    403e:	50 e0       	ldi	r21, 0x00	; 0
    4040:	b2 01       	movw	r22, r4
    4042:	c4 01       	movw	r24, r8
    4044:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    4048:	f8 01       	movw	r30, r16
    404a:	22 81       	ldd	r18, Z+2	; 0x02
    404c:	33 81       	ldd	r19, Z+3	; 0x03
    404e:	41 e0       	ldi	r20, 0x01	; 1
    4050:	50 e0       	ldi	r21, 0x00	; 0
    4052:	b2 01       	movw	r22, r4
    4054:	c4 01       	movw	r24, r8
    4056:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    405a:	ab c4       	rjmp	.+2390   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x11: // Y GATE
			newthephi=gates.Y(read(op1,THE),read(op1,PHI));
    405c:	41 e0       	ldi	r20, 0x01	; 1
    405e:	50 e0       	ldi	r21, 0x00	; 0
    4060:	b2 01       	movw	r22, r4
    4062:	c4 01       	movw	r24, r8
    4064:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4068:	8c 01       	movw	r16, r24
    406a:	40 e0       	ldi	r20, 0x00	; 0
    406c:	50 e0       	ldi	r21, 0x00	; 0
    406e:	b2 01       	movw	r22, r4
    4070:	c4 01       	movw	r24, r8
    4072:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4076:	a8 01       	movw	r20, r16
    4078:	bc 01       	movw	r22, r24
    407a:	c4 01       	movw	r24, r8
    407c:	05 96       	adiw	r24, 0x05	; 5
    407e:	0e 94 81 09 	call	0x1302	; 0x1302 <_ZN5Gates1YEii>
    4082:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    4084:	fc 01       	movw	r30, r24
    4086:	20 81       	ld	r18, Z
    4088:	31 81       	ldd	r19, Z+1	; 0x01
    408a:	40 e0       	ldi	r20, 0x00	; 0
    408c:	50 e0       	ldi	r21, 0x00	; 0
    408e:	b2 01       	movw	r22, r4
    4090:	c4 01       	movw	r24, r8
    4092:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    4096:	f8 01       	movw	r30, r16
    4098:	22 81       	ldd	r18, Z+2	; 0x02
    409a:	33 81       	ldd	r19, Z+3	; 0x03
    409c:	41 e0       	ldi	r20, 0x01	; 1
    409e:	50 e0       	ldi	r21, 0x00	; 0
    40a0:	b2 01       	movw	r22, r4
    40a2:	c4 01       	movw	r24, r8
    40a4:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    40a8:	84 c4       	rjmp	.+2312   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x12: // Z GATE
			newthephi=gates.Z(read(op1,THE),read(op1,PHI));
    40aa:	41 e0       	ldi	r20, 0x01	; 1
    40ac:	50 e0       	ldi	r21, 0x00	; 0
    40ae:	b2 01       	movw	r22, r4
    40b0:	c4 01       	movw	r24, r8
    40b2:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    40b6:	8c 01       	movw	r16, r24
    40b8:	40 e0       	ldi	r20, 0x00	; 0
    40ba:	50 e0       	ldi	r21, 0x00	; 0
    40bc:	b2 01       	movw	r22, r4
    40be:	c4 01       	movw	r24, r8
    40c0:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    40c4:	a8 01       	movw	r20, r16
    40c6:	bc 01       	movw	r22, r24
    40c8:	c4 01       	movw	r24, r8
    40ca:	05 96       	adiw	r24, 0x05	; 5
    40cc:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <_ZN5Gates1ZEii>
    40d0:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    40d2:	fc 01       	movw	r30, r24
    40d4:	20 81       	ld	r18, Z
    40d6:	31 81       	ldd	r19, Z+1	; 0x01
    40d8:	40 e0       	ldi	r20, 0x00	; 0
    40da:	50 e0       	ldi	r21, 0x00	; 0
    40dc:	b2 01       	movw	r22, r4
    40de:	c4 01       	movw	r24, r8
    40e0:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    40e4:	f8 01       	movw	r30, r16
    40e6:	22 81       	ldd	r18, Z+2	; 0x02
    40e8:	33 81       	ldd	r19, Z+3	; 0x03
    40ea:	41 e0       	ldi	r20, 0x01	; 1
    40ec:	50 e0       	ldi	r21, 0x00	; 0
    40ee:	b2 01       	movw	r22, r4
    40f0:	c4 01       	movw	r24, r8
    40f2:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    40f6:	5d c4       	rjmp	.+2234   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x13: // H GATE
			newthephi=gates.H(read(op1,THE),read(op1,PHI));
    40f8:	41 e0       	ldi	r20, 0x01	; 1
    40fa:	50 e0       	ldi	r21, 0x00	; 0
    40fc:	b2 01       	movw	r22, r4
    40fe:	c4 01       	movw	r24, r8
    4100:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4104:	8c 01       	movw	r16, r24
    4106:	40 e0       	ldi	r20, 0x00	; 0
    4108:	50 e0       	ldi	r21, 0x00	; 0
    410a:	b2 01       	movw	r22, r4
    410c:	c4 01       	movw	r24, r8
    410e:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4112:	a8 01       	movw	r20, r16
    4114:	bc 01       	movw	r22, r24
    4116:	c4 01       	movw	r24, r8
    4118:	05 96       	adiw	r24, 0x05	; 5
    411a:	0e 94 55 0a 	call	0x14aa	; 0x14aa <_ZN5Gates1HEii>
    411e:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    4120:	fc 01       	movw	r30, r24
    4122:	20 81       	ld	r18, Z
    4124:	31 81       	ldd	r19, Z+1	; 0x01
    4126:	40 e0       	ldi	r20, 0x00	; 0
    4128:	50 e0       	ldi	r21, 0x00	; 0
    412a:	b2 01       	movw	r22, r4
    412c:	c4 01       	movw	r24, r8
    412e:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    4132:	f8 01       	movw	r30, r16
    4134:	22 81       	ldd	r18, Z+2	; 0x02
    4136:	33 81       	ldd	r19, Z+3	; 0x03
    4138:	41 e0       	ldi	r20, 0x01	; 1
    413a:	50 e0       	ldi	r21, 0x00	; 0
    413c:	b2 01       	movw	r22, r4
    413e:	c4 01       	movw	r24, r8
    4140:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    4144:	36 c4       	rjmp	.+2156   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x14: // S GATE
			newthephi=gates.S(read(op1,THE),read(op1,PHI));
    4146:	41 e0       	ldi	r20, 0x01	; 1
    4148:	50 e0       	ldi	r21, 0x00	; 0
    414a:	b2 01       	movw	r22, r4
    414c:	c4 01       	movw	r24, r8
    414e:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4152:	8c 01       	movw	r16, r24
    4154:	40 e0       	ldi	r20, 0x00	; 0
    4156:	50 e0       	ldi	r21, 0x00	; 0
    4158:	b2 01       	movw	r22, r4
    415a:	c4 01       	movw	r24, r8
    415c:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4160:	a8 01       	movw	r20, r16
    4162:	bc 01       	movw	r22, r24
    4164:	c4 01       	movw	r24, r8
    4166:	05 96       	adiw	r24, 0x05	; 5
    4168:	0e 94 c3 0a 	call	0x1586	; 0x1586 <_ZN5Gates1SEii>
    416c:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    416e:	fc 01       	movw	r30, r24
    4170:	20 81       	ld	r18, Z
    4172:	31 81       	ldd	r19, Z+1	; 0x01
    4174:	40 e0       	ldi	r20, 0x00	; 0
    4176:	50 e0       	ldi	r21, 0x00	; 0
    4178:	b2 01       	movw	r22, r4
    417a:	c4 01       	movw	r24, r8
    417c:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    4180:	f8 01       	movw	r30, r16
    4182:	22 81       	ldd	r18, Z+2	; 0x02
    4184:	33 81       	ldd	r19, Z+3	; 0x03
    4186:	41 e0       	ldi	r20, 0x01	; 1
    4188:	50 e0       	ldi	r21, 0x00	; 0
    418a:	b2 01       	movw	r22, r4
    418c:	c4 01       	movw	r24, r8
    418e:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    4192:	0f c4       	rjmp	.+2078   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x15: // T GATE
			newthephi=gates.T(read(op1,THE),read(op1,PHI));
    4194:	41 e0       	ldi	r20, 0x01	; 1
    4196:	50 e0       	ldi	r21, 0x00	; 0
    4198:	b2 01       	movw	r22, r4
    419a:	c4 01       	movw	r24, r8
    419c:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    41a0:	8c 01       	movw	r16, r24
    41a2:	40 e0       	ldi	r20, 0x00	; 0
    41a4:	50 e0       	ldi	r21, 0x00	; 0
    41a6:	b2 01       	movw	r22, r4
    41a8:	c4 01       	movw	r24, r8
    41aa:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    41ae:	a8 01       	movw	r20, r16
    41b0:	bc 01       	movw	r22, r24
    41b2:	c4 01       	movw	r24, r8
    41b4:	05 96       	adiw	r24, 0x05	; 5
    41b6:	0e 94 2d 0b 	call	0x165a	; 0x165a <_ZN5Gates1TEii>
    41ba:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    41bc:	fc 01       	movw	r30, r24
    41be:	20 81       	ld	r18, Z
    41c0:	31 81       	ldd	r19, Z+1	; 0x01
    41c2:	40 e0       	ldi	r20, 0x00	; 0
    41c4:	50 e0       	ldi	r21, 0x00	; 0
    41c6:	b2 01       	movw	r22, r4
    41c8:	c4 01       	movw	r24, r8
    41ca:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    41ce:	f8 01       	movw	r30, r16
    41d0:	22 81       	ldd	r18, Z+2	; 0x02
    41d2:	33 81       	ldd	r19, Z+3	; 0x03
    41d4:	41 e0       	ldi	r20, 0x01	; 1
    41d6:	50 e0       	ldi	r21, 0x00	; 0
    41d8:	b2 01       	movw	r22, r4
    41da:	c4 01       	movw	r24, r8
    41dc:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    41e0:	e8 c3       	rjmp	.+2000   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		//2 QUBIT GATES -
		case 0x16: 
			newthephi=gates.CNO(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    41e2:	41 e0       	ldi	r20, 0x01	; 1
    41e4:	50 e0       	ldi	r21, 0x00	; 0
    41e6:	69 81       	ldd	r22, Y+1	; 0x01
    41e8:	7a 81       	ldd	r23, Y+2	; 0x02
    41ea:	c4 01       	movw	r24, r8
    41ec:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    41f0:	8c 01       	movw	r16, r24
    41f2:	40 e0       	ldi	r20, 0x00	; 0
    41f4:	50 e0       	ldi	r21, 0x00	; 0
    41f6:	69 81       	ldd	r22, Y+1	; 0x01
    41f8:	7a 81       	ldd	r23, Y+2	; 0x02
    41fa:	c4 01       	movw	r24, r8
    41fc:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4200:	5c 01       	movw	r10, r24
    4202:	41 e0       	ldi	r20, 0x01	; 1
    4204:	50 e0       	ldi	r21, 0x00	; 0
    4206:	b2 01       	movw	r22, r4
    4208:	c4 01       	movw	r24, r8
    420a:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    420e:	7c 01       	movw	r14, r24
    4210:	40 e0       	ldi	r20, 0x00	; 0
    4212:	50 e0       	ldi	r21, 0x00	; 0
    4214:	b2 01       	movw	r22, r4
    4216:	c4 01       	movw	r24, r8
    4218:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    421c:	95 01       	movw	r18, r10
    421e:	a7 01       	movw	r20, r14
    4220:	bc 01       	movw	r22, r24
    4222:	c4 01       	movw	r24, r8
    4224:	05 96       	adiw	r24, 0x05	; 5
    4226:	0e 94 96 0b 	call	0x172c	; 0x172c <_ZN5Gates3CNOEiiii>
    422a:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    422c:	fc 01       	movw	r30, r24
    422e:	20 81       	ld	r18, Z
    4230:	31 81       	ldd	r19, Z+1	; 0x01
    4232:	40 e0       	ldi	r20, 0x00	; 0
    4234:	50 e0       	ldi	r21, 0x00	; 0
    4236:	b2 01       	movw	r22, r4
    4238:	c4 01       	movw	r24, r8
    423a:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    423e:	f8 01       	movw	r30, r16
    4240:	22 81       	ldd	r18, Z+2	; 0x02
    4242:	33 81       	ldd	r19, Z+3	; 0x03
    4244:	41 e0       	ldi	r20, 0x01	; 1
    4246:	50 e0       	ldi	r21, 0x00	; 0
    4248:	b2 01       	movw	r22, r4
    424a:	c4 01       	movw	r24, r8
    424c:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4250:	f8 01       	movw	r30, r16
    4252:	24 81       	ldd	r18, Z+4	; 0x04
    4254:	35 81       	ldd	r19, Z+5	; 0x05
    4256:	40 e0       	ldi	r20, 0x00	; 0
    4258:	50 e0       	ldi	r21, 0x00	; 0
    425a:	69 81       	ldd	r22, Y+1	; 0x01
    425c:	7a 81       	ldd	r23, Y+2	; 0x02
    425e:	c4 01       	movw	r24, r8
    4260:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    4264:	f8 01       	movw	r30, r16
    4266:	26 81       	ldd	r18, Z+6	; 0x06
    4268:	37 81       	ldd	r19, Z+7	; 0x07
    426a:	41 e0       	ldi	r20, 0x01	; 1
    426c:	50 e0       	ldi	r21, 0x00	; 0
    426e:	69 81       	ldd	r22, Y+1	; 0x01
    4270:	7a 81       	ldd	r23, Y+2	; 0x02
    4272:	c4 01       	movw	r24, r8
    4274:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    4278:	9c c3       	rjmp	.+1848   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x17:
			newthephi=gates.CSI(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    427a:	41 e0       	ldi	r20, 0x01	; 1
    427c:	50 e0       	ldi	r21, 0x00	; 0
    427e:	69 81       	ldd	r22, Y+1	; 0x01
    4280:	7a 81       	ldd	r23, Y+2	; 0x02
    4282:	c4 01       	movw	r24, r8
    4284:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4288:	8c 01       	movw	r16, r24
    428a:	40 e0       	ldi	r20, 0x00	; 0
    428c:	50 e0       	ldi	r21, 0x00	; 0
    428e:	69 81       	ldd	r22, Y+1	; 0x01
    4290:	7a 81       	ldd	r23, Y+2	; 0x02
    4292:	c4 01       	movw	r24, r8
    4294:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4298:	5c 01       	movw	r10, r24
    429a:	41 e0       	ldi	r20, 0x01	; 1
    429c:	50 e0       	ldi	r21, 0x00	; 0
    429e:	b2 01       	movw	r22, r4
    42a0:	c4 01       	movw	r24, r8
    42a2:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    42a6:	7c 01       	movw	r14, r24
    42a8:	40 e0       	ldi	r20, 0x00	; 0
    42aa:	50 e0       	ldi	r21, 0x00	; 0
    42ac:	b2 01       	movw	r22, r4
    42ae:	c4 01       	movw	r24, r8
    42b0:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    42b4:	95 01       	movw	r18, r10
    42b6:	a7 01       	movw	r20, r14
    42b8:	bc 01       	movw	r22, r24
    42ba:	c4 01       	movw	r24, r8
    42bc:	05 96       	adiw	r24, 0x05	; 5
    42be:	0e 94 98 0c 	call	0x1930	; 0x1930 <_ZN5Gates3CSIEiiii>
    42c2:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    42c4:	fc 01       	movw	r30, r24
    42c6:	20 81       	ld	r18, Z
    42c8:	31 81       	ldd	r19, Z+1	; 0x01
    42ca:	40 e0       	ldi	r20, 0x00	; 0
    42cc:	50 e0       	ldi	r21, 0x00	; 0
    42ce:	b2 01       	movw	r22, r4
    42d0:	c4 01       	movw	r24, r8
    42d2:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    42d6:	f8 01       	movw	r30, r16
    42d8:	22 81       	ldd	r18, Z+2	; 0x02
    42da:	33 81       	ldd	r19, Z+3	; 0x03
    42dc:	41 e0       	ldi	r20, 0x01	; 1
    42de:	50 e0       	ldi	r21, 0x00	; 0
    42e0:	b2 01       	movw	r22, r4
    42e2:	c4 01       	movw	r24, r8
    42e4:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    42e8:	f8 01       	movw	r30, r16
    42ea:	24 81       	ldd	r18, Z+4	; 0x04
    42ec:	35 81       	ldd	r19, Z+5	; 0x05
    42ee:	40 e0       	ldi	r20, 0x00	; 0
    42f0:	50 e0       	ldi	r21, 0x00	; 0
    42f2:	69 81       	ldd	r22, Y+1	; 0x01
    42f4:	7a 81       	ldd	r23, Y+2	; 0x02
    42f6:	c4 01       	movw	r24, r8
    42f8:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    42fc:	f8 01       	movw	r30, r16
    42fe:	26 81       	ldd	r18, Z+6	; 0x06
    4300:	37 81       	ldd	r19, Z+7	; 0x07
    4302:	41 e0       	ldi	r20, 0x01	; 1
    4304:	50 e0       	ldi	r21, 0x00	; 0
    4306:	69 81       	ldd	r22, Y+1	; 0x01
    4308:	7a 81       	ldd	r23, Y+2	; 0x02
    430a:	c4 01       	movw	r24, r8
    430c:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    4310:	50 c3       	rjmp	.+1696   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x18: 
			newthephi=gates.SWA(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    4312:	41 e0       	ldi	r20, 0x01	; 1
    4314:	50 e0       	ldi	r21, 0x00	; 0
    4316:	69 81       	ldd	r22, Y+1	; 0x01
    4318:	7a 81       	ldd	r23, Y+2	; 0x02
    431a:	c4 01       	movw	r24, r8
    431c:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4320:	8c 01       	movw	r16, r24
    4322:	40 e0       	ldi	r20, 0x00	; 0
    4324:	50 e0       	ldi	r21, 0x00	; 0
    4326:	69 81       	ldd	r22, Y+1	; 0x01
    4328:	7a 81       	ldd	r23, Y+2	; 0x02
    432a:	c4 01       	movw	r24, r8
    432c:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4330:	5c 01       	movw	r10, r24
    4332:	41 e0       	ldi	r20, 0x01	; 1
    4334:	50 e0       	ldi	r21, 0x00	; 0
    4336:	b2 01       	movw	r22, r4
    4338:	c4 01       	movw	r24, r8
    433a:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    433e:	7c 01       	movw	r14, r24
    4340:	40 e0       	ldi	r20, 0x00	; 0
    4342:	50 e0       	ldi	r21, 0x00	; 0
    4344:	b2 01       	movw	r22, r4
    4346:	c4 01       	movw	r24, r8
    4348:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    434c:	95 01       	movw	r18, r10
    434e:	a7 01       	movw	r20, r14
    4350:	bc 01       	movw	r22, r24
    4352:	c4 01       	movw	r24, r8
    4354:	05 96       	adiw	r24, 0x05	; 5
    4356:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <_ZN5Gates3SWAEiiii>
    435a:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    435c:	fc 01       	movw	r30, r24
    435e:	20 81       	ld	r18, Z
    4360:	31 81       	ldd	r19, Z+1	; 0x01
    4362:	40 e0       	ldi	r20, 0x00	; 0
    4364:	50 e0       	ldi	r21, 0x00	; 0
    4366:	b2 01       	movw	r22, r4
    4368:	c4 01       	movw	r24, r8
    436a:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    436e:	f8 01       	movw	r30, r16
    4370:	22 81       	ldd	r18, Z+2	; 0x02
    4372:	33 81       	ldd	r19, Z+3	; 0x03
    4374:	41 e0       	ldi	r20, 0x01	; 1
    4376:	50 e0       	ldi	r21, 0x00	; 0
    4378:	b2 01       	movw	r22, r4
    437a:	c4 01       	movw	r24, r8
    437c:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4380:	f8 01       	movw	r30, r16
    4382:	24 81       	ldd	r18, Z+4	; 0x04
    4384:	35 81       	ldd	r19, Z+5	; 0x05
    4386:	40 e0       	ldi	r20, 0x00	; 0
    4388:	50 e0       	ldi	r21, 0x00	; 0
    438a:	69 81       	ldd	r22, Y+1	; 0x01
    438c:	7a 81       	ldd	r23, Y+2	; 0x02
    438e:	c4 01       	movw	r24, r8
    4390:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    4394:	f8 01       	movw	r30, r16
    4396:	26 81       	ldd	r18, Z+6	; 0x06
    4398:	37 81       	ldd	r19, Z+7	; 0x07
    439a:	41 e0       	ldi	r20, 0x01	; 1
    439c:	50 e0       	ldi	r21, 0x00	; 0
    439e:	69 81       	ldd	r22, Y+1	; 0x01
    43a0:	7a 81       	ldd	r23, Y+2	; 0x02
    43a2:	c4 01       	movw	r24, r8
    43a4:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    43a8:	04 c3       	rjmp	.+1544   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x19: 
			newthephi=gates.INC(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    43aa:	41 e0       	ldi	r20, 0x01	; 1
    43ac:	50 e0       	ldi	r21, 0x00	; 0
    43ae:	69 81       	ldd	r22, Y+1	; 0x01
    43b0:	7a 81       	ldd	r23, Y+2	; 0x02
    43b2:	c4 01       	movw	r24, r8
    43b4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    43b8:	8c 01       	movw	r16, r24
    43ba:	40 e0       	ldi	r20, 0x00	; 0
    43bc:	50 e0       	ldi	r21, 0x00	; 0
    43be:	69 81       	ldd	r22, Y+1	; 0x01
    43c0:	7a 81       	ldd	r23, Y+2	; 0x02
    43c2:	c4 01       	movw	r24, r8
    43c4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    43c8:	5c 01       	movw	r10, r24
    43ca:	41 e0       	ldi	r20, 0x01	; 1
    43cc:	50 e0       	ldi	r21, 0x00	; 0
    43ce:	b2 01       	movw	r22, r4
    43d0:	c4 01       	movw	r24, r8
    43d2:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    43d6:	7c 01       	movw	r14, r24
    43d8:	40 e0       	ldi	r20, 0x00	; 0
    43da:	50 e0       	ldi	r21, 0x00	; 0
    43dc:	b2 01       	movw	r22, r4
    43de:	c4 01       	movw	r24, r8
    43e0:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    43e4:	95 01       	movw	r18, r10
    43e6:	a7 01       	movw	r20, r14
    43e8:	bc 01       	movw	r22, r24
    43ea:	c4 01       	movw	r24, r8
    43ec:	05 96       	adiw	r24, 0x05	; 5
    43ee:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <_ZN5Gates3INCEiiii>
    43f2:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    43f4:	fc 01       	movw	r30, r24
    43f6:	20 81       	ld	r18, Z
    43f8:	31 81       	ldd	r19, Z+1	; 0x01
    43fa:	40 e0       	ldi	r20, 0x00	; 0
    43fc:	50 e0       	ldi	r21, 0x00	; 0
    43fe:	b2 01       	movw	r22, r4
    4400:	c4 01       	movw	r24, r8
    4402:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    4406:	f8 01       	movw	r30, r16
    4408:	22 81       	ldd	r18, Z+2	; 0x02
    440a:	33 81       	ldd	r19, Z+3	; 0x03
    440c:	41 e0       	ldi	r20, 0x01	; 1
    440e:	50 e0       	ldi	r21, 0x00	; 0
    4410:	b2 01       	movw	r22, r4
    4412:	c4 01       	movw	r24, r8
    4414:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4418:	f8 01       	movw	r30, r16
    441a:	24 81       	ldd	r18, Z+4	; 0x04
    441c:	35 81       	ldd	r19, Z+5	; 0x05
    441e:	40 e0       	ldi	r20, 0x00	; 0
    4420:	50 e0       	ldi	r21, 0x00	; 0
    4422:	69 81       	ldd	r22, Y+1	; 0x01
    4424:	7a 81       	ldd	r23, Y+2	; 0x02
    4426:	c4 01       	movw	r24, r8
    4428:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    442c:	f8 01       	movw	r30, r16
    442e:	26 81       	ldd	r18, Z+6	; 0x06
    4430:	37 81       	ldd	r19, Z+7	; 0x07
    4432:	41 e0       	ldi	r20, 0x01	; 1
    4434:	50 e0       	ldi	r21, 0x00	; 0
    4436:	69 81       	ldd	r22, Y+1	; 0x01
    4438:	7a 81       	ldd	r23, Y+2	; 0x02
    443a:	c4 01       	movw	r24, r8
    443c:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    4440:	b8 c2       	rjmp	.+1392   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x1A: 
			newthephi=gates.DEC(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    4442:	41 e0       	ldi	r20, 0x01	; 1
    4444:	50 e0       	ldi	r21, 0x00	; 0
    4446:	69 81       	ldd	r22, Y+1	; 0x01
    4448:	7a 81       	ldd	r23, Y+2	; 0x02
    444a:	c4 01       	movw	r24, r8
    444c:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4450:	8c 01       	movw	r16, r24
    4452:	40 e0       	ldi	r20, 0x00	; 0
    4454:	50 e0       	ldi	r21, 0x00	; 0
    4456:	69 81       	ldd	r22, Y+1	; 0x01
    4458:	7a 81       	ldd	r23, Y+2	; 0x02
    445a:	c4 01       	movw	r24, r8
    445c:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4460:	5c 01       	movw	r10, r24
    4462:	41 e0       	ldi	r20, 0x01	; 1
    4464:	50 e0       	ldi	r21, 0x00	; 0
    4466:	b2 01       	movw	r22, r4
    4468:	c4 01       	movw	r24, r8
    446a:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    446e:	7c 01       	movw	r14, r24
    4470:	40 e0       	ldi	r20, 0x00	; 0
    4472:	50 e0       	ldi	r21, 0x00	; 0
    4474:	b2 01       	movw	r22, r4
    4476:	c4 01       	movw	r24, r8
    4478:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    447c:	95 01       	movw	r18, r10
    447e:	a7 01       	movw	r20, r14
    4480:	bc 01       	movw	r22, r24
    4482:	c4 01       	movw	r24, r8
    4484:	05 96       	adiw	r24, 0x05	; 5
    4486:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <_ZN5Gates3DECEiiii>
    448a:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    448c:	fc 01       	movw	r30, r24
    448e:	20 81       	ld	r18, Z
    4490:	31 81       	ldd	r19, Z+1	; 0x01
    4492:	40 e0       	ldi	r20, 0x00	; 0
    4494:	50 e0       	ldi	r21, 0x00	; 0
    4496:	b2 01       	movw	r22, r4
    4498:	c4 01       	movw	r24, r8
    449a:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    449e:	f8 01       	movw	r30, r16
    44a0:	22 81       	ldd	r18, Z+2	; 0x02
    44a2:	33 81       	ldd	r19, Z+3	; 0x03
    44a4:	41 e0       	ldi	r20, 0x01	; 1
    44a6:	50 e0       	ldi	r21, 0x00	; 0
    44a8:	b2 01       	movw	r22, r4
    44aa:	c4 01       	movw	r24, r8
    44ac:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    44b0:	f8 01       	movw	r30, r16
    44b2:	24 81       	ldd	r18, Z+4	; 0x04
    44b4:	35 81       	ldd	r19, Z+5	; 0x05
    44b6:	40 e0       	ldi	r20, 0x00	; 0
    44b8:	50 e0       	ldi	r21, 0x00	; 0
    44ba:	69 81       	ldd	r22, Y+1	; 0x01
    44bc:	7a 81       	ldd	r23, Y+2	; 0x02
    44be:	c4 01       	movw	r24, r8
    44c0:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    44c4:	f8 01       	movw	r30, r16
    44c6:	26 81       	ldd	r18, Z+6	; 0x06
    44c8:	37 81       	ldd	r19, Z+7	; 0x07
    44ca:	41 e0       	ldi	r20, 0x01	; 1
    44cc:	50 e0       	ldi	r21, 0x00	; 0
    44ce:	69 81       	ldd	r22, Y+1	; 0x01
    44d0:	7a 81       	ldd	r23, Y+2	; 0x02
    44d2:	c4 01       	movw	r24, r8
    44d4:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    44d8:	6c c2       	rjmp	.+1240   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x1B:
			//CSWAP (FREDKIN ) -> 3 QUBIT GATE
			newthephi=gates.CSW(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI),read(op3,THE),read(op3,PHI));
    44da:	41 e0       	ldi	r20, 0x01	; 1
    44dc:	50 e0       	ldi	r21, 0x00	; 0
    44de:	6d 81       	ldd	r22, Y+5	; 0x05
    44e0:	7e 81       	ldd	r23, Y+6	; 0x06
    44e2:	c4 01       	movw	r24, r8
    44e4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    44e8:	6c 01       	movw	r12, r24
    44ea:	40 e0       	ldi	r20, 0x00	; 0
    44ec:	50 e0       	ldi	r21, 0x00	; 0
    44ee:	6d 81       	ldd	r22, Y+5	; 0x05
    44f0:	7e 81       	ldd	r23, Y+6	; 0x06
    44f2:	c4 01       	movw	r24, r8
    44f4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    44f8:	7c 01       	movw	r14, r24
    44fa:	41 e0       	ldi	r20, 0x01	; 1
    44fc:	50 e0       	ldi	r21, 0x00	; 0
    44fe:	69 81       	ldd	r22, Y+1	; 0x01
    4500:	7a 81       	ldd	r23, Y+2	; 0x02
    4502:	c4 01       	movw	r24, r8
    4504:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4508:	8c 01       	movw	r16, r24
    450a:	40 e0       	ldi	r20, 0x00	; 0
    450c:	50 e0       	ldi	r21, 0x00	; 0
    450e:	69 81       	ldd	r22, Y+1	; 0x01
    4510:	7a 81       	ldd	r23, Y+2	; 0x02
    4512:	c4 01       	movw	r24, r8
    4514:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4518:	5c 01       	movw	r10, r24
    451a:	41 e0       	ldi	r20, 0x01	; 1
    451c:	50 e0       	ldi	r21, 0x00	; 0
    451e:	b2 01       	movw	r22, r4
    4520:	c4 01       	movw	r24, r8
    4522:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4526:	1c 01       	movw	r2, r24
    4528:	40 e0       	ldi	r20, 0x00	; 0
    452a:	50 e0       	ldi	r21, 0x00	; 0
    452c:	b2 01       	movw	r22, r4
    452e:	c4 01       	movw	r24, r8
    4530:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4534:	95 01       	movw	r18, r10
    4536:	a1 01       	movw	r20, r2
    4538:	bc 01       	movw	r22, r24
    453a:	c4 01       	movw	r24, r8
    453c:	05 96       	adiw	r24, 0x05	; 5
    453e:	0e 94 79 14 	call	0x28f2	; 0x28f2 <_ZN5Gates3CSWEiiiiii>
    4542:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4544:	fc 01       	movw	r30, r24
    4546:	20 81       	ld	r18, Z
    4548:	31 81       	ldd	r19, Z+1	; 0x01
    454a:	40 e0       	ldi	r20, 0x00	; 0
    454c:	50 e0       	ldi	r21, 0x00	; 0
    454e:	b2 01       	movw	r22, r4
    4550:	c4 01       	movw	r24, r8
    4552:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    4556:	f8 01       	movw	r30, r16
    4558:	22 81       	ldd	r18, Z+2	; 0x02
    455a:	33 81       	ldd	r19, Z+3	; 0x03
    455c:	41 e0       	ldi	r20, 0x01	; 1
    455e:	50 e0       	ldi	r21, 0x00	; 0
    4560:	b2 01       	movw	r22, r4
    4562:	c4 01       	movw	r24, r8
    4564:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4568:	f8 01       	movw	r30, r16
    456a:	24 81       	ldd	r18, Z+4	; 0x04
    456c:	35 81       	ldd	r19, Z+5	; 0x05
    456e:	40 e0       	ldi	r20, 0x00	; 0
    4570:	50 e0       	ldi	r21, 0x00	; 0
    4572:	69 81       	ldd	r22, Y+1	; 0x01
    4574:	7a 81       	ldd	r23, Y+2	; 0x02
    4576:	c4 01       	movw	r24, r8
    4578:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    457c:	f8 01       	movw	r30, r16
    457e:	26 81       	ldd	r18, Z+6	; 0x06
    4580:	37 81       	ldd	r19, Z+7	; 0x07
    4582:	41 e0       	ldi	r20, 0x01	; 1
    4584:	50 e0       	ldi	r21, 0x00	; 0
    4586:	69 81       	ldd	r22, Y+1	; 0x01
    4588:	7a 81       	ldd	r23, Y+2	; 0x02
    458a:	c4 01       	movw	r24, r8
    458c:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
			write(op3,THE,newthephi[4]); write(op3,PHI,newthephi[5]);
    4590:	f8 01       	movw	r30, r16
    4592:	20 85       	ldd	r18, Z+8	; 0x08
    4594:	31 85       	ldd	r19, Z+9	; 0x09
    4596:	40 e0       	ldi	r20, 0x00	; 0
    4598:	50 e0       	ldi	r21, 0x00	; 0
    459a:	6d 81       	ldd	r22, Y+5	; 0x05
    459c:	7e 81       	ldd	r23, Y+6	; 0x06
    459e:	c4 01       	movw	r24, r8
    45a0:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    45a4:	f8 01       	movw	r30, r16
    45a6:	22 85       	ldd	r18, Z+10	; 0x0a
    45a8:	33 85       	ldd	r19, Z+11	; 0x0b
    45aa:	41 e0       	ldi	r20, 0x01	; 1
    45ac:	50 e0       	ldi	r21, 0x00	; 0
    45ae:	6d 81       	ldd	r22, Y+5	; 0x05
    45b0:	7e 81       	ldd	r23, Y+6	; 0x06
    45b2:	c4 01       	movw	r24, r8
    45b4:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    45b8:	fc c1       	rjmp	.+1016   	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x1C: 
			//TOFFOLI -> 3 QUBIT GATE
			newthephi=gates.TOF(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI),read(op3,THE),read(op3,PHI));
    45ba:	41 e0       	ldi	r20, 0x01	; 1
    45bc:	50 e0       	ldi	r21, 0x00	; 0
    45be:	6d 81       	ldd	r22, Y+5	; 0x05
    45c0:	7e 81       	ldd	r23, Y+6	; 0x06
    45c2:	c4 01       	movw	r24, r8
    45c4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    45c8:	6c 01       	movw	r12, r24
    45ca:	40 e0       	ldi	r20, 0x00	; 0
    45cc:	50 e0       	ldi	r21, 0x00	; 0
    45ce:	6d 81       	ldd	r22, Y+5	; 0x05
    45d0:	7e 81       	ldd	r23, Y+6	; 0x06
    45d2:	c4 01       	movw	r24, r8
    45d4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    45d8:	7c 01       	movw	r14, r24
    45da:	41 e0       	ldi	r20, 0x01	; 1
    45dc:	50 e0       	ldi	r21, 0x00	; 0
    45de:	69 81       	ldd	r22, Y+1	; 0x01
    45e0:	7a 81       	ldd	r23, Y+2	; 0x02
    45e2:	c4 01       	movw	r24, r8
    45e4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    45e8:	8c 01       	movw	r16, r24
    45ea:	40 e0       	ldi	r20, 0x00	; 0
    45ec:	50 e0       	ldi	r21, 0x00	; 0
    45ee:	69 81       	ldd	r22, Y+1	; 0x01
    45f0:	7a 81       	ldd	r23, Y+2	; 0x02
    45f2:	c4 01       	movw	r24, r8
    45f4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    45f8:	5c 01       	movw	r10, r24
    45fa:	41 e0       	ldi	r20, 0x01	; 1
    45fc:	50 e0       	ldi	r21, 0x00	; 0
    45fe:	b2 01       	movw	r22, r4
    4600:	c4 01       	movw	r24, r8
    4602:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4606:	1c 01       	movw	r2, r24
    4608:	40 e0       	ldi	r20, 0x00	; 0
    460a:	50 e0       	ldi	r21, 0x00	; 0
    460c:	b2 01       	movw	r22, r4
    460e:	c4 01       	movw	r24, r8
    4610:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4614:	95 01       	movw	r18, r10
    4616:	a1 01       	movw	r20, r2
    4618:	bc 01       	movw	r22, r24
    461a:	c4 01       	movw	r24, r8
    461c:	05 96       	adiw	r24, 0x05	; 5
    461e:	0e 94 77 17 	call	0x2eee	; 0x2eee <_ZN5Gates3TOFEiiiiii>
    4622:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4624:	fc 01       	movw	r30, r24
    4626:	20 81       	ld	r18, Z
    4628:	31 81       	ldd	r19, Z+1	; 0x01
    462a:	40 e0       	ldi	r20, 0x00	; 0
    462c:	50 e0       	ldi	r21, 0x00	; 0
    462e:	b2 01       	movw	r22, r4
    4630:	c4 01       	movw	r24, r8
    4632:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    4636:	f8 01       	movw	r30, r16
    4638:	22 81       	ldd	r18, Z+2	; 0x02
    463a:	33 81       	ldd	r19, Z+3	; 0x03
    463c:	41 e0       	ldi	r20, 0x01	; 1
    463e:	50 e0       	ldi	r21, 0x00	; 0
    4640:	b2 01       	movw	r22, r4
    4642:	c4 01       	movw	r24, r8
    4644:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4648:	f8 01       	movw	r30, r16
    464a:	24 81       	ldd	r18, Z+4	; 0x04
    464c:	35 81       	ldd	r19, Z+5	; 0x05
    464e:	40 e0       	ldi	r20, 0x00	; 0
    4650:	50 e0       	ldi	r21, 0x00	; 0
    4652:	69 81       	ldd	r22, Y+1	; 0x01
    4654:	7a 81       	ldd	r23, Y+2	; 0x02
    4656:	c4 01       	movw	r24, r8
    4658:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    465c:	f8 01       	movw	r30, r16
    465e:	26 81       	ldd	r18, Z+6	; 0x06
    4660:	37 81       	ldd	r19, Z+7	; 0x07
    4662:	41 e0       	ldi	r20, 0x01	; 1
    4664:	50 e0       	ldi	r21, 0x00	; 0
    4666:	69 81       	ldd	r22, Y+1	; 0x01
    4668:	7a 81       	ldd	r23, Y+2	; 0x02
    466a:	c4 01       	movw	r24, r8
    466c:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
			write(op3,THE,newthephi[4]); write(op3,PHI,newthephi[5]);
    4670:	f8 01       	movw	r30, r16
    4672:	20 85       	ldd	r18, Z+8	; 0x08
    4674:	31 85       	ldd	r19, Z+9	; 0x09
    4676:	40 e0       	ldi	r20, 0x00	; 0
    4678:	50 e0       	ldi	r21, 0x00	; 0
    467a:	6d 81       	ldd	r22, Y+5	; 0x05
    467c:	7e 81       	ldd	r23, Y+6	; 0x06
    467e:	c4 01       	movw	r24, r8
    4680:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    4684:	f8 01       	movw	r30, r16
    4686:	22 85       	ldd	r18, Z+10	; 0x0a
    4688:	33 85       	ldd	r19, Z+11	; 0x0b
    468a:	41 e0       	ldi	r20, 0x01	; 1
    468c:	50 e0       	ldi	r21, 0x00	; 0
    468e:	6d 81       	ldd	r22, Y+5	; 0x05
    4690:	7e 81       	ldd	r23, Y+6	; 0x06
    4692:	c4 01       	movw	r24, r8
    4694:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    4698:	8c c1       	rjmp	.+792    	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x1D: 
			//DEUTSCH -> 3 QUBIT GATE
			newthephi=gates.DEU(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI),read(op3,THE),read(op3,PHI),read(0,THE));
    469a:	40 e0       	ldi	r20, 0x00	; 0
    469c:	50 e0       	ldi	r21, 0x00	; 0
    469e:	60 e0       	ldi	r22, 0x00	; 0
    46a0:	70 e0       	ldi	r23, 0x00	; 0
    46a2:	c4 01       	movw	r24, r8
    46a4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    46a8:	5c 01       	movw	r10, r24
    46aa:	41 e0       	ldi	r20, 0x01	; 1
    46ac:	50 e0       	ldi	r21, 0x00	; 0
    46ae:	6d 81       	ldd	r22, Y+5	; 0x05
    46b0:	7e 81       	ldd	r23, Y+6	; 0x06
    46b2:	c4 01       	movw	r24, r8
    46b4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    46b8:	6c 01       	movw	r12, r24
    46ba:	40 e0       	ldi	r20, 0x00	; 0
    46bc:	50 e0       	ldi	r21, 0x00	; 0
    46be:	6d 81       	ldd	r22, Y+5	; 0x05
    46c0:	7e 81       	ldd	r23, Y+6	; 0x06
    46c2:	c4 01       	movw	r24, r8
    46c4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    46c8:	7c 01       	movw	r14, r24
    46ca:	41 e0       	ldi	r20, 0x01	; 1
    46cc:	50 e0       	ldi	r21, 0x00	; 0
    46ce:	69 81       	ldd	r22, Y+1	; 0x01
    46d0:	7a 81       	ldd	r23, Y+2	; 0x02
    46d2:	c4 01       	movw	r24, r8
    46d4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    46d8:	8c 01       	movw	r16, r24
    46da:	40 e0       	ldi	r20, 0x00	; 0
    46dc:	50 e0       	ldi	r21, 0x00	; 0
    46de:	69 81       	ldd	r22, Y+1	; 0x01
    46e0:	7a 81       	ldd	r23, Y+2	; 0x02
    46e2:	c4 01       	movw	r24, r8
    46e4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    46e8:	1c 01       	movw	r2, r24
    46ea:	41 e0       	ldi	r20, 0x01	; 1
    46ec:	50 e0       	ldi	r21, 0x00	; 0
    46ee:	b2 01       	movw	r22, r4
    46f0:	c4 01       	movw	r24, r8
    46f2:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    46f6:	9a 87       	std	Y+10, r25	; 0x0a
    46f8:	89 87       	std	Y+9, r24	; 0x09
    46fa:	40 e0       	ldi	r20, 0x00	; 0
    46fc:	50 e0       	ldi	r21, 0x00	; 0
    46fe:	b2 01       	movw	r22, r4
    4700:	c4 01       	movw	r24, r8
    4702:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4706:	91 01       	movw	r18, r2
    4708:	49 85       	ldd	r20, Y+9	; 0x09
    470a:	5a 85       	ldd	r21, Y+10	; 0x0a
    470c:	bc 01       	movw	r22, r24
    470e:	c4 01       	movw	r24, r8
    4710:	05 96       	adiw	r24, 0x05	; 5
    4712:	0e 94 75 1a 	call	0x34ea	; 0x34ea <_ZN5Gates3DEUEiiiiiii>
    4716:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4718:	fc 01       	movw	r30, r24
    471a:	20 81       	ld	r18, Z
    471c:	31 81       	ldd	r19, Z+1	; 0x01
    471e:	40 e0       	ldi	r20, 0x00	; 0
    4720:	50 e0       	ldi	r21, 0x00	; 0
    4722:	b2 01       	movw	r22, r4
    4724:	c4 01       	movw	r24, r8
    4726:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    472a:	f8 01       	movw	r30, r16
    472c:	22 81       	ldd	r18, Z+2	; 0x02
    472e:	33 81       	ldd	r19, Z+3	; 0x03
    4730:	41 e0       	ldi	r20, 0x01	; 1
    4732:	50 e0       	ldi	r21, 0x00	; 0
    4734:	b2 01       	movw	r22, r4
    4736:	c4 01       	movw	r24, r8
    4738:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    473c:	f8 01       	movw	r30, r16
    473e:	24 81       	ldd	r18, Z+4	; 0x04
    4740:	35 81       	ldd	r19, Z+5	; 0x05
    4742:	40 e0       	ldi	r20, 0x00	; 0
    4744:	50 e0       	ldi	r21, 0x00	; 0
    4746:	69 81       	ldd	r22, Y+1	; 0x01
    4748:	7a 81       	ldd	r23, Y+2	; 0x02
    474a:	c4 01       	movw	r24, r8
    474c:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    4750:	f8 01       	movw	r30, r16
    4752:	26 81       	ldd	r18, Z+6	; 0x06
    4754:	37 81       	ldd	r19, Z+7	; 0x07
    4756:	41 e0       	ldi	r20, 0x01	; 1
    4758:	50 e0       	ldi	r21, 0x00	; 0
    475a:	69 81       	ldd	r22, Y+1	; 0x01
    475c:	7a 81       	ldd	r23, Y+2	; 0x02
    475e:	c4 01       	movw	r24, r8
    4760:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
			write(op3,THE,newthephi[4]); write(op3,PHI,newthephi[5]);
    4764:	f8 01       	movw	r30, r16
    4766:	20 85       	ldd	r18, Z+8	; 0x08
    4768:	31 85       	ldd	r19, Z+9	; 0x09
    476a:	40 e0       	ldi	r20, 0x00	; 0
    476c:	50 e0       	ldi	r21, 0x00	; 0
    476e:	6d 81       	ldd	r22, Y+5	; 0x05
    4770:	7e 81       	ldd	r23, Y+6	; 0x06
    4772:	c4 01       	movw	r24, r8
    4774:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    4778:	f8 01       	movw	r30, r16
    477a:	22 85       	ldd	r18, Z+10	; 0x0a
    477c:	33 85       	ldd	r19, Z+11	; 0x0b
    477e:	41 e0       	ldi	r20, 0x01	; 1
    4780:	50 e0       	ldi	r21, 0x00	; 0
    4782:	6d 81       	ldd	r22, Y+5	; 0x05
    4784:	7e 81       	ldd	r23, Y+6	; 0x06
    4786:	c4 01       	movw	r24, r8
    4788:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    478c:	12 c1       	rjmp	.+548    	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x1E: 
			newthephi=gates.SWQ(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    478e:	41 e0       	ldi	r20, 0x01	; 1
    4790:	50 e0       	ldi	r21, 0x00	; 0
    4792:	69 81       	ldd	r22, Y+1	; 0x01
    4794:	7a 81       	ldd	r23, Y+2	; 0x02
    4796:	c4 01       	movw	r24, r8
    4798:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    479c:	8c 01       	movw	r16, r24
    479e:	40 e0       	ldi	r20, 0x00	; 0
    47a0:	50 e0       	ldi	r21, 0x00	; 0
    47a2:	69 81       	ldd	r22, Y+1	; 0x01
    47a4:	7a 81       	ldd	r23, Y+2	; 0x02
    47a6:	c4 01       	movw	r24, r8
    47a8:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    47ac:	5c 01       	movw	r10, r24
    47ae:	41 e0       	ldi	r20, 0x01	; 1
    47b0:	50 e0       	ldi	r21, 0x00	; 0
    47b2:	b2 01       	movw	r22, r4
    47b4:	c4 01       	movw	r24, r8
    47b6:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    47ba:	7c 01       	movw	r14, r24
    47bc:	40 e0       	ldi	r20, 0x00	; 0
    47be:	50 e0       	ldi	r21, 0x00	; 0
    47c0:	b2 01       	movw	r22, r4
    47c2:	c4 01       	movw	r24, r8
    47c4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    47c8:	95 01       	movw	r18, r10
    47ca:	a7 01       	movw	r20, r14
    47cc:	bc 01       	movw	r22, r24
    47ce:	c4 01       	movw	r24, r8
    47d0:	05 96       	adiw	r24, 0x05	; 5
    47d2:	0e 94 a0 10 	call	0x2140	; 0x2140 <_ZN5Gates3SWQEiiii>
    47d6:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    47d8:	fc 01       	movw	r30, r24
    47da:	20 81       	ld	r18, Z
    47dc:	31 81       	ldd	r19, Z+1	; 0x01
    47de:	40 e0       	ldi	r20, 0x00	; 0
    47e0:	50 e0       	ldi	r21, 0x00	; 0
    47e2:	b2 01       	movw	r22, r4
    47e4:	c4 01       	movw	r24, r8
    47e6:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    47ea:	f8 01       	movw	r30, r16
    47ec:	22 81       	ldd	r18, Z+2	; 0x02
    47ee:	33 81       	ldd	r19, Z+3	; 0x03
    47f0:	41 e0       	ldi	r20, 0x01	; 1
    47f2:	50 e0       	ldi	r21, 0x00	; 0
    47f4:	b2 01       	movw	r22, r4
    47f6:	c4 01       	movw	r24, r8
    47f8:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    47fc:	f8 01       	movw	r30, r16
    47fe:	24 81       	ldd	r18, Z+4	; 0x04
    4800:	35 81       	ldd	r19, Z+5	; 0x05
    4802:	40 e0       	ldi	r20, 0x00	; 0
    4804:	50 e0       	ldi	r21, 0x00	; 0
    4806:	69 81       	ldd	r22, Y+1	; 0x01
    4808:	7a 81       	ldd	r23, Y+2	; 0x02
    480a:	c4 01       	movw	r24, r8
    480c:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    4810:	f8 01       	movw	r30, r16
    4812:	26 81       	ldd	r18, Z+6	; 0x06
    4814:	37 81       	ldd	r19, Z+7	; 0x07
    4816:	41 e0       	ldi	r20, 0x01	; 1
    4818:	50 e0       	ldi	r21, 0x00	; 0
    481a:	69 81       	ldd	r22, Y+1	; 0x01
    481c:	7a 81       	ldd	r23, Y+2	; 0x02
    481e:	c4 01       	movw	r24, r8
    4820:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    4824:	c6 c0       	rjmp	.+396    	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x1F: 
			newthephi=gates.SWI(read(op1,THE),read(op1,PHI),read(op2,THE),read(op2,PHI));
    4826:	41 e0       	ldi	r20, 0x01	; 1
    4828:	50 e0       	ldi	r21, 0x00	; 0
    482a:	69 81       	ldd	r22, Y+1	; 0x01
    482c:	7a 81       	ldd	r23, Y+2	; 0x02
    482e:	c4 01       	movw	r24, r8
    4830:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4834:	8c 01       	movw	r16, r24
    4836:	40 e0       	ldi	r20, 0x00	; 0
    4838:	50 e0       	ldi	r21, 0x00	; 0
    483a:	69 81       	ldd	r22, Y+1	; 0x01
    483c:	7a 81       	ldd	r23, Y+2	; 0x02
    483e:	c4 01       	movw	r24, r8
    4840:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4844:	5c 01       	movw	r10, r24
    4846:	41 e0       	ldi	r20, 0x01	; 1
    4848:	50 e0       	ldi	r21, 0x00	; 0
    484a:	b2 01       	movw	r22, r4
    484c:	c4 01       	movw	r24, r8
    484e:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4852:	7c 01       	movw	r14, r24
    4854:	40 e0       	ldi	r20, 0x00	; 0
    4856:	50 e0       	ldi	r21, 0x00	; 0
    4858:	b2 01       	movw	r22, r4
    485a:	c4 01       	movw	r24, r8
    485c:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    4860:	95 01       	movw	r18, r10
    4862:	a7 01       	movw	r20, r14
    4864:	bc 01       	movw	r22, r24
    4866:	c4 01       	movw	r24, r8
    4868:	05 96       	adiw	r24, 0x05	; 5
    486a:	0e 94 a6 11 	call	0x234c	; 0x234c <_ZN5Gates3SWIEiiii>
    486e:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4870:	fc 01       	movw	r30, r24
    4872:	20 81       	ld	r18, Z
    4874:	31 81       	ldd	r19, Z+1	; 0x01
    4876:	40 e0       	ldi	r20, 0x00	; 0
    4878:	50 e0       	ldi	r21, 0x00	; 0
    487a:	b2 01       	movw	r22, r4
    487c:	c4 01       	movw	r24, r8
    487e:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    4882:	f8 01       	movw	r30, r16
    4884:	22 81       	ldd	r18, Z+2	; 0x02
    4886:	33 81       	ldd	r19, Z+3	; 0x03
    4888:	41 e0       	ldi	r20, 0x01	; 1
    488a:	50 e0       	ldi	r21, 0x00	; 0
    488c:	b2 01       	movw	r22, r4
    488e:	c4 01       	movw	r24, r8
    4890:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4894:	f8 01       	movw	r30, r16
    4896:	24 81       	ldd	r18, Z+4	; 0x04
    4898:	35 81       	ldd	r19, Z+5	; 0x05
    489a:	40 e0       	ldi	r20, 0x00	; 0
    489c:	50 e0       	ldi	r21, 0x00	; 0
    489e:	69 81       	ldd	r22, Y+1	; 0x01
    48a0:	7a 81       	ldd	r23, Y+2	; 0x02
    48a2:	c4 01       	movw	r24, r8
    48a4:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    48a8:	f8 01       	movw	r30, r16
    48aa:	26 81       	ldd	r18, Z+6	; 0x06
    48ac:	37 81       	ldd	r19, Z+7	; 0x07
    48ae:	41 e0       	ldi	r20, 0x01	; 1
    48b0:	50 e0       	ldi	r21, 0x00	; 0
    48b2:	69 81       	ldd	r22, Y+1	; 0x01
    48b4:	7a 81       	ldd	r23, Y+2	; 0x02
    48b6:	c4 01       	movw	r24, r8
    48b8:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    48bc:	7a c0       	rjmp	.+244    	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x20:
			newthephi=gates.ROX(read(op1,THE),read(op1,PHI),op2);
    48be:	41 e0       	ldi	r20, 0x01	; 1
    48c0:	50 e0       	ldi	r21, 0x00	; 0
    48c2:	b2 01       	movw	r22, r4
    48c4:	c4 01       	movw	r24, r8
    48c6:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    48ca:	8c 01       	movw	r16, r24
    48cc:	40 e0       	ldi	r20, 0x00	; 0
    48ce:	50 e0       	ldi	r21, 0x00	; 0
    48d0:	b2 01       	movw	r22, r4
    48d2:	c4 01       	movw	r24, r8
    48d4:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    48d8:	29 81       	ldd	r18, Y+1	; 0x01
    48da:	3a 81       	ldd	r19, Y+2	; 0x02
    48dc:	a8 01       	movw	r20, r16
    48de:	bc 01       	movw	r22, r24
    48e0:	c4 01       	movw	r24, r8
    48e2:	05 96       	adiw	r24, 0x05	; 5
    48e4:	0e 94 a8 12 	call	0x2550	; 0x2550 <_ZN5Gates3ROXEiii>
    48e8:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    48ea:	fc 01       	movw	r30, r24
    48ec:	20 81       	ld	r18, Z
    48ee:	31 81       	ldd	r19, Z+1	; 0x01
    48f0:	40 e0       	ldi	r20, 0x00	; 0
    48f2:	50 e0       	ldi	r21, 0x00	; 0
    48f4:	b2 01       	movw	r22, r4
    48f6:	c4 01       	movw	r24, r8
    48f8:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    48fc:	f8 01       	movw	r30, r16
    48fe:	22 81       	ldd	r18, Z+2	; 0x02
    4900:	33 81       	ldd	r19, Z+3	; 0x03
    4902:	41 e0       	ldi	r20, 0x01	; 1
    4904:	50 e0       	ldi	r21, 0x00	; 0
    4906:	b2 01       	movw	r22, r4
    4908:	c4 01       	movw	r24, r8
    490a:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    490e:	51 c0       	rjmp	.+162    	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x21: 
			newthephi=gates.ROY(read(op1,THE),read(op1,PHI),op2);
    4910:	41 e0       	ldi	r20, 0x01	; 1
    4912:	50 e0       	ldi	r21, 0x00	; 0
    4914:	b2 01       	movw	r22, r4
    4916:	c4 01       	movw	r24, r8
    4918:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    491c:	8c 01       	movw	r16, r24
    491e:	40 e0       	ldi	r20, 0x00	; 0
    4920:	50 e0       	ldi	r21, 0x00	; 0
    4922:	b2 01       	movw	r22, r4
    4924:	c4 01       	movw	r24, r8
    4926:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    492a:	29 81       	ldd	r18, Y+1	; 0x01
    492c:	3a 81       	ldd	r19, Y+2	; 0x02
    492e:	a8 01       	movw	r20, r16
    4930:	bc 01       	movw	r22, r24
    4932:	c4 01       	movw	r24, r8
    4934:	05 96       	adiw	r24, 0x05	; 5
    4936:	0e 94 47 13 	call	0x268e	; 0x268e <_ZN5Gates3ROYEiii>
    493a:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    493c:	fc 01       	movw	r30, r24
    493e:	20 81       	ld	r18, Z
    4940:	31 81       	ldd	r19, Z+1	; 0x01
    4942:	40 e0       	ldi	r20, 0x00	; 0
    4944:	50 e0       	ldi	r21, 0x00	; 0
    4946:	b2 01       	movw	r22, r4
    4948:	c4 01       	movw	r24, r8
    494a:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    494e:	f8 01       	movw	r30, r16
    4950:	22 81       	ldd	r18, Z+2	; 0x02
    4952:	33 81       	ldd	r19, Z+3	; 0x03
    4954:	41 e0       	ldi	r20, 0x01	; 1
    4956:	50 e0       	ldi	r21, 0x00	; 0
    4958:	b2 01       	movw	r22, r4
    495a:	c4 01       	movw	r24, r8
    495c:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
		break;
    4960:	28 c0       	rjmp	.+80     	; 0x49b2 <_ZN4QEPU7executeEilll+0xa8a>
		case 0x22: 
			newthephi=gates.ROZ(read(op1,THE),read(op1,PHI),op2);
    4962:	41 e0       	ldi	r20, 0x01	; 1
    4964:	50 e0       	ldi	r21, 0x00	; 0
    4966:	b2 01       	movw	r22, r4
    4968:	c4 01       	movw	r24, r8
    496a:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    496e:	8c 01       	movw	r16, r24
    4970:	40 e0       	ldi	r20, 0x00	; 0
    4972:	50 e0       	ldi	r21, 0x00	; 0
    4974:	b2 01       	movw	r22, r4
    4976:	c4 01       	movw	r24, r8
    4978:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN4QEPU4readEii>
    497c:	29 81       	ldd	r18, Y+1	; 0x01
    497e:	3a 81       	ldd	r19, Y+2	; 0x02
    4980:	a8 01       	movw	r20, r16
    4982:	bc 01       	movw	r22, r24
    4984:	c4 01       	movw	r24, r8
    4986:	05 96       	adiw	r24, 0x05	; 5
    4988:	0e 94 e3 13 	call	0x27c6	; 0x27c6 <_ZN5Gates3ROZEiii>
    498c:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    498e:	fc 01       	movw	r30, r24
    4990:	20 81       	ld	r18, Z
    4992:	31 81       	ldd	r19, Z+1	; 0x01
    4994:	40 e0       	ldi	r20, 0x00	; 0
    4996:	50 e0       	ldi	r21, 0x00	; 0
    4998:	b2 01       	movw	r22, r4
    499a:	c4 01       	movw	r24, r8
    499c:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
    49a0:	f8 01       	movw	r30, r16
    49a2:	22 81       	ldd	r18, Z+2	; 0x02
    49a4:	33 81       	ldd	r19, Z+3	; 0x03
    49a6:	41 e0       	ldi	r20, 0x01	; 1
    49a8:	50 e0       	ldi	r21, 0x00	; 0
    49aa:	b2 01       	movw	r22, r4
    49ac:	c4 01       	movw	r24, r8
    49ae:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <_ZN4QEPU5writeEiii>
	/*serial.writestr("Function: "); serial.writestr(utils.int2str(func));
	serial.writestr(" , OP1: ");   serial.writestr(utils.int2str(op1));
	serial.writestr(" , OP2: ");   serial.writestr(utils.int2str(op2));
	serial.writestr(" PC: ");	   serial.writestrln(utils.int2str(program_counter));
	serial.writestrln("");*/
	free(newthephi);	
    49b2:	c8 01       	movw	r24, r16
    49b4:	0e 94 40 2c 	call	0x5880	; 0x5880 <free>
    49b8:	2a 96       	adiw	r28, 0x0a	; 10
    49ba:	0f b6       	in	r0, 0x3f	; 63
    49bc:	f8 94       	cli
    49be:	de bf       	out	0x3e, r29	; 62
    49c0:	0f be       	out	0x3f, r0	; 63
    49c2:	cd bf       	out	0x3d, r28	; 61
    49c4:	df 91       	pop	r29
    49c6:	cf 91       	pop	r28
    49c8:	1f 91       	pop	r17
    49ca:	0f 91       	pop	r16
    49cc:	ff 90       	pop	r15
    49ce:	ef 90       	pop	r14
    49d0:	df 90       	pop	r13
    49d2:	cf 90       	pop	r12
    49d4:	bf 90       	pop	r11
    49d6:	af 90       	pop	r10
    49d8:	9f 90       	pop	r9
    49da:	8f 90       	pop	r8
    49dc:	7f 90       	pop	r7
    49de:	6f 90       	pop	r6
    49e0:	5f 90       	pop	r5
    49e2:	4f 90       	pop	r4
    49e4:	3f 90       	pop	r3
    49e6:	2f 90       	pop	r2
    49e8:	08 95       	ret

000049ea <_ZN4QEPU3runEv>:
}
int QEPU::Utils::delay(int ms){
	while(ms--) _delay_ms(1);
}

void QEPU::run(){
    49ea:	2f 92       	push	r2
    49ec:	3f 92       	push	r3
    49ee:	4f 92       	push	r4
    49f0:	5f 92       	push	r5
    49f2:	6f 92       	push	r6
    49f4:	7f 92       	push	r7
    49f6:	8f 92       	push	r8
    49f8:	9f 92       	push	r9
    49fa:	af 92       	push	r10
    49fc:	bf 92       	push	r11
    49fe:	cf 92       	push	r12
    4a00:	df 92       	push	r13
    4a02:	ef 92       	push	r14
    4a04:	ff 92       	push	r15
    4a06:	0f 93       	push	r16
    4a08:	1f 93       	push	r17
    4a0a:	cf 93       	push	r28
    4a0c:	df 93       	push	r29
    4a0e:	cd b7       	in	r28, 0x3d	; 61
    4a10:	de b7       	in	r29, 0x3e	; 62
    4a12:	cd 52       	subi	r28, 0x2D	; 45
    4a14:	d2 40       	sbci	r29, 0x02	; 2
    4a16:	0f b6       	in	r0, 0x3f	; 63
    4a18:	f8 94       	cli
    4a1a:	de bf       	out	0x3e, r29	; 62
    4a1c:	0f be       	out	0x3f, r0	; 63
    4a1e:	cd bf       	out	0x3d, r28	; 61
    4a20:	c2 5e       	subi	r28, 0xE2	; 226
    4a22:	dd 4f       	sbci	r29, 0xFD	; 253
    4a24:	99 83       	std	Y+1, r25	; 0x01
    4a26:	88 83       	st	Y, r24
    4a28:	ce 51       	subi	r28, 0x1E	; 30
    4a2a:	d2 40       	sbci	r29, 0x02	; 2
	//TEMPORARY PRINTING FOR DEBUGGING PURPOSES
	serial.writestrln(" RUNNING "); serial.writestrln("");
    4a2c:	6c 01       	movw	r12, r24
    4a2e:	2f ef       	ldi	r18, 0xFF	; 255
    4a30:	c2 1a       	sub	r12, r18
    4a32:	d2 0a       	sbc	r13, r18
    4a34:	6e ec       	ldi	r22, 0xCE	; 206
    4a36:	70 e0       	ldi	r23, 0x00	; 0
    4a38:	c6 01       	movw	r24, r12
    4a3a:	0e 94 4a 27 	call	0x4e94	; 0x4e94 <_ZN6Serial10writestrlnEPc>
    4a3e:	63 ec       	ldi	r22, 0xC3	; 195
    4a40:	70 e0       	ldi	r23, 0x00	; 0
    4a42:	c6 01       	movw	r24, r12
    4a44:	0e 94 4a 27 	call	0x4e94	; 0x4e94 <_ZN6Serial10writestrlnEPc>
	
	dumpmem();
    4a48:	c2 5e       	subi	r28, 0xE2	; 226
    4a4a:	dd 4f       	sbci	r29, 0xFD	; 253
    4a4c:	88 81       	ld	r24, Y
    4a4e:	99 81       	ldd	r25, Y+1	; 0x01
    4a50:	ce 51       	subi	r28, 0x1E	; 30
    4a52:	d2 40       	sbci	r29, 0x02	; 2
    4a54:	0e 94 3d 1e 	call	0x3c7a	; 0x3c7a <_ZN4QEPU7dumpmemEv>
	/*EEPROM FETCH*/
	#pragma region EEPROM_FETCH
	int * eeprom_mem=utils.str2intarr(eeprom.readall()); //TODO: READ ALL EEPROM
    4a58:	c2 5e       	subi	r28, 0xE2	; 226
    4a5a:	dd 4f       	sbci	r29, 0xFD	; 253
    4a5c:	88 81       	ld	r24, Y
    4a5e:	99 81       	ldd	r25, Y+1	; 0x01
    4a60:	ce 51       	subi	r28, 0x1E	; 30
    4a62:	d2 40       	sbci	r29, 0x02	; 2
    4a64:	0e 94 6f 02 	call	0x4de	; 0x4de <_ZN6EEProm7readallEv>
    4a68:	bc 01       	movw	r22, r24
    4a6a:	c2 5e       	subi	r28, 0xE2	; 226
    4a6c:	dd 4f       	sbci	r29, 0xFD	; 253
    4a6e:	88 81       	ld	r24, Y
    4a70:	99 81       	ldd	r25, Y+1	; 0x01
    4a72:	ce 51       	subi	r28, 0x1E	; 30
    4a74:	d2 40       	sbci	r29, 0x02	; 2
    4a76:	02 96       	adiw	r24, 0x02	; 2
    4a78:	0e 94 fc 1e 	call	0x3df8	; 0x3df8 <_ZN4QEPU5Utils10str2intarrEPc>
    4a7c:	fc 01       	movw	r30, r24
    4a7e:	38 97       	sbiw	r30, 0x08	; 8
	int eeprom_mem_length=0;
    4a80:	20 e0       	ldi	r18, 0x00	; 0
    4a82:	30 e0       	ldi	r19, 0x00	; 0
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
    4a84:	40 85       	ldd	r20, Z+8	; 0x08
    4a86:	51 85       	ldd	r21, Z+9	; 0x09
    4a88:	4f 3f       	cpi	r20, 0xFF	; 255
    4a8a:	51 05       	cpc	r21, r1
    4a8c:	a1 f4       	brne	.+40     	; 0x4ab6 <_ZN4QEPU3runEv+0xcc>
    4a8e:	46 81       	ldd	r20, Z+6	; 0x06
    4a90:	57 81       	ldd	r21, Z+7	; 0x07
    4a92:	4f 3f       	cpi	r20, 0xFF	; 255
    4a94:	51 05       	cpc	r21, r1
    4a96:	79 f4       	brne	.+30     	; 0x4ab6 <_ZN4QEPU3runEv+0xcc>
    4a98:	44 81       	ldd	r20, Z+4	; 0x04
    4a9a:	55 81       	ldd	r21, Z+5	; 0x05
    4a9c:	4f 3f       	cpi	r20, 0xFF	; 255
    4a9e:	51 05       	cpc	r21, r1
    4aa0:	51 f4       	brne	.+20     	; 0x4ab6 <_ZN4QEPU3runEv+0xcc>
    4aa2:	42 81       	ldd	r20, Z+2	; 0x02
    4aa4:	53 81       	ldd	r21, Z+3	; 0x03
    4aa6:	4f 3f       	cpi	r20, 0xFF	; 255
    4aa8:	51 05       	cpc	r21, r1
    4aaa:	29 f4       	brne	.+10     	; 0x4ab6 <_ZN4QEPU3runEv+0xcc>
    4aac:	40 81       	ld	r20, Z
    4aae:	51 81       	ldd	r21, Z+1	; 0x01
    4ab0:	4f 3f       	cpi	r20, 0xFF	; 255
    4ab2:	51 05       	cpc	r21, r1
    4ab4:	21 f0       	breq	.+8      	; 0x4abe <_ZN4QEPU3runEv+0xd4>
    4ab6:	2f 5f       	subi	r18, 0xFF	; 255
    4ab8:	3f 4f       	sbci	r19, 0xFF	; 255
    4aba:	32 96       	adiw	r30, 0x02	; 2
    4abc:	e3 cf       	rjmp	.-58     	; 0x4a84 <_ZN4QEPU3runEv+0x9a>
    4abe:	a9 01       	movw	r20, r18
    4ac0:	44 50       	subi	r20, 0x04	; 4
    4ac2:	51 09       	sbc	r21, r1
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
	for(int i=0;i<eeprom_mem_length;i++){
    4ac4:	14 16       	cp	r1, r20
    4ac6:	15 06       	cpc	r1, r21
    4ac8:	0c f0       	brlt	.+2      	; 0x4acc <_ZN4QEPU3runEv+0xe2>
    4aca:	90 c1       	rjmp	.+800    	; 0x4dec <_ZN4QEPU3runEv+0x402>
    4acc:	fc 01       	movw	r30, r24
    4ace:	25 50       	subi	r18, 0x05	; 5
    4ad0:	31 09       	sbc	r19, r1
    4ad2:	40 e0       	ldi	r20, 0x00	; 0
    4ad4:	50 e0       	ldi	r21, 0x00	; 0
	int * eeprom_mem=utils.str2intarr(eeprom.readall()); //TODO: READ ALL EEPROM
	int eeprom_mem_length=0;
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
    4ad6:	80 e0       	ldi	r24, 0x00	; 0
    4ad8:	90 e0       	ldi	r25, 0x00	; 0
    4ada:	ca 5d       	subi	r28, 0xDA	; 218
    4adc:	dd 4f       	sbci	r29, 0xFD	; 253
    4ade:	19 82       	std	Y+1, r1	; 0x01
    4ae0:	18 82       	st	Y, r1
    4ae2:	c6 52       	subi	r28, 0x26	; 38
    4ae4:	d2 40       	sbci	r29, 0x02	; 2
	for(int i=0;i<eeprom_mem_length;i++){
		if(eeprom_splittedx>=INSTR_WIDTH) {line++;eeprom_splittedx=0;} 
		eeprom_splitted[line][eeprom_splittedx++]=eeprom_mem[i];
    4ae6:	1d e0       	ldi	r17, 0x0D	; 13
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
	for(int i=0;i<eeprom_mem_length;i++){
		if(eeprom_splittedx>=INSTR_WIDTH) {line++;eeprom_splittedx=0;} 
    4ae8:	91 2c       	mov	r9, r1
    4aea:	a1 2c       	mov	r10, r1
    4aec:	61 2c       	mov	r6, r1
    4aee:	71 2c       	mov	r7, r1
    4af0:	0c c0       	rjmp	.+24     	; 0x4b0a <_ZN4QEPU3runEv+0x120>
    4af2:	6d 30       	cpi	r22, 0x0D	; 13
    4af4:	71 05       	cpc	r23, r1
    4af6:	34 f0       	brlt	.+12     	; 0x4b04 <_ZN4QEPU3runEv+0x11a>
    4af8:	8f ef       	ldi	r24, 0xFF	; 255
    4afa:	68 1a       	sub	r6, r24
    4afc:	78 0a       	sbc	r7, r24
    4afe:	89 2d       	mov	r24, r9
    4b00:	9a 2d       	mov	r25, r10
    4b02:	01 c0       	rjmp	.+2      	; 0x4b06 <_ZN4QEPU3runEv+0x11c>
		eeprom_splitted[line][eeprom_splittedx++]=eeprom_mem[i];
    4b04:	cb 01       	movw	r24, r22
    4b06:	4f 5f       	subi	r20, 0xFF	; 255
    4b08:	5f 4f       	sbci	r21, 0xFF	; 255
    4b0a:	bc 01       	movw	r22, r24
    4b0c:	6f 5f       	subi	r22, 0xFF	; 255
    4b0e:	7f 4f       	sbci	r23, 0xFF	; 255
    4b10:	c1 90       	ld	r12, Z+
    4b12:	d1 90       	ld	r13, Z+
    4b14:	16 9d       	mul	r17, r6
    4b16:	d0 01       	movw	r26, r0
    4b18:	17 9d       	mul	r17, r7
    4b1a:	b0 0d       	add	r27, r0
    4b1c:	11 24       	eor	r1, r1
    4b1e:	8a 0f       	add	r24, r26
    4b20:	9b 1f       	adc	r25, r27
    4b22:	dc 01       	movw	r26, r24
    4b24:	aa 0f       	add	r26, r26
    4b26:	bb 1f       	adc	r27, r27
    4b28:	81 e0       	ldi	r24, 0x01	; 1
    4b2a:	90 e0       	ldi	r25, 0x00	; 0
    4b2c:	8c 0f       	add	r24, r28
    4b2e:	9d 1f       	adc	r25, r29
    4b30:	a8 0f       	add	r26, r24
    4b32:	b9 1f       	adc	r27, r25
    4b34:	cd 92       	st	X+, r12
    4b36:	dc 92       	st	X, r13
	int eeprom_mem_length=0;
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
	for(int i=0;i<eeprom_mem_length;i++){
    4b38:	42 17       	cp	r20, r18
    4b3a:	53 07       	cpc	r21, r19
    4b3c:	d1 f6       	brne	.-76     	; 0x4af2 <_ZN4QEPU3runEv+0x108>
    4b3e:	ca 5d       	subi	r28, 0xDA	; 218
    4b40:	dd 4f       	sbci	r29, 0xFD	; 253
    4b42:	79 82       	std	Y+1, r7	; 0x01
    4b44:	68 82       	st	Y, r6
    4b46:	c6 52       	subi	r28, 0x26	; 38
    4b48:	d2 40       	sbci	r29, 0x02	; 2
	}
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
    4b4a:	c2 5e       	subi	r28, 0xE2	; 226
    4b4c:	dd 4f       	sbci	r29, 0xFD	; 253
    4b4e:	e8 81       	ld	r30, Y
    4b50:	f9 81       	ldd	r31, Y+1	; 0x01
    4b52:	ce 51       	subi	r28, 0x1E	; 30
    4b54:	d2 40       	sbci	r29, 0x02	; 2
    4b56:	14 82       	std	Z+4, r1	; 0x04
    4b58:	13 82       	std	Z+3, r1	; 0x03
    4b5a:	16 14       	cp	r1, r6
    4b5c:	17 04       	cpc	r1, r7
    4b5e:	0c f0       	brlt	.+2      	; 0x4b62 <_ZN4QEPU3runEv+0x178>
    4b60:	3c c1       	rjmp	.+632    	; 0x4dda <_ZN4QEPU3runEv+0x3f0>
    4b62:	80 e0       	ldi	r24, 0x00	; 0
    4b64:	90 e0       	ldi	r25, 0x00	; 0
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]=""; char op3s[OP3_WIDTH]="";	
    4b66:	1e 01       	movw	r2, r28
    4b68:	39 ee       	ldi	r19, 0xE9	; 233
    4b6a:	23 1a       	sub	r2, r19
    4b6c:	3d ef       	ldi	r19, 0xFD	; 253
    4b6e:	33 0a       	sbc	r3, r19
    4b70:	2e 01       	movw	r4, r28
    4b72:	e0 ef       	ldi	r30, 0xF0	; 240
    4b74:	4e 1a       	sub	r4, r30
    4b76:	ed ef       	ldi	r30, 0xFD	; 253
    4b78:	5e 0a       	sbc	r5, r30
    4b7a:	3e 01       	movw	r6, r28
    4b7c:	f7 ef       	ldi	r31, 0xF7	; 247
    4b7e:	6f 1a       	sub	r6, r31
    4b80:	fd ef       	ldi	r31, 0xFD	; 253
    4b82:	7f 0a       	sbc	r7, r31
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
			sprintf(op1s,"%s%x",op1s,eeprom_splitted[program_counter][k+FIXED_OP1_OFFSET]); // HEX CONCAT TO STRING (OP1 FETCH)
    4b84:	0f 2e       	mov	r0, r31
    4b86:	f8 ed       	ldi	r31, 0xD8	; 216
    4b88:	8f 2e       	mov	r8, r31
    4b8a:	f0 e0       	ldi	r31, 0x00	; 0
    4b8c:	9f 2e       	mov	r9, r31
    4b8e:	f0 2d       	mov	r31, r0
    4b90:	c8 5d       	subi	r28, 0xD8	; 216
    4b92:	dd 4f       	sbci	r29, 0xFD	; 253
    4b94:	28 82       	st	Y, r2
    4b96:	c8 52       	subi	r28, 0x28	; 40
    4b98:	d2 40       	sbci	r29, 0x02	; 2
    4b9a:	c7 5d       	subi	r28, 0xD7	; 215
    4b9c:	dd 4f       	sbci	r29, 0xFD	; 253
    4b9e:	38 82       	st	Y, r3
    4ba0:	c9 52       	subi	r28, 0x29	; 41
    4ba2:	d2 40       	sbci	r29, 0x02	; 2
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
    4ba4:	c6 5d       	subi	r28, 0xD6	; 214
    4ba6:	dd 4f       	sbci	r29, 0xFD	; 253
    4ba8:	48 82       	st	Y, r4
    4baa:	ca 52       	subi	r28, 0x2A	; 42
    4bac:	d2 40       	sbci	r29, 0x02	; 2
    4bae:	c5 5d       	subi	r28, 0xD5	; 213
    4bb0:	dd 4f       	sbci	r29, 0xFD	; 253
    4bb2:	58 82       	st	Y, r5
    4bb4:	cb 52       	subi	r28, 0x2B	; 43
    4bb6:	d2 40       	sbci	r29, 0x02	; 2
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
    4bb8:	c4 5d       	subi	r28, 0xD4	; 212
    4bba:	dd 4f       	sbci	r29, 0xFD	; 253
    4bbc:	68 82       	st	Y, r6
    4bbe:	cc 52       	subi	r28, 0x2C	; 44
    4bc0:	d2 40       	sbci	r29, 0x02	; 2
    4bc2:	c3 5d       	subi	r28, 0xD3	; 211
    4bc4:	dd 4f       	sbci	r29, 0xFD	; 253
    4bc6:	78 82       	st	Y, r7
    4bc8:	cd 52       	subi	r28, 0x2D	; 45
    4bca:	d2 40       	sbci	r29, 0x02	; 2
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]=""; char op3s[OP3_WIDTH]="";	
    4bcc:	f1 01       	movw	r30, r2
    4bce:	10 82       	st	Z, r1
    4bd0:	11 82       	std	Z+1, r1	; 0x01
    4bd2:	12 82       	std	Z+2, r1	; 0x02
    4bd4:	13 82       	std	Z+3, r1	; 0x03
    4bd6:	14 82       	std	Z+4, r1	; 0x04
    4bd8:	15 82       	std	Z+5, r1	; 0x05
    4bda:	16 82       	std	Z+6, r1	; 0x06
    4bdc:	f2 01       	movw	r30, r4
    4bde:	10 82       	st	Z, r1
    4be0:	11 82       	std	Z+1, r1	; 0x01
    4be2:	12 82       	std	Z+2, r1	; 0x02
    4be4:	13 82       	std	Z+3, r1	; 0x03
    4be6:	14 82       	std	Z+4, r1	; 0x04
    4be8:	15 82       	std	Z+5, r1	; 0x05
    4bea:	16 82       	std	Z+6, r1	; 0x06
    4bec:	f3 01       	movw	r30, r6
    4bee:	10 82       	st	Z, r1
    4bf0:	11 82       	std	Z+1, r1	; 0x01
    4bf2:	12 82       	std	Z+2, r1	; 0x02
    4bf4:	13 82       	std	Z+3, r1	; 0x03
    4bf6:	14 82       	std	Z+4, r1	; 0x04
    4bf8:	15 82       	std	Z+5, r1	; 0x05
    4bfa:	16 82       	std	Z+6, r1	; 0x06
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
    4bfc:	2a e1       	ldi	r18, 0x1A	; 26
    4bfe:	28 9f       	mul	r18, r24
    4c00:	f0 01       	movw	r30, r0
    4c02:	29 9f       	mul	r18, r25
    4c04:	f0 0d       	add	r31, r0
    4c06:	11 24       	eor	r1, r1
    4c08:	21 e0       	ldi	r18, 0x01	; 1
    4c0a:	30 e0       	ldi	r19, 0x00	; 0
    4c0c:	2c 0f       	add	r18, r28
    4c0e:	3d 1f       	adc	r19, r29
    4c10:	e2 0f       	add	r30, r18
    4c12:	f3 1f       	adc	r31, r19
    4c14:	80 81       	ld	r24, Z
    4c16:	91 81       	ldd	r25, Z+1	; 0x01
    4c18:	c0 5e       	subi	r28, 0xE0	; 224
    4c1a:	dd 4f       	sbci	r29, 0xFD	; 253
    4c1c:	99 83       	std	Y+1, r25	; 0x01
    4c1e:	88 83       	st	Y, r24
    4c20:	c0 52       	subi	r28, 0x20	; 32
    4c22:	d2 40       	sbci	r29, 0x02	; 2
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
    4c24:	c1 2c       	mov	r12, r1
    4c26:	d1 2c       	mov	r13, r1
    4c28:	c2 5e       	subi	r28, 0xE2	; 226
    4c2a:	dd 4f       	sbci	r29, 0xFD	; 253
    4c2c:	a8 80       	ld	r10, Y
    4c2e:	b9 80       	ldd	r11, Y+1	; 0x01
    4c30:	ce 51       	subi	r28, 0x1E	; 30
    4c32:	d2 40       	sbci	r29, 0x02	; 2
			sprintf(op1s,"%s%x",op1s,eeprom_splitted[program_counter][k+FIXED_OP1_OFFSET]); // HEX CONCAT TO STRING (OP1 FETCH)
    4c34:	9f ef       	ldi	r25, 0xFF	; 255
    4c36:	c9 1a       	sub	r12, r25
    4c38:	d9 0a       	sbc	r13, r25
    4c3a:	f5 01       	movw	r30, r10
    4c3c:	83 81       	ldd	r24, Z+3	; 0x03
    4c3e:	94 81       	ldd	r25, Z+4	; 0x04
    4c40:	2d e0       	ldi	r18, 0x0D	; 13
    4c42:	28 9f       	mul	r18, r24
    4c44:	f0 01       	movw	r30, r0
    4c46:	29 9f       	mul	r18, r25
    4c48:	f0 0d       	add	r31, r0
    4c4a:	11 24       	eor	r1, r1
    4c4c:	ec 0d       	add	r30, r12
    4c4e:	fd 1d       	adc	r31, r13
    4c50:	ee 0f       	add	r30, r30
    4c52:	ff 1f       	adc	r31, r31
    4c54:	81 e0       	ldi	r24, 0x01	; 1
    4c56:	90 e0       	ldi	r25, 0x00	; 0
    4c58:	8c 0f       	add	r24, r28
    4c5a:	9d 1f       	adc	r25, r29
    4c5c:	e8 0f       	add	r30, r24
    4c5e:	f9 1f       	adc	r31, r25
    4c60:	81 81       	ldd	r24, Z+1	; 0x01
    4c62:	8f 93       	push	r24
    4c64:	80 81       	ld	r24, Z
    4c66:	8f 93       	push	r24
    4c68:	3f 92       	push	r3
    4c6a:	2f 92       	push	r2
    4c6c:	9f 92       	push	r9
    4c6e:	8f 92       	push	r8
    4c70:	3f 92       	push	r3
    4c72:	2f 92       	push	r2
    4c74:	0e 94 69 2e 	call	0x5cd2	; 0x5cd2 <sprintf>
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
    4c78:	f5 01       	movw	r30, r10
    4c7a:	83 81       	ldd	r24, Z+3	; 0x03
    4c7c:	94 81       	ldd	r25, Z+4	; 0x04
    4c7e:	2d e0       	ldi	r18, 0x0D	; 13
    4c80:	28 9f       	mul	r18, r24
    4c82:	f0 01       	movw	r30, r0
    4c84:	29 9f       	mul	r18, r25
    4c86:	f0 0d       	add	r31, r0
    4c88:	11 24       	eor	r1, r1
    4c8a:	ec 0d       	add	r30, r12
    4c8c:	fd 1d       	adc	r31, r13
    4c8e:	34 96       	adiw	r30, 0x04	; 4
    4c90:	ee 0f       	add	r30, r30
    4c92:	ff 1f       	adc	r31, r31
    4c94:	81 e0       	ldi	r24, 0x01	; 1
    4c96:	90 e0       	ldi	r25, 0x00	; 0
    4c98:	8c 0f       	add	r24, r28
    4c9a:	9d 1f       	adc	r25, r29
    4c9c:	e8 0f       	add	r30, r24
    4c9e:	f9 1f       	adc	r31, r25
    4ca0:	81 81       	ldd	r24, Z+1	; 0x01
    4ca2:	8f 93       	push	r24
    4ca4:	80 81       	ld	r24, Z
    4ca6:	8f 93       	push	r24
    4ca8:	5f 92       	push	r5
    4caa:	4f 92       	push	r4
    4cac:	9f 92       	push	r9
    4cae:	8f 92       	push	r8
    4cb0:	5f 92       	push	r5
    4cb2:	4f 92       	push	r4
    4cb4:	0e 94 69 2e 	call	0x5cd2	; 0x5cd2 <sprintf>
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
    4cb8:	f5 01       	movw	r30, r10
    4cba:	83 81       	ldd	r24, Z+3	; 0x03
    4cbc:	94 81       	ldd	r25, Z+4	; 0x04
    4cbe:	2d e0       	ldi	r18, 0x0D	; 13
    4cc0:	28 9f       	mul	r18, r24
    4cc2:	f0 01       	movw	r30, r0
    4cc4:	29 9f       	mul	r18, r25
    4cc6:	f0 0d       	add	r31, r0
    4cc8:	11 24       	eor	r1, r1
    4cca:	ec 0d       	add	r30, r12
    4ccc:	fd 1d       	adc	r31, r13
    4cce:	38 96       	adiw	r30, 0x08	; 8
    4cd0:	ee 0f       	add	r30, r30
    4cd2:	ff 1f       	adc	r31, r31
    4cd4:	81 e0       	ldi	r24, 0x01	; 1
    4cd6:	90 e0       	ldi	r25, 0x00	; 0
    4cd8:	8c 0f       	add	r24, r28
    4cda:	9d 1f       	adc	r25, r29
    4cdc:	e8 0f       	add	r30, r24
    4cde:	f9 1f       	adc	r31, r25
    4ce0:	81 81       	ldd	r24, Z+1	; 0x01
    4ce2:	8f 93       	push	r24
    4ce4:	80 81       	ld	r24, Z
    4ce6:	8f 93       	push	r24
    4ce8:	7f 92       	push	r7
    4cea:	6f 92       	push	r6
    4cec:	9f 92       	push	r9
    4cee:	8f 92       	push	r8
    4cf0:	7f 92       	push	r7
    4cf2:	6f 92       	push	r6
    4cf4:	0e 94 69 2e 	call	0x5cd2	; 0x5cd2 <sprintf>
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]=""; char op3s[OP3_WIDTH]="";	
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
    4cf8:	0f b6       	in	r0, 0x3f	; 63
    4cfa:	f8 94       	cli
    4cfc:	de bf       	out	0x3e, r29	; 62
    4cfe:	0f be       	out	0x3f, r0	; 63
    4d00:	cd bf       	out	0x3d, r28	; 61
    4d02:	f4 e0       	ldi	r31, 0x04	; 4
    4d04:	cf 16       	cp	r12, r31
    4d06:	d1 04       	cpc	r13, r1
    4d08:	09 f0       	breq	.+2      	; 0x4d0c <_ZN4QEPU3runEv+0x322>
    4d0a:	94 cf       	rjmp	.-216    	; 0x4c34 <_ZN4QEPU3runEv+0x24a>
			sprintf(op1s,"%s%x",op1s,eeprom_splitted[program_counter][k+FIXED_OP1_OFFSET]); // HEX CONCAT TO STRING (OP1 FETCH)
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
		}
		execute(func,strtol(op1s,NULL,16),strtol(op2s,NULL,16),strtol(op3s,NULL,16)); //*INSTRUCTION DECODE AND EXECUTE*/
    4d0c:	40 e1       	ldi	r20, 0x10	; 16
    4d0e:	50 e0       	ldi	r21, 0x00	; 0
    4d10:	60 e0       	ldi	r22, 0x00	; 0
    4d12:	70 e0       	ldi	r23, 0x00	; 0
    4d14:	c4 5d       	subi	r28, 0xD4	; 212
    4d16:	dd 4f       	sbci	r29, 0xFD	; 253
    4d18:	88 81       	ld	r24, Y
    4d1a:	cc 52       	subi	r28, 0x2C	; 44
    4d1c:	d2 40       	sbci	r29, 0x02	; 2
    4d1e:	c3 5d       	subi	r28, 0xD3	; 211
    4d20:	dd 4f       	sbci	r29, 0xFD	; 253
    4d22:	98 81       	ld	r25, Y
    4d24:	cd 52       	subi	r28, 0x2D	; 45
    4d26:	d2 40       	sbci	r29, 0x02	; 2
    4d28:	0e 94 2d 2d 	call	0x5a5a	; 0x5a5a <strtol>
    4d2c:	5b 01       	movw	r10, r22
    4d2e:	6c 01       	movw	r12, r24
    4d30:	40 e1       	ldi	r20, 0x10	; 16
    4d32:	50 e0       	ldi	r21, 0x00	; 0
    4d34:	60 e0       	ldi	r22, 0x00	; 0
    4d36:	70 e0       	ldi	r23, 0x00	; 0
    4d38:	c6 5d       	subi	r28, 0xD6	; 214
    4d3a:	dd 4f       	sbci	r29, 0xFD	; 253
    4d3c:	88 81       	ld	r24, Y
    4d3e:	ca 52       	subi	r28, 0x2A	; 42
    4d40:	d2 40       	sbci	r29, 0x02	; 2
    4d42:	c5 5d       	subi	r28, 0xD5	; 213
    4d44:	dd 4f       	sbci	r29, 0xFD	; 253
    4d46:	98 81       	ld	r25, Y
    4d48:	cb 52       	subi	r28, 0x2B	; 43
    4d4a:	d2 40       	sbci	r29, 0x02	; 2
    4d4c:	0e 94 2d 2d 	call	0x5a5a	; 0x5a5a <strtol>
    4d50:	ce 5d       	subi	r28, 0xDE	; 222
    4d52:	dd 4f       	sbci	r29, 0xFD	; 253
    4d54:	68 83       	st	Y, r22
    4d56:	79 83       	std	Y+1, r23	; 0x01
    4d58:	8a 83       	std	Y+2, r24	; 0x02
    4d5a:	9b 83       	std	Y+3, r25	; 0x03
    4d5c:	c2 52       	subi	r28, 0x22	; 34
    4d5e:	d2 40       	sbci	r29, 0x02	; 2
    4d60:	40 e1       	ldi	r20, 0x10	; 16
    4d62:	50 e0       	ldi	r21, 0x00	; 0
    4d64:	60 e0       	ldi	r22, 0x00	; 0
    4d66:	70 e0       	ldi	r23, 0x00	; 0
    4d68:	c8 5d       	subi	r28, 0xD8	; 216
    4d6a:	dd 4f       	sbci	r29, 0xFD	; 253
    4d6c:	88 81       	ld	r24, Y
    4d6e:	c8 52       	subi	r28, 0x28	; 40
    4d70:	d2 40       	sbci	r29, 0x02	; 2
    4d72:	c7 5d       	subi	r28, 0xD7	; 215
    4d74:	dd 4f       	sbci	r29, 0xFD	; 253
    4d76:	98 81       	ld	r25, Y
    4d78:	c9 52       	subi	r28, 0x29	; 41
    4d7a:	d2 40       	sbci	r29, 0x02	; 2
    4d7c:	0e 94 2d 2d 	call	0x5a5a	; 0x5a5a <strtol>
    4d80:	9b 01       	movw	r18, r22
    4d82:	ac 01       	movw	r20, r24
    4d84:	ce 5d       	subi	r28, 0xDE	; 222
    4d86:	dd 4f       	sbci	r29, 0xFD	; 253
    4d88:	e8 80       	ld	r14, Y
    4d8a:	f9 80       	ldd	r15, Y+1	; 0x01
    4d8c:	0a 81       	ldd	r16, Y+2	; 0x02
    4d8e:	1b 81       	ldd	r17, Y+3	; 0x03
    4d90:	c2 52       	subi	r28, 0x22	; 34
    4d92:	d2 40       	sbci	r29, 0x02	; 2
    4d94:	c0 5e       	subi	r28, 0xE0	; 224
    4d96:	dd 4f       	sbci	r29, 0xFD	; 253
    4d98:	68 81       	ld	r22, Y
    4d9a:	79 81       	ldd	r23, Y+1	; 0x01
    4d9c:	c0 52       	subi	r28, 0x20	; 32
    4d9e:	d2 40       	sbci	r29, 0x02	; 2
    4da0:	c2 5e       	subi	r28, 0xE2	; 226
    4da2:	dd 4f       	sbci	r29, 0xFD	; 253
    4da4:	88 81       	ld	r24, Y
    4da6:	99 81       	ldd	r25, Y+1	; 0x01
    4da8:	ce 51       	subi	r28, 0x1E	; 30
    4daa:	d2 40       	sbci	r29, 0x02	; 2
    4dac:	0e 94 94 1f 	call	0x3f28	; 0x3f28 <_ZN4QEPU7executeEilll>
	}
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
    4db0:	c2 5e       	subi	r28, 0xE2	; 226
    4db2:	dd 4f       	sbci	r29, 0xFD	; 253
    4db4:	e8 81       	ld	r30, Y
    4db6:	f9 81       	ldd	r31, Y+1	; 0x01
    4db8:	ce 51       	subi	r28, 0x1E	; 30
    4dba:	d2 40       	sbci	r29, 0x02	; 2
    4dbc:	83 81       	ldd	r24, Z+3	; 0x03
    4dbe:	94 81       	ldd	r25, Z+4	; 0x04
    4dc0:	01 96       	adiw	r24, 0x01	; 1
    4dc2:	94 83       	std	Z+4, r25	; 0x04
    4dc4:	83 83       	std	Z+3, r24	; 0x03
    4dc6:	ca 5d       	subi	r28, 0xDA	; 218
    4dc8:	dd 4f       	sbci	r29, 0xFD	; 253
    4dca:	28 81       	ld	r18, Y
    4dcc:	39 81       	ldd	r19, Y+1	; 0x01
    4dce:	c6 52       	subi	r28, 0x26	; 38
    4dd0:	d2 40       	sbci	r29, 0x02	; 2
    4dd2:	82 17       	cp	r24, r18
    4dd4:	93 07       	cpc	r25, r19
    4dd6:	0c f4       	brge	.+2      	; 0x4dda <_ZN4QEPU3runEv+0x3f0>
    4dd8:	f9 ce       	rjmp	.-526    	; 0x4bcc <_ZN4QEPU3runEv+0x1e2>
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
		}
		execute(func,strtol(op1s,NULL,16),strtol(op2s,NULL,16),strtol(op3s,NULL,16)); //*INSTRUCTION DECODE AND EXECUTE*/
	}
	dumpmem();
    4dda:	c2 5e       	subi	r28, 0xE2	; 226
    4ddc:	dd 4f       	sbci	r29, 0xFD	; 253
    4dde:	88 81       	ld	r24, Y
    4de0:	99 81       	ldd	r25, Y+1	; 0x01
    4de2:	ce 51       	subi	r28, 0x1E	; 30
    4de4:	d2 40       	sbci	r29, 0x02	; 2
    4de6:	0e 94 3d 1e 	call	0x3c7a	; 0x3c7a <_ZN4QEPU7dumpmemEv>
    4dea:	09 c0       	rjmp	.+18     	; 0x4dfe <_ZN4QEPU3runEv+0x414>
	}
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
    4dec:	c2 5e       	subi	r28, 0xE2	; 226
    4dee:	dd 4f       	sbci	r29, 0xFD	; 253
    4df0:	e8 81       	ld	r30, Y
    4df2:	f9 81       	ldd	r31, Y+1	; 0x01
    4df4:	ce 51       	subi	r28, 0x1E	; 30
    4df6:	d2 40       	sbci	r29, 0x02	; 2
    4df8:	14 82       	std	Z+4, r1	; 0x04
    4dfa:	13 82       	std	Z+3, r1	; 0x03
    4dfc:	ee cf       	rjmp	.-36     	; 0x4dda <_ZN4QEPU3runEv+0x3f0>
		}
		execute(func,strtol(op1s,NULL,16),strtol(op2s,NULL,16),strtol(op3s,NULL,16)); //*INSTRUCTION DECODE AND EXECUTE*/
	}
	dumpmem();
	#pragma endregion
}
    4dfe:	c3 5d       	subi	r28, 0xD3	; 211
    4e00:	dd 4f       	sbci	r29, 0xFD	; 253
    4e02:	0f b6       	in	r0, 0x3f	; 63
    4e04:	f8 94       	cli
    4e06:	de bf       	out	0x3e, r29	; 62
    4e08:	0f be       	out	0x3f, r0	; 63
    4e0a:	cd bf       	out	0x3d, r28	; 61
    4e0c:	df 91       	pop	r29
    4e0e:	cf 91       	pop	r28
    4e10:	1f 91       	pop	r17
    4e12:	0f 91       	pop	r16
    4e14:	ff 90       	pop	r15
    4e16:	ef 90       	pop	r14
    4e18:	df 90       	pop	r13
    4e1a:	cf 90       	pop	r12
    4e1c:	bf 90       	pop	r11
    4e1e:	af 90       	pop	r10
    4e20:	9f 90       	pop	r9
    4e22:	8f 90       	pop	r8
    4e24:	7f 90       	pop	r7
    4e26:	6f 90       	pop	r6
    4e28:	5f 90       	pop	r5
    4e2a:	4f 90       	pop	r4
    4e2c:	3f 90       	pop	r3
    4e2e:	2f 90       	pop	r2
    4e30:	08 95       	ret

00004e32 <main>:
#include "qepu.h"
int main(void){
    4e32:	cf 93       	push	r28
    4e34:	df 93       	push	r29
    4e36:	00 d0       	rcall	.+0      	; 0x4e38 <main+0x6>
    4e38:	00 d0       	rcall	.+0      	; 0x4e3a <main+0x8>
    4e3a:	00 d0       	rcall	.+0      	; 0x4e3c <main+0xa>
    4e3c:	cd b7       	in	r28, 0x3d	; 61
    4e3e:	de b7       	in	r29, 0x3e	; 62
	QEPU qepu;
    4e40:	ce 01       	movw	r24, r28
    4e42:	01 96       	adiw	r24, 0x01	; 1
    4e44:	0e 94 cc 1d 	call	0x3b98	; 0x3b98 <_ZN4QEPUC1Ev>
	qepu.run();
    4e48:	ce 01       	movw	r24, r28
    4e4a:	01 96       	adiw	r24, 0x01	; 1
    4e4c:	0e 94 f5 24 	call	0x49ea	; 0x49ea <_ZN4QEPU3runEv>
    4e50:	ff cf       	rjmp	.-2      	; 0x4e50 <main+0x1e>

00004e52 <_ZN6SerialC1Ev>:
    4e52:	83 e3       	ldi	r24, 0x33	; 51
    4e54:	89 b9       	out	0x09, r24	; 9
    4e56:	10 bc       	out	0x20, r1	; 32
    4e58:	86 e8       	ldi	r24, 0x86	; 134
    4e5a:	80 bd       	out	0x20, r24	; 32
    4e5c:	88 e1       	ldi	r24, 0x18	; 24
    4e5e:	8a b9       	out	0x0a, r24	; 10
    4e60:	08 95       	ret

00004e62 <_ZN6Serial5writeEc>:
    4e62:	5d 9b       	sbis	0x0b, 5	; 11
    4e64:	fe cf       	rjmp	.-4      	; 0x4e62 <_ZN6Serial5writeEc>
    4e66:	6c b9       	out	0x0c, r22	; 12
    4e68:	08 95       	ret

00004e6a <_ZN6Serial8writestrEPc>:
    4e6a:	0f 93       	push	r16
    4e6c:	1f 93       	push	r17
    4e6e:	cf 93       	push	r28
    4e70:	df 93       	push	r29
    4e72:	8c 01       	movw	r16, r24
    4e74:	eb 01       	movw	r28, r22
    4e76:	68 81       	ld	r22, Y
    4e78:	66 23       	and	r22, r22
    4e7a:	39 f0       	breq	.+14     	; 0x4e8a <_ZN6Serial8writestrEPc+0x20>
    4e7c:	21 96       	adiw	r28, 0x01	; 1
    4e7e:	c8 01       	movw	r24, r16
    4e80:	0e 94 31 27 	call	0x4e62	; 0x4e62 <_ZN6Serial5writeEc>
    4e84:	69 91       	ld	r22, Y+
    4e86:	61 11       	cpse	r22, r1
    4e88:	fa cf       	rjmp	.-12     	; 0x4e7e <_ZN6Serial8writestrEPc+0x14>
    4e8a:	df 91       	pop	r29
    4e8c:	cf 91       	pop	r28
    4e8e:	1f 91       	pop	r17
    4e90:	0f 91       	pop	r16
    4e92:	08 95       	ret

00004e94 <_ZN6Serial10writestrlnEPc>:
    4e94:	cf 93       	push	r28
    4e96:	df 93       	push	r29
    4e98:	ec 01       	movw	r28, r24
    4e9a:	0e 94 35 27 	call	0x4e6a	; 0x4e6a <_ZN6Serial8writestrEPc>
    4e9e:	6d e0       	ldi	r22, 0x0D	; 13
    4ea0:	ce 01       	movw	r24, r28
    4ea2:	0e 94 31 27 	call	0x4e62	; 0x4e62 <_ZN6Serial5writeEc>
    4ea6:	df 91       	pop	r29
    4ea8:	cf 91       	pop	r28
    4eaa:	08 95       	ret

00004eac <acos>:
    4eac:	9f 93       	push	r25
    4eae:	9f 77       	andi	r25, 0x7F	; 127
    4eb0:	a6 d1       	rcall	.+844    	; 0x51fe <__fp_arccos>
    4eb2:	0f 90       	pop	r0
    4eb4:	00 20       	and	r0, r0
    4eb6:	3a f4       	brpl	.+14     	; 0x4ec6 <acos+0x1a>
    4eb8:	90 58       	subi	r25, 0x80	; 128
    4eba:	a2 ea       	ldi	r26, 0xA2	; 162
    4ebc:	2a ed       	ldi	r18, 0xDA	; 218
    4ebe:	3f e0       	ldi	r19, 0x0F	; 15
    4ec0:	49 e4       	ldi	r20, 0x49	; 73
    4ec2:	50 e4       	ldi	r21, 0x40	; 64
    4ec4:	13 d0       	rcall	.+38     	; 0x4eec <__addsf3x>
    4ec6:	3e c2       	rjmp	.+1148   	; 0x5344 <__fp_round>

00004ec8 <__subsf3>:
    4ec8:	50 58       	subi	r21, 0x80	; 128

00004eca <__addsf3>:
    4eca:	bb 27       	eor	r27, r27
    4ecc:	aa 27       	eor	r26, r26
    4ece:	0e d0       	rcall	.+28     	; 0x4eec <__addsf3x>
    4ed0:	39 c2       	rjmp	.+1138   	; 0x5344 <__fp_round>
    4ed2:	02 d2       	rcall	.+1028   	; 0x52d8 <__fp_pscA>
    4ed4:	30 f0       	brcs	.+12     	; 0x4ee2 <__addsf3+0x18>
    4ed6:	07 d2       	rcall	.+1038   	; 0x52e6 <__fp_pscB>
    4ed8:	20 f0       	brcs	.+8      	; 0x4ee2 <__addsf3+0x18>
    4eda:	31 f4       	brne	.+12     	; 0x4ee8 <__addsf3+0x1e>
    4edc:	9f 3f       	cpi	r25, 0xFF	; 255
    4ede:	11 f4       	brne	.+4      	; 0x4ee4 <__addsf3+0x1a>
    4ee0:	1e f4       	brtc	.+6      	; 0x4ee8 <__addsf3+0x1e>
    4ee2:	d2 c1       	rjmp	.+932    	; 0x5288 <__fp_nan>
    4ee4:	0e f4       	brtc	.+2      	; 0x4ee8 <__addsf3+0x1e>
    4ee6:	e0 95       	com	r30
    4ee8:	e7 fb       	bst	r30, 7
    4eea:	c8 c1       	rjmp	.+912    	; 0x527c <__fp_inf>

00004eec <__addsf3x>:
    4eec:	e9 2f       	mov	r30, r25
    4eee:	4c d2       	rcall	.+1176   	; 0x5388 <__fp_split3>
    4ef0:	80 f3       	brcs	.-32     	; 0x4ed2 <__addsf3+0x8>
    4ef2:	ba 17       	cp	r27, r26
    4ef4:	62 07       	cpc	r22, r18
    4ef6:	73 07       	cpc	r23, r19
    4ef8:	84 07       	cpc	r24, r20
    4efa:	95 07       	cpc	r25, r21
    4efc:	18 f0       	brcs	.+6      	; 0x4f04 <__addsf3x+0x18>
    4efe:	71 f4       	brne	.+28     	; 0x4f1c <__addsf3x+0x30>
    4f00:	9e f5       	brtc	.+102    	; 0x4f68 <__addsf3x+0x7c>
    4f02:	64 c2       	rjmp	.+1224   	; 0x53cc <__fp_zero>
    4f04:	0e f4       	brtc	.+2      	; 0x4f08 <__addsf3x+0x1c>
    4f06:	e0 95       	com	r30
    4f08:	0b 2e       	mov	r0, r27
    4f0a:	ba 2f       	mov	r27, r26
    4f0c:	a0 2d       	mov	r26, r0
    4f0e:	0b 01       	movw	r0, r22
    4f10:	b9 01       	movw	r22, r18
    4f12:	90 01       	movw	r18, r0
    4f14:	0c 01       	movw	r0, r24
    4f16:	ca 01       	movw	r24, r20
    4f18:	a0 01       	movw	r20, r0
    4f1a:	11 24       	eor	r1, r1
    4f1c:	ff 27       	eor	r31, r31
    4f1e:	59 1b       	sub	r21, r25
    4f20:	99 f0       	breq	.+38     	; 0x4f48 <__addsf3x+0x5c>
    4f22:	59 3f       	cpi	r21, 0xF9	; 249
    4f24:	50 f4       	brcc	.+20     	; 0x4f3a <__addsf3x+0x4e>
    4f26:	50 3e       	cpi	r21, 0xE0	; 224
    4f28:	68 f1       	brcs	.+90     	; 0x4f84 <__addsf3x+0x98>
    4f2a:	1a 16       	cp	r1, r26
    4f2c:	f0 40       	sbci	r31, 0x00	; 0
    4f2e:	a2 2f       	mov	r26, r18
    4f30:	23 2f       	mov	r18, r19
    4f32:	34 2f       	mov	r19, r20
    4f34:	44 27       	eor	r20, r20
    4f36:	58 5f       	subi	r21, 0xF8	; 248
    4f38:	f3 cf       	rjmp	.-26     	; 0x4f20 <__addsf3x+0x34>
    4f3a:	46 95       	lsr	r20
    4f3c:	37 95       	ror	r19
    4f3e:	27 95       	ror	r18
    4f40:	a7 95       	ror	r26
    4f42:	f0 40       	sbci	r31, 0x00	; 0
    4f44:	53 95       	inc	r21
    4f46:	c9 f7       	brne	.-14     	; 0x4f3a <__addsf3x+0x4e>
    4f48:	7e f4       	brtc	.+30     	; 0x4f68 <__addsf3x+0x7c>
    4f4a:	1f 16       	cp	r1, r31
    4f4c:	ba 0b       	sbc	r27, r26
    4f4e:	62 0b       	sbc	r22, r18
    4f50:	73 0b       	sbc	r23, r19
    4f52:	84 0b       	sbc	r24, r20
    4f54:	ba f0       	brmi	.+46     	; 0x4f84 <__addsf3x+0x98>
    4f56:	91 50       	subi	r25, 0x01	; 1
    4f58:	a1 f0       	breq	.+40     	; 0x4f82 <__addsf3x+0x96>
    4f5a:	ff 0f       	add	r31, r31
    4f5c:	bb 1f       	adc	r27, r27
    4f5e:	66 1f       	adc	r22, r22
    4f60:	77 1f       	adc	r23, r23
    4f62:	88 1f       	adc	r24, r24
    4f64:	c2 f7       	brpl	.-16     	; 0x4f56 <__addsf3x+0x6a>
    4f66:	0e c0       	rjmp	.+28     	; 0x4f84 <__addsf3x+0x98>
    4f68:	ba 0f       	add	r27, r26
    4f6a:	62 1f       	adc	r22, r18
    4f6c:	73 1f       	adc	r23, r19
    4f6e:	84 1f       	adc	r24, r20
    4f70:	48 f4       	brcc	.+18     	; 0x4f84 <__addsf3x+0x98>
    4f72:	87 95       	ror	r24
    4f74:	77 95       	ror	r23
    4f76:	67 95       	ror	r22
    4f78:	b7 95       	ror	r27
    4f7a:	f7 95       	ror	r31
    4f7c:	9e 3f       	cpi	r25, 0xFE	; 254
    4f7e:	08 f0       	brcs	.+2      	; 0x4f82 <__addsf3x+0x96>
    4f80:	b3 cf       	rjmp	.-154    	; 0x4ee8 <__addsf3+0x1e>
    4f82:	93 95       	inc	r25
    4f84:	88 0f       	add	r24, r24
    4f86:	08 f0       	brcs	.+2      	; 0x4f8a <__addsf3x+0x9e>
    4f88:	99 27       	eor	r25, r25
    4f8a:	ee 0f       	add	r30, r30
    4f8c:	97 95       	ror	r25
    4f8e:	87 95       	ror	r24
    4f90:	08 95       	ret

00004f92 <atan>:
    4f92:	df 93       	push	r29
    4f94:	dd 27       	eor	r29, r29
    4f96:	b9 2f       	mov	r27, r25
    4f98:	bf 77       	andi	r27, 0x7F	; 127
    4f9a:	40 e8       	ldi	r20, 0x80	; 128
    4f9c:	5f e3       	ldi	r21, 0x3F	; 63
    4f9e:	16 16       	cp	r1, r22
    4fa0:	17 06       	cpc	r1, r23
    4fa2:	48 07       	cpc	r20, r24
    4fa4:	5b 07       	cpc	r21, r27
    4fa6:	10 f4       	brcc	.+4      	; 0x4fac <atan+0x1a>
    4fa8:	d9 2f       	mov	r29, r25
    4faa:	1b d2       	rcall	.+1078   	; 0x53e2 <inverse>
    4fac:	9f 93       	push	r25
    4fae:	8f 93       	push	r24
    4fb0:	7f 93       	push	r23
    4fb2:	6f 93       	push	r22
    4fb4:	76 d3       	rcall	.+1772   	; 0x56a2 <square>
    4fb6:	e8 e9       	ldi	r30, 0x98	; 152
    4fb8:	f0 e0       	ldi	r31, 0x00	; 0
    4fba:	69 d1       	rcall	.+722    	; 0x528e <__fp_powser>
    4fbc:	c3 d1       	rcall	.+902    	; 0x5344 <__fp_round>
    4fbe:	2f 91       	pop	r18
    4fc0:	3f 91       	pop	r19
    4fc2:	4f 91       	pop	r20
    4fc4:	5f 91       	pop	r21
    4fc6:	ce d2       	rcall	.+1436   	; 0x5564 <__mulsf3x>
    4fc8:	dd 23       	and	r29, r29
    4fca:	49 f0       	breq	.+18     	; 0x4fde <atan+0x4c>
    4fcc:	90 58       	subi	r25, 0x80	; 128
    4fce:	a2 ea       	ldi	r26, 0xA2	; 162
    4fd0:	2a ed       	ldi	r18, 0xDA	; 218
    4fd2:	3f e0       	ldi	r19, 0x0F	; 15
    4fd4:	49 ec       	ldi	r20, 0xC9	; 201
    4fd6:	5f e3       	ldi	r21, 0x3F	; 63
    4fd8:	d0 78       	andi	r29, 0x80	; 128
    4fda:	5d 27       	eor	r21, r29
    4fdc:	87 df       	rcall	.-242    	; 0x4eec <__addsf3x>
    4fde:	df 91       	pop	r29
    4fe0:	b1 c1       	rjmp	.+866    	; 0x5344 <__fp_round>

00004fe2 <__cmpsf2>:
    4fe2:	28 d1       	rcall	.+592    	; 0x5234 <__fp_cmp>
    4fe4:	08 f4       	brcc	.+2      	; 0x4fe8 <__cmpsf2+0x6>
    4fe6:	81 e0       	ldi	r24, 0x01	; 1
    4fe8:	08 95       	ret

00004fea <cos>:
    4fea:	85 d1       	rcall	.+778    	; 0x52f6 <__fp_rempio2>
    4fec:	e3 95       	inc	r30
    4fee:	bb c1       	rjmp	.+886    	; 0x5366 <__fp_sinus>

00004ff0 <__divsf3>:
    4ff0:	0c d0       	rcall	.+24     	; 0x500a <__divsf3x>
    4ff2:	a8 c1       	rjmp	.+848    	; 0x5344 <__fp_round>
    4ff4:	78 d1       	rcall	.+752    	; 0x52e6 <__fp_pscB>
    4ff6:	40 f0       	brcs	.+16     	; 0x5008 <__divsf3+0x18>
    4ff8:	6f d1       	rcall	.+734    	; 0x52d8 <__fp_pscA>
    4ffa:	30 f0       	brcs	.+12     	; 0x5008 <__divsf3+0x18>
    4ffc:	21 f4       	brne	.+8      	; 0x5006 <__divsf3+0x16>
    4ffe:	5f 3f       	cpi	r21, 0xFF	; 255
    5000:	19 f0       	breq	.+6      	; 0x5008 <__divsf3+0x18>
    5002:	3c c1       	rjmp	.+632    	; 0x527c <__fp_inf>
    5004:	51 11       	cpse	r21, r1
    5006:	e3 c1       	rjmp	.+966    	; 0x53ce <__fp_szero>
    5008:	3f c1       	rjmp	.+638    	; 0x5288 <__fp_nan>

0000500a <__divsf3x>:
    500a:	be d1       	rcall	.+892    	; 0x5388 <__fp_split3>
    500c:	98 f3       	brcs	.-26     	; 0x4ff4 <__divsf3+0x4>

0000500e <__divsf3_pse>:
    500e:	99 23       	and	r25, r25
    5010:	c9 f3       	breq	.-14     	; 0x5004 <__divsf3+0x14>
    5012:	55 23       	and	r21, r21
    5014:	b1 f3       	breq	.-20     	; 0x5002 <__divsf3+0x12>
    5016:	95 1b       	sub	r25, r21
    5018:	55 0b       	sbc	r21, r21
    501a:	bb 27       	eor	r27, r27
    501c:	aa 27       	eor	r26, r26
    501e:	62 17       	cp	r22, r18
    5020:	73 07       	cpc	r23, r19
    5022:	84 07       	cpc	r24, r20
    5024:	38 f0       	brcs	.+14     	; 0x5034 <__divsf3_pse+0x26>
    5026:	9f 5f       	subi	r25, 0xFF	; 255
    5028:	5f 4f       	sbci	r21, 0xFF	; 255
    502a:	22 0f       	add	r18, r18
    502c:	33 1f       	adc	r19, r19
    502e:	44 1f       	adc	r20, r20
    5030:	aa 1f       	adc	r26, r26
    5032:	a9 f3       	breq	.-22     	; 0x501e <__divsf3_pse+0x10>
    5034:	33 d0       	rcall	.+102    	; 0x509c <__divsf3_pse+0x8e>
    5036:	0e 2e       	mov	r0, r30
    5038:	3a f0       	brmi	.+14     	; 0x5048 <__divsf3_pse+0x3a>
    503a:	e0 e8       	ldi	r30, 0x80	; 128
    503c:	30 d0       	rcall	.+96     	; 0x509e <__divsf3_pse+0x90>
    503e:	91 50       	subi	r25, 0x01	; 1
    5040:	50 40       	sbci	r21, 0x00	; 0
    5042:	e6 95       	lsr	r30
    5044:	00 1c       	adc	r0, r0
    5046:	ca f7       	brpl	.-14     	; 0x503a <__divsf3_pse+0x2c>
    5048:	29 d0       	rcall	.+82     	; 0x509c <__divsf3_pse+0x8e>
    504a:	fe 2f       	mov	r31, r30
    504c:	27 d0       	rcall	.+78     	; 0x509c <__divsf3_pse+0x8e>
    504e:	66 0f       	add	r22, r22
    5050:	77 1f       	adc	r23, r23
    5052:	88 1f       	adc	r24, r24
    5054:	bb 1f       	adc	r27, r27
    5056:	26 17       	cp	r18, r22
    5058:	37 07       	cpc	r19, r23
    505a:	48 07       	cpc	r20, r24
    505c:	ab 07       	cpc	r26, r27
    505e:	b0 e8       	ldi	r27, 0x80	; 128
    5060:	09 f0       	breq	.+2      	; 0x5064 <__divsf3_pse+0x56>
    5062:	bb 0b       	sbc	r27, r27
    5064:	80 2d       	mov	r24, r0
    5066:	bf 01       	movw	r22, r30
    5068:	ff 27       	eor	r31, r31
    506a:	93 58       	subi	r25, 0x83	; 131
    506c:	5f 4f       	sbci	r21, 0xFF	; 255
    506e:	2a f0       	brmi	.+10     	; 0x507a <__divsf3_pse+0x6c>
    5070:	9e 3f       	cpi	r25, 0xFE	; 254
    5072:	51 05       	cpc	r21, r1
    5074:	68 f0       	brcs	.+26     	; 0x5090 <__divsf3_pse+0x82>
    5076:	02 c1       	rjmp	.+516    	; 0x527c <__fp_inf>
    5078:	aa c1       	rjmp	.+852    	; 0x53ce <__fp_szero>
    507a:	5f 3f       	cpi	r21, 0xFF	; 255
    507c:	ec f3       	brlt	.-6      	; 0x5078 <__divsf3_pse+0x6a>
    507e:	98 3e       	cpi	r25, 0xE8	; 232
    5080:	dc f3       	brlt	.-10     	; 0x5078 <__divsf3_pse+0x6a>
    5082:	86 95       	lsr	r24
    5084:	77 95       	ror	r23
    5086:	67 95       	ror	r22
    5088:	b7 95       	ror	r27
    508a:	f7 95       	ror	r31
    508c:	9f 5f       	subi	r25, 0xFF	; 255
    508e:	c9 f7       	brne	.-14     	; 0x5082 <__divsf3_pse+0x74>
    5090:	88 0f       	add	r24, r24
    5092:	91 1d       	adc	r25, r1
    5094:	96 95       	lsr	r25
    5096:	87 95       	ror	r24
    5098:	97 f9       	bld	r25, 7
    509a:	08 95       	ret
    509c:	e1 e0       	ldi	r30, 0x01	; 1
    509e:	66 0f       	add	r22, r22
    50a0:	77 1f       	adc	r23, r23
    50a2:	88 1f       	adc	r24, r24
    50a4:	bb 1f       	adc	r27, r27
    50a6:	62 17       	cp	r22, r18
    50a8:	73 07       	cpc	r23, r19
    50aa:	84 07       	cpc	r24, r20
    50ac:	ba 07       	cpc	r27, r26
    50ae:	20 f0       	brcs	.+8      	; 0x50b8 <__divsf3_pse+0xaa>
    50b0:	62 1b       	sub	r22, r18
    50b2:	73 0b       	sbc	r23, r19
    50b4:	84 0b       	sbc	r24, r20
    50b6:	ba 0b       	sbc	r27, r26
    50b8:	ee 1f       	adc	r30, r30
    50ba:	88 f7       	brcc	.-30     	; 0x509e <__divsf3_pse+0x90>
    50bc:	e0 95       	com	r30
    50be:	08 95       	ret
    50c0:	19 f4       	brne	.+6      	; 0x50c8 <__divsf3_pse+0xba>
    50c2:	0e f0       	brts	.+2      	; 0x50c6 <__divsf3_pse+0xb8>
    50c4:	db c0       	rjmp	.+438    	; 0x527c <__fp_inf>
    50c6:	82 c1       	rjmp	.+772    	; 0x53cc <__fp_zero>
    50c8:	df c0       	rjmp	.+446    	; 0x5288 <__fp_nan>

000050ca <exp>:
    50ca:	66 d1       	rcall	.+716    	; 0x5398 <__fp_splitA>
    50cc:	c8 f3       	brcs	.-14     	; 0x50c0 <__divsf3_pse+0xb2>
    50ce:	96 38       	cpi	r25, 0x86	; 134
    50d0:	c0 f7       	brcc	.-16     	; 0x50c2 <__divsf3_pse+0xb4>
    50d2:	07 f8       	bld	r0, 7
    50d4:	0f 92       	push	r0
    50d6:	e8 94       	clt
    50d8:	2b e3       	ldi	r18, 0x3B	; 59
    50da:	3a ea       	ldi	r19, 0xAA	; 170
    50dc:	48 eb       	ldi	r20, 0xB8	; 184
    50de:	5f e7       	ldi	r21, 0x7F	; 127
    50e0:	43 d2       	rcall	.+1158   	; 0x5568 <__mulsf3_pse>
    50e2:	0f 92       	push	r0
    50e4:	0f 92       	push	r0
    50e6:	0f 92       	push	r0
    50e8:	4d b7       	in	r20, 0x3d	; 61
    50ea:	5e b7       	in	r21, 0x3e	; 62
    50ec:	0f 92       	push	r0
    50ee:	fb d1       	rcall	.+1014   	; 0x54e6 <modf>
    50f0:	e5 ec       	ldi	r30, 0xC5	; 197
    50f2:	f0 e0       	ldi	r31, 0x00	; 0
    50f4:	cc d0       	rcall	.+408    	; 0x528e <__fp_powser>
    50f6:	4f 91       	pop	r20
    50f8:	5f 91       	pop	r21
    50fa:	ef 91       	pop	r30
    50fc:	ff 91       	pop	r31
    50fe:	e5 95       	asr	r30
    5100:	ee 1f       	adc	r30, r30
    5102:	ff 1f       	adc	r31, r31
    5104:	49 f0       	breq	.+18     	; 0x5118 <exp+0x4e>
    5106:	fe 57       	subi	r31, 0x7E	; 126
    5108:	e0 68       	ori	r30, 0x80	; 128
    510a:	44 27       	eor	r20, r20
    510c:	ee 0f       	add	r30, r30
    510e:	44 1f       	adc	r20, r20
    5110:	fa 95       	dec	r31
    5112:	e1 f7       	brne	.-8      	; 0x510c <exp+0x42>
    5114:	41 95       	neg	r20
    5116:	55 0b       	sbc	r21, r21
    5118:	6d d1       	rcall	.+730    	; 0x53f4 <ldexp>
    511a:	0f 90       	pop	r0
    511c:	07 fe       	sbrs	r0, 7
    511e:	61 c1       	rjmp	.+706    	; 0x53e2 <inverse>
    5120:	08 95       	ret

00005122 <__fixsfsi>:
    5122:	04 d0       	rcall	.+8      	; 0x512c <__fixunssfsi>
    5124:	68 94       	set
    5126:	b1 11       	cpse	r27, r1
    5128:	52 c1       	rjmp	.+676    	; 0x53ce <__fp_szero>
    512a:	08 95       	ret

0000512c <__fixunssfsi>:
    512c:	35 d1       	rcall	.+618    	; 0x5398 <__fp_splitA>
    512e:	88 f0       	brcs	.+34     	; 0x5152 <__fixunssfsi+0x26>
    5130:	9f 57       	subi	r25, 0x7F	; 127
    5132:	90 f0       	brcs	.+36     	; 0x5158 <__fixunssfsi+0x2c>
    5134:	b9 2f       	mov	r27, r25
    5136:	99 27       	eor	r25, r25
    5138:	b7 51       	subi	r27, 0x17	; 23
    513a:	a0 f0       	brcs	.+40     	; 0x5164 <__fixunssfsi+0x38>
    513c:	d1 f0       	breq	.+52     	; 0x5172 <__fixunssfsi+0x46>
    513e:	66 0f       	add	r22, r22
    5140:	77 1f       	adc	r23, r23
    5142:	88 1f       	adc	r24, r24
    5144:	99 1f       	adc	r25, r25
    5146:	1a f0       	brmi	.+6      	; 0x514e <__fixunssfsi+0x22>
    5148:	ba 95       	dec	r27
    514a:	c9 f7       	brne	.-14     	; 0x513e <__fixunssfsi+0x12>
    514c:	12 c0       	rjmp	.+36     	; 0x5172 <__fixunssfsi+0x46>
    514e:	b1 30       	cpi	r27, 0x01	; 1
    5150:	81 f0       	breq	.+32     	; 0x5172 <__fixunssfsi+0x46>
    5152:	3c d1       	rcall	.+632    	; 0x53cc <__fp_zero>
    5154:	b1 e0       	ldi	r27, 0x01	; 1
    5156:	08 95       	ret
    5158:	39 c1       	rjmp	.+626    	; 0x53cc <__fp_zero>
    515a:	67 2f       	mov	r22, r23
    515c:	78 2f       	mov	r23, r24
    515e:	88 27       	eor	r24, r24
    5160:	b8 5f       	subi	r27, 0xF8	; 248
    5162:	39 f0       	breq	.+14     	; 0x5172 <__fixunssfsi+0x46>
    5164:	b9 3f       	cpi	r27, 0xF9	; 249
    5166:	cc f3       	brlt	.-14     	; 0x515a <__fixunssfsi+0x2e>
    5168:	86 95       	lsr	r24
    516a:	77 95       	ror	r23
    516c:	67 95       	ror	r22
    516e:	b3 95       	inc	r27
    5170:	d9 f7       	brne	.-10     	; 0x5168 <__fixunssfsi+0x3c>
    5172:	3e f4       	brtc	.+14     	; 0x5182 <__fixunssfsi+0x56>
    5174:	90 95       	com	r25
    5176:	80 95       	com	r24
    5178:	70 95       	com	r23
    517a:	61 95       	neg	r22
    517c:	7f 4f       	sbci	r23, 0xFF	; 255
    517e:	8f 4f       	sbci	r24, 0xFF	; 255
    5180:	9f 4f       	sbci	r25, 0xFF	; 255
    5182:	08 95       	ret

00005184 <__floatunsisf>:
    5184:	e8 94       	clt
    5186:	09 c0       	rjmp	.+18     	; 0x519a <__floatsisf+0x12>

00005188 <__floatsisf>:
    5188:	97 fb       	bst	r25, 7
    518a:	3e f4       	brtc	.+14     	; 0x519a <__floatsisf+0x12>
    518c:	90 95       	com	r25
    518e:	80 95       	com	r24
    5190:	70 95       	com	r23
    5192:	61 95       	neg	r22
    5194:	7f 4f       	sbci	r23, 0xFF	; 255
    5196:	8f 4f       	sbci	r24, 0xFF	; 255
    5198:	9f 4f       	sbci	r25, 0xFF	; 255
    519a:	99 23       	and	r25, r25
    519c:	a9 f0       	breq	.+42     	; 0x51c8 <__floatsisf+0x40>
    519e:	f9 2f       	mov	r31, r25
    51a0:	96 e9       	ldi	r25, 0x96	; 150
    51a2:	bb 27       	eor	r27, r27
    51a4:	93 95       	inc	r25
    51a6:	f6 95       	lsr	r31
    51a8:	87 95       	ror	r24
    51aa:	77 95       	ror	r23
    51ac:	67 95       	ror	r22
    51ae:	b7 95       	ror	r27
    51b0:	f1 11       	cpse	r31, r1
    51b2:	f8 cf       	rjmp	.-16     	; 0x51a4 <__floatsisf+0x1c>
    51b4:	fa f4       	brpl	.+62     	; 0x51f4 <__floatsisf+0x6c>
    51b6:	bb 0f       	add	r27, r27
    51b8:	11 f4       	brne	.+4      	; 0x51be <__floatsisf+0x36>
    51ba:	60 ff       	sbrs	r22, 0
    51bc:	1b c0       	rjmp	.+54     	; 0x51f4 <__floatsisf+0x6c>
    51be:	6f 5f       	subi	r22, 0xFF	; 255
    51c0:	7f 4f       	sbci	r23, 0xFF	; 255
    51c2:	8f 4f       	sbci	r24, 0xFF	; 255
    51c4:	9f 4f       	sbci	r25, 0xFF	; 255
    51c6:	16 c0       	rjmp	.+44     	; 0x51f4 <__floatsisf+0x6c>
    51c8:	88 23       	and	r24, r24
    51ca:	11 f0       	breq	.+4      	; 0x51d0 <__floatsisf+0x48>
    51cc:	96 e9       	ldi	r25, 0x96	; 150
    51ce:	11 c0       	rjmp	.+34     	; 0x51f2 <__floatsisf+0x6a>
    51d0:	77 23       	and	r23, r23
    51d2:	21 f0       	breq	.+8      	; 0x51dc <__floatsisf+0x54>
    51d4:	9e e8       	ldi	r25, 0x8E	; 142
    51d6:	87 2f       	mov	r24, r23
    51d8:	76 2f       	mov	r23, r22
    51da:	05 c0       	rjmp	.+10     	; 0x51e6 <__floatsisf+0x5e>
    51dc:	66 23       	and	r22, r22
    51de:	71 f0       	breq	.+28     	; 0x51fc <__floatsisf+0x74>
    51e0:	96 e8       	ldi	r25, 0x86	; 134
    51e2:	86 2f       	mov	r24, r22
    51e4:	70 e0       	ldi	r23, 0x00	; 0
    51e6:	60 e0       	ldi	r22, 0x00	; 0
    51e8:	2a f0       	brmi	.+10     	; 0x51f4 <__floatsisf+0x6c>
    51ea:	9a 95       	dec	r25
    51ec:	66 0f       	add	r22, r22
    51ee:	77 1f       	adc	r23, r23
    51f0:	88 1f       	adc	r24, r24
    51f2:	da f7       	brpl	.-10     	; 0x51ea <__floatsisf+0x62>
    51f4:	88 0f       	add	r24, r24
    51f6:	96 95       	lsr	r25
    51f8:	87 95       	ror	r24
    51fa:	97 f9       	bld	r25, 7
    51fc:	08 95       	ret

000051fe <__fp_arccos>:
    51fe:	df 93       	push	r29
    5200:	cf 93       	push	r28
    5202:	1f 93       	push	r17
    5204:	0f 93       	push	r16
    5206:	8b 01       	movw	r16, r22
    5208:	ec 01       	movw	r28, r24
    520a:	ed ee       	ldi	r30, 0xED	; 237
    520c:	f0 e0       	ldi	r31, 0x00	; 0
    520e:	3f d0       	rcall	.+126    	; 0x528e <__fp_powser>
    5210:	99 d0       	rcall	.+306    	; 0x5344 <__fp_round>
    5212:	98 01       	movw	r18, r16
    5214:	ae 01       	movw	r20, r28
    5216:	8b 01       	movw	r16, r22
    5218:	ec 01       	movw	r28, r24
    521a:	60 e0       	ldi	r22, 0x00	; 0
    521c:	70 e0       	ldi	r23, 0x00	; 0
    521e:	80 e8       	ldi	r24, 0x80	; 128
    5220:	9f e3       	ldi	r25, 0x3F	; 63
    5222:	52 de       	rcall	.-860    	; 0x4ec8 <__subsf3>
    5224:	00 d2       	rcall	.+1024   	; 0x5626 <sqrt>
    5226:	98 01       	movw	r18, r16
    5228:	ae 01       	movw	r20, r28
    522a:	0f 91       	pop	r16
    522c:	1f 91       	pop	r17
    522e:	cf 91       	pop	r28
    5230:	df 91       	pop	r29
    5232:	98 c1       	rjmp	.+816    	; 0x5564 <__mulsf3x>

00005234 <__fp_cmp>:
    5234:	99 0f       	add	r25, r25
    5236:	00 08       	sbc	r0, r0
    5238:	55 0f       	add	r21, r21
    523a:	aa 0b       	sbc	r26, r26
    523c:	e0 e8       	ldi	r30, 0x80	; 128
    523e:	fe ef       	ldi	r31, 0xFE	; 254
    5240:	16 16       	cp	r1, r22
    5242:	17 06       	cpc	r1, r23
    5244:	e8 07       	cpc	r30, r24
    5246:	f9 07       	cpc	r31, r25
    5248:	c0 f0       	brcs	.+48     	; 0x527a <__fp_cmp+0x46>
    524a:	12 16       	cp	r1, r18
    524c:	13 06       	cpc	r1, r19
    524e:	e4 07       	cpc	r30, r20
    5250:	f5 07       	cpc	r31, r21
    5252:	98 f0       	brcs	.+38     	; 0x527a <__fp_cmp+0x46>
    5254:	62 1b       	sub	r22, r18
    5256:	73 0b       	sbc	r23, r19
    5258:	84 0b       	sbc	r24, r20
    525a:	95 0b       	sbc	r25, r21
    525c:	39 f4       	brne	.+14     	; 0x526c <__fp_cmp+0x38>
    525e:	0a 26       	eor	r0, r26
    5260:	61 f0       	breq	.+24     	; 0x527a <__fp_cmp+0x46>
    5262:	23 2b       	or	r18, r19
    5264:	24 2b       	or	r18, r20
    5266:	25 2b       	or	r18, r21
    5268:	21 f4       	brne	.+8      	; 0x5272 <__fp_cmp+0x3e>
    526a:	08 95       	ret
    526c:	0a 26       	eor	r0, r26
    526e:	09 f4       	brne	.+2      	; 0x5272 <__fp_cmp+0x3e>
    5270:	a1 40       	sbci	r26, 0x01	; 1
    5272:	a6 95       	lsr	r26
    5274:	8f ef       	ldi	r24, 0xFF	; 255
    5276:	81 1d       	adc	r24, r1
    5278:	81 1d       	adc	r24, r1
    527a:	08 95       	ret

0000527c <__fp_inf>:
    527c:	97 f9       	bld	r25, 7
    527e:	9f 67       	ori	r25, 0x7F	; 127
    5280:	80 e8       	ldi	r24, 0x80	; 128
    5282:	70 e0       	ldi	r23, 0x00	; 0
    5284:	60 e0       	ldi	r22, 0x00	; 0
    5286:	08 95       	ret

00005288 <__fp_nan>:
    5288:	9f ef       	ldi	r25, 0xFF	; 255
    528a:	80 ec       	ldi	r24, 0xC0	; 192
    528c:	08 95       	ret

0000528e <__fp_powser>:
    528e:	df 93       	push	r29
    5290:	cf 93       	push	r28
    5292:	1f 93       	push	r17
    5294:	0f 93       	push	r16
    5296:	ff 92       	push	r15
    5298:	ef 92       	push	r14
    529a:	df 92       	push	r13
    529c:	7b 01       	movw	r14, r22
    529e:	8c 01       	movw	r16, r24
    52a0:	68 94       	set
    52a2:	05 c0       	rjmp	.+10     	; 0x52ae <__fp_powser+0x20>
    52a4:	da 2e       	mov	r13, r26
    52a6:	ef 01       	movw	r28, r30
    52a8:	5d d1       	rcall	.+698    	; 0x5564 <__mulsf3x>
    52aa:	fe 01       	movw	r30, r28
    52ac:	e8 94       	clt
    52ae:	a5 91       	lpm	r26, Z+
    52b0:	25 91       	lpm	r18, Z+
    52b2:	35 91       	lpm	r19, Z+
    52b4:	45 91       	lpm	r20, Z+
    52b6:	55 91       	lpm	r21, Z+
    52b8:	ae f3       	brts	.-22     	; 0x52a4 <__fp_powser+0x16>
    52ba:	ef 01       	movw	r28, r30
    52bc:	17 de       	rcall	.-978    	; 0x4eec <__addsf3x>
    52be:	fe 01       	movw	r30, r28
    52c0:	97 01       	movw	r18, r14
    52c2:	a8 01       	movw	r20, r16
    52c4:	da 94       	dec	r13
    52c6:	79 f7       	brne	.-34     	; 0x52a6 <__fp_powser+0x18>
    52c8:	df 90       	pop	r13
    52ca:	ef 90       	pop	r14
    52cc:	ff 90       	pop	r15
    52ce:	0f 91       	pop	r16
    52d0:	1f 91       	pop	r17
    52d2:	cf 91       	pop	r28
    52d4:	df 91       	pop	r29
    52d6:	08 95       	ret

000052d8 <__fp_pscA>:
    52d8:	00 24       	eor	r0, r0
    52da:	0a 94       	dec	r0
    52dc:	16 16       	cp	r1, r22
    52de:	17 06       	cpc	r1, r23
    52e0:	18 06       	cpc	r1, r24
    52e2:	09 06       	cpc	r0, r25
    52e4:	08 95       	ret

000052e6 <__fp_pscB>:
    52e6:	00 24       	eor	r0, r0
    52e8:	0a 94       	dec	r0
    52ea:	12 16       	cp	r1, r18
    52ec:	13 06       	cpc	r1, r19
    52ee:	14 06       	cpc	r1, r20
    52f0:	05 06       	cpc	r0, r21
    52f2:	08 95       	ret
    52f4:	c9 cf       	rjmp	.-110    	; 0x5288 <__fp_nan>

000052f6 <__fp_rempio2>:
    52f6:	50 d0       	rcall	.+160    	; 0x5398 <__fp_splitA>
    52f8:	e8 f3       	brcs	.-6      	; 0x52f4 <__fp_pscB+0xe>
    52fa:	e8 94       	clt
    52fc:	e0 e0       	ldi	r30, 0x00	; 0
    52fe:	bb 27       	eor	r27, r27
    5300:	9f 57       	subi	r25, 0x7F	; 127
    5302:	f0 f0       	brcs	.+60     	; 0x5340 <__fp_rempio2+0x4a>
    5304:	2a ed       	ldi	r18, 0xDA	; 218
    5306:	3f e0       	ldi	r19, 0x0F	; 15
    5308:	49 ec       	ldi	r20, 0xC9	; 201
    530a:	06 c0       	rjmp	.+12     	; 0x5318 <__fp_rempio2+0x22>
    530c:	ee 0f       	add	r30, r30
    530e:	bb 0f       	add	r27, r27
    5310:	66 1f       	adc	r22, r22
    5312:	77 1f       	adc	r23, r23
    5314:	88 1f       	adc	r24, r24
    5316:	28 f0       	brcs	.+10     	; 0x5322 <__fp_rempio2+0x2c>
    5318:	b2 3a       	cpi	r27, 0xA2	; 162
    531a:	62 07       	cpc	r22, r18
    531c:	73 07       	cpc	r23, r19
    531e:	84 07       	cpc	r24, r20
    5320:	28 f0       	brcs	.+10     	; 0x532c <__fp_rempio2+0x36>
    5322:	b2 5a       	subi	r27, 0xA2	; 162
    5324:	62 0b       	sbc	r22, r18
    5326:	73 0b       	sbc	r23, r19
    5328:	84 0b       	sbc	r24, r20
    532a:	e3 95       	inc	r30
    532c:	9a 95       	dec	r25
    532e:	72 f7       	brpl	.-36     	; 0x530c <__fp_rempio2+0x16>
    5330:	80 38       	cpi	r24, 0x80	; 128
    5332:	30 f4       	brcc	.+12     	; 0x5340 <__fp_rempio2+0x4a>
    5334:	9a 95       	dec	r25
    5336:	bb 0f       	add	r27, r27
    5338:	66 1f       	adc	r22, r22
    533a:	77 1f       	adc	r23, r23
    533c:	88 1f       	adc	r24, r24
    533e:	d2 f7       	brpl	.-12     	; 0x5334 <__fp_rempio2+0x3e>
    5340:	90 48       	sbci	r25, 0x80	; 128
    5342:	b4 c1       	rjmp	.+872    	; 0x56ac <__fp_mpack_finite>

00005344 <__fp_round>:
    5344:	09 2e       	mov	r0, r25
    5346:	03 94       	inc	r0
    5348:	00 0c       	add	r0, r0
    534a:	11 f4       	brne	.+4      	; 0x5350 <__fp_round+0xc>
    534c:	88 23       	and	r24, r24
    534e:	52 f0       	brmi	.+20     	; 0x5364 <__fp_round+0x20>
    5350:	bb 0f       	add	r27, r27
    5352:	40 f4       	brcc	.+16     	; 0x5364 <__fp_round+0x20>
    5354:	bf 2b       	or	r27, r31
    5356:	11 f4       	brne	.+4      	; 0x535c <__fp_round+0x18>
    5358:	60 ff       	sbrs	r22, 0
    535a:	04 c0       	rjmp	.+8      	; 0x5364 <__fp_round+0x20>
    535c:	6f 5f       	subi	r22, 0xFF	; 255
    535e:	7f 4f       	sbci	r23, 0xFF	; 255
    5360:	8f 4f       	sbci	r24, 0xFF	; 255
    5362:	9f 4f       	sbci	r25, 0xFF	; 255
    5364:	08 95       	ret

00005366 <__fp_sinus>:
    5366:	ef 93       	push	r30
    5368:	e0 ff       	sbrs	r30, 0
    536a:	06 c0       	rjmp	.+12     	; 0x5378 <__fp_sinus+0x12>
    536c:	a2 ea       	ldi	r26, 0xA2	; 162
    536e:	2a ed       	ldi	r18, 0xDA	; 218
    5370:	3f e0       	ldi	r19, 0x0F	; 15
    5372:	49 ec       	ldi	r20, 0xC9	; 201
    5374:	5f eb       	ldi	r21, 0xBF	; 191
    5376:	ba dd       	rcall	.-1164   	; 0x4eec <__addsf3x>
    5378:	e5 df       	rcall	.-54     	; 0x5344 <__fp_round>
    537a:	0f 90       	pop	r0
    537c:	03 94       	inc	r0
    537e:	01 fc       	sbrc	r0, 1
    5380:	90 58       	subi	r25, 0x80	; 128
    5382:	e5 e1       	ldi	r30, 0x15	; 21
    5384:	f1 e0       	ldi	r31, 0x01	; 1
    5386:	a5 c1       	rjmp	.+842    	; 0x56d2 <__fp_powsodd>

00005388 <__fp_split3>:
    5388:	57 fd       	sbrc	r21, 7
    538a:	90 58       	subi	r25, 0x80	; 128
    538c:	44 0f       	add	r20, r20
    538e:	55 1f       	adc	r21, r21
    5390:	59 f0       	breq	.+22     	; 0x53a8 <__fp_splitA+0x10>
    5392:	5f 3f       	cpi	r21, 0xFF	; 255
    5394:	71 f0       	breq	.+28     	; 0x53b2 <__fp_splitA+0x1a>
    5396:	47 95       	ror	r20

00005398 <__fp_splitA>:
    5398:	88 0f       	add	r24, r24
    539a:	97 fb       	bst	r25, 7
    539c:	99 1f       	adc	r25, r25
    539e:	61 f0       	breq	.+24     	; 0x53b8 <__fp_splitA+0x20>
    53a0:	9f 3f       	cpi	r25, 0xFF	; 255
    53a2:	79 f0       	breq	.+30     	; 0x53c2 <__fp_splitA+0x2a>
    53a4:	87 95       	ror	r24
    53a6:	08 95       	ret
    53a8:	12 16       	cp	r1, r18
    53aa:	13 06       	cpc	r1, r19
    53ac:	14 06       	cpc	r1, r20
    53ae:	55 1f       	adc	r21, r21
    53b0:	f2 cf       	rjmp	.-28     	; 0x5396 <__fp_split3+0xe>
    53b2:	46 95       	lsr	r20
    53b4:	f1 df       	rcall	.-30     	; 0x5398 <__fp_splitA>
    53b6:	08 c0       	rjmp	.+16     	; 0x53c8 <__fp_splitA+0x30>
    53b8:	16 16       	cp	r1, r22
    53ba:	17 06       	cpc	r1, r23
    53bc:	18 06       	cpc	r1, r24
    53be:	99 1f       	adc	r25, r25
    53c0:	f1 cf       	rjmp	.-30     	; 0x53a4 <__fp_splitA+0xc>
    53c2:	86 95       	lsr	r24
    53c4:	71 05       	cpc	r23, r1
    53c6:	61 05       	cpc	r22, r1
    53c8:	08 94       	sec
    53ca:	08 95       	ret

000053cc <__fp_zero>:
    53cc:	e8 94       	clt

000053ce <__fp_szero>:
    53ce:	bb 27       	eor	r27, r27
    53d0:	66 27       	eor	r22, r22
    53d2:	77 27       	eor	r23, r23
    53d4:	cb 01       	movw	r24, r22
    53d6:	97 f9       	bld	r25, 7
    53d8:	08 95       	ret

000053da <__gesf2>:
    53da:	2c df       	rcall	.-424    	; 0x5234 <__fp_cmp>
    53dc:	08 f4       	brcc	.+2      	; 0x53e0 <__gesf2+0x6>
    53de:	8f ef       	ldi	r24, 0xFF	; 255
    53e0:	08 95       	ret

000053e2 <inverse>:
    53e2:	9b 01       	movw	r18, r22
    53e4:	ac 01       	movw	r20, r24
    53e6:	60 e0       	ldi	r22, 0x00	; 0
    53e8:	70 e0       	ldi	r23, 0x00	; 0
    53ea:	80 e8       	ldi	r24, 0x80	; 128
    53ec:	9f e3       	ldi	r25, 0x3F	; 63
    53ee:	00 ce       	rjmp	.-1024   	; 0x4ff0 <__divsf3>
    53f0:	45 cf       	rjmp	.-374    	; 0x527c <__fp_inf>
    53f2:	5a c1       	rjmp	.+692    	; 0x56a8 <__fp_mpack>

000053f4 <ldexp>:
    53f4:	d1 df       	rcall	.-94     	; 0x5398 <__fp_splitA>
    53f6:	e8 f3       	brcs	.-6      	; 0x53f2 <inverse+0x10>
    53f8:	99 23       	and	r25, r25
    53fa:	d9 f3       	breq	.-10     	; 0x53f2 <inverse+0x10>
    53fc:	94 0f       	add	r25, r20
    53fe:	51 1d       	adc	r21, r1
    5400:	bb f3       	brvs	.-18     	; 0x53f0 <inverse+0xe>
    5402:	91 50       	subi	r25, 0x01	; 1
    5404:	50 40       	sbci	r21, 0x00	; 0
    5406:	94 f0       	brlt	.+36     	; 0x542c <ldexp+0x38>
    5408:	59 f0       	breq	.+22     	; 0x5420 <ldexp+0x2c>
    540a:	88 23       	and	r24, r24
    540c:	32 f0       	brmi	.+12     	; 0x541a <ldexp+0x26>
    540e:	66 0f       	add	r22, r22
    5410:	77 1f       	adc	r23, r23
    5412:	88 1f       	adc	r24, r24
    5414:	91 50       	subi	r25, 0x01	; 1
    5416:	50 40       	sbci	r21, 0x00	; 0
    5418:	c1 f7       	brne	.-16     	; 0x540a <ldexp+0x16>
    541a:	9e 3f       	cpi	r25, 0xFE	; 254
    541c:	51 05       	cpc	r21, r1
    541e:	44 f7       	brge	.-48     	; 0x53f0 <inverse+0xe>
    5420:	88 0f       	add	r24, r24
    5422:	91 1d       	adc	r25, r1
    5424:	96 95       	lsr	r25
    5426:	87 95       	ror	r24
    5428:	97 f9       	bld	r25, 7
    542a:	08 95       	ret
    542c:	5f 3f       	cpi	r21, 0xFF	; 255
    542e:	ac f0       	brlt	.+42     	; 0x545a <ldexp+0x66>
    5430:	98 3e       	cpi	r25, 0xE8	; 232
    5432:	9c f0       	brlt	.+38     	; 0x545a <ldexp+0x66>
    5434:	bb 27       	eor	r27, r27
    5436:	86 95       	lsr	r24
    5438:	77 95       	ror	r23
    543a:	67 95       	ror	r22
    543c:	b7 95       	ror	r27
    543e:	08 f4       	brcc	.+2      	; 0x5442 <ldexp+0x4e>
    5440:	b1 60       	ori	r27, 0x01	; 1
    5442:	93 95       	inc	r25
    5444:	c1 f7       	brne	.-16     	; 0x5436 <ldexp+0x42>
    5446:	bb 0f       	add	r27, r27
    5448:	58 f7       	brcc	.-42     	; 0x5420 <ldexp+0x2c>
    544a:	11 f4       	brne	.+4      	; 0x5450 <ldexp+0x5c>
    544c:	60 ff       	sbrs	r22, 0
    544e:	e8 cf       	rjmp	.-48     	; 0x5420 <ldexp+0x2c>
    5450:	6f 5f       	subi	r22, 0xFF	; 255
    5452:	7f 4f       	sbci	r23, 0xFF	; 255
    5454:	8f 4f       	sbci	r24, 0xFF	; 255
    5456:	9f 4f       	sbci	r25, 0xFF	; 255
    5458:	e3 cf       	rjmp	.-58     	; 0x5420 <ldexp+0x2c>
    545a:	b9 cf       	rjmp	.-142    	; 0x53ce <__fp_szero>
    545c:	0e f0       	brts	.+2      	; 0x5460 <ldexp+0x6c>
    545e:	24 c1       	rjmp	.+584    	; 0x56a8 <__fp_mpack>
    5460:	13 cf       	rjmp	.-474    	; 0x5288 <__fp_nan>
    5462:	68 94       	set
    5464:	0b cf       	rjmp	.-490    	; 0x527c <__fp_inf>

00005466 <log>:
    5466:	98 df       	rcall	.-208    	; 0x5398 <__fp_splitA>
    5468:	c8 f3       	brcs	.-14     	; 0x545c <ldexp+0x68>
    546a:	99 23       	and	r25, r25
    546c:	d1 f3       	breq	.-12     	; 0x5462 <ldexp+0x6e>
    546e:	c6 f3       	brts	.-16     	; 0x5460 <ldexp+0x6c>
    5470:	df 93       	push	r29
    5472:	cf 93       	push	r28
    5474:	1f 93       	push	r17
    5476:	0f 93       	push	r16
    5478:	ff 92       	push	r15
    547a:	c9 2f       	mov	r28, r25
    547c:	dd 27       	eor	r29, r29
    547e:	88 23       	and	r24, r24
    5480:	2a f0       	brmi	.+10     	; 0x548c <log+0x26>
    5482:	21 97       	sbiw	r28, 0x01	; 1
    5484:	66 0f       	add	r22, r22
    5486:	77 1f       	adc	r23, r23
    5488:	88 1f       	adc	r24, r24
    548a:	da f7       	brpl	.-10     	; 0x5482 <log+0x1c>
    548c:	20 e0       	ldi	r18, 0x00	; 0
    548e:	30 e0       	ldi	r19, 0x00	; 0
    5490:	40 e8       	ldi	r20, 0x80	; 128
    5492:	5f eb       	ldi	r21, 0xBF	; 191
    5494:	9f e3       	ldi	r25, 0x3F	; 63
    5496:	88 39       	cpi	r24, 0x98	; 152
    5498:	20 f0       	brcs	.+8      	; 0x54a2 <log+0x3c>
    549a:	80 3e       	cpi	r24, 0xE0	; 224
    549c:	30 f0       	brcs	.+12     	; 0x54aa <log+0x44>
    549e:	21 96       	adiw	r28, 0x01	; 1
    54a0:	8f 77       	andi	r24, 0x7F	; 127
    54a2:	13 dd       	rcall	.-1498   	; 0x4eca <__addsf3>
    54a4:	e3 e3       	ldi	r30, 0x33	; 51
    54a6:	f1 e0       	ldi	r31, 0x01	; 1
    54a8:	03 c0       	rjmp	.+6      	; 0x54b0 <log+0x4a>
    54aa:	0f dd       	rcall	.-1506   	; 0x4eca <__addsf3>
    54ac:	e0 e6       	ldi	r30, 0x60	; 96
    54ae:	f1 e0       	ldi	r31, 0x01	; 1
    54b0:	ee de       	rcall	.-548    	; 0x528e <__fp_powser>
    54b2:	8b 01       	movw	r16, r22
    54b4:	be 01       	movw	r22, r28
    54b6:	ec 01       	movw	r28, r24
    54b8:	fb 2e       	mov	r15, r27
    54ba:	6f 57       	subi	r22, 0x7F	; 127
    54bc:	71 09       	sbc	r23, r1
    54be:	75 95       	asr	r23
    54c0:	77 1f       	adc	r23, r23
    54c2:	88 0b       	sbc	r24, r24
    54c4:	99 0b       	sbc	r25, r25
    54c6:	60 de       	rcall	.-832    	; 0x5188 <__floatsisf>
    54c8:	28 e1       	ldi	r18, 0x18	; 24
    54ca:	32 e7       	ldi	r19, 0x72	; 114
    54cc:	41 e3       	ldi	r20, 0x31	; 49
    54ce:	5f e3       	ldi	r21, 0x3F	; 63
    54d0:	49 d0       	rcall	.+146    	; 0x5564 <__mulsf3x>
    54d2:	af 2d       	mov	r26, r15
    54d4:	98 01       	movw	r18, r16
    54d6:	ae 01       	movw	r20, r28
    54d8:	ff 90       	pop	r15
    54da:	0f 91       	pop	r16
    54dc:	1f 91       	pop	r17
    54de:	cf 91       	pop	r28
    54e0:	df 91       	pop	r29
    54e2:	04 dd       	rcall	.-1528   	; 0x4eec <__addsf3x>
    54e4:	2f cf       	rjmp	.-418    	; 0x5344 <__fp_round>

000054e6 <modf>:
    54e6:	fa 01       	movw	r30, r20
    54e8:	dc 01       	movw	r26, r24
    54ea:	aa 0f       	add	r26, r26
    54ec:	bb 1f       	adc	r27, r27
    54ee:	9b 01       	movw	r18, r22
    54f0:	ac 01       	movw	r20, r24
    54f2:	bf 57       	subi	r27, 0x7F	; 127
    54f4:	28 f4       	brcc	.+10     	; 0x5500 <modf+0x1a>
    54f6:	22 27       	eor	r18, r18
    54f8:	33 27       	eor	r19, r19
    54fa:	44 27       	eor	r20, r20
    54fc:	50 78       	andi	r21, 0x80	; 128
    54fe:	1f c0       	rjmp	.+62     	; 0x553e <modf+0x58>
    5500:	b7 51       	subi	r27, 0x17	; 23
    5502:	88 f4       	brcc	.+34     	; 0x5526 <modf+0x40>
    5504:	ab 2f       	mov	r26, r27
    5506:	00 24       	eor	r0, r0
    5508:	46 95       	lsr	r20
    550a:	37 95       	ror	r19
    550c:	27 95       	ror	r18
    550e:	01 1c       	adc	r0, r1
    5510:	a3 95       	inc	r26
    5512:	d2 f3       	brmi	.-12     	; 0x5508 <modf+0x22>
    5514:	00 20       	and	r0, r0
    5516:	69 f0       	breq	.+26     	; 0x5532 <modf+0x4c>
    5518:	22 0f       	add	r18, r18
    551a:	33 1f       	adc	r19, r19
    551c:	44 1f       	adc	r20, r20
    551e:	b3 95       	inc	r27
    5520:	da f3       	brmi	.-10     	; 0x5518 <modf+0x32>
    5522:	0d d0       	rcall	.+26     	; 0x553e <modf+0x58>
    5524:	d1 cc       	rjmp	.-1630   	; 0x4ec8 <__subsf3>
    5526:	61 30       	cpi	r22, 0x01	; 1
    5528:	71 05       	cpc	r23, r1
    552a:	a0 e8       	ldi	r26, 0x80	; 128
    552c:	8a 07       	cpc	r24, r26
    552e:	b9 46       	sbci	r27, 0x69	; 105
    5530:	30 f4       	brcc	.+12     	; 0x553e <modf+0x58>
    5532:	9b 01       	movw	r18, r22
    5534:	ac 01       	movw	r20, r24
    5536:	66 27       	eor	r22, r22
    5538:	77 27       	eor	r23, r23
    553a:	88 27       	eor	r24, r24
    553c:	90 78       	andi	r25, 0x80	; 128
    553e:	30 96       	adiw	r30, 0x00	; 0
    5540:	21 f0       	breq	.+8      	; 0x554a <modf+0x64>
    5542:	20 83       	st	Z, r18
    5544:	31 83       	std	Z+1, r19	; 0x01
    5546:	42 83       	std	Z+2, r20	; 0x02
    5548:	53 83       	std	Z+3, r21	; 0x03
    554a:	08 95       	ret

0000554c <__mulsf3>:
    554c:	0b d0       	rcall	.+22     	; 0x5564 <__mulsf3x>
    554e:	fa ce       	rjmp	.-524    	; 0x5344 <__fp_round>
    5550:	c3 de       	rcall	.-634    	; 0x52d8 <__fp_pscA>
    5552:	28 f0       	brcs	.+10     	; 0x555e <__mulsf3+0x12>
    5554:	c8 de       	rcall	.-624    	; 0x52e6 <__fp_pscB>
    5556:	18 f0       	brcs	.+6      	; 0x555e <__mulsf3+0x12>
    5558:	95 23       	and	r25, r21
    555a:	09 f0       	breq	.+2      	; 0x555e <__mulsf3+0x12>
    555c:	8f ce       	rjmp	.-738    	; 0x527c <__fp_inf>
    555e:	94 ce       	rjmp	.-728    	; 0x5288 <__fp_nan>
    5560:	11 24       	eor	r1, r1
    5562:	35 cf       	rjmp	.-406    	; 0x53ce <__fp_szero>

00005564 <__mulsf3x>:
    5564:	11 df       	rcall	.-478    	; 0x5388 <__fp_split3>
    5566:	a0 f3       	brcs	.-24     	; 0x5550 <__mulsf3+0x4>

00005568 <__mulsf3_pse>:
    5568:	95 9f       	mul	r25, r21
    556a:	d1 f3       	breq	.-12     	; 0x5560 <__mulsf3+0x14>
    556c:	95 0f       	add	r25, r21
    556e:	50 e0       	ldi	r21, 0x00	; 0
    5570:	55 1f       	adc	r21, r21
    5572:	62 9f       	mul	r22, r18
    5574:	f0 01       	movw	r30, r0
    5576:	72 9f       	mul	r23, r18
    5578:	bb 27       	eor	r27, r27
    557a:	f0 0d       	add	r31, r0
    557c:	b1 1d       	adc	r27, r1
    557e:	63 9f       	mul	r22, r19
    5580:	aa 27       	eor	r26, r26
    5582:	f0 0d       	add	r31, r0
    5584:	b1 1d       	adc	r27, r1
    5586:	aa 1f       	adc	r26, r26
    5588:	64 9f       	mul	r22, r20
    558a:	66 27       	eor	r22, r22
    558c:	b0 0d       	add	r27, r0
    558e:	a1 1d       	adc	r26, r1
    5590:	66 1f       	adc	r22, r22
    5592:	82 9f       	mul	r24, r18
    5594:	22 27       	eor	r18, r18
    5596:	b0 0d       	add	r27, r0
    5598:	a1 1d       	adc	r26, r1
    559a:	62 1f       	adc	r22, r18
    559c:	73 9f       	mul	r23, r19
    559e:	b0 0d       	add	r27, r0
    55a0:	a1 1d       	adc	r26, r1
    55a2:	62 1f       	adc	r22, r18
    55a4:	83 9f       	mul	r24, r19
    55a6:	a0 0d       	add	r26, r0
    55a8:	61 1d       	adc	r22, r1
    55aa:	22 1f       	adc	r18, r18
    55ac:	74 9f       	mul	r23, r20
    55ae:	33 27       	eor	r19, r19
    55b0:	a0 0d       	add	r26, r0
    55b2:	61 1d       	adc	r22, r1
    55b4:	23 1f       	adc	r18, r19
    55b6:	84 9f       	mul	r24, r20
    55b8:	60 0d       	add	r22, r0
    55ba:	21 1d       	adc	r18, r1
    55bc:	82 2f       	mov	r24, r18
    55be:	76 2f       	mov	r23, r22
    55c0:	6a 2f       	mov	r22, r26
    55c2:	11 24       	eor	r1, r1
    55c4:	9f 57       	subi	r25, 0x7F	; 127
    55c6:	50 40       	sbci	r21, 0x00	; 0
    55c8:	8a f0       	brmi	.+34     	; 0x55ec <__mulsf3_pse+0x84>
    55ca:	e1 f0       	breq	.+56     	; 0x5604 <__mulsf3_pse+0x9c>
    55cc:	88 23       	and	r24, r24
    55ce:	4a f0       	brmi	.+18     	; 0x55e2 <__mulsf3_pse+0x7a>
    55d0:	ee 0f       	add	r30, r30
    55d2:	ff 1f       	adc	r31, r31
    55d4:	bb 1f       	adc	r27, r27
    55d6:	66 1f       	adc	r22, r22
    55d8:	77 1f       	adc	r23, r23
    55da:	88 1f       	adc	r24, r24
    55dc:	91 50       	subi	r25, 0x01	; 1
    55de:	50 40       	sbci	r21, 0x00	; 0
    55e0:	a9 f7       	brne	.-22     	; 0x55cc <__mulsf3_pse+0x64>
    55e2:	9e 3f       	cpi	r25, 0xFE	; 254
    55e4:	51 05       	cpc	r21, r1
    55e6:	70 f0       	brcs	.+28     	; 0x5604 <__mulsf3_pse+0x9c>
    55e8:	49 ce       	rjmp	.-878    	; 0x527c <__fp_inf>
    55ea:	f1 ce       	rjmp	.-542    	; 0x53ce <__fp_szero>
    55ec:	5f 3f       	cpi	r21, 0xFF	; 255
    55ee:	ec f3       	brlt	.-6      	; 0x55ea <__mulsf3_pse+0x82>
    55f0:	98 3e       	cpi	r25, 0xE8	; 232
    55f2:	dc f3       	brlt	.-10     	; 0x55ea <__mulsf3_pse+0x82>
    55f4:	86 95       	lsr	r24
    55f6:	77 95       	ror	r23
    55f8:	67 95       	ror	r22
    55fa:	b7 95       	ror	r27
    55fc:	f7 95       	ror	r31
    55fe:	e7 95       	ror	r30
    5600:	9f 5f       	subi	r25, 0xFF	; 255
    5602:	c1 f7       	brne	.-16     	; 0x55f4 <__mulsf3_pse+0x8c>
    5604:	fe 2b       	or	r31, r30
    5606:	88 0f       	add	r24, r24
    5608:	91 1d       	adc	r25, r1
    560a:	96 95       	lsr	r25
    560c:	87 95       	ror	r24
    560e:	97 f9       	bld	r25, 7
    5610:	08 95       	ret

00005612 <sin>:
    5612:	9f 93       	push	r25
    5614:	70 de       	rcall	.-800    	; 0x52f6 <__fp_rempio2>
    5616:	0f 90       	pop	r0
    5618:	07 fc       	sbrc	r0, 7
    561a:	ee 5f       	subi	r30, 0xFE	; 254
    561c:	a4 ce       	rjmp	.-696    	; 0x5366 <__fp_sinus>
    561e:	11 f4       	brne	.+4      	; 0x5624 <sin+0x12>
    5620:	0e f4       	brtc	.+2      	; 0x5624 <sin+0x12>
    5622:	32 ce       	rjmp	.-924    	; 0x5288 <__fp_nan>
    5624:	41 c0       	rjmp	.+130    	; 0x56a8 <__fp_mpack>

00005626 <sqrt>:
    5626:	b8 de       	rcall	.-656    	; 0x5398 <__fp_splitA>
    5628:	d0 f3       	brcs	.-12     	; 0x561e <sin+0xc>
    562a:	99 23       	and	r25, r25
    562c:	d9 f3       	breq	.-10     	; 0x5624 <sin+0x12>
    562e:	ce f3       	brts	.-14     	; 0x5622 <sin+0x10>
    5630:	9f 57       	subi	r25, 0x7F	; 127
    5632:	55 0b       	sbc	r21, r21
    5634:	87 ff       	sbrs	r24, 7
    5636:	46 d0       	rcall	.+140    	; 0x56c4 <__fp_norm2>
    5638:	00 24       	eor	r0, r0
    563a:	a0 e6       	ldi	r26, 0x60	; 96
    563c:	40 ea       	ldi	r20, 0xA0	; 160
    563e:	90 01       	movw	r18, r0
    5640:	80 58       	subi	r24, 0x80	; 128
    5642:	56 95       	lsr	r21
    5644:	97 95       	ror	r25
    5646:	28 f4       	brcc	.+10     	; 0x5652 <sqrt+0x2c>
    5648:	80 5c       	subi	r24, 0xC0	; 192
    564a:	66 0f       	add	r22, r22
    564c:	77 1f       	adc	r23, r23
    564e:	88 1f       	adc	r24, r24
    5650:	20 f0       	brcs	.+8      	; 0x565a <sqrt+0x34>
    5652:	26 17       	cp	r18, r22
    5654:	37 07       	cpc	r19, r23
    5656:	48 07       	cpc	r20, r24
    5658:	30 f4       	brcc	.+12     	; 0x5666 <sqrt+0x40>
    565a:	62 1b       	sub	r22, r18
    565c:	73 0b       	sbc	r23, r19
    565e:	84 0b       	sbc	r24, r20
    5660:	20 29       	or	r18, r0
    5662:	31 29       	or	r19, r1
    5664:	4a 2b       	or	r20, r26
    5666:	a6 95       	lsr	r26
    5668:	17 94       	ror	r1
    566a:	07 94       	ror	r0
    566c:	20 25       	eor	r18, r0
    566e:	31 25       	eor	r19, r1
    5670:	4a 27       	eor	r20, r26
    5672:	58 f7       	brcc	.-42     	; 0x564a <sqrt+0x24>
    5674:	66 0f       	add	r22, r22
    5676:	77 1f       	adc	r23, r23
    5678:	88 1f       	adc	r24, r24
    567a:	20 f0       	brcs	.+8      	; 0x5684 <sqrt+0x5e>
    567c:	26 17       	cp	r18, r22
    567e:	37 07       	cpc	r19, r23
    5680:	48 07       	cpc	r20, r24
    5682:	30 f4       	brcc	.+12     	; 0x5690 <sqrt+0x6a>
    5684:	62 0b       	sbc	r22, r18
    5686:	73 0b       	sbc	r23, r19
    5688:	84 0b       	sbc	r24, r20
    568a:	20 0d       	add	r18, r0
    568c:	31 1d       	adc	r19, r1
    568e:	41 1d       	adc	r20, r1
    5690:	a0 95       	com	r26
    5692:	81 f7       	brne	.-32     	; 0x5674 <sqrt+0x4e>
    5694:	b9 01       	movw	r22, r18
    5696:	84 2f       	mov	r24, r20
    5698:	91 58       	subi	r25, 0x81	; 129
    569a:	88 0f       	add	r24, r24
    569c:	96 95       	lsr	r25
    569e:	87 95       	ror	r24
    56a0:	08 95       	ret

000056a2 <square>:
    56a2:	9b 01       	movw	r18, r22
    56a4:	ac 01       	movw	r20, r24
    56a6:	52 cf       	rjmp	.-348    	; 0x554c <__mulsf3>

000056a8 <__fp_mpack>:
    56a8:	9f 3f       	cpi	r25, 0xFF	; 255
    56aa:	31 f0       	breq	.+12     	; 0x56b8 <__fp_mpack_finite+0xc>

000056ac <__fp_mpack_finite>:
    56ac:	91 50       	subi	r25, 0x01	; 1
    56ae:	20 f4       	brcc	.+8      	; 0x56b8 <__fp_mpack_finite+0xc>
    56b0:	87 95       	ror	r24
    56b2:	77 95       	ror	r23
    56b4:	67 95       	ror	r22
    56b6:	b7 95       	ror	r27
    56b8:	88 0f       	add	r24, r24
    56ba:	91 1d       	adc	r25, r1
    56bc:	96 95       	lsr	r25
    56be:	87 95       	ror	r24
    56c0:	97 f9       	bld	r25, 7
    56c2:	08 95       	ret

000056c4 <__fp_norm2>:
    56c4:	91 50       	subi	r25, 0x01	; 1
    56c6:	50 40       	sbci	r21, 0x00	; 0
    56c8:	66 0f       	add	r22, r22
    56ca:	77 1f       	adc	r23, r23
    56cc:	88 1f       	adc	r24, r24
    56ce:	d2 f7       	brpl	.-12     	; 0x56c4 <__fp_norm2>
    56d0:	08 95       	ret

000056d2 <__fp_powsodd>:
    56d2:	9f 93       	push	r25
    56d4:	8f 93       	push	r24
    56d6:	7f 93       	push	r23
    56d8:	6f 93       	push	r22
    56da:	ff 93       	push	r31
    56dc:	ef 93       	push	r30
    56de:	9b 01       	movw	r18, r22
    56e0:	ac 01       	movw	r20, r24
    56e2:	34 df       	rcall	.-408    	; 0x554c <__mulsf3>
    56e4:	ef 91       	pop	r30
    56e6:	ff 91       	pop	r31
    56e8:	d2 dd       	rcall	.-1116   	; 0x528e <__fp_powser>
    56ea:	2f 91       	pop	r18
    56ec:	3f 91       	pop	r19
    56ee:	4f 91       	pop	r20
    56f0:	5f 91       	pop	r21
    56f2:	2c cf       	rjmp	.-424    	; 0x554c <__mulsf3>

000056f4 <__divmodhi4>:
    56f4:	97 fb       	bst	r25, 7
    56f6:	07 2e       	mov	r0, r23
    56f8:	16 f4       	brtc	.+4      	; 0x56fe <__divmodhi4+0xa>
    56fa:	00 94       	com	r0
    56fc:	07 d0       	rcall	.+14     	; 0x570c <__divmodhi4_neg1>
    56fe:	77 fd       	sbrc	r23, 7
    5700:	09 d0       	rcall	.+18     	; 0x5714 <__divmodhi4_neg2>
    5702:	0e 94 94 2b 	call	0x5728	; 0x5728 <__udivmodhi4>
    5706:	07 fc       	sbrc	r0, 7
    5708:	05 d0       	rcall	.+10     	; 0x5714 <__divmodhi4_neg2>
    570a:	3e f4       	brtc	.+14     	; 0x571a <__divmodhi4_exit>

0000570c <__divmodhi4_neg1>:
    570c:	90 95       	com	r25
    570e:	81 95       	neg	r24
    5710:	9f 4f       	sbci	r25, 0xFF	; 255
    5712:	08 95       	ret

00005714 <__divmodhi4_neg2>:
    5714:	70 95       	com	r23
    5716:	61 95       	neg	r22
    5718:	7f 4f       	sbci	r23, 0xFF	; 255

0000571a <__divmodhi4_exit>:
    571a:	08 95       	ret

0000571c <__tablejump2__>:
    571c:	ee 0f       	add	r30, r30
    571e:	ff 1f       	adc	r31, r31

00005720 <__tablejump__>:
    5720:	05 90       	lpm	r0, Z+
    5722:	f4 91       	lpm	r31, Z
    5724:	e0 2d       	mov	r30, r0
    5726:	09 94       	ijmp

00005728 <__udivmodhi4>:
    5728:	aa 1b       	sub	r26, r26
    572a:	bb 1b       	sub	r27, r27
    572c:	51 e1       	ldi	r21, 0x11	; 17
    572e:	07 c0       	rjmp	.+14     	; 0x573e <__udivmodhi4_ep>

00005730 <__udivmodhi4_loop>:
    5730:	aa 1f       	adc	r26, r26
    5732:	bb 1f       	adc	r27, r27
    5734:	a6 17       	cp	r26, r22
    5736:	b7 07       	cpc	r27, r23
    5738:	10 f0       	brcs	.+4      	; 0x573e <__udivmodhi4_ep>
    573a:	a6 1b       	sub	r26, r22
    573c:	b7 0b       	sbc	r27, r23

0000573e <__udivmodhi4_ep>:
    573e:	88 1f       	adc	r24, r24
    5740:	99 1f       	adc	r25, r25
    5742:	5a 95       	dec	r21
    5744:	a9 f7       	brne	.-22     	; 0x5730 <__udivmodhi4_loop>
    5746:	80 95       	com	r24
    5748:	90 95       	com	r25
    574a:	bc 01       	movw	r22, r24
    574c:	cd 01       	movw	r24, r26
    574e:	08 95       	ret

00005750 <malloc>:
    5750:	cf 93       	push	r28
    5752:	df 93       	push	r29
    5754:	82 30       	cpi	r24, 0x02	; 2
    5756:	91 05       	cpc	r25, r1
    5758:	10 f4       	brcc	.+4      	; 0x575e <malloc+0xe>
    575a:	82 e0       	ldi	r24, 0x02	; 2
    575c:	90 e0       	ldi	r25, 0x00	; 0
    575e:	e0 91 e2 00 	lds	r30, 0x00E2
    5762:	f0 91 e3 00 	lds	r31, 0x00E3
    5766:	20 e0       	ldi	r18, 0x00	; 0
    5768:	30 e0       	ldi	r19, 0x00	; 0
    576a:	a0 e0       	ldi	r26, 0x00	; 0
    576c:	b0 e0       	ldi	r27, 0x00	; 0
    576e:	30 97       	sbiw	r30, 0x00	; 0
    5770:	39 f1       	breq	.+78     	; 0x57c0 <malloc+0x70>
    5772:	40 81       	ld	r20, Z
    5774:	51 81       	ldd	r21, Z+1	; 0x01
    5776:	48 17       	cp	r20, r24
    5778:	59 07       	cpc	r21, r25
    577a:	b8 f0       	brcs	.+46     	; 0x57aa <malloc+0x5a>
    577c:	48 17       	cp	r20, r24
    577e:	59 07       	cpc	r21, r25
    5780:	71 f4       	brne	.+28     	; 0x579e <malloc+0x4e>
    5782:	82 81       	ldd	r24, Z+2	; 0x02
    5784:	93 81       	ldd	r25, Z+3	; 0x03
    5786:	10 97       	sbiw	r26, 0x00	; 0
    5788:	29 f0       	breq	.+10     	; 0x5794 <malloc+0x44>
    578a:	13 96       	adiw	r26, 0x03	; 3
    578c:	9c 93       	st	X, r25
    578e:	8e 93       	st	-X, r24
    5790:	12 97       	sbiw	r26, 0x02	; 2
    5792:	2c c0       	rjmp	.+88     	; 0x57ec <malloc+0x9c>
    5794:	90 93 e3 00 	sts	0x00E3, r25
    5798:	80 93 e2 00 	sts	0x00E2, r24
    579c:	27 c0       	rjmp	.+78     	; 0x57ec <malloc+0x9c>
    579e:	21 15       	cp	r18, r1
    57a0:	31 05       	cpc	r19, r1
    57a2:	31 f0       	breq	.+12     	; 0x57b0 <malloc+0x60>
    57a4:	42 17       	cp	r20, r18
    57a6:	53 07       	cpc	r21, r19
    57a8:	18 f0       	brcs	.+6      	; 0x57b0 <malloc+0x60>
    57aa:	a9 01       	movw	r20, r18
    57ac:	db 01       	movw	r26, r22
    57ae:	01 c0       	rjmp	.+2      	; 0x57b2 <malloc+0x62>
    57b0:	ef 01       	movw	r28, r30
    57b2:	9a 01       	movw	r18, r20
    57b4:	bd 01       	movw	r22, r26
    57b6:	df 01       	movw	r26, r30
    57b8:	02 80       	ldd	r0, Z+2	; 0x02
    57ba:	f3 81       	ldd	r31, Z+3	; 0x03
    57bc:	e0 2d       	mov	r30, r0
    57be:	d7 cf       	rjmp	.-82     	; 0x576e <malloc+0x1e>
    57c0:	21 15       	cp	r18, r1
    57c2:	31 05       	cpc	r19, r1
    57c4:	f9 f0       	breq	.+62     	; 0x5804 <malloc+0xb4>
    57c6:	28 1b       	sub	r18, r24
    57c8:	39 0b       	sbc	r19, r25
    57ca:	24 30       	cpi	r18, 0x04	; 4
    57cc:	31 05       	cpc	r19, r1
    57ce:	80 f4       	brcc	.+32     	; 0x57f0 <malloc+0xa0>
    57d0:	8a 81       	ldd	r24, Y+2	; 0x02
    57d2:	9b 81       	ldd	r25, Y+3	; 0x03
    57d4:	61 15       	cp	r22, r1
    57d6:	71 05       	cpc	r23, r1
    57d8:	21 f0       	breq	.+8      	; 0x57e2 <malloc+0x92>
    57da:	fb 01       	movw	r30, r22
    57dc:	93 83       	std	Z+3, r25	; 0x03
    57de:	82 83       	std	Z+2, r24	; 0x02
    57e0:	04 c0       	rjmp	.+8      	; 0x57ea <malloc+0x9a>
    57e2:	90 93 e3 00 	sts	0x00E3, r25
    57e6:	80 93 e2 00 	sts	0x00E2, r24
    57ea:	fe 01       	movw	r30, r28
    57ec:	32 96       	adiw	r30, 0x02	; 2
    57ee:	44 c0       	rjmp	.+136    	; 0x5878 <malloc+0x128>
    57f0:	fe 01       	movw	r30, r28
    57f2:	e2 0f       	add	r30, r18
    57f4:	f3 1f       	adc	r31, r19
    57f6:	81 93       	st	Z+, r24
    57f8:	91 93       	st	Z+, r25
    57fa:	22 50       	subi	r18, 0x02	; 2
    57fc:	31 09       	sbc	r19, r1
    57fe:	39 83       	std	Y+1, r19	; 0x01
    5800:	28 83       	st	Y, r18
    5802:	3a c0       	rjmp	.+116    	; 0x5878 <malloc+0x128>
    5804:	20 91 e0 00 	lds	r18, 0x00E0
    5808:	30 91 e1 00 	lds	r19, 0x00E1
    580c:	23 2b       	or	r18, r19
    580e:	41 f4       	brne	.+16     	; 0x5820 <malloc+0xd0>
    5810:	20 91 62 00 	lds	r18, 0x0062
    5814:	30 91 63 00 	lds	r19, 0x0063
    5818:	30 93 e1 00 	sts	0x00E1, r19
    581c:	20 93 e0 00 	sts	0x00E0, r18
    5820:	20 91 60 00 	lds	r18, 0x0060
    5824:	30 91 61 00 	lds	r19, 0x0061
    5828:	21 15       	cp	r18, r1
    582a:	31 05       	cpc	r19, r1
    582c:	41 f4       	brne	.+16     	; 0x583e <malloc+0xee>
    582e:	2d b7       	in	r18, 0x3d	; 61
    5830:	3e b7       	in	r19, 0x3e	; 62
    5832:	40 91 64 00 	lds	r20, 0x0064
    5836:	50 91 65 00 	lds	r21, 0x0065
    583a:	24 1b       	sub	r18, r20
    583c:	35 0b       	sbc	r19, r21
    583e:	e0 91 e0 00 	lds	r30, 0x00E0
    5842:	f0 91 e1 00 	lds	r31, 0x00E1
    5846:	e2 17       	cp	r30, r18
    5848:	f3 07       	cpc	r31, r19
    584a:	a0 f4       	brcc	.+40     	; 0x5874 <malloc+0x124>
    584c:	2e 1b       	sub	r18, r30
    584e:	3f 0b       	sbc	r19, r31
    5850:	28 17       	cp	r18, r24
    5852:	39 07       	cpc	r19, r25
    5854:	78 f0       	brcs	.+30     	; 0x5874 <malloc+0x124>
    5856:	ac 01       	movw	r20, r24
    5858:	4e 5f       	subi	r20, 0xFE	; 254
    585a:	5f 4f       	sbci	r21, 0xFF	; 255
    585c:	24 17       	cp	r18, r20
    585e:	35 07       	cpc	r19, r21
    5860:	48 f0       	brcs	.+18     	; 0x5874 <malloc+0x124>
    5862:	4e 0f       	add	r20, r30
    5864:	5f 1f       	adc	r21, r31
    5866:	50 93 e1 00 	sts	0x00E1, r21
    586a:	40 93 e0 00 	sts	0x00E0, r20
    586e:	81 93       	st	Z+, r24
    5870:	91 93       	st	Z+, r25
    5872:	02 c0       	rjmp	.+4      	; 0x5878 <malloc+0x128>
    5874:	e0 e0       	ldi	r30, 0x00	; 0
    5876:	f0 e0       	ldi	r31, 0x00	; 0
    5878:	cf 01       	movw	r24, r30
    587a:	df 91       	pop	r29
    587c:	cf 91       	pop	r28
    587e:	08 95       	ret

00005880 <free>:
    5880:	cf 93       	push	r28
    5882:	df 93       	push	r29
    5884:	00 97       	sbiw	r24, 0x00	; 0
    5886:	09 f4       	brne	.+2      	; 0x588a <free+0xa>
    5888:	87 c0       	rjmp	.+270    	; 0x5998 <free+0x118>
    588a:	fc 01       	movw	r30, r24
    588c:	32 97       	sbiw	r30, 0x02	; 2
    588e:	13 82       	std	Z+3, r1	; 0x03
    5890:	12 82       	std	Z+2, r1	; 0x02
    5892:	c0 91 e2 00 	lds	r28, 0x00E2
    5896:	d0 91 e3 00 	lds	r29, 0x00E3
    589a:	20 97       	sbiw	r28, 0x00	; 0
    589c:	81 f4       	brne	.+32     	; 0x58be <free+0x3e>
    589e:	20 81       	ld	r18, Z
    58a0:	31 81       	ldd	r19, Z+1	; 0x01
    58a2:	28 0f       	add	r18, r24
    58a4:	39 1f       	adc	r19, r25
    58a6:	80 91 e0 00 	lds	r24, 0x00E0
    58aa:	90 91 e1 00 	lds	r25, 0x00E1
    58ae:	82 17       	cp	r24, r18
    58b0:	93 07       	cpc	r25, r19
    58b2:	79 f5       	brne	.+94     	; 0x5912 <free+0x92>
    58b4:	f0 93 e1 00 	sts	0x00E1, r31
    58b8:	e0 93 e0 00 	sts	0x00E0, r30
    58bc:	6d c0       	rjmp	.+218    	; 0x5998 <free+0x118>
    58be:	de 01       	movw	r26, r28
    58c0:	20 e0       	ldi	r18, 0x00	; 0
    58c2:	30 e0       	ldi	r19, 0x00	; 0
    58c4:	ae 17       	cp	r26, r30
    58c6:	bf 07       	cpc	r27, r31
    58c8:	50 f4       	brcc	.+20     	; 0x58de <free+0x5e>
    58ca:	12 96       	adiw	r26, 0x02	; 2
    58cc:	4d 91       	ld	r20, X+
    58ce:	5c 91       	ld	r21, X
    58d0:	13 97       	sbiw	r26, 0x03	; 3
    58d2:	9d 01       	movw	r18, r26
    58d4:	41 15       	cp	r20, r1
    58d6:	51 05       	cpc	r21, r1
    58d8:	09 f1       	breq	.+66     	; 0x591c <free+0x9c>
    58da:	da 01       	movw	r26, r20
    58dc:	f3 cf       	rjmp	.-26     	; 0x58c4 <free+0x44>
    58de:	b3 83       	std	Z+3, r27	; 0x03
    58e0:	a2 83       	std	Z+2, r26	; 0x02
    58e2:	40 81       	ld	r20, Z
    58e4:	51 81       	ldd	r21, Z+1	; 0x01
    58e6:	84 0f       	add	r24, r20
    58e8:	95 1f       	adc	r25, r21
    58ea:	8a 17       	cp	r24, r26
    58ec:	9b 07       	cpc	r25, r27
    58ee:	71 f4       	brne	.+28     	; 0x590c <free+0x8c>
    58f0:	8d 91       	ld	r24, X+
    58f2:	9c 91       	ld	r25, X
    58f4:	11 97       	sbiw	r26, 0x01	; 1
    58f6:	84 0f       	add	r24, r20
    58f8:	95 1f       	adc	r25, r21
    58fa:	02 96       	adiw	r24, 0x02	; 2
    58fc:	91 83       	std	Z+1, r25	; 0x01
    58fe:	80 83       	st	Z, r24
    5900:	12 96       	adiw	r26, 0x02	; 2
    5902:	8d 91       	ld	r24, X+
    5904:	9c 91       	ld	r25, X
    5906:	13 97       	sbiw	r26, 0x03	; 3
    5908:	93 83       	std	Z+3, r25	; 0x03
    590a:	82 83       	std	Z+2, r24	; 0x02
    590c:	21 15       	cp	r18, r1
    590e:	31 05       	cpc	r19, r1
    5910:	29 f4       	brne	.+10     	; 0x591c <free+0x9c>
    5912:	f0 93 e3 00 	sts	0x00E3, r31
    5916:	e0 93 e2 00 	sts	0x00E2, r30
    591a:	3e c0       	rjmp	.+124    	; 0x5998 <free+0x118>
    591c:	d9 01       	movw	r26, r18
    591e:	13 96       	adiw	r26, 0x03	; 3
    5920:	fc 93       	st	X, r31
    5922:	ee 93       	st	-X, r30
    5924:	12 97       	sbiw	r26, 0x02	; 2
    5926:	4d 91       	ld	r20, X+
    5928:	5d 91       	ld	r21, X+
    592a:	a4 0f       	add	r26, r20
    592c:	b5 1f       	adc	r27, r21
    592e:	ea 17       	cp	r30, r26
    5930:	fb 07       	cpc	r31, r27
    5932:	79 f4       	brne	.+30     	; 0x5952 <free+0xd2>
    5934:	80 81       	ld	r24, Z
    5936:	91 81       	ldd	r25, Z+1	; 0x01
    5938:	84 0f       	add	r24, r20
    593a:	95 1f       	adc	r25, r21
    593c:	02 96       	adiw	r24, 0x02	; 2
    593e:	d9 01       	movw	r26, r18
    5940:	11 96       	adiw	r26, 0x01	; 1
    5942:	9c 93       	st	X, r25
    5944:	8e 93       	st	-X, r24
    5946:	82 81       	ldd	r24, Z+2	; 0x02
    5948:	93 81       	ldd	r25, Z+3	; 0x03
    594a:	13 96       	adiw	r26, 0x03	; 3
    594c:	9c 93       	st	X, r25
    594e:	8e 93       	st	-X, r24
    5950:	12 97       	sbiw	r26, 0x02	; 2
    5952:	e0 e0       	ldi	r30, 0x00	; 0
    5954:	f0 e0       	ldi	r31, 0x00	; 0
    5956:	8a 81       	ldd	r24, Y+2	; 0x02
    5958:	9b 81       	ldd	r25, Y+3	; 0x03
    595a:	00 97       	sbiw	r24, 0x00	; 0
    595c:	19 f0       	breq	.+6      	; 0x5964 <free+0xe4>
    595e:	fe 01       	movw	r30, r28
    5960:	ec 01       	movw	r28, r24
    5962:	f9 cf       	rjmp	.-14     	; 0x5956 <free+0xd6>
    5964:	ce 01       	movw	r24, r28
    5966:	02 96       	adiw	r24, 0x02	; 2
    5968:	28 81       	ld	r18, Y
    596a:	39 81       	ldd	r19, Y+1	; 0x01
    596c:	82 0f       	add	r24, r18
    596e:	93 1f       	adc	r25, r19
    5970:	20 91 e0 00 	lds	r18, 0x00E0
    5974:	30 91 e1 00 	lds	r19, 0x00E1
    5978:	28 17       	cp	r18, r24
    597a:	39 07       	cpc	r19, r25
    597c:	69 f4       	brne	.+26     	; 0x5998 <free+0x118>
    597e:	30 97       	sbiw	r30, 0x00	; 0
    5980:	29 f4       	brne	.+10     	; 0x598c <free+0x10c>
    5982:	10 92 e3 00 	sts	0x00E3, r1
    5986:	10 92 e2 00 	sts	0x00E2, r1
    598a:	02 c0       	rjmp	.+4      	; 0x5990 <free+0x110>
    598c:	13 82       	std	Z+3, r1	; 0x03
    598e:	12 82       	std	Z+2, r1	; 0x02
    5990:	d0 93 e1 00 	sts	0x00E1, r29
    5994:	c0 93 e0 00 	sts	0x00E0, r28
    5998:	df 91       	pop	r29
    599a:	cf 91       	pop	r28
    599c:	08 95       	ret

0000599e <do_rand>:
    599e:	8f 92       	push	r8
    59a0:	9f 92       	push	r9
    59a2:	af 92       	push	r10
    59a4:	bf 92       	push	r11
    59a6:	cf 92       	push	r12
    59a8:	df 92       	push	r13
    59aa:	ef 92       	push	r14
    59ac:	ff 92       	push	r15
    59ae:	cf 93       	push	r28
    59b0:	df 93       	push	r29
    59b2:	ec 01       	movw	r28, r24
    59b4:	68 81       	ld	r22, Y
    59b6:	79 81       	ldd	r23, Y+1	; 0x01
    59b8:	8a 81       	ldd	r24, Y+2	; 0x02
    59ba:	9b 81       	ldd	r25, Y+3	; 0x03
    59bc:	61 15       	cp	r22, r1
    59be:	71 05       	cpc	r23, r1
    59c0:	81 05       	cpc	r24, r1
    59c2:	91 05       	cpc	r25, r1
    59c4:	21 f4       	brne	.+8      	; 0x59ce <do_rand+0x30>
    59c6:	64 e2       	ldi	r22, 0x24	; 36
    59c8:	79 ed       	ldi	r23, 0xD9	; 217
    59ca:	8b e5       	ldi	r24, 0x5B	; 91
    59cc:	97 e0       	ldi	r25, 0x07	; 7
    59ce:	2d e1       	ldi	r18, 0x1D	; 29
    59d0:	33 ef       	ldi	r19, 0xF3	; 243
    59d2:	41 e0       	ldi	r20, 0x01	; 1
    59d4:	50 e0       	ldi	r21, 0x00	; 0
    59d6:	0e 94 60 31 	call	0x62c0	; 0x62c0 <__divmodsi4>
    59da:	49 01       	movw	r8, r18
    59dc:	5a 01       	movw	r10, r20
    59de:	9b 01       	movw	r18, r22
    59e0:	ac 01       	movw	r20, r24
    59e2:	a7 ea       	ldi	r26, 0xA7	; 167
    59e4:	b1 e4       	ldi	r27, 0x41	; 65
    59e6:	0e 94 7f 31 	call	0x62fe	; 0x62fe <__muluhisi3>
    59ea:	6b 01       	movw	r12, r22
    59ec:	7c 01       	movw	r14, r24
    59ee:	ac ee       	ldi	r26, 0xEC	; 236
    59f0:	b4 ef       	ldi	r27, 0xF4	; 244
    59f2:	a5 01       	movw	r20, r10
    59f4:	94 01       	movw	r18, r8
    59f6:	0e 94 8d 31 	call	0x631a	; 0x631a <__mulohisi3>
    59fa:	c6 0e       	add	r12, r22
    59fc:	d7 1e       	adc	r13, r23
    59fe:	e8 1e       	adc	r14, r24
    5a00:	f9 1e       	adc	r15, r25
    5a02:	f7 fe       	sbrs	r15, 7
    5a04:	06 c0       	rjmp	.+12     	; 0x5a12 <do_rand+0x74>
    5a06:	81 e0       	ldi	r24, 0x01	; 1
    5a08:	c8 1a       	sub	r12, r24
    5a0a:	d1 08       	sbc	r13, r1
    5a0c:	e1 08       	sbc	r14, r1
    5a0e:	80 e8       	ldi	r24, 0x80	; 128
    5a10:	f8 0a       	sbc	r15, r24
    5a12:	c8 82       	st	Y, r12
    5a14:	d9 82       	std	Y+1, r13	; 0x01
    5a16:	ea 82       	std	Y+2, r14	; 0x02
    5a18:	fb 82       	std	Y+3, r15	; 0x03
    5a1a:	c6 01       	movw	r24, r12
    5a1c:	9f 77       	andi	r25, 0x7F	; 127
    5a1e:	df 91       	pop	r29
    5a20:	cf 91       	pop	r28
    5a22:	ff 90       	pop	r15
    5a24:	ef 90       	pop	r14
    5a26:	df 90       	pop	r13
    5a28:	cf 90       	pop	r12
    5a2a:	bf 90       	pop	r11
    5a2c:	af 90       	pop	r10
    5a2e:	9f 90       	pop	r9
    5a30:	8f 90       	pop	r8
    5a32:	08 95       	ret

00005a34 <rand_r>:
    5a34:	0e 94 cf 2c 	call	0x599e	; 0x599e <do_rand>
    5a38:	08 95       	ret

00005a3a <rand>:
    5a3a:	86 e6       	ldi	r24, 0x66	; 102
    5a3c:	90 e0       	ldi	r25, 0x00	; 0
    5a3e:	0e 94 cf 2c 	call	0x599e	; 0x599e <do_rand>
    5a42:	08 95       	ret

00005a44 <srand>:
    5a44:	a0 e0       	ldi	r26, 0x00	; 0
    5a46:	b0 e0       	ldi	r27, 0x00	; 0
    5a48:	80 93 66 00 	sts	0x0066, r24
    5a4c:	90 93 67 00 	sts	0x0067, r25
    5a50:	a0 93 68 00 	sts	0x0068, r26
    5a54:	b0 93 69 00 	sts	0x0069, r27
    5a58:	08 95       	ret

00005a5a <strtol>:
    5a5a:	2f 92       	push	r2
    5a5c:	3f 92       	push	r3
    5a5e:	5f 92       	push	r5
    5a60:	6f 92       	push	r6
    5a62:	7f 92       	push	r7
    5a64:	8f 92       	push	r8
    5a66:	9f 92       	push	r9
    5a68:	af 92       	push	r10
    5a6a:	bf 92       	push	r11
    5a6c:	cf 92       	push	r12
    5a6e:	df 92       	push	r13
    5a70:	ef 92       	push	r14
    5a72:	ff 92       	push	r15
    5a74:	0f 93       	push	r16
    5a76:	1f 93       	push	r17
    5a78:	cf 93       	push	r28
    5a7a:	df 93       	push	r29
    5a7c:	8b 01       	movw	r16, r22
    5a7e:	ea 01       	movw	r28, r20
    5a80:	61 15       	cp	r22, r1
    5a82:	71 05       	cpc	r23, r1
    5a84:	21 f0       	breq	.+8      	; 0x5a8e <strtol+0x34>
    5a86:	db 01       	movw	r26, r22
    5a88:	8c 93       	st	X, r24
    5a8a:	11 96       	adiw	r26, 0x01	; 1
    5a8c:	9c 93       	st	X, r25
    5a8e:	20 97       	sbiw	r28, 0x00	; 0
    5a90:	39 f0       	breq	.+14     	; 0x5aa0 <strtol+0x46>
    5a92:	9e 01       	movw	r18, r28
    5a94:	22 50       	subi	r18, 0x02	; 2
    5a96:	31 09       	sbc	r19, r1
    5a98:	23 32       	cpi	r18, 0x23	; 35
    5a9a:	31 05       	cpc	r19, r1
    5a9c:	08 f0       	brcs	.+2      	; 0x5aa0 <strtol+0x46>
    5a9e:	fb c0       	rjmp	.+502    	; 0x5c96 <strtol+0x23c>
    5aa0:	7c 01       	movw	r14, r24
    5aa2:	67 01       	movw	r12, r14
    5aa4:	bf ef       	ldi	r27, 0xFF	; 255
    5aa6:	cb 1a       	sub	r12, r27
    5aa8:	db 0a       	sbc	r13, r27
    5aaa:	56 01       	movw	r10, r12
    5aac:	f7 01       	movw	r30, r14
    5aae:	60 80       	ld	r6, Z
    5ab0:	86 2d       	mov	r24, r6
    5ab2:	90 e0       	ldi	r25, 0x00	; 0
    5ab4:	0e 94 61 2e 	call	0x5cc2	; 0x5cc2 <isspace>
    5ab8:	89 2b       	or	r24, r25
    5aba:	11 f0       	breq	.+4      	; 0x5ac0 <strtol+0x66>
    5abc:	76 01       	movw	r14, r12
    5abe:	f1 cf       	rjmp	.-30     	; 0x5aa2 <strtol+0x48>
    5ac0:	fd e2       	ldi	r31, 0x2D	; 45
    5ac2:	6f 12       	cpse	r6, r31
    5ac4:	0a c0       	rjmp	.+20     	; 0x5ada <strtol+0x80>
    5ac6:	57 01       	movw	r10, r14
    5ac8:	82 e0       	ldi	r24, 0x02	; 2
    5aca:	a8 0e       	add	r10, r24
    5acc:	b1 1c       	adc	r11, r1
    5ace:	d7 01       	movw	r26, r14
    5ad0:	11 96       	adiw	r26, 0x01	; 1
    5ad2:	6c 90       	ld	r6, X
    5ad4:	77 24       	eor	r7, r7
    5ad6:	73 94       	inc	r7
    5ad8:	0b c0       	rjmp	.+22     	; 0x5af0 <strtol+0x96>
    5ada:	bb e2       	ldi	r27, 0x2B	; 43
    5adc:	6b 12       	cpse	r6, r27
    5ade:	07 c0       	rjmp	.+14     	; 0x5aee <strtol+0x94>
    5ae0:	57 01       	movw	r10, r14
    5ae2:	e2 e0       	ldi	r30, 0x02	; 2
    5ae4:	ae 0e       	add	r10, r30
    5ae6:	b1 1c       	adc	r11, r1
    5ae8:	d7 01       	movw	r26, r14
    5aea:	11 96       	adiw	r26, 0x01	; 1
    5aec:	6c 90       	ld	r6, X
    5aee:	71 2c       	mov	r7, r1
    5af0:	ce 01       	movw	r24, r28
    5af2:	8f 7e       	andi	r24, 0xEF	; 239
    5af4:	89 2b       	or	r24, r25
    5af6:	89 f4       	brne	.+34     	; 0x5b1a <strtol+0xc0>
    5af8:	b0 e3       	ldi	r27, 0x30	; 48
    5afa:	6b 12       	cpse	r6, r27
    5afc:	22 c0       	rjmp	.+68     	; 0x5b42 <strtol+0xe8>
    5afe:	f5 01       	movw	r30, r10
    5b00:	80 81       	ld	r24, Z
    5b02:	8f 7d       	andi	r24, 0xDF	; 223
    5b04:	88 35       	cpi	r24, 0x58	; 88
    5b06:	41 f5       	brne	.+80     	; 0x5b58 <strtol+0xfe>
    5b08:	61 80       	ldd	r6, Z+1	; 0x01
    5b0a:	f2 e0       	ldi	r31, 0x02	; 2
    5b0c:	af 0e       	add	r10, r31
    5b0e:	b1 1c       	adc	r11, r1
    5b10:	87 2d       	mov	r24, r7
    5b12:	82 60       	ori	r24, 0x02	; 2
    5b14:	78 2e       	mov	r7, r24
    5b16:	c0 e1       	ldi	r28, 0x10	; 16
    5b18:	d0 e0       	ldi	r29, 0x00	; 0
    5b1a:	c8 30       	cpi	r28, 0x08	; 8
    5b1c:	d1 05       	cpc	r29, r1
    5b1e:	f1 f0       	breq	.+60     	; 0x5b5c <strtol+0x102>
    5b20:	4c f4       	brge	.+18     	; 0x5b34 <strtol+0xda>
    5b22:	c2 30       	cpi	r28, 0x02	; 2
    5b24:	d1 05       	cpc	r29, r1
    5b26:	11 f5       	brne	.+68     	; 0x5b6c <strtol+0x112>
    5b28:	c1 2c       	mov	r12, r1
    5b2a:	d1 2c       	mov	r13, r1
    5b2c:	e1 2c       	mov	r14, r1
    5b2e:	b0 e4       	ldi	r27, 0x40	; 64
    5b30:	fb 2e       	mov	r15, r27
    5b32:	2f c0       	rjmp	.+94     	; 0x5b92 <strtol+0x138>
    5b34:	ca 30       	cpi	r28, 0x0A	; 10
    5b36:	d1 05       	cpc	r29, r1
    5b38:	31 f0       	breq	.+12     	; 0x5b46 <strtol+0xec>
    5b3a:	c0 31       	cpi	r28, 0x10	; 16
    5b3c:	d1 05       	cpc	r29, r1
    5b3e:	21 f1       	breq	.+72     	; 0x5b88 <strtol+0x12e>
    5b40:	15 c0       	rjmp	.+42     	; 0x5b6c <strtol+0x112>
    5b42:	20 97       	sbiw	r28, 0x00	; 0
    5b44:	51 f7       	brne	.-44     	; 0x5b1a <strtol+0xc0>
    5b46:	ca e0       	ldi	r28, 0x0A	; 10
    5b48:	d0 e0       	ldi	r29, 0x00	; 0
    5b4a:	ac ec       	ldi	r26, 0xCC	; 204
    5b4c:	ca 2e       	mov	r12, r26
    5b4e:	dc 2c       	mov	r13, r12
    5b50:	ec 2c       	mov	r14, r12
    5b52:	ac e0       	ldi	r26, 0x0C	; 12
    5b54:	fa 2e       	mov	r15, r26
    5b56:	1d c0       	rjmp	.+58     	; 0x5b92 <strtol+0x138>
    5b58:	20 97       	sbiw	r28, 0x00	; 0
    5b5a:	f9 f6       	brne	.-66     	; 0x5b1a <strtol+0xc0>
    5b5c:	c8 e0       	ldi	r28, 0x08	; 8
    5b5e:	d0 e0       	ldi	r29, 0x00	; 0
    5b60:	c1 2c       	mov	r12, r1
    5b62:	d1 2c       	mov	r13, r1
    5b64:	e1 2c       	mov	r14, r1
    5b66:	f0 e1       	ldi	r31, 0x10	; 16
    5b68:	ff 2e       	mov	r15, r31
    5b6a:	13 c0       	rjmp	.+38     	; 0x5b92 <strtol+0x138>
    5b6c:	60 e0       	ldi	r22, 0x00	; 0
    5b6e:	70 e0       	ldi	r23, 0x00	; 0
    5b70:	80 e0       	ldi	r24, 0x00	; 0
    5b72:	90 e8       	ldi	r25, 0x80	; 128
    5b74:	9e 01       	movw	r18, r28
    5b76:	44 27       	eor	r20, r20
    5b78:	37 fd       	sbrc	r19, 7
    5b7a:	40 95       	com	r20
    5b7c:	54 2f       	mov	r21, r20
    5b7e:	0e 94 3e 31 	call	0x627c	; 0x627c <__udivmodsi4>
    5b82:	69 01       	movw	r12, r18
    5b84:	7a 01       	movw	r14, r20
    5b86:	05 c0       	rjmp	.+10     	; 0x5b92 <strtol+0x138>
    5b88:	c1 2c       	mov	r12, r1
    5b8a:	d1 2c       	mov	r13, r1
    5b8c:	e1 2c       	mov	r14, r1
    5b8e:	e8 e0       	ldi	r30, 0x08	; 8
    5b90:	fe 2e       	mov	r15, r30
    5b92:	f5 01       	movw	r30, r10
    5b94:	60 e0       	ldi	r22, 0x00	; 0
    5b96:	20 e0       	ldi	r18, 0x00	; 0
    5b98:	30 e0       	ldi	r19, 0x00	; 0
    5b9a:	a9 01       	movw	r20, r18
    5b9c:	4e 01       	movw	r8, r28
    5b9e:	aa 24       	eor	r10, r10
    5ba0:	97 fc       	sbrc	r9, 7
    5ba2:	a0 94       	com	r10
    5ba4:	ba 2c       	mov	r11, r10
    5ba6:	1f 01       	movw	r2, r30
    5ba8:	70 ed       	ldi	r23, 0xD0	; 208
    5baa:	57 2e       	mov	r5, r23
    5bac:	56 0c       	add	r5, r6
    5bae:	a9 e0       	ldi	r26, 0x09	; 9
    5bb0:	a5 15       	cp	r26, r5
    5bb2:	70 f4       	brcc	.+28     	; 0x5bd0 <strtol+0x176>
    5bb4:	8f eb       	ldi	r24, 0xBF	; 191
    5bb6:	86 0d       	add	r24, r6
    5bb8:	8a 31       	cpi	r24, 0x1A	; 26
    5bba:	18 f4       	brcc	.+6      	; 0x5bc2 <strtol+0x168>
    5bbc:	99 ec       	ldi	r25, 0xC9	; 201
    5bbe:	59 2e       	mov	r5, r25
    5bc0:	06 c0       	rjmp	.+12     	; 0x5bce <strtol+0x174>
    5bc2:	8f e9       	ldi	r24, 0x9F	; 159
    5bc4:	86 0d       	add	r24, r6
    5bc6:	8a 31       	cpi	r24, 0x1A	; 26
    5bc8:	30 f5       	brcc	.+76     	; 0x5c16 <strtol+0x1bc>
    5bca:	89 ea       	ldi	r24, 0xA9	; 169
    5bcc:	58 2e       	mov	r5, r24
    5bce:	56 0c       	add	r5, r6
    5bd0:	85 2d       	mov	r24, r5
    5bd2:	90 e0       	ldi	r25, 0x00	; 0
    5bd4:	8c 17       	cp	r24, r28
    5bd6:	9d 07       	cpc	r25, r29
    5bd8:	f4 f4       	brge	.+60     	; 0x5c16 <strtol+0x1bc>
    5bda:	67 fd       	sbrc	r22, 7
    5bdc:	18 c0       	rjmp	.+48     	; 0x5c0e <strtol+0x1b4>
    5bde:	c2 16       	cp	r12, r18
    5be0:	d3 06       	cpc	r13, r19
    5be2:	e4 06       	cpc	r14, r20
    5be4:	f5 06       	cpc	r15, r21
    5be6:	80 f0       	brcs	.+32     	; 0x5c08 <strtol+0x1ae>
    5be8:	c5 01       	movw	r24, r10
    5bea:	b4 01       	movw	r22, r8
    5bec:	0e 94 2e 31 	call	0x625c	; 0x625c <__mulsi3>
    5bf0:	9b 01       	movw	r18, r22
    5bf2:	ac 01       	movw	r20, r24
    5bf4:	25 0d       	add	r18, r5
    5bf6:	31 1d       	adc	r19, r1
    5bf8:	41 1d       	adc	r20, r1
    5bfa:	51 1d       	adc	r21, r1
    5bfc:	21 30       	cpi	r18, 0x01	; 1
    5bfe:	31 05       	cpc	r19, r1
    5c00:	41 05       	cpc	r20, r1
    5c02:	b0 e8       	ldi	r27, 0x80	; 128
    5c04:	5b 07       	cpc	r21, r27
    5c06:	10 f0       	brcs	.+4      	; 0x5c0c <strtol+0x1b2>
    5c08:	6f ef       	ldi	r22, 0xFF	; 255
    5c0a:	01 c0       	rjmp	.+2      	; 0x5c0e <strtol+0x1b4>
    5c0c:	61 e0       	ldi	r22, 0x01	; 1
    5c0e:	31 96       	adiw	r30, 0x01	; 1
    5c10:	d1 01       	movw	r26, r2
    5c12:	6c 90       	ld	r6, X
    5c14:	c8 cf       	rjmp	.-112    	; 0x5ba6 <strtol+0x14c>
    5c16:	87 2d       	mov	r24, r7
    5c18:	81 70       	andi	r24, 0x01	; 1
    5c1a:	01 15       	cp	r16, r1
    5c1c:	11 05       	cpc	r17, r1
    5c1e:	71 f0       	breq	.+28     	; 0x5c3c <strtol+0x1e2>
    5c20:	66 23       	and	r22, r22
    5c22:	29 f0       	breq	.+10     	; 0x5c2e <strtol+0x1d4>
    5c24:	31 97       	sbiw	r30, 0x01	; 1
    5c26:	d8 01       	movw	r26, r16
    5c28:	ed 93       	st	X+, r30
    5c2a:	fc 93       	st	X, r31
    5c2c:	07 c0       	rjmp	.+14     	; 0x5c3c <strtol+0x1e2>
    5c2e:	71 fe       	sbrs	r7, 1
    5c30:	19 c0       	rjmp	.+50     	; 0x5c64 <strtol+0x20a>
    5c32:	32 97       	sbiw	r30, 0x02	; 2
    5c34:	d8 01       	movw	r26, r16
    5c36:	ed 93       	st	X+, r30
    5c38:	fc 93       	st	X, r31
    5c3a:	14 c0       	rjmp	.+40     	; 0x5c64 <strtol+0x20a>
    5c3c:	67 ff       	sbrs	r22, 7
    5c3e:	12 c0       	rjmp	.+36     	; 0x5c64 <strtol+0x20a>
    5c40:	88 23       	and	r24, r24
    5c42:	29 f0       	breq	.+10     	; 0x5c4e <strtol+0x1f4>
    5c44:	20 e0       	ldi	r18, 0x00	; 0
    5c46:	30 e0       	ldi	r19, 0x00	; 0
    5c48:	40 e0       	ldi	r20, 0x00	; 0
    5c4a:	50 e8       	ldi	r21, 0x80	; 128
    5c4c:	04 c0       	rjmp	.+8      	; 0x5c56 <strtol+0x1fc>
    5c4e:	2f ef       	ldi	r18, 0xFF	; 255
    5c50:	3f ef       	ldi	r19, 0xFF	; 255
    5c52:	4f ef       	ldi	r20, 0xFF	; 255
    5c54:	5f e7       	ldi	r21, 0x7F	; 127
    5c56:	82 e2       	ldi	r24, 0x22	; 34
    5c58:	90 e0       	ldi	r25, 0x00	; 0
    5c5a:	90 93 e5 00 	sts	0x00E5, r25
    5c5e:	80 93 e4 00 	sts	0x00E4, r24
    5c62:	16 c0       	rjmp	.+44     	; 0x5c90 <strtol+0x236>
    5c64:	88 23       	and	r24, r24
    5c66:	41 f0       	breq	.+16     	; 0x5c78 <strtol+0x21e>
    5c68:	50 95       	com	r21
    5c6a:	40 95       	com	r20
    5c6c:	30 95       	com	r19
    5c6e:	21 95       	neg	r18
    5c70:	3f 4f       	sbci	r19, 0xFF	; 255
    5c72:	4f 4f       	sbci	r20, 0xFF	; 255
    5c74:	5f 4f       	sbci	r21, 0xFF	; 255
    5c76:	0c c0       	rjmp	.+24     	; 0x5c90 <strtol+0x236>
    5c78:	57 ff       	sbrs	r21, 7
    5c7a:	0a c0       	rjmp	.+20     	; 0x5c90 <strtol+0x236>
    5c7c:	82 e2       	ldi	r24, 0x22	; 34
    5c7e:	90 e0       	ldi	r25, 0x00	; 0
    5c80:	90 93 e5 00 	sts	0x00E5, r25
    5c84:	80 93 e4 00 	sts	0x00E4, r24
    5c88:	2f ef       	ldi	r18, 0xFF	; 255
    5c8a:	3f ef       	ldi	r19, 0xFF	; 255
    5c8c:	4f ef       	ldi	r20, 0xFF	; 255
    5c8e:	5f e7       	ldi	r21, 0x7F	; 127
    5c90:	b9 01       	movw	r22, r18
    5c92:	ca 01       	movw	r24, r20
    5c94:	04 c0       	rjmp	.+8      	; 0x5c9e <strtol+0x244>
    5c96:	60 e0       	ldi	r22, 0x00	; 0
    5c98:	70 e0       	ldi	r23, 0x00	; 0
    5c9a:	80 e0       	ldi	r24, 0x00	; 0
    5c9c:	90 e0       	ldi	r25, 0x00	; 0
    5c9e:	df 91       	pop	r29
    5ca0:	cf 91       	pop	r28
    5ca2:	1f 91       	pop	r17
    5ca4:	0f 91       	pop	r16
    5ca6:	ff 90       	pop	r15
    5ca8:	ef 90       	pop	r14
    5caa:	df 90       	pop	r13
    5cac:	cf 90       	pop	r12
    5cae:	bf 90       	pop	r11
    5cb0:	af 90       	pop	r10
    5cb2:	9f 90       	pop	r9
    5cb4:	8f 90       	pop	r8
    5cb6:	7f 90       	pop	r7
    5cb8:	6f 90       	pop	r6
    5cba:	5f 90       	pop	r5
    5cbc:	3f 90       	pop	r3
    5cbe:	2f 90       	pop	r2
    5cc0:	08 95       	ret

00005cc2 <isspace>:
    5cc2:	91 11       	cpse	r25, r1
    5cc4:	05 c2       	rjmp	.+1034   	; 0x60d0 <__ctype_isfalse>
    5cc6:	80 32       	cpi	r24, 0x20	; 32
    5cc8:	19 f0       	breq	.+6      	; 0x5cd0 <isspace+0xe>
    5cca:	89 50       	subi	r24, 0x09	; 9
    5ccc:	85 50       	subi	r24, 0x05	; 5
    5cce:	d0 f7       	brcc	.-12     	; 0x5cc4 <isspace+0x2>
    5cd0:	08 95       	ret

00005cd2 <sprintf>:
    5cd2:	ae e0       	ldi	r26, 0x0E	; 14
    5cd4:	b0 e0       	ldi	r27, 0x00	; 0
    5cd6:	ef e6       	ldi	r30, 0x6F	; 111
    5cd8:	fe e2       	ldi	r31, 0x2E	; 46
    5cda:	0c 94 a0 31 	jmp	0x6340	; 0x6340 <__prologue_saves__+0x1c>
    5cde:	0d 89       	ldd	r16, Y+21	; 0x15
    5ce0:	1e 89       	ldd	r17, Y+22	; 0x16
    5ce2:	86 e0       	ldi	r24, 0x06	; 6
    5ce4:	8c 83       	std	Y+4, r24	; 0x04
    5ce6:	1a 83       	std	Y+2, r17	; 0x02
    5ce8:	09 83       	std	Y+1, r16	; 0x01
    5cea:	8f ef       	ldi	r24, 0xFF	; 255
    5cec:	9f e7       	ldi	r25, 0x7F	; 127
    5cee:	9e 83       	std	Y+6, r25	; 0x06
    5cf0:	8d 83       	std	Y+5, r24	; 0x05
    5cf2:	ae 01       	movw	r20, r28
    5cf4:	47 5e       	subi	r20, 0xE7	; 231
    5cf6:	5f 4f       	sbci	r21, 0xFF	; 255
    5cf8:	6f 89       	ldd	r22, Y+23	; 0x17
    5cfa:	78 8d       	ldd	r23, Y+24	; 0x18
    5cfc:	ce 01       	movw	r24, r28
    5cfe:	01 96       	adiw	r24, 0x01	; 1
    5d00:	0e 94 8b 2e 	call	0x5d16	; 0x5d16 <vfprintf>
    5d04:	ef 81       	ldd	r30, Y+7	; 0x07
    5d06:	f8 85       	ldd	r31, Y+8	; 0x08
    5d08:	e0 0f       	add	r30, r16
    5d0a:	f1 1f       	adc	r31, r17
    5d0c:	10 82       	st	Z, r1
    5d0e:	2e 96       	adiw	r28, 0x0e	; 14
    5d10:	e4 e0       	ldi	r30, 0x04	; 4
    5d12:	0c 94 bc 31 	jmp	0x6378	; 0x6378 <__epilogue_restores__+0x1c>

00005d16 <vfprintf>:
    5d16:	ac e0       	ldi	r26, 0x0C	; 12
    5d18:	b0 e0       	ldi	r27, 0x00	; 0
    5d1a:	e1 e9       	ldi	r30, 0x91	; 145
    5d1c:	fe e2       	ldi	r31, 0x2E	; 46
    5d1e:	0c 94 92 31 	jmp	0x6324	; 0x6324 <__prologue_saves__>
    5d22:	7c 01       	movw	r14, r24
    5d24:	6b 01       	movw	r12, r22
    5d26:	8a 01       	movw	r16, r20
    5d28:	fc 01       	movw	r30, r24
    5d2a:	17 82       	std	Z+7, r1	; 0x07
    5d2c:	16 82       	std	Z+6, r1	; 0x06
    5d2e:	83 81       	ldd	r24, Z+3	; 0x03
    5d30:	81 ff       	sbrs	r24, 1
    5d32:	bd c1       	rjmp	.+890    	; 0x60ae <vfprintf+0x398>
    5d34:	ce 01       	movw	r24, r28
    5d36:	01 96       	adiw	r24, 0x01	; 1
    5d38:	4c 01       	movw	r8, r24
    5d3a:	f7 01       	movw	r30, r14
    5d3c:	93 81       	ldd	r25, Z+3	; 0x03
    5d3e:	f6 01       	movw	r30, r12
    5d40:	93 fd       	sbrc	r25, 3
    5d42:	85 91       	lpm	r24, Z+
    5d44:	93 ff       	sbrs	r25, 3
    5d46:	81 91       	ld	r24, Z+
    5d48:	6f 01       	movw	r12, r30
    5d4a:	88 23       	and	r24, r24
    5d4c:	09 f4       	brne	.+2      	; 0x5d50 <vfprintf+0x3a>
    5d4e:	ab c1       	rjmp	.+854    	; 0x60a6 <vfprintf+0x390>
    5d50:	85 32       	cpi	r24, 0x25	; 37
    5d52:	39 f4       	brne	.+14     	; 0x5d62 <vfprintf+0x4c>
    5d54:	93 fd       	sbrc	r25, 3
    5d56:	85 91       	lpm	r24, Z+
    5d58:	93 ff       	sbrs	r25, 3
    5d5a:	81 91       	ld	r24, Z+
    5d5c:	6f 01       	movw	r12, r30
    5d5e:	85 32       	cpi	r24, 0x25	; 37
    5d60:	29 f4       	brne	.+10     	; 0x5d6c <vfprintf+0x56>
    5d62:	b7 01       	movw	r22, r14
    5d64:	90 e0       	ldi	r25, 0x00	; 0
    5d66:	0e 94 81 30 	call	0x6102	; 0x6102 <fputc>
    5d6a:	e7 cf       	rjmp	.-50     	; 0x5d3a <vfprintf+0x24>
    5d6c:	51 2c       	mov	r5, r1
    5d6e:	31 2c       	mov	r3, r1
    5d70:	20 e0       	ldi	r18, 0x00	; 0
    5d72:	20 32       	cpi	r18, 0x20	; 32
    5d74:	a0 f4       	brcc	.+40     	; 0x5d9e <vfprintf+0x88>
    5d76:	8b 32       	cpi	r24, 0x2B	; 43
    5d78:	69 f0       	breq	.+26     	; 0x5d94 <vfprintf+0x7e>
    5d7a:	30 f4       	brcc	.+12     	; 0x5d88 <vfprintf+0x72>
    5d7c:	80 32       	cpi	r24, 0x20	; 32
    5d7e:	59 f0       	breq	.+22     	; 0x5d96 <vfprintf+0x80>
    5d80:	83 32       	cpi	r24, 0x23	; 35
    5d82:	69 f4       	brne	.+26     	; 0x5d9e <vfprintf+0x88>
    5d84:	20 61       	ori	r18, 0x10	; 16
    5d86:	2c c0       	rjmp	.+88     	; 0x5de0 <vfprintf+0xca>
    5d88:	8d 32       	cpi	r24, 0x2D	; 45
    5d8a:	39 f0       	breq	.+14     	; 0x5d9a <vfprintf+0x84>
    5d8c:	80 33       	cpi	r24, 0x30	; 48
    5d8e:	39 f4       	brne	.+14     	; 0x5d9e <vfprintf+0x88>
    5d90:	21 60       	ori	r18, 0x01	; 1
    5d92:	26 c0       	rjmp	.+76     	; 0x5de0 <vfprintf+0xca>
    5d94:	22 60       	ori	r18, 0x02	; 2
    5d96:	24 60       	ori	r18, 0x04	; 4
    5d98:	23 c0       	rjmp	.+70     	; 0x5de0 <vfprintf+0xca>
    5d9a:	28 60       	ori	r18, 0x08	; 8
    5d9c:	21 c0       	rjmp	.+66     	; 0x5de0 <vfprintf+0xca>
    5d9e:	27 fd       	sbrc	r18, 7
    5da0:	27 c0       	rjmp	.+78     	; 0x5df0 <vfprintf+0xda>
    5da2:	30 ed       	ldi	r19, 0xD0	; 208
    5da4:	38 0f       	add	r19, r24
    5da6:	3a 30       	cpi	r19, 0x0A	; 10
    5da8:	78 f4       	brcc	.+30     	; 0x5dc8 <vfprintf+0xb2>
    5daa:	26 ff       	sbrs	r18, 6
    5dac:	06 c0       	rjmp	.+12     	; 0x5dba <vfprintf+0xa4>
    5dae:	fa e0       	ldi	r31, 0x0A	; 10
    5db0:	5f 9e       	mul	r5, r31
    5db2:	30 0d       	add	r19, r0
    5db4:	11 24       	eor	r1, r1
    5db6:	53 2e       	mov	r5, r19
    5db8:	13 c0       	rjmp	.+38     	; 0x5de0 <vfprintf+0xca>
    5dba:	8a e0       	ldi	r24, 0x0A	; 10
    5dbc:	38 9e       	mul	r3, r24
    5dbe:	30 0d       	add	r19, r0
    5dc0:	11 24       	eor	r1, r1
    5dc2:	33 2e       	mov	r3, r19
    5dc4:	20 62       	ori	r18, 0x20	; 32
    5dc6:	0c c0       	rjmp	.+24     	; 0x5de0 <vfprintf+0xca>
    5dc8:	8e 32       	cpi	r24, 0x2E	; 46
    5dca:	21 f4       	brne	.+8      	; 0x5dd4 <vfprintf+0xbe>
    5dcc:	26 fd       	sbrc	r18, 6
    5dce:	6b c1       	rjmp	.+726    	; 0x60a6 <vfprintf+0x390>
    5dd0:	20 64       	ori	r18, 0x40	; 64
    5dd2:	06 c0       	rjmp	.+12     	; 0x5de0 <vfprintf+0xca>
    5dd4:	8c 36       	cpi	r24, 0x6C	; 108
    5dd6:	11 f4       	brne	.+4      	; 0x5ddc <vfprintf+0xc6>
    5dd8:	20 68       	ori	r18, 0x80	; 128
    5dda:	02 c0       	rjmp	.+4      	; 0x5de0 <vfprintf+0xca>
    5ddc:	88 36       	cpi	r24, 0x68	; 104
    5dde:	41 f4       	brne	.+16     	; 0x5df0 <vfprintf+0xda>
    5de0:	f6 01       	movw	r30, r12
    5de2:	93 fd       	sbrc	r25, 3
    5de4:	85 91       	lpm	r24, Z+
    5de6:	93 ff       	sbrs	r25, 3
    5de8:	81 91       	ld	r24, Z+
    5dea:	6f 01       	movw	r12, r30
    5dec:	81 11       	cpse	r24, r1
    5dee:	c1 cf       	rjmp	.-126    	; 0x5d72 <vfprintf+0x5c>
    5df0:	98 2f       	mov	r25, r24
    5df2:	9f 7d       	andi	r25, 0xDF	; 223
    5df4:	95 54       	subi	r25, 0x45	; 69
    5df6:	93 30       	cpi	r25, 0x03	; 3
    5df8:	28 f4       	brcc	.+10     	; 0x5e04 <vfprintf+0xee>
    5dfa:	0c 5f       	subi	r16, 0xFC	; 252
    5dfc:	1f 4f       	sbci	r17, 0xFF	; 255
    5dfe:	ff e3       	ldi	r31, 0x3F	; 63
    5e00:	f9 83       	std	Y+1, r31	; 0x01
    5e02:	0d c0       	rjmp	.+26     	; 0x5e1e <vfprintf+0x108>
    5e04:	83 36       	cpi	r24, 0x63	; 99
    5e06:	31 f0       	breq	.+12     	; 0x5e14 <vfprintf+0xfe>
    5e08:	83 37       	cpi	r24, 0x73	; 115
    5e0a:	71 f0       	breq	.+28     	; 0x5e28 <vfprintf+0x112>
    5e0c:	83 35       	cpi	r24, 0x53	; 83
    5e0e:	09 f0       	breq	.+2      	; 0x5e12 <vfprintf+0xfc>
    5e10:	5b c0       	rjmp	.+182    	; 0x5ec8 <vfprintf+0x1b2>
    5e12:	22 c0       	rjmp	.+68     	; 0x5e58 <vfprintf+0x142>
    5e14:	f8 01       	movw	r30, r16
    5e16:	80 81       	ld	r24, Z
    5e18:	89 83       	std	Y+1, r24	; 0x01
    5e1a:	0e 5f       	subi	r16, 0xFE	; 254
    5e1c:	1f 4f       	sbci	r17, 0xFF	; 255
    5e1e:	44 24       	eor	r4, r4
    5e20:	43 94       	inc	r4
    5e22:	51 2c       	mov	r5, r1
    5e24:	54 01       	movw	r10, r8
    5e26:	15 c0       	rjmp	.+42     	; 0x5e52 <vfprintf+0x13c>
    5e28:	38 01       	movw	r6, r16
    5e2a:	f2 e0       	ldi	r31, 0x02	; 2
    5e2c:	6f 0e       	add	r6, r31
    5e2e:	71 1c       	adc	r7, r1
    5e30:	f8 01       	movw	r30, r16
    5e32:	a0 80       	ld	r10, Z
    5e34:	b1 80       	ldd	r11, Z+1	; 0x01
    5e36:	26 ff       	sbrs	r18, 6
    5e38:	03 c0       	rjmp	.+6      	; 0x5e40 <vfprintf+0x12a>
    5e3a:	65 2d       	mov	r22, r5
    5e3c:	70 e0       	ldi	r23, 0x00	; 0
    5e3e:	02 c0       	rjmp	.+4      	; 0x5e44 <vfprintf+0x12e>
    5e40:	6f ef       	ldi	r22, 0xFF	; 255
    5e42:	7f ef       	ldi	r23, 0xFF	; 255
    5e44:	c5 01       	movw	r24, r10
    5e46:	2c 87       	std	Y+12, r18	; 0x0c
    5e48:	0e 94 76 30 	call	0x60ec	; 0x60ec <strnlen>
    5e4c:	2c 01       	movw	r4, r24
    5e4e:	83 01       	movw	r16, r6
    5e50:	2c 85       	ldd	r18, Y+12	; 0x0c
    5e52:	2f 77       	andi	r18, 0x7F	; 127
    5e54:	22 2e       	mov	r2, r18
    5e56:	17 c0       	rjmp	.+46     	; 0x5e86 <vfprintf+0x170>
    5e58:	38 01       	movw	r6, r16
    5e5a:	f2 e0       	ldi	r31, 0x02	; 2
    5e5c:	6f 0e       	add	r6, r31
    5e5e:	71 1c       	adc	r7, r1
    5e60:	f8 01       	movw	r30, r16
    5e62:	a0 80       	ld	r10, Z
    5e64:	b1 80       	ldd	r11, Z+1	; 0x01
    5e66:	26 ff       	sbrs	r18, 6
    5e68:	03 c0       	rjmp	.+6      	; 0x5e70 <vfprintf+0x15a>
    5e6a:	65 2d       	mov	r22, r5
    5e6c:	70 e0       	ldi	r23, 0x00	; 0
    5e6e:	02 c0       	rjmp	.+4      	; 0x5e74 <vfprintf+0x15e>
    5e70:	6f ef       	ldi	r22, 0xFF	; 255
    5e72:	7f ef       	ldi	r23, 0xFF	; 255
    5e74:	c5 01       	movw	r24, r10
    5e76:	2c 87       	std	Y+12, r18	; 0x0c
    5e78:	0e 94 6b 30 	call	0x60d6	; 0x60d6 <strnlen_P>
    5e7c:	2c 01       	movw	r4, r24
    5e7e:	2c 85       	ldd	r18, Y+12	; 0x0c
    5e80:	20 68       	ori	r18, 0x80	; 128
    5e82:	22 2e       	mov	r2, r18
    5e84:	83 01       	movw	r16, r6
    5e86:	23 fc       	sbrc	r2, 3
    5e88:	1b c0       	rjmp	.+54     	; 0x5ec0 <vfprintf+0x1aa>
    5e8a:	83 2d       	mov	r24, r3
    5e8c:	90 e0       	ldi	r25, 0x00	; 0
    5e8e:	48 16       	cp	r4, r24
    5e90:	59 06       	cpc	r5, r25
    5e92:	b0 f4       	brcc	.+44     	; 0x5ec0 <vfprintf+0x1aa>
    5e94:	b7 01       	movw	r22, r14
    5e96:	80 e2       	ldi	r24, 0x20	; 32
    5e98:	90 e0       	ldi	r25, 0x00	; 0
    5e9a:	0e 94 81 30 	call	0x6102	; 0x6102 <fputc>
    5e9e:	3a 94       	dec	r3
    5ea0:	f4 cf       	rjmp	.-24     	; 0x5e8a <vfprintf+0x174>
    5ea2:	f5 01       	movw	r30, r10
    5ea4:	27 fc       	sbrc	r2, 7
    5ea6:	85 91       	lpm	r24, Z+
    5ea8:	27 fe       	sbrs	r2, 7
    5eaa:	81 91       	ld	r24, Z+
    5eac:	5f 01       	movw	r10, r30
    5eae:	b7 01       	movw	r22, r14
    5eb0:	90 e0       	ldi	r25, 0x00	; 0
    5eb2:	0e 94 81 30 	call	0x6102	; 0x6102 <fputc>
    5eb6:	31 10       	cpse	r3, r1
    5eb8:	3a 94       	dec	r3
    5eba:	f1 e0       	ldi	r31, 0x01	; 1
    5ebc:	4f 1a       	sub	r4, r31
    5ebe:	51 08       	sbc	r5, r1
    5ec0:	41 14       	cp	r4, r1
    5ec2:	51 04       	cpc	r5, r1
    5ec4:	71 f7       	brne	.-36     	; 0x5ea2 <vfprintf+0x18c>
    5ec6:	e5 c0       	rjmp	.+458    	; 0x6092 <vfprintf+0x37c>
    5ec8:	84 36       	cpi	r24, 0x64	; 100
    5eca:	11 f0       	breq	.+4      	; 0x5ed0 <vfprintf+0x1ba>
    5ecc:	89 36       	cpi	r24, 0x69	; 105
    5ece:	39 f5       	brne	.+78     	; 0x5f1e <vfprintf+0x208>
    5ed0:	f8 01       	movw	r30, r16
    5ed2:	27 ff       	sbrs	r18, 7
    5ed4:	07 c0       	rjmp	.+14     	; 0x5ee4 <vfprintf+0x1ce>
    5ed6:	60 81       	ld	r22, Z
    5ed8:	71 81       	ldd	r23, Z+1	; 0x01
    5eda:	82 81       	ldd	r24, Z+2	; 0x02
    5edc:	93 81       	ldd	r25, Z+3	; 0x03
    5ede:	0c 5f       	subi	r16, 0xFC	; 252
    5ee0:	1f 4f       	sbci	r17, 0xFF	; 255
    5ee2:	08 c0       	rjmp	.+16     	; 0x5ef4 <vfprintf+0x1de>
    5ee4:	60 81       	ld	r22, Z
    5ee6:	71 81       	ldd	r23, Z+1	; 0x01
    5ee8:	88 27       	eor	r24, r24
    5eea:	77 fd       	sbrc	r23, 7
    5eec:	80 95       	com	r24
    5eee:	98 2f       	mov	r25, r24
    5ef0:	0e 5f       	subi	r16, 0xFE	; 254
    5ef2:	1f 4f       	sbci	r17, 0xFF	; 255
    5ef4:	2f 76       	andi	r18, 0x6F	; 111
    5ef6:	b2 2e       	mov	r11, r18
    5ef8:	97 ff       	sbrs	r25, 7
    5efa:	09 c0       	rjmp	.+18     	; 0x5f0e <vfprintf+0x1f8>
    5efc:	90 95       	com	r25
    5efe:	80 95       	com	r24
    5f00:	70 95       	com	r23
    5f02:	61 95       	neg	r22
    5f04:	7f 4f       	sbci	r23, 0xFF	; 255
    5f06:	8f 4f       	sbci	r24, 0xFF	; 255
    5f08:	9f 4f       	sbci	r25, 0xFF	; 255
    5f0a:	20 68       	ori	r18, 0x80	; 128
    5f0c:	b2 2e       	mov	r11, r18
    5f0e:	2a e0       	ldi	r18, 0x0A	; 10
    5f10:	30 e0       	ldi	r19, 0x00	; 0
    5f12:	a4 01       	movw	r20, r8
    5f14:	0e 94 b3 30 	call	0x6166	; 0x6166 <__ultoa_invert>
    5f18:	a8 2e       	mov	r10, r24
    5f1a:	a8 18       	sub	r10, r8
    5f1c:	44 c0       	rjmp	.+136    	; 0x5fa6 <vfprintf+0x290>
    5f1e:	85 37       	cpi	r24, 0x75	; 117
    5f20:	29 f4       	brne	.+10     	; 0x5f2c <vfprintf+0x216>
    5f22:	2f 7e       	andi	r18, 0xEF	; 239
    5f24:	b2 2e       	mov	r11, r18
    5f26:	2a e0       	ldi	r18, 0x0A	; 10
    5f28:	30 e0       	ldi	r19, 0x00	; 0
    5f2a:	25 c0       	rjmp	.+74     	; 0x5f76 <vfprintf+0x260>
    5f2c:	f2 2f       	mov	r31, r18
    5f2e:	f9 7f       	andi	r31, 0xF9	; 249
    5f30:	bf 2e       	mov	r11, r31
    5f32:	8f 36       	cpi	r24, 0x6F	; 111
    5f34:	c1 f0       	breq	.+48     	; 0x5f66 <vfprintf+0x250>
    5f36:	18 f4       	brcc	.+6      	; 0x5f3e <vfprintf+0x228>
    5f38:	88 35       	cpi	r24, 0x58	; 88
    5f3a:	79 f0       	breq	.+30     	; 0x5f5a <vfprintf+0x244>
    5f3c:	b4 c0       	rjmp	.+360    	; 0x60a6 <vfprintf+0x390>
    5f3e:	80 37       	cpi	r24, 0x70	; 112
    5f40:	19 f0       	breq	.+6      	; 0x5f48 <vfprintf+0x232>
    5f42:	88 37       	cpi	r24, 0x78	; 120
    5f44:	21 f0       	breq	.+8      	; 0x5f4e <vfprintf+0x238>
    5f46:	af c0       	rjmp	.+350    	; 0x60a6 <vfprintf+0x390>
    5f48:	2f 2f       	mov	r18, r31
    5f4a:	20 61       	ori	r18, 0x10	; 16
    5f4c:	b2 2e       	mov	r11, r18
    5f4e:	b4 fe       	sbrs	r11, 4
    5f50:	0d c0       	rjmp	.+26     	; 0x5f6c <vfprintf+0x256>
    5f52:	8b 2d       	mov	r24, r11
    5f54:	84 60       	ori	r24, 0x04	; 4
    5f56:	b8 2e       	mov	r11, r24
    5f58:	09 c0       	rjmp	.+18     	; 0x5f6c <vfprintf+0x256>
    5f5a:	24 ff       	sbrs	r18, 4
    5f5c:	0a c0       	rjmp	.+20     	; 0x5f72 <vfprintf+0x25c>
    5f5e:	9f 2f       	mov	r25, r31
    5f60:	96 60       	ori	r25, 0x06	; 6
    5f62:	b9 2e       	mov	r11, r25
    5f64:	06 c0       	rjmp	.+12     	; 0x5f72 <vfprintf+0x25c>
    5f66:	28 e0       	ldi	r18, 0x08	; 8
    5f68:	30 e0       	ldi	r19, 0x00	; 0
    5f6a:	05 c0       	rjmp	.+10     	; 0x5f76 <vfprintf+0x260>
    5f6c:	20 e1       	ldi	r18, 0x10	; 16
    5f6e:	30 e0       	ldi	r19, 0x00	; 0
    5f70:	02 c0       	rjmp	.+4      	; 0x5f76 <vfprintf+0x260>
    5f72:	20 e1       	ldi	r18, 0x10	; 16
    5f74:	32 e0       	ldi	r19, 0x02	; 2
    5f76:	f8 01       	movw	r30, r16
    5f78:	b7 fe       	sbrs	r11, 7
    5f7a:	07 c0       	rjmp	.+14     	; 0x5f8a <vfprintf+0x274>
    5f7c:	60 81       	ld	r22, Z
    5f7e:	71 81       	ldd	r23, Z+1	; 0x01
    5f80:	82 81       	ldd	r24, Z+2	; 0x02
    5f82:	93 81       	ldd	r25, Z+3	; 0x03
    5f84:	0c 5f       	subi	r16, 0xFC	; 252
    5f86:	1f 4f       	sbci	r17, 0xFF	; 255
    5f88:	06 c0       	rjmp	.+12     	; 0x5f96 <vfprintf+0x280>
    5f8a:	60 81       	ld	r22, Z
    5f8c:	71 81       	ldd	r23, Z+1	; 0x01
    5f8e:	80 e0       	ldi	r24, 0x00	; 0
    5f90:	90 e0       	ldi	r25, 0x00	; 0
    5f92:	0e 5f       	subi	r16, 0xFE	; 254
    5f94:	1f 4f       	sbci	r17, 0xFF	; 255
    5f96:	a4 01       	movw	r20, r8
    5f98:	0e 94 b3 30 	call	0x6166	; 0x6166 <__ultoa_invert>
    5f9c:	a8 2e       	mov	r10, r24
    5f9e:	a8 18       	sub	r10, r8
    5fa0:	fb 2d       	mov	r31, r11
    5fa2:	ff 77       	andi	r31, 0x7F	; 127
    5fa4:	bf 2e       	mov	r11, r31
    5fa6:	b6 fe       	sbrs	r11, 6
    5fa8:	0b c0       	rjmp	.+22     	; 0x5fc0 <vfprintf+0x2aa>
    5faa:	2b 2d       	mov	r18, r11
    5fac:	2e 7f       	andi	r18, 0xFE	; 254
    5fae:	a5 14       	cp	r10, r5
    5fb0:	50 f4       	brcc	.+20     	; 0x5fc6 <vfprintf+0x2b0>
    5fb2:	b4 fe       	sbrs	r11, 4
    5fb4:	0a c0       	rjmp	.+20     	; 0x5fca <vfprintf+0x2b4>
    5fb6:	b2 fc       	sbrc	r11, 2
    5fb8:	08 c0       	rjmp	.+16     	; 0x5fca <vfprintf+0x2b4>
    5fba:	2b 2d       	mov	r18, r11
    5fbc:	2e 7e       	andi	r18, 0xEE	; 238
    5fbe:	05 c0       	rjmp	.+10     	; 0x5fca <vfprintf+0x2b4>
    5fc0:	7a 2c       	mov	r7, r10
    5fc2:	2b 2d       	mov	r18, r11
    5fc4:	03 c0       	rjmp	.+6      	; 0x5fcc <vfprintf+0x2b6>
    5fc6:	7a 2c       	mov	r7, r10
    5fc8:	01 c0       	rjmp	.+2      	; 0x5fcc <vfprintf+0x2b6>
    5fca:	75 2c       	mov	r7, r5
    5fcc:	24 ff       	sbrs	r18, 4
    5fce:	0d c0       	rjmp	.+26     	; 0x5fea <vfprintf+0x2d4>
    5fd0:	fe 01       	movw	r30, r28
    5fd2:	ea 0d       	add	r30, r10
    5fd4:	f1 1d       	adc	r31, r1
    5fd6:	80 81       	ld	r24, Z
    5fd8:	80 33       	cpi	r24, 0x30	; 48
    5fda:	11 f4       	brne	.+4      	; 0x5fe0 <vfprintf+0x2ca>
    5fdc:	29 7e       	andi	r18, 0xE9	; 233
    5fde:	09 c0       	rjmp	.+18     	; 0x5ff2 <vfprintf+0x2dc>
    5fe0:	22 ff       	sbrs	r18, 2
    5fe2:	06 c0       	rjmp	.+12     	; 0x5ff0 <vfprintf+0x2da>
    5fe4:	73 94       	inc	r7
    5fe6:	73 94       	inc	r7
    5fe8:	04 c0       	rjmp	.+8      	; 0x5ff2 <vfprintf+0x2dc>
    5fea:	82 2f       	mov	r24, r18
    5fec:	86 78       	andi	r24, 0x86	; 134
    5fee:	09 f0       	breq	.+2      	; 0x5ff2 <vfprintf+0x2dc>
    5ff0:	73 94       	inc	r7
    5ff2:	23 fd       	sbrc	r18, 3
    5ff4:	13 c0       	rjmp	.+38     	; 0x601c <vfprintf+0x306>
    5ff6:	20 ff       	sbrs	r18, 0
    5ff8:	06 c0       	rjmp	.+12     	; 0x6006 <vfprintf+0x2f0>
    5ffa:	5a 2c       	mov	r5, r10
    5ffc:	73 14       	cp	r7, r3
    5ffe:	18 f4       	brcc	.+6      	; 0x6006 <vfprintf+0x2f0>
    6000:	53 0c       	add	r5, r3
    6002:	57 18       	sub	r5, r7
    6004:	73 2c       	mov	r7, r3
    6006:	73 14       	cp	r7, r3
    6008:	68 f4       	brcc	.+26     	; 0x6024 <vfprintf+0x30e>
    600a:	b7 01       	movw	r22, r14
    600c:	80 e2       	ldi	r24, 0x20	; 32
    600e:	90 e0       	ldi	r25, 0x00	; 0
    6010:	2c 87       	std	Y+12, r18	; 0x0c
    6012:	0e 94 81 30 	call	0x6102	; 0x6102 <fputc>
    6016:	73 94       	inc	r7
    6018:	2c 85       	ldd	r18, Y+12	; 0x0c
    601a:	f5 cf       	rjmp	.-22     	; 0x6006 <vfprintf+0x2f0>
    601c:	73 14       	cp	r7, r3
    601e:	10 f4       	brcc	.+4      	; 0x6024 <vfprintf+0x30e>
    6020:	37 18       	sub	r3, r7
    6022:	01 c0       	rjmp	.+2      	; 0x6026 <vfprintf+0x310>
    6024:	31 2c       	mov	r3, r1
    6026:	24 ff       	sbrs	r18, 4
    6028:	12 c0       	rjmp	.+36     	; 0x604e <vfprintf+0x338>
    602a:	b7 01       	movw	r22, r14
    602c:	80 e3       	ldi	r24, 0x30	; 48
    602e:	90 e0       	ldi	r25, 0x00	; 0
    6030:	2c 87       	std	Y+12, r18	; 0x0c
    6032:	0e 94 81 30 	call	0x6102	; 0x6102 <fputc>
    6036:	2c 85       	ldd	r18, Y+12	; 0x0c
    6038:	22 ff       	sbrs	r18, 2
    603a:	17 c0       	rjmp	.+46     	; 0x606a <vfprintf+0x354>
    603c:	21 ff       	sbrs	r18, 1
    603e:	03 c0       	rjmp	.+6      	; 0x6046 <vfprintf+0x330>
    6040:	88 e5       	ldi	r24, 0x58	; 88
    6042:	90 e0       	ldi	r25, 0x00	; 0
    6044:	02 c0       	rjmp	.+4      	; 0x604a <vfprintf+0x334>
    6046:	88 e7       	ldi	r24, 0x78	; 120
    6048:	90 e0       	ldi	r25, 0x00	; 0
    604a:	b7 01       	movw	r22, r14
    604c:	0c c0       	rjmp	.+24     	; 0x6066 <vfprintf+0x350>
    604e:	82 2f       	mov	r24, r18
    6050:	86 78       	andi	r24, 0x86	; 134
    6052:	59 f0       	breq	.+22     	; 0x606a <vfprintf+0x354>
    6054:	21 fd       	sbrc	r18, 1
    6056:	02 c0       	rjmp	.+4      	; 0x605c <vfprintf+0x346>
    6058:	80 e2       	ldi	r24, 0x20	; 32
    605a:	01 c0       	rjmp	.+2      	; 0x605e <vfprintf+0x348>
    605c:	8b e2       	ldi	r24, 0x2B	; 43
    605e:	27 fd       	sbrc	r18, 7
    6060:	8d e2       	ldi	r24, 0x2D	; 45
    6062:	b7 01       	movw	r22, r14
    6064:	90 e0       	ldi	r25, 0x00	; 0
    6066:	0e 94 81 30 	call	0x6102	; 0x6102 <fputc>
    606a:	a5 14       	cp	r10, r5
    606c:	38 f4       	brcc	.+14     	; 0x607c <vfprintf+0x366>
    606e:	b7 01       	movw	r22, r14
    6070:	80 e3       	ldi	r24, 0x30	; 48
    6072:	90 e0       	ldi	r25, 0x00	; 0
    6074:	0e 94 81 30 	call	0x6102	; 0x6102 <fputc>
    6078:	5a 94       	dec	r5
    607a:	f7 cf       	rjmp	.-18     	; 0x606a <vfprintf+0x354>
    607c:	aa 94       	dec	r10
    607e:	f4 01       	movw	r30, r8
    6080:	ea 0d       	add	r30, r10
    6082:	f1 1d       	adc	r31, r1
    6084:	80 81       	ld	r24, Z
    6086:	b7 01       	movw	r22, r14
    6088:	90 e0       	ldi	r25, 0x00	; 0
    608a:	0e 94 81 30 	call	0x6102	; 0x6102 <fputc>
    608e:	a1 10       	cpse	r10, r1
    6090:	f5 cf       	rjmp	.-22     	; 0x607c <vfprintf+0x366>
    6092:	33 20       	and	r3, r3
    6094:	09 f4       	brne	.+2      	; 0x6098 <vfprintf+0x382>
    6096:	51 ce       	rjmp	.-862    	; 0x5d3a <vfprintf+0x24>
    6098:	b7 01       	movw	r22, r14
    609a:	80 e2       	ldi	r24, 0x20	; 32
    609c:	90 e0       	ldi	r25, 0x00	; 0
    609e:	0e 94 81 30 	call	0x6102	; 0x6102 <fputc>
    60a2:	3a 94       	dec	r3
    60a4:	f6 cf       	rjmp	.-20     	; 0x6092 <vfprintf+0x37c>
    60a6:	f7 01       	movw	r30, r14
    60a8:	86 81       	ldd	r24, Z+6	; 0x06
    60aa:	97 81       	ldd	r25, Z+7	; 0x07
    60ac:	02 c0       	rjmp	.+4      	; 0x60b2 <vfprintf+0x39c>
    60ae:	8f ef       	ldi	r24, 0xFF	; 255
    60b0:	9f ef       	ldi	r25, 0xFF	; 255
    60b2:	2c 96       	adiw	r28, 0x0c	; 12
    60b4:	e2 e1       	ldi	r30, 0x12	; 18
    60b6:	0c 94 ae 31 	jmp	0x635c	; 0x635c <__epilogue_restores__>

000060ba <__eerd_word_m32>:
    60ba:	a8 e1       	ldi	r26, 0x18	; 24
    60bc:	b0 e0       	ldi	r27, 0x00	; 0
    60be:	42 e0       	ldi	r20, 0x02	; 2
    60c0:	50 e0       	ldi	r21, 0x00	; 0
    60c2:	0c 94 13 31 	jmp	0x6226	; 0x6226 <__eerd_blraw_m32>

000060c6 <__eewr_word_m32>:
    60c6:	0e 94 21 31 	call	0x6242	; 0x6242 <__eewr_byte_m32>
    60ca:	27 2f       	mov	r18, r23
    60cc:	0c 94 22 31 	jmp	0x6244	; 0x6244 <__eewr_r18_m32>

000060d0 <__ctype_isfalse>:
    60d0:	99 27       	eor	r25, r25
    60d2:	88 27       	eor	r24, r24

000060d4 <__ctype_istrue>:
    60d4:	08 95       	ret

000060d6 <strnlen_P>:
    60d6:	fc 01       	movw	r30, r24
    60d8:	05 90       	lpm	r0, Z+
    60da:	61 50       	subi	r22, 0x01	; 1
    60dc:	70 40       	sbci	r23, 0x00	; 0
    60de:	01 10       	cpse	r0, r1
    60e0:	d8 f7       	brcc	.-10     	; 0x60d8 <strnlen_P+0x2>
    60e2:	80 95       	com	r24
    60e4:	90 95       	com	r25
    60e6:	8e 0f       	add	r24, r30
    60e8:	9f 1f       	adc	r25, r31
    60ea:	08 95       	ret

000060ec <strnlen>:
    60ec:	fc 01       	movw	r30, r24
    60ee:	61 50       	subi	r22, 0x01	; 1
    60f0:	70 40       	sbci	r23, 0x00	; 0
    60f2:	01 90       	ld	r0, Z+
    60f4:	01 10       	cpse	r0, r1
    60f6:	d8 f7       	brcc	.-10     	; 0x60ee <strnlen+0x2>
    60f8:	80 95       	com	r24
    60fa:	90 95       	com	r25
    60fc:	8e 0f       	add	r24, r30
    60fe:	9f 1f       	adc	r25, r31
    6100:	08 95       	ret

00006102 <fputc>:
    6102:	0f 93       	push	r16
    6104:	1f 93       	push	r17
    6106:	cf 93       	push	r28
    6108:	df 93       	push	r29
    610a:	18 2f       	mov	r17, r24
    610c:	09 2f       	mov	r16, r25
    610e:	eb 01       	movw	r28, r22
    6110:	8b 81       	ldd	r24, Y+3	; 0x03
    6112:	81 fd       	sbrc	r24, 1
    6114:	03 c0       	rjmp	.+6      	; 0x611c <fputc+0x1a>
    6116:	8f ef       	ldi	r24, 0xFF	; 255
    6118:	9f ef       	ldi	r25, 0xFF	; 255
    611a:	20 c0       	rjmp	.+64     	; 0x615c <fputc+0x5a>
    611c:	82 ff       	sbrs	r24, 2
    611e:	10 c0       	rjmp	.+32     	; 0x6140 <fputc+0x3e>
    6120:	4e 81       	ldd	r20, Y+6	; 0x06
    6122:	5f 81       	ldd	r21, Y+7	; 0x07
    6124:	2c 81       	ldd	r18, Y+4	; 0x04
    6126:	3d 81       	ldd	r19, Y+5	; 0x05
    6128:	42 17       	cp	r20, r18
    612a:	53 07       	cpc	r21, r19
    612c:	7c f4       	brge	.+30     	; 0x614c <fputc+0x4a>
    612e:	e8 81       	ld	r30, Y
    6130:	f9 81       	ldd	r31, Y+1	; 0x01
    6132:	9f 01       	movw	r18, r30
    6134:	2f 5f       	subi	r18, 0xFF	; 255
    6136:	3f 4f       	sbci	r19, 0xFF	; 255
    6138:	39 83       	std	Y+1, r19	; 0x01
    613a:	28 83       	st	Y, r18
    613c:	10 83       	st	Z, r17
    613e:	06 c0       	rjmp	.+12     	; 0x614c <fputc+0x4a>
    6140:	e8 85       	ldd	r30, Y+8	; 0x08
    6142:	f9 85       	ldd	r31, Y+9	; 0x09
    6144:	81 2f       	mov	r24, r17
    6146:	09 95       	icall
    6148:	89 2b       	or	r24, r25
    614a:	29 f7       	brne	.-54     	; 0x6116 <fputc+0x14>
    614c:	2e 81       	ldd	r18, Y+6	; 0x06
    614e:	3f 81       	ldd	r19, Y+7	; 0x07
    6150:	2f 5f       	subi	r18, 0xFF	; 255
    6152:	3f 4f       	sbci	r19, 0xFF	; 255
    6154:	3f 83       	std	Y+7, r19	; 0x07
    6156:	2e 83       	std	Y+6, r18	; 0x06
    6158:	81 2f       	mov	r24, r17
    615a:	90 2f       	mov	r25, r16
    615c:	df 91       	pop	r29
    615e:	cf 91       	pop	r28
    6160:	1f 91       	pop	r17
    6162:	0f 91       	pop	r16
    6164:	08 95       	ret

00006166 <__ultoa_invert>:
    6166:	fa 01       	movw	r30, r20
    6168:	aa 27       	eor	r26, r26
    616a:	28 30       	cpi	r18, 0x08	; 8
    616c:	51 f1       	breq	.+84     	; 0x61c2 <__ultoa_invert+0x5c>
    616e:	20 31       	cpi	r18, 0x10	; 16
    6170:	81 f1       	breq	.+96     	; 0x61d2 <__ultoa_invert+0x6c>
    6172:	e8 94       	clt
    6174:	6f 93       	push	r22
    6176:	6e 7f       	andi	r22, 0xFE	; 254
    6178:	6e 5f       	subi	r22, 0xFE	; 254
    617a:	7f 4f       	sbci	r23, 0xFF	; 255
    617c:	8f 4f       	sbci	r24, 0xFF	; 255
    617e:	9f 4f       	sbci	r25, 0xFF	; 255
    6180:	af 4f       	sbci	r26, 0xFF	; 255
    6182:	b1 e0       	ldi	r27, 0x01	; 1
    6184:	3e d0       	rcall	.+124    	; 0x6202 <__ultoa_invert+0x9c>
    6186:	b4 e0       	ldi	r27, 0x04	; 4
    6188:	3c d0       	rcall	.+120    	; 0x6202 <__ultoa_invert+0x9c>
    618a:	67 0f       	add	r22, r23
    618c:	78 1f       	adc	r23, r24
    618e:	89 1f       	adc	r24, r25
    6190:	9a 1f       	adc	r25, r26
    6192:	a1 1d       	adc	r26, r1
    6194:	68 0f       	add	r22, r24
    6196:	79 1f       	adc	r23, r25
    6198:	8a 1f       	adc	r24, r26
    619a:	91 1d       	adc	r25, r1
    619c:	a1 1d       	adc	r26, r1
    619e:	6a 0f       	add	r22, r26
    61a0:	71 1d       	adc	r23, r1
    61a2:	81 1d       	adc	r24, r1
    61a4:	91 1d       	adc	r25, r1
    61a6:	a1 1d       	adc	r26, r1
    61a8:	20 d0       	rcall	.+64     	; 0x61ea <__ultoa_invert+0x84>
    61aa:	09 f4       	brne	.+2      	; 0x61ae <__ultoa_invert+0x48>
    61ac:	68 94       	set
    61ae:	3f 91       	pop	r19
    61b0:	2a e0       	ldi	r18, 0x0A	; 10
    61b2:	26 9f       	mul	r18, r22
    61b4:	11 24       	eor	r1, r1
    61b6:	30 19       	sub	r19, r0
    61b8:	30 5d       	subi	r19, 0xD0	; 208
    61ba:	31 93       	st	Z+, r19
    61bc:	de f6       	brtc	.-74     	; 0x6174 <__ultoa_invert+0xe>
    61be:	cf 01       	movw	r24, r30
    61c0:	08 95       	ret
    61c2:	46 2f       	mov	r20, r22
    61c4:	47 70       	andi	r20, 0x07	; 7
    61c6:	40 5d       	subi	r20, 0xD0	; 208
    61c8:	41 93       	st	Z+, r20
    61ca:	b3 e0       	ldi	r27, 0x03	; 3
    61cc:	0f d0       	rcall	.+30     	; 0x61ec <__ultoa_invert+0x86>
    61ce:	c9 f7       	brne	.-14     	; 0x61c2 <__ultoa_invert+0x5c>
    61d0:	f6 cf       	rjmp	.-20     	; 0x61be <__ultoa_invert+0x58>
    61d2:	46 2f       	mov	r20, r22
    61d4:	4f 70       	andi	r20, 0x0F	; 15
    61d6:	40 5d       	subi	r20, 0xD0	; 208
    61d8:	4a 33       	cpi	r20, 0x3A	; 58
    61da:	18 f0       	brcs	.+6      	; 0x61e2 <__ultoa_invert+0x7c>
    61dc:	49 5d       	subi	r20, 0xD9	; 217
    61de:	31 fd       	sbrc	r19, 1
    61e0:	40 52       	subi	r20, 0x20	; 32
    61e2:	41 93       	st	Z+, r20
    61e4:	02 d0       	rcall	.+4      	; 0x61ea <__ultoa_invert+0x84>
    61e6:	a9 f7       	brne	.-22     	; 0x61d2 <__ultoa_invert+0x6c>
    61e8:	ea cf       	rjmp	.-44     	; 0x61be <__ultoa_invert+0x58>
    61ea:	b4 e0       	ldi	r27, 0x04	; 4
    61ec:	a6 95       	lsr	r26
    61ee:	97 95       	ror	r25
    61f0:	87 95       	ror	r24
    61f2:	77 95       	ror	r23
    61f4:	67 95       	ror	r22
    61f6:	ba 95       	dec	r27
    61f8:	c9 f7       	brne	.-14     	; 0x61ec <__ultoa_invert+0x86>
    61fa:	00 97       	sbiw	r24, 0x00	; 0
    61fc:	61 05       	cpc	r22, r1
    61fe:	71 05       	cpc	r23, r1
    6200:	08 95       	ret
    6202:	9b 01       	movw	r18, r22
    6204:	ac 01       	movw	r20, r24
    6206:	0a 2e       	mov	r0, r26
    6208:	06 94       	lsr	r0
    620a:	57 95       	ror	r21
    620c:	47 95       	ror	r20
    620e:	37 95       	ror	r19
    6210:	27 95       	ror	r18
    6212:	ba 95       	dec	r27
    6214:	c9 f7       	brne	.-14     	; 0x6208 <__ultoa_invert+0xa2>
    6216:	62 0f       	add	r22, r18
    6218:	73 1f       	adc	r23, r19
    621a:	84 1f       	adc	r24, r20
    621c:	95 1f       	adc	r25, r21
    621e:	a0 1d       	adc	r26, r0
    6220:	08 95       	ret

00006222 <__eerd_block_m32>:
    6222:	dc 01       	movw	r26, r24
    6224:	cb 01       	movw	r24, r22

00006226 <__eerd_blraw_m32>:
    6226:	fc 01       	movw	r30, r24
    6228:	e1 99       	sbic	0x1c, 1	; 28
    622a:	fe cf       	rjmp	.-4      	; 0x6228 <__eerd_blraw_m32+0x2>
    622c:	06 c0       	rjmp	.+12     	; 0x623a <__eerd_blraw_m32+0x14>
    622e:	ff bb       	out	0x1f, r31	; 31
    6230:	ee bb       	out	0x1e, r30	; 30
    6232:	e0 9a       	sbi	0x1c, 0	; 28
    6234:	31 96       	adiw	r30, 0x01	; 1
    6236:	0d b2       	in	r0, 0x1d	; 29
    6238:	0d 92       	st	X+, r0
    623a:	41 50       	subi	r20, 0x01	; 1
    623c:	50 40       	sbci	r21, 0x00	; 0
    623e:	b8 f7       	brcc	.-18     	; 0x622e <__eerd_blraw_m32+0x8>
    6240:	08 95       	ret

00006242 <__eewr_byte_m32>:
    6242:	26 2f       	mov	r18, r22

00006244 <__eewr_r18_m32>:
    6244:	e1 99       	sbic	0x1c, 1	; 28
    6246:	fe cf       	rjmp	.-4      	; 0x6244 <__eewr_r18_m32>
    6248:	9f bb       	out	0x1f, r25	; 31
    624a:	8e bb       	out	0x1e, r24	; 30
    624c:	2d bb       	out	0x1d, r18	; 29
    624e:	0f b6       	in	r0, 0x3f	; 63
    6250:	f8 94       	cli
    6252:	e2 9a       	sbi	0x1c, 2	; 28
    6254:	e1 9a       	sbi	0x1c, 1	; 28
    6256:	0f be       	out	0x3f, r0	; 63
    6258:	01 96       	adiw	r24, 0x01	; 1
    625a:	08 95       	ret

0000625c <__mulsi3>:
    625c:	db 01       	movw	r26, r22
    625e:	8f 93       	push	r24
    6260:	9f 93       	push	r25
    6262:	0e 94 7f 31 	call	0x62fe	; 0x62fe <__muluhisi3>
    6266:	bf 91       	pop	r27
    6268:	af 91       	pop	r26
    626a:	a2 9f       	mul	r26, r18
    626c:	80 0d       	add	r24, r0
    626e:	91 1d       	adc	r25, r1
    6270:	a3 9f       	mul	r26, r19
    6272:	90 0d       	add	r25, r0
    6274:	b2 9f       	mul	r27, r18
    6276:	90 0d       	add	r25, r0
    6278:	11 24       	eor	r1, r1
    627a:	08 95       	ret

0000627c <__udivmodsi4>:
    627c:	a1 e2       	ldi	r26, 0x21	; 33
    627e:	1a 2e       	mov	r1, r26
    6280:	aa 1b       	sub	r26, r26
    6282:	bb 1b       	sub	r27, r27
    6284:	fd 01       	movw	r30, r26
    6286:	0d c0       	rjmp	.+26     	; 0x62a2 <__udivmodsi4_ep>

00006288 <__udivmodsi4_loop>:
    6288:	aa 1f       	adc	r26, r26
    628a:	bb 1f       	adc	r27, r27
    628c:	ee 1f       	adc	r30, r30
    628e:	ff 1f       	adc	r31, r31
    6290:	a2 17       	cp	r26, r18
    6292:	b3 07       	cpc	r27, r19
    6294:	e4 07       	cpc	r30, r20
    6296:	f5 07       	cpc	r31, r21
    6298:	20 f0       	brcs	.+8      	; 0x62a2 <__udivmodsi4_ep>
    629a:	a2 1b       	sub	r26, r18
    629c:	b3 0b       	sbc	r27, r19
    629e:	e4 0b       	sbc	r30, r20
    62a0:	f5 0b       	sbc	r31, r21

000062a2 <__udivmodsi4_ep>:
    62a2:	66 1f       	adc	r22, r22
    62a4:	77 1f       	adc	r23, r23
    62a6:	88 1f       	adc	r24, r24
    62a8:	99 1f       	adc	r25, r25
    62aa:	1a 94       	dec	r1
    62ac:	69 f7       	brne	.-38     	; 0x6288 <__udivmodsi4_loop>
    62ae:	60 95       	com	r22
    62b0:	70 95       	com	r23
    62b2:	80 95       	com	r24
    62b4:	90 95       	com	r25
    62b6:	9b 01       	movw	r18, r22
    62b8:	ac 01       	movw	r20, r24
    62ba:	bd 01       	movw	r22, r26
    62bc:	cf 01       	movw	r24, r30
    62be:	08 95       	ret

000062c0 <__divmodsi4>:
    62c0:	05 2e       	mov	r0, r21
    62c2:	97 fb       	bst	r25, 7
    62c4:	1e f4       	brtc	.+6      	; 0x62cc <__divmodsi4+0xc>
    62c6:	00 94       	com	r0
    62c8:	0e 94 77 31 	call	0x62ee	; 0x62ee <__negsi2>
    62cc:	57 fd       	sbrc	r21, 7
    62ce:	07 d0       	rcall	.+14     	; 0x62de <__divmodsi4_neg2>
    62d0:	0e 94 3e 31 	call	0x627c	; 0x627c <__udivmodsi4>
    62d4:	07 fc       	sbrc	r0, 7
    62d6:	03 d0       	rcall	.+6      	; 0x62de <__divmodsi4_neg2>
    62d8:	4e f4       	brtc	.+18     	; 0x62ec <__divmodsi4_exit>
    62da:	0c 94 77 31 	jmp	0x62ee	; 0x62ee <__negsi2>

000062de <__divmodsi4_neg2>:
    62de:	50 95       	com	r21
    62e0:	40 95       	com	r20
    62e2:	30 95       	com	r19
    62e4:	21 95       	neg	r18
    62e6:	3f 4f       	sbci	r19, 0xFF	; 255
    62e8:	4f 4f       	sbci	r20, 0xFF	; 255
    62ea:	5f 4f       	sbci	r21, 0xFF	; 255

000062ec <__divmodsi4_exit>:
    62ec:	08 95       	ret

000062ee <__negsi2>:
    62ee:	90 95       	com	r25
    62f0:	80 95       	com	r24
    62f2:	70 95       	com	r23
    62f4:	61 95       	neg	r22
    62f6:	7f 4f       	sbci	r23, 0xFF	; 255
    62f8:	8f 4f       	sbci	r24, 0xFF	; 255
    62fa:	9f 4f       	sbci	r25, 0xFF	; 255
    62fc:	08 95       	ret

000062fe <__muluhisi3>:
    62fe:	0e 94 c9 31 	call	0x6392	; 0x6392 <__umulhisi3>
    6302:	a5 9f       	mul	r26, r21
    6304:	90 0d       	add	r25, r0
    6306:	b4 9f       	mul	r27, r20
    6308:	90 0d       	add	r25, r0
    630a:	a4 9f       	mul	r26, r20
    630c:	80 0d       	add	r24, r0
    630e:	91 1d       	adc	r25, r1
    6310:	11 24       	eor	r1, r1
    6312:	08 95       	ret

00006314 <__mulshisi3>:
    6314:	b7 ff       	sbrs	r27, 7
    6316:	0c 94 7f 31 	jmp	0x62fe	; 0x62fe <__muluhisi3>

0000631a <__mulohisi3>:
    631a:	0e 94 7f 31 	call	0x62fe	; 0x62fe <__muluhisi3>
    631e:	82 1b       	sub	r24, r18
    6320:	93 0b       	sbc	r25, r19
    6322:	08 95       	ret

00006324 <__prologue_saves__>:
    6324:	2f 92       	push	r2
    6326:	3f 92       	push	r3
    6328:	4f 92       	push	r4
    632a:	5f 92       	push	r5
    632c:	6f 92       	push	r6
    632e:	7f 92       	push	r7
    6330:	8f 92       	push	r8
    6332:	9f 92       	push	r9
    6334:	af 92       	push	r10
    6336:	bf 92       	push	r11
    6338:	cf 92       	push	r12
    633a:	df 92       	push	r13
    633c:	ef 92       	push	r14
    633e:	ff 92       	push	r15
    6340:	0f 93       	push	r16
    6342:	1f 93       	push	r17
    6344:	cf 93       	push	r28
    6346:	df 93       	push	r29
    6348:	cd b7       	in	r28, 0x3d	; 61
    634a:	de b7       	in	r29, 0x3e	; 62
    634c:	ca 1b       	sub	r28, r26
    634e:	db 0b       	sbc	r29, r27
    6350:	0f b6       	in	r0, 0x3f	; 63
    6352:	f8 94       	cli
    6354:	de bf       	out	0x3e, r29	; 62
    6356:	0f be       	out	0x3f, r0	; 63
    6358:	cd bf       	out	0x3d, r28	; 61
    635a:	09 94       	ijmp

0000635c <__epilogue_restores__>:
    635c:	2a 88       	ldd	r2, Y+18	; 0x12
    635e:	39 88       	ldd	r3, Y+17	; 0x11
    6360:	48 88       	ldd	r4, Y+16	; 0x10
    6362:	5f 84       	ldd	r5, Y+15	; 0x0f
    6364:	6e 84       	ldd	r6, Y+14	; 0x0e
    6366:	7d 84       	ldd	r7, Y+13	; 0x0d
    6368:	8c 84       	ldd	r8, Y+12	; 0x0c
    636a:	9b 84       	ldd	r9, Y+11	; 0x0b
    636c:	aa 84       	ldd	r10, Y+10	; 0x0a
    636e:	b9 84       	ldd	r11, Y+9	; 0x09
    6370:	c8 84       	ldd	r12, Y+8	; 0x08
    6372:	df 80       	ldd	r13, Y+7	; 0x07
    6374:	ee 80       	ldd	r14, Y+6	; 0x06
    6376:	fd 80       	ldd	r15, Y+5	; 0x05
    6378:	0c 81       	ldd	r16, Y+4	; 0x04
    637a:	1b 81       	ldd	r17, Y+3	; 0x03
    637c:	aa 81       	ldd	r26, Y+2	; 0x02
    637e:	b9 81       	ldd	r27, Y+1	; 0x01
    6380:	ce 0f       	add	r28, r30
    6382:	d1 1d       	adc	r29, r1
    6384:	0f b6       	in	r0, 0x3f	; 63
    6386:	f8 94       	cli
    6388:	de bf       	out	0x3e, r29	; 62
    638a:	0f be       	out	0x3f, r0	; 63
    638c:	cd bf       	out	0x3d, r28	; 61
    638e:	ed 01       	movw	r28, r26
    6390:	08 95       	ret

00006392 <__umulhisi3>:
    6392:	a2 9f       	mul	r26, r18
    6394:	b0 01       	movw	r22, r0
    6396:	b3 9f       	mul	r27, r19
    6398:	c0 01       	movw	r24, r0
    639a:	a3 9f       	mul	r26, r19
    639c:	70 0d       	add	r23, r0
    639e:	81 1d       	adc	r24, r1
    63a0:	11 24       	eor	r1, r1
    63a2:	91 1d       	adc	r25, r1
    63a4:	b2 9f       	mul	r27, r18
    63a6:	70 0d       	add	r23, r0
    63a8:	81 1d       	adc	r24, r1
    63aa:	11 24       	eor	r1, r1
    63ac:	91 1d       	adc	r25, r1
    63ae:	08 95       	ret

000063b0 <_exit>:
    63b0:	f8 94       	cli

000063b2 <__stop_program>:
    63b2:	ff cf       	rjmp	.-2      	; 0x63b2 <__stop_program>
