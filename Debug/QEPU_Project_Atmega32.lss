
QEPU_Project_Atmega32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d20  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00000d20  00000dd4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  00800080  00800080  00000df4  2**0
                  ALLOC
  3 .eeprom       00000002  00810000  00810000  00000df4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  00000df6  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000368  00000000  00000000  00000e52  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000d98c  00000000  00000000  000011ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001407  00000000  00000000  0000eb46  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001310  00000000  00000000  0000ff4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000013c4  00000000  00000000  00011260  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f5a  00000000  00000000  00012624  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000668c  00000000  00000000  0001357e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000378  00000000  00000000  00019c0a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2b 00 	jmp	0x56	; 0x56 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

00000054 <__ctors_start>:
  54:	55 00       	.word	0x0055	; ????

00000056 <__ctors_end>:
  56:	11 24       	eor	r1, r1
  58:	1f be       	out	0x3f, r1	; 63
  5a:	cf e5       	ldi	r28, 0x5F	; 95
  5c:	d8 e0       	ldi	r29, 0x08	; 8
  5e:	de bf       	out	0x3e, r29	; 62
  60:	cd bf       	out	0x3d, r28	; 61

00000062 <__do_copy_data>:
  62:	10 e0       	ldi	r17, 0x00	; 0
  64:	a0 e6       	ldi	r26, 0x60	; 96
  66:	b0 e0       	ldi	r27, 0x00	; 0
  68:	e0 e2       	ldi	r30, 0x20	; 32
  6a:	fd e0       	ldi	r31, 0x0D	; 13
  6c:	02 c0       	rjmp	.+4      	; 0x72 <__do_copy_data+0x10>
  6e:	05 90       	lpm	r0, Z+
  70:	0d 92       	st	X+, r0
  72:	a0 38       	cpi	r26, 0x80	; 128
  74:	b1 07       	cpc	r27, r17
  76:	d9 f7       	brne	.-10     	; 0x6e <__do_copy_data+0xc>

00000078 <__do_clear_bss>:
  78:	20 e0       	ldi	r18, 0x00	; 0
  7a:	a0 e8       	ldi	r26, 0x80	; 128
  7c:	b0 e0       	ldi	r27, 0x00	; 0
  7e:	01 c0       	rjmp	.+2      	; 0x82 <.do_clear_bss_start>

00000080 <.do_clear_bss_loop>:
  80:	1d 92       	st	X+, r1

00000082 <.do_clear_bss_start>:
  82:	a5 38       	cpi	r26, 0x85	; 133
  84:	b2 07       	cpc	r27, r18
  86:	e1 f7       	brne	.-8      	; 0x80 <.do_clear_bss_loop>

00000088 <__do_global_ctors>:
  88:	10 e0       	ldi	r17, 0x00	; 0
  8a:	c6 e5       	ldi	r28, 0x56	; 86
  8c:	d0 e0       	ldi	r29, 0x00	; 0
  8e:	04 c0       	rjmp	.+8      	; 0x98 <__do_global_ctors+0x10>
  90:	22 97       	sbiw	r28, 0x02	; 2
  92:	fe 01       	movw	r30, r28
  94:	0e 94 92 02 	call	0x524	; 0x524 <__tablejump__>
  98:	c4 35       	cpi	r28, 0x54	; 84
  9a:	d1 07       	cpc	r29, r17
  9c:	c9 f7       	brne	.-14     	; 0x90 <__do_global_ctors+0x8>
  9e:	0e 94 5a 00 	call	0xb4	; 0xb4 <main>
  a2:	0c 94 8e 06 	jmp	0xd1c	; 0xd1c <_exit>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <_GLOBAL__sub_I__ZN5GatesC2Ev>:
  aa:	80 e8       	ldi	r24, 0x80	; 128
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	0e 94 36 02 	call	0x46c	; 0x46c <_ZN6SerialC1Ev>
  b2:	08 95       	ret

000000b4 <main>:
  b4:	cf 93       	push	r28
  b6:	df 93       	push	r29
  b8:	00 d0       	rcall	.+0      	; 0xba <main+0x6>
  ba:	00 d0       	rcall	.+0      	; 0xbc <main+0x8>
  bc:	00 d0       	rcall	.+0      	; 0xbe <main+0xa>
  be:	cd b7       	in	r28, 0x3d	; 61
  c0:	de b7       	in	r29, 0x3e	; 62
  c2:	ce 01       	movw	r24, r28
  c4:	01 96       	adiw	r24, 0x01	; 1
  c6:	0e 94 92 00 	call	0x124	; 0x124 <_ZN4SRAMC1Ev>
  ca:	61 e0       	ldi	r22, 0x01	; 1
  cc:	70 e0       	ldi	r23, 0x00	; 0
  ce:	ce 01       	movw	r24, r28
  d0:	01 96       	adiw	r24, 0x01	; 1
  d2:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_ZN4SRAM4pushEi>
  d6:	62 e0       	ldi	r22, 0x02	; 2
  d8:	70 e0       	ldi	r23, 0x00	; 0
  da:	ce 01       	movw	r24, r28
  dc:	01 96       	adiw	r24, 0x01	; 1
  de:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_ZN4SRAM4pushEi>
  e2:	65 e0       	ldi	r22, 0x05	; 5
  e4:	70 e0       	ldi	r23, 0x00	; 0
  e6:	ce 01       	movw	r24, r28
  e8:	01 96       	adiw	r24, 0x01	; 1
  ea:	0e 94 c9 01 	call	0x392	; 0x392 <_ZN4SRAM7dumpmemEi>
  ee:	ce 01       	movw	r24, r28
  f0:	01 96       	adiw	r24, 0x01	; 1
  f2:	0e 94 61 01 	call	0x2c2	; 0x2c2 <_ZN4SRAM3popEv>
  f6:	ce 01       	movw	r24, r28
  f8:	01 96       	adiw	r24, 0x01	; 1
  fa:	0e 94 61 01 	call	0x2c2	; 0x2c2 <_ZN4SRAM3popEv>
  fe:	65 e0       	ldi	r22, 0x05	; 5
 100:	70 e0       	ldi	r23, 0x00	; 0
 102:	ce 01       	movw	r24, r28
 104:	01 96       	adiw	r24, 0x01	; 1
 106:	0e 94 c9 01 	call	0x392	; 0x392 <_ZN4SRAM7dumpmemEi>
 10a:	63 e0       	ldi	r22, 0x03	; 3
 10c:	70 e0       	ldi	r23, 0x00	; 0
 10e:	ce 01       	movw	r24, r28
 110:	01 96       	adiw	r24, 0x01	; 1
 112:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_ZN4SRAM4pushEi>
 116:	65 e0       	ldi	r22, 0x05	; 5
 118:	70 e0       	ldi	r23, 0x00	; 0
 11a:	ce 01       	movw	r24, r28
 11c:	01 96       	adiw	r24, 0x01	; 1
 11e:	0e 94 c9 01 	call	0x392	; 0x392 <_ZN4SRAM7dumpmemEi>
 122:	ff cf       	rjmp	.-2      	; 0x122 <main+0x6e>

00000124 <_ZN4SRAMC1Ev>:
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	ec 01       	movw	r28, r24
 12a:	03 96       	adiw	r24, 0x03	; 3
 12c:	0e 94 36 02 	call	0x46c	; 0x46c <_ZN6SerialC1Ev>
 130:	8f ef       	ldi	r24, 0xFF	; 255
 132:	84 bb       	out	0x14, r24	; 20
 134:	84 e1       	ldi	r24, 0x14	; 20
		case 0x07: /*POP (pop)*/
			set_register(op1,sram.pop());
			break;
		case 0x08: /*PSH (push)*/
			sram.push(fetch_register(op1));
			sram.dumpmem(5);
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	99 83       	std	Y+1, r25	; 0x01
 13a:	88 83       	st	Y, r24
 13c:	88 e3       	ldi	r24, 0x38	; 56
			break;
 13e:	90 e0       	ldi	r25, 0x00	; 0
		case 0x09: /*CMT (constantmovtheta)*/
			write(op1,THE,op2);
 140:	9d 83       	std	Y+5, r25	; 0x05
 142:	8c 83       	std	Y+4, r24	; 0x04
 144:	df 91       	pop	r29
 146:	cf 91       	pop	r28
 148:	08 95       	ret

0000014a <_ZN4SRAM10setctrlpinEii>:
 14a:	75 b3       	in	r23, 0x15	; 21
 14c:	21 e0       	ldi	r18, 0x01	; 1
 14e:	30 e0       	ldi	r19, 0x00	; 0
			break;
 150:	c9 01       	movw	r24, r18
		case 0x0A: /*CMP (constantmovphi)*/
			write(op1,PHI,op2);
 152:	06 2e       	mov	r0, r22
 154:	02 c0       	rjmp	.+4      	; 0x15a <_ZN4SRAM10setctrlpinEii+0x10>
 156:	88 0f       	add	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	0a 94       	dec	r0
 15c:	e2 f7       	brpl	.-8      	; 0x156 <_ZN4SRAM10setctrlpinEii+0xc>
 15e:	80 95       	com	r24
 160:	87 23       	and	r24, r23
			break;
 162:	85 bb       	out	0x15, r24	; 21
			break;
		case 0x0D: /*INT (interrupt)*/
			//NEEDS TABLE SYSTEM
			break;
		case 0x0E: /*JMP (jump)*/ 
			program_counter=op1-1; 
 164:	85 b3       	in	r24, 0x15	; 21
 166:	02 c0       	rjmp	.+4      	; 0x16c <_ZN4SRAM10setctrlpinEii+0x22>
 168:	44 0f       	add	r20, r20
 16a:	55 1f       	adc	r21, r21
 16c:	6a 95       	dec	r22
 16e:	e2 f7       	brpl	.-8      	; 0x168 <_ZN4SRAM10setctrlpinEii+0x1e>
			break;
 170:	48 2b       	or	r20, r24
		case 0x0F: /*DLY (delay)*/
			utils.delay(op1);
 172:	45 bb       	out	0x15, r20	; 21
 174:	08 95       	ret

00000176 <_ZN4SRAM17memory_managementEv>:
 176:	fc 01       	movw	r30, r24
 178:	80 81       	ld	r24, Z
 17a:	91 81       	ldd	r25, Z+1	; 0x01
			break;
 17c:	24 81       	ldd	r18, Z+4	; 0x04
		case 0x10: /*NOP (nop) - DOES NOTHING*/ 
			break;
		case 0x11: /*HLT (halt)*/ 
			program_counter=program_counter_maximum;
 17e:	35 81       	ldd	r19, Z+5	; 0x05
 180:	28 17       	cp	r18, r24
 182:	39 07       	cpc	r19, r25
 184:	34 f0       	brlt	.+12     	; 0x192 <_ZN4SRAM17memory_managementEv+0x1c>
 186:	81 30       	cpi	r24, 0x01	; 1
			break;
 188:	91 40       	sbci	r25, 0x01	; 1
		//QUANTUM FUNCTIONS:
		//1 QUBIT GATES -
		case 0x12: // X GATE
			newthephi=gates.X(read(op1,THE,false),read(op1,PHI,false));
 18a:	18 f4       	brcc	.+6      	; 0x192 <_ZN4SRAM17memory_managementEv+0x1c>
 18c:	21 30       	cpi	r18, 0x01	; 1
 18e:	31 40       	sbci	r19, 0x01	; 1
 190:	40 f0       	brcs	.+16     	; 0x1a2 <_ZN4SRAM17memory_managementEv+0x2c>
 192:	84 e1       	ldi	r24, 0x14	; 20
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	91 83       	std	Z+1, r25	; 0x01
 198:	80 83       	st	Z, r24
 19a:	88 e3       	ldi	r24, 0x38	; 56
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	95 83       	std	Z+5, r25	; 0x05
 1a0:	84 83       	std	Z+4, r24	; 0x04
 1a2:	08 95       	ret

000001a4 <_ZN4SRAM4readEa>:
 1a4:	0f 93       	push	r16
 1a6:	1f 93       	push	r17
 1a8:	cf 93       	push	r28
 1aa:	df 93       	push	r29
 1ac:	ec 01       	movw	r28, r24
 1ae:	06 2f       	mov	r16, r22
 1b0:	0e 94 bb 00 	call	0x176	; 0x176 <_ZN4SRAM17memory_managementEv>
 1b4:	1f ef       	ldi	r17, 0xFF	; 255
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
 1b6:	1a bb       	out	0x1a, r17	; 26
 1b8:	0b bb       	out	0x1b, r16	; 27
 1ba:	17 ba       	out	0x17, r1	; 23
 1bc:	41 e0       	ldi	r20, 0x01	; 1
 1be:	50 e0       	ldi	r21, 0x00	; 0
 1c0:	66 e0       	ldi	r22, 0x06	; 6
 1c2:	70 e0       	ldi	r23, 0x00	; 0
 1c4:	ce 01       	movw	r24, r28
 1c6:	0e 94 a5 00 	call	0x14a	; 0x14a <_ZN4SRAM10setctrlpinEii>
 1ca:	06 b3       	in	r16, 0x16	; 22
 1cc:	40 e0       	ldi	r20, 0x00	; 0
 1ce:	50 e0       	ldi	r21, 0x00	; 0
 1d0:	66 e0       	ldi	r22, 0x06	; 6
 1d2:	70 e0       	ldi	r23, 0x00	; 0
 1d4:	ce 01       	movw	r24, r28
 1d6:	0e 94 a5 00 	call	0x14a	; 0x14a <_ZN4SRAM10setctrlpinEii>
			break;
 1da:	17 bb       	out	0x17, r17	; 23
		case 0x13: // Y GATE
			newthephi=gates.Y(read(op1,THE,false),read(op1,PHI,false));
 1dc:	1b ba       	out	0x1b, r1	; 27
 1de:	80 2f       	mov	r24, r16
 1e0:	df 91       	pop	r29
 1e2:	cf 91       	pop	r28
 1e4:	1f 91       	pop	r17
 1e6:	0f 91       	pop	r16
 1e8:	08 95       	ret

000001ea <_ZN4SRAM9read_sramEv>:
 1ea:	cf 92       	push	r12
 1ec:	df 92       	push	r13
 1ee:	ef 92       	push	r14
 1f0:	ff 92       	push	r15
 1f2:	0f 93       	push	r16
 1f4:	1f 93       	push	r17
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
 1fa:	cd b7       	in	r28, 0x3d	; 61
 1fc:	de b7       	in	r29, 0x3e	; 62
 1fe:	d2 50       	subi	r29, 0x02	; 2
 200:	0f b6       	in	r0, 0x3f	; 63
 202:	f8 94       	cli
 204:	de bf       	out	0x3e, r29	; 62
 206:	0f be       	out	0x3f, r0	; 63
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
 208:	cd bf       	out	0x3d, r28	; 61
 20a:	7c 01       	movw	r14, r24
 20c:	fc 01       	movw	r30, r24
 20e:	00 81       	ld	r16, Z
 210:	11 81       	ldd	r17, Z+1	; 0x01
 212:	84 81       	ldd	r24, Z+4	; 0x04
 214:	95 81       	ldd	r25, Z+5	; 0x05
 216:	08 17       	cp	r16, r24
 218:	19 07       	cpc	r17, r25
 21a:	e4 f4       	brge	.+56     	; 0x254 <_ZN4SRAM9read_sramEv+0x6a>
 21c:	68 01       	movw	r12, r16
 21e:	cc 0c       	add	r12, r12
 220:	dd 1c       	adc	r13, r13
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	8c 0f       	add	r24, r28
 228:	9d 1f       	adc	r25, r29
 22a:	c8 0e       	add	r12, r24
			break;
 22c:	d9 1e       	adc	r13, r25
		case 0x14: // Z GATE
			newthephi=gates.Z(read(op1,THE,false),read(op1,PHI,false));
 22e:	60 2f       	mov	r22, r16
 230:	c7 01       	movw	r24, r14
 232:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_ZN4SRAM4readEa>
 236:	99 27       	eor	r25, r25
 238:	87 fd       	sbrc	r24, 7
 23a:	90 95       	com	r25
 23c:	f6 01       	movw	r30, r12
 23e:	81 93       	st	Z+, r24
 240:	91 93       	st	Z+, r25
 242:	6f 01       	movw	r12, r30
 244:	0f 5f       	subi	r16, 0xFF	; 255
 246:	1f 4f       	sbci	r17, 0xFF	; 255
 248:	f7 01       	movw	r30, r14
 24a:	84 81       	ldd	r24, Z+4	; 0x04
 24c:	95 81       	ldd	r25, Z+5	; 0x05
 24e:	08 17       	cp	r16, r24
 250:	19 07       	cpc	r17, r25
 252:	6c f3       	brlt	.-38     	; 0x22e <_ZN4SRAM9read_sramEv+0x44>
 254:	ce 01       	movw	r24, r28
 256:	01 96       	adiw	r24, 0x01	; 1
 258:	de 5f       	subi	r29, 0xFE	; 254
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	f8 94       	cli
 25e:	de bf       	out	0x3e, r29	; 62
 260:	0f be       	out	0x3f, r0	; 63
 262:	cd bf       	out	0x3d, r28	; 61
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	1f 91       	pop	r17
 26a:	0f 91       	pop	r16
 26c:	ff 90       	pop	r15
 26e:	ef 90       	pop	r14
 270:	df 90       	pop	r13
 272:	cf 90       	pop	r12
 274:	08 95       	ret

00000276 <_ZN4SRAM5writeEaa>:
 276:	ff 92       	push	r15
 278:	0f 93       	push	r16
 27a:	1f 93       	push	r17
 27c:	cf 93       	push	r28
			break;
 27e:	df 93       	push	r29
		case 0x15: // H GATE
			newthephi=gates.H(read(op1,THE,false),read(op1,PHI,false));
 280:	ec 01       	movw	r28, r24
 282:	f6 2e       	mov	r15, r22
 284:	04 2f       	mov	r16, r20
 286:	0e 94 bb 00 	call	0x176	; 0x176 <_ZN4SRAM17memory_managementEv>
 28a:	1f ef       	ldi	r17, 0xFF	; 255
 28c:	1a bb       	out	0x1a, r17	; 26
 28e:	fb ba       	out	0x1b, r15	; 27
 290:	17 bb       	out	0x17, r17	; 23
 292:	08 bb       	out	0x18, r16	; 24
 294:	41 e0       	ldi	r20, 0x01	; 1
 296:	50 e0       	ldi	r21, 0x00	; 0
 298:	65 e0       	ldi	r22, 0x05	; 5
 29a:	70 e0       	ldi	r23, 0x00	; 0
 29c:	ce 01       	movw	r24, r28
 29e:	0e 94 a5 00 	call	0x14a	; 0x14a <_ZN4SRAM10setctrlpinEii>
 2a2:	40 e0       	ldi	r20, 0x00	; 0
 2a4:	50 e0       	ldi	r21, 0x00	; 0
 2a6:	65 e0       	ldi	r22, 0x05	; 5
 2a8:	70 e0       	ldi	r23, 0x00	; 0
 2aa:	ce 01       	movw	r24, r28
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
 2ac:	0e 94 a5 00 	call	0x14a	; 0x14a <_ZN4SRAM10setctrlpinEii>
 2b0:	1b ba       	out	0x1b, r1	; 27
 2b2:	17 bb       	out	0x17, r17	; 23
 2b4:	18 ba       	out	0x18, r1	; 24
 2b6:	df 91       	pop	r29
 2b8:	cf 91       	pop	r28
 2ba:	1f 91       	pop	r17
 2bc:	0f 91       	pop	r16
 2be:	ff 90       	pop	r15
 2c0:	08 95       	ret

000002c2 <_ZN4SRAM3popEv>:
 2c2:	cf 93       	push	r28
 2c4:	df 93       	push	r29
 2c6:	ec 01       	movw	r28, r24
 2c8:	0e 94 bb 00 	call	0x176	; 0x176 <_ZN4SRAM17memory_managementEv>
 2cc:	88 81       	ld	r24, Y
 2ce:	99 81       	ldd	r25, Y+1	; 0x01
			break;
 2d0:	01 96       	adiw	r24, 0x01	; 1
		case 0x16: // S GATE
			newthephi=gates.S(read(op1,THE,false),read(op1,PHI,false));
 2d2:	99 83       	std	Y+1, r25	; 0x01
 2d4:	88 83       	st	Y, r24
 2d6:	2c 81       	ldd	r18, Y+4	; 0x04
 2d8:	3d 81       	ldd	r19, Y+5	; 0x05
 2da:	28 17       	cp	r18, r24
 2dc:	39 07       	cpc	r19, r25
 2de:	14 f4       	brge	.+4      	; 0x2e4 <_ZN4SRAM3popEv+0x22>
 2e0:	39 83       	std	Y+1, r19	; 0x01
 2e2:	28 83       	st	Y, r18
 2e4:	68 81       	ld	r22, Y
 2e6:	6f 5f       	subi	r22, 0xFF	; 255
 2e8:	ce 01       	movw	r24, r28
 2ea:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_ZN4SRAM4readEa>
 2ee:	99 27       	eor	r25, r25
 2f0:	87 fd       	sbrc	r24, 7
 2f2:	90 95       	com	r25
 2f4:	df 91       	pop	r29
 2f6:	cf 91       	pop	r28
 2f8:	08 95       	ret

000002fa <_ZN4SRAM4pushEi>:
 2fa:	ef 92       	push	r14
 2fc:	ff 92       	push	r15
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
 2fe:	0f 93       	push	r16
 300:	1f 93       	push	r17
 302:	cf 93       	push	r28
 304:	df 93       	push	r29
 306:	ec 01       	movw	r28, r24
 308:	f6 2e       	mov	r15, r22
 30a:	e7 2e       	mov	r14, r23
 30c:	0e 94 bb 00 	call	0x176	; 0x176 <_ZN4SRAM17memory_managementEv>
 310:	68 81       	ld	r22, Y
 312:	79 81       	ldd	r23, Y+1	; 0x01
 314:	16 16       	cp	r1, r22
 316:	17 06       	cpc	r1, r23
 318:	64 f1       	brlt	.+88     	; 0x372 <_ZN4SRAM4pushEi+0x78>
 31a:	0c 81       	ldd	r16, Y+4	; 0x04
 31c:	1d 81       	ldd	r17, Y+5	; 0x05
 31e:	06 1b       	sub	r16, r22
 320:	17 0b       	sbc	r17, r23
			break;
 322:	ce 01       	movw	r24, r28
		case 0x17: // T GATE
			newthephi=gates.T(read(op1,THE,false),read(op1,PHI,false));
 324:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN4SRAM9read_sramEv>
 328:	98 01       	movw	r18, r16
 32a:	4f 2d       	mov	r20, r15
 32c:	5e 2d       	mov	r21, r14
 32e:	bc 01       	movw	r22, r24
 330:	ce 01       	movw	r24, r28
 332:	02 96       	adiw	r24, 0x02	; 2
 334:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_ZN5Utils17arrint_shiftrightEPiii>
 338:	08 81       	ld	r16, Y
 33a:	19 81       	ldd	r17, Y+1	; 0x01
 33c:	2c 81       	ldd	r18, Y+4	; 0x04
 33e:	3d 81       	ldd	r19, Y+5	; 0x05
 340:	02 17       	cp	r16, r18
 342:	13 07       	cpc	r17, r19
 344:	fc f4       	brge	.+62     	; 0x384 <_ZN4SRAM4pushEi+0x8a>
 346:	78 01       	movw	r14, r16
 348:	ee 0c       	add	r14, r14
 34a:	ff 1c       	adc	r15, r15
 34c:	e8 0e       	add	r14, r24
 34e:	f9 1e       	adc	r15, r25
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
 350:	f7 01       	movw	r30, r14
 352:	40 81       	ld	r20, Z
 354:	f2 e0       	ldi	r31, 0x02	; 2
 356:	ef 0e       	add	r14, r31
 358:	f1 1c       	adc	r15, r1
 35a:	60 2f       	mov	r22, r16
 35c:	ce 01       	movw	r24, r28
 35e:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN4SRAM5writeEaa>
 362:	0f 5f       	subi	r16, 0xFF	; 255
 364:	1f 4f       	sbci	r17, 0xFF	; 255
 366:	8c 81       	ldd	r24, Y+4	; 0x04
 368:	9d 81       	ldd	r25, Y+5	; 0x05
 36a:	08 17       	cp	r16, r24
 36c:	19 07       	cpc	r17, r25
 36e:	84 f3       	brlt	.-32     	; 0x350 <_ZN4SRAM4pushEi+0x56>
 370:	09 c0       	rjmp	.+18     	; 0x384 <_ZN4SRAM4pushEi+0x8a>
 372:	4f 2d       	mov	r20, r15
			break;
 374:	ce 01       	movw	r24, r28
		case 0x18: // ROTATE X GATE
			newthephi=gates.ROX(read(op1,THE,false),read(op1,PHI,false),op2);
 376:	0e 94 3b 01 	call	0x276	; 0x276 <_ZN4SRAM5writeEaa>
 37a:	88 81       	ld	r24, Y
 37c:	99 81       	ldd	r25, Y+1	; 0x01
 37e:	01 97       	sbiw	r24, 0x01	; 1
 380:	99 83       	std	Y+1, r25	; 0x01
 382:	88 83       	st	Y, r24
 384:	df 91       	pop	r29
 386:	cf 91       	pop	r28
 388:	1f 91       	pop	r17
 38a:	0f 91       	pop	r16
 38c:	ff 90       	pop	r15
 38e:	ef 90       	pop	r14
 390:	08 95       	ret

00000392 <_ZN4SRAM7dumpmemEi>:
 392:	6f 92       	push	r6
 394:	7f 92       	push	r7
 396:	8f 92       	push	r8
 398:	9f 92       	push	r9
 39a:	af 92       	push	r10
 39c:	bf 92       	push	r11
 39e:	cf 92       	push	r12
 3a0:	df 92       	push	r13
 3a2:	ef 92       	push	r14
 3a4:	ff 92       	push	r15
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
 3a6:	0f 93       	push	r16
 3a8:	1f 93       	push	r17
 3aa:	cf 93       	push	r28
 3ac:	df 93       	push	r29
 3ae:	cd b7       	in	r28, 0x3d	; 61
 3b0:	de b7       	in	r29, 0x3e	; 62
 3b2:	6e 97       	sbiw	r28, 0x1e	; 30
 3b4:	0f b6       	in	r0, 0x3f	; 63
 3b6:	f8 94       	cli
 3b8:	de bf       	out	0x3e, r29	; 62
 3ba:	0f be       	out	0x3f, r0	; 63
 3bc:	cd bf       	out	0x3d, r28	; 61
 3be:	6c 01       	movw	r12, r24
 3c0:	5b 01       	movw	r10, r22
 3c2:	0e 94 bb 00 	call	0x176	; 0x176 <_ZN4SRAM17memory_managementEv>
 3c6:	f6 01       	movw	r30, r12
 3c8:	00 81       	ld	r16, Z
			break;
 3ca:	11 81       	ldd	r17, Z+1	; 0x01
		case 0x19: // ROTATE Y GATE
			newthephi=gates.ROY(read(op1,THE,false),read(op1,PHI,false),op2);
 3cc:	1a 14       	cp	r1, r10
 3ce:	1b 04       	cpc	r1, r11
 3d0:	1c f4       	brge	.+6      	; 0x3d8 <_ZN4SRAM7dumpmemEi+0x46>
 3d2:	0f 5f       	subi	r16, 0xFF	; 255
 3d4:	1f 4f       	sbci	r17, 0xFF	; 255
 3d6:	03 c0       	rjmp	.+6      	; 0x3de <_ZN4SRAM7dumpmemEi+0x4c>
 3d8:	f6 01       	movw	r30, r12
 3da:	a4 80       	ldd	r10, Z+4	; 0x04
 3dc:	b5 80       	ldd	r11, Z+5	; 0x05
 3de:	a0 0e       	add	r10, r16
 3e0:	b1 1e       	adc	r11, r17
 3e2:	0a 15       	cp	r16, r10
 3e4:	1b 05       	cpc	r17, r11
 3e6:	6c f5       	brge	.+90     	; 0x442 <_ZN4SRAM7dumpmemEi+0xb0>
 3e8:	0f 2e       	mov	r0, r31
 3ea:	fa e6       	ldi	r31, 0x6A	; 106
 3ec:	6f 2e       	mov	r6, r31
 3ee:	f0 e0       	ldi	r31, 0x00	; 0
 3f0:	7f 2e       	mov	r7, r31
 3f2:	f0 2d       	mov	r31, r0
 3f4:	ce 01       	movw	r24, r28
 3f6:	01 96       	adiw	r24, 0x01	; 1
 3f8:	7c 01       	movw	r14, r24
 3fa:	46 01       	movw	r8, r12
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
 3fc:	93 e0       	ldi	r25, 0x03	; 3
 3fe:	89 0e       	add	r8, r25
 400:	91 1c       	adc	r9, r1
 402:	60 2f       	mov	r22, r16
 404:	c6 01       	movw	r24, r12
 406:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_ZN4SRAM4readEa>
 40a:	28 2f       	mov	r18, r24
 40c:	33 27       	eor	r19, r19
 40e:	27 fd       	sbrc	r18, 7
 410:	30 95       	com	r19
 412:	3f 93       	push	r19
 414:	8f 93       	push	r24
 416:	1f 93       	push	r17
 418:	0f 93       	push	r16
 41a:	7f 92       	push	r7
 41c:	6f 92       	push	r6
 41e:	ff 92       	push	r15
			break;
 420:	ef 92       	push	r14
		case 0x1A: // ROTATE Z GATE
			newthephi=gates.ROZ(read(op1,THE,false),read(op1,PHI,false),op2);
 422:	0e 94 bd 03 	call	0x77a	; 0x77a <sprintf>
 426:	b7 01       	movw	r22, r14
 428:	c4 01       	movw	r24, r8
 42a:	0e 94 57 02 	call	0x4ae	; 0x4ae <_ZN6Serial10writestrlnEPc>
 42e:	0f 5f       	subi	r16, 0xFF	; 255
 430:	1f 4f       	sbci	r17, 0xFF	; 255
 432:	0f b6       	in	r0, 0x3f	; 63
 434:	f8 94       	cli
 436:	de bf       	out	0x3e, r29	; 62
 438:	0f be       	out	0x3f, r0	; 63
 43a:	cd bf       	out	0x3d, r28	; 61
 43c:	0a 15       	cp	r16, r10
 43e:	1b 05       	cpc	r17, r11
 440:	04 f3       	brlt	.-64     	; 0x402 <_ZN4SRAM7dumpmemEi+0x70>
 442:	6e 96       	adiw	r28, 0x1e	; 30
 444:	0f b6       	in	r0, 0x3f	; 63
 446:	f8 94       	cli
 448:	de bf       	out	0x3e, r29	; 62
 44a:	0f be       	out	0x3f, r0	; 63
 44c:	cd bf       	out	0x3d, r28	; 61
 44e:	df 91       	pop	r29
 450:	cf 91       	pop	r28
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
 452:	1f 91       	pop	r17
 454:	0f 91       	pop	r16
 456:	ff 90       	pop	r15
 458:	ef 90       	pop	r14
 45a:	df 90       	pop	r13
 45c:	cf 90       	pop	r12
 45e:	bf 90       	pop	r11
 460:	af 90       	pop	r10
 462:	9f 90       	pop	r9
 464:	8f 90       	pop	r8
 466:	7f 90       	pop	r7
 468:	6f 90       	pop	r6
 46a:	08 95       	ret

0000046c <_ZN6SerialC1Ev>:
 46c:	83 e3       	ldi	r24, 0x33	; 51
 46e:	89 b9       	out	0x09, r24	; 9
 470:	10 bc       	out	0x20, r1	; 32
 472:	86 e8       	ldi	r24, 0x86	; 134
 474:	80 bd       	out	0x20, r24	; 32
			break;
 476:	88 e1       	ldi	r24, 0x18	; 24
		//2 QUBIT GATES -
		case 0x1B: // CNOT GATE
			newthephi=gates.CNO(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false));
 478:	8a b9       	out	0x0a, r24	; 10
 47a:	08 95       	ret

0000047c <_ZN6Serial5writeEc>:
 47c:	5d 9b       	sbis	0x0b, 5	; 11
 47e:	fe cf       	rjmp	.-4      	; 0x47c <_ZN6Serial5writeEc>
 480:	6c b9       	out	0x0c, r22	; 12
 482:	08 95       	ret

00000484 <_ZN6Serial8writestrEPc>:
 484:	0f 93       	push	r16
 486:	1f 93       	push	r17
 488:	cf 93       	push	r28
 48a:	df 93       	push	r29
 48c:	8c 01       	movw	r16, r24
 48e:	eb 01       	movw	r28, r22
 490:	68 81       	ld	r22, Y
 492:	66 23       	and	r22, r22
 494:	39 f0       	breq	.+14     	; 0x4a4 <_ZN6Serial8writestrEPc+0x20>
 496:	21 96       	adiw	r28, 0x01	; 1
 498:	c8 01       	movw	r24, r16
 49a:	0e 94 3e 02 	call	0x47c	; 0x47c <_ZN6Serial5writeEc>
 49e:	69 91       	ld	r22, Y+
 4a0:	61 11       	cpse	r22, r1
 4a2:	fa cf       	rjmp	.-12     	; 0x498 <_ZN6Serial8writestrEPc+0x14>
 4a4:	df 91       	pop	r29
 4a6:	cf 91       	pop	r28
 4a8:	1f 91       	pop	r17
 4aa:	0f 91       	pop	r16
 4ac:	08 95       	ret

000004ae <_ZN6Serial10writestrlnEPc>:
 4ae:	cf 93       	push	r28
 4b0:	df 93       	push	r29
 4b2:	ec 01       	movw	r28, r24
 4b4:	0e 94 42 02 	call	0x484	; 0x484 <_ZN6Serial8writestrEPc>
 4b8:	6d e0       	ldi	r22, 0x0D	; 13
 4ba:	ce 01       	movw	r24, r28
 4bc:	0e 94 3e 02 	call	0x47c	; 0x47c <_ZN6Serial5writeEc>
 4c0:	df 91       	pop	r29
 4c2:	cf 91       	pop	r28
 4c4:	08 95       	ret

000004c6 <_ZN5Utils17arrint_shiftrightEPiii>:
 4c6:	cf 92       	push	r12
 4c8:	df 92       	push	r13
 4ca:	ef 92       	push	r14
 4cc:	ff 92       	push	r15
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
 4ce:	0f 93       	push	r16
 4d0:	1f 93       	push	r17
 4d2:	cf 93       	push	r28
 4d4:	df 93       	push	r29
 4d6:	7b 01       	movw	r14, r22
 4d8:	6a 01       	movw	r12, r20
 4da:	e9 01       	movw	r28, r18
 4dc:	89 01       	movw	r16, r18
 4de:	00 0f       	add	r16, r16
 4e0:	11 1f       	adc	r17, r17
 4e2:	c8 01       	movw	r24, r16
 4e4:	0e 94 96 02 	call	0x52c	; 0x52c <malloc>
 4e8:	fc 01       	movw	r30, r24
 4ea:	d1 82       	std	Z+1, r13	; 0x01
 4ec:	c0 82       	st	Z, r12
 4ee:	1c 16       	cp	r1, r28
 4f0:	1d 06       	cpc	r1, r29
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
 4f2:	6c f4       	brge	.+26     	; 0x50e <_ZN5Utils17arrint_shiftrightEPiii+0x48>
 4f4:	f7 01       	movw	r30, r14
 4f6:	dc 01       	movw	r26, r24
 4f8:	12 96       	adiw	r26, 0x02	; 2
 4fa:	b7 01       	movw	r22, r14
 4fc:	60 0f       	add	r22, r16
 4fe:	71 1f       	adc	r23, r17
 500:	21 91       	ld	r18, Z+
 502:	31 91       	ld	r19, Z+
 504:	2d 93       	st	X+, r18
 506:	3d 93       	st	X+, r19
 508:	e6 17       	cp	r30, r22
 50a:	f7 07       	cpc	r31, r23
 50c:	c9 f7       	brne	.-14     	; 0x500 <_ZN5Utils17arrint_shiftrightEPiii+0x3a>
 50e:	df 91       	pop	r29
 510:	cf 91       	pop	r28
 512:	1f 91       	pop	r17
 514:	0f 91       	pop	r16
 516:	ff 90       	pop	r15
 518:	ef 90       	pop	r14
			break;
 51a:	df 90       	pop	r13
		case 0x1C: // CSIGN GATE
			newthephi=gates.CSI(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false));
 51c:	cf 90       	pop	r12
 51e:	08 95       	ret

00000520 <__tablejump2__>:
 520:	ee 0f       	add	r30, r30
 522:	ff 1f       	adc	r31, r31

00000524 <__tablejump__>:
 524:	05 90       	lpm	r0, Z+
 526:	f4 91       	lpm	r31, Z
 528:	e0 2d       	mov	r30, r0
 52a:	09 94       	ijmp

0000052c <malloc>:
 52c:	cf 93       	push	r28
 52e:	df 93       	push	r29
 530:	82 30       	cpi	r24, 0x02	; 2
 532:	91 05       	cpc	r25, r1
 534:	10 f4       	brcc	.+4      	; 0x53a <malloc+0xe>
 536:	82 e0       	ldi	r24, 0x02	; 2
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	e0 91 83 00 	lds	r30, 0x0083
 53e:	f0 91 84 00 	lds	r31, 0x0084
 542:	20 e0       	ldi	r18, 0x00	; 0
 544:	30 e0       	ldi	r19, 0x00	; 0
 546:	a0 e0       	ldi	r26, 0x00	; 0
 548:	b0 e0       	ldi	r27, 0x00	; 0
 54a:	30 97       	sbiw	r30, 0x00	; 0
 54c:	39 f1       	breq	.+78     	; 0x59c <malloc+0x70>
 54e:	40 81       	ld	r20, Z
 550:	51 81       	ldd	r21, Z+1	; 0x01
 552:	48 17       	cp	r20, r24
 554:	59 07       	cpc	r21, r25
 556:	b8 f0       	brcs	.+46     	; 0x586 <malloc+0x5a>
 558:	48 17       	cp	r20, r24
 55a:	59 07       	cpc	r21, r25
 55c:	71 f4       	brne	.+28     	; 0x57a <malloc+0x4e>
 55e:	82 81       	ldd	r24, Z+2	; 0x02
 560:	93 81       	ldd	r25, Z+3	; 0x03
 562:	10 97       	sbiw	r26, 0x00	; 0
 564:	29 f0       	breq	.+10     	; 0x570 <malloc+0x44>
 566:	13 96       	adiw	r26, 0x03	; 3
 568:	9c 93       	st	X, r25
 56a:	8e 93       	st	-X, r24
 56c:	12 97       	sbiw	r26, 0x02	; 2
 56e:	2c c0       	rjmp	.+88     	; 0x5c8 <malloc+0x9c>
 570:	90 93 84 00 	sts	0x0084, r25
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
 574:	80 93 83 00 	sts	0x0083, r24
 578:	27 c0       	rjmp	.+78     	; 0x5c8 <malloc+0x9c>
 57a:	21 15       	cp	r18, r1
 57c:	31 05       	cpc	r19, r1
 57e:	31 f0       	breq	.+12     	; 0x58c <malloc+0x60>
 580:	42 17       	cp	r20, r18
 582:	53 07       	cpc	r21, r19
 584:	18 f0       	brcs	.+6      	; 0x58c <malloc+0x60>
 586:	a9 01       	movw	r20, r18
 588:	db 01       	movw	r26, r22
 58a:	01 c0       	rjmp	.+2      	; 0x58e <malloc+0x62>
 58c:	ef 01       	movw	r28, r30
 58e:	9a 01       	movw	r18, r20
 590:	bd 01       	movw	r22, r26
 592:	df 01       	movw	r26, r30
 594:	02 80       	ldd	r0, Z+2	; 0x02
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
 596:	f3 81       	ldd	r31, Z+3	; 0x03
 598:	e0 2d       	mov	r30, r0
 59a:	d7 cf       	rjmp	.-82     	; 0x54a <malloc+0x1e>
 59c:	21 15       	cp	r18, r1
 59e:	31 05       	cpc	r19, r1
 5a0:	f9 f0       	breq	.+62     	; 0x5e0 <malloc+0xb4>
 5a2:	28 1b       	sub	r18, r24
 5a4:	39 0b       	sbc	r19, r25
 5a6:	24 30       	cpi	r18, 0x04	; 4
 5a8:	31 05       	cpc	r19, r1
 5aa:	80 f4       	brcc	.+32     	; 0x5cc <malloc+0xa0>
 5ac:	8a 81       	ldd	r24, Y+2	; 0x02
 5ae:	9b 81       	ldd	r25, Y+3	; 0x03
 5b0:	61 15       	cp	r22, r1
 5b2:	71 05       	cpc	r23, r1
 5b4:	21 f0       	breq	.+8      	; 0x5be <malloc+0x92>
 5b6:	fb 01       	movw	r30, r22
 5b8:	93 83       	std	Z+3, r25	; 0x03
 5ba:	82 83       	std	Z+2, r24	; 0x02
 5bc:	04 c0       	rjmp	.+8      	; 0x5c6 <malloc+0x9a>
			break;
 5be:	90 93 84 00 	sts	0x0084, r25
		case 0x1D: // SWAP GATE
			newthephi=gates.SWA(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false));
 5c2:	80 93 83 00 	sts	0x0083, r24
 5c6:	fe 01       	movw	r30, r28
 5c8:	32 96       	adiw	r30, 0x02	; 2
 5ca:	44 c0       	rjmp	.+136    	; 0x654 <malloc+0x128>
 5cc:	fe 01       	movw	r30, r28
 5ce:	e2 0f       	add	r30, r18
 5d0:	f3 1f       	adc	r31, r19
 5d2:	81 93       	st	Z+, r24
 5d4:	91 93       	st	Z+, r25
 5d6:	22 50       	subi	r18, 0x02	; 2
 5d8:	31 09       	sbc	r19, r1
 5da:	39 83       	std	Y+1, r19	; 0x01
 5dc:	28 83       	st	Y, r18
 5de:	3a c0       	rjmp	.+116    	; 0x654 <malloc+0x128>
 5e0:	20 91 81 00 	lds	r18, 0x0081
 5e4:	30 91 82 00 	lds	r19, 0x0082
 5e8:	23 2b       	or	r18, r19
 5ea:	41 f4       	brne	.+16     	; 0x5fc <malloc+0xd0>
 5ec:	20 91 62 00 	lds	r18, 0x0062
 5f0:	30 91 63 00 	lds	r19, 0x0063
 5f4:	30 93 82 00 	sts	0x0082, r19
 5f8:	20 93 81 00 	sts	0x0081, r18
 5fc:	20 91 60 00 	lds	r18, 0x0060
 600:	30 91 61 00 	lds	r19, 0x0061
 604:	21 15       	cp	r18, r1
 606:	31 05       	cpc	r19, r1
 608:	41 f4       	brne	.+16     	; 0x61a <malloc+0xee>
 60a:	2d b7       	in	r18, 0x3d	; 61
 60c:	3e b7       	in	r19, 0x3e	; 62
 60e:	40 91 64 00 	lds	r20, 0x0064
 612:	50 91 65 00 	lds	r21, 0x0065
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
 616:	24 1b       	sub	r18, r20
 618:	35 0b       	sbc	r19, r21
 61a:	e0 91 81 00 	lds	r30, 0x0081
 61e:	f0 91 82 00 	lds	r31, 0x0082
 622:	e2 17       	cp	r30, r18
 624:	f3 07       	cpc	r31, r19
 626:	a0 f4       	brcc	.+40     	; 0x650 <malloc+0x124>
 628:	2e 1b       	sub	r18, r30
 62a:	3f 0b       	sbc	r19, r31
 62c:	28 17       	cp	r18, r24
 62e:	39 07       	cpc	r19, r25
 630:	78 f0       	brcs	.+30     	; 0x650 <malloc+0x124>
 632:	ac 01       	movw	r20, r24
 634:	4e 5f       	subi	r20, 0xFE	; 254
 636:	5f 4f       	sbci	r21, 0xFF	; 255
 638:	24 17       	cp	r18, r20
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
 63a:	35 07       	cpc	r19, r21
 63c:	48 f0       	brcs	.+18     	; 0x650 <malloc+0x124>
 63e:	4e 0f       	add	r20, r30
 640:	5f 1f       	adc	r21, r31
 642:	50 93 82 00 	sts	0x0082, r21
 646:	40 93 81 00 	sts	0x0081, r20
 64a:	81 93       	st	Z+, r24
 64c:	91 93       	st	Z+, r25
 64e:	02 c0       	rjmp	.+4      	; 0x654 <malloc+0x128>
 650:	e0 e0       	ldi	r30, 0x00	; 0
 652:	f0 e0       	ldi	r31, 0x00	; 0
 654:	cf 01       	movw	r24, r30
 656:	df 91       	pop	r29
 658:	cf 91       	pop	r28
 65a:	08 95       	ret

0000065c <free>:
 65c:	cf 93       	push	r28
 65e:	df 93       	push	r29
 660:	00 97       	sbiw	r24, 0x00	; 0
			break;
 662:	09 f4       	brne	.+2      	; 0x666 <free+0xa>
		case 0x1E: // INCREMENT GATE
			newthephi=gates.INC(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false));
 664:	87 c0       	rjmp	.+270    	; 0x774 <free+0x118>
 666:	fc 01       	movw	r30, r24
 668:	32 97       	sbiw	r30, 0x02	; 2
 66a:	13 82       	std	Z+3, r1	; 0x03
 66c:	12 82       	std	Z+2, r1	; 0x02
 66e:	c0 91 83 00 	lds	r28, 0x0083
 672:	d0 91 84 00 	lds	r29, 0x0084
 676:	20 97       	sbiw	r28, 0x00	; 0
 678:	81 f4       	brne	.+32     	; 0x69a <free+0x3e>
 67a:	20 81       	ld	r18, Z
 67c:	31 81       	ldd	r19, Z+1	; 0x01
 67e:	28 0f       	add	r18, r24
 680:	39 1f       	adc	r19, r25
 682:	80 91 81 00 	lds	r24, 0x0081
 686:	90 91 82 00 	lds	r25, 0x0082
 68a:	82 17       	cp	r24, r18
 68c:	93 07       	cpc	r25, r19
 68e:	79 f5       	brne	.+94     	; 0x6ee <free+0x92>
 690:	f0 93 82 00 	sts	0x0082, r31
 694:	e0 93 81 00 	sts	0x0081, r30
 698:	6d c0       	rjmp	.+218    	; 0x774 <free+0x118>
 69a:	de 01       	movw	r26, r28
 69c:	20 e0       	ldi	r18, 0x00	; 0
 69e:	30 e0       	ldi	r19, 0x00	; 0
 6a0:	ae 17       	cp	r26, r30
 6a2:	bf 07       	cpc	r27, r31
 6a4:	50 f4       	brcc	.+20     	; 0x6ba <free+0x5e>
 6a6:	12 96       	adiw	r26, 0x02	; 2
 6a8:	4d 91       	ld	r20, X+
 6aa:	5c 91       	ld	r21, X
 6ac:	13 97       	sbiw	r26, 0x03	; 3
 6ae:	9d 01       	movw	r18, r26
 6b0:	41 15       	cp	r20, r1
 6b2:	51 05       	cpc	r21, r1
 6b4:	09 f1       	breq	.+66     	; 0x6f8 <free+0x9c>
 6b6:	da 01       	movw	r26, r20
 6b8:	f3 cf       	rjmp	.-26     	; 0x6a0 <free+0x44>
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
 6ba:	b3 83       	std	Z+3, r27	; 0x03
 6bc:	a2 83       	std	Z+2, r26	; 0x02
 6be:	40 81       	ld	r20, Z
 6c0:	51 81       	ldd	r21, Z+1	; 0x01
 6c2:	84 0f       	add	r24, r20
 6c4:	95 1f       	adc	r25, r21
 6c6:	8a 17       	cp	r24, r26
 6c8:	9b 07       	cpc	r25, r27
 6ca:	71 f4       	brne	.+28     	; 0x6e8 <free+0x8c>
 6cc:	8d 91       	ld	r24, X+
 6ce:	9c 91       	ld	r25, X
 6d0:	11 97       	sbiw	r26, 0x01	; 1
 6d2:	84 0f       	add	r24, r20
 6d4:	95 1f       	adc	r25, r21
 6d6:	02 96       	adiw	r24, 0x02	; 2
 6d8:	91 83       	std	Z+1, r25	; 0x01
 6da:	80 83       	st	Z, r24
 6dc:	12 96       	adiw	r26, 0x02	; 2
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
 6de:	8d 91       	ld	r24, X+
 6e0:	9c 91       	ld	r25, X
 6e2:	13 97       	sbiw	r26, 0x03	; 3
 6e4:	93 83       	std	Z+3, r25	; 0x03
 6e6:	82 83       	std	Z+2, r24	; 0x02
 6e8:	21 15       	cp	r18, r1
 6ea:	31 05       	cpc	r19, r1
 6ec:	29 f4       	brne	.+10     	; 0x6f8 <free+0x9c>
 6ee:	f0 93 84 00 	sts	0x0084, r31
 6f2:	e0 93 83 00 	sts	0x0083, r30
 6f6:	3e c0       	rjmp	.+124    	; 0x774 <free+0x118>
 6f8:	d9 01       	movw	r26, r18
 6fa:	13 96       	adiw	r26, 0x03	; 3
 6fc:	fc 93       	st	X, r31
 6fe:	ee 93       	st	-X, r30
 700:	12 97       	sbiw	r26, 0x02	; 2
 702:	4d 91       	ld	r20, X+
 704:	5d 91       	ld	r21, X+
			break;
 706:	a4 0f       	add	r26, r20
		case 0x1F: // DECREMENT GATE
			newthephi=gates.DEC(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false));
 708:	b5 1f       	adc	r27, r21
 70a:	ea 17       	cp	r30, r26
 70c:	fb 07       	cpc	r31, r27
 70e:	79 f4       	brne	.+30     	; 0x72e <free+0xd2>
 710:	80 81       	ld	r24, Z
 712:	91 81       	ldd	r25, Z+1	; 0x01
 714:	84 0f       	add	r24, r20
 716:	95 1f       	adc	r25, r21
 718:	02 96       	adiw	r24, 0x02	; 2
 71a:	d9 01       	movw	r26, r18
 71c:	11 96       	adiw	r26, 0x01	; 1
 71e:	9c 93       	st	X, r25
 720:	8e 93       	st	-X, r24
 722:	82 81       	ldd	r24, Z+2	; 0x02
 724:	93 81       	ldd	r25, Z+3	; 0x03
 726:	13 96       	adiw	r26, 0x03	; 3
 728:	9c 93       	st	X, r25
 72a:	8e 93       	st	-X, r24
 72c:	12 97       	sbiw	r26, 0x02	; 2
 72e:	e0 e0       	ldi	r30, 0x00	; 0
 730:	f0 e0       	ldi	r31, 0x00	; 0
 732:	8a 81       	ldd	r24, Y+2	; 0x02
 734:	9b 81       	ldd	r25, Y+3	; 0x03
 736:	00 97       	sbiw	r24, 0x00	; 0
 738:	19 f0       	breq	.+6      	; 0x740 <free+0xe4>
 73a:	fe 01       	movw	r30, r28
 73c:	ec 01       	movw	r28, r24
 73e:	f9 cf       	rjmp	.-14     	; 0x732 <free+0xd6>
 740:	ce 01       	movw	r24, r28
 742:	02 96       	adiw	r24, 0x02	; 2
 744:	28 81       	ld	r18, Y
 746:	39 81       	ldd	r19, Y+1	; 0x01
 748:	82 0f       	add	r24, r18
 74a:	93 1f       	adc	r25, r19
 74c:	20 91 81 00 	lds	r18, 0x0081
 750:	30 91 82 00 	lds	r19, 0x0082
 754:	28 17       	cp	r18, r24
 756:	39 07       	cpc	r19, r25
 758:	69 f4       	brne	.+26     	; 0x774 <free+0x118>
 75a:	30 97       	sbiw	r30, 0x00	; 0
 75c:	29 f4       	brne	.+10     	; 0x768 <free+0x10c>
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
 75e:	10 92 84 00 	sts	0x0084, r1
 762:	10 92 83 00 	sts	0x0083, r1
 766:	02 c0       	rjmp	.+4      	; 0x76c <free+0x110>
 768:	13 82       	std	Z+3, r1	; 0x03
 76a:	12 82       	std	Z+2, r1	; 0x02
 76c:	d0 93 82 00 	sts	0x0082, r29
 770:	c0 93 81 00 	sts	0x0081, r28
 774:	df 91       	pop	r29
 776:	cf 91       	pop	r28
 778:	08 95       	ret

0000077a <sprintf>:
 77a:	ae e0       	ldi	r26, 0x0E	; 14
 77c:	b0 e0       	ldi	r27, 0x00	; 0
 77e:	e3 ec       	ldi	r30, 0xC3	; 195
 780:	f3 e0       	ldi	r31, 0x03	; 3
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
 782:	0c 94 65 06 	jmp	0xcca	; 0xcca <__prologue_saves__+0x1c>
 786:	0d 89       	ldd	r16, Y+21	; 0x15
 788:	1e 89       	ldd	r17, Y+22	; 0x16
 78a:	86 e0       	ldi	r24, 0x06	; 6
 78c:	8c 83       	std	Y+4, r24	; 0x04
 78e:	1a 83       	std	Y+2, r17	; 0x02
 790:	09 83       	std	Y+1, r16	; 0x01
 792:	8f ef       	ldi	r24, 0xFF	; 255
 794:	9f e7       	ldi	r25, 0x7F	; 127
 796:	9e 83       	std	Y+6, r25	; 0x06
 798:	8d 83       	std	Y+5, r24	; 0x05
 79a:	ae 01       	movw	r20, r28
 79c:	47 5e       	subi	r20, 0xE7	; 231
 79e:	5f 4f       	sbci	r21, 0xFF	; 255
 7a0:	6f 89       	ldd	r22, Y+23	; 0x17
 7a2:	78 8d       	ldd	r23, Y+24	; 0x18
 7a4:	ce 01       	movw	r24, r28
 7a6:	01 96       	adiw	r24, 0x01	; 1
 7a8:	0e 94 df 03 	call	0x7be	; 0x7be <vfprintf>
			break;
		case 0x20: // SWAGSQ GATE
			newthephi=gates.SWQ(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false));
 7ac:	ef 81       	ldd	r30, Y+7	; 0x07
 7ae:	f8 85       	ldd	r31, Y+8	; 0x08
 7b0:	e0 0f       	add	r30, r16
 7b2:	f1 1f       	adc	r31, r17
 7b4:	10 82       	st	Z, r1
 7b6:	2e 96       	adiw	r28, 0x0e	; 14
 7b8:	e4 e0       	ldi	r30, 0x04	; 4
 7ba:	0c 94 81 06 	jmp	0xd02	; 0xd02 <__epilogue_restores__+0x1c>

000007be <vfprintf>:
 7be:	ac e0       	ldi	r26, 0x0C	; 12
 7c0:	b0 e0       	ldi	r27, 0x00	; 0
 7c2:	e5 ee       	ldi	r30, 0xE5	; 229
 7c4:	f3 e0       	ldi	r31, 0x03	; 3
 7c6:	0c 94 57 06 	jmp	0xcae	; 0xcae <__prologue_saves__>
 7ca:	7c 01       	movw	r14, r24
 7cc:	6b 01       	movw	r12, r22
 7ce:	8a 01       	movw	r16, r20
 7d0:	fc 01       	movw	r30, r24
 7d2:	17 82       	std	Z+7, r1	; 0x07
 7d4:	16 82       	std	Z+6, r1	; 0x06
 7d6:	83 81       	ldd	r24, Z+3	; 0x03
 7d8:	81 ff       	sbrs	r24, 1
 7da:	bd c1       	rjmp	.+890    	; 0xb56 <__stack+0x2f7>
 7dc:	ce 01       	movw	r24, r28
 7de:	01 96       	adiw	r24, 0x01	; 1
 7e0:	4c 01       	movw	r8, r24
 7e2:	f7 01       	movw	r30, r14
 7e4:	93 81       	ldd	r25, Z+3	; 0x03
 7e6:	f6 01       	movw	r30, r12
 7e8:	93 fd       	sbrc	r25, 3
 7ea:	85 91       	lpm	r24, Z+
 7ec:	93 ff       	sbrs	r25, 3
 7ee:	81 91       	ld	r24, Z+
 7f0:	6f 01       	movw	r12, r30
 7f2:	88 23       	and	r24, r24
 7f4:	09 f4       	brne	.+2      	; 0x7f8 <vfprintf+0x3a>
 7f6:	ab c1       	rjmp	.+854    	; 0xb4e <__stack+0x2ef>
 7f8:	85 32       	cpi	r24, 0x25	; 37
 7fa:	39 f4       	brne	.+14     	; 0x80a <vfprintf+0x4c>
 7fc:	93 fd       	sbrc	r25, 3
 7fe:	85 91       	lpm	r24, Z+
 800:	93 ff       	sbrs	r25, 3
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
 802:	81 91       	ld	r24, Z+
 804:	6f 01       	movw	r12, r30
 806:	85 32       	cpi	r24, 0x25	; 37
 808:	29 f4       	brne	.+10     	; 0x814 <vfprintf+0x56>
 80a:	b7 01       	movw	r22, r14
 80c:	90 e0       	ldi	r25, 0x00	; 0
 80e:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 812:	e7 cf       	rjmp	.-50     	; 0x7e2 <vfprintf+0x24>
 814:	51 2c       	mov	r5, r1
 816:	31 2c       	mov	r3, r1
 818:	20 e0       	ldi	r18, 0x00	; 0
 81a:	20 32       	cpi	r18, 0x20	; 32
 81c:	a0 f4       	brcc	.+40     	; 0x846 <vfprintf+0x88>
 81e:	8b 32       	cpi	r24, 0x2B	; 43
 820:	69 f0       	breq	.+26     	; 0x83c <vfprintf+0x7e>
 822:	30 f4       	brcc	.+12     	; 0x830 <vfprintf+0x72>
 824:	80 32       	cpi	r24, 0x20	; 32
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
 826:	59 f0       	breq	.+22     	; 0x83e <vfprintf+0x80>
 828:	83 32       	cpi	r24, 0x23	; 35
 82a:	69 f4       	brne	.+26     	; 0x846 <vfprintf+0x88>
 82c:	20 61       	ori	r18, 0x10	; 16
 82e:	2c c0       	rjmp	.+88     	; 0x888 <__stack+0x29>
 830:	8d 32       	cpi	r24, 0x2D	; 45
 832:	39 f0       	breq	.+14     	; 0x842 <vfprintf+0x84>
 834:	80 33       	cpi	r24, 0x30	; 48
 836:	39 f4       	brne	.+14     	; 0x846 <vfprintf+0x88>
 838:	21 60       	ori	r18, 0x01	; 1
 83a:	26 c0       	rjmp	.+76     	; 0x888 <__stack+0x29>
 83c:	22 60       	ori	r18, 0x02	; 2
 83e:	24 60       	ori	r18, 0x04	; 4
 840:	23 c0       	rjmp	.+70     	; 0x888 <__stack+0x29>
 842:	28 60       	ori	r18, 0x08	; 8
 844:	21 c0       	rjmp	.+66     	; 0x888 <__stack+0x29>
 846:	27 fd       	sbrc	r18, 7
 848:	27 c0       	rjmp	.+78     	; 0x898 <__stack+0x39>
 84a:	30 ed       	ldi	r19, 0xD0	; 208
 84c:	38 0f       	add	r19, r24
			break;
 84e:	3a 30       	cpi	r19, 0x0A	; 10
		case 0x21: // SWAPI GATE
			newthephi=gates.SWI(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false));
 850:	78 f4       	brcc	.+30     	; 0x870 <__stack+0x11>
 852:	26 ff       	sbrs	r18, 6
 854:	06 c0       	rjmp	.+12     	; 0x862 <__stack+0x3>
 856:	fa e0       	ldi	r31, 0x0A	; 10
 858:	5f 9e       	mul	r5, r31
 85a:	30 0d       	add	r19, r0
 85c:	11 24       	eor	r1, r1
 85e:	53 2e       	mov	r5, r19
 860:	13 c0       	rjmp	.+38     	; 0x888 <__stack+0x29>
 862:	8a e0       	ldi	r24, 0x0A	; 10
 864:	38 9e       	mul	r3, r24
 866:	30 0d       	add	r19, r0
 868:	11 24       	eor	r1, r1
 86a:	33 2e       	mov	r3, r19
 86c:	20 62       	ori	r18, 0x20	; 32
 86e:	0c c0       	rjmp	.+24     	; 0x888 <__stack+0x29>
 870:	8e 32       	cpi	r24, 0x2E	; 46
 872:	21 f4       	brne	.+8      	; 0x87c <__stack+0x1d>
 874:	26 fd       	sbrc	r18, 6
 876:	6b c1       	rjmp	.+726    	; 0xb4e <__stack+0x2ef>
 878:	20 64       	ori	r18, 0x40	; 64
 87a:	06 c0       	rjmp	.+12     	; 0x888 <__stack+0x29>
 87c:	8c 36       	cpi	r24, 0x6C	; 108
 87e:	11 f4       	brne	.+4      	; 0x884 <__stack+0x25>
 880:	20 68       	ori	r18, 0x80	; 128
 882:	02 c0       	rjmp	.+4      	; 0x888 <__stack+0x29>
 884:	88 36       	cpi	r24, 0x68	; 104
 886:	41 f4       	brne	.+16     	; 0x898 <__stack+0x39>
 888:	f6 01       	movw	r30, r12
 88a:	93 fd       	sbrc	r25, 3
 88c:	85 91       	lpm	r24, Z+
 88e:	93 ff       	sbrs	r25, 3
 890:	81 91       	ld	r24, Z+
 892:	6f 01       	movw	r12, r30
 894:	81 11       	cpse	r24, r1
 896:	c1 cf       	rjmp	.-126    	; 0x81a <vfprintf+0x5c>
 898:	98 2f       	mov	r25, r24
 89a:	9f 7d       	andi	r25, 0xDF	; 223
 89c:	95 54       	subi	r25, 0x45	; 69
 89e:	93 30       	cpi	r25, 0x03	; 3
 8a0:	28 f4       	brcc	.+10     	; 0x8ac <__stack+0x4d>
 8a2:	0c 5f       	subi	r16, 0xFC	; 252
 8a4:	1f 4f       	sbci	r17, 0xFF	; 255
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
 8a6:	ff e3       	ldi	r31, 0x3F	; 63
 8a8:	f9 83       	std	Y+1, r31	; 0x01
 8aa:	0d c0       	rjmp	.+26     	; 0x8c6 <__stack+0x67>
 8ac:	83 36       	cpi	r24, 0x63	; 99
 8ae:	31 f0       	breq	.+12     	; 0x8bc <__stack+0x5d>
 8b0:	83 37       	cpi	r24, 0x73	; 115
 8b2:	71 f0       	breq	.+28     	; 0x8d0 <__stack+0x71>
 8b4:	83 35       	cpi	r24, 0x53	; 83
 8b6:	09 f0       	breq	.+2      	; 0x8ba <__stack+0x5b>
 8b8:	5b c0       	rjmp	.+182    	; 0x970 <__stack+0x111>
 8ba:	22 c0       	rjmp	.+68     	; 0x900 <__stack+0xa1>
 8bc:	f8 01       	movw	r30, r16
 8be:	80 81       	ld	r24, Z
 8c0:	89 83       	std	Y+1, r24	; 0x01
 8c2:	0e 5f       	subi	r16, 0xFE	; 254
 8c4:	1f 4f       	sbci	r17, 0xFF	; 255
 8c6:	44 24       	eor	r4, r4
 8c8:	43 94       	inc	r4
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
 8ca:	51 2c       	mov	r5, r1
 8cc:	54 01       	movw	r10, r8
 8ce:	15 c0       	rjmp	.+42     	; 0x8fa <__stack+0x9b>
 8d0:	38 01       	movw	r6, r16
 8d2:	f2 e0       	ldi	r31, 0x02	; 2
 8d4:	6f 0e       	add	r6, r31
 8d6:	71 1c       	adc	r7, r1
 8d8:	f8 01       	movw	r30, r16
 8da:	a0 80       	ld	r10, Z
 8dc:	b1 80       	ldd	r11, Z+1	; 0x01
 8de:	26 ff       	sbrs	r18, 6
 8e0:	03 c0       	rjmp	.+6      	; 0x8e8 <__stack+0x89>
 8e2:	65 2d       	mov	r22, r5
 8e4:	70 e0       	ldi	r23, 0x00	; 0
 8e6:	02 c0       	rjmp	.+4      	; 0x8ec <__stack+0x8d>
 8e8:	6f ef       	ldi	r22, 0xFF	; 255
 8ea:	7f ef       	ldi	r23, 0xFF	; 255
 8ec:	c5 01       	movw	r24, r10
 8ee:	2c 87       	std	Y+12, r18	; 0x0c
 8f0:	0e 94 bc 05 	call	0xb78	; 0xb78 <strnlen>
			break;
		//3 QUBIT GATES -
		case 0x22: // CONTROL SWAP GATE
			newthephi=gates.CSW(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false),read(op3,THE,false),read(op3,PHI,false));
 8f4:	2c 01       	movw	r4, r24
 8f6:	83 01       	movw	r16, r6
 8f8:	2c 85       	ldd	r18, Y+12	; 0x0c
 8fa:	2f 77       	andi	r18, 0x7F	; 127
 8fc:	22 2e       	mov	r2, r18
 8fe:	17 c0       	rjmp	.+46     	; 0x92e <__stack+0xcf>
 900:	38 01       	movw	r6, r16
 902:	f2 e0       	ldi	r31, 0x02	; 2
 904:	6f 0e       	add	r6, r31
 906:	71 1c       	adc	r7, r1
 908:	f8 01       	movw	r30, r16
 90a:	a0 80       	ld	r10, Z
 90c:	b1 80       	ldd	r11, Z+1	; 0x01
 90e:	26 ff       	sbrs	r18, 6
 910:	03 c0       	rjmp	.+6      	; 0x918 <__stack+0xb9>
 912:	65 2d       	mov	r22, r5
 914:	70 e0       	ldi	r23, 0x00	; 0
 916:	02 c0       	rjmp	.+4      	; 0x91c <__stack+0xbd>
 918:	6f ef       	ldi	r22, 0xFF	; 255
 91a:	7f ef       	ldi	r23, 0xFF	; 255
 91c:	c5 01       	movw	r24, r10
 91e:	2c 87       	std	Y+12, r18	; 0x0c
 920:	0e 94 b1 05 	call	0xb62	; 0xb62 <strnlen_P>
 924:	2c 01       	movw	r4, r24
 926:	2c 85       	ldd	r18, Y+12	; 0x0c
 928:	20 68       	ori	r18, 0x80	; 128
 92a:	22 2e       	mov	r2, r18
 92c:	83 01       	movw	r16, r6
 92e:	23 fc       	sbrc	r2, 3
 930:	1b c0       	rjmp	.+54     	; 0x968 <__stack+0x109>
 932:	83 2d       	mov	r24, r3
 934:	90 e0       	ldi	r25, 0x00	; 0
 936:	48 16       	cp	r4, r24
 938:	59 06       	cpc	r5, r25
 93a:	b0 f4       	brcc	.+44     	; 0x968 <__stack+0x109>
 93c:	b7 01       	movw	r22, r14
 93e:	80 e2       	ldi	r24, 0x20	; 32
 940:	90 e0       	ldi	r25, 0x00	; 0
 942:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 946:	3a 94       	dec	r3
 948:	f4 cf       	rjmp	.-24     	; 0x932 <__stack+0xd3>
 94a:	f5 01       	movw	r30, r10
 94c:	27 fc       	sbrc	r2, 7
 94e:	85 91       	lpm	r24, Z+
 950:	27 fe       	sbrs	r2, 7
 952:	81 91       	ld	r24, Z+
 954:	5f 01       	movw	r10, r30
 956:	b7 01       	movw	r22, r14
 958:	90 e0       	ldi	r25, 0x00	; 0
 95a:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 95e:	31 10       	cpse	r3, r1
 960:	3a 94       	dec	r3
 962:	f1 e0       	ldi	r31, 0x01	; 1
 964:	4f 1a       	sub	r4, r31
 966:	51 08       	sbc	r5, r1
 968:	41 14       	cp	r4, r1
 96a:	51 04       	cpc	r5, r1
 96c:	71 f7       	brne	.-36     	; 0x94a <__stack+0xeb>
 96e:	e5 c0       	rjmp	.+458    	; 0xb3a <__stack+0x2db>
 970:	84 36       	cpi	r24, 0x64	; 100
 972:	11 f0       	breq	.+4      	; 0x978 <__stack+0x119>
 974:	89 36       	cpi	r24, 0x69	; 105
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
 976:	39 f5       	brne	.+78     	; 0x9c6 <__stack+0x167>
 978:	f8 01       	movw	r30, r16
 97a:	27 ff       	sbrs	r18, 7
 97c:	07 c0       	rjmp	.+14     	; 0x98c <__stack+0x12d>
 97e:	60 81       	ld	r22, Z
 980:	71 81       	ldd	r23, Z+1	; 0x01
 982:	82 81       	ldd	r24, Z+2	; 0x02
 984:	93 81       	ldd	r25, Z+3	; 0x03
 986:	0c 5f       	subi	r16, 0xFC	; 252
 988:	1f 4f       	sbci	r17, 0xFF	; 255
 98a:	08 c0       	rjmp	.+16     	; 0x99c <__stack+0x13d>
 98c:	60 81       	ld	r22, Z
 98e:	71 81       	ldd	r23, Z+1	; 0x01
 990:	88 27       	eor	r24, r24
 992:	77 fd       	sbrc	r23, 7
 994:	80 95       	com	r24
 996:	98 2f       	mov	r25, r24
 998:	0e 5f       	subi	r16, 0xFE	; 254
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
 99a:	1f 4f       	sbci	r17, 0xFF	; 255
 99c:	2f 76       	andi	r18, 0x6F	; 111
 99e:	b2 2e       	mov	r11, r18
 9a0:	97 ff       	sbrs	r25, 7
 9a2:	09 c0       	rjmp	.+18     	; 0x9b6 <__stack+0x157>
 9a4:	90 95       	com	r25
 9a6:	80 95       	com	r24
 9a8:	70 95       	com	r23
 9aa:	61 95       	neg	r22
 9ac:	7f 4f       	sbci	r23, 0xFF	; 255
 9ae:	8f 4f       	sbci	r24, 0xFF	; 255
 9b0:	9f 4f       	sbci	r25, 0xFF	; 255
 9b2:	20 68       	ori	r18, 0x80	; 128
 9b4:	b2 2e       	mov	r11, r18
 9b6:	2a e0       	ldi	r18, 0x0A	; 10
 9b8:	30 e0       	ldi	r19, 0x00	; 0
 9ba:	a4 01       	movw	r20, r8
 9bc:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <__ultoa_invert>
 9c0:	a8 2e       	mov	r10, r24
			write(op3,THE,newthephi[4]); write(op3,PHI,newthephi[5]);
 9c2:	a8 18       	sub	r10, r8
 9c4:	44 c0       	rjmp	.+136    	; 0xa4e <__stack+0x1ef>
 9c6:	85 37       	cpi	r24, 0x75	; 117
 9c8:	29 f4       	brne	.+10     	; 0x9d4 <__stack+0x175>
 9ca:	2f 7e       	andi	r18, 0xEF	; 239
 9cc:	b2 2e       	mov	r11, r18
 9ce:	2a e0       	ldi	r18, 0x0A	; 10
 9d0:	30 e0       	ldi	r19, 0x00	; 0
 9d2:	25 c0       	rjmp	.+74     	; 0xa1e <__stack+0x1bf>
 9d4:	f2 2f       	mov	r31, r18
 9d6:	f9 7f       	andi	r31, 0xF9	; 249
 9d8:	bf 2e       	mov	r11, r31
 9da:	8f 36       	cpi	r24, 0x6F	; 111
 9dc:	c1 f0       	breq	.+48     	; 0xa0e <__stack+0x1af>
 9de:	18 f4       	brcc	.+6      	; 0x9e6 <__stack+0x187>
 9e0:	88 35       	cpi	r24, 0x58	; 88
 9e2:	79 f0       	breq	.+30     	; 0xa02 <__stack+0x1a3>
 9e4:	b4 c0       	rjmp	.+360    	; 0xb4e <__stack+0x2ef>
 9e6:	80 37       	cpi	r24, 0x70	; 112
 9e8:	19 f0       	breq	.+6      	; 0x9f0 <__stack+0x191>
			break;
 9ea:	88 37       	cpi	r24, 0x78	; 120
		case 0x23: // TOFFOLI GATE
			newthephi=gates.TOF(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false),read(op3,THE,false),read(op3,PHI,false));
 9ec:	21 f0       	breq	.+8      	; 0x9f6 <__stack+0x197>
 9ee:	af c0       	rjmp	.+350    	; 0xb4e <__stack+0x2ef>
 9f0:	2f 2f       	mov	r18, r31
 9f2:	20 61       	ori	r18, 0x10	; 16
 9f4:	b2 2e       	mov	r11, r18
 9f6:	b4 fe       	sbrs	r11, 4
 9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__stack+0x1b5>
 9fa:	8b 2d       	mov	r24, r11
 9fc:	84 60       	ori	r24, 0x04	; 4
 9fe:	b8 2e       	mov	r11, r24
 a00:	09 c0       	rjmp	.+18     	; 0xa14 <__stack+0x1b5>
 a02:	24 ff       	sbrs	r18, 4
 a04:	0a c0       	rjmp	.+20     	; 0xa1a <__stack+0x1bb>
 a06:	9f 2f       	mov	r25, r31
 a08:	96 60       	ori	r25, 0x06	; 6
 a0a:	b9 2e       	mov	r11, r25
 a0c:	06 c0       	rjmp	.+12     	; 0xa1a <__stack+0x1bb>
 a0e:	28 e0       	ldi	r18, 0x08	; 8
 a10:	30 e0       	ldi	r19, 0x00	; 0
 a12:	05 c0       	rjmp	.+10     	; 0xa1e <__stack+0x1bf>
 a14:	20 e1       	ldi	r18, 0x10	; 16
 a16:	30 e0       	ldi	r19, 0x00	; 0
 a18:	02 c0       	rjmp	.+4      	; 0xa1e <__stack+0x1bf>
 a1a:	20 e1       	ldi	r18, 0x10	; 16
 a1c:	32 e0       	ldi	r19, 0x02	; 2
 a1e:	f8 01       	movw	r30, r16
 a20:	b7 fe       	sbrs	r11, 7
 a22:	07 c0       	rjmp	.+14     	; 0xa32 <__stack+0x1d3>
 a24:	60 81       	ld	r22, Z
 a26:	71 81       	ldd	r23, Z+1	; 0x01
 a28:	82 81       	ldd	r24, Z+2	; 0x02
 a2a:	93 81       	ldd	r25, Z+3	; 0x03
 a2c:	0c 5f       	subi	r16, 0xFC	; 252
 a2e:	1f 4f       	sbci	r17, 0xFF	; 255
 a30:	06 c0       	rjmp	.+12     	; 0xa3e <__stack+0x1df>
 a32:	60 81       	ld	r22, Z
 a34:	71 81       	ldd	r23, Z+1	; 0x01
 a36:	80 e0       	ldi	r24, 0x00	; 0
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	0e 5f       	subi	r16, 0xFE	; 254
 a3c:	1f 4f       	sbci	r17, 0xFF	; 255
 a3e:	a4 01       	movw	r20, r8
 a40:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <__ultoa_invert>
 a44:	a8 2e       	mov	r10, r24
 a46:	a8 18       	sub	r10, r8
 a48:	fb 2d       	mov	r31, r11
 a4a:	ff 77       	andi	r31, 0x7F	; 127
 a4c:	bf 2e       	mov	r11, r31
 a4e:	b6 fe       	sbrs	r11, 6
 a50:	0b c0       	rjmp	.+22     	; 0xa68 <__stack+0x209>
 a52:	2b 2d       	mov	r18, r11
 a54:	2e 7f       	andi	r18, 0xFE	; 254
 a56:	a5 14       	cp	r10, r5
 a58:	50 f4       	brcc	.+20     	; 0xa6e <__stack+0x20f>
 a5a:	b4 fe       	sbrs	r11, 4
 a5c:	0a c0       	rjmp	.+20     	; 0xa72 <__stack+0x213>
 a5e:	b2 fc       	sbrc	r11, 2
 a60:	08 c0       	rjmp	.+16     	; 0xa72 <__stack+0x213>
 a62:	2b 2d       	mov	r18, r11
 a64:	2e 7e       	andi	r18, 0xEE	; 238
 a66:	05 c0       	rjmp	.+10     	; 0xa72 <__stack+0x213>
 a68:	7a 2c       	mov	r7, r10
 a6a:	2b 2d       	mov	r18, r11
 a6c:	03 c0       	rjmp	.+6      	; 0xa74 <__stack+0x215>
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
 a6e:	7a 2c       	mov	r7, r10
 a70:	01 c0       	rjmp	.+2      	; 0xa74 <__stack+0x215>
 a72:	75 2c       	mov	r7, r5
 a74:	24 ff       	sbrs	r18, 4
 a76:	0d c0       	rjmp	.+26     	; 0xa92 <__stack+0x233>
 a78:	fe 01       	movw	r30, r28
 a7a:	ea 0d       	add	r30, r10
 a7c:	f1 1d       	adc	r31, r1
 a7e:	80 81       	ld	r24, Z
 a80:	80 33       	cpi	r24, 0x30	; 48
 a82:	11 f4       	brne	.+4      	; 0xa88 <__stack+0x229>
 a84:	29 7e       	andi	r18, 0xE9	; 233
 a86:	09 c0       	rjmp	.+18     	; 0xa9a <__stack+0x23b>
 a88:	22 ff       	sbrs	r18, 2
 a8a:	06 c0       	rjmp	.+12     	; 0xa98 <__stack+0x239>
 a8c:	73 94       	inc	r7
 a8e:	73 94       	inc	r7
 a90:	04 c0       	rjmp	.+8      	; 0xa9a <__stack+0x23b>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
 a92:	82 2f       	mov	r24, r18
 a94:	86 78       	andi	r24, 0x86	; 134
 a96:	09 f0       	breq	.+2      	; 0xa9a <__stack+0x23b>
 a98:	73 94       	inc	r7
 a9a:	23 fd       	sbrc	r18, 3
 a9c:	13 c0       	rjmp	.+38     	; 0xac4 <__stack+0x265>
 a9e:	20 ff       	sbrs	r18, 0
 aa0:	06 c0       	rjmp	.+12     	; 0xaae <__stack+0x24f>
 aa2:	5a 2c       	mov	r5, r10
 aa4:	73 14       	cp	r7, r3
 aa6:	18 f4       	brcc	.+6      	; 0xaae <__stack+0x24f>
 aa8:	53 0c       	add	r5, r3
 aaa:	57 18       	sub	r5, r7
 aac:	73 2c       	mov	r7, r3
 aae:	73 14       	cp	r7, r3
 ab0:	68 f4       	brcc	.+26     	; 0xacc <__stack+0x26d>
 ab2:	b7 01       	movw	r22, r14
 ab4:	80 e2       	ldi	r24, 0x20	; 32
 ab6:	90 e0       	ldi	r25, 0x00	; 0
 ab8:	2c 87       	std	Y+12, r18	; 0x0c
			write(op3,THE,newthephi[4]); write(op3,PHI,newthephi[5]);
 aba:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 abe:	73 94       	inc	r7
 ac0:	2c 85       	ldd	r18, Y+12	; 0x0c
 ac2:	f5 cf       	rjmp	.-22     	; 0xaae <__stack+0x24f>
 ac4:	73 14       	cp	r7, r3
 ac6:	10 f4       	brcc	.+4      	; 0xacc <__stack+0x26d>
 ac8:	37 18       	sub	r3, r7
 aca:	01 c0       	rjmp	.+2      	; 0xace <__stack+0x26f>
 acc:	31 2c       	mov	r3, r1
 ace:	24 ff       	sbrs	r18, 4
 ad0:	12 c0       	rjmp	.+36     	; 0xaf6 <__stack+0x297>
 ad2:	b7 01       	movw	r22, r14
 ad4:	80 e3       	ldi	r24, 0x30	; 48
 ad6:	90 e0       	ldi	r25, 0x00	; 0
 ad8:	2c 87       	std	Y+12, r18	; 0x0c
 ada:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 ade:	2c 85       	ldd	r18, Y+12	; 0x0c
 ae0:	22 ff       	sbrs	r18, 2
			break;
 ae2:	17 c0       	rjmp	.+46     	; 0xb12 <__stack+0x2b3>
		case 0x24: // DEUTSCH GATE
			newthephi=gates.DEU(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false),read(op3,THE,false),read(op3,PHI,false),read(0,THE,false));
 ae4:	21 ff       	sbrs	r18, 1
 ae6:	03 c0       	rjmp	.+6      	; 0xaee <__stack+0x28f>
 ae8:	88 e5       	ldi	r24, 0x58	; 88
 aea:	90 e0       	ldi	r25, 0x00	; 0
 aec:	02 c0       	rjmp	.+4      	; 0xaf2 <__stack+0x293>
 aee:	88 e7       	ldi	r24, 0x78	; 120
 af0:	90 e0       	ldi	r25, 0x00	; 0
 af2:	b7 01       	movw	r22, r14
 af4:	0c c0       	rjmp	.+24     	; 0xb0e <__stack+0x2af>
 af6:	82 2f       	mov	r24, r18
 af8:	86 78       	andi	r24, 0x86	; 134
 afa:	59 f0       	breq	.+22     	; 0xb12 <__stack+0x2b3>
 afc:	21 fd       	sbrc	r18, 1
 afe:	02 c0       	rjmp	.+4      	; 0xb04 <__stack+0x2a5>
 b00:	80 e2       	ldi	r24, 0x20	; 32
 b02:	01 c0       	rjmp	.+2      	; 0xb06 <__stack+0x2a7>
 b04:	8b e2       	ldi	r24, 0x2B	; 43
 b06:	27 fd       	sbrc	r18, 7
 b08:	8d e2       	ldi	r24, 0x2D	; 45
 b0a:	b7 01       	movw	r22, r14
 b0c:	90 e0       	ldi	r25, 0x00	; 0
 b0e:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 b12:	a5 14       	cp	r10, r5
 b14:	38 f4       	brcc	.+14     	; 0xb24 <__stack+0x2c5>
 b16:	b7 01       	movw	r22, r14
 b18:	80 e3       	ldi	r24, 0x30	; 48
 b1a:	90 e0       	ldi	r25, 0x00	; 0
 b1c:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 b20:	5a 94       	dec	r5
 b22:	f7 cf       	rjmp	.-18     	; 0xb12 <__stack+0x2b3>
 b24:	aa 94       	dec	r10
 b26:	f4 01       	movw	r30, r8
 b28:	ea 0d       	add	r30, r10
 b2a:	f1 1d       	adc	r31, r1
 b2c:	80 81       	ld	r24, Z
 b2e:	b7 01       	movw	r22, r14
 b30:	90 e0       	ldi	r25, 0x00	; 0
 b32:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 b36:	a1 10       	cpse	r10, r1
 b38:	f5 cf       	rjmp	.-22     	; 0xb24 <__stack+0x2c5>
 b3a:	33 20       	and	r3, r3
 b3c:	09 f4       	brne	.+2      	; 0xb40 <__stack+0x2e1>
 b3e:	51 ce       	rjmp	.-862    	; 0x7e2 <vfprintf+0x24>
 b40:	b7 01       	movw	r22, r14
 b42:	80 e2       	ldi	r24, 0x20	; 32
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	0e 94 c7 05 	call	0xb8e	; 0xb8e <fputc>
 b4a:	3a 94       	dec	r3
 b4c:	f6 cf       	rjmp	.-20     	; 0xb3a <__stack+0x2db>
 b4e:	f7 01       	movw	r30, r14
 b50:	86 81       	ldd	r24, Z+6	; 0x06
 b52:	97 81       	ldd	r25, Z+7	; 0x07
 b54:	02 c0       	rjmp	.+4      	; 0xb5a <__stack+0x2fb>
 b56:	8f ef       	ldi	r24, 0xFF	; 255
 b58:	9f ef       	ldi	r25, 0xFF	; 255
 b5a:	2c 96       	adiw	r28, 0x0c	; 12
 b5c:	e2 e1       	ldi	r30, 0x12	; 18
 b5e:	0c 94 73 06 	jmp	0xce6	; 0xce6 <__epilogue_restores__>

00000b62 <strnlen_P>:
 b62:	fc 01       	movw	r30, r24
 b64:	05 90       	lpm	r0, Z+
 b66:	61 50       	subi	r22, 0x01	; 1
 b68:	70 40       	sbci	r23, 0x00	; 0
 b6a:	01 10       	cpse	r0, r1
 b6c:	d8 f7       	brcc	.-10     	; 0xb64 <strnlen_P+0x2>
 b6e:	80 95       	com	r24
 b70:	90 95       	com	r25
 b72:	8e 0f       	add	r24, r30
 b74:	9f 1f       	adc	r25, r31
 b76:	08 95       	ret

00000b78 <strnlen>:
 b78:	fc 01       	movw	r30, r24
 b7a:	61 50       	subi	r22, 0x01	; 1
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
 b7c:	70 40       	sbci	r23, 0x00	; 0
 b7e:	01 90       	ld	r0, Z+
 b80:	01 10       	cpse	r0, r1
 b82:	d8 f7       	brcc	.-10     	; 0xb7a <strnlen+0x2>
 b84:	80 95       	com	r24
 b86:	90 95       	com	r25
 b88:	8e 0f       	add	r24, r30
 b8a:	9f 1f       	adc	r25, r31
 b8c:	08 95       	ret

00000b8e <fputc>:
 b8e:	0f 93       	push	r16
 b90:	1f 93       	push	r17
 b92:	cf 93       	push	r28
 b94:	df 93       	push	r29
 b96:	18 2f       	mov	r17, r24
 b98:	09 2f       	mov	r16, r25
 b9a:	eb 01       	movw	r28, r22
 b9c:	8b 81       	ldd	r24, Y+3	; 0x03
 b9e:	81 fd       	sbrc	r24, 1
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
 ba0:	03 c0       	rjmp	.+6      	; 0xba8 <fputc+0x1a>
 ba2:	8f ef       	ldi	r24, 0xFF	; 255
 ba4:	9f ef       	ldi	r25, 0xFF	; 255
 ba6:	20 c0       	rjmp	.+64     	; 0xbe8 <fputc+0x5a>
 ba8:	82 ff       	sbrs	r24, 2
 baa:	10 c0       	rjmp	.+32     	; 0xbcc <fputc+0x3e>
 bac:	4e 81       	ldd	r20, Y+6	; 0x06
 bae:	5f 81       	ldd	r21, Y+7	; 0x07
 bb0:	2c 81       	ldd	r18, Y+4	; 0x04
 bb2:	3d 81       	ldd	r19, Y+5	; 0x05
 bb4:	42 17       	cp	r20, r18
 bb6:	53 07       	cpc	r21, r19
 bb8:	7c f4       	brge	.+30     	; 0xbd8 <fputc+0x4a>
 bba:	e8 81       	ld	r30, Y
 bbc:	f9 81       	ldd	r31, Y+1	; 0x01
 bbe:	9f 01       	movw	r18, r30
 bc0:	2f 5f       	subi	r18, 0xFF	; 255
 bc2:	3f 4f       	sbci	r19, 0xFF	; 255
 bc4:	39 83       	std	Y+1, r19	; 0x01
 bc6:	28 83       	st	Y, r18
			write(op3,THE,newthephi[4]); write(op3,PHI,newthephi[5]);
 bc8:	10 83       	st	Z, r17
 bca:	06 c0       	rjmp	.+12     	; 0xbd8 <fputc+0x4a>
 bcc:	e8 85       	ldd	r30, Y+8	; 0x08
 bce:	f9 85       	ldd	r31, Y+9	; 0x09
 bd0:	81 2f       	mov	r24, r17
 bd2:	09 95       	icall
 bd4:	89 2b       	or	r24, r25
 bd6:	29 f7       	brne	.-54     	; 0xba2 <fputc+0x14>
 bd8:	2e 81       	ldd	r18, Y+6	; 0x06
 bda:	3f 81       	ldd	r19, Y+7	; 0x07
 bdc:	2f 5f       	subi	r18, 0xFF	; 255
 bde:	3f 4f       	sbci	r19, 0xFF	; 255
 be0:	3f 83       	std	Y+7, r19	; 0x07
 be2:	2e 83       	std	Y+6, r18	; 0x06
 be4:	81 2f       	mov	r24, r17
 be6:	90 2f       	mov	r25, r16
 be8:	df 91       	pop	r29
 bea:	cf 91       	pop	r28
 bec:	1f 91       	pop	r17
 bee:	0f 91       	pop	r16
	/*serial.writestr("Function: "); serial.writestr(utils.int2str(func));
	serial.writestr(" , OP1: ");   serial.writestr(utils.int2str(op1));
	serial.writestr(" , OP2: ");   serial.writestr(utils.int2str(op2));
	serial.writestr(" PC: ");	   serial.writestrln(utils.int2str(program_counter));
	serial.writestrln("");*/
	free(newthephi);	
 bf0:	08 95       	ret

00000bf2 <__ultoa_invert>:
 bf2:	fa 01       	movw	r30, r20
 bf4:	aa 27       	eor	r26, r26
 bf6:	28 30       	cpi	r18, 0x08	; 8
 bf8:	51 f1       	breq	.+84     	; 0xc4e <__ultoa_invert+0x5c>
 bfa:	20 31       	cpi	r18, 0x10	; 16
 bfc:	81 f1       	breq	.+96     	; 0xc5e <__ultoa_invert+0x6c>
 bfe:	e8 94       	clt
 c00:	6f 93       	push	r22
 c02:	6e 7f       	andi	r22, 0xFE	; 254
 c04:	6e 5f       	subi	r22, 0xFE	; 254
 c06:	7f 4f       	sbci	r23, 0xFF	; 255
 c08:	8f 4f       	sbci	r24, 0xFF	; 255
 c0a:	9f 4f       	sbci	r25, 0xFF	; 255
 c0c:	af 4f       	sbci	r26, 0xFF	; 255
 c0e:	b1 e0       	ldi	r27, 0x01	; 1
 c10:	3e d0       	rcall	.+124    	; 0xc8e <__ultoa_invert+0x9c>
 c12:	b4 e0       	ldi	r27, 0x04	; 4
 c14:	3c d0       	rcall	.+120    	; 0xc8e <__ultoa_invert+0x9c>
 c16:	67 0f       	add	r22, r23
 c18:	78 1f       	adc	r23, r24
 c1a:	89 1f       	adc	r24, r25
 c1c:	9a 1f       	adc	r25, r26
 c1e:	a1 1d       	adc	r26, r1
 c20:	68 0f       	add	r22, r24
 c22:	79 1f       	adc	r23, r25
 c24:	8a 1f       	adc	r24, r26
 c26:	91 1d       	adc	r25, r1
 c28:	a1 1d       	adc	r26, r1
 c2a:	6a 0f       	add	r22, r26
 c2c:	71 1d       	adc	r23, r1
 c2e:	81 1d       	adc	r24, r1
 c30:	91 1d       	adc	r25, r1
 c32:	a1 1d       	adc	r26, r1
 c34:	20 d0       	rcall	.+64     	; 0xc76 <__ultoa_invert+0x84>
 c36:	09 f4       	brne	.+2      	; 0xc3a <__ultoa_invert+0x48>
 c38:	68 94       	set
 c3a:	3f 91       	pop	r19
 c3c:	2a e0       	ldi	r18, 0x0A	; 10
 c3e:	26 9f       	mul	r18, r22
 c40:	11 24       	eor	r1, r1
 c42:	30 19       	sub	r19, r0
 c44:	30 5d       	subi	r19, 0xD0	; 208
 c46:	31 93       	st	Z+, r19
 c48:	de f6       	brtc	.-74     	; 0xc00 <__ultoa_invert+0xe>
 c4a:	cf 01       	movw	r24, r30
 c4c:	08 95       	ret
 c4e:	46 2f       	mov	r20, r22
 c50:	47 70       	andi	r20, 0x07	; 7
 c52:	40 5d       	subi	r20, 0xD0	; 208
 c54:	41 93       	st	Z+, r20
 c56:	b3 e0       	ldi	r27, 0x03	; 3
 c58:	0f d0       	rcall	.+30     	; 0xc78 <__ultoa_invert+0x86>
 c5a:	c9 f7       	brne	.-14     	; 0xc4e <__ultoa_invert+0x5c>
 c5c:	f6 cf       	rjmp	.-20     	; 0xc4a <__ultoa_invert+0x58>
 c5e:	46 2f       	mov	r20, r22
 c60:	4f 70       	andi	r20, 0x0F	; 15
 c62:	40 5d       	subi	r20, 0xD0	; 208
 c64:	4a 33       	cpi	r20, 0x3A	; 58
 c66:	18 f0       	brcs	.+6      	; 0xc6e <__ultoa_invert+0x7c>
 c68:	49 5d       	subi	r20, 0xD9	; 217
 c6a:	31 fd       	sbrc	r19, 1
 c6c:	40 52       	subi	r20, 0x20	; 32
 c6e:	41 93       	st	Z+, r20
 c70:	02 d0       	rcall	.+4      	; 0xc76 <__ultoa_invert+0x84>
 c72:	a9 f7       	brne	.-22     	; 0xc5e <__ultoa_invert+0x6c>
 c74:	ea cf       	rjmp	.-44     	; 0xc4a <__ultoa_invert+0x58>
 c76:	b4 e0       	ldi	r27, 0x04	; 4
 c78:	a6 95       	lsr	r26
 c7a:	97 95       	ror	r25
 c7c:	87 95       	ror	r24
 c7e:	77 95       	ror	r23
 c80:	67 95       	ror	r22
 c82:	ba 95       	dec	r27
 c84:	c9 f7       	brne	.-14     	; 0xc78 <__ultoa_invert+0x86>
 c86:	00 97       	sbiw	r24, 0x00	; 0
 c88:	61 05       	cpc	r22, r1
 c8a:	71 05       	cpc	r23, r1
 c8c:	08 95       	ret
 c8e:	9b 01       	movw	r18, r22
 c90:	ac 01       	movw	r20, r24
 c92:	0a 2e       	mov	r0, r26
 c94:	06 94       	lsr	r0
 c96:	57 95       	ror	r21
 c98:	47 95       	ror	r20
 c9a:	37 95       	ror	r19
 c9c:	27 95       	ror	r18
 c9e:	ba 95       	dec	r27
 ca0:	c9 f7       	brne	.-14     	; 0xc94 <__ultoa_invert+0xa2>
 ca2:	62 0f       	add	r22, r18
 ca4:	73 1f       	adc	r23, r19
 ca6:	84 1f       	adc	r24, r20
 ca8:	95 1f       	adc	r25, r21
 caa:	a0 1d       	adc	r26, r0
 cac:	08 95       	ret

00000cae <__prologue_saves__>:
 cae:	2f 92       	push	r2
 cb0:	3f 92       	push	r3
 cb2:	4f 92       	push	r4
 cb4:	5f 92       	push	r5
 cb6:	6f 92       	push	r6
 cb8:	7f 92       	push	r7
 cba:	8f 92       	push	r8
 cbc:	9f 92       	push	r9
 cbe:	af 92       	push	r10
 cc0:	bf 92       	push	r11
 cc2:	cf 92       	push	r12
 cc4:	df 92       	push	r13
 cc6:	ef 92       	push	r14
 cc8:	ff 92       	push	r15
 cca:	0f 93       	push	r16
 ccc:	1f 93       	push	r17
 cce:	cf 93       	push	r28
 cd0:	df 93       	push	r29
 cd2:	cd b7       	in	r28, 0x3d	; 61
 cd4:	de b7       	in	r29, 0x3e	; 62
 cd6:	ca 1b       	sub	r28, r26
 cd8:	db 0b       	sbc	r29, r27
 cda:	0f b6       	in	r0, 0x3f	; 63
 cdc:	f8 94       	cli
 cde:	de bf       	out	0x3e, r29	; 62
 ce0:	0f be       	out	0x3f, r0	; 63
 ce2:	cd bf       	out	0x3d, r28	; 61
 ce4:	09 94       	ijmp

00000ce6 <__epilogue_restores__>:
 ce6:	2a 88       	ldd	r2, Y+18	; 0x12
 ce8:	39 88       	ldd	r3, Y+17	; 0x11
 cea:	48 88       	ldd	r4, Y+16	; 0x10
 cec:	5f 84       	ldd	r5, Y+15	; 0x0f
 cee:	6e 84       	ldd	r6, Y+14	; 0x0e
 cf0:	7d 84       	ldd	r7, Y+13	; 0x0d
 cf2:	8c 84       	ldd	r8, Y+12	; 0x0c
 cf4:	9b 84       	ldd	r9, Y+11	; 0x0b
 cf6:	aa 84       	ldd	r10, Y+10	; 0x0a
 cf8:	b9 84       	ldd	r11, Y+9	; 0x09
 cfa:	c8 84       	ldd	r12, Y+8	; 0x08
 cfc:	df 80       	ldd	r13, Y+7	; 0x07
 cfe:	ee 80       	ldd	r14, Y+6	; 0x06
 d00:	fd 80       	ldd	r15, Y+5	; 0x05
 d02:	0c 81       	ldd	r16, Y+4	; 0x04
 d04:	1b 81       	ldd	r17, Y+3	; 0x03
 d06:	aa 81       	ldd	r26, Y+2	; 0x02
 d08:	b9 81       	ldd	r27, Y+1	; 0x01
 d0a:	ce 0f       	add	r28, r30
 d0c:	d1 1d       	adc	r29, r1
 d0e:	0f b6       	in	r0, 0x3f	; 63
 d10:	f8 94       	cli
 d12:	de bf       	out	0x3e, r29	; 62
 d14:	0f be       	out	0x3f, r0	; 63
 d16:	cd bf       	out	0x3d, r28	; 61
 d18:	ed 01       	movw	r28, r26
 d1a:	08 95       	ret

00000d1c <_exit>:
 d1c:	f8 94       	cli

00000d1e <__stop_program>:
 d1e:	ff cf       	rjmp	.-2      	; 0xd1e <__stop_program>
