
QEPU_Project_Atmega32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000070a4  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000aa  00800060  000070a4  00007158  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000f  0080010a  0080010a  00007202  2**0
                  ALLOC
  3 .eeprom       00000002  00810000  00810000  00007202  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  00007204  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000003d0  00000000  00000000  00007260  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00010cfe  00000000  00000000  00007630  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001a1b  00000000  00000000  0001832e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001607  00000000  00000000  00019d49  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000014ac  00000000  00000000  0001b350  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000010f6  00000000  00000000  0001c7fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00006e5f  00000000  00000000  0001d8f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003f0  00000000  00000000  00024751  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__ctors_end>
       4:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
       8:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
       c:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      10:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      14:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      18:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      1c:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      20:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      24:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      28:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      2c:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      30:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      34:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      38:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      3c:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      40:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      44:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      48:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      4c:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      50:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__bad_interrupt>
      54:	39 21       	and	r19, r9
      56:	5c 21       	and	r21, r12
      58:	6a 21       	and	r22, r10
      5a:	78 21       	and	r23, r8
      5c:	88 21       	and	r24, r8
      5e:	90 21       	and	r25, r0
      60:	98 21       	and	r25, r8
      62:	a4 21       	and	r26, r4
      64:	b0 21       	and	r27, r0
      66:	ba 21       	and	r27, r10
      68:	c4 21       	and	r28, r4
      6a:	d4 21       	and	r29, r4
      6c:	ee 21       	and	r30, r14
      6e:	08 22       	and	r0, r24
      70:	22 22       	and	r2, r18
      72:	3c 22       	and	r3, r28
      74:	ac 28       	or	r10, r12
      76:	56 22       	and	r5, r22
      78:	70 22       	and	r7, r16
      7a:	8a 22       	and	r8, r26
      7c:	a4 22       	and	r10, r20
      7e:	b9 22       	and	r11, r25
      80:	c3 22       	and	r12, r19
      82:	ac 28       	or	r10, r12
      84:	d0 22       	and	r13, r16
      86:	ac 28       	or	r10, r12
      88:	d8 22       	and	r13, r24
      8a:	e5 22       	and	r14, r21
      8c:	13 23       	and	r17, r19
      8e:	41 23       	and	r20, r17
      90:	6f 23       	and	r22, r31
      92:	9d 23       	and	r25, r29
      94:	cb 23       	and	r28, r27
      96:	f9 23       	and	r31, r25
      98:	29 24       	eor	r2, r9
      9a:	59 24       	eor	r5, r9
      9c:	89 24       	eor	r8, r9
      9e:	e4 24       	eor	r14, r4
      a0:	3f 25       	eor	r19, r15
      a2:	9a 25       	eor	r25, r10
      a4:	f5 25       	eor	r31, r5
      a6:	50 26       	eor	r5, r16
      a8:	ab 26       	eor	r10, r27
      aa:	06 27       	eor	r16, r22
      ac:	8f 27       	eor	r24, r31
      ae:	18 28       	or	r1, r8
      b0:	08 4a       	sbci	r16, 0xA8	; 168
      b2:	d7 3b       	cpi	r29, 0xB7	; 183
      b4:	3b ce       	rjmp	.-906    	; 0xfffffd2c <__eeprom_end+0xff7efd2a>
      b6:	01 6e       	ori	r16, 0xE1	; 225
      b8:	84 bc       	out	0x24, r8	; 36
      ba:	bf fd       	.word	0xfdbf	; ????
      bc:	c1 2f       	mov	r28, r17
      be:	3d 6c       	ori	r19, 0xCD	; 205
      c0:	74 31       	cpi	r23, 0x14	; 20
      c2:	9a bd       	out	0x2a, r25	; 42
      c4:	56 83       	std	Z+6, r21	; 0x06
      c6:	3d da       	rcall	.-2950   	; 0xfffff542 <__eeprom_end+0xff7ef540>
      c8:	3d 00       	.word	0x003d	; ????
      ca:	c7 7f       	andi	r28, 0xF7	; 247
      cc:	11 be       	out	0x31, r1	; 49
      ce:	d9 e4       	ldi	r29, 0x49	; 73
      d0:	bb 4c       	sbci	r27, 0xCB	; 203
      d2:	3e 91       	ld	r19, -X
      d4:	6b aa       	std	Y+51, r6	; 0x33
      d6:	aa be       	out	0x3a, r10	; 58
      d8:	00 00       	nop
      da:	00 80       	ld	r0, Z
      dc:	3f 07       	cpc	r19, r31
      de:	63 42       	sbci	r22, 0x23	; 35
      e0:	36 b7       	in	r19, 0x36	; 54
      e2:	9b d8       	rcall	.-3786   	; 0xfffff21a <__eeprom_end+0xff7ef218>
      e4:	a7 1a       	sub	r10, r23
      e6:	39 68       	ori	r19, 0x89	; 137
      e8:	56 18       	sub	r5, r6
      ea:	ae ba       	out	0x1e, r10	; 30
      ec:	ab 55       	subi	r26, 0x5B	; 91
      ee:	8c 1d       	adc	r24, r12
      f0:	3c b7       	in	r19, 0x3c	; 60
      f2:	cc 57       	subi	r28, 0x7C	; 124
      f4:	63 bd       	out	0x23, r22	; 35
      f6:	6d ed       	ldi	r22, 0xDD	; 221
      f8:	fd 75       	andi	r31, 0x5D	; 93
      fa:	3e f6       	brtc	.-114    	; 0x8a <__SREG__+0x4b>
      fc:	17 72       	andi	r17, 0x27	; 39
      fe:	31 bf       	out	0x31, r19	; 49
     100:	00 00       	nop
     102:	00 80       	ld	r0, Z
     104:	3f 07       	cpc	r19, r31
     106:	2c 7a       	andi	r18, 0xAC	; 172
     108:	a5 ba       	out	0x15, r10	; 21
     10a:	6c c5       	rjmp	.+2776   	; 0xbe4 <_ZN5Gates8ampl2vecEiPiS0_+0xca>
     10c:	90 da       	rcall	.-2784   	; 0xfffff62e <__eeprom_end+0xff7ef62c>
     10e:	3b 93       	.word	0x933b	; ????
     110:	65 fc       	sbrc	r6, 5
     112:	8b bc       	out	0x2b, r8	; 43
     114:	53 f8       	bld	r5, 3
     116:	10 fd       	sbrc	r17, 0
     118:	3c 56       	subi	r19, 0x6C	; 108
     11a:	92 83       	std	Z+2, r25	; 0x02
     11c:	4d bd       	out	0x2d, r20	; 45
     11e:	87 9d       	mul	r24, r7
     120:	3a b6       	in	r3, 0x3a	; 58
     122:	3d cb       	rjmp	.-2438   	; 0xfffff79e <__eeprom_end+0xff7ef79c>
     124:	c9 bf       	out	0x39, r28	; 57
     126:	5b be       	out	0x3b, r5	; 59
     128:	73 da       	rcall	.-2842   	; 0xfffff610 <__eeprom_end+0xff7ef60e>
     12a:	0f c9       	rjmp	.-3554   	; 0xfffff34a <__eeprom_end+0xff7ef348>
     12c:	3f 05       	cpc	r19, r15
     12e:	a8 4c       	sbci	r26, 0xC8	; 200
     130:	cd b2       	in	r12, 0x1d	; 29
     132:	d4 4e       	sbci	r29, 0xE4	; 228
     134:	b9 38       	cpi	r27, 0x89	; 137
     136:	36 a9       	ldd	r19, Z+54	; 0x36
     138:	02 0c       	add	r0, r2
     13a:	50 b9       	out	0x00, r21	; 0
     13c:	91 86       	std	Z+9, r9	; 0x09
     13e:	88 08       	sbc	r8, r8
     140:	3c a6       	std	Y+44, r3	; 0x2c
     142:	aa aa       	std	Y+50, r10	; 0x32
     144:	2a be       	out	0x3a, r2	; 58
     146:	00 00       	nop
     148:	00 80       	ld	r0, Z
     14a:	3f 08       	sbc	r3, r15
     14c:	00 00       	nop
     14e:	00 be       	out	0x30, r0	; 48
     150:	92 24       	eor	r9, r2
     152:	49 12       	cpse	r4, r25
     154:	3e ab       	std	Y+54, r19	; 0x36
     156:	aa aa       	std	Y+50, r10	; 0x32
     158:	2a be       	out	0x3a, r2	; 58
     15a:	cd cc       	rjmp	.-1638   	; 0xfffffaf6 <__eeprom_end+0xff7efaf4>
     15c:	cc 4c       	sbci	r28, 0xCC	; 204
     15e:	3e 00       	.word	0x003e	; ????
     160:	00 00       	nop
     162:	80 be       	out	0x30, r8	; 48
     164:	ab aa       	std	Y+51, r10	; 0x33
     166:	aa aa       	std	Y+50, r10	; 0x32
     168:	3e 00       	.word	0x003e	; ????
     16a:	00 00       	nop
     16c:	00 bf       	out	0x30, r16	; 48
     16e:	00 00       	nop
     170:	00 80       	ld	r0, Z
     172:	3f 00       	.word	0x003f	; ????
     174:	00 00       	nop
     176:	00 00       	nop
     178:	08 41       	sbci	r16, 0x18	; 24
     17a:	78 d3       	rcall	.+1776   	; 0x86c <__stack+0xd>
     17c:	bb 43       	sbci	r27, 0x3B	; 59
     17e:	87 d1       	rcall	.+782    	; 0x48e <_ZN6EEProm4readEj+0x4a>
     180:	13 3d       	cpi	r17, 0xD3	; 211
     182:	19 0e       	add	r1, r25
     184:	3c c3       	rjmp	.+1656   	; 0x7fe <_ZN5Gates17reverse_kroneckerEP7Complexi+0xd4>
     186:	bd 42       	sbci	r27, 0x2D	; 45
     188:	82 ad       	ldd	r24, Z+58	; 0x3a
     18a:	2b 3e       	cpi	r18, 0xEB	; 235
     18c:	68 ec       	ldi	r22, 0xC8	; 200
     18e:	82 76       	andi	r24, 0x62	; 98
     190:	be d9       	rcall	.-3204   	; 0xfffff50e <__eeprom_end+0xff7ef50c>
     192:	8f e1       	ldi	r24, 0x1F	; 31
     194:	a9 3e       	cpi	r26, 0xE9	; 233
     196:	4c 80       	ldd	r4, Y+4	; 0x04
     198:	ef ff       	.word	0xffef	; ????
     19a:	be 01       	movw	r22, r28
     19c:	c4 ff       	sbrs	r28, 4
     19e:	7f 3f       	cpi	r23, 0xFF	; 255
     1a0:	00 00       	nop
     1a2:	00 00       	nop
	...

000001a6 <__ctors_start>:
     1a6:	e1 1d       	adc	r30, r1

000001a8 <__ctors_end>:
     1a8:	11 24       	eor	r1, r1
     1aa:	1f be       	out	0x3f, r1	; 63
     1ac:	cf e5       	ldi	r28, 0x5F	; 95
     1ae:	d8 e0       	ldi	r29, 0x08	; 8
     1b0:	de bf       	out	0x3e, r29	; 62
     1b2:	cd bf       	out	0x3d, r28	; 61

000001b4 <__do_copy_data>:
     1b4:	11 e0       	ldi	r17, 0x01	; 1
     1b6:	a0 e6       	ldi	r26, 0x60	; 96
     1b8:	b0 e0       	ldi	r27, 0x00	; 0
     1ba:	e4 ea       	ldi	r30, 0xA4	; 164
     1bc:	f0 e7       	ldi	r31, 0x70	; 112
     1be:	02 c0       	rjmp	.+4      	; 0x1c4 <__do_copy_data+0x10>
     1c0:	05 90       	lpm	r0, Z+
     1c2:	0d 92       	st	X+, r0
     1c4:	aa 30       	cpi	r26, 0x0A	; 10
     1c6:	b1 07       	cpc	r27, r17
     1c8:	d9 f7       	brne	.-10     	; 0x1c0 <__do_copy_data+0xc>

000001ca <__do_clear_bss>:
     1ca:	21 e0       	ldi	r18, 0x01	; 1
     1cc:	aa e0       	ldi	r26, 0x0A	; 10
     1ce:	b1 e0       	ldi	r27, 0x01	; 1
     1d0:	01 c0       	rjmp	.+2      	; 0x1d4 <.do_clear_bss_start>

000001d2 <.do_clear_bss_loop>:
     1d2:	1d 92       	st	X+, r1

000001d4 <.do_clear_bss_start>:
     1d4:	a9 31       	cpi	r26, 0x19	; 25
     1d6:	b2 07       	cpc	r27, r18
     1d8:	e1 f7       	brne	.-8      	; 0x1d2 <.do_clear_bss_loop>

000001da <__do_global_ctors>:
     1da:	11 e0       	ldi	r17, 0x01	; 1
     1dc:	c8 ea       	ldi	r28, 0xA8	; 168
     1de:	d1 e0       	ldi	r29, 0x01	; 1
     1e0:	04 c0       	rjmp	.+8      	; 0x1ea <__do_global_ctors+0x10>
     1e2:	22 97       	sbiw	r28, 0x02	; 2
     1e4:	fe 01       	movw	r30, r28
     1e6:	0e 94 f8 31 	call	0x63f0	; 0x63f0 <__tablejump__>
     1ea:	c6 3a       	cpi	r28, 0xA6	; 166
     1ec:	d1 07       	cpc	r29, r17
     1ee:	c9 f7       	brne	.-14     	; 0x1e2 <__do_global_ctors+0x8>
     1f0:	0e 94 13 2b 	call	0x5626	; 0x5626 <main>
     1f4:	0c 94 50 38 	jmp	0x70a0	; 0x70a0 <_exit>

000001f8 <__bad_interrupt>:
     1f8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001fc <_ZN7ComplexC1Eff>:
     1fc:	0f 93       	push	r16
     1fe:	1f 93       	push	r17
     200:	fc 01       	movw	r30, r24
     202:	40 83       	st	Z, r20
     204:	51 83       	std	Z+1, r21	; 0x01
     206:	62 83       	std	Z+2, r22	; 0x02
     208:	73 83       	std	Z+3, r23	; 0x03
     20a:	04 83       	std	Z+4, r16	; 0x04
     20c:	15 83       	std	Z+5, r17	; 0x05
     20e:	26 83       	std	Z+6, r18	; 0x06
     210:	37 83       	std	Z+7, r19	; 0x07
     212:	1f 91       	pop	r17
     214:	0f 91       	pop	r16
     216:	08 95       	ret

00000218 <_ZN7ComplexC1Ev>:
     218:	fc 01       	movw	r30, r24
     21a:	10 82       	st	Z, r1
     21c:	11 82       	std	Z+1, r1	; 0x01
     21e:	12 82       	std	Z+2, r1	; 0x02
     220:	13 82       	std	Z+3, r1	; 0x03
     222:	14 82       	std	Z+4, r1	; 0x04
     224:	15 82       	std	Z+5, r1	; 0x05
     226:	16 82       	std	Z+6, r1	; 0x06
     228:	17 82       	std	Z+7, r1	; 0x07
     22a:	08 95       	ret

0000022c <_ZN7Complex3addES_>:
     22c:	af 92       	push	r10
     22e:	bf 92       	push	r11
     230:	cf 92       	push	r12
     232:	df 92       	push	r13
     234:	ef 92       	push	r14
     236:	ff 92       	push	r15
     238:	0f 93       	push	r16
     23a:	1f 93       	push	r17
     23c:	cf 93       	push	r28
     23e:	df 93       	push	r29
     240:	cd b7       	in	r28, 0x3d	; 61
     242:	de b7       	in	r29, 0x3e	; 62
     244:	68 97       	sbiw	r28, 0x18	; 24
     246:	0f b6       	in	r0, 0x3f	; 63
     248:	f8 94       	cli
     24a:	de bf       	out	0x3e, r29	; 62
     24c:	0f be       	out	0x3f, r0	; 63
     24e:	cd bf       	out	0x3d, r28	; 61
     250:	5c 01       	movw	r10, r24
     252:	09 8b       	std	Y+17, r16	; 0x11
     254:	1a 8b       	std	Y+18, r17	; 0x12
     256:	2b 8b       	std	Y+19, r18	; 0x13
     258:	3c 8b       	std	Y+20, r19	; 0x14
     25a:	4d 8b       	std	Y+21, r20	; 0x15
     25c:	5e 8b       	std	Y+22, r21	; 0x16
     25e:	6f 8b       	std	Y+23, r22	; 0x17
     260:	78 8f       	std	Y+24, r23	; 0x18
     262:	2d 89       	ldd	r18, Y+21	; 0x15
     264:	3e 89       	ldd	r19, Y+22	; 0x16
     266:	4f 89       	ldd	r20, Y+23	; 0x17
     268:	58 8d       	ldd	r21, Y+24	; 0x18
     26a:	fc 01       	movw	r30, r24
     26c:	64 81       	ldd	r22, Z+4	; 0x04
     26e:	75 81       	ldd	r23, Z+5	; 0x05
     270:	86 81       	ldd	r24, Z+6	; 0x06
     272:	97 81       	ldd	r25, Z+7	; 0x07
     274:	0e 94 cd 2d 	call	0x5b9a	; 0x5b9a <__addsf3>
     278:	6b 01       	movw	r12, r22
     27a:	7c 01       	movw	r14, r24
     27c:	29 89       	ldd	r18, Y+17	; 0x11
     27e:	3a 89       	ldd	r19, Y+18	; 0x12
     280:	4b 89       	ldd	r20, Y+19	; 0x13
     282:	5c 89       	ldd	r21, Y+20	; 0x14
     284:	f5 01       	movw	r30, r10
     286:	60 81       	ld	r22, Z
     288:	71 81       	ldd	r23, Z+1	; 0x01
     28a:	82 81       	ldd	r24, Z+2	; 0x02
     28c:	93 81       	ldd	r25, Z+3	; 0x03
     28e:	0e 94 cd 2d 	call	0x5b9a	; 0x5b9a <__addsf3>
     292:	ab 01       	movw	r20, r22
     294:	bc 01       	movw	r22, r24
     296:	97 01       	movw	r18, r14
     298:	86 01       	movw	r16, r12
     29a:	ce 01       	movw	r24, r28
     29c:	01 96       	adiw	r24, 0x01	; 1
     29e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
     2a2:	88 e0       	ldi	r24, 0x08	; 8
     2a4:	fe 01       	movw	r30, r28
     2a6:	31 96       	adiw	r30, 0x01	; 1
     2a8:	de 01       	movw	r26, r28
     2aa:	19 96       	adiw	r26, 0x09	; 9
     2ac:	01 90       	ld	r0, Z+
     2ae:	0d 92       	st	X+, r0
     2b0:	8a 95       	dec	r24
     2b2:	e1 f7       	brne	.-8      	; 0x2ac <_ZN7Complex3addES_+0x80>
     2b4:	29 85       	ldd	r18, Y+9	; 0x09
     2b6:	3a 85       	ldd	r19, Y+10	; 0x0a
     2b8:	4b 85       	ldd	r20, Y+11	; 0x0b
     2ba:	5c 85       	ldd	r21, Y+12	; 0x0c
     2bc:	6d 85       	ldd	r22, Y+13	; 0x0d
     2be:	7e 85       	ldd	r23, Y+14	; 0x0e
     2c0:	8f 85       	ldd	r24, Y+15	; 0x0f
     2c2:	98 89       	ldd	r25, Y+16	; 0x10
     2c4:	68 96       	adiw	r28, 0x18	; 24
     2c6:	0f b6       	in	r0, 0x3f	; 63
     2c8:	f8 94       	cli
     2ca:	de bf       	out	0x3e, r29	; 62
     2cc:	0f be       	out	0x3f, r0	; 63
     2ce:	cd bf       	out	0x3d, r28	; 61
     2d0:	df 91       	pop	r29
     2d2:	cf 91       	pop	r28
     2d4:	1f 91       	pop	r17
     2d6:	0f 91       	pop	r16
     2d8:	ff 90       	pop	r15
     2da:	ef 90       	pop	r14
     2dc:	df 90       	pop	r13
     2de:	cf 90       	pop	r12
     2e0:	bf 90       	pop	r11
     2e2:	af 90       	pop	r10
     2e4:	08 95       	ret

000002e6 <_ZN7Complex3mulES_>:
     2e6:	4f 92       	push	r4
     2e8:	5f 92       	push	r5
     2ea:	6f 92       	push	r6
     2ec:	7f 92       	push	r7
     2ee:	8f 92       	push	r8
     2f0:	9f 92       	push	r9
     2f2:	af 92       	push	r10
     2f4:	bf 92       	push	r11
     2f6:	cf 92       	push	r12
     2f8:	df 92       	push	r13
     2fa:	ef 92       	push	r14
     2fc:	ff 92       	push	r15
     2fe:	0f 93       	push	r16
     300:	1f 93       	push	r17
     302:	cf 93       	push	r28
     304:	df 93       	push	r29
     306:	cd b7       	in	r28, 0x3d	; 61
     308:	de b7       	in	r29, 0x3e	; 62
     30a:	a0 97       	sbiw	r28, 0x20	; 32
     30c:	0f b6       	in	r0, 0x3f	; 63
     30e:	f8 94       	cli
     310:	de bf       	out	0x3e, r29	; 62
     312:	0f be       	out	0x3f, r0	; 63
     314:	cd bf       	out	0x3d, r28	; 61
     316:	09 8b       	std	Y+17, r16	; 0x11
     318:	1a 8b       	std	Y+18, r17	; 0x12
     31a:	2b 8b       	std	Y+19, r18	; 0x13
     31c:	3c 8b       	std	Y+20, r19	; 0x14
     31e:	4d 8b       	std	Y+21, r20	; 0x15
     320:	5e 8b       	std	Y+22, r21	; 0x16
     322:	6f 8b       	std	Y+23, r22	; 0x17
     324:	78 8f       	std	Y+24, r23	; 0x18
     326:	89 88       	ldd	r8, Y+17	; 0x11
     328:	9a 88       	ldd	r9, Y+18	; 0x12
     32a:	ab 88       	ldd	r10, Y+19	; 0x13
     32c:	bc 88       	ldd	r11, Y+20	; 0x14
     32e:	2d 89       	ldd	r18, Y+21	; 0x15
     330:	3e 89       	ldd	r19, Y+22	; 0x16
     332:	4f 89       	ldd	r20, Y+23	; 0x17
     334:	58 8d       	ldd	r21, Y+24	; 0x18
     336:	2d 8f       	std	Y+29, r18	; 0x1d
     338:	3e 8f       	std	Y+30, r19	; 0x1e
     33a:	4f 8f       	std	Y+31, r20	; 0x1f
     33c:	58 a3       	std	Y+32, r21	; 0x20
     33e:	fc 01       	movw	r30, r24
     340:	c0 80       	ld	r12, Z
     342:	d1 80       	ldd	r13, Z+1	; 0x01
     344:	e2 80       	ldd	r14, Z+2	; 0x02
     346:	f3 80       	ldd	r15, Z+3	; 0x03
     348:	24 81       	ldd	r18, Z+4	; 0x04
     34a:	35 81       	ldd	r19, Z+5	; 0x05
     34c:	46 81       	ldd	r20, Z+6	; 0x06
     34e:	57 81       	ldd	r21, Z+7	; 0x07
     350:	29 8f       	std	Y+25, r18	; 0x19
     352:	3a 8f       	std	Y+26, r19	; 0x1a
     354:	4b 8f       	std	Y+27, r20	; 0x1b
     356:	5c 8f       	std	Y+28, r21	; 0x1c
     358:	2d 8d       	ldd	r18, Y+29	; 0x1d
     35a:	3e 8d       	ldd	r19, Y+30	; 0x1e
     35c:	4f 8d       	ldd	r20, Y+31	; 0x1f
     35e:	58 a1       	ldd	r21, Y+32	; 0x20
     360:	c7 01       	movw	r24, r14
     362:	b6 01       	movw	r22, r12
     364:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     368:	2b 01       	movw	r4, r22
     36a:	3c 01       	movw	r6, r24
     36c:	a5 01       	movw	r20, r10
     36e:	94 01       	movw	r18, r8
     370:	69 8d       	ldd	r22, Y+25	; 0x19
     372:	7a 8d       	ldd	r23, Y+26	; 0x1a
     374:	8b 8d       	ldd	r24, Y+27	; 0x1b
     376:	9c 8d       	ldd	r25, Y+28	; 0x1c
     378:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     37c:	9b 01       	movw	r18, r22
     37e:	ac 01       	movw	r20, r24
     380:	c3 01       	movw	r24, r6
     382:	b2 01       	movw	r22, r4
     384:	0e 94 cd 2d 	call	0x5b9a	; 0x5b9a <__addsf3>
     388:	2b 01       	movw	r4, r22
     38a:	3c 01       	movw	r6, r24
     38c:	a5 01       	movw	r20, r10
     38e:	94 01       	movw	r18, r8
     390:	c7 01       	movw	r24, r14
     392:	b6 01       	movw	r22, r12
     394:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     398:	6b 01       	movw	r12, r22
     39a:	7c 01       	movw	r14, r24
     39c:	2d 8d       	ldd	r18, Y+29	; 0x1d
     39e:	3e 8d       	ldd	r19, Y+30	; 0x1e
     3a0:	4f 8d       	ldd	r20, Y+31	; 0x1f
     3a2:	58 a1       	ldd	r21, Y+32	; 0x20
     3a4:	69 8d       	ldd	r22, Y+25	; 0x19
     3a6:	7a 8d       	ldd	r23, Y+26	; 0x1a
     3a8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3aa:	9c 8d       	ldd	r25, Y+28	; 0x1c
     3ac:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     3b0:	9b 01       	movw	r18, r22
     3b2:	ac 01       	movw	r20, r24
     3b4:	c7 01       	movw	r24, r14
     3b6:	b6 01       	movw	r22, r12
     3b8:	0e 94 cc 2d 	call	0x5b98	; 0x5b98 <__subsf3>
     3bc:	ab 01       	movw	r20, r22
     3be:	bc 01       	movw	r22, r24
     3c0:	93 01       	movw	r18, r6
     3c2:	82 01       	movw	r16, r4
     3c4:	ce 01       	movw	r24, r28
     3c6:	01 96       	adiw	r24, 0x01	; 1
     3c8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
     3cc:	88 e0       	ldi	r24, 0x08	; 8
     3ce:	fe 01       	movw	r30, r28
     3d0:	31 96       	adiw	r30, 0x01	; 1
     3d2:	de 01       	movw	r26, r28
     3d4:	19 96       	adiw	r26, 0x09	; 9
     3d6:	01 90       	ld	r0, Z+
     3d8:	0d 92       	st	X+, r0
     3da:	8a 95       	dec	r24
     3dc:	e1 f7       	brne	.-8      	; 0x3d6 <_ZN7Complex3mulES_+0xf0>
     3de:	29 85       	ldd	r18, Y+9	; 0x09
     3e0:	3a 85       	ldd	r19, Y+10	; 0x0a
     3e2:	4b 85       	ldd	r20, Y+11	; 0x0b
     3e4:	5c 85       	ldd	r21, Y+12	; 0x0c
     3e6:	6d 85       	ldd	r22, Y+13	; 0x0d
     3e8:	7e 85       	ldd	r23, Y+14	; 0x0e
     3ea:	8f 85       	ldd	r24, Y+15	; 0x0f
     3ec:	98 89       	ldd	r25, Y+16	; 0x10
     3ee:	a0 96       	adiw	r28, 0x20	; 32
     3f0:	0f b6       	in	r0, 0x3f	; 63
     3f2:	f8 94       	cli
     3f4:	de bf       	out	0x3e, r29	; 62
     3f6:	0f be       	out	0x3f, r0	; 63
     3f8:	cd bf       	out	0x3d, r28	; 61
     3fa:	df 91       	pop	r29
     3fc:	cf 91       	pop	r28
     3fe:	1f 91       	pop	r17
     400:	0f 91       	pop	r16
     402:	ff 90       	pop	r15
     404:	ef 90       	pop	r14
     406:	df 90       	pop	r13
     408:	cf 90       	pop	r12
     40a:	bf 90       	pop	r11
     40c:	af 90       	pop	r10
     40e:	9f 90       	pop	r9
     410:	8f 90       	pop	r8
     412:	7f 90       	pop	r7
     414:	6f 90       	pop	r6
     416:	5f 90       	pop	r5
     418:	4f 90       	pop	r4
     41a:	08 95       	ret

0000041c <_ZN7Complex3argEv>:
     41c:	fc 01       	movw	r30, r24
     41e:	20 81       	ld	r18, Z
     420:	31 81       	ldd	r19, Z+1	; 0x01
     422:	42 81       	ldd	r20, Z+2	; 0x02
     424:	53 81       	ldd	r21, Z+3	; 0x03
     426:	64 81       	ldd	r22, Z+4	; 0x04
     428:	75 81       	ldd	r23, Z+5	; 0x05
     42a:	86 81       	ldd	r24, Z+6	; 0x06
     42c:	97 81       	ldd	r25, Z+7	; 0x07
     42e:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <__divsf3>
     432:	0e 94 31 2e 	call	0x5c62	; 0x5c62 <atan>
     436:	08 95       	ret

00000438 <_ZN6EEPromC1Ev>:
#include "eeprom.h"

EEProm::EEProm(){
	//Set up TWI Module
	TWBR = 5;
     438:	85 e0       	ldi	r24, 0x05	; 5
     43a:	80 b9       	out	0x00, r24	; 0
	TWSR &= (~((1<<TWPS1)|(1<<TWPS0)));
     43c:	81 b1       	in	r24, 0x01	; 1
     43e:	8c 7f       	andi	r24, 0xFC	; 252
     440:	81 b9       	out	0x01, r24	; 1
     442:	08 95       	ret

00000444 <_ZN6EEProm4readEj>:
	uint8_t data;
	//Initiate a Dummy Write Sequence to start Random Read
	do
	{
		//Put Start Condition on TWI Bus
		TWCR=(1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
     444:	94 ea       	ldi	r25, 0xA4	; 164
		if((TWSR & 0xF8) != 0x08)
			return FALSE;

		//Now write SLA+W
		//EEPROM @ 00h
		TWDR=0b10100000;	
     446:	30 ea       	ldi	r19, 0xA0	; 160

		//Initiate Transfer
		TWCR=(1<<TWINT)|(1<<TWEN);
     448:	24 e8       	ldi	r18, 0x84	; 132
	uint8_t data;
	//Initiate a Dummy Write Sequence to start Random Read
	do
	{
		//Put Start Condition on TWI Bus
		TWCR=(1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
     44a:	96 bf       	out	0x36, r25	; 54

		//Poll Till Done
		while(!(TWCR & (1<<TWINT)));
     44c:	06 b6       	in	r0, 0x36	; 54
     44e:	07 fe       	sbrs	r0, 7
     450:	fd cf       	rjmp	.-6      	; 0x44c <_ZN6EEProm4readEj+0x8>

		//Check status
		if((TWSR & 0xF8) != 0x08)
     452:	81 b1       	in	r24, 0x01	; 1
     454:	88 7f       	andi	r24, 0xF8	; 248
     456:	88 30       	cpi	r24, 0x08	; 8
     458:	09 f0       	breq	.+2      	; 0x45c <_ZN6EEProm4readEj+0x18>
     45a:	41 c0       	rjmp	.+130    	; 0x4de <_ZN6EEProm4readEj+0x9a>
			return FALSE;

		//Now write SLA+W
		//EEPROM @ 00h
		TWDR=0b10100000;	
     45c:	33 b9       	out	0x03, r19	; 3

		//Initiate Transfer
		TWCR=(1<<TWINT)|(1<<TWEN);
     45e:	26 bf       	out	0x36, r18	; 54

		//Poll Till Done
		while(!(TWCR & (1<<TWINT)));
     460:	06 b6       	in	r0, 0x36	; 54
     462:	07 fe       	sbrs	r0, 7
     464:	fd cf       	rjmp	.-6      	; 0x460 <_ZN6EEProm4readEj+0x1c>
	
	}while((TWSR & 0xF8) != 0x18);
     466:	81 b1       	in	r24, 0x01	; 1
     468:	88 7f       	andi	r24, 0xF8	; 248
}

uint8_t EEProm::read(uint16_t address){
	uint8_t data;
	//Initiate a Dummy Write Sequence to start Random Read
	do
     46a:	88 31       	cpi	r24, 0x18	; 24
     46c:	71 f7       	brne	.-36     	; 0x44a <_ZN6EEProm4readEj+0x6>
	
	}while((TWSR & 0xF8) != 0x18);
		

	//Now write ADDRH
	TWDR=(address>>8);
     46e:	73 b9       	out	0x03, r23	; 3

	//Initiate Transfer
	TWCR=(1<<TWINT)|(1<<TWEN);
     470:	84 e8       	ldi	r24, 0x84	; 132
     472:	86 bf       	out	0x36, r24	; 54

	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));
     474:	06 b6       	in	r0, 0x36	; 54
     476:	07 fe       	sbrs	r0, 7
     478:	fd cf       	rjmp	.-6      	; 0x474 <_ZN6EEProm4readEj+0x30>

	//Check status
	if((TWSR & 0xF8) != 0x28)
     47a:	81 b1       	in	r24, 0x01	; 1
     47c:	88 7f       	andi	r24, 0xF8	; 248
     47e:	88 32       	cpi	r24, 0x28	; 40
     480:	81 f5       	brne	.+96     	; 0x4e2 <_ZN6EEProm4readEj+0x9e>
		return FALSE;

	//Now write ADDRL
	TWDR=(address);
     482:	63 b9       	out	0x03, r22	; 3

	//Initiate Transfer
	TWCR=(1<<TWINT)|(1<<TWEN);
     484:	84 e8       	ldi	r24, 0x84	; 132
     486:	86 bf       	out	0x36, r24	; 54

	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));
     488:	06 b6       	in	r0, 0x36	; 54
     48a:	07 fe       	sbrs	r0, 7
     48c:	fd cf       	rjmp	.-6      	; 0x488 <_ZN6EEProm4readEj+0x44>

	//Check status
	if((TWSR & 0xF8) != 0x28)
     48e:	81 b1       	in	r24, 0x01	; 1
     490:	88 7f       	andi	r24, 0xF8	; 248
     492:	88 32       	cpi	r24, 0x28	; 40
     494:	41 f5       	brne	.+80     	; 0x4e6 <_ZN6EEProm4readEj+0xa2>
	//*************************DUMMY WRITE SEQUENCE END **********************


	
	//Put Start Condition on TWI Bus
	TWCR=(1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
     496:	84 ea       	ldi	r24, 0xA4	; 164
     498:	86 bf       	out	0x36, r24	; 54

	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));
     49a:	06 b6       	in	r0, 0x36	; 54
     49c:	07 fe       	sbrs	r0, 7
     49e:	fd cf       	rjmp	.-6      	; 0x49a <_ZN6EEProm4readEj+0x56>

	//Check status
	if((TWSR & 0xF8) != 0x10)
     4a0:	81 b1       	in	r24, 0x01	; 1
     4a2:	88 7f       	andi	r24, 0xF8	; 248
     4a4:	80 31       	cpi	r24, 0x10	; 16
     4a6:	09 f5       	brne	.+66     	; 0x4ea <_ZN6EEProm4readEj+0xa6>
		return FALSE;

	//Now write SLA+R
	//EEPROM @ 00h
	TWDR=0b10100001;	
     4a8:	81 ea       	ldi	r24, 0xA1	; 161
     4aa:	83 b9       	out	0x03, r24	; 3

	//Initiate Transfer
	TWCR=(1<<TWINT)|(1<<TWEN);
     4ac:	84 e8       	ldi	r24, 0x84	; 132
     4ae:	86 bf       	out	0x36, r24	; 54

	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));
     4b0:	06 b6       	in	r0, 0x36	; 54
     4b2:	07 fe       	sbrs	r0, 7
     4b4:	fd cf       	rjmp	.-6      	; 0x4b0 <_ZN6EEProm4readEj+0x6c>

	//Check status
	if((TWSR & 0xF8) != 0x40)
     4b6:	81 b1       	in	r24, 0x01	; 1
     4b8:	88 7f       	andi	r24, 0xF8	; 248
     4ba:	80 34       	cpi	r24, 0x40	; 64
     4bc:	c1 f4       	brne	.+48     	; 0x4ee <_ZN6EEProm4readEj+0xaa>
		return FALSE;

	//Now enable Reception of data by clearing TWINT
	TWCR=(1<<TWINT)|(1<<TWEN);
     4be:	84 e8       	ldi	r24, 0x84	; 132
     4c0:	86 bf       	out	0x36, r24	; 54

	//Wait till done
	while(!(TWCR & (1<<TWINT)));
     4c2:	06 b6       	in	r0, 0x36	; 54
     4c4:	07 fe       	sbrs	r0, 7
     4c6:	fd cf       	rjmp	.-6      	; 0x4c2 <_ZN6EEProm4readEj+0x7e>

	//Check status
	if((TWSR & 0xF8) != 0x58)
     4c8:	81 b1       	in	r24, 0x01	; 1
     4ca:	88 7f       	andi	r24, 0xF8	; 248
     4cc:	88 35       	cpi	r24, 0x58	; 88
     4ce:	89 f4       	brne	.+34     	; 0x4f2 <_ZN6EEProm4readEj+0xae>
		return FALSE;

	//Read the data
	data=TWDR;
     4d0:	83 b1       	in	r24, 0x03	; 3

	//Put Stop Condition on bus
	TWCR=(1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     4d2:	94 e9       	ldi	r25, 0x94	; 148
     4d4:	96 bf       	out	0x36, r25	; 54
	
	//Wait for STOP to finish
	while(TWCR & (1<<TWSTO));
     4d6:	06 b6       	in	r0, 0x36	; 54
     4d8:	04 fc       	sbrc	r0, 4
     4da:	fd cf       	rjmp	.-6      	; 0x4d6 <_ZN6EEProm4readEj+0x92>
     4dc:	08 95       	ret
		//Poll Till Done
		while(!(TWCR & (1<<TWINT)));

		//Check status
		if((TWSR & 0xF8) != 0x08)
			return FALSE;
     4de:	80 e0       	ldi	r24, 0x00	; 0
     4e0:	08 95       	ret
	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));

	//Check status
	if((TWSR & 0xF8) != 0x28)
		return FALSE;
     4e2:	80 e0       	ldi	r24, 0x00	; 0
     4e4:	08 95       	ret
	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));

	//Check status
	if((TWSR & 0xF8) != 0x28)
		return FALSE;
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	08 95       	ret
	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));

	//Check status
	if((TWSR & 0xF8) != 0x10)
		return FALSE;
     4ea:	80 e0       	ldi	r24, 0x00	; 0
     4ec:	08 95       	ret
	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));

	//Check status
	if((TWSR & 0xF8) != 0x40)
		return FALSE;
     4ee:	80 e0       	ldi	r24, 0x00	; 0
     4f0:	08 95       	ret
	//Wait till done
	while(!(TWCR & (1<<TWINT)));

	//Check status
	if((TWSR & 0xF8) != 0x58)
		return FALSE;
     4f2:	80 e0       	ldi	r24, 0x00	; 0
	//Wait for STOP to finish
	while(TWCR & (1<<TWSTO));

	//Return TRUE
	return data;
}
     4f4:	08 95       	ret

000004f6 <_ZN6EEProm7readallEv>:
char* EEProm::readall(){
     4f6:	cf 92       	push	r12
     4f8:	df 92       	push	r13
     4fa:	ef 92       	push	r14
     4fc:	ff 92       	push	r15
     4fe:	0f 93       	push	r16
     500:	1f 93       	push	r17
     502:	cf 93       	push	r28
     504:	df 93       	push	r29
     506:	cd b7       	in	r28, 0x3d	; 61
     508:	de b7       	in	r29, 0x3e	; 62
     50a:	c4 56       	subi	r28, 0x64	; 100
     50c:	d1 09       	sbc	r29, r1
     50e:	0f b6       	in	r0, 0x3f	; 63
     510:	f8 94       	cli
     512:	de bf       	out	0x3e, r29	; 62
     514:	0f be       	out	0x3f, r0	; 63
     516:	cd bf       	out	0x3d, r28	; 61
     518:	6c 01       	movw	r12, r24
     51a:	ce 01       	movw	r24, r28
     51c:	01 96       	adiw	r24, 0x01	; 1
     51e:	7c 01       	movw	r14, r24
	char eeprom_mem[MAX_MEM_SIZE];
	
	for(int i=0;MAX_MEM_SIZE;i++) {
     520:	00 e0       	ldi	r16, 0x00	; 0
     522:	10 e0       	ldi	r17, 0x00	; 0
		eeprom_mem[i]=read(i);
     524:	b8 01       	movw	r22, r16
     526:	c6 01       	movw	r24, r12
     528:	0e 94 22 02 	call	0x444	; 0x444 <_ZN6EEProm4readEj>
     52c:	f7 01       	movw	r30, r14
     52e:	81 93       	st	Z+, r24
     530:	7f 01       	movw	r14, r30
		if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break;
     532:	8f 3f       	cpi	r24, 0xFF	; 255
     534:	81 f4       	brne	.+32     	; 0x556 <_ZN6EEProm7readallEv+0x60>
     536:	32 97       	sbiw	r30, 0x02	; 2
     538:	20 81       	ld	r18, Z
     53a:	2f 3f       	cpi	r18, 0xFF	; 255
     53c:	61 f4       	brne	.+24     	; 0x556 <_ZN6EEProm7readallEv+0x60>
     53e:	31 97       	sbiw	r30, 0x01	; 1
     540:	20 81       	ld	r18, Z
     542:	2f 3f       	cpi	r18, 0xFF	; 255
     544:	41 f4       	brne	.+16     	; 0x556 <_ZN6EEProm7readallEv+0x60>
     546:	31 97       	sbiw	r30, 0x01	; 1
     548:	20 81       	ld	r18, Z
     54a:	2f 3f       	cpi	r18, 0xFF	; 255
     54c:	21 f4       	brne	.+8      	; 0x556 <_ZN6EEProm7readallEv+0x60>
     54e:	31 97       	sbiw	r30, 0x01	; 1
     550:	80 81       	ld	r24, Z
     552:	8f 3f       	cpi	r24, 0xFF	; 255
     554:	19 f0       	breq	.+6      	; 0x55c <_ZN6EEProm7readallEv+0x66>
	return data;
}
char* EEProm::readall(){
	char eeprom_mem[MAX_MEM_SIZE];
	
	for(int i=0;MAX_MEM_SIZE;i++) {
     556:	0f 5f       	subi	r16, 0xFF	; 255
     558:	1f 4f       	sbci	r17, 0xFF	; 255
		eeprom_mem[i]=read(i);
		if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break;
	}
     55a:	e4 cf       	rjmp	.-56     	; 0x524 <_ZN6EEProm7readallEv+0x2e>
	return eeprom_mem;
     55c:	ce 01       	movw	r24, r28
     55e:	01 96       	adiw	r24, 0x01	; 1
     560:	cc 59       	subi	r28, 0x9C	; 156
     562:	df 4f       	sbci	r29, 0xFF	; 255
     564:	0f b6       	in	r0, 0x3f	; 63
     566:	f8 94       	cli
     568:	de bf       	out	0x3e, r29	; 62
     56a:	0f be       	out	0x3f, r0	; 63
     56c:	cd bf       	out	0x3d, r28	; 61
     56e:	df 91       	pop	r29
     570:	cf 91       	pop	r28
     572:	1f 91       	pop	r17
     574:	0f 91       	pop	r16
     576:	ff 90       	pop	r15
     578:	ef 90       	pop	r14
     57a:	df 90       	pop	r13
     57c:	cf 90       	pop	r12
     57e:	08 95       	ret

00000580 <_ZN4QEPU4FlagC1Ev>:
#include "qepu.h"

QEPU::Flag::Flag(){}
     580:	08 95       	ret

00000582 <_ZN4QEPU4Flag7compareEii>:

int8_t QEPU::Flag::flaglist[FLAG_COUNT];

void QEPU::Flag::compare(int data1,int data2){
	flaglist[CND_LWER]=(data1<data2)?HIGH:LOW;
     582:	21 e0       	ldi	r18, 0x01	; 1
     584:	86 17       	cp	r24, r22
     586:	97 07       	cpc	r25, r23
     588:	0c f0       	brlt	.+2      	; 0x58c <_ZN4QEPU4Flag7compareEii+0xa>
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	20 93 0a 01 	sts	0x010A, r18
	flaglist[CND_LWER_EQUAL]=(data1<=data2)?HIGH:LOW;
     590:	21 e0       	ldi	r18, 0x01	; 1
     592:	68 17       	cp	r22, r24
     594:	79 07       	cpc	r23, r25
     596:	0c f4       	brge	.+2      	; 0x59a <_ZN4QEPU4Flag7compareEii+0x18>
     598:	20 e0       	ldi	r18, 0x00	; 0
     59a:	20 93 0b 01 	sts	0x010B, r18
	flaglist[CND_EQUAL]=(data1==data2)?HIGH:LOW;
     59e:	21 e0       	ldi	r18, 0x01	; 1
     5a0:	86 17       	cp	r24, r22
     5a2:	97 07       	cpc	r25, r23
     5a4:	09 f0       	breq	.+2      	; 0x5a8 <_ZN4QEPU4Flag7compareEii+0x26>
     5a6:	20 e0       	ldi	r18, 0x00	; 0
     5a8:	20 93 0c 01 	sts	0x010C, r18
	flaglist[CND_GRTER_EQUAL]=(data1>=data2)?HIGH:LOW;
     5ac:	21 e0       	ldi	r18, 0x01	; 1
     5ae:	86 17       	cp	r24, r22
     5b0:	97 07       	cpc	r25, r23
     5b2:	0c f4       	brge	.+2      	; 0x5b6 <_ZN4QEPU4Flag7compareEii+0x34>
     5b4:	20 e0       	ldi	r18, 0x00	; 0
     5b6:	20 93 0d 01 	sts	0x010D, r18
	flaglist[CND_GRTER]=(data1>data2)?HIGH:LOW;
     5ba:	21 e0       	ldi	r18, 0x01	; 1
     5bc:	68 17       	cp	r22, r24
     5be:	79 07       	cpc	r23, r25
     5c0:	0c f0       	brlt	.+2      	; 0x5c4 <_ZN4QEPU4Flag7compareEii+0x42>
     5c2:	20 e0       	ldi	r18, 0x00	; 0
     5c4:	20 93 0e 01 	sts	0x010E, r18
	flaglist[CND_DIFF]=(data1!=data2)?HIGH:LOW;
     5c8:	21 e0       	ldi	r18, 0x01	; 1
     5ca:	86 17       	cp	r24, r22
     5cc:	97 07       	cpc	r25, r23
     5ce:	09 f4       	brne	.+2      	; 0x5d2 <_ZN4QEPU4Flag7compareEii+0x50>
     5d0:	20 e0       	ldi	r18, 0x00	; 0
     5d2:	20 93 0f 01 	sts	0x010F, r18
	flaglist[CND_ZERO]=(data1==LOW)?HIGH:LOW;
     5d6:	21 e0       	ldi	r18, 0x01	; 1
     5d8:	00 97       	sbiw	r24, 0x00	; 0
     5da:	09 f0       	breq	.+2      	; 0x5de <_ZN4QEPU4Flag7compareEii+0x5c>
     5dc:	20 e0       	ldi	r18, 0x00	; 0
     5de:	20 93 10 01 	sts	0x0110, r18
	flaglist[CND_NOT_ZERO]=(data1!=LOW)?HIGH:LOW;
     5e2:	21 e0       	ldi	r18, 0x01	; 1
     5e4:	89 2b       	or	r24, r25
     5e6:	09 f4       	brne	.+2      	; 0x5ea <_ZN4QEPU4Flag7compareEii+0x68>
     5e8:	20 e0       	ldi	r18, 0x00	; 0
     5ea:	20 93 11 01 	sts	0x0111, r18
     5ee:	08 95       	ret

000005f0 <_ZN5GatesC1Ev>:
#include "uart.h"
#include "qepu.h"
#include <stdarg.h>
#include <stdlib.h>
#include <avr/eeprom.h>
Gates::Gates(){}
     5f0:	08 95       	ret

000005f2 <_Z12print_statesiP7ComplexPc>:

Serial s;

void print_states(int qb_count,Complex * vec,char* message){
     5f2:	cf 92       	push	r12
     5f4:	df 92       	push	r13
     5f6:	ef 92       	push	r14
     5f8:	ff 92       	push	r15
     5fa:	0f 93       	push	r16
     5fc:	1f 93       	push	r17
     5fe:	cf 93       	push	r28
     600:	df 93       	push	r29
     602:	1f 92       	push	r1
     604:	cd b7       	in	r28, 0x3d	; 61
     606:	de b7       	in	r29, 0x3e	; 62
     608:	6c 01       	movw	r12, r24
     60a:	e6 2e       	mov	r14, r22
     60c:	f7 2e       	mov	r15, r23
	Utils utils;
	s.writestrln(message);
     60e:	ba 01       	movw	r22, r20
     610:	82 e1       	ldi	r24, 0x12	; 18
     612:	91 e0       	ldi	r25, 0x01	; 1
     614:	0e 94 9a 2c 	call	0x5934	; 0x5934 <_ZN6Serial10writestrlnEPc>
	for(int i=0;i<qb_count;i++){
     618:	1c 14       	cp	r1, r12
     61a:	1d 04       	cpc	r1, r13
     61c:	0c f0       	brlt	.+2      	; 0x620 <_Z12print_statesiP7ComplexPc+0x2e>
     61e:	4b c0       	rjmp	.+150    	; 0x6b6 <_Z12print_statesiP7ComplexPc+0xc4>
     620:	0e 2d       	mov	r16, r14
     622:	1f 2d       	mov	r17, r15
     624:	e1 2c       	mov	r14, r1
     626:	f1 2c       	mov	r15, r1
		s.writestr("R: "); s.writestr(utils.int2str(vec[i].re*1000));
     628:	6a e6       	ldi	r22, 0x6A	; 106
     62a:	70 e0       	ldi	r23, 0x00	; 0
     62c:	82 e1       	ldi	r24, 0x12	; 18
     62e:	91 e0       	ldi	r25, 0x01	; 1
     630:	0e 94 85 2c 	call	0x590a	; 0x590a <_ZN6Serial8writestrEPc>
     634:	20 e0       	ldi	r18, 0x00	; 0
     636:	30 e0       	ldi	r19, 0x00	; 0
     638:	4a e7       	ldi	r20, 0x7A	; 122
     63a:	54 e4       	ldi	r21, 0x44	; 68
     63c:	f8 01       	movw	r30, r16
     63e:	60 81       	ld	r22, Z
     640:	71 81       	ldd	r23, Z+1	; 0x01
     642:	82 81       	ldd	r24, Z+2	; 0x02
     644:	93 81       	ldd	r25, Z+3	; 0x03
     646:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     64a:	0e 94 f9 2e 	call	0x5df2	; 0x5df2 <__fixsfsi>
     64e:	ce 01       	movw	r24, r28
     650:	01 96       	adiw	r24, 0x01	; 1
     652:	0e 94 2e 2d 	call	0x5a5c	; 0x5a5c <_ZN5Utils7int2strEi>
     656:	bc 01       	movw	r22, r24
     658:	82 e1       	ldi	r24, 0x12	; 18
     65a:	91 e0       	ldi	r25, 0x01	; 1
     65c:	0e 94 85 2c 	call	0x590a	; 0x590a <_ZN6Serial8writestrEPc>
		s.writestr(" . I: "); s.writestr(utils.int2str(vec[i].im*1000));
     660:	6e e6       	ldi	r22, 0x6E	; 110
     662:	70 e0       	ldi	r23, 0x00	; 0
     664:	82 e1       	ldi	r24, 0x12	; 18
     666:	91 e0       	ldi	r25, 0x01	; 1
     668:	0e 94 85 2c 	call	0x590a	; 0x590a <_ZN6Serial8writestrEPc>
     66c:	20 e0       	ldi	r18, 0x00	; 0
     66e:	30 e0       	ldi	r19, 0x00	; 0
     670:	4a e7       	ldi	r20, 0x7A	; 122
     672:	54 e4       	ldi	r21, 0x44	; 68
     674:	f8 01       	movw	r30, r16
     676:	64 81       	ldd	r22, Z+4	; 0x04
     678:	75 81       	ldd	r23, Z+5	; 0x05
     67a:	86 81       	ldd	r24, Z+6	; 0x06
     67c:	97 81       	ldd	r25, Z+7	; 0x07
     67e:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     682:	0e 94 f9 2e 	call	0x5df2	; 0x5df2 <__fixsfsi>
     686:	ce 01       	movw	r24, r28
     688:	01 96       	adiw	r24, 0x01	; 1
     68a:	0e 94 2e 2d 	call	0x5a5c	; 0x5a5c <_ZN5Utils7int2strEi>
     68e:	bc 01       	movw	r22, r24
     690:	82 e1       	ldi	r24, 0x12	; 18
     692:	91 e0       	ldi	r25, 0x01	; 1
     694:	0e 94 85 2c 	call	0x590a	; 0x590a <_ZN6Serial8writestrEPc>
		s.writestrln("");
     698:	65 ec       	ldi	r22, 0xC5	; 197
     69a:	70 e0       	ldi	r23, 0x00	; 0
     69c:	82 e1       	ldi	r24, 0x12	; 18
     69e:	91 e0       	ldi	r25, 0x01	; 1
     6a0:	0e 94 9a 2c 	call	0x5934	; 0x5934 <_ZN6Serial10writestrlnEPc>
Serial s;

void print_states(int qb_count,Complex * vec,char* message){
	Utils utils;
	s.writestrln(message);
	for(int i=0;i<qb_count;i++){
     6a4:	ff ef       	ldi	r31, 0xFF	; 255
     6a6:	ef 1a       	sub	r14, r31
     6a8:	ff 0a       	sbc	r15, r31
     6aa:	08 5f       	subi	r16, 0xF8	; 248
     6ac:	1f 4f       	sbci	r17, 0xFF	; 255
     6ae:	ec 14       	cp	r14, r12
     6b0:	fd 04       	cpc	r15, r13
     6b2:	09 f0       	breq	.+2      	; 0x6b6 <_Z12print_statesiP7ComplexPc+0xc4>
     6b4:	b9 cf       	rjmp	.-142    	; 0x628 <_Z12print_statesiP7ComplexPc+0x36>
		s.writestr("R: "); s.writestr(utils.int2str(vec[i].re*1000));
		s.writestr(" . I: "); s.writestr(utils.int2str(vec[i].im*1000));
		s.writestrln("");
	}
}
     6b6:	0f 90       	pop	r0
     6b8:	df 91       	pop	r29
     6ba:	cf 91       	pop	r28
     6bc:	1f 91       	pop	r17
     6be:	0f 91       	pop	r16
     6c0:	ff 90       	pop	r15
     6c2:	ef 90       	pop	r14
     6c4:	df 90       	pop	r13
     6c6:	cf 90       	pop	r12
     6c8:	08 95       	ret

000006ca <_ZN5Gates5touchEd>:

int Gates::touch(double probability){
     6ca:	cf 92       	push	r12
     6cc:	df 92       	push	r13
     6ce:	ef 92       	push	r14
     6d0:	ff 92       	push	r15
     6d2:	cf 93       	push	r28
     6d4:	df 93       	push	r29
     6d6:	6a 01       	movw	r12, r20
     6d8:	7b 01       	movw	r14, r22
	return RAND_MAX*probability>=rand();
     6da:	0e 94 85 33 	call	0x670a	; 0x670a <rand>
     6de:	ec 01       	movw	r28, r24
     6e0:	20 e0       	ldi	r18, 0x00	; 0
     6e2:	3e ef       	ldi	r19, 0xFE	; 254
     6e4:	4f ef       	ldi	r20, 0xFF	; 255
     6e6:	56 e4       	ldi	r21, 0x46	; 70
     6e8:	c7 01       	movw	r24, r14
     6ea:	b6 01       	movw	r22, r12
     6ec:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     6f0:	6b 01       	movw	r12, r22
     6f2:	7c 01       	movw	r14, r24
     6f4:	be 01       	movw	r22, r28
     6f6:	88 27       	eor	r24, r24
     6f8:	77 fd       	sbrc	r23, 7
     6fa:	80 95       	com	r24
     6fc:	98 2f       	mov	r25, r24
     6fe:	0e 94 2c 2f 	call	0x5e58	; 0x5e58 <__floatsisf>
     702:	9b 01       	movw	r18, r22
     704:	ac 01       	movw	r20, r24
     706:	c1 e0       	ldi	r28, 0x01	; 1
     708:	d0 e0       	ldi	r29, 0x00	; 0
     70a:	c7 01       	movw	r24, r14
     70c:	b6 01       	movw	r22, r12
     70e:	0e 94 55 30 	call	0x60aa	; 0x60aa <__gesf2>
     712:	88 23       	and	r24, r24
     714:	14 f4       	brge	.+4      	; 0x71a <_ZN5Gates5touchEd+0x50>
     716:	c0 e0       	ldi	r28, 0x00	; 0
     718:	d0 e0       	ldi	r29, 0x00	; 0
}
     71a:	ce 01       	movw	r24, r28
     71c:	df 91       	pop	r29
     71e:	cf 91       	pop	r28
     720:	ff 90       	pop	r15
     722:	ef 90       	pop	r14
     724:	df 90       	pop	r13
     726:	cf 90       	pop	r12
     728:	08 95       	ret

0000072a <_ZN5Gates17reverse_kroneckerEP7Complexi>:

Complex * Gates::reverse_kronecker(Complex * kron,int kron_size){
     72a:	2f 92       	push	r2
     72c:	3f 92       	push	r3
     72e:	4f 92       	push	r4
     730:	5f 92       	push	r5
     732:	6f 92       	push	r6
     734:	7f 92       	push	r7
     736:	8f 92       	push	r8
     738:	9f 92       	push	r9
     73a:	af 92       	push	r10
     73c:	bf 92       	push	r11
     73e:	cf 92       	push	r12
     740:	df 92       	push	r13
     742:	ef 92       	push	r14
     744:	ff 92       	push	r15
     746:	0f 93       	push	r16
     748:	1f 93       	push	r17
     74a:	cf 93       	push	r28
     74c:	df 93       	push	r29
     74e:	cd b7       	in	r28, 0x3d	; 61
     750:	de b7       	in	r29, 0x3e	; 62
     752:	a4 97       	sbiw	r28, 0x24	; 36
     754:	0f b6       	in	r0, 0x3f	; 63
     756:	f8 94       	cli
     758:	de bf       	out	0x3e, r29	; 62
     75a:	0f be       	out	0x3f, r0	; 63
     75c:	cd bf       	out	0x3d, r28	; 61
     75e:	8c 01       	movw	r16, r24
     760:	6b 01       	movw	r12, r22
     762:	5a 01       	movw	r10, r20
	int reversed_kron_size=(log(kron_size)/log(2))*2;
     764:	ba 01       	movw	r22, r20
     766:	88 27       	eor	r24, r24
     768:	77 fd       	sbrc	r23, 7
     76a:	80 95       	com	r24
     76c:	98 2f       	mov	r25, r24
     76e:	0e 94 2c 2f 	call	0x5e58	; 0x5e58 <__floatsisf>
     772:	0e 94 9b 30 	call	0x6136	; 0x6136 <log>
     776:	28 e1       	ldi	r18, 0x18	; 24
     778:	32 e7       	ldi	r19, 0x72	; 114
     77a:	41 e3       	ldi	r20, 0x31	; 49
     77c:	5f e3       	ldi	r21, 0x3F	; 63
     77e:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <__divsf3>
     782:	2b 01       	movw	r4, r22
     784:	3c 01       	movw	r6, r24
     786:	9b 01       	movw	r18, r22
     788:	ac 01       	movw	r20, r24
     78a:	0e 94 cd 2d 	call	0x5b9a	; 0x5b9a <__addsf3>
     78e:	0e 94 f9 2e 	call	0x5df2	; 0x5df2 <__fixsfsi>
     792:	69 a3       	std	Y+33, r22	; 0x21
     794:	7a a3       	std	Y+34, r23	; 0x22
     796:	8b a3       	std	Y+35, r24	; 0x23
     798:	9c a3       	std	Y+36, r25	; 0x24
     79a:	29 a0       	ldd	r2, Y+33	; 0x21
     79c:	3a a0       	ldd	r3, Y+34	; 0x22
	Complex * reversed_kronecker=(Complex*)malloc(sizeof(Complex)*reversed_kron_size);
     79e:	c1 01       	movw	r24, r2
     7a0:	88 0f       	add	r24, r24
     7a2:	99 1f       	adc	r25, r25
     7a4:	88 0f       	add	r24, r24
     7a6:	99 1f       	adc	r25, r25
     7a8:	88 0f       	add	r24, r24
     7aa:	99 1f       	adc	r25, r25
     7ac:	0e 94 10 32 	call	0x6420	; 0x6420 <malloc>
     7b0:	4c 01       	movw	r8, r24
		
	for(int i=0;i<kron_size;i++)
     7b2:	1a 14       	cp	r1, r10
     7b4:	1b 04       	cpc	r1, r11
     7b6:	0c f0       	brlt	.+2      	; 0x7ba <_ZN5Gates17reverse_kroneckerEP7Complexi+0x90>
     7b8:	9d c0       	rjmp	.+314    	; 0x8f4 <__stack+0x95>
		if(kron[i].re==1){
     7ba:	20 e0       	ldi	r18, 0x00	; 0
     7bc:	30 e0       	ldi	r19, 0x00	; 0
     7be:	40 e8       	ldi	r20, 0x80	; 128
     7c0:	5f e3       	ldi	r21, 0x3F	; 63
     7c2:	f6 01       	movw	r30, r12
     7c4:	60 81       	ld	r22, Z
     7c6:	71 81       	ldd	r23, Z+1	; 0x01
     7c8:	82 81       	ldd	r24, Z+2	; 0x02
     7ca:	93 81       	ldd	r25, Z+3	; 0x03
     7cc:	0e 94 59 2e 	call	0x5cb2	; 0x5cb2 <__cmpsf2>
     7d0:	81 11       	cpse	r24, r1
     7d2:	87 c0       	rjmp	.+270    	; 0x8e2 <__stack+0x83>
     7d4:	11 c0       	rjmp	.+34     	; 0x7f8 <_ZN5Gates17reverse_kroneckerEP7Complexi+0xce>
     7d6:	f8 e0       	ldi	r31, 0x08	; 8
     7d8:	cf 0e       	add	r12, r31
     7da:	d1 1c       	adc	r13, r1
     7dc:	20 e0       	ldi	r18, 0x00	; 0
     7de:	30 e0       	ldi	r19, 0x00	; 0
     7e0:	40 e8       	ldi	r20, 0x80	; 128
     7e2:	5f e3       	ldi	r21, 0x3F	; 63
     7e4:	f6 01       	movw	r30, r12
     7e6:	60 81       	ld	r22, Z
     7e8:	71 81       	ldd	r23, Z+1	; 0x01
     7ea:	82 81       	ldd	r24, Z+2	; 0x02
     7ec:	93 81       	ldd	r25, Z+3	; 0x03
     7ee:	0e 94 59 2e 	call	0x5cb2	; 0x5cb2 <__cmpsf2>
     7f2:	81 11       	cpse	r24, r1
     7f4:	78 c0       	rjmp	.+240    	; 0x8e6 <__stack+0x87>
     7f6:	02 c0       	rjmp	.+4      	; 0x7fc <_ZN5Gates17reverse_kroneckerEP7Complexi+0xd2>

Complex * Gates::reverse_kronecker(Complex * kron,int kron_size){
	int reversed_kron_size=(log(kron_size)/log(2))*2;
	Complex * reversed_kronecker=(Complex*)malloc(sizeof(Complex)*reversed_kron_size);
		
	for(int i=0;i<kron_size;i++)
     7f8:	e1 2c       	mov	r14, r1
     7fa:	f1 2c       	mov	r15, r1
		if(kron[i].re==1){
			char *toBin=utils.int2binstr(i,log(kron_size)/log(2));
     7fc:	c3 01       	movw	r24, r6
     7fe:	b2 01       	movw	r22, r4
     800:	0e 94 f9 2e 	call	0x5df2	; 0x5df2 <__fixsfsi>
     804:	ab 01       	movw	r20, r22
     806:	b7 01       	movw	r22, r14
     808:	c8 01       	movw	r24, r16
     80a:	0e 94 a6 2c 	call	0x594c	; 0x594c <_ZN5Utils10int2binstrEii>
			int index_rev_kro=0; //USE ITS OWN INDEX BECAUSE J IS THE INDEX OF TOBIN AN TOBIN HAS TO GO REVERSED
			for(int j=0;j<reversed_kron_size;j++){
     80e:	12 14       	cp	r1, r2
     810:	13 04       	cpc	r1, r3
     812:	0c f0       	brlt	.+2      	; 0x816 <_ZN5Gates17reverse_kroneckerEP7Complexi+0xec>
     814:	6f c0       	rjmp	.+222    	; 0x8f4 <__stack+0x95>
     816:	7c 01       	movw	r14, r24
     818:	54 01       	movw	r10, r8
     81a:	64 01       	movw	r12, r8
     81c:	f8 e0       	ldi	r31, 0x08	; 8
     81e:	cf 0e       	add	r12, r31
     820:	d1 1c       	adc	r13, r1
     822:	49 a0       	ldd	r4, Y+33	; 0x21
     824:	5a a0       	ldd	r5, Y+34	; 0x22
     826:	48 0e       	add	r4, r24
     828:	59 1e       	adc	r5, r25
				if(toBin[j]=='1'){
					reversed_kronecker[index_rev_kro]=Complex(0,0); reversed_kronecker[index_rev_kro+1]=Complex(1,0);
				}else{
					reversed_kronecker[index_rev_kro]=Complex(1,0); reversed_kronecker[index_rev_kro+1]=Complex(0,0);
     82a:	68 94       	set
     82c:	77 24       	eor	r7, r7
     82e:	73 f8       	bld	r7, 3
	for(int i=0;i<kron_size;i++)
		if(kron[i].re==1){
			char *toBin=utils.int2binstr(i,log(kron_size)/log(2));
			int index_rev_kro=0; //USE ITS OWN INDEX BECAUSE J IS THE INDEX OF TOBIN AN TOBIN HAS TO GO REVERSED
			for(int j=0;j<reversed_kron_size;j++){
				if(toBin[j]=='1'){
     830:	f7 01       	movw	r30, r14
     832:	81 91       	ld	r24, Z+
     834:	7f 01       	movw	r14, r30
     836:	81 33       	cpi	r24, 0x31	; 49
     838:	29 f5       	brne	.+74     	; 0x884 <__stack+0x25>
					reversed_kronecker[index_rev_kro]=Complex(0,0); reversed_kronecker[index_rev_kro+1]=Complex(1,0);
     83a:	00 e0       	ldi	r16, 0x00	; 0
     83c:	10 e0       	ldi	r17, 0x00	; 0
     83e:	98 01       	movw	r18, r16
     840:	b9 01       	movw	r22, r18
     842:	a8 01       	movw	r20, r16
     844:	ce 01       	movw	r24, r28
     846:	49 96       	adiw	r24, 0x19	; 25
     848:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
     84c:	fe 01       	movw	r30, r28
     84e:	79 96       	adiw	r30, 0x19	; 25
     850:	d5 01       	movw	r26, r10
     852:	87 2d       	mov	r24, r7
     854:	01 90       	ld	r0, Z+
     856:	0d 92       	st	X+, r0
     858:	8a 95       	dec	r24
     85a:	e1 f7       	brne	.-8      	; 0x854 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x12a>
     85c:	00 e0       	ldi	r16, 0x00	; 0
     85e:	10 e0       	ldi	r17, 0x00	; 0
     860:	98 01       	movw	r18, r16
     862:	40 e0       	ldi	r20, 0x00	; 0
     864:	50 e0       	ldi	r21, 0x00	; 0
     866:	60 e8       	ldi	r22, 0x80	; 128
     868:	7f e3       	ldi	r23, 0x3F	; 63
     86a:	ce 01       	movw	r24, r28
     86c:	41 96       	adiw	r24, 0x11	; 17
     86e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
     872:	fe 01       	movw	r30, r28
     874:	71 96       	adiw	r30, 0x11	; 17
     876:	d6 01       	movw	r26, r12
     878:	87 2d       	mov	r24, r7
     87a:	01 90       	ld	r0, Z+
     87c:	0d 92       	st	X+, r0
     87e:	8a 95       	dec	r24
     880:	e1 f7       	brne	.-8      	; 0x87a <__stack+0x1b>
     882:	24 c0       	rjmp	.+72     	; 0x8cc <__stack+0x6d>
				}else{
					reversed_kronecker[index_rev_kro]=Complex(1,0); reversed_kronecker[index_rev_kro+1]=Complex(0,0);
     884:	00 e0       	ldi	r16, 0x00	; 0
     886:	10 e0       	ldi	r17, 0x00	; 0
     888:	98 01       	movw	r18, r16
     88a:	40 e0       	ldi	r20, 0x00	; 0
     88c:	50 e0       	ldi	r21, 0x00	; 0
     88e:	60 e8       	ldi	r22, 0x80	; 128
     890:	7f e3       	ldi	r23, 0x3F	; 63
     892:	ce 01       	movw	r24, r28
     894:	09 96       	adiw	r24, 0x09	; 9
     896:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
     89a:	fe 01       	movw	r30, r28
     89c:	39 96       	adiw	r30, 0x09	; 9
     89e:	d5 01       	movw	r26, r10
     8a0:	87 2d       	mov	r24, r7
     8a2:	01 90       	ld	r0, Z+
     8a4:	0d 92       	st	X+, r0
     8a6:	8a 95       	dec	r24
     8a8:	e1 f7       	brne	.-8      	; 0x8a2 <__stack+0x43>
     8aa:	00 e0       	ldi	r16, 0x00	; 0
     8ac:	10 e0       	ldi	r17, 0x00	; 0
     8ae:	98 01       	movw	r18, r16
     8b0:	b9 01       	movw	r22, r18
     8b2:	a8 01       	movw	r20, r16
     8b4:	ce 01       	movw	r24, r28
     8b6:	01 96       	adiw	r24, 0x01	; 1
     8b8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
     8bc:	fe 01       	movw	r30, r28
     8be:	31 96       	adiw	r30, 0x01	; 1
     8c0:	d6 01       	movw	r26, r12
     8c2:	87 2d       	mov	r24, r7
     8c4:	01 90       	ld	r0, Z+
     8c6:	0d 92       	st	X+, r0
     8c8:	8a 95       	dec	r24
     8ca:	e1 f7       	brne	.-8      	; 0x8c4 <__stack+0x65>
     8cc:	f0 e1       	ldi	r31, 0x10	; 16
     8ce:	af 0e       	add	r10, r31
     8d0:	b1 1c       	adc	r11, r1
     8d2:	20 e1       	ldi	r18, 0x10	; 16
     8d4:	c2 0e       	add	r12, r18
     8d6:	d1 1c       	adc	r13, r1
		
	for(int i=0;i<kron_size;i++)
		if(kron[i].re==1){
			char *toBin=utils.int2binstr(i,log(kron_size)/log(2));
			int index_rev_kro=0; //USE ITS OWN INDEX BECAUSE J IS THE INDEX OF TOBIN AN TOBIN HAS TO GO REVERSED
			for(int j=0;j<reversed_kron_size;j++){
     8d8:	e4 14       	cp	r14, r4
     8da:	f5 04       	cpc	r15, r5
     8dc:	09 f0       	breq	.+2      	; 0x8e0 <__stack+0x81>
     8de:	a8 cf       	rjmp	.-176    	; 0x830 <_ZN5Gates17reverse_kroneckerEP7Complexi+0x106>
     8e0:	09 c0       	rjmp	.+18     	; 0x8f4 <__stack+0x95>

Complex * Gates::reverse_kronecker(Complex * kron,int kron_size){
	int reversed_kron_size=(log(kron_size)/log(2))*2;
	Complex * reversed_kronecker=(Complex*)malloc(sizeof(Complex)*reversed_kron_size);
		
	for(int i=0;i<kron_size;i++)
     8e2:	e1 2c       	mov	r14, r1
     8e4:	f1 2c       	mov	r15, r1
     8e6:	8f ef       	ldi	r24, 0xFF	; 255
     8e8:	e8 1a       	sub	r14, r24
     8ea:	f8 0a       	sbc	r15, r24
     8ec:	ea 14       	cp	r14, r10
     8ee:	fb 04       	cpc	r15, r11
     8f0:	09 f0       	breq	.+2      	; 0x8f4 <__stack+0x95>
     8f2:	71 cf       	rjmp	.-286    	; 0x7d6 <_ZN5Gates17reverse_kroneckerEP7Complexi+0xac>
				index_rev_kro+=2;
			}
			break;
		}
	return reversed_kronecker;
}
     8f4:	c4 01       	movw	r24, r8
     8f6:	a4 96       	adiw	r28, 0x24	; 36
     8f8:	0f b6       	in	r0, 0x3f	; 63
     8fa:	f8 94       	cli
     8fc:	de bf       	out	0x3e, r29	; 62
     8fe:	0f be       	out	0x3f, r0	; 63
     900:	cd bf       	out	0x3d, r28	; 61
     902:	df 91       	pop	r29
     904:	cf 91       	pop	r28
     906:	1f 91       	pop	r17
     908:	0f 91       	pop	r16
     90a:	ff 90       	pop	r15
     90c:	ef 90       	pop	r14
     90e:	df 90       	pop	r13
     910:	cf 90       	pop	r12
     912:	bf 90       	pop	r11
     914:	af 90       	pop	r10
     916:	9f 90       	pop	r9
     918:	8f 90       	pop	r8
     91a:	7f 90       	pop	r7
     91c:	6f 90       	pop	r6
     91e:	5f 90       	pop	r5
     920:	4f 90       	pop	r4
     922:	3f 90       	pop	r3
     924:	2f 90       	pop	r2
     926:	08 95       	ret

00000928 <_ZN5Gates9kroneckerEP7Complexii>:

Complex * Gates::kronecker(Complex * vec,int qb_count,int touch_enable){
     928:	2f 92       	push	r2
     92a:	3f 92       	push	r3
     92c:	4f 92       	push	r4
     92e:	5f 92       	push	r5
     930:	6f 92       	push	r6
     932:	7f 92       	push	r7
     934:	8f 92       	push	r8
     936:	9f 92       	push	r9
     938:	af 92       	push	r10
     93a:	bf 92       	push	r11
     93c:	cf 92       	push	r12
     93e:	df 92       	push	r13
     940:	ef 92       	push	r14
     942:	ff 92       	push	r15
     944:	0f 93       	push	r16
     946:	1f 93       	push	r17
     948:	cf 93       	push	r28
     94a:	df 93       	push	r29
     94c:	cd b7       	in	r28, 0x3d	; 61
     94e:	de b7       	in	r29, 0x3e	; 62
     950:	28 97       	sbiw	r28, 0x08	; 8
     952:	0f b6       	in	r0, 0x3f	; 63
     954:	f8 94       	cli
     956:	de bf       	out	0x3e, r29	; 62
     958:	0f be       	out	0x3f, r0	; 63
     95a:	cd bf       	out	0x3d, r28	; 61
     95c:	7c 01       	movw	r14, r24
     95e:	5b 01       	movw	r10, r22
     960:	8a 01       	movw	r16, r20
     962:	3e 83       	std	Y+6, r19	; 0x06
     964:	2d 83       	std	Y+5, r18	; 0x05
	if(qb_count==1) return vec;
     966:	41 30       	cpi	r20, 0x01	; 1
     968:	51 05       	cpc	r21, r1
     96a:	09 f4       	brne	.+2      	; 0x96e <_ZN5Gates9kroneckerEP7Complexii+0x46>
     96c:	bb c0       	rjmp	.+374    	; 0xae4 <_ZN5Gates9kroneckerEP7Complexii+0x1bc>
	int kron_size=utils.custom_pow(2,qb_count);
     96e:	9a 01       	movw	r18, r20
     970:	40 e0       	ldi	r20, 0x00	; 0
     972:	50 e0       	ldi	r21, 0x00	; 0
     974:	60 e0       	ldi	r22, 0x00	; 0
     976:	70 e4       	ldi	r23, 0x40	; 64
     978:	0e 94 67 2d 	call	0x5ace	; 0x5ace <_ZN5Utils10custom_powEfi>
     97c:	0e 94 f9 2e 	call	0x5df2	; 0x5df2 <__fixsfsi>
     980:	78 87       	std	Y+8, r23	; 0x08
     982:	6f 83       	std	Y+7, r22	; 0x07
	Complex * kronvec=(Complex*)malloc(sizeof(Complex)*kron_size);
     984:	9b 01       	movw	r18, r22
     986:	22 0f       	add	r18, r18
     988:	33 1f       	adc	r19, r19
     98a:	22 0f       	add	r18, r18
     98c:	33 1f       	adc	r19, r19
     98e:	22 0f       	add	r18, r18
     990:	33 1f       	adc	r19, r19
     992:	3c 83       	std	Y+4, r19	; 0x04
     994:	2b 83       	std	Y+3, r18	; 0x03
     996:	c9 01       	movw	r24, r18
     998:	0e 94 10 32 	call	0x6420	; 0x6420 <malloc>
     99c:	89 83       	std	Y+1, r24	; 0x01
     99e:	9a 83       	std	Y+2, r25	; 0x02
	
	int vec1i=0;
	int vec2i_default=VECTOR_QUBIT_SIZE;
	int vec2i=vec2i_default;
	for(int i=0;i<kron_size;i++){
     9a0:	8f 81       	ldd	r24, Y+7	; 0x07
     9a2:	98 85       	ldd	r25, Y+8	; 0x08
     9a4:	18 16       	cp	r1, r24
     9a6:	19 06       	cpc	r1, r25
     9a8:	0c f0       	brlt	.+2      	; 0x9ac <_ZN5Gates9kroneckerEP7Complexii+0x84>
     9aa:	53 c0       	rjmp	.+166    	; 0xa52 <_ZN5Gates9kroneckerEP7Complexii+0x12a>
    	if(vec2i==qb_count*2){vec2i=vec2i_default;vec1i++;}
     9ac:	18 01       	movw	r2, r16
     9ae:	22 0c       	add	r2, r2
     9b0:	33 1c       	adc	r3, r3
     9b2:	c9 80       	ldd	r12, Y+1	; 0x01
     9b4:	da 80       	ldd	r13, Y+2	; 0x02
	Complex * kronvec=(Complex*)malloc(sizeof(Complex)*kron_size);
	
	int vec1i=0;
	int vec2i_default=VECTOR_QUBIT_SIZE;
	int vec2i=vec2i_default;
	for(int i=0;i<kron_size;i++){
     9b6:	61 2c       	mov	r6, r1
     9b8:	71 2c       	mov	r7, r1
	int kron_size=utils.custom_pow(2,qb_count);
	Complex * kronvec=(Complex*)malloc(sizeof(Complex)*kron_size);
	
	int vec1i=0;
	int vec2i_default=VECTOR_QUBIT_SIZE;
	int vec2i=vec2i_default;
     9ba:	e2 e0       	ldi	r30, 0x02	; 2
     9bc:	f0 e0       	ldi	r31, 0x00	; 0
Complex * Gates::kronecker(Complex * vec,int qb_count,int touch_enable){
	if(qb_count==1) return vec;
	int kron_size=utils.custom_pow(2,qb_count);
	Complex * kronvec=(Complex*)malloc(sizeof(Complex)*kron_size);
	
	int vec1i=0;
     9be:	41 2c       	mov	r4, r1
     9c0:	51 2c       	mov	r5, r1
	int vec2i_default=VECTOR_QUBIT_SIZE;
	int vec2i=vec2i_default;
	for(int i=0;i<kron_size;i++){
    	if(vec2i==qb_count*2){vec2i=vec2i_default;vec1i++;}
     9c2:	c6 01       	movw	r24, r12
     9c4:	cf 80       	ldd	r12, Y+7	; 0x07
     9c6:	d8 84       	ldd	r13, Y+8	; 0x08
     9c8:	47 01       	movw	r8, r14
     9ca:	98 87       	std	Y+8, r25	; 0x08
     9cc:	8f 83       	std	Y+7, r24	; 0x07
     9ce:	2e 16       	cp	r2, r30
     9d0:	3f 06       	cpc	r3, r31
     9d2:	29 f4       	brne	.+10     	; 0x9de <_ZN5Gates9kroneckerEP7Complexii+0xb6>
     9d4:	9f ef       	ldi	r25, 0xFF	; 255
     9d6:	49 1a       	sub	r4, r25
     9d8:	59 0a       	sbc	r5, r25
     9da:	e2 e0       	ldi	r30, 0x02	; 2
     9dc:	f0 e0       	ldi	r31, 0x00	; 0
		kronvec[i]=vec[vec1i].mul(vec[vec2i++]);
     9de:	7f 01       	movw	r14, r30
     9e0:	2f ef       	ldi	r18, 0xFF	; 255
     9e2:	e2 1a       	sub	r14, r18
     9e4:	f2 0a       	sbc	r15, r18
     9e6:	ee 0f       	add	r30, r30
     9e8:	ff 1f       	adc	r31, r31
     9ea:	ee 0f       	add	r30, r30
     9ec:	ff 1f       	adc	r31, r31
     9ee:	ee 0f       	add	r30, r30
     9f0:	ff 1f       	adc	r31, r31
     9f2:	ea 0d       	add	r30, r10
     9f4:	fb 1d       	adc	r31, r11
     9f6:	00 81       	ld	r16, Z
     9f8:	11 81       	ldd	r17, Z+1	; 0x01
     9fa:	22 81       	ldd	r18, Z+2	; 0x02
     9fc:	33 81       	ldd	r19, Z+3	; 0x03
     9fe:	44 81       	ldd	r20, Z+4	; 0x04
     a00:	55 81       	ldd	r21, Z+5	; 0x05
     a02:	66 81       	ldd	r22, Z+6	; 0x06
     a04:	77 81       	ldd	r23, Z+7	; 0x07
     a06:	c2 01       	movw	r24, r4
     a08:	88 0f       	add	r24, r24
     a0a:	99 1f       	adc	r25, r25
     a0c:	88 0f       	add	r24, r24
     a0e:	99 1f       	adc	r25, r25
     a10:	88 0f       	add	r24, r24
     a12:	99 1f       	adc	r25, r25
     a14:	8a 0d       	add	r24, r10
     a16:	9b 1d       	adc	r25, r11
     a18:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_ZN7Complex3mulES_>
     a1c:	ef 81       	ldd	r30, Y+7	; 0x07
     a1e:	f8 85       	ldd	r31, Y+8	; 0x08
     a20:	20 83       	st	Z, r18
     a22:	31 83       	std	Z+1, r19	; 0x01
     a24:	42 83       	std	Z+2, r20	; 0x02
     a26:	53 83       	std	Z+3, r21	; 0x03
     a28:	64 83       	std	Z+4, r22	; 0x04
     a2a:	75 83       	std	Z+5, r23	; 0x05
     a2c:	86 83       	std	Z+6, r24	; 0x06
     a2e:	97 83       	std	Z+7, r25	; 0x07
	Complex * kronvec=(Complex*)malloc(sizeof(Complex)*kron_size);
	
	int vec1i=0;
	int vec2i_default=VECTOR_QUBIT_SIZE;
	int vec2i=vec2i_default;
	for(int i=0;i<kron_size;i++){
     a30:	ff ef       	ldi	r31, 0xFF	; 255
     a32:	6f 1a       	sub	r6, r31
     a34:	7f 0a       	sbc	r7, r31
     a36:	2f 81       	ldd	r18, Y+7	; 0x07
     a38:	38 85       	ldd	r19, Y+8	; 0x08
     a3a:	28 5f       	subi	r18, 0xF8	; 248
     a3c:	3f 4f       	sbci	r19, 0xFF	; 255
     a3e:	38 87       	std	Y+8, r19	; 0x08
     a40:	2f 83       	std	Y+7, r18	; 0x07
     a42:	6c 14       	cp	r6, r12
     a44:	7d 04       	cpc	r7, r13
     a46:	11 f0       	breq	.+4      	; 0xa4c <_ZN5Gates9kroneckerEP7Complexii+0x124>
    	if(vec2i==qb_count*2){vec2i=vec2i_default;vec1i++;}
		kronvec[i]=vec[vec1i].mul(vec[vec2i++]);
     a48:	f7 01       	movw	r30, r14
     a4a:	c1 cf       	rjmp	.-126    	; 0x9ce <_ZN5Gates9kroneckerEP7Complexii+0xa6>
     a4c:	d8 86       	std	Y+8, r13	; 0x08
     a4e:	cf 82       	std	Y+7, r12	; 0x07
     a50:	74 01       	movw	r14, r8
	}
	
	if(touch_enable){
     a52:	8d 81       	ldd	r24, Y+5	; 0x05
     a54:	9e 81       	ldd	r25, Y+6	; 0x06
     a56:	89 2b       	or	r24, r25
     a58:	a9 f5       	brne	.+106    	; 0xac4 <_ZN5Gates9kroneckerEP7Complexii+0x19c>
				binary_touch=0;
				break;
			}
	}
	//print_states(kron_size,kronvec,"Kronecker: ");
	return kronvec;
     a5a:	89 81       	ldd	r24, Y+1	; 0x01
     a5c:	9a 81       	ldd	r25, Y+2	; 0x02
     a5e:	44 c0       	rjmp	.+136    	; 0xae8 <_ZN5Gates9kroneckerEP7Complexii+0x1c0>
	
	if(touch_enable){
		//TOUCH THE ENTANGLED/SUPERPOSITIONED QUBIT BEFORE GIVING IT TO A MATRIX:
		int binary_touch=1;
		while(binary_touch)	for(int i=0;i<kron_size;i++)
			if(touch(kronvec[i].re)==binary_touch){
     a60:	51 01       	movw	r10, r2
     a62:	f1 01       	movw	r30, r2
     a64:	40 81       	ld	r20, Z
     a66:	51 81       	ldd	r21, Z+1	; 0x01
     a68:	62 81       	ldd	r22, Z+2	; 0x02
     a6a:	73 81       	ldd	r23, Z+3	; 0x03
     a6c:	c7 01       	movw	r24, r14
     a6e:	0e 94 65 03 	call	0x6ca	; 0x6ca <_ZN5Gates5touchEd>
     a72:	01 97       	sbiw	r24, 0x01	; 1
     a74:	e9 f4       	brne	.+58     	; 0xab0 <_ZN5Gates9kroneckerEP7Complexii+0x188>
     a76:	8b 81       	ldd	r24, Y+3	; 0x03
     a78:	9c 81       	ldd	r25, Y+4	; 0x04
     a7a:	86 0d       	add	r24, r6
     a7c:	97 1d       	adc	r25, r7
     a7e:	f3 01       	movw	r30, r6
				for(int j=0;j<kron_size;j++){kronvec[j].re=0; kronvec[j].im=0;}
     a80:	10 82       	st	Z, r1
     a82:	11 82       	std	Z+1, r1	; 0x01
     a84:	12 82       	std	Z+2, r1	; 0x02
     a86:	13 82       	std	Z+3, r1	; 0x03
     a88:	14 82       	std	Z+4, r1	; 0x04
     a8a:	15 82       	std	Z+5, r1	; 0x05
     a8c:	16 82       	std	Z+6, r1	; 0x06
     a8e:	17 82       	std	Z+7, r1	; 0x07
     a90:	38 96       	adiw	r30, 0x08	; 8
     a92:	e8 17       	cp	r30, r24
     a94:	f9 07       	cpc	r31, r25
     a96:	a1 f7       	brne	.-24     	; 0xa80 <_ZN5Gates9kroneckerEP7Complexii+0x158>
				kronvec[i].re=binary_touch;
     a98:	80 e0       	ldi	r24, 0x00	; 0
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	a0 e8       	ldi	r26, 0x80	; 128
     a9e:	bf e3       	ldi	r27, 0x3F	; 63
     aa0:	f5 01       	movw	r30, r10
     aa2:	80 83       	st	Z, r24
     aa4:	91 83       	std	Z+1, r25	; 0x01
     aa6:	a2 83       	std	Z+2, r26	; 0x02
     aa8:	b3 83       	std	Z+3, r27	; 0x03
				binary_touch=0;
				break;
			}
	}
	//print_states(kron_size,kronvec,"Kronecker: ");
	return kronvec;
     aaa:	89 81       	ldd	r24, Y+1	; 0x01
     aac:	9a 81       	ldd	r25, Y+2	; 0x02
     aae:	1c c0       	rjmp	.+56     	; 0xae8 <_ZN5Gates9kroneckerEP7Complexii+0x1c0>
	}
	
	if(touch_enable){
		//TOUCH THE ENTANGLED/SUPERPOSITIONED QUBIT BEFORE GIVING IT TO A MATRIX:
		int binary_touch=1;
		while(binary_touch)	for(int i=0;i<kron_size;i++)
     ab0:	ff ef       	ldi	r31, 0xFF	; 255
     ab2:	cf 1a       	sub	r12, r31
     ab4:	df 0a       	sbc	r13, r31
     ab6:	28 e0       	ldi	r18, 0x08	; 8
     ab8:	22 0e       	add	r2, r18
     aba:	31 1c       	adc	r3, r1
     abc:	c8 14       	cp	r12, r8
     abe:	d9 04       	cpc	r13, r9
     ac0:	79 f6       	brne	.-98     	; 0xa60 <_ZN5Gates9kroneckerEP7Complexii+0x138>
     ac2:	06 c0       	rjmp	.+12     	; 0xad0 <_ZN5Gates9kroneckerEP7Complexii+0x1a8>
     ac4:	49 80       	ldd	r4, Y+1	; 0x01
     ac6:	5a 80       	ldd	r5, Y+2	; 0x02
     ac8:	00 e0       	ldi	r16, 0x00	; 0
     aca:	10 e0       	ldi	r17, 0x00	; 0
     acc:	8f 80       	ldd	r8, Y+7	; 0x07
     ace:	98 84       	ldd	r9, Y+8	; 0x08
     ad0:	18 14       	cp	r1, r8
     ad2:	19 04       	cpc	r1, r9
     ad4:	ec f7       	brge	.-6      	; 0xad0 <_ZN5Gates9kroneckerEP7Complexii+0x1a8>
     ad6:	64 2c       	mov	r6, r4
     ad8:	75 2c       	mov	r7, r5
     ada:	24 2c       	mov	r2, r4
     adc:	35 2c       	mov	r3, r5
     ade:	c0 2e       	mov	r12, r16
     ae0:	d1 2e       	mov	r13, r17
     ae2:	be cf       	rjmp	.-132    	; 0xa60 <_ZN5Gates9kroneckerEP7Complexii+0x138>
		}
	return reversed_kronecker;
}

Complex * Gates::kronecker(Complex * vec,int qb_count,int touch_enable){
	if(qb_count==1) return vec;
     ae4:	86 2f       	mov	r24, r22
     ae6:	9b 2d       	mov	r25, r11
				break;
			}
	}
	//print_states(kron_size,kronvec,"Kronecker: ");
	return kronvec;
}
     ae8:	28 96       	adiw	r28, 0x08	; 8
     aea:	0f b6       	in	r0, 0x3f	; 63
     aec:	f8 94       	cli
     aee:	de bf       	out	0x3e, r29	; 62
     af0:	0f be       	out	0x3f, r0	; 63
     af2:	cd bf       	out	0x3d, r28	; 61
     af4:	df 91       	pop	r29
     af6:	cf 91       	pop	r28
     af8:	1f 91       	pop	r17
     afa:	0f 91       	pop	r16
     afc:	ff 90       	pop	r15
     afe:	ef 90       	pop	r14
     b00:	df 90       	pop	r13
     b02:	cf 90       	pop	r12
     b04:	bf 90       	pop	r11
     b06:	af 90       	pop	r10
     b08:	9f 90       	pop	r9
     b0a:	8f 90       	pop	r8
     b0c:	7f 90       	pop	r7
     b0e:	6f 90       	pop	r6
     b10:	5f 90       	pop	r5
     b12:	4f 90       	pop	r4
     b14:	3f 90       	pop	r3
     b16:	2f 90       	pop	r2
     b18:	08 95       	ret

00000b1a <_ZN5Gates8ampl2vecEiPiS0_>:

Complex * Gates::ampl2vec(int qb_count,int theta_list[6],int phi_list[6]){
     b1a:	2f 92       	push	r2
     b1c:	3f 92       	push	r3
     b1e:	4f 92       	push	r4
     b20:	5f 92       	push	r5
     b22:	6f 92       	push	r6
     b24:	7f 92       	push	r7
     b26:	8f 92       	push	r8
     b28:	9f 92       	push	r9
     b2a:	af 92       	push	r10
     b2c:	bf 92       	push	r11
     b2e:	cf 92       	push	r12
     b30:	df 92       	push	r13
     b32:	ef 92       	push	r14
     b34:	ff 92       	push	r15
     b36:	0f 93       	push	r16
     b38:	1f 93       	push	r17
     b3a:	cf 93       	push	r28
     b3c:	df 93       	push	r29
     b3e:	cd b7       	in	r28, 0x3d	; 61
     b40:	de b7       	in	r29, 0x3e	; 62
     b42:	28 97       	sbiw	r28, 0x08	; 8
     b44:	0f b6       	in	r0, 0x3f	; 63
     b46:	f8 94       	cli
     b48:	de bf       	out	0x3e, r29	; 62
     b4a:	0f be       	out	0x3f, r0	; 63
     b4c:	cd bf       	out	0x3d, r28	; 61
     b4e:	9e 83       	std	Y+6, r25	; 0x06
     b50:	8d 83       	std	Y+5, r24	; 0x05
     b52:	7a 83       	std	Y+2, r23	; 0x02
     b54:	69 83       	std	Y+1, r22	; 0x01
     b56:	04 2f       	mov	r16, r20
     b58:	15 2f       	mov	r17, r21
     b5a:	c2 2e       	mov	r12, r18
     b5c:	d3 2e       	mov	r13, r19
	Complex* vec=(Complex*)malloc(sizeof(Complex)*(qb_count*2));
     b5e:	cb 01       	movw	r24, r22
     b60:	82 95       	swap	r24
     b62:	92 95       	swap	r25
     b64:	90 7f       	andi	r25, 0xF0	; 240
     b66:	98 27       	eor	r25, r24
     b68:	80 7f       	andi	r24, 0xF0	; 240
     b6a:	98 27       	eor	r25, r24
     b6c:	0e 94 10 32 	call	0x6420	; 0x6420 <malloc>
     b70:	8b 83       	std	Y+3, r24	; 0x03
     b72:	9c 83       	std	Y+4, r25	; 0x04
	int thephi_index=0;
	for(int i=0;i<qb_count*2;i+=2){
     b74:	29 80       	ldd	r2, Y+1	; 0x01
     b76:	3a 80       	ldd	r3, Y+2	; 0x02
     b78:	22 0c       	add	r2, r2
     b7a:	33 1c       	adc	r3, r3
     b7c:	12 14       	cp	r1, r2
     b7e:	13 04       	cpc	r1, r3
     b80:	0c f0       	brlt	.+2      	; 0xb84 <_ZN5Gates8ampl2vecEiPiS0_+0x6a>
     b82:	ac c0       	rjmp	.+344    	; 0xcdc <_ZN5Gates8ampl2vecEiPiS0_+0x1c2>
     b84:	a8 2e       	mov	r10, r24
     b86:	b9 2e       	mov	r11, r25
     b88:	e0 2e       	mov	r14, r16
     b8a:	f1 2e       	mov	r15, r17
     b8c:	0c 2d       	mov	r16, r12
     b8e:	1d 2d       	mov	r17, r13
     b90:	81 2c       	mov	r8, r1
     b92:	91 2c       	mov	r9, r1
     b94:	b8 86       	std	Y+8, r11	; 0x08
     b96:	af 82       	std	Y+7, r10	; 0x07
     b98:	67 01       	movw	r12, r14
		vec[i].re=cos(theta_list[thephi_index]*M_PI/360);												// ALPHA RE (IM=0)
     b9a:	f7 01       	movw	r30, r14
     b9c:	41 90       	ld	r4, Z+
     b9e:	51 90       	ld	r5, Z+
     ba0:	7f 01       	movw	r14, r30
     ba2:	66 24       	eor	r6, r6
     ba4:	57 fc       	sbrc	r5, 7
     ba6:	60 94       	com	r6
     ba8:	76 2c       	mov	r7, r6
     baa:	c3 01       	movw	r24, r6
     bac:	b2 01       	movw	r22, r4
     bae:	0e 94 2c 2f 	call	0x5e58	; 0x5e58 <__floatsisf>
     bb2:	2b ed       	ldi	r18, 0xDB	; 219
     bb4:	3f e0       	ldi	r19, 0x0F	; 15
     bb6:	49 e4       	ldi	r20, 0x49	; 73
     bb8:	50 e4       	ldi	r21, 0x40	; 64
     bba:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     bbe:	20 e0       	ldi	r18, 0x00	; 0
     bc0:	30 e0       	ldi	r19, 0x00	; 0
     bc2:	44 eb       	ldi	r20, 0xB4	; 180
     bc4:	53 e4       	ldi	r21, 0x43	; 67
     bc6:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <__divsf3>
     bca:	0e 94 5d 2e 	call	0x5cba	; 0x5cba <cos>
     bce:	ef 81       	ldd	r30, Y+7	; 0x07
     bd0:	f8 85       	ldd	r31, Y+8	; 0x08
     bd2:	60 83       	st	Z, r22
     bd4:	71 83       	std	Z+1, r23	; 0x01
     bd6:	82 83       	std	Z+2, r24	; 0x02
     bd8:	93 83       	std	Z+3, r25	; 0x03
		vec[i+1].re=sin((theta_list[thephi_index]*M_PI)/360)*cos((phi_list[thephi_index]*M_PI)/180);	// BETA RE
     bda:	c3 01       	movw	r24, r6
     bdc:	b2 01       	movw	r22, r4
     bde:	0e 94 2c 2f 	call	0x5e58	; 0x5e58 <__floatsisf>
     be2:	2b ed       	ldi	r18, 0xDB	; 219
     be4:	3f e0       	ldi	r19, 0x0F	; 15
     be6:	49 e4       	ldi	r20, 0x49	; 73
     be8:	50 e4       	ldi	r21, 0x40	; 64
     bea:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     bee:	20 e0       	ldi	r18, 0x00	; 0
     bf0:	30 e0       	ldi	r19, 0x00	; 0
     bf2:	44 eb       	ldi	r20, 0xB4	; 180
     bf4:	53 e4       	ldi	r21, 0x43	; 67
     bf6:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <__divsf3>
     bfa:	0e 94 71 31 	call	0x62e2	; 0x62e2 <sin>
     bfe:	2b 01       	movw	r4, r22
     c00:	3c 01       	movw	r6, r24
     c02:	58 01       	movw	r10, r16
     c04:	f8 01       	movw	r30, r16
     c06:	61 91       	ld	r22, Z+
     c08:	71 91       	ld	r23, Z+
     c0a:	8f 01       	movw	r16, r30
     c0c:	88 27       	eor	r24, r24
     c0e:	77 fd       	sbrc	r23, 7
     c10:	80 95       	com	r24
     c12:	98 2f       	mov	r25, r24
     c14:	0e 94 2c 2f 	call	0x5e58	; 0x5e58 <__floatsisf>
     c18:	2b ed       	ldi	r18, 0xDB	; 219
     c1a:	3f e0       	ldi	r19, 0x0F	; 15
     c1c:	49 e4       	ldi	r20, 0x49	; 73
     c1e:	50 e4       	ldi	r21, 0x40	; 64
     c20:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     c24:	20 e0       	ldi	r18, 0x00	; 0
     c26:	30 e0       	ldi	r19, 0x00	; 0
     c28:	44 e3       	ldi	r20, 0x34	; 52
     c2a:	53 e4       	ldi	r21, 0x43	; 67
     c2c:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <__divsf3>
     c30:	0e 94 5d 2e 	call	0x5cba	; 0x5cba <cos>
     c34:	9b 01       	movw	r18, r22
     c36:	ac 01       	movw	r20, r24
     c38:	c3 01       	movw	r24, r6
     c3a:	b2 01       	movw	r22, r4
     c3c:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     c40:	ef 81       	ldd	r30, Y+7	; 0x07
     c42:	f8 85       	ldd	r31, Y+8	; 0x08
     c44:	60 87       	std	Z+8, r22	; 0x08
     c46:	71 87       	std	Z+9, r23	; 0x09
     c48:	82 87       	std	Z+10, r24	; 0x0a
     c4a:	93 87       	std	Z+11, r25	; 0x0b
		vec[i+1].im=sin((theta_list[thephi_index]*M_PI)/360)*sin((phi_list[thephi_index]*M_PI)/180);  // BETA IM
     c4c:	f6 01       	movw	r30, r12
     c4e:	60 81       	ld	r22, Z
     c50:	71 81       	ldd	r23, Z+1	; 0x01
     c52:	88 27       	eor	r24, r24
     c54:	77 fd       	sbrc	r23, 7
     c56:	80 95       	com	r24
     c58:	98 2f       	mov	r25, r24
     c5a:	0e 94 2c 2f 	call	0x5e58	; 0x5e58 <__floatsisf>
     c5e:	2b ed       	ldi	r18, 0xDB	; 219
     c60:	3f e0       	ldi	r19, 0x0F	; 15
     c62:	49 e4       	ldi	r20, 0x49	; 73
     c64:	50 e4       	ldi	r21, 0x40	; 64
     c66:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     c6a:	20 e0       	ldi	r18, 0x00	; 0
     c6c:	30 e0       	ldi	r19, 0x00	; 0
     c6e:	44 eb       	ldi	r20, 0xB4	; 180
     c70:	53 e4       	ldi	r21, 0x43	; 67
     c72:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <__divsf3>
     c76:	0e 94 71 31 	call	0x62e2	; 0x62e2 <sin>
     c7a:	2b 01       	movw	r4, r22
     c7c:	3c 01       	movw	r6, r24
     c7e:	f5 01       	movw	r30, r10
     c80:	60 81       	ld	r22, Z
     c82:	71 81       	ldd	r23, Z+1	; 0x01
     c84:	88 27       	eor	r24, r24
     c86:	77 fd       	sbrc	r23, 7
     c88:	80 95       	com	r24
     c8a:	98 2f       	mov	r25, r24
     c8c:	0e 94 2c 2f 	call	0x5e58	; 0x5e58 <__floatsisf>
     c90:	2b ed       	ldi	r18, 0xDB	; 219
     c92:	3f e0       	ldi	r19, 0x0F	; 15
     c94:	49 e4       	ldi	r20, 0x49	; 73
     c96:	50 e4       	ldi	r21, 0x40	; 64
     c98:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     c9c:	20 e0       	ldi	r18, 0x00	; 0
     c9e:	30 e0       	ldi	r19, 0x00	; 0
     ca0:	44 e3       	ldi	r20, 0x34	; 52
     ca2:	53 e4       	ldi	r21, 0x43	; 67
     ca4:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <__divsf3>
     ca8:	0e 94 71 31 	call	0x62e2	; 0x62e2 <sin>
     cac:	9b 01       	movw	r18, r22
     cae:	ac 01       	movw	r20, r24
     cb0:	c3 01       	movw	r24, r6
     cb2:	b2 01       	movw	r22, r4
     cb4:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     cb8:	ef 81       	ldd	r30, Y+7	; 0x07
     cba:	f8 85       	ldd	r31, Y+8	; 0x08
     cbc:	64 87       	std	Z+12, r22	; 0x0c
     cbe:	75 87       	std	Z+13, r23	; 0x0d
     cc0:	86 87       	std	Z+14, r24	; 0x0e
     cc2:	97 87       	std	Z+15, r25	; 0x0f
}

Complex * Gates::ampl2vec(int qb_count,int theta_list[6],int phi_list[6]){
	Complex* vec=(Complex*)malloc(sizeof(Complex)*(qb_count*2));
	int thephi_index=0;
	for(int i=0;i<qb_count*2;i+=2){
     cc4:	f2 e0       	ldi	r31, 0x02	; 2
     cc6:	8f 0e       	add	r8, r31
     cc8:	91 1c       	adc	r9, r1
     cca:	8f 81       	ldd	r24, Y+7	; 0x07
     ccc:	98 85       	ldd	r25, Y+8	; 0x08
     cce:	40 96       	adiw	r24, 0x10	; 16
     cd0:	98 87       	std	Y+8, r25	; 0x08
     cd2:	8f 83       	std	Y+7, r24	; 0x07
     cd4:	82 14       	cp	r8, r2
     cd6:	93 04       	cpc	r9, r3
     cd8:	0c f4       	brge	.+2      	; 0xcdc <_ZN5Gates8ampl2vecEiPiS0_+0x1c2>
     cda:	5e cf       	rjmp	.-324    	; 0xb98 <_ZN5Gates8ampl2vecEiPiS0_+0x7e>
		vec[i].re=cos(theta_list[thephi_index]*M_PI/360);												// ALPHA RE (IM=0)
		vec[i+1].re=sin((theta_list[thephi_index]*M_PI)/360)*cos((phi_list[thephi_index]*M_PI)/180);	// BETA RE
		vec[i+1].im=sin((theta_list[thephi_index]*M_PI)/360)*sin((phi_list[thephi_index]*M_PI)/180);  // BETA IM
		thephi_index++;
	}
	print_states(qb_count*2,vec,"Before: ");
     cdc:	45 e7       	ldi	r20, 0x75	; 117
     cde:	50 e0       	ldi	r21, 0x00	; 0
     ce0:	6b 81       	ldd	r22, Y+3	; 0x03
     ce2:	7c 81       	ldd	r23, Y+4	; 0x04
     ce4:	c1 01       	movw	r24, r2
     ce6:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <_Z12print_statesiP7ComplexPc>
	return kronecker(vec,qb_count,true); // PUT VEC INTO KRONECKER AND RETURN THE RESULT
     cea:	21 e0       	ldi	r18, 0x01	; 1
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	49 81       	ldd	r20, Y+1	; 0x01
     cf0:	5a 81       	ldd	r21, Y+2	; 0x02
     cf2:	6b 81       	ldd	r22, Y+3	; 0x03
     cf4:	7c 81       	ldd	r23, Y+4	; 0x04
     cf6:	8d 81       	ldd	r24, Y+5	; 0x05
     cf8:	9e 81       	ldd	r25, Y+6	; 0x06
     cfa:	0e 94 94 04 	call	0x928	; 0x928 <_ZN5Gates9kroneckerEP7Complexii>
}
     cfe:	28 96       	adiw	r28, 0x08	; 8
     d00:	0f b6       	in	r0, 0x3f	; 63
     d02:	f8 94       	cli
     d04:	de bf       	out	0x3e, r29	; 62
     d06:	0f be       	out	0x3f, r0	; 63
     d08:	cd bf       	out	0x3d, r28	; 61
     d0a:	df 91       	pop	r29
     d0c:	cf 91       	pop	r28
     d0e:	1f 91       	pop	r17
     d10:	0f 91       	pop	r16
     d12:	ff 90       	pop	r15
     d14:	ef 90       	pop	r14
     d16:	df 90       	pop	r13
     d18:	cf 90       	pop	r12
     d1a:	bf 90       	pop	r11
     d1c:	af 90       	pop	r10
     d1e:	9f 90       	pop	r9
     d20:	8f 90       	pop	r8
     d22:	7f 90       	pop	r7
     d24:	6f 90       	pop	r6
     d26:	5f 90       	pop	r5
     d28:	4f 90       	pop	r4
     d2a:	3f 90       	pop	r3
     d2c:	2f 90       	pop	r2
     d2e:	08 95       	ret

00000d30 <_ZN5Gates8vec2amplEP7Complexi>:
int * Gates::vec2ampl(Complex * vec,int qb_count){
     d30:	4f 92       	push	r4
     d32:	5f 92       	push	r5
     d34:	6f 92       	push	r6
     d36:	7f 92       	push	r7
     d38:	8f 92       	push	r8
     d3a:	9f 92       	push	r9
     d3c:	af 92       	push	r10
     d3e:	bf 92       	push	r11
     d40:	cf 92       	push	r12
     d42:	df 92       	push	r13
     d44:	ef 92       	push	r14
     d46:	ff 92       	push	r15
     d48:	0f 93       	push	r16
     d4a:	1f 93       	push	r17
     d4c:	cf 93       	push	r28
     d4e:	df 93       	push	r29
     d50:	ec 01       	movw	r28, r24
     d52:	66 2e       	mov	r6, r22
     d54:	77 2e       	mov	r7, r23
     d56:	6a 01       	movw	r12, r20
	int kron_size=utils.custom_pow(2,qb_count);
     d58:	9a 01       	movw	r18, r20
     d5a:	40 e0       	ldi	r20, 0x00	; 0
     d5c:	50 e0       	ldi	r21, 0x00	; 0
     d5e:	60 e0       	ldi	r22, 0x00	; 0
     d60:	70 e4       	ldi	r23, 0x40	; 64
     d62:	0e 94 67 2d 	call	0x5ace	; 0x5ace <_ZN5Utils10custom_powEfi>
     d66:	0e 94 f9 2e 	call	0x5df2	; 0x5df2 <__fixsfsi>
     d6a:	4b 01       	movw	r8, r22
     d6c:	5c 01       	movw	r10, r24
	if(qb_count>1) vec=reverse_kronecker(vec,kron_size);
     d6e:	82 e0       	ldi	r24, 0x02	; 2
     d70:	c8 16       	cp	r12, r24
     d72:	d1 04       	cpc	r13, r1
     d74:	44 f0       	brlt	.+16     	; 0xd86 <_ZN5Gates8vec2amplEP7Complexi+0x56>
     d76:	a4 01       	movw	r20, r8
     d78:	66 2d       	mov	r22, r6
     d7a:	77 2d       	mov	r23, r7
     d7c:	ce 01       	movw	r24, r28
     d7e:	0e 94 95 03 	call	0x72a	; 0x72a <_ZN5Gates17reverse_kroneckerEP7Complexi>
     d82:	68 2e       	mov	r6, r24
     d84:	79 2e       	mov	r7, r25
	
	int* newthephi=(int*)malloc(sizeof(int)*(qb_count*2));
     d86:	c6 01       	movw	r24, r12
     d88:	88 0f       	add	r24, r24
     d8a:	99 1f       	adc	r25, r25
     d8c:	88 0f       	add	r24, r24
     d8e:	99 1f       	adc	r25, r25
     d90:	0e 94 10 32 	call	0x6420	; 0x6420 <malloc>
     d94:	48 2e       	mov	r4, r24
     d96:	59 2e       	mov	r5, r25
	for(int i=0;i<qb_count*2;i++) if(i%2==0) newthephi[i]=(360*acos(vec[i].re))/M_PI; else newthephi[i]=(180*vec[i].arg())/M_PI;
     d98:	cc 0c       	add	r12, r12
     d9a:	dd 1c       	adc	r13, r13
     d9c:	1c 14       	cp	r1, r12
     d9e:	1d 04       	cpc	r1, r13
     da0:	f4 f5       	brge	.+124    	; 0xe1e <_ZN5Gates8vec2amplEP7Complexi+0xee>
     da2:	e6 2c       	mov	r14, r6
     da4:	f7 2c       	mov	r15, r7
     da6:	08 2f       	mov	r16, r24
     da8:	19 2f       	mov	r17, r25
     daa:	c0 e0       	ldi	r28, 0x00	; 0
     dac:	d0 e0       	ldi	r29, 0x00	; 0
     dae:	c0 fd       	sbrc	r28, 0
     db0:	19 c0       	rjmp	.+50     	; 0xde4 <_ZN5Gates8vec2amplEP7Complexi+0xb4>
     db2:	f7 01       	movw	r30, r14
     db4:	60 81       	ld	r22, Z
     db6:	71 81       	ldd	r23, Z+1	; 0x01
     db8:	82 81       	ldd	r24, Z+2	; 0x02
     dba:	93 81       	ldd	r25, Z+3	; 0x03
     dbc:	0e 94 be 2d 	call	0x5b7c	; 0x5b7c <acos>
     dc0:	20 e0       	ldi	r18, 0x00	; 0
     dc2:	30 e0       	ldi	r19, 0x00	; 0
     dc4:	44 eb       	ldi	r20, 0xB4	; 180
     dc6:	53 e4       	ldi	r21, 0x43	; 67
     dc8:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     dcc:	2b ed       	ldi	r18, 0xDB	; 219
     dce:	3f e0       	ldi	r19, 0x0F	; 15
     dd0:	49 e4       	ldi	r20, 0x49	; 73
     dd2:	50 e4       	ldi	r21, 0x40	; 64
     dd4:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <__divsf3>
     dd8:	0e 94 f9 2e 	call	0x5df2	; 0x5df2 <__fixsfsi>
     ddc:	f8 01       	movw	r30, r16
     dde:	71 83       	std	Z+1, r23	; 0x01
     de0:	60 83       	st	Z, r22
     de2:	14 c0       	rjmp	.+40     	; 0xe0c <_ZN5Gates8vec2amplEP7Complexi+0xdc>
     de4:	c7 01       	movw	r24, r14
     de6:	0e 94 0e 02 	call	0x41c	; 0x41c <_ZN7Complex3argEv>
     dea:	20 e0       	ldi	r18, 0x00	; 0
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	44 e3       	ldi	r20, 0x34	; 52
     df0:	53 e4       	ldi	r21, 0x43	; 67
     df2:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
     df6:	2b ed       	ldi	r18, 0xDB	; 219
     df8:	3f e0       	ldi	r19, 0x0F	; 15
     dfa:	49 e4       	ldi	r20, 0x49	; 73
     dfc:	50 e4       	ldi	r21, 0x40	; 64
     dfe:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <__divsf3>
     e02:	0e 94 f9 2e 	call	0x5df2	; 0x5df2 <__fixsfsi>
     e06:	f8 01       	movw	r30, r16
     e08:	71 83       	std	Z+1, r23	; 0x01
     e0a:	60 83       	st	Z, r22
     e0c:	21 96       	adiw	r28, 0x01	; 1
     e0e:	f8 e0       	ldi	r31, 0x08	; 8
     e10:	ef 0e       	add	r14, r31
     e12:	f1 1c       	adc	r15, r1
     e14:	0e 5f       	subi	r16, 0xFE	; 254
     e16:	1f 4f       	sbci	r17, 0xFF	; 255
     e18:	cc 15       	cp	r28, r12
     e1a:	dd 05       	cpc	r29, r13
     e1c:	41 f6       	brne	.-112    	; 0xdae <_ZN5Gates8vec2amplEP7Complexi+0x7e>
	
	print_states(kron_size,vec,"After: ");
     e1e:	4e e7       	ldi	r20, 0x7E	; 126
     e20:	50 e0       	ldi	r21, 0x00	; 0
     e22:	66 2d       	mov	r22, r6
     e24:	77 2d       	mov	r23, r7
     e26:	c4 01       	movw	r24, r8
     e28:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <_Z12print_statesiP7ComplexPc>
	return newthephi;
}
     e2c:	84 2d       	mov	r24, r4
     e2e:	95 2d       	mov	r25, r5
     e30:	df 91       	pop	r29
     e32:	cf 91       	pop	r28
     e34:	1f 91       	pop	r17
     e36:	0f 91       	pop	r16
     e38:	ff 90       	pop	r15
     e3a:	ef 90       	pop	r14
     e3c:	df 90       	pop	r13
     e3e:	cf 90       	pop	r12
     e40:	bf 90       	pop	r11
     e42:	af 90       	pop	r10
     e44:	9f 90       	pop	r9
     e46:	8f 90       	pop	r8
     e48:	7f 90       	pop	r7
     e4a:	6f 90       	pop	r6
     e4c:	5f 90       	pop	r5
     e4e:	4f 90       	pop	r4
     e50:	08 95       	ret

00000e52 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>:

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
     e52:	2f 92       	push	r2
     e54:	3f 92       	push	r3
     e56:	4f 92       	push	r4
     e58:	5f 92       	push	r5
     e5a:	6f 92       	push	r6
     e5c:	7f 92       	push	r7
     e5e:	8f 92       	push	r8
     e60:	9f 92       	push	r9
     e62:	af 92       	push	r10
     e64:	bf 92       	push	r11
     e66:	cf 92       	push	r12
     e68:	df 92       	push	r13
     e6a:	ef 92       	push	r14
     e6c:	ff 92       	push	r15
     e6e:	0f 93       	push	r16
     e70:	1f 93       	push	r17
     e72:	cf 93       	push	r28
     e74:	df 93       	push	r29
     e76:	cd b7       	in	r28, 0x3d	; 61
     e78:	de b7       	in	r29, 0x3e	; 62
     e7a:	60 97       	sbiw	r28, 0x10	; 16
     e7c:	0f b6       	in	r0, 0x3f	; 63
     e7e:	f8 94       	cli
     e80:	de bf       	out	0x3e, r29	; 62
     e82:	0f be       	out	0x3f, r0	; 63
     e84:	cd bf       	out	0x3d, r28	; 61
     e86:	4b 01       	movw	r8, r22
     e88:	3a 01       	movw	r6, r20
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
     e8a:	80 e1       	ldi	r24, 0x10	; 16
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	0e 94 10 32 	call	0x6420	; 0x6420 <malloc>
     e92:	38 2e       	mov	r3, r24
     e94:	29 2e       	mov	r2, r25
     e96:	c8 2e       	mov	r12, r24
     e98:	d9 2e       	mov	r13, r25
	for(int i=0;i<qb_size;i++){
     e9a:	a1 2c       	mov	r10, r1
     e9c:	b1 2c       	mov	r11, r1
		Complex tmp;
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
     e9e:	24 01       	movw	r4, r8
     ea0:	88 e0       	ldi	r24, 0x08	; 8
     ea2:	48 0e       	add	r4, r24
     ea4:	51 1c       	adc	r5, r1

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
		Complex tmp;
     ea6:	ce 01       	movw	r24, r28
     ea8:	09 96       	adiw	r24, 0x09	; 9
     eaa:	0e 94 0c 01 	call	0x218	; 0x218 <_ZN7ComplexC1Ev>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
     eae:	75 01       	movw	r14, r10
     eb0:	ee 0c       	add	r14, r14
     eb2:	ff 1c       	adc	r15, r15
     eb4:	ee 0c       	add	r14, r14
     eb6:	ff 1c       	adc	r15, r15
     eb8:	ee 0c       	add	r14, r14
     eba:	ff 1c       	adc	r15, r15
     ebc:	e6 0c       	add	r14, r6
     ebe:	f7 1c       	adc	r15, r7
     ec0:	d7 01       	movw	r26, r14
     ec2:	0c 91       	ld	r16, X
     ec4:	11 96       	adiw	r26, 0x01	; 1
     ec6:	1c 91       	ld	r17, X
     ec8:	11 97       	sbiw	r26, 0x01	; 1
     eca:	12 96       	adiw	r26, 0x02	; 2
     ecc:	2c 91       	ld	r18, X
     ece:	12 97       	sbiw	r26, 0x02	; 2
     ed0:	13 96       	adiw	r26, 0x03	; 3
     ed2:	3c 91       	ld	r19, X
     ed4:	13 97       	sbiw	r26, 0x03	; 3
     ed6:	14 96       	adiw	r26, 0x04	; 4
     ed8:	4c 91       	ld	r20, X
     eda:	14 97       	sbiw	r26, 0x04	; 4
     edc:	15 96       	adiw	r26, 0x05	; 5
     ede:	5c 91       	ld	r21, X
     ee0:	15 97       	sbiw	r26, 0x05	; 5
     ee2:	16 96       	adiw	r26, 0x06	; 6
     ee4:	6c 91       	ld	r22, X
     ee6:	16 97       	sbiw	r26, 0x06	; 6
     ee8:	17 96       	adiw	r26, 0x07	; 7
     eea:	7c 91       	ld	r23, X
     eec:	c4 01       	movw	r24, r8
     eee:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_ZN7Complex3mulES_>
     ef2:	02 2f       	mov	r16, r18
     ef4:	13 2f       	mov	r17, r19
     ef6:	24 2f       	mov	r18, r20
     ef8:	35 2f       	mov	r19, r21
     efa:	46 2f       	mov	r20, r22
     efc:	57 2f       	mov	r21, r23
     efe:	68 2f       	mov	r22, r24
     f00:	79 2f       	mov	r23, r25
     f02:	ce 01       	movw	r24, r28
     f04:	09 96       	adiw	r24, 0x09	; 9
     f06:	0e 94 16 01 	call	0x22c	; 0x22c <_ZN7Complex3addES_>
     f0a:	29 87       	std	Y+9, r18	; 0x09
     f0c:	3a 87       	std	Y+10, r19	; 0x0a
     f0e:	4b 87       	std	Y+11, r20	; 0x0b
     f10:	5c 87       	std	Y+12, r21	; 0x0c
     f12:	6d 87       	std	Y+13, r22	; 0x0d
     f14:	7e 87       	std	Y+14, r23	; 0x0e
     f16:	8f 87       	std	Y+15, r24	; 0x0f
     f18:	98 8b       	std	Y+16, r25	; 0x10
     f1a:	f7 01       	movw	r30, r14
     f1c:	70 96       	adiw	r30, 0x10	; 16
     f1e:	d7 01       	movw	r26, r14
     f20:	50 96       	adiw	r26, 0x10	; 16
     f22:	0c 91       	ld	r16, X
     f24:	11 81       	ldd	r17, Z+1	; 0x01
     f26:	22 81       	ldd	r18, Z+2	; 0x02
     f28:	33 81       	ldd	r19, Z+3	; 0x03
     f2a:	44 81       	ldd	r20, Z+4	; 0x04
     f2c:	55 81       	ldd	r21, Z+5	; 0x05
     f2e:	66 81       	ldd	r22, Z+6	; 0x06
     f30:	77 81       	ldd	r23, Z+7	; 0x07
     f32:	c2 01       	movw	r24, r4
     f34:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_ZN7Complex3mulES_>
     f38:	02 2f       	mov	r16, r18
     f3a:	13 2f       	mov	r17, r19
     f3c:	24 2f       	mov	r18, r20
     f3e:	35 2f       	mov	r19, r21
     f40:	46 2f       	mov	r20, r22
     f42:	57 2f       	mov	r21, r23
     f44:	68 2f       	mov	r22, r24
     f46:	79 2f       	mov	r23, r25
     f48:	ce 01       	movw	r24, r28
     f4a:	09 96       	adiw	r24, 0x09	; 9
     f4c:	0e 94 16 01 	call	0x22c	; 0x22c <_ZN7Complex3addES_>
     f50:	29 87       	std	Y+9, r18	; 0x09
     f52:	3a 87       	std	Y+10, r19	; 0x0a
     f54:	4b 87       	std	Y+11, r20	; 0x0b
     f56:	5c 87       	std	Y+12, r21	; 0x0c
     f58:	6d 87       	std	Y+13, r22	; 0x0d
     f5a:	7e 87       	std	Y+14, r23	; 0x0e
     f5c:	8f 87       	std	Y+15, r24	; 0x0f
     f5e:	98 8b       	std	Y+16, r25	; 0x10
		result[i].re=tmp.re;
     f60:	89 85       	ldd	r24, Y+9	; 0x09
     f62:	9a 85       	ldd	r25, Y+10	; 0x0a
     f64:	ab 85       	ldd	r26, Y+11	; 0x0b
     f66:	bc 85       	ldd	r27, Y+12	; 0x0c
     f68:	f6 01       	movw	r30, r12
     f6a:	80 83       	st	Z, r24
     f6c:	91 83       	std	Z+1, r25	; 0x01
     f6e:	a2 83       	std	Z+2, r26	; 0x02
     f70:	b3 83       	std	Z+3, r27	; 0x03
		result[i].im=tmp.im;
     f72:	8d 85       	ldd	r24, Y+13	; 0x0d
     f74:	9e 85       	ldd	r25, Y+14	; 0x0e
     f76:	af 85       	ldd	r26, Y+15	; 0x0f
     f78:	b8 89       	ldd	r27, Y+16	; 0x10
     f7a:	84 83       	std	Z+4, r24	; 0x04
     f7c:	95 83       	std	Z+5, r25	; 0x05
     f7e:	a6 83       	std	Z+6, r26	; 0x06
     f80:	b7 83       	std	Z+7, r27	; 0x07
}

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
     f82:	ff ef       	ldi	r31, 0xFF	; 255
     f84:	af 1a       	sub	r10, r31
     f86:	bf 0a       	sbc	r11, r31
     f88:	88 e0       	ldi	r24, 0x08	; 8
     f8a:	c8 0e       	add	r12, r24
     f8c:	d1 1c       	adc	r13, r1
     f8e:	a2 e0       	ldi	r26, 0x02	; 2
     f90:	aa 16       	cp	r10, r26
     f92:	b1 04       	cpc	r11, r1
     f94:	09 f0       	breq	.+2      	; 0xf98 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_+0x146>
     f96:	87 cf       	rjmp	.-242    	; 0xea6 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_+0x54>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
		result[i].re=tmp.re;
		result[i].im=tmp.im;
	}
	return result;
}
     f98:	83 2d       	mov	r24, r3
     f9a:	92 2d       	mov	r25, r2
     f9c:	60 96       	adiw	r28, 0x10	; 16
     f9e:	0f b6       	in	r0, 0x3f	; 63
     fa0:	f8 94       	cli
     fa2:	de bf       	out	0x3e, r29	; 62
     fa4:	0f be       	out	0x3f, r0	; 63
     fa6:	cd bf       	out	0x3d, r28	; 61
     fa8:	df 91       	pop	r29
     faa:	cf 91       	pop	r28
     fac:	1f 91       	pop	r17
     fae:	0f 91       	pop	r16
     fb0:	ff 90       	pop	r15
     fb2:	ef 90       	pop	r14
     fb4:	df 90       	pop	r13
     fb6:	cf 90       	pop	r12
     fb8:	bf 90       	pop	r11
     fba:	af 90       	pop	r10
     fbc:	9f 90       	pop	r9
     fbe:	8f 90       	pop	r8
     fc0:	7f 90       	pop	r7
     fc2:	6f 90       	pop	r6
     fc4:	5f 90       	pop	r5
     fc6:	4f 90       	pop	r4
     fc8:	3f 90       	pop	r3
     fca:	2f 90       	pop	r2
     fcc:	08 95       	ret

00000fce <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>:
Complex * Gates::multiply4x4(Complex *q,Complex matrix[4][4]){
     fce:	2f 92       	push	r2
     fd0:	3f 92       	push	r3
     fd2:	4f 92       	push	r4
     fd4:	5f 92       	push	r5
     fd6:	6f 92       	push	r6
     fd8:	7f 92       	push	r7
     fda:	8f 92       	push	r8
     fdc:	9f 92       	push	r9
     fde:	af 92       	push	r10
     fe0:	bf 92       	push	r11
     fe2:	cf 92       	push	r12
     fe4:	df 92       	push	r13
     fe6:	ef 92       	push	r14
     fe8:	ff 92       	push	r15
     fea:	0f 93       	push	r16
     fec:	1f 93       	push	r17
     fee:	cf 93       	push	r28
     ff0:	df 93       	push	r29
     ff2:	cd b7       	in	r28, 0x3d	; 61
     ff4:	de b7       	in	r29, 0x3e	; 62
     ff6:	64 97       	sbiw	r28, 0x14	; 20
     ff8:	0f b6       	in	r0, 0x3f	; 63
     ffa:	f8 94       	cli
     ffc:	de bf       	out	0x3e, r29	; 62
     ffe:	0f be       	out	0x3f, r0	; 63
    1000:	cd bf       	out	0x3d, r28	; 61
    1002:	3b 01       	movw	r6, r22
    1004:	e4 2e       	mov	r14, r20
    1006:	f5 2e       	mov	r15, r21
	int qb_size=4;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
    1008:	80 e2       	ldi	r24, 0x20	; 32
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	0e 94 10 32 	call	0x6420	; 0x6420 <malloc>
    1010:	8b 8b       	std	Y+19, r24	; 0x13
    1012:	9c 8b       	std	Y+20, r25	; 0x14
    1014:	48 2e       	mov	r4, r24
    1016:	59 2e       	mov	r5, r25
	for(int i=0;i<qb_size;i++){
    1018:	81 2c       	mov	r8, r1
    101a:	91 2c       	mov	r9, r1
    101c:	e9 8a       	std	Y+17, r14	; 0x11
    101e:	fa 8a       	std	Y+18, r15	; 0x12
		Complex tmp;
    1020:	21 2c       	mov	r2, r1
    1022:	31 2c       	mov	r3, r1
    1024:	ce 01       	movw	r24, r28
    1026:	09 96       	adiw	r24, 0x09	; 9
    1028:	0e 94 0c 01 	call	0x218	; 0x218 <_ZN7ComplexC1Ev>
    102c:	c9 88       	ldd	r12, Y+17	; 0x11
    102e:	da 88       	ldd	r13, Y+18	; 0x12
    1030:	e2 2c       	mov	r14, r2
    1032:	f3 2c       	mov	r15, r3
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
    1034:	54 01       	movw	r10, r8
    1036:	aa 0c       	add	r10, r10
    1038:	bb 1c       	adc	r11, r11
    103a:	aa 0c       	add	r10, r10
    103c:	bb 1c       	adc	r11, r11
    103e:	aa 0c       	add	r10, r10
    1040:	bb 1c       	adc	r11, r11
    1042:	f5 01       	movw	r30, r10
    1044:	ec 0d       	add	r30, r12
    1046:	fd 1d       	adc	r31, r13
    1048:	00 81       	ld	r16, Z
    104a:	11 81       	ldd	r17, Z+1	; 0x01
    104c:	22 81       	ldd	r18, Z+2	; 0x02
    104e:	33 81       	ldd	r19, Z+3	; 0x03
    1050:	44 81       	ldd	r20, Z+4	; 0x04
    1052:	55 81       	ldd	r21, Z+5	; 0x05
    1054:	66 81       	ldd	r22, Z+6	; 0x06
    1056:	77 81       	ldd	r23, Z+7	; 0x07
    1058:	c3 01       	movw	r24, r6
    105a:	8e 0d       	add	r24, r14
    105c:	9f 1d       	adc	r25, r15
    105e:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_ZN7Complex3mulES_>
    1062:	29 83       	std	Y+1, r18	; 0x01
    1064:	3a 83       	std	Y+2, r19	; 0x02
    1066:	4b 83       	std	Y+3, r20	; 0x03
    1068:	5c 83       	std	Y+4, r21	; 0x04
    106a:	6d 83       	std	Y+5, r22	; 0x05
    106c:	7e 83       	std	Y+6, r23	; 0x06
    106e:	8f 83       	std	Y+7, r24	; 0x07
    1070:	98 87       	std	Y+8, r25	; 0x08
    1072:	02 2f       	mov	r16, r18
    1074:	13 2f       	mov	r17, r19
    1076:	24 2f       	mov	r18, r20
    1078:	35 2f       	mov	r19, r21
    107a:	46 2f       	mov	r20, r22
    107c:	57 2f       	mov	r21, r23
    107e:	68 2f       	mov	r22, r24
    1080:	79 2f       	mov	r23, r25
    1082:	ce 01       	movw	r24, r28
    1084:	09 96       	adiw	r24, 0x09	; 9
    1086:	0e 94 16 01 	call	0x22c	; 0x22c <_ZN7Complex3addES_>
    108a:	29 87       	std	Y+9, r18	; 0x09
    108c:	3a 87       	std	Y+10, r19	; 0x0a
    108e:	4b 87       	std	Y+11, r20	; 0x0b
    1090:	5c 87       	std	Y+12, r21	; 0x0c
    1092:	6d 87       	std	Y+13, r22	; 0x0d
    1094:	7e 87       	std	Y+14, r23	; 0x0e
    1096:	8f 87       	std	Y+15, r24	; 0x0f
    1098:	98 8b       	std	Y+16, r25	; 0x10
    109a:	88 e0       	ldi	r24, 0x08	; 8
    109c:	e8 0e       	add	r14, r24
    109e:	f1 1c       	adc	r15, r1
    10a0:	e0 e2       	ldi	r30, 0x20	; 32
    10a2:	ce 0e       	add	r12, r30
    10a4:	d1 1c       	adc	r13, r1
    10a6:	f0 e2       	ldi	r31, 0x20	; 32
    10a8:	ef 16       	cp	r14, r31
    10aa:	f1 04       	cpc	r15, r1
    10ac:	51 f6       	brne	.-108    	; 0x1042 <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_+0x74>
		result[i].re=tmp.re;
    10ae:	89 85       	ldd	r24, Y+9	; 0x09
    10b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    10b2:	ab 85       	ldd	r26, Y+11	; 0x0b
    10b4:	bc 85       	ldd	r27, Y+12	; 0x0c
    10b6:	f2 01       	movw	r30, r4
    10b8:	80 83       	st	Z, r24
    10ba:	91 83       	std	Z+1, r25	; 0x01
    10bc:	a2 83       	std	Z+2, r26	; 0x02
    10be:	b3 83       	std	Z+3, r27	; 0x03
		result[i].im=tmp.im;
    10c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    10c2:	9e 85       	ldd	r25, Y+14	; 0x0e
    10c4:	af 85       	ldd	r26, Y+15	; 0x0f
    10c6:	b8 89       	ldd	r27, Y+16	; 0x10
    10c8:	84 83       	std	Z+4, r24	; 0x04
    10ca:	95 83       	std	Z+5, r25	; 0x05
    10cc:	a6 83       	std	Z+6, r26	; 0x06
    10ce:	b7 83       	std	Z+7, r27	; 0x07
	return result;
}
Complex * Gates::multiply4x4(Complex *q,Complex matrix[4][4]){
	int qb_size=4;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
    10d0:	ff ef       	ldi	r31, 0xFF	; 255
    10d2:	8f 1a       	sub	r8, r31
    10d4:	9f 0a       	sbc	r9, r31
    10d6:	88 e0       	ldi	r24, 0x08	; 8
    10d8:	48 0e       	add	r4, r24
    10da:	51 1c       	adc	r5, r1
    10dc:	e4 e0       	ldi	r30, 0x04	; 4
    10de:	8e 16       	cp	r8, r30
    10e0:	91 04       	cpc	r9, r1
    10e2:	09 f0       	breq	.+2      	; 0x10e6 <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_+0x118>
    10e4:	9f cf       	rjmp	.-194    	; 0x1024 <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_+0x56>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
		result[i].re=tmp.re;
		result[i].im=tmp.im;
	}
	return result;
}
    10e6:	8b 89       	ldd	r24, Y+19	; 0x13
    10e8:	9c 89       	ldd	r25, Y+20	; 0x14
    10ea:	64 96       	adiw	r28, 0x14	; 20
    10ec:	0f b6       	in	r0, 0x3f	; 63
    10ee:	f8 94       	cli
    10f0:	de bf       	out	0x3e, r29	; 62
    10f2:	0f be       	out	0x3f, r0	; 63
    10f4:	cd bf       	out	0x3d, r28	; 61
    10f6:	df 91       	pop	r29
    10f8:	cf 91       	pop	r28
    10fa:	1f 91       	pop	r17
    10fc:	0f 91       	pop	r16
    10fe:	ff 90       	pop	r15
    1100:	ef 90       	pop	r14
    1102:	df 90       	pop	r13
    1104:	cf 90       	pop	r12
    1106:	bf 90       	pop	r11
    1108:	af 90       	pop	r10
    110a:	9f 90       	pop	r9
    110c:	8f 90       	pop	r8
    110e:	7f 90       	pop	r7
    1110:	6f 90       	pop	r6
    1112:	5f 90       	pop	r5
    1114:	4f 90       	pop	r4
    1116:	3f 90       	pop	r3
    1118:	2f 90       	pop	r2
    111a:	08 95       	ret

0000111c <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_>:
Complex * Gates::multiply8x8(Complex *q,Complex matrix[8][8]){
    111c:	2f 92       	push	r2
    111e:	3f 92       	push	r3
    1120:	4f 92       	push	r4
    1122:	5f 92       	push	r5
    1124:	6f 92       	push	r6
    1126:	7f 92       	push	r7
    1128:	8f 92       	push	r8
    112a:	9f 92       	push	r9
    112c:	af 92       	push	r10
    112e:	bf 92       	push	r11
    1130:	cf 92       	push	r12
    1132:	df 92       	push	r13
    1134:	ef 92       	push	r14
    1136:	ff 92       	push	r15
    1138:	0f 93       	push	r16
    113a:	1f 93       	push	r17
    113c:	cf 93       	push	r28
    113e:	df 93       	push	r29
    1140:	cd b7       	in	r28, 0x3d	; 61
    1142:	de b7       	in	r29, 0x3e	; 62
    1144:	62 97       	sbiw	r28, 0x12	; 18
    1146:	0f b6       	in	r0, 0x3f	; 63
    1148:	f8 94       	cli
    114a:	de bf       	out	0x3e, r29	; 62
    114c:	0f be       	out	0x3f, r0	; 63
    114e:	cd bf       	out	0x3d, r28	; 61
    1150:	4b 01       	movw	r8, r22
    1152:	34 2e       	mov	r3, r20
    1154:	25 2e       	mov	r2, r21
	int qb_size=8;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
    1156:	80 e4       	ldi	r24, 0x40	; 64
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	0e 94 10 32 	call	0x6420	; 0x6420 <malloc>
    115e:	89 8b       	std	Y+17, r24	; 0x11
    1160:	9a 8b       	std	Y+18, r25	; 0x12
    1162:	48 2e       	mov	r4, r24
    1164:	59 2e       	mov	r5, r25
	for(int i=0;i<qb_size;i++){
    1166:	61 2c       	mov	r6, r1
    1168:	71 2c       	mov	r7, r1
		Complex tmp;
    116a:	ce 01       	movw	r24, r28
    116c:	09 96       	adiw	r24, 0x09	; 9
    116e:	0e 94 0c 01 	call	0x218	; 0x218 <_ZN7ComplexC1Ev>
    1172:	c3 2c       	mov	r12, r3
    1174:	d2 2c       	mov	r13, r2
    1176:	e1 2c       	mov	r14, r1
    1178:	f1 2c       	mov	r15, r1
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
    117a:	53 01       	movw	r10, r6
    117c:	aa 0c       	add	r10, r10
    117e:	bb 1c       	adc	r11, r11
    1180:	aa 0c       	add	r10, r10
    1182:	bb 1c       	adc	r11, r11
    1184:	aa 0c       	add	r10, r10
    1186:	bb 1c       	adc	r11, r11
    1188:	f5 01       	movw	r30, r10
    118a:	ec 0d       	add	r30, r12
    118c:	fd 1d       	adc	r31, r13
    118e:	00 81       	ld	r16, Z
    1190:	11 81       	ldd	r17, Z+1	; 0x01
    1192:	22 81       	ldd	r18, Z+2	; 0x02
    1194:	33 81       	ldd	r19, Z+3	; 0x03
    1196:	44 81       	ldd	r20, Z+4	; 0x04
    1198:	55 81       	ldd	r21, Z+5	; 0x05
    119a:	66 81       	ldd	r22, Z+6	; 0x06
    119c:	77 81       	ldd	r23, Z+7	; 0x07
    119e:	c4 01       	movw	r24, r8
    11a0:	8e 0d       	add	r24, r14
    11a2:	9f 1d       	adc	r25, r15
    11a4:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_ZN7Complex3mulES_>
    11a8:	29 83       	std	Y+1, r18	; 0x01
    11aa:	3a 83       	std	Y+2, r19	; 0x02
    11ac:	4b 83       	std	Y+3, r20	; 0x03
    11ae:	5c 83       	std	Y+4, r21	; 0x04
    11b0:	6d 83       	std	Y+5, r22	; 0x05
    11b2:	7e 83       	std	Y+6, r23	; 0x06
    11b4:	8f 83       	std	Y+7, r24	; 0x07
    11b6:	98 87       	std	Y+8, r25	; 0x08
    11b8:	02 2f       	mov	r16, r18
    11ba:	13 2f       	mov	r17, r19
    11bc:	24 2f       	mov	r18, r20
    11be:	35 2f       	mov	r19, r21
    11c0:	46 2f       	mov	r20, r22
    11c2:	57 2f       	mov	r21, r23
    11c4:	68 2f       	mov	r22, r24
    11c6:	79 2f       	mov	r23, r25
    11c8:	ce 01       	movw	r24, r28
    11ca:	09 96       	adiw	r24, 0x09	; 9
    11cc:	0e 94 16 01 	call	0x22c	; 0x22c <_ZN7Complex3addES_>
    11d0:	29 87       	std	Y+9, r18	; 0x09
    11d2:	3a 87       	std	Y+10, r19	; 0x0a
    11d4:	4b 87       	std	Y+11, r20	; 0x0b
    11d6:	5c 87       	std	Y+12, r21	; 0x0c
    11d8:	6d 87       	std	Y+13, r22	; 0x0d
    11da:	7e 87       	std	Y+14, r23	; 0x0e
    11dc:	8f 87       	std	Y+15, r24	; 0x0f
    11de:	98 8b       	std	Y+16, r25	; 0x10
    11e0:	88 e0       	ldi	r24, 0x08	; 8
    11e2:	e8 0e       	add	r14, r24
    11e4:	f1 1c       	adc	r15, r1
    11e6:	e0 e4       	ldi	r30, 0x40	; 64
    11e8:	ce 0e       	add	r12, r30
    11ea:	d1 1c       	adc	r13, r1
    11ec:	f0 e4       	ldi	r31, 0x40	; 64
    11ee:	ef 16       	cp	r14, r31
    11f0:	f1 04       	cpc	r15, r1
    11f2:	51 f6       	brne	.-108    	; 0x1188 <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_+0x6c>
		result[i].re=tmp.re;
    11f4:	89 85       	ldd	r24, Y+9	; 0x09
    11f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    11f8:	ab 85       	ldd	r26, Y+11	; 0x0b
    11fa:	bc 85       	ldd	r27, Y+12	; 0x0c
    11fc:	f2 01       	movw	r30, r4
    11fe:	80 83       	st	Z, r24
    1200:	91 83       	std	Z+1, r25	; 0x01
    1202:	a2 83       	std	Z+2, r26	; 0x02
    1204:	b3 83       	std	Z+3, r27	; 0x03
		result[i].im=tmp.im;
    1206:	8d 85       	ldd	r24, Y+13	; 0x0d
    1208:	9e 85       	ldd	r25, Y+14	; 0x0e
    120a:	af 85       	ldd	r26, Y+15	; 0x0f
    120c:	b8 89       	ldd	r27, Y+16	; 0x10
    120e:	84 83       	std	Z+4, r24	; 0x04
    1210:	95 83       	std	Z+5, r25	; 0x05
    1212:	a6 83       	std	Z+6, r26	; 0x06
    1214:	b7 83       	std	Z+7, r27	; 0x07
	return result;
}
Complex * Gates::multiply8x8(Complex *q,Complex matrix[8][8]){
	int qb_size=8;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
    1216:	ff ef       	ldi	r31, 0xFF	; 255
    1218:	6f 1a       	sub	r6, r31
    121a:	7f 0a       	sbc	r7, r31
    121c:	88 e0       	ldi	r24, 0x08	; 8
    121e:	48 0e       	add	r4, r24
    1220:	51 1c       	adc	r5, r1
    1222:	e8 e0       	ldi	r30, 0x08	; 8
    1224:	6e 16       	cp	r6, r30
    1226:	71 04       	cpc	r7, r1
    1228:	09 f0       	breq	.+2      	; 0x122c <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_+0x110>
    122a:	9f cf       	rjmp	.-194    	; 0x116a <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_+0x4e>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
		result[i].re=tmp.re;
		result[i].im=tmp.im;
	}
	return result;
}
    122c:	89 89       	ldd	r24, Y+17	; 0x11
    122e:	9a 89       	ldd	r25, Y+18	; 0x12
    1230:	62 96       	adiw	r28, 0x12	; 18
    1232:	0f b6       	in	r0, 0x3f	; 63
    1234:	f8 94       	cli
    1236:	de bf       	out	0x3e, r29	; 62
    1238:	0f be       	out	0x3f, r0	; 63
    123a:	cd bf       	out	0x3d, r28	; 61
    123c:	df 91       	pop	r29
    123e:	cf 91       	pop	r28
    1240:	1f 91       	pop	r17
    1242:	0f 91       	pop	r16
    1244:	ff 90       	pop	r15
    1246:	ef 90       	pop	r14
    1248:	df 90       	pop	r13
    124a:	cf 90       	pop	r12
    124c:	bf 90       	pop	r11
    124e:	af 90       	pop	r10
    1250:	9f 90       	pop	r9
    1252:	8f 90       	pop	r8
    1254:	7f 90       	pop	r7
    1256:	6f 90       	pop	r6
    1258:	5f 90       	pop	r5
    125a:	4f 90       	pop	r4
    125c:	3f 90       	pop	r3
    125e:	2f 90       	pop	r2
    1260:	08 95       	ret

00001262 <_ZN5Gates1XEii>:

int * Gates::X(int theta,int phi){
    1262:	af 92       	push	r10
    1264:	bf 92       	push	r11
    1266:	cf 92       	push	r12
    1268:	df 92       	push	r13
    126a:	ef 92       	push	r14
    126c:	ff 92       	push	r15
    126e:	0f 93       	push	r16
    1270:	1f 93       	push	r17
    1272:	cf 93       	push	r28
    1274:	df 93       	push	r29
    1276:	cd b7       	in	r28, 0x3d	; 61
    1278:	de b7       	in	r29, 0x3e	; 62
    127a:	a4 97       	sbiw	r28, 0x24	; 36
    127c:	0f b6       	in	r0, 0x3f	; 63
    127e:	f8 94       	cli
    1280:	de bf       	out	0x3e, r29	; 62
    1282:	0f be       	out	0x3f, r0	; 63
    1284:	cd bf       	out	0x3d, r28	; 61
    1286:	7c 01       	movw	r14, r24
    1288:	5b 01       	movw	r10, r22
    128a:	6a 01       	movw	r12, r20
	Complex x_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(0,0),Complex(1,0)},
													   {Complex(1,0),Complex(0,0)}};
    128c:	00 e0       	ldi	r16, 0x00	; 0
    128e:	10 e0       	ldi	r17, 0x00	; 0
    1290:	98 01       	movw	r18, r16
    1292:	b9 01       	movw	r22, r18
    1294:	a8 01       	movw	r20, r16
    1296:	ce 01       	movw	r24, r28
    1298:	01 96       	adiw	r24, 0x01	; 1
    129a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    129e:	00 e0       	ldi	r16, 0x00	; 0
    12a0:	10 e0       	ldi	r17, 0x00	; 0
    12a2:	98 01       	movw	r18, r16
    12a4:	40 e0       	ldi	r20, 0x00	; 0
    12a6:	50 e0       	ldi	r21, 0x00	; 0
    12a8:	60 e8       	ldi	r22, 0x80	; 128
    12aa:	7f e3       	ldi	r23, 0x3F	; 63
    12ac:	ce 01       	movw	r24, r28
    12ae:	09 96       	adiw	r24, 0x09	; 9
    12b0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    12b4:	00 e0       	ldi	r16, 0x00	; 0
    12b6:	10 e0       	ldi	r17, 0x00	; 0
    12b8:	98 01       	movw	r18, r16
    12ba:	40 e0       	ldi	r20, 0x00	; 0
    12bc:	50 e0       	ldi	r21, 0x00	; 0
    12be:	60 e8       	ldi	r22, 0x80	; 128
    12c0:	7f e3       	ldi	r23, 0x3F	; 63
    12c2:	ce 01       	movw	r24, r28
    12c4:	41 96       	adiw	r24, 0x11	; 17
    12c6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    12ca:	00 e0       	ldi	r16, 0x00	; 0
    12cc:	10 e0       	ldi	r17, 0x00	; 0
    12ce:	98 01       	movw	r18, r16
    12d0:	b9 01       	movw	r22, r18
    12d2:	a8 01       	movw	r20, r16
    12d4:	ce 01       	movw	r24, r28
    12d6:	49 96       	adiw	r24, 0x19	; 25
    12d8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[1]={phi};
    12dc:	bc a2       	std	Y+36, r11	; 0x24
    12de:	ab a2       	std	Y+35, r10	; 0x23
    12e0:	da a2       	std	Y+34, r13	; 0x22
    12e2:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),x_matrix),QB_SIZE1);
    12e4:	9e 01       	movw	r18, r28
    12e6:	2f 5d       	subi	r18, 0xDF	; 223
    12e8:	3f 4f       	sbci	r19, 0xFF	; 255
    12ea:	ae 01       	movw	r20, r28
    12ec:	4d 5d       	subi	r20, 0xDD	; 221
    12ee:	5f 4f       	sbci	r21, 0xFF	; 255
    12f0:	61 e0       	ldi	r22, 0x01	; 1
    12f2:	70 e0       	ldi	r23, 0x00	; 0
    12f4:	c7 01       	movw	r24, r14
    12f6:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    12fa:	ae 01       	movw	r20, r28
    12fc:	4f 5f       	subi	r20, 0xFF	; 255
    12fe:	5f 4f       	sbci	r21, 0xFF	; 255
    1300:	bc 01       	movw	r22, r24
    1302:	c7 01       	movw	r24, r14
    1304:	0e 94 29 07 	call	0xe52	; 0xe52 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    1308:	41 e0       	ldi	r20, 0x01	; 1
    130a:	50 e0       	ldi	r21, 0x00	; 0
    130c:	bc 01       	movw	r22, r24
    130e:	c7 01       	movw	r24, r14
    1310:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    1314:	a4 96       	adiw	r28, 0x24	; 36
    1316:	0f b6       	in	r0, 0x3f	; 63
    1318:	f8 94       	cli
    131a:	de bf       	out	0x3e, r29	; 62
    131c:	0f be       	out	0x3f, r0	; 63
    131e:	cd bf       	out	0x3d, r28	; 61
    1320:	df 91       	pop	r29
    1322:	cf 91       	pop	r28
    1324:	1f 91       	pop	r17
    1326:	0f 91       	pop	r16
    1328:	ff 90       	pop	r15
    132a:	ef 90       	pop	r14
    132c:	df 90       	pop	r13
    132e:	cf 90       	pop	r12
    1330:	bf 90       	pop	r11
    1332:	af 90       	pop	r10
    1334:	08 95       	ret

00001336 <_ZN5Gates1YEii>:
int * Gates::Y(int theta,int phi){
    1336:	af 92       	push	r10
    1338:	bf 92       	push	r11
    133a:	cf 92       	push	r12
    133c:	df 92       	push	r13
    133e:	ef 92       	push	r14
    1340:	ff 92       	push	r15
    1342:	0f 93       	push	r16
    1344:	1f 93       	push	r17
    1346:	cf 93       	push	r28
    1348:	df 93       	push	r29
    134a:	cd b7       	in	r28, 0x3d	; 61
    134c:	de b7       	in	r29, 0x3e	; 62
    134e:	a4 97       	sbiw	r28, 0x24	; 36
    1350:	0f b6       	in	r0, 0x3f	; 63
    1352:	f8 94       	cli
    1354:	de bf       	out	0x3e, r29	; 62
    1356:	0f be       	out	0x3f, r0	; 63
    1358:	cd bf       	out	0x3d, r28	; 61
    135a:	7c 01       	movw	r14, r24
    135c:	5b 01       	movw	r10, r22
    135e:	6a 01       	movw	r12, r20
	Complex y_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(0,0),Complex(0,-1)},
													   {Complex(0,1),Complex(0,0)}};
    1360:	00 e0       	ldi	r16, 0x00	; 0
    1362:	10 e0       	ldi	r17, 0x00	; 0
    1364:	98 01       	movw	r18, r16
    1366:	b9 01       	movw	r22, r18
    1368:	a8 01       	movw	r20, r16
    136a:	ce 01       	movw	r24, r28
    136c:	01 96       	adiw	r24, 0x01	; 1
    136e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1372:	00 e0       	ldi	r16, 0x00	; 0
    1374:	10 e0       	ldi	r17, 0x00	; 0
    1376:	20 e8       	ldi	r18, 0x80	; 128
    1378:	3f eb       	ldi	r19, 0xBF	; 191
    137a:	40 e0       	ldi	r20, 0x00	; 0
    137c:	50 e0       	ldi	r21, 0x00	; 0
    137e:	ba 01       	movw	r22, r20
    1380:	ce 01       	movw	r24, r28
    1382:	09 96       	adiw	r24, 0x09	; 9
    1384:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1388:	00 e0       	ldi	r16, 0x00	; 0
    138a:	10 e0       	ldi	r17, 0x00	; 0
    138c:	20 e8       	ldi	r18, 0x80	; 128
    138e:	3f e3       	ldi	r19, 0x3F	; 63
    1390:	40 e0       	ldi	r20, 0x00	; 0
    1392:	50 e0       	ldi	r21, 0x00	; 0
    1394:	ba 01       	movw	r22, r20
    1396:	ce 01       	movw	r24, r28
    1398:	41 96       	adiw	r24, 0x11	; 17
    139a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    139e:	00 e0       	ldi	r16, 0x00	; 0
    13a0:	10 e0       	ldi	r17, 0x00	; 0
    13a2:	98 01       	movw	r18, r16
    13a4:	b9 01       	movw	r22, r18
    13a6:	a8 01       	movw	r20, r16
    13a8:	ce 01       	movw	r24, r28
    13aa:	49 96       	adiw	r24, 0x19	; 25
    13ac:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    13b0:	bc a2       	std	Y+36, r11	; 0x24
    13b2:	ab a2       	std	Y+35, r10	; 0x23
    13b4:	da a2       	std	Y+34, r13	; 0x22
    13b6:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),y_matrix),QB_SIZE1);
    13b8:	9e 01       	movw	r18, r28
    13ba:	2f 5d       	subi	r18, 0xDF	; 223
    13bc:	3f 4f       	sbci	r19, 0xFF	; 255
    13be:	ae 01       	movw	r20, r28
    13c0:	4d 5d       	subi	r20, 0xDD	; 221
    13c2:	5f 4f       	sbci	r21, 0xFF	; 255
    13c4:	61 e0       	ldi	r22, 0x01	; 1
    13c6:	70 e0       	ldi	r23, 0x00	; 0
    13c8:	c7 01       	movw	r24, r14
    13ca:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    13ce:	ae 01       	movw	r20, r28
    13d0:	4f 5f       	subi	r20, 0xFF	; 255
    13d2:	5f 4f       	sbci	r21, 0xFF	; 255
    13d4:	bc 01       	movw	r22, r24
    13d6:	c7 01       	movw	r24, r14
    13d8:	0e 94 29 07 	call	0xe52	; 0xe52 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    13dc:	41 e0       	ldi	r20, 0x01	; 1
    13de:	50 e0       	ldi	r21, 0x00	; 0
    13e0:	bc 01       	movw	r22, r24
    13e2:	c7 01       	movw	r24, r14
    13e4:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    13e8:	a4 96       	adiw	r28, 0x24	; 36
    13ea:	0f b6       	in	r0, 0x3f	; 63
    13ec:	f8 94       	cli
    13ee:	de bf       	out	0x3e, r29	; 62
    13f0:	0f be       	out	0x3f, r0	; 63
    13f2:	cd bf       	out	0x3d, r28	; 61
    13f4:	df 91       	pop	r29
    13f6:	cf 91       	pop	r28
    13f8:	1f 91       	pop	r17
    13fa:	0f 91       	pop	r16
    13fc:	ff 90       	pop	r15
    13fe:	ef 90       	pop	r14
    1400:	df 90       	pop	r13
    1402:	cf 90       	pop	r12
    1404:	bf 90       	pop	r11
    1406:	af 90       	pop	r10
    1408:	08 95       	ret

0000140a <_ZN5Gates1ZEii>:
int * Gates::Z(int theta,int phi){
    140a:	af 92       	push	r10
    140c:	bf 92       	push	r11
    140e:	cf 92       	push	r12
    1410:	df 92       	push	r13
    1412:	ef 92       	push	r14
    1414:	ff 92       	push	r15
    1416:	0f 93       	push	r16
    1418:	1f 93       	push	r17
    141a:	cf 93       	push	r28
    141c:	df 93       	push	r29
    141e:	cd b7       	in	r28, 0x3d	; 61
    1420:	de b7       	in	r29, 0x3e	; 62
    1422:	a4 97       	sbiw	r28, 0x24	; 36
    1424:	0f b6       	in	r0, 0x3f	; 63
    1426:	f8 94       	cli
    1428:	de bf       	out	0x3e, r29	; 62
    142a:	0f be       	out	0x3f, r0	; 63
    142c:	cd bf       	out	0x3d, r28	; 61
    142e:	7c 01       	movw	r14, r24
    1430:	5b 01       	movw	r10, r22
    1432:	6a 01       	movw	r12, r20
	Complex z_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(1,0),Complex(0,0)},
													   {Complex(0,0),Complex(-1,0)}};
    1434:	00 e0       	ldi	r16, 0x00	; 0
    1436:	10 e0       	ldi	r17, 0x00	; 0
    1438:	98 01       	movw	r18, r16
    143a:	40 e0       	ldi	r20, 0x00	; 0
    143c:	50 e0       	ldi	r21, 0x00	; 0
    143e:	60 e8       	ldi	r22, 0x80	; 128
    1440:	7f e3       	ldi	r23, 0x3F	; 63
    1442:	ce 01       	movw	r24, r28
    1444:	01 96       	adiw	r24, 0x01	; 1
    1446:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    144a:	00 e0       	ldi	r16, 0x00	; 0
    144c:	10 e0       	ldi	r17, 0x00	; 0
    144e:	98 01       	movw	r18, r16
    1450:	b9 01       	movw	r22, r18
    1452:	a8 01       	movw	r20, r16
    1454:	ce 01       	movw	r24, r28
    1456:	09 96       	adiw	r24, 0x09	; 9
    1458:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    145c:	00 e0       	ldi	r16, 0x00	; 0
    145e:	10 e0       	ldi	r17, 0x00	; 0
    1460:	98 01       	movw	r18, r16
    1462:	b9 01       	movw	r22, r18
    1464:	a8 01       	movw	r20, r16
    1466:	ce 01       	movw	r24, r28
    1468:	41 96       	adiw	r24, 0x11	; 17
    146a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    146e:	00 e0       	ldi	r16, 0x00	; 0
    1470:	10 e0       	ldi	r17, 0x00	; 0
    1472:	98 01       	movw	r18, r16
    1474:	40 e0       	ldi	r20, 0x00	; 0
    1476:	50 e0       	ldi	r21, 0x00	; 0
    1478:	60 e8       	ldi	r22, 0x80	; 128
    147a:	7f eb       	ldi	r23, 0xBF	; 191
    147c:	ce 01       	movw	r24, r28
    147e:	49 96       	adiw	r24, 0x19	; 25
    1480:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    1484:	bc a2       	std	Y+36, r11	; 0x24
    1486:	ab a2       	std	Y+35, r10	; 0x23
    1488:	da a2       	std	Y+34, r13	; 0x22
    148a:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),z_matrix),QB_SIZE1);
    148c:	9e 01       	movw	r18, r28
    148e:	2f 5d       	subi	r18, 0xDF	; 223
    1490:	3f 4f       	sbci	r19, 0xFF	; 255
    1492:	ae 01       	movw	r20, r28
    1494:	4d 5d       	subi	r20, 0xDD	; 221
    1496:	5f 4f       	sbci	r21, 0xFF	; 255
    1498:	61 e0       	ldi	r22, 0x01	; 1
    149a:	70 e0       	ldi	r23, 0x00	; 0
    149c:	c7 01       	movw	r24, r14
    149e:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    14a2:	ae 01       	movw	r20, r28
    14a4:	4f 5f       	subi	r20, 0xFF	; 255
    14a6:	5f 4f       	sbci	r21, 0xFF	; 255
    14a8:	bc 01       	movw	r22, r24
    14aa:	c7 01       	movw	r24, r14
    14ac:	0e 94 29 07 	call	0xe52	; 0xe52 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    14b0:	41 e0       	ldi	r20, 0x01	; 1
    14b2:	50 e0       	ldi	r21, 0x00	; 0
    14b4:	bc 01       	movw	r22, r24
    14b6:	c7 01       	movw	r24, r14
    14b8:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    14bc:	a4 96       	adiw	r28, 0x24	; 36
    14be:	0f b6       	in	r0, 0x3f	; 63
    14c0:	f8 94       	cli
    14c2:	de bf       	out	0x3e, r29	; 62
    14c4:	0f be       	out	0x3f, r0	; 63
    14c6:	cd bf       	out	0x3d, r28	; 61
    14c8:	df 91       	pop	r29
    14ca:	cf 91       	pop	r28
    14cc:	1f 91       	pop	r17
    14ce:	0f 91       	pop	r16
    14d0:	ff 90       	pop	r15
    14d2:	ef 90       	pop	r14
    14d4:	df 90       	pop	r13
    14d6:	cf 90       	pop	r12
    14d8:	bf 90       	pop	r11
    14da:	af 90       	pop	r10
    14dc:	08 95       	ret

000014de <_ZN5Gates1HEii>:
int * Gates::H(int theta,int phi){
    14de:	af 92       	push	r10
    14e0:	bf 92       	push	r11
    14e2:	cf 92       	push	r12
    14e4:	df 92       	push	r13
    14e6:	ef 92       	push	r14
    14e8:	ff 92       	push	r15
    14ea:	0f 93       	push	r16
    14ec:	1f 93       	push	r17
    14ee:	cf 93       	push	r28
    14f0:	df 93       	push	r29
    14f2:	cd b7       	in	r28, 0x3d	; 61
    14f4:	de b7       	in	r29, 0x3e	; 62
    14f6:	a4 97       	sbiw	r28, 0x24	; 36
    14f8:	0f b6       	in	r0, 0x3f	; 63
    14fa:	f8 94       	cli
    14fc:	de bf       	out	0x3e, r29	; 62
    14fe:	0f be       	out	0x3f, r0	; 63
    1500:	cd bf       	out	0x3d, r28	; 61
    1502:	7c 01       	movw	r14, r24
    1504:	5b 01       	movw	r10, r22
    1506:	6a 01       	movw	r12, r20
	Complex h_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(1/sqrt(2),0),Complex(1/sqrt(2),0)},
													   {Complex(1/sqrt(2),0),Complex(-1/sqrt(2),0)}};
    1508:	00 e0       	ldi	r16, 0x00	; 0
    150a:	10 e0       	ldi	r17, 0x00	; 0
    150c:	98 01       	movw	r18, r16
    150e:	43 ef       	ldi	r20, 0xF3	; 243
    1510:	54 e0       	ldi	r21, 0x04	; 4
    1512:	65 e3       	ldi	r22, 0x35	; 53
    1514:	7f e3       	ldi	r23, 0x3F	; 63
    1516:	ce 01       	movw	r24, r28
    1518:	01 96       	adiw	r24, 0x01	; 1
    151a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    151e:	00 e0       	ldi	r16, 0x00	; 0
    1520:	10 e0       	ldi	r17, 0x00	; 0
    1522:	98 01       	movw	r18, r16
    1524:	43 ef       	ldi	r20, 0xF3	; 243
    1526:	54 e0       	ldi	r21, 0x04	; 4
    1528:	65 e3       	ldi	r22, 0x35	; 53
    152a:	7f e3       	ldi	r23, 0x3F	; 63
    152c:	ce 01       	movw	r24, r28
    152e:	09 96       	adiw	r24, 0x09	; 9
    1530:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1534:	00 e0       	ldi	r16, 0x00	; 0
    1536:	10 e0       	ldi	r17, 0x00	; 0
    1538:	98 01       	movw	r18, r16
    153a:	43 ef       	ldi	r20, 0xF3	; 243
    153c:	54 e0       	ldi	r21, 0x04	; 4
    153e:	65 e3       	ldi	r22, 0x35	; 53
    1540:	7f e3       	ldi	r23, 0x3F	; 63
    1542:	ce 01       	movw	r24, r28
    1544:	41 96       	adiw	r24, 0x11	; 17
    1546:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    154a:	00 e0       	ldi	r16, 0x00	; 0
    154c:	10 e0       	ldi	r17, 0x00	; 0
    154e:	98 01       	movw	r18, r16
    1550:	43 ef       	ldi	r20, 0xF3	; 243
    1552:	54 e0       	ldi	r21, 0x04	; 4
    1554:	65 e3       	ldi	r22, 0x35	; 53
    1556:	7f eb       	ldi	r23, 0xBF	; 191
    1558:	ce 01       	movw	r24, r28
    155a:	49 96       	adiw	r24, 0x19	; 25
    155c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    1560:	bc a2       	std	Y+36, r11	; 0x24
    1562:	ab a2       	std	Y+35, r10	; 0x23
    1564:	da a2       	std	Y+34, r13	; 0x22
    1566:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),h_matrix),QB_SIZE1);
    1568:	9e 01       	movw	r18, r28
    156a:	2f 5d       	subi	r18, 0xDF	; 223
    156c:	3f 4f       	sbci	r19, 0xFF	; 255
    156e:	ae 01       	movw	r20, r28
    1570:	4d 5d       	subi	r20, 0xDD	; 221
    1572:	5f 4f       	sbci	r21, 0xFF	; 255
    1574:	61 e0       	ldi	r22, 0x01	; 1
    1576:	70 e0       	ldi	r23, 0x00	; 0
    1578:	c7 01       	movw	r24, r14
    157a:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    157e:	ae 01       	movw	r20, r28
    1580:	4f 5f       	subi	r20, 0xFF	; 255
    1582:	5f 4f       	sbci	r21, 0xFF	; 255
    1584:	bc 01       	movw	r22, r24
    1586:	c7 01       	movw	r24, r14
    1588:	0e 94 29 07 	call	0xe52	; 0xe52 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    158c:	41 e0       	ldi	r20, 0x01	; 1
    158e:	50 e0       	ldi	r21, 0x00	; 0
    1590:	bc 01       	movw	r22, r24
    1592:	c7 01       	movw	r24, r14
    1594:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    1598:	a4 96       	adiw	r28, 0x24	; 36
    159a:	0f b6       	in	r0, 0x3f	; 63
    159c:	f8 94       	cli
    159e:	de bf       	out	0x3e, r29	; 62
    15a0:	0f be       	out	0x3f, r0	; 63
    15a2:	cd bf       	out	0x3d, r28	; 61
    15a4:	df 91       	pop	r29
    15a6:	cf 91       	pop	r28
    15a8:	1f 91       	pop	r17
    15aa:	0f 91       	pop	r16
    15ac:	ff 90       	pop	r15
    15ae:	ef 90       	pop	r14
    15b0:	df 90       	pop	r13
    15b2:	cf 90       	pop	r12
    15b4:	bf 90       	pop	r11
    15b6:	af 90       	pop	r10
    15b8:	08 95       	ret

000015ba <_ZN5Gates1SEii>:
int * Gates::S(int theta,int phi){
    15ba:	af 92       	push	r10
    15bc:	bf 92       	push	r11
    15be:	cf 92       	push	r12
    15c0:	df 92       	push	r13
    15c2:	ef 92       	push	r14
    15c4:	ff 92       	push	r15
    15c6:	0f 93       	push	r16
    15c8:	1f 93       	push	r17
    15ca:	cf 93       	push	r28
    15cc:	df 93       	push	r29
    15ce:	cd b7       	in	r28, 0x3d	; 61
    15d0:	de b7       	in	r29, 0x3e	; 62
    15d2:	a4 97       	sbiw	r28, 0x24	; 36
    15d4:	0f b6       	in	r0, 0x3f	; 63
    15d6:	f8 94       	cli
    15d8:	de bf       	out	0x3e, r29	; 62
    15da:	0f be       	out	0x3f, r0	; 63
    15dc:	cd bf       	out	0x3d, r28	; 61
    15de:	7c 01       	movw	r14, r24
    15e0:	5b 01       	movw	r10, r22
    15e2:	6a 01       	movw	r12, r20
	Complex s_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(1,0),Complex(0,0)},
													   {Complex(0,0),Complex(0,1)}};
    15e4:	00 e0       	ldi	r16, 0x00	; 0
    15e6:	10 e0       	ldi	r17, 0x00	; 0
    15e8:	98 01       	movw	r18, r16
    15ea:	40 e0       	ldi	r20, 0x00	; 0
    15ec:	50 e0       	ldi	r21, 0x00	; 0
    15ee:	60 e8       	ldi	r22, 0x80	; 128
    15f0:	7f e3       	ldi	r23, 0x3F	; 63
    15f2:	ce 01       	movw	r24, r28
    15f4:	01 96       	adiw	r24, 0x01	; 1
    15f6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    15fa:	00 e0       	ldi	r16, 0x00	; 0
    15fc:	10 e0       	ldi	r17, 0x00	; 0
    15fe:	98 01       	movw	r18, r16
    1600:	b9 01       	movw	r22, r18
    1602:	a8 01       	movw	r20, r16
    1604:	ce 01       	movw	r24, r28
    1606:	09 96       	adiw	r24, 0x09	; 9
    1608:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    160c:	00 e0       	ldi	r16, 0x00	; 0
    160e:	10 e0       	ldi	r17, 0x00	; 0
    1610:	98 01       	movw	r18, r16
    1612:	b9 01       	movw	r22, r18
    1614:	a8 01       	movw	r20, r16
    1616:	ce 01       	movw	r24, r28
    1618:	41 96       	adiw	r24, 0x11	; 17
    161a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    161e:	00 e0       	ldi	r16, 0x00	; 0
    1620:	10 e0       	ldi	r17, 0x00	; 0
    1622:	20 e8       	ldi	r18, 0x80	; 128
    1624:	3f e3       	ldi	r19, 0x3F	; 63
    1626:	40 e0       	ldi	r20, 0x00	; 0
    1628:	50 e0       	ldi	r21, 0x00	; 0
    162a:	ba 01       	movw	r22, r20
    162c:	ce 01       	movw	r24, r28
    162e:	49 96       	adiw	r24, 0x19	; 25
    1630:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    1634:	bc a2       	std	Y+36, r11	; 0x24
    1636:	ab a2       	std	Y+35, r10	; 0x23
    1638:	da a2       	std	Y+34, r13	; 0x22
    163a:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),s_matrix),QB_SIZE1);
    163c:	9e 01       	movw	r18, r28
    163e:	2f 5d       	subi	r18, 0xDF	; 223
    1640:	3f 4f       	sbci	r19, 0xFF	; 255
    1642:	ae 01       	movw	r20, r28
    1644:	4d 5d       	subi	r20, 0xDD	; 221
    1646:	5f 4f       	sbci	r21, 0xFF	; 255
    1648:	61 e0       	ldi	r22, 0x01	; 1
    164a:	70 e0       	ldi	r23, 0x00	; 0
    164c:	c7 01       	movw	r24, r14
    164e:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    1652:	ae 01       	movw	r20, r28
    1654:	4f 5f       	subi	r20, 0xFF	; 255
    1656:	5f 4f       	sbci	r21, 0xFF	; 255
    1658:	bc 01       	movw	r22, r24
    165a:	c7 01       	movw	r24, r14
    165c:	0e 94 29 07 	call	0xe52	; 0xe52 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    1660:	41 e0       	ldi	r20, 0x01	; 1
    1662:	50 e0       	ldi	r21, 0x00	; 0
    1664:	bc 01       	movw	r22, r24
    1666:	c7 01       	movw	r24, r14
    1668:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    166c:	a4 96       	adiw	r28, 0x24	; 36
    166e:	0f b6       	in	r0, 0x3f	; 63
    1670:	f8 94       	cli
    1672:	de bf       	out	0x3e, r29	; 62
    1674:	0f be       	out	0x3f, r0	; 63
    1676:	cd bf       	out	0x3d, r28	; 61
    1678:	df 91       	pop	r29
    167a:	cf 91       	pop	r28
    167c:	1f 91       	pop	r17
    167e:	0f 91       	pop	r16
    1680:	ff 90       	pop	r15
    1682:	ef 90       	pop	r14
    1684:	df 90       	pop	r13
    1686:	cf 90       	pop	r12
    1688:	bf 90       	pop	r11
    168a:	af 90       	pop	r10
    168c:	08 95       	ret

0000168e <_ZN5Gates1TEii>:
int * Gates::T(int theta,int phi){
    168e:	af 92       	push	r10
    1690:	bf 92       	push	r11
    1692:	cf 92       	push	r12
    1694:	df 92       	push	r13
    1696:	ef 92       	push	r14
    1698:	ff 92       	push	r15
    169a:	0f 93       	push	r16
    169c:	1f 93       	push	r17
    169e:	cf 93       	push	r28
    16a0:	df 93       	push	r29
    16a2:	cd b7       	in	r28, 0x3d	; 61
    16a4:	de b7       	in	r29, 0x3e	; 62
    16a6:	a4 97       	sbiw	r28, 0x24	; 36
    16a8:	0f b6       	in	r0, 0x3f	; 63
    16aa:	f8 94       	cli
    16ac:	de bf       	out	0x3e, r29	; 62
    16ae:	0f be       	out	0x3f, r0	; 63
    16b0:	cd bf       	out	0x3d, r28	; 61
    16b2:	7c 01       	movw	r14, r24
    16b4:	5b 01       	movw	r10, r22
    16b6:	6a 01       	movw	r12, r20
	Complex t_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(1,0),Complex(0,0)},
													   {Complex(0,0),Complex(1/sqrt(2),1/sqrt(2))}};
    16b8:	00 e0       	ldi	r16, 0x00	; 0
    16ba:	10 e0       	ldi	r17, 0x00	; 0
    16bc:	98 01       	movw	r18, r16
    16be:	40 e0       	ldi	r20, 0x00	; 0
    16c0:	50 e0       	ldi	r21, 0x00	; 0
    16c2:	60 e8       	ldi	r22, 0x80	; 128
    16c4:	7f e3       	ldi	r23, 0x3F	; 63
    16c6:	ce 01       	movw	r24, r28
    16c8:	01 96       	adiw	r24, 0x01	; 1
    16ca:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    16ce:	00 e0       	ldi	r16, 0x00	; 0
    16d0:	10 e0       	ldi	r17, 0x00	; 0
    16d2:	98 01       	movw	r18, r16
    16d4:	b9 01       	movw	r22, r18
    16d6:	a8 01       	movw	r20, r16
    16d8:	ce 01       	movw	r24, r28
    16da:	09 96       	adiw	r24, 0x09	; 9
    16dc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    16e0:	00 e0       	ldi	r16, 0x00	; 0
    16e2:	10 e0       	ldi	r17, 0x00	; 0
    16e4:	98 01       	movw	r18, r16
    16e6:	b9 01       	movw	r22, r18
    16e8:	a8 01       	movw	r20, r16
    16ea:	ce 01       	movw	r24, r28
    16ec:	41 96       	adiw	r24, 0x11	; 17
    16ee:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    16f2:	03 ef       	ldi	r16, 0xF3	; 243
    16f4:	14 e0       	ldi	r17, 0x04	; 4
    16f6:	25 e3       	ldi	r18, 0x35	; 53
    16f8:	3f e3       	ldi	r19, 0x3F	; 63
    16fa:	b9 01       	movw	r22, r18
    16fc:	a8 01       	movw	r20, r16
    16fe:	ce 01       	movw	r24, r28
    1700:	49 96       	adiw	r24, 0x19	; 25
    1702:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    1706:	bc a2       	std	Y+36, r11	; 0x24
    1708:	ab a2       	std	Y+35, r10	; 0x23
    170a:	da a2       	std	Y+34, r13	; 0x22
    170c:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),t_matrix),QB_SIZE1);
    170e:	9e 01       	movw	r18, r28
    1710:	2f 5d       	subi	r18, 0xDF	; 223
    1712:	3f 4f       	sbci	r19, 0xFF	; 255
    1714:	ae 01       	movw	r20, r28
    1716:	4d 5d       	subi	r20, 0xDD	; 221
    1718:	5f 4f       	sbci	r21, 0xFF	; 255
    171a:	61 e0       	ldi	r22, 0x01	; 1
    171c:	70 e0       	ldi	r23, 0x00	; 0
    171e:	c7 01       	movw	r24, r14
    1720:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    1724:	ae 01       	movw	r20, r28
    1726:	4f 5f       	subi	r20, 0xFF	; 255
    1728:	5f 4f       	sbci	r21, 0xFF	; 255
    172a:	bc 01       	movw	r22, r24
    172c:	c7 01       	movw	r24, r14
    172e:	0e 94 29 07 	call	0xe52	; 0xe52 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    1732:	41 e0       	ldi	r20, 0x01	; 1
    1734:	50 e0       	ldi	r21, 0x00	; 0
    1736:	bc 01       	movw	r22, r24
    1738:	c7 01       	movw	r24, r14
    173a:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    173e:	a4 96       	adiw	r28, 0x24	; 36
    1740:	0f b6       	in	r0, 0x3f	; 63
    1742:	f8 94       	cli
    1744:	de bf       	out	0x3e, r29	; 62
    1746:	0f be       	out	0x3f, r0	; 63
    1748:	cd bf       	out	0x3d, r28	; 61
    174a:	df 91       	pop	r29
    174c:	cf 91       	pop	r28
    174e:	1f 91       	pop	r17
    1750:	0f 91       	pop	r16
    1752:	ff 90       	pop	r15
    1754:	ef 90       	pop	r14
    1756:	df 90       	pop	r13
    1758:	cf 90       	pop	r12
    175a:	bf 90       	pop	r11
    175c:	af 90       	pop	r10
    175e:	08 95       	ret

00001760 <_ZN5Gates3CNOEiiii>:

int * Gates::CNO(int theta1, int phi1, int theta2,int phi2){
    1760:	6f 92       	push	r6
    1762:	7f 92       	push	r7
    1764:	8f 92       	push	r8
    1766:	9f 92       	push	r9
    1768:	af 92       	push	r10
    176a:	bf 92       	push	r11
    176c:	cf 92       	push	r12
    176e:	df 92       	push	r13
    1770:	ef 92       	push	r14
    1772:	ff 92       	push	r15
    1774:	0f 93       	push	r16
    1776:	1f 93       	push	r17
    1778:	cf 93       	push	r28
    177a:	df 93       	push	r29
    177c:	cd b7       	in	r28, 0x3d	; 61
    177e:	de b7       	in	r29, 0x3e	; 62
    1780:	c8 58       	subi	r28, 0x88	; 136
    1782:	d1 09       	sbc	r29, r1
    1784:	0f b6       	in	r0, 0x3f	; 63
    1786:	f8 94       	cli
    1788:	de bf       	out	0x3e, r29	; 62
    178a:	0f be       	out	0x3f, r0	; 63
    178c:	cd bf       	out	0x3d, r28	; 61
    178e:	7c 01       	movw	r14, r24
    1790:	3b 01       	movw	r6, r22
    1792:	5a 01       	movw	r10, r20
    1794:	49 01       	movw	r8, r18
    1796:	68 01       	movw	r12, r16
	Complex cno_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)}};
    1798:	00 e0       	ldi	r16, 0x00	; 0
    179a:	10 e0       	ldi	r17, 0x00	; 0
    179c:	98 01       	movw	r18, r16
    179e:	40 e0       	ldi	r20, 0x00	; 0
    17a0:	50 e0       	ldi	r21, 0x00	; 0
    17a2:	60 e8       	ldi	r22, 0x80	; 128
    17a4:	7f e3       	ldi	r23, 0x3F	; 63
    17a6:	ce 01       	movw	r24, r28
    17a8:	01 96       	adiw	r24, 0x01	; 1
    17aa:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    17ae:	00 e0       	ldi	r16, 0x00	; 0
    17b0:	10 e0       	ldi	r17, 0x00	; 0
    17b2:	98 01       	movw	r18, r16
    17b4:	b9 01       	movw	r22, r18
    17b6:	a8 01       	movw	r20, r16
    17b8:	ce 01       	movw	r24, r28
    17ba:	09 96       	adiw	r24, 0x09	; 9
    17bc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    17c0:	00 e0       	ldi	r16, 0x00	; 0
    17c2:	10 e0       	ldi	r17, 0x00	; 0
    17c4:	98 01       	movw	r18, r16
    17c6:	b9 01       	movw	r22, r18
    17c8:	a8 01       	movw	r20, r16
    17ca:	ce 01       	movw	r24, r28
    17cc:	41 96       	adiw	r24, 0x11	; 17
    17ce:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    17d2:	00 e0       	ldi	r16, 0x00	; 0
    17d4:	10 e0       	ldi	r17, 0x00	; 0
    17d6:	98 01       	movw	r18, r16
    17d8:	b9 01       	movw	r22, r18
    17da:	a8 01       	movw	r20, r16
    17dc:	ce 01       	movw	r24, r28
    17de:	49 96       	adiw	r24, 0x19	; 25
    17e0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    17e4:	00 e0       	ldi	r16, 0x00	; 0
    17e6:	10 e0       	ldi	r17, 0x00	; 0
    17e8:	98 01       	movw	r18, r16
    17ea:	b9 01       	movw	r22, r18
    17ec:	a8 01       	movw	r20, r16
    17ee:	ce 01       	movw	r24, r28
    17f0:	81 96       	adiw	r24, 0x21	; 33
    17f2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    17f6:	00 e0       	ldi	r16, 0x00	; 0
    17f8:	10 e0       	ldi	r17, 0x00	; 0
    17fa:	98 01       	movw	r18, r16
    17fc:	40 e0       	ldi	r20, 0x00	; 0
    17fe:	50 e0       	ldi	r21, 0x00	; 0
    1800:	60 e8       	ldi	r22, 0x80	; 128
    1802:	7f e3       	ldi	r23, 0x3F	; 63
    1804:	ce 01       	movw	r24, r28
    1806:	89 96       	adiw	r24, 0x29	; 41
    1808:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    180c:	00 e0       	ldi	r16, 0x00	; 0
    180e:	10 e0       	ldi	r17, 0x00	; 0
    1810:	98 01       	movw	r18, r16
    1812:	b9 01       	movw	r22, r18
    1814:	a8 01       	movw	r20, r16
    1816:	ce 01       	movw	r24, r28
    1818:	c1 96       	adiw	r24, 0x31	; 49
    181a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    181e:	00 e0       	ldi	r16, 0x00	; 0
    1820:	10 e0       	ldi	r17, 0x00	; 0
    1822:	98 01       	movw	r18, r16
    1824:	b9 01       	movw	r22, r18
    1826:	a8 01       	movw	r20, r16
    1828:	ce 01       	movw	r24, r28
    182a:	c9 96       	adiw	r24, 0x39	; 57
    182c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1830:	00 e0       	ldi	r16, 0x00	; 0
    1832:	10 e0       	ldi	r17, 0x00	; 0
    1834:	98 01       	movw	r18, r16
    1836:	b9 01       	movw	r22, r18
    1838:	a8 01       	movw	r20, r16
    183a:	ce 01       	movw	r24, r28
    183c:	8f 5b       	subi	r24, 0xBF	; 191
    183e:	9f 4f       	sbci	r25, 0xFF	; 255
    1840:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1844:	00 e0       	ldi	r16, 0x00	; 0
    1846:	10 e0       	ldi	r17, 0x00	; 0
    1848:	98 01       	movw	r18, r16
    184a:	b9 01       	movw	r22, r18
    184c:	a8 01       	movw	r20, r16
    184e:	ce 01       	movw	r24, r28
    1850:	87 5b       	subi	r24, 0xB7	; 183
    1852:	9f 4f       	sbci	r25, 0xFF	; 255
    1854:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1858:	00 e0       	ldi	r16, 0x00	; 0
    185a:	10 e0       	ldi	r17, 0x00	; 0
    185c:	98 01       	movw	r18, r16
    185e:	b9 01       	movw	r22, r18
    1860:	a8 01       	movw	r20, r16
    1862:	ce 01       	movw	r24, r28
    1864:	8f 5a       	subi	r24, 0xAF	; 175
    1866:	9f 4f       	sbci	r25, 0xFF	; 255
    1868:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    186c:	00 e0       	ldi	r16, 0x00	; 0
    186e:	10 e0       	ldi	r17, 0x00	; 0
    1870:	98 01       	movw	r18, r16
    1872:	40 e0       	ldi	r20, 0x00	; 0
    1874:	50 e0       	ldi	r21, 0x00	; 0
    1876:	60 e8       	ldi	r22, 0x80	; 128
    1878:	7f e3       	ldi	r23, 0x3F	; 63
    187a:	ce 01       	movw	r24, r28
    187c:	87 5a       	subi	r24, 0xA7	; 167
    187e:	9f 4f       	sbci	r25, 0xFF	; 255
    1880:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1884:	00 e0       	ldi	r16, 0x00	; 0
    1886:	10 e0       	ldi	r17, 0x00	; 0
    1888:	98 01       	movw	r18, r16
    188a:	b9 01       	movw	r22, r18
    188c:	a8 01       	movw	r20, r16
    188e:	ce 01       	movw	r24, r28
    1890:	8f 59       	subi	r24, 0x9F	; 159
    1892:	9f 4f       	sbci	r25, 0xFF	; 255
    1894:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1898:	00 e0       	ldi	r16, 0x00	; 0
    189a:	10 e0       	ldi	r17, 0x00	; 0
    189c:	98 01       	movw	r18, r16
    189e:	b9 01       	movw	r22, r18
    18a0:	a8 01       	movw	r20, r16
    18a2:	ce 01       	movw	r24, r28
    18a4:	87 59       	subi	r24, 0x97	; 151
    18a6:	9f 4f       	sbci	r25, 0xFF	; 255
    18a8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    18ac:	00 e0       	ldi	r16, 0x00	; 0
    18ae:	10 e0       	ldi	r17, 0x00	; 0
    18b0:	98 01       	movw	r18, r16
    18b2:	40 e0       	ldi	r20, 0x00	; 0
    18b4:	50 e0       	ldi	r21, 0x00	; 0
    18b6:	60 e8       	ldi	r22, 0x80	; 128
    18b8:	7f e3       	ldi	r23, 0x3F	; 63
    18ba:	ce 01       	movw	r24, r28
    18bc:	8f 58       	subi	r24, 0x8F	; 143
    18be:	9f 4f       	sbci	r25, 0xFF	; 255
    18c0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    18c4:	00 e0       	ldi	r16, 0x00	; 0
    18c6:	10 e0       	ldi	r17, 0x00	; 0
    18c8:	98 01       	movw	r18, r16
    18ca:	b9 01       	movw	r22, r18
    18cc:	a8 01       	movw	r20, r16
    18ce:	ce 01       	movw	r24, r28
    18d0:	87 58       	subi	r24, 0x87	; 135
    18d2:	9f 4f       	sbci	r25, 0xFF	; 255
    18d4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};						
    18d8:	cb 57       	subi	r28, 0x7B	; 123
    18da:	df 4f       	sbci	r29, 0xFF	; 255
    18dc:	79 82       	std	Y+1, r7	; 0x01
    18de:	68 82       	st	Y, r6
    18e0:	c5 58       	subi	r28, 0x85	; 133
    18e2:	d0 40       	sbci	r29, 0x00	; 0
    18e4:	c9 57       	subi	r28, 0x79	; 121
    18e6:	df 4f       	sbci	r29, 0xFF	; 255
    18e8:	99 82       	std	Y+1, r9	; 0x01
    18ea:	88 82       	st	Y, r8
    18ec:	c7 58       	subi	r28, 0x87	; 135
    18ee:	d0 40       	sbci	r29, 0x00	; 0
    18f0:	cf 57       	subi	r28, 0x7F	; 127
    18f2:	df 4f       	sbci	r29, 0xFF	; 255
    18f4:	b9 82       	std	Y+1, r11	; 0x01
    18f6:	a8 82       	st	Y, r10
    18f8:	c1 58       	subi	r28, 0x81	; 129
    18fa:	d0 40       	sbci	r29, 0x00	; 0
    18fc:	cd 57       	subi	r28, 0x7D	; 125
    18fe:	df 4f       	sbci	r29, 0xFF	; 255
    1900:	d9 82       	std	Y+1, r13	; 0x01
    1902:	c8 82       	st	Y, r12
    1904:	c3 58       	subi	r28, 0x83	; 131
    1906:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),cno_matrix),QB_SIZE2);
    1908:	9e 01       	movw	r18, r28
    190a:	2f 57       	subi	r18, 0x7F	; 127
    190c:	3f 4f       	sbci	r19, 0xFF	; 255
    190e:	ae 01       	movw	r20, r28
    1910:	4b 57       	subi	r20, 0x7B	; 123
    1912:	5f 4f       	sbci	r21, 0xFF	; 255
    1914:	62 e0       	ldi	r22, 0x02	; 2
    1916:	70 e0       	ldi	r23, 0x00	; 0
    1918:	c7 01       	movw	r24, r14
    191a:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    191e:	ae 01       	movw	r20, r28
    1920:	4f 5f       	subi	r20, 0xFF	; 255
    1922:	5f 4f       	sbci	r21, 0xFF	; 255
    1924:	bc 01       	movw	r22, r24
    1926:	c7 01       	movw	r24, r14
    1928:	0e 94 e7 07 	call	0xfce	; 0xfce <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    192c:	42 e0       	ldi	r20, 0x02	; 2
    192e:	50 e0       	ldi	r21, 0x00	; 0
    1930:	bc 01       	movw	r22, r24
    1932:	c7 01       	movw	r24, r14
    1934:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    1938:	c8 57       	subi	r28, 0x78	; 120
    193a:	df 4f       	sbci	r29, 0xFF	; 255
    193c:	0f b6       	in	r0, 0x3f	; 63
    193e:	f8 94       	cli
    1940:	de bf       	out	0x3e, r29	; 62
    1942:	0f be       	out	0x3f, r0	; 63
    1944:	cd bf       	out	0x3d, r28	; 61
    1946:	df 91       	pop	r29
    1948:	cf 91       	pop	r28
    194a:	1f 91       	pop	r17
    194c:	0f 91       	pop	r16
    194e:	ff 90       	pop	r15
    1950:	ef 90       	pop	r14
    1952:	df 90       	pop	r13
    1954:	cf 90       	pop	r12
    1956:	bf 90       	pop	r11
    1958:	af 90       	pop	r10
    195a:	9f 90       	pop	r9
    195c:	8f 90       	pop	r8
    195e:	7f 90       	pop	r7
    1960:	6f 90       	pop	r6
    1962:	08 95       	ret

00001964 <_ZN5Gates3CSIEiiii>:
int * Gates::CSI(int theta1, int phi1, int theta2,int phi2){
    1964:	6f 92       	push	r6
    1966:	7f 92       	push	r7
    1968:	8f 92       	push	r8
    196a:	9f 92       	push	r9
    196c:	af 92       	push	r10
    196e:	bf 92       	push	r11
    1970:	cf 92       	push	r12
    1972:	df 92       	push	r13
    1974:	ef 92       	push	r14
    1976:	ff 92       	push	r15
    1978:	0f 93       	push	r16
    197a:	1f 93       	push	r17
    197c:	cf 93       	push	r28
    197e:	df 93       	push	r29
    1980:	cd b7       	in	r28, 0x3d	; 61
    1982:	de b7       	in	r29, 0x3e	; 62
    1984:	c8 58       	subi	r28, 0x88	; 136
    1986:	d1 09       	sbc	r29, r1
    1988:	0f b6       	in	r0, 0x3f	; 63
    198a:	f8 94       	cli
    198c:	de bf       	out	0x3e, r29	; 62
    198e:	0f be       	out	0x3f, r0	; 63
    1990:	cd bf       	out	0x3d, r28	; 61
    1992:	7c 01       	movw	r14, r24
    1994:	3b 01       	movw	r6, r22
    1996:	5a 01       	movw	r10, r20
    1998:	49 01       	movw	r8, r18
    199a:	68 01       	movw	r12, r16
	Complex csi_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(-1,0)}};
    199c:	00 e0       	ldi	r16, 0x00	; 0
    199e:	10 e0       	ldi	r17, 0x00	; 0
    19a0:	98 01       	movw	r18, r16
    19a2:	40 e0       	ldi	r20, 0x00	; 0
    19a4:	50 e0       	ldi	r21, 0x00	; 0
    19a6:	60 e8       	ldi	r22, 0x80	; 128
    19a8:	7f e3       	ldi	r23, 0x3F	; 63
    19aa:	ce 01       	movw	r24, r28
    19ac:	01 96       	adiw	r24, 0x01	; 1
    19ae:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    19b2:	00 e0       	ldi	r16, 0x00	; 0
    19b4:	10 e0       	ldi	r17, 0x00	; 0
    19b6:	98 01       	movw	r18, r16
    19b8:	b9 01       	movw	r22, r18
    19ba:	a8 01       	movw	r20, r16
    19bc:	ce 01       	movw	r24, r28
    19be:	09 96       	adiw	r24, 0x09	; 9
    19c0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    19c4:	00 e0       	ldi	r16, 0x00	; 0
    19c6:	10 e0       	ldi	r17, 0x00	; 0
    19c8:	98 01       	movw	r18, r16
    19ca:	b9 01       	movw	r22, r18
    19cc:	a8 01       	movw	r20, r16
    19ce:	ce 01       	movw	r24, r28
    19d0:	41 96       	adiw	r24, 0x11	; 17
    19d2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    19d6:	00 e0       	ldi	r16, 0x00	; 0
    19d8:	10 e0       	ldi	r17, 0x00	; 0
    19da:	98 01       	movw	r18, r16
    19dc:	b9 01       	movw	r22, r18
    19de:	a8 01       	movw	r20, r16
    19e0:	ce 01       	movw	r24, r28
    19e2:	49 96       	adiw	r24, 0x19	; 25
    19e4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    19e8:	00 e0       	ldi	r16, 0x00	; 0
    19ea:	10 e0       	ldi	r17, 0x00	; 0
    19ec:	98 01       	movw	r18, r16
    19ee:	b9 01       	movw	r22, r18
    19f0:	a8 01       	movw	r20, r16
    19f2:	ce 01       	movw	r24, r28
    19f4:	81 96       	adiw	r24, 0x21	; 33
    19f6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    19fa:	00 e0       	ldi	r16, 0x00	; 0
    19fc:	10 e0       	ldi	r17, 0x00	; 0
    19fe:	98 01       	movw	r18, r16
    1a00:	40 e0       	ldi	r20, 0x00	; 0
    1a02:	50 e0       	ldi	r21, 0x00	; 0
    1a04:	60 e8       	ldi	r22, 0x80	; 128
    1a06:	7f e3       	ldi	r23, 0x3F	; 63
    1a08:	ce 01       	movw	r24, r28
    1a0a:	89 96       	adiw	r24, 0x29	; 41
    1a0c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1a10:	00 e0       	ldi	r16, 0x00	; 0
    1a12:	10 e0       	ldi	r17, 0x00	; 0
    1a14:	98 01       	movw	r18, r16
    1a16:	b9 01       	movw	r22, r18
    1a18:	a8 01       	movw	r20, r16
    1a1a:	ce 01       	movw	r24, r28
    1a1c:	c1 96       	adiw	r24, 0x31	; 49
    1a1e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1a22:	00 e0       	ldi	r16, 0x00	; 0
    1a24:	10 e0       	ldi	r17, 0x00	; 0
    1a26:	98 01       	movw	r18, r16
    1a28:	b9 01       	movw	r22, r18
    1a2a:	a8 01       	movw	r20, r16
    1a2c:	ce 01       	movw	r24, r28
    1a2e:	c9 96       	adiw	r24, 0x39	; 57
    1a30:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1a34:	00 e0       	ldi	r16, 0x00	; 0
    1a36:	10 e0       	ldi	r17, 0x00	; 0
    1a38:	98 01       	movw	r18, r16
    1a3a:	b9 01       	movw	r22, r18
    1a3c:	a8 01       	movw	r20, r16
    1a3e:	ce 01       	movw	r24, r28
    1a40:	8f 5b       	subi	r24, 0xBF	; 191
    1a42:	9f 4f       	sbci	r25, 0xFF	; 255
    1a44:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1a48:	00 e0       	ldi	r16, 0x00	; 0
    1a4a:	10 e0       	ldi	r17, 0x00	; 0
    1a4c:	98 01       	movw	r18, r16
    1a4e:	b9 01       	movw	r22, r18
    1a50:	a8 01       	movw	r20, r16
    1a52:	ce 01       	movw	r24, r28
    1a54:	87 5b       	subi	r24, 0xB7	; 183
    1a56:	9f 4f       	sbci	r25, 0xFF	; 255
    1a58:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1a5c:	00 e0       	ldi	r16, 0x00	; 0
    1a5e:	10 e0       	ldi	r17, 0x00	; 0
    1a60:	98 01       	movw	r18, r16
    1a62:	40 e0       	ldi	r20, 0x00	; 0
    1a64:	50 e0       	ldi	r21, 0x00	; 0
    1a66:	60 e8       	ldi	r22, 0x80	; 128
    1a68:	7f e3       	ldi	r23, 0x3F	; 63
    1a6a:	ce 01       	movw	r24, r28
    1a6c:	8f 5a       	subi	r24, 0xAF	; 175
    1a6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a70:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1a74:	00 e0       	ldi	r16, 0x00	; 0
    1a76:	10 e0       	ldi	r17, 0x00	; 0
    1a78:	98 01       	movw	r18, r16
    1a7a:	b9 01       	movw	r22, r18
    1a7c:	a8 01       	movw	r20, r16
    1a7e:	ce 01       	movw	r24, r28
    1a80:	87 5a       	subi	r24, 0xA7	; 167
    1a82:	9f 4f       	sbci	r25, 0xFF	; 255
    1a84:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1a88:	00 e0       	ldi	r16, 0x00	; 0
    1a8a:	10 e0       	ldi	r17, 0x00	; 0
    1a8c:	98 01       	movw	r18, r16
    1a8e:	b9 01       	movw	r22, r18
    1a90:	a8 01       	movw	r20, r16
    1a92:	ce 01       	movw	r24, r28
    1a94:	8f 59       	subi	r24, 0x9F	; 159
    1a96:	9f 4f       	sbci	r25, 0xFF	; 255
    1a98:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1a9c:	00 e0       	ldi	r16, 0x00	; 0
    1a9e:	10 e0       	ldi	r17, 0x00	; 0
    1aa0:	98 01       	movw	r18, r16
    1aa2:	b9 01       	movw	r22, r18
    1aa4:	a8 01       	movw	r20, r16
    1aa6:	ce 01       	movw	r24, r28
    1aa8:	87 59       	subi	r24, 0x97	; 151
    1aaa:	9f 4f       	sbci	r25, 0xFF	; 255
    1aac:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1ab0:	00 e0       	ldi	r16, 0x00	; 0
    1ab2:	10 e0       	ldi	r17, 0x00	; 0
    1ab4:	98 01       	movw	r18, r16
    1ab6:	b9 01       	movw	r22, r18
    1ab8:	a8 01       	movw	r20, r16
    1aba:	ce 01       	movw	r24, r28
    1abc:	8f 58       	subi	r24, 0x8F	; 143
    1abe:	9f 4f       	sbci	r25, 0xFF	; 255
    1ac0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1ac4:	00 e0       	ldi	r16, 0x00	; 0
    1ac6:	10 e0       	ldi	r17, 0x00	; 0
    1ac8:	98 01       	movw	r18, r16
    1aca:	40 e0       	ldi	r20, 0x00	; 0
    1acc:	50 e0       	ldi	r21, 0x00	; 0
    1ace:	60 e8       	ldi	r22, 0x80	; 128
    1ad0:	7f eb       	ldi	r23, 0xBF	; 191
    1ad2:	ce 01       	movw	r24, r28
    1ad4:	87 58       	subi	r24, 0x87	; 135
    1ad6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ad8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    1adc:	cb 57       	subi	r28, 0x7B	; 123
    1ade:	df 4f       	sbci	r29, 0xFF	; 255
    1ae0:	79 82       	std	Y+1, r7	; 0x01
    1ae2:	68 82       	st	Y, r6
    1ae4:	c5 58       	subi	r28, 0x85	; 133
    1ae6:	d0 40       	sbci	r29, 0x00	; 0
    1ae8:	c9 57       	subi	r28, 0x79	; 121
    1aea:	df 4f       	sbci	r29, 0xFF	; 255
    1aec:	99 82       	std	Y+1, r9	; 0x01
    1aee:	88 82       	st	Y, r8
    1af0:	c7 58       	subi	r28, 0x87	; 135
    1af2:	d0 40       	sbci	r29, 0x00	; 0
    1af4:	cf 57       	subi	r28, 0x7F	; 127
    1af6:	df 4f       	sbci	r29, 0xFF	; 255
    1af8:	b9 82       	std	Y+1, r11	; 0x01
    1afa:	a8 82       	st	Y, r10
    1afc:	c1 58       	subi	r28, 0x81	; 129
    1afe:	d0 40       	sbci	r29, 0x00	; 0
    1b00:	cd 57       	subi	r28, 0x7D	; 125
    1b02:	df 4f       	sbci	r29, 0xFF	; 255
    1b04:	d9 82       	std	Y+1, r13	; 0x01
    1b06:	c8 82       	st	Y, r12
    1b08:	c3 58       	subi	r28, 0x83	; 131
    1b0a:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),csi_matrix),QB_SIZE2);
    1b0c:	9e 01       	movw	r18, r28
    1b0e:	2f 57       	subi	r18, 0x7F	; 127
    1b10:	3f 4f       	sbci	r19, 0xFF	; 255
    1b12:	ae 01       	movw	r20, r28
    1b14:	4b 57       	subi	r20, 0x7B	; 123
    1b16:	5f 4f       	sbci	r21, 0xFF	; 255
    1b18:	62 e0       	ldi	r22, 0x02	; 2
    1b1a:	70 e0       	ldi	r23, 0x00	; 0
    1b1c:	c7 01       	movw	r24, r14
    1b1e:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    1b22:	ae 01       	movw	r20, r28
    1b24:	4f 5f       	subi	r20, 0xFF	; 255
    1b26:	5f 4f       	sbci	r21, 0xFF	; 255
    1b28:	bc 01       	movw	r22, r24
    1b2a:	c7 01       	movw	r24, r14
    1b2c:	0e 94 e7 07 	call	0xfce	; 0xfce <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    1b30:	42 e0       	ldi	r20, 0x02	; 2
    1b32:	50 e0       	ldi	r21, 0x00	; 0
    1b34:	bc 01       	movw	r22, r24
    1b36:	c7 01       	movw	r24, r14
    1b38:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    1b3c:	c8 57       	subi	r28, 0x78	; 120
    1b3e:	df 4f       	sbci	r29, 0xFF	; 255
    1b40:	0f b6       	in	r0, 0x3f	; 63
    1b42:	f8 94       	cli
    1b44:	de bf       	out	0x3e, r29	; 62
    1b46:	0f be       	out	0x3f, r0	; 63
    1b48:	cd bf       	out	0x3d, r28	; 61
    1b4a:	df 91       	pop	r29
    1b4c:	cf 91       	pop	r28
    1b4e:	1f 91       	pop	r17
    1b50:	0f 91       	pop	r16
    1b52:	ff 90       	pop	r15
    1b54:	ef 90       	pop	r14
    1b56:	df 90       	pop	r13
    1b58:	cf 90       	pop	r12
    1b5a:	bf 90       	pop	r11
    1b5c:	af 90       	pop	r10
    1b5e:	9f 90       	pop	r9
    1b60:	8f 90       	pop	r8
    1b62:	7f 90       	pop	r7
    1b64:	6f 90       	pop	r6
    1b66:	08 95       	ret

00001b68 <_ZN5Gates3SWAEiiii>:
int * Gates::SWA(int theta1, int phi1, int theta2,int phi2){
    1b68:	6f 92       	push	r6
    1b6a:	7f 92       	push	r7
    1b6c:	8f 92       	push	r8
    1b6e:	9f 92       	push	r9
    1b70:	af 92       	push	r10
    1b72:	bf 92       	push	r11
    1b74:	cf 92       	push	r12
    1b76:	df 92       	push	r13
    1b78:	ef 92       	push	r14
    1b7a:	ff 92       	push	r15
    1b7c:	0f 93       	push	r16
    1b7e:	1f 93       	push	r17
    1b80:	cf 93       	push	r28
    1b82:	df 93       	push	r29
    1b84:	cd b7       	in	r28, 0x3d	; 61
    1b86:	de b7       	in	r29, 0x3e	; 62
    1b88:	c8 58       	subi	r28, 0x88	; 136
    1b8a:	d1 09       	sbc	r29, r1
    1b8c:	0f b6       	in	r0, 0x3f	; 63
    1b8e:	f8 94       	cli
    1b90:	de bf       	out	0x3e, r29	; 62
    1b92:	0f be       	out	0x3f, r0	; 63
    1b94:	cd bf       	out	0x3d, r28	; 61
    1b96:	7c 01       	movw	r14, r24
    1b98:	3b 01       	movw	r6, r22
    1b9a:	5a 01       	movw	r10, r20
    1b9c:	49 01       	movw	r8, r18
    1b9e:	68 01       	movw	r12, r16
	Complex swa_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
													     {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)}};
    1ba0:	00 e0       	ldi	r16, 0x00	; 0
    1ba2:	10 e0       	ldi	r17, 0x00	; 0
    1ba4:	98 01       	movw	r18, r16
    1ba6:	40 e0       	ldi	r20, 0x00	; 0
    1ba8:	50 e0       	ldi	r21, 0x00	; 0
    1baa:	60 e8       	ldi	r22, 0x80	; 128
    1bac:	7f e3       	ldi	r23, 0x3F	; 63
    1bae:	ce 01       	movw	r24, r28
    1bb0:	01 96       	adiw	r24, 0x01	; 1
    1bb2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1bb6:	00 e0       	ldi	r16, 0x00	; 0
    1bb8:	10 e0       	ldi	r17, 0x00	; 0
    1bba:	98 01       	movw	r18, r16
    1bbc:	b9 01       	movw	r22, r18
    1bbe:	a8 01       	movw	r20, r16
    1bc0:	ce 01       	movw	r24, r28
    1bc2:	09 96       	adiw	r24, 0x09	; 9
    1bc4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1bc8:	00 e0       	ldi	r16, 0x00	; 0
    1bca:	10 e0       	ldi	r17, 0x00	; 0
    1bcc:	98 01       	movw	r18, r16
    1bce:	b9 01       	movw	r22, r18
    1bd0:	a8 01       	movw	r20, r16
    1bd2:	ce 01       	movw	r24, r28
    1bd4:	41 96       	adiw	r24, 0x11	; 17
    1bd6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1bda:	00 e0       	ldi	r16, 0x00	; 0
    1bdc:	10 e0       	ldi	r17, 0x00	; 0
    1bde:	98 01       	movw	r18, r16
    1be0:	b9 01       	movw	r22, r18
    1be2:	a8 01       	movw	r20, r16
    1be4:	ce 01       	movw	r24, r28
    1be6:	49 96       	adiw	r24, 0x19	; 25
    1be8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1bec:	00 e0       	ldi	r16, 0x00	; 0
    1bee:	10 e0       	ldi	r17, 0x00	; 0
    1bf0:	98 01       	movw	r18, r16
    1bf2:	b9 01       	movw	r22, r18
    1bf4:	a8 01       	movw	r20, r16
    1bf6:	ce 01       	movw	r24, r28
    1bf8:	81 96       	adiw	r24, 0x21	; 33
    1bfa:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1bfe:	00 e0       	ldi	r16, 0x00	; 0
    1c00:	10 e0       	ldi	r17, 0x00	; 0
    1c02:	98 01       	movw	r18, r16
    1c04:	b9 01       	movw	r22, r18
    1c06:	a8 01       	movw	r20, r16
    1c08:	ce 01       	movw	r24, r28
    1c0a:	89 96       	adiw	r24, 0x29	; 41
    1c0c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1c10:	00 e0       	ldi	r16, 0x00	; 0
    1c12:	10 e0       	ldi	r17, 0x00	; 0
    1c14:	98 01       	movw	r18, r16
    1c16:	40 e0       	ldi	r20, 0x00	; 0
    1c18:	50 e0       	ldi	r21, 0x00	; 0
    1c1a:	60 e8       	ldi	r22, 0x80	; 128
    1c1c:	7f e3       	ldi	r23, 0x3F	; 63
    1c1e:	ce 01       	movw	r24, r28
    1c20:	c1 96       	adiw	r24, 0x31	; 49
    1c22:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1c26:	00 e0       	ldi	r16, 0x00	; 0
    1c28:	10 e0       	ldi	r17, 0x00	; 0
    1c2a:	98 01       	movw	r18, r16
    1c2c:	b9 01       	movw	r22, r18
    1c2e:	a8 01       	movw	r20, r16
    1c30:	ce 01       	movw	r24, r28
    1c32:	c9 96       	adiw	r24, 0x39	; 57
    1c34:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1c38:	00 e0       	ldi	r16, 0x00	; 0
    1c3a:	10 e0       	ldi	r17, 0x00	; 0
    1c3c:	98 01       	movw	r18, r16
    1c3e:	b9 01       	movw	r22, r18
    1c40:	a8 01       	movw	r20, r16
    1c42:	ce 01       	movw	r24, r28
    1c44:	8f 5b       	subi	r24, 0xBF	; 191
    1c46:	9f 4f       	sbci	r25, 0xFF	; 255
    1c48:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1c4c:	00 e0       	ldi	r16, 0x00	; 0
    1c4e:	10 e0       	ldi	r17, 0x00	; 0
    1c50:	98 01       	movw	r18, r16
    1c52:	40 e0       	ldi	r20, 0x00	; 0
    1c54:	50 e0       	ldi	r21, 0x00	; 0
    1c56:	60 e8       	ldi	r22, 0x80	; 128
    1c58:	7f e3       	ldi	r23, 0x3F	; 63
    1c5a:	ce 01       	movw	r24, r28
    1c5c:	87 5b       	subi	r24, 0xB7	; 183
    1c5e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c60:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1c64:	00 e0       	ldi	r16, 0x00	; 0
    1c66:	10 e0       	ldi	r17, 0x00	; 0
    1c68:	98 01       	movw	r18, r16
    1c6a:	b9 01       	movw	r22, r18
    1c6c:	a8 01       	movw	r20, r16
    1c6e:	ce 01       	movw	r24, r28
    1c70:	8f 5a       	subi	r24, 0xAF	; 175
    1c72:	9f 4f       	sbci	r25, 0xFF	; 255
    1c74:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1c78:	00 e0       	ldi	r16, 0x00	; 0
    1c7a:	10 e0       	ldi	r17, 0x00	; 0
    1c7c:	98 01       	movw	r18, r16
    1c7e:	b9 01       	movw	r22, r18
    1c80:	a8 01       	movw	r20, r16
    1c82:	ce 01       	movw	r24, r28
    1c84:	87 5a       	subi	r24, 0xA7	; 167
    1c86:	9f 4f       	sbci	r25, 0xFF	; 255
    1c88:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1c8c:	00 e0       	ldi	r16, 0x00	; 0
    1c8e:	10 e0       	ldi	r17, 0x00	; 0
    1c90:	98 01       	movw	r18, r16
    1c92:	b9 01       	movw	r22, r18
    1c94:	a8 01       	movw	r20, r16
    1c96:	ce 01       	movw	r24, r28
    1c98:	8f 59       	subi	r24, 0x9F	; 159
    1c9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c9c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1ca0:	00 e0       	ldi	r16, 0x00	; 0
    1ca2:	10 e0       	ldi	r17, 0x00	; 0
    1ca4:	98 01       	movw	r18, r16
    1ca6:	b9 01       	movw	r22, r18
    1ca8:	a8 01       	movw	r20, r16
    1caa:	ce 01       	movw	r24, r28
    1cac:	87 59       	subi	r24, 0x97	; 151
    1cae:	9f 4f       	sbci	r25, 0xFF	; 255
    1cb0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1cb4:	00 e0       	ldi	r16, 0x00	; 0
    1cb6:	10 e0       	ldi	r17, 0x00	; 0
    1cb8:	98 01       	movw	r18, r16
    1cba:	b9 01       	movw	r22, r18
    1cbc:	a8 01       	movw	r20, r16
    1cbe:	ce 01       	movw	r24, r28
    1cc0:	8f 58       	subi	r24, 0x8F	; 143
    1cc2:	9f 4f       	sbci	r25, 0xFF	; 255
    1cc4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1cc8:	00 e0       	ldi	r16, 0x00	; 0
    1cca:	10 e0       	ldi	r17, 0x00	; 0
    1ccc:	98 01       	movw	r18, r16
    1cce:	40 e0       	ldi	r20, 0x00	; 0
    1cd0:	50 e0       	ldi	r21, 0x00	; 0
    1cd2:	60 e8       	ldi	r22, 0x80	; 128
    1cd4:	7f e3       	ldi	r23, 0x3F	; 63
    1cd6:	ce 01       	movw	r24, r28
    1cd8:	87 58       	subi	r24, 0x87	; 135
    1cda:	9f 4f       	sbci	r25, 0xFF	; 255
    1cdc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    1ce0:	cb 57       	subi	r28, 0x7B	; 123
    1ce2:	df 4f       	sbci	r29, 0xFF	; 255
    1ce4:	79 82       	std	Y+1, r7	; 0x01
    1ce6:	68 82       	st	Y, r6
    1ce8:	c5 58       	subi	r28, 0x85	; 133
    1cea:	d0 40       	sbci	r29, 0x00	; 0
    1cec:	c9 57       	subi	r28, 0x79	; 121
    1cee:	df 4f       	sbci	r29, 0xFF	; 255
    1cf0:	99 82       	std	Y+1, r9	; 0x01
    1cf2:	88 82       	st	Y, r8
    1cf4:	c7 58       	subi	r28, 0x87	; 135
    1cf6:	d0 40       	sbci	r29, 0x00	; 0
    1cf8:	cf 57       	subi	r28, 0x7F	; 127
    1cfa:	df 4f       	sbci	r29, 0xFF	; 255
    1cfc:	b9 82       	std	Y+1, r11	; 0x01
    1cfe:	a8 82       	st	Y, r10
    1d00:	c1 58       	subi	r28, 0x81	; 129
    1d02:	d0 40       	sbci	r29, 0x00	; 0
    1d04:	cd 57       	subi	r28, 0x7D	; 125
    1d06:	df 4f       	sbci	r29, 0xFF	; 255
    1d08:	d9 82       	std	Y+1, r13	; 0x01
    1d0a:	c8 82       	st	Y, r12
    1d0c:	c3 58       	subi	r28, 0x83	; 131
    1d0e:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),swa_matrix),QB_SIZE2);	
    1d10:	9e 01       	movw	r18, r28
    1d12:	2f 57       	subi	r18, 0x7F	; 127
    1d14:	3f 4f       	sbci	r19, 0xFF	; 255
    1d16:	ae 01       	movw	r20, r28
    1d18:	4b 57       	subi	r20, 0x7B	; 123
    1d1a:	5f 4f       	sbci	r21, 0xFF	; 255
    1d1c:	62 e0       	ldi	r22, 0x02	; 2
    1d1e:	70 e0       	ldi	r23, 0x00	; 0
    1d20:	c7 01       	movw	r24, r14
    1d22:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    1d26:	ae 01       	movw	r20, r28
    1d28:	4f 5f       	subi	r20, 0xFF	; 255
    1d2a:	5f 4f       	sbci	r21, 0xFF	; 255
    1d2c:	bc 01       	movw	r22, r24
    1d2e:	c7 01       	movw	r24, r14
    1d30:	0e 94 e7 07 	call	0xfce	; 0xfce <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    1d34:	42 e0       	ldi	r20, 0x02	; 2
    1d36:	50 e0       	ldi	r21, 0x00	; 0
    1d38:	bc 01       	movw	r22, r24
    1d3a:	c7 01       	movw	r24, r14
    1d3c:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    1d40:	c8 57       	subi	r28, 0x78	; 120
    1d42:	df 4f       	sbci	r29, 0xFF	; 255
    1d44:	0f b6       	in	r0, 0x3f	; 63
    1d46:	f8 94       	cli
    1d48:	de bf       	out	0x3e, r29	; 62
    1d4a:	0f be       	out	0x3f, r0	; 63
    1d4c:	cd bf       	out	0x3d, r28	; 61
    1d4e:	df 91       	pop	r29
    1d50:	cf 91       	pop	r28
    1d52:	1f 91       	pop	r17
    1d54:	0f 91       	pop	r16
    1d56:	ff 90       	pop	r15
    1d58:	ef 90       	pop	r14
    1d5a:	df 90       	pop	r13
    1d5c:	cf 90       	pop	r12
    1d5e:	bf 90       	pop	r11
    1d60:	af 90       	pop	r10
    1d62:	9f 90       	pop	r9
    1d64:	8f 90       	pop	r8
    1d66:	7f 90       	pop	r7
    1d68:	6f 90       	pop	r6
    1d6a:	08 95       	ret

00001d6c <_ZN5Gates3INCEiiii>:
int * Gates::INC(int theta1, int phi1, int theta2,int phi2){
    1d6c:	6f 92       	push	r6
    1d6e:	7f 92       	push	r7
    1d70:	8f 92       	push	r8
    1d72:	9f 92       	push	r9
    1d74:	af 92       	push	r10
    1d76:	bf 92       	push	r11
    1d78:	cf 92       	push	r12
    1d7a:	df 92       	push	r13
    1d7c:	ef 92       	push	r14
    1d7e:	ff 92       	push	r15
    1d80:	0f 93       	push	r16
    1d82:	1f 93       	push	r17
    1d84:	cf 93       	push	r28
    1d86:	df 93       	push	r29
    1d88:	cd b7       	in	r28, 0x3d	; 61
    1d8a:	de b7       	in	r29, 0x3e	; 62
    1d8c:	c8 58       	subi	r28, 0x88	; 136
    1d8e:	d1 09       	sbc	r29, r1
    1d90:	0f b6       	in	r0, 0x3f	; 63
    1d92:	f8 94       	cli
    1d94:	de bf       	out	0x3e, r29	; 62
    1d96:	0f be       	out	0x3f, r0	; 63
    1d98:	cd bf       	out	0x3d, r28	; 61
    1d9a:	7c 01       	movw	r14, r24
    1d9c:	3b 01       	movw	r6, r22
    1d9e:	5a 01       	movw	r10, r20
    1da0:	49 01       	movw	r8, r18
    1da2:	68 01       	movw	r12, r16
	Complex inc_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
													     {Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)}};
    1da4:	00 e0       	ldi	r16, 0x00	; 0
    1da6:	10 e0       	ldi	r17, 0x00	; 0
    1da8:	98 01       	movw	r18, r16
    1daa:	b9 01       	movw	r22, r18
    1dac:	a8 01       	movw	r20, r16
    1dae:	ce 01       	movw	r24, r28
    1db0:	01 96       	adiw	r24, 0x01	; 1
    1db2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1db6:	00 e0       	ldi	r16, 0x00	; 0
    1db8:	10 e0       	ldi	r17, 0x00	; 0
    1dba:	98 01       	movw	r18, r16
    1dbc:	40 e0       	ldi	r20, 0x00	; 0
    1dbe:	50 e0       	ldi	r21, 0x00	; 0
    1dc0:	60 e8       	ldi	r22, 0x80	; 128
    1dc2:	7f e3       	ldi	r23, 0x3F	; 63
    1dc4:	ce 01       	movw	r24, r28
    1dc6:	09 96       	adiw	r24, 0x09	; 9
    1dc8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1dcc:	00 e0       	ldi	r16, 0x00	; 0
    1dce:	10 e0       	ldi	r17, 0x00	; 0
    1dd0:	98 01       	movw	r18, r16
    1dd2:	b9 01       	movw	r22, r18
    1dd4:	a8 01       	movw	r20, r16
    1dd6:	ce 01       	movw	r24, r28
    1dd8:	41 96       	adiw	r24, 0x11	; 17
    1dda:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1dde:	00 e0       	ldi	r16, 0x00	; 0
    1de0:	10 e0       	ldi	r17, 0x00	; 0
    1de2:	98 01       	movw	r18, r16
    1de4:	b9 01       	movw	r22, r18
    1de6:	a8 01       	movw	r20, r16
    1de8:	ce 01       	movw	r24, r28
    1dea:	49 96       	adiw	r24, 0x19	; 25
    1dec:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1df0:	00 e0       	ldi	r16, 0x00	; 0
    1df2:	10 e0       	ldi	r17, 0x00	; 0
    1df4:	98 01       	movw	r18, r16
    1df6:	b9 01       	movw	r22, r18
    1df8:	a8 01       	movw	r20, r16
    1dfa:	ce 01       	movw	r24, r28
    1dfc:	81 96       	adiw	r24, 0x21	; 33
    1dfe:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1e02:	00 e0       	ldi	r16, 0x00	; 0
    1e04:	10 e0       	ldi	r17, 0x00	; 0
    1e06:	98 01       	movw	r18, r16
    1e08:	b9 01       	movw	r22, r18
    1e0a:	a8 01       	movw	r20, r16
    1e0c:	ce 01       	movw	r24, r28
    1e0e:	89 96       	adiw	r24, 0x29	; 41
    1e10:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1e14:	00 e0       	ldi	r16, 0x00	; 0
    1e16:	10 e0       	ldi	r17, 0x00	; 0
    1e18:	98 01       	movw	r18, r16
    1e1a:	40 e0       	ldi	r20, 0x00	; 0
    1e1c:	50 e0       	ldi	r21, 0x00	; 0
    1e1e:	60 e8       	ldi	r22, 0x80	; 128
    1e20:	7f e3       	ldi	r23, 0x3F	; 63
    1e22:	ce 01       	movw	r24, r28
    1e24:	c1 96       	adiw	r24, 0x31	; 49
    1e26:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1e2a:	00 e0       	ldi	r16, 0x00	; 0
    1e2c:	10 e0       	ldi	r17, 0x00	; 0
    1e2e:	98 01       	movw	r18, r16
    1e30:	b9 01       	movw	r22, r18
    1e32:	a8 01       	movw	r20, r16
    1e34:	ce 01       	movw	r24, r28
    1e36:	c9 96       	adiw	r24, 0x39	; 57
    1e38:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1e3c:	00 e0       	ldi	r16, 0x00	; 0
    1e3e:	10 e0       	ldi	r17, 0x00	; 0
    1e40:	98 01       	movw	r18, r16
    1e42:	b9 01       	movw	r22, r18
    1e44:	a8 01       	movw	r20, r16
    1e46:	ce 01       	movw	r24, r28
    1e48:	8f 5b       	subi	r24, 0xBF	; 191
    1e4a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e4c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1e50:	00 e0       	ldi	r16, 0x00	; 0
    1e52:	10 e0       	ldi	r17, 0x00	; 0
    1e54:	98 01       	movw	r18, r16
    1e56:	b9 01       	movw	r22, r18
    1e58:	a8 01       	movw	r20, r16
    1e5a:	ce 01       	movw	r24, r28
    1e5c:	87 5b       	subi	r24, 0xB7	; 183
    1e5e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e60:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1e64:	00 e0       	ldi	r16, 0x00	; 0
    1e66:	10 e0       	ldi	r17, 0x00	; 0
    1e68:	98 01       	movw	r18, r16
    1e6a:	b9 01       	movw	r22, r18
    1e6c:	a8 01       	movw	r20, r16
    1e6e:	ce 01       	movw	r24, r28
    1e70:	8f 5a       	subi	r24, 0xAF	; 175
    1e72:	9f 4f       	sbci	r25, 0xFF	; 255
    1e74:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1e78:	00 e0       	ldi	r16, 0x00	; 0
    1e7a:	10 e0       	ldi	r17, 0x00	; 0
    1e7c:	98 01       	movw	r18, r16
    1e7e:	40 e0       	ldi	r20, 0x00	; 0
    1e80:	50 e0       	ldi	r21, 0x00	; 0
    1e82:	60 e8       	ldi	r22, 0x80	; 128
    1e84:	7f e3       	ldi	r23, 0x3F	; 63
    1e86:	ce 01       	movw	r24, r28
    1e88:	87 5a       	subi	r24, 0xA7	; 167
    1e8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e8c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1e90:	00 e0       	ldi	r16, 0x00	; 0
    1e92:	10 e0       	ldi	r17, 0x00	; 0
    1e94:	98 01       	movw	r18, r16
    1e96:	40 e0       	ldi	r20, 0x00	; 0
    1e98:	50 e0       	ldi	r21, 0x00	; 0
    1e9a:	60 e8       	ldi	r22, 0x80	; 128
    1e9c:	7f e3       	ldi	r23, 0x3F	; 63
    1e9e:	ce 01       	movw	r24, r28
    1ea0:	8f 59       	subi	r24, 0x9F	; 159
    1ea2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ea4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1ea8:	00 e0       	ldi	r16, 0x00	; 0
    1eaa:	10 e0       	ldi	r17, 0x00	; 0
    1eac:	98 01       	movw	r18, r16
    1eae:	b9 01       	movw	r22, r18
    1eb0:	a8 01       	movw	r20, r16
    1eb2:	ce 01       	movw	r24, r28
    1eb4:	87 59       	subi	r24, 0x97	; 151
    1eb6:	9f 4f       	sbci	r25, 0xFF	; 255
    1eb8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1ebc:	00 e0       	ldi	r16, 0x00	; 0
    1ebe:	10 e0       	ldi	r17, 0x00	; 0
    1ec0:	98 01       	movw	r18, r16
    1ec2:	b9 01       	movw	r22, r18
    1ec4:	a8 01       	movw	r20, r16
    1ec6:	ce 01       	movw	r24, r28
    1ec8:	8f 58       	subi	r24, 0x8F	; 143
    1eca:	9f 4f       	sbci	r25, 0xFF	; 255
    1ecc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1ed0:	00 e0       	ldi	r16, 0x00	; 0
    1ed2:	10 e0       	ldi	r17, 0x00	; 0
    1ed4:	98 01       	movw	r18, r16
    1ed6:	b9 01       	movw	r22, r18
    1ed8:	a8 01       	movw	r20, r16
    1eda:	ce 01       	movw	r24, r28
    1edc:	87 58       	subi	r24, 0x87	; 135
    1ede:	9f 4f       	sbci	r25, 0xFF	; 255
    1ee0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    1ee4:	cb 57       	subi	r28, 0x7B	; 123
    1ee6:	df 4f       	sbci	r29, 0xFF	; 255
    1ee8:	79 82       	std	Y+1, r7	; 0x01
    1eea:	68 82       	st	Y, r6
    1eec:	c5 58       	subi	r28, 0x85	; 133
    1eee:	d0 40       	sbci	r29, 0x00	; 0
    1ef0:	c9 57       	subi	r28, 0x79	; 121
    1ef2:	df 4f       	sbci	r29, 0xFF	; 255
    1ef4:	99 82       	std	Y+1, r9	; 0x01
    1ef6:	88 82       	st	Y, r8
    1ef8:	c7 58       	subi	r28, 0x87	; 135
    1efa:	d0 40       	sbci	r29, 0x00	; 0
    1efc:	cf 57       	subi	r28, 0x7F	; 127
    1efe:	df 4f       	sbci	r29, 0xFF	; 255
    1f00:	b9 82       	std	Y+1, r11	; 0x01
    1f02:	a8 82       	st	Y, r10
    1f04:	c1 58       	subi	r28, 0x81	; 129
    1f06:	d0 40       	sbci	r29, 0x00	; 0
    1f08:	cd 57       	subi	r28, 0x7D	; 125
    1f0a:	df 4f       	sbci	r29, 0xFF	; 255
    1f0c:	d9 82       	std	Y+1, r13	; 0x01
    1f0e:	c8 82       	st	Y, r12
    1f10:	c3 58       	subi	r28, 0x83	; 131
    1f12:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),inc_matrix),QB_SIZE2);
    1f14:	9e 01       	movw	r18, r28
    1f16:	2f 57       	subi	r18, 0x7F	; 127
    1f18:	3f 4f       	sbci	r19, 0xFF	; 255
    1f1a:	ae 01       	movw	r20, r28
    1f1c:	4b 57       	subi	r20, 0x7B	; 123
    1f1e:	5f 4f       	sbci	r21, 0xFF	; 255
    1f20:	62 e0       	ldi	r22, 0x02	; 2
    1f22:	70 e0       	ldi	r23, 0x00	; 0
    1f24:	c7 01       	movw	r24, r14
    1f26:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    1f2a:	ae 01       	movw	r20, r28
    1f2c:	4f 5f       	subi	r20, 0xFF	; 255
    1f2e:	5f 4f       	sbci	r21, 0xFF	; 255
    1f30:	bc 01       	movw	r22, r24
    1f32:	c7 01       	movw	r24, r14
    1f34:	0e 94 e7 07 	call	0xfce	; 0xfce <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    1f38:	42 e0       	ldi	r20, 0x02	; 2
    1f3a:	50 e0       	ldi	r21, 0x00	; 0
    1f3c:	bc 01       	movw	r22, r24
    1f3e:	c7 01       	movw	r24, r14
    1f40:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    1f44:	c8 57       	subi	r28, 0x78	; 120
    1f46:	df 4f       	sbci	r29, 0xFF	; 255
    1f48:	0f b6       	in	r0, 0x3f	; 63
    1f4a:	f8 94       	cli
    1f4c:	de bf       	out	0x3e, r29	; 62
    1f4e:	0f be       	out	0x3f, r0	; 63
    1f50:	cd bf       	out	0x3d, r28	; 61
    1f52:	df 91       	pop	r29
    1f54:	cf 91       	pop	r28
    1f56:	1f 91       	pop	r17
    1f58:	0f 91       	pop	r16
    1f5a:	ff 90       	pop	r15
    1f5c:	ef 90       	pop	r14
    1f5e:	df 90       	pop	r13
    1f60:	cf 90       	pop	r12
    1f62:	bf 90       	pop	r11
    1f64:	af 90       	pop	r10
    1f66:	9f 90       	pop	r9
    1f68:	8f 90       	pop	r8
    1f6a:	7f 90       	pop	r7
    1f6c:	6f 90       	pop	r6
    1f6e:	08 95       	ret

00001f70 <_ZN5Gates3DECEiiii>:
int * Gates::DEC(int theta1, int phi1, int theta2,int phi2){
    1f70:	6f 92       	push	r6
    1f72:	7f 92       	push	r7
    1f74:	8f 92       	push	r8
    1f76:	9f 92       	push	r9
    1f78:	af 92       	push	r10
    1f7a:	bf 92       	push	r11
    1f7c:	cf 92       	push	r12
    1f7e:	df 92       	push	r13
    1f80:	ef 92       	push	r14
    1f82:	ff 92       	push	r15
    1f84:	0f 93       	push	r16
    1f86:	1f 93       	push	r17
    1f88:	cf 93       	push	r28
    1f8a:	df 93       	push	r29
    1f8c:	cd b7       	in	r28, 0x3d	; 61
    1f8e:	de b7       	in	r29, 0x3e	; 62
    1f90:	c8 58       	subi	r28, 0x88	; 136
    1f92:	d1 09       	sbc	r29, r1
    1f94:	0f b6       	in	r0, 0x3f	; 63
    1f96:	f8 94       	cli
    1f98:	de bf       	out	0x3e, r29	; 62
    1f9a:	0f be       	out	0x3f, r0	; 63
    1f9c:	cd bf       	out	0x3d, r28	; 61
    1f9e:	7c 01       	movw	r14, r24
    1fa0:	3b 01       	movw	r6, r22
    1fa2:	5a 01       	movw	r10, r20
    1fa4:	49 01       	movw	r8, r18
    1fa6:	68 01       	movw	r12, r16
	Complex dec_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
													     {Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)}};
    1fa8:	00 e0       	ldi	r16, 0x00	; 0
    1faa:	10 e0       	ldi	r17, 0x00	; 0
    1fac:	98 01       	movw	r18, r16
    1fae:	b9 01       	movw	r22, r18
    1fb0:	a8 01       	movw	r20, r16
    1fb2:	ce 01       	movw	r24, r28
    1fb4:	01 96       	adiw	r24, 0x01	; 1
    1fb6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1fba:	00 e0       	ldi	r16, 0x00	; 0
    1fbc:	10 e0       	ldi	r17, 0x00	; 0
    1fbe:	98 01       	movw	r18, r16
    1fc0:	b9 01       	movw	r22, r18
    1fc2:	a8 01       	movw	r20, r16
    1fc4:	ce 01       	movw	r24, r28
    1fc6:	09 96       	adiw	r24, 0x09	; 9
    1fc8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1fcc:	00 e0       	ldi	r16, 0x00	; 0
    1fce:	10 e0       	ldi	r17, 0x00	; 0
    1fd0:	98 01       	movw	r18, r16
    1fd2:	b9 01       	movw	r22, r18
    1fd4:	a8 01       	movw	r20, r16
    1fd6:	ce 01       	movw	r24, r28
    1fd8:	41 96       	adiw	r24, 0x11	; 17
    1fda:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1fde:	00 e0       	ldi	r16, 0x00	; 0
    1fe0:	10 e0       	ldi	r17, 0x00	; 0
    1fe2:	98 01       	movw	r18, r16
    1fe4:	40 e0       	ldi	r20, 0x00	; 0
    1fe6:	50 e0       	ldi	r21, 0x00	; 0
    1fe8:	60 e8       	ldi	r22, 0x80	; 128
    1fea:	7f e3       	ldi	r23, 0x3F	; 63
    1fec:	ce 01       	movw	r24, r28
    1fee:	49 96       	adiw	r24, 0x19	; 25
    1ff0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    1ff4:	00 e0       	ldi	r16, 0x00	; 0
    1ff6:	10 e0       	ldi	r17, 0x00	; 0
    1ff8:	98 01       	movw	r18, r16
    1ffa:	40 e0       	ldi	r20, 0x00	; 0
    1ffc:	50 e0       	ldi	r21, 0x00	; 0
    1ffe:	60 e8       	ldi	r22, 0x80	; 128
    2000:	7f e3       	ldi	r23, 0x3F	; 63
    2002:	ce 01       	movw	r24, r28
    2004:	81 96       	adiw	r24, 0x21	; 33
    2006:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    200a:	00 e0       	ldi	r16, 0x00	; 0
    200c:	10 e0       	ldi	r17, 0x00	; 0
    200e:	98 01       	movw	r18, r16
    2010:	b9 01       	movw	r22, r18
    2012:	a8 01       	movw	r20, r16
    2014:	ce 01       	movw	r24, r28
    2016:	89 96       	adiw	r24, 0x29	; 41
    2018:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    201c:	00 e0       	ldi	r16, 0x00	; 0
    201e:	10 e0       	ldi	r17, 0x00	; 0
    2020:	98 01       	movw	r18, r16
    2022:	b9 01       	movw	r22, r18
    2024:	a8 01       	movw	r20, r16
    2026:	ce 01       	movw	r24, r28
    2028:	c1 96       	adiw	r24, 0x31	; 49
    202a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    202e:	00 e0       	ldi	r16, 0x00	; 0
    2030:	10 e0       	ldi	r17, 0x00	; 0
    2032:	98 01       	movw	r18, r16
    2034:	b9 01       	movw	r22, r18
    2036:	a8 01       	movw	r20, r16
    2038:	ce 01       	movw	r24, r28
    203a:	c9 96       	adiw	r24, 0x39	; 57
    203c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2040:	00 e0       	ldi	r16, 0x00	; 0
    2042:	10 e0       	ldi	r17, 0x00	; 0
    2044:	98 01       	movw	r18, r16
    2046:	b9 01       	movw	r22, r18
    2048:	a8 01       	movw	r20, r16
    204a:	ce 01       	movw	r24, r28
    204c:	8f 5b       	subi	r24, 0xBF	; 191
    204e:	9f 4f       	sbci	r25, 0xFF	; 255
    2050:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2054:	00 e0       	ldi	r16, 0x00	; 0
    2056:	10 e0       	ldi	r17, 0x00	; 0
    2058:	98 01       	movw	r18, r16
    205a:	40 e0       	ldi	r20, 0x00	; 0
    205c:	50 e0       	ldi	r21, 0x00	; 0
    205e:	60 e8       	ldi	r22, 0x80	; 128
    2060:	7f e3       	ldi	r23, 0x3F	; 63
    2062:	ce 01       	movw	r24, r28
    2064:	87 5b       	subi	r24, 0xB7	; 183
    2066:	9f 4f       	sbci	r25, 0xFF	; 255
    2068:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    206c:	00 e0       	ldi	r16, 0x00	; 0
    206e:	10 e0       	ldi	r17, 0x00	; 0
    2070:	98 01       	movw	r18, r16
    2072:	b9 01       	movw	r22, r18
    2074:	a8 01       	movw	r20, r16
    2076:	ce 01       	movw	r24, r28
    2078:	8f 5a       	subi	r24, 0xAF	; 175
    207a:	9f 4f       	sbci	r25, 0xFF	; 255
    207c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2080:	00 e0       	ldi	r16, 0x00	; 0
    2082:	10 e0       	ldi	r17, 0x00	; 0
    2084:	98 01       	movw	r18, r16
    2086:	b9 01       	movw	r22, r18
    2088:	a8 01       	movw	r20, r16
    208a:	ce 01       	movw	r24, r28
    208c:	87 5a       	subi	r24, 0xA7	; 167
    208e:	9f 4f       	sbci	r25, 0xFF	; 255
    2090:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2094:	00 e0       	ldi	r16, 0x00	; 0
    2096:	10 e0       	ldi	r17, 0x00	; 0
    2098:	98 01       	movw	r18, r16
    209a:	b9 01       	movw	r22, r18
    209c:	a8 01       	movw	r20, r16
    209e:	ce 01       	movw	r24, r28
    20a0:	8f 59       	subi	r24, 0x9F	; 159
    20a2:	9f 4f       	sbci	r25, 0xFF	; 255
    20a4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    20a8:	00 e0       	ldi	r16, 0x00	; 0
    20aa:	10 e0       	ldi	r17, 0x00	; 0
    20ac:	98 01       	movw	r18, r16
    20ae:	b9 01       	movw	r22, r18
    20b0:	a8 01       	movw	r20, r16
    20b2:	ce 01       	movw	r24, r28
    20b4:	87 59       	subi	r24, 0x97	; 151
    20b6:	9f 4f       	sbci	r25, 0xFF	; 255
    20b8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    20bc:	00 e0       	ldi	r16, 0x00	; 0
    20be:	10 e0       	ldi	r17, 0x00	; 0
    20c0:	98 01       	movw	r18, r16
    20c2:	40 e0       	ldi	r20, 0x00	; 0
    20c4:	50 e0       	ldi	r21, 0x00	; 0
    20c6:	60 e8       	ldi	r22, 0x80	; 128
    20c8:	7f e3       	ldi	r23, 0x3F	; 63
    20ca:	ce 01       	movw	r24, r28
    20cc:	8f 58       	subi	r24, 0x8F	; 143
    20ce:	9f 4f       	sbci	r25, 0xFF	; 255
    20d0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    20d4:	00 e0       	ldi	r16, 0x00	; 0
    20d6:	10 e0       	ldi	r17, 0x00	; 0
    20d8:	98 01       	movw	r18, r16
    20da:	b9 01       	movw	r22, r18
    20dc:	a8 01       	movw	r20, r16
    20de:	ce 01       	movw	r24, r28
    20e0:	87 58       	subi	r24, 0x87	; 135
    20e2:	9f 4f       	sbci	r25, 0xFF	; 255
    20e4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    20e8:	cb 57       	subi	r28, 0x7B	; 123
    20ea:	df 4f       	sbci	r29, 0xFF	; 255
    20ec:	79 82       	std	Y+1, r7	; 0x01
    20ee:	68 82       	st	Y, r6
    20f0:	c5 58       	subi	r28, 0x85	; 133
    20f2:	d0 40       	sbci	r29, 0x00	; 0
    20f4:	c9 57       	subi	r28, 0x79	; 121
    20f6:	df 4f       	sbci	r29, 0xFF	; 255
    20f8:	99 82       	std	Y+1, r9	; 0x01
    20fa:	88 82       	st	Y, r8
    20fc:	c7 58       	subi	r28, 0x87	; 135
    20fe:	d0 40       	sbci	r29, 0x00	; 0
    2100:	cf 57       	subi	r28, 0x7F	; 127
    2102:	df 4f       	sbci	r29, 0xFF	; 255
    2104:	b9 82       	std	Y+1, r11	; 0x01
    2106:	a8 82       	st	Y, r10
    2108:	c1 58       	subi	r28, 0x81	; 129
    210a:	d0 40       	sbci	r29, 0x00	; 0
    210c:	cd 57       	subi	r28, 0x7D	; 125
    210e:	df 4f       	sbci	r29, 0xFF	; 255
    2110:	d9 82       	std	Y+1, r13	; 0x01
    2112:	c8 82       	st	Y, r12
    2114:	c3 58       	subi	r28, 0x83	; 131
    2116:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),dec_matrix),QB_SIZE2);
    2118:	9e 01       	movw	r18, r28
    211a:	2f 57       	subi	r18, 0x7F	; 127
    211c:	3f 4f       	sbci	r19, 0xFF	; 255
    211e:	ae 01       	movw	r20, r28
    2120:	4b 57       	subi	r20, 0x7B	; 123
    2122:	5f 4f       	sbci	r21, 0xFF	; 255
    2124:	62 e0       	ldi	r22, 0x02	; 2
    2126:	70 e0       	ldi	r23, 0x00	; 0
    2128:	c7 01       	movw	r24, r14
    212a:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    212e:	ae 01       	movw	r20, r28
    2130:	4f 5f       	subi	r20, 0xFF	; 255
    2132:	5f 4f       	sbci	r21, 0xFF	; 255
    2134:	bc 01       	movw	r22, r24
    2136:	c7 01       	movw	r24, r14
    2138:	0e 94 e7 07 	call	0xfce	; 0xfce <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    213c:	42 e0       	ldi	r20, 0x02	; 2
    213e:	50 e0       	ldi	r21, 0x00	; 0
    2140:	bc 01       	movw	r22, r24
    2142:	c7 01       	movw	r24, r14
    2144:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    2148:	c8 57       	subi	r28, 0x78	; 120
    214a:	df 4f       	sbci	r29, 0xFF	; 255
    214c:	0f b6       	in	r0, 0x3f	; 63
    214e:	f8 94       	cli
    2150:	de bf       	out	0x3e, r29	; 62
    2152:	0f be       	out	0x3f, r0	; 63
    2154:	cd bf       	out	0x3d, r28	; 61
    2156:	df 91       	pop	r29
    2158:	cf 91       	pop	r28
    215a:	1f 91       	pop	r17
    215c:	0f 91       	pop	r16
    215e:	ff 90       	pop	r15
    2160:	ef 90       	pop	r14
    2162:	df 90       	pop	r13
    2164:	cf 90       	pop	r12
    2166:	bf 90       	pop	r11
    2168:	af 90       	pop	r10
    216a:	9f 90       	pop	r9
    216c:	8f 90       	pop	r8
    216e:	7f 90       	pop	r7
    2170:	6f 90       	pop	r6
    2172:	08 95       	ret

00002174 <_ZN5Gates3SWQEiiii>:
int * Gates::SWQ(int theta1, int phi1, int theta2,int phi2){
    2174:	6f 92       	push	r6
    2176:	7f 92       	push	r7
    2178:	8f 92       	push	r8
    217a:	9f 92       	push	r9
    217c:	af 92       	push	r10
    217e:	bf 92       	push	r11
    2180:	cf 92       	push	r12
    2182:	df 92       	push	r13
    2184:	ef 92       	push	r14
    2186:	ff 92       	push	r15
    2188:	0f 93       	push	r16
    218a:	1f 93       	push	r17
    218c:	cf 93       	push	r28
    218e:	df 93       	push	r29
    2190:	cd b7       	in	r28, 0x3d	; 61
    2192:	de b7       	in	r29, 0x3e	; 62
    2194:	c8 58       	subi	r28, 0x88	; 136
    2196:	d1 09       	sbc	r29, r1
    2198:	0f b6       	in	r0, 0x3f	; 63
    219a:	f8 94       	cli
    219c:	de bf       	out	0x3e, r29	; 62
    219e:	0f be       	out	0x3f, r0	; 63
    21a0:	cd bf       	out	0x3d, r28	; 61
    21a2:	7c 01       	movw	r14, r24
    21a4:	3b 01       	movw	r6, r22
    21a6:	5a 01       	movw	r10, r20
    21a8:	49 01       	movw	r8, r18
    21aa:	68 01       	movw	r12, r16
	Complex swq_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),   Complex(0,0),   Complex(0,0)},
	 												     {Complex(0,0),Complex(.5,.5), Complex(.5,-.5),Complex(0,0)},
													     {Complex(0,0),Complex(.5,-.5),Complex(.5,.5), Complex(0,0)},
													     {Complex(0,0),Complex(0,0),   Complex(0,0),   Complex(1,0)}};
    21ac:	00 e0       	ldi	r16, 0x00	; 0
    21ae:	10 e0       	ldi	r17, 0x00	; 0
    21b0:	98 01       	movw	r18, r16
    21b2:	40 e0       	ldi	r20, 0x00	; 0
    21b4:	50 e0       	ldi	r21, 0x00	; 0
    21b6:	60 e8       	ldi	r22, 0x80	; 128
    21b8:	7f e3       	ldi	r23, 0x3F	; 63
    21ba:	ce 01       	movw	r24, r28
    21bc:	01 96       	adiw	r24, 0x01	; 1
    21be:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    21c2:	00 e0       	ldi	r16, 0x00	; 0
    21c4:	10 e0       	ldi	r17, 0x00	; 0
    21c6:	98 01       	movw	r18, r16
    21c8:	b9 01       	movw	r22, r18
    21ca:	a8 01       	movw	r20, r16
    21cc:	ce 01       	movw	r24, r28
    21ce:	09 96       	adiw	r24, 0x09	; 9
    21d0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    21d4:	00 e0       	ldi	r16, 0x00	; 0
    21d6:	10 e0       	ldi	r17, 0x00	; 0
    21d8:	98 01       	movw	r18, r16
    21da:	b9 01       	movw	r22, r18
    21dc:	a8 01       	movw	r20, r16
    21de:	ce 01       	movw	r24, r28
    21e0:	41 96       	adiw	r24, 0x11	; 17
    21e2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    21e6:	00 e0       	ldi	r16, 0x00	; 0
    21e8:	10 e0       	ldi	r17, 0x00	; 0
    21ea:	98 01       	movw	r18, r16
    21ec:	b9 01       	movw	r22, r18
    21ee:	a8 01       	movw	r20, r16
    21f0:	ce 01       	movw	r24, r28
    21f2:	49 96       	adiw	r24, 0x19	; 25
    21f4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    21f8:	00 e0       	ldi	r16, 0x00	; 0
    21fa:	10 e0       	ldi	r17, 0x00	; 0
    21fc:	98 01       	movw	r18, r16
    21fe:	b9 01       	movw	r22, r18
    2200:	a8 01       	movw	r20, r16
    2202:	ce 01       	movw	r24, r28
    2204:	81 96       	adiw	r24, 0x21	; 33
    2206:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    220a:	00 e0       	ldi	r16, 0x00	; 0
    220c:	10 e0       	ldi	r17, 0x00	; 0
    220e:	20 e0       	ldi	r18, 0x00	; 0
    2210:	3f e3       	ldi	r19, 0x3F	; 63
    2212:	b9 01       	movw	r22, r18
    2214:	a8 01       	movw	r20, r16
    2216:	ce 01       	movw	r24, r28
    2218:	89 96       	adiw	r24, 0x29	; 41
    221a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    221e:	00 e0       	ldi	r16, 0x00	; 0
    2220:	10 e0       	ldi	r17, 0x00	; 0
    2222:	20 e0       	ldi	r18, 0x00	; 0
    2224:	3f eb       	ldi	r19, 0xBF	; 191
    2226:	40 e0       	ldi	r20, 0x00	; 0
    2228:	50 e0       	ldi	r21, 0x00	; 0
    222a:	60 e0       	ldi	r22, 0x00	; 0
    222c:	7f e3       	ldi	r23, 0x3F	; 63
    222e:	ce 01       	movw	r24, r28
    2230:	c1 96       	adiw	r24, 0x31	; 49
    2232:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2236:	00 e0       	ldi	r16, 0x00	; 0
    2238:	10 e0       	ldi	r17, 0x00	; 0
    223a:	98 01       	movw	r18, r16
    223c:	b9 01       	movw	r22, r18
    223e:	a8 01       	movw	r20, r16
    2240:	ce 01       	movw	r24, r28
    2242:	c9 96       	adiw	r24, 0x39	; 57
    2244:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2248:	00 e0       	ldi	r16, 0x00	; 0
    224a:	10 e0       	ldi	r17, 0x00	; 0
    224c:	98 01       	movw	r18, r16
    224e:	b9 01       	movw	r22, r18
    2250:	a8 01       	movw	r20, r16
    2252:	ce 01       	movw	r24, r28
    2254:	8f 5b       	subi	r24, 0xBF	; 191
    2256:	9f 4f       	sbci	r25, 0xFF	; 255
    2258:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    225c:	00 e0       	ldi	r16, 0x00	; 0
    225e:	10 e0       	ldi	r17, 0x00	; 0
    2260:	20 e0       	ldi	r18, 0x00	; 0
    2262:	3f eb       	ldi	r19, 0xBF	; 191
    2264:	40 e0       	ldi	r20, 0x00	; 0
    2266:	50 e0       	ldi	r21, 0x00	; 0
    2268:	60 e0       	ldi	r22, 0x00	; 0
    226a:	7f e3       	ldi	r23, 0x3F	; 63
    226c:	ce 01       	movw	r24, r28
    226e:	87 5b       	subi	r24, 0xB7	; 183
    2270:	9f 4f       	sbci	r25, 0xFF	; 255
    2272:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2276:	00 e0       	ldi	r16, 0x00	; 0
    2278:	10 e0       	ldi	r17, 0x00	; 0
    227a:	20 e0       	ldi	r18, 0x00	; 0
    227c:	3f e3       	ldi	r19, 0x3F	; 63
    227e:	b9 01       	movw	r22, r18
    2280:	a8 01       	movw	r20, r16
    2282:	ce 01       	movw	r24, r28
    2284:	8f 5a       	subi	r24, 0xAF	; 175
    2286:	9f 4f       	sbci	r25, 0xFF	; 255
    2288:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    228c:	00 e0       	ldi	r16, 0x00	; 0
    228e:	10 e0       	ldi	r17, 0x00	; 0
    2290:	98 01       	movw	r18, r16
    2292:	b9 01       	movw	r22, r18
    2294:	a8 01       	movw	r20, r16
    2296:	ce 01       	movw	r24, r28
    2298:	87 5a       	subi	r24, 0xA7	; 167
    229a:	9f 4f       	sbci	r25, 0xFF	; 255
    229c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    22a0:	00 e0       	ldi	r16, 0x00	; 0
    22a2:	10 e0       	ldi	r17, 0x00	; 0
    22a4:	98 01       	movw	r18, r16
    22a6:	b9 01       	movw	r22, r18
    22a8:	a8 01       	movw	r20, r16
    22aa:	ce 01       	movw	r24, r28
    22ac:	8f 59       	subi	r24, 0x9F	; 159
    22ae:	9f 4f       	sbci	r25, 0xFF	; 255
    22b0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    22b4:	00 e0       	ldi	r16, 0x00	; 0
    22b6:	10 e0       	ldi	r17, 0x00	; 0
    22b8:	98 01       	movw	r18, r16
    22ba:	b9 01       	movw	r22, r18
    22bc:	a8 01       	movw	r20, r16
    22be:	ce 01       	movw	r24, r28
    22c0:	87 59       	subi	r24, 0x97	; 151
    22c2:	9f 4f       	sbci	r25, 0xFF	; 255
    22c4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    22c8:	00 e0       	ldi	r16, 0x00	; 0
    22ca:	10 e0       	ldi	r17, 0x00	; 0
    22cc:	98 01       	movw	r18, r16
    22ce:	b9 01       	movw	r22, r18
    22d0:	a8 01       	movw	r20, r16
    22d2:	ce 01       	movw	r24, r28
    22d4:	8f 58       	subi	r24, 0x8F	; 143
    22d6:	9f 4f       	sbci	r25, 0xFF	; 255
    22d8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    22dc:	00 e0       	ldi	r16, 0x00	; 0
    22de:	10 e0       	ldi	r17, 0x00	; 0
    22e0:	98 01       	movw	r18, r16
    22e2:	40 e0       	ldi	r20, 0x00	; 0
    22e4:	50 e0       	ldi	r21, 0x00	; 0
    22e6:	60 e8       	ldi	r22, 0x80	; 128
    22e8:	7f e3       	ldi	r23, 0x3F	; 63
    22ea:	ce 01       	movw	r24, r28
    22ec:	87 58       	subi	r24, 0x87	; 135
    22ee:	9f 4f       	sbci	r25, 0xFF	; 255
    22f0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    22f4:	cb 57       	subi	r28, 0x7B	; 123
    22f6:	df 4f       	sbci	r29, 0xFF	; 255
    22f8:	79 82       	std	Y+1, r7	; 0x01
    22fa:	68 82       	st	Y, r6
    22fc:	c5 58       	subi	r28, 0x85	; 133
    22fe:	d0 40       	sbci	r29, 0x00	; 0
    2300:	c9 57       	subi	r28, 0x79	; 121
    2302:	df 4f       	sbci	r29, 0xFF	; 255
    2304:	99 82       	std	Y+1, r9	; 0x01
    2306:	88 82       	st	Y, r8
    2308:	c7 58       	subi	r28, 0x87	; 135
    230a:	d0 40       	sbci	r29, 0x00	; 0
    230c:	cf 57       	subi	r28, 0x7F	; 127
    230e:	df 4f       	sbci	r29, 0xFF	; 255
    2310:	b9 82       	std	Y+1, r11	; 0x01
    2312:	a8 82       	st	Y, r10
    2314:	c1 58       	subi	r28, 0x81	; 129
    2316:	d0 40       	sbci	r29, 0x00	; 0
    2318:	cd 57       	subi	r28, 0x7D	; 125
    231a:	df 4f       	sbci	r29, 0xFF	; 255
    231c:	d9 82       	std	Y+1, r13	; 0x01
    231e:	c8 82       	st	Y, r12
    2320:	c3 58       	subi	r28, 0x83	; 131
    2322:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),swq_matrix),QB_SIZE2);
    2324:	9e 01       	movw	r18, r28
    2326:	2f 57       	subi	r18, 0x7F	; 127
    2328:	3f 4f       	sbci	r19, 0xFF	; 255
    232a:	ae 01       	movw	r20, r28
    232c:	4b 57       	subi	r20, 0x7B	; 123
    232e:	5f 4f       	sbci	r21, 0xFF	; 255
    2330:	62 e0       	ldi	r22, 0x02	; 2
    2332:	70 e0       	ldi	r23, 0x00	; 0
    2334:	c7 01       	movw	r24, r14
    2336:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    233a:	ae 01       	movw	r20, r28
    233c:	4f 5f       	subi	r20, 0xFF	; 255
    233e:	5f 4f       	sbci	r21, 0xFF	; 255
    2340:	bc 01       	movw	r22, r24
    2342:	c7 01       	movw	r24, r14
    2344:	0e 94 e7 07 	call	0xfce	; 0xfce <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    2348:	42 e0       	ldi	r20, 0x02	; 2
    234a:	50 e0       	ldi	r21, 0x00	; 0
    234c:	bc 01       	movw	r22, r24
    234e:	c7 01       	movw	r24, r14
    2350:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    2354:	c8 57       	subi	r28, 0x78	; 120
    2356:	df 4f       	sbci	r29, 0xFF	; 255
    2358:	0f b6       	in	r0, 0x3f	; 63
    235a:	f8 94       	cli
    235c:	de bf       	out	0x3e, r29	; 62
    235e:	0f be       	out	0x3f, r0	; 63
    2360:	cd bf       	out	0x3d, r28	; 61
    2362:	df 91       	pop	r29
    2364:	cf 91       	pop	r28
    2366:	1f 91       	pop	r17
    2368:	0f 91       	pop	r16
    236a:	ff 90       	pop	r15
    236c:	ef 90       	pop	r14
    236e:	df 90       	pop	r13
    2370:	cf 90       	pop	r12
    2372:	bf 90       	pop	r11
    2374:	af 90       	pop	r10
    2376:	9f 90       	pop	r9
    2378:	8f 90       	pop	r8
    237a:	7f 90       	pop	r7
    237c:	6f 90       	pop	r6
    237e:	08 95       	ret

00002380 <_ZN5Gates3SWIEiiii>:
int * Gates::SWI(int theta1, int phi1, int theta2,int phi2){
    2380:	6f 92       	push	r6
    2382:	7f 92       	push	r7
    2384:	8f 92       	push	r8
    2386:	9f 92       	push	r9
    2388:	af 92       	push	r10
    238a:	bf 92       	push	r11
    238c:	cf 92       	push	r12
    238e:	df 92       	push	r13
    2390:	ef 92       	push	r14
    2392:	ff 92       	push	r15
    2394:	0f 93       	push	r16
    2396:	1f 93       	push	r17
    2398:	cf 93       	push	r28
    239a:	df 93       	push	r29
    239c:	cd b7       	in	r28, 0x3d	; 61
    239e:	de b7       	in	r29, 0x3e	; 62
    23a0:	c8 58       	subi	r28, 0x88	; 136
    23a2:	d1 09       	sbc	r29, r1
    23a4:	0f b6       	in	r0, 0x3f	; 63
    23a6:	f8 94       	cli
    23a8:	de bf       	out	0x3e, r29	; 62
    23aa:	0f be       	out	0x3f, r0	; 63
    23ac:	cd bf       	out	0x3d, r28	; 61
    23ae:	7c 01       	movw	r14, r24
    23b0:	3b 01       	movw	r6, r22
    23b2:	5a 01       	movw	r10, r20
    23b4:	49 01       	movw	r8, r18
    23b6:	68 01       	movw	r12, r16
	Complex dec_matrix[QB2_MATRIX_SIZE][QB2_MATRIX_SIZE]{{Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,1),Complex(0,0)},
 													     {Complex(0,0),Complex(0,1),Complex(0,0),Complex(0,0)},
													     {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)}};
    23b8:	00 e0       	ldi	r16, 0x00	; 0
    23ba:	10 e0       	ldi	r17, 0x00	; 0
    23bc:	98 01       	movw	r18, r16
    23be:	40 e0       	ldi	r20, 0x00	; 0
    23c0:	50 e0       	ldi	r21, 0x00	; 0
    23c2:	60 e8       	ldi	r22, 0x80	; 128
    23c4:	7f e3       	ldi	r23, 0x3F	; 63
    23c6:	ce 01       	movw	r24, r28
    23c8:	01 96       	adiw	r24, 0x01	; 1
    23ca:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    23ce:	00 e0       	ldi	r16, 0x00	; 0
    23d0:	10 e0       	ldi	r17, 0x00	; 0
    23d2:	98 01       	movw	r18, r16
    23d4:	b9 01       	movw	r22, r18
    23d6:	a8 01       	movw	r20, r16
    23d8:	ce 01       	movw	r24, r28
    23da:	09 96       	adiw	r24, 0x09	; 9
    23dc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    23e0:	00 e0       	ldi	r16, 0x00	; 0
    23e2:	10 e0       	ldi	r17, 0x00	; 0
    23e4:	98 01       	movw	r18, r16
    23e6:	b9 01       	movw	r22, r18
    23e8:	a8 01       	movw	r20, r16
    23ea:	ce 01       	movw	r24, r28
    23ec:	41 96       	adiw	r24, 0x11	; 17
    23ee:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    23f2:	00 e0       	ldi	r16, 0x00	; 0
    23f4:	10 e0       	ldi	r17, 0x00	; 0
    23f6:	98 01       	movw	r18, r16
    23f8:	b9 01       	movw	r22, r18
    23fa:	a8 01       	movw	r20, r16
    23fc:	ce 01       	movw	r24, r28
    23fe:	49 96       	adiw	r24, 0x19	; 25
    2400:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2404:	00 e0       	ldi	r16, 0x00	; 0
    2406:	10 e0       	ldi	r17, 0x00	; 0
    2408:	98 01       	movw	r18, r16
    240a:	b9 01       	movw	r22, r18
    240c:	a8 01       	movw	r20, r16
    240e:	ce 01       	movw	r24, r28
    2410:	81 96       	adiw	r24, 0x21	; 33
    2412:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2416:	00 e0       	ldi	r16, 0x00	; 0
    2418:	10 e0       	ldi	r17, 0x00	; 0
    241a:	98 01       	movw	r18, r16
    241c:	b9 01       	movw	r22, r18
    241e:	a8 01       	movw	r20, r16
    2420:	ce 01       	movw	r24, r28
    2422:	89 96       	adiw	r24, 0x29	; 41
    2424:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2428:	00 e0       	ldi	r16, 0x00	; 0
    242a:	10 e0       	ldi	r17, 0x00	; 0
    242c:	20 e8       	ldi	r18, 0x80	; 128
    242e:	3f e3       	ldi	r19, 0x3F	; 63
    2430:	40 e0       	ldi	r20, 0x00	; 0
    2432:	50 e0       	ldi	r21, 0x00	; 0
    2434:	ba 01       	movw	r22, r20
    2436:	ce 01       	movw	r24, r28
    2438:	c1 96       	adiw	r24, 0x31	; 49
    243a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    243e:	00 e0       	ldi	r16, 0x00	; 0
    2440:	10 e0       	ldi	r17, 0x00	; 0
    2442:	98 01       	movw	r18, r16
    2444:	b9 01       	movw	r22, r18
    2446:	a8 01       	movw	r20, r16
    2448:	ce 01       	movw	r24, r28
    244a:	c9 96       	adiw	r24, 0x39	; 57
    244c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2450:	00 e0       	ldi	r16, 0x00	; 0
    2452:	10 e0       	ldi	r17, 0x00	; 0
    2454:	98 01       	movw	r18, r16
    2456:	b9 01       	movw	r22, r18
    2458:	a8 01       	movw	r20, r16
    245a:	ce 01       	movw	r24, r28
    245c:	8f 5b       	subi	r24, 0xBF	; 191
    245e:	9f 4f       	sbci	r25, 0xFF	; 255
    2460:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2464:	00 e0       	ldi	r16, 0x00	; 0
    2466:	10 e0       	ldi	r17, 0x00	; 0
    2468:	20 e8       	ldi	r18, 0x80	; 128
    246a:	3f e3       	ldi	r19, 0x3F	; 63
    246c:	40 e0       	ldi	r20, 0x00	; 0
    246e:	50 e0       	ldi	r21, 0x00	; 0
    2470:	ba 01       	movw	r22, r20
    2472:	ce 01       	movw	r24, r28
    2474:	87 5b       	subi	r24, 0xB7	; 183
    2476:	9f 4f       	sbci	r25, 0xFF	; 255
    2478:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    247c:	00 e0       	ldi	r16, 0x00	; 0
    247e:	10 e0       	ldi	r17, 0x00	; 0
    2480:	98 01       	movw	r18, r16
    2482:	b9 01       	movw	r22, r18
    2484:	a8 01       	movw	r20, r16
    2486:	ce 01       	movw	r24, r28
    2488:	8f 5a       	subi	r24, 0xAF	; 175
    248a:	9f 4f       	sbci	r25, 0xFF	; 255
    248c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2490:	00 e0       	ldi	r16, 0x00	; 0
    2492:	10 e0       	ldi	r17, 0x00	; 0
    2494:	98 01       	movw	r18, r16
    2496:	b9 01       	movw	r22, r18
    2498:	a8 01       	movw	r20, r16
    249a:	ce 01       	movw	r24, r28
    249c:	87 5a       	subi	r24, 0xA7	; 167
    249e:	9f 4f       	sbci	r25, 0xFF	; 255
    24a0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    24a4:	00 e0       	ldi	r16, 0x00	; 0
    24a6:	10 e0       	ldi	r17, 0x00	; 0
    24a8:	98 01       	movw	r18, r16
    24aa:	b9 01       	movw	r22, r18
    24ac:	a8 01       	movw	r20, r16
    24ae:	ce 01       	movw	r24, r28
    24b0:	8f 59       	subi	r24, 0x9F	; 159
    24b2:	9f 4f       	sbci	r25, 0xFF	; 255
    24b4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    24b8:	00 e0       	ldi	r16, 0x00	; 0
    24ba:	10 e0       	ldi	r17, 0x00	; 0
    24bc:	98 01       	movw	r18, r16
    24be:	b9 01       	movw	r22, r18
    24c0:	a8 01       	movw	r20, r16
    24c2:	ce 01       	movw	r24, r28
    24c4:	87 59       	subi	r24, 0x97	; 151
    24c6:	9f 4f       	sbci	r25, 0xFF	; 255
    24c8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    24cc:	00 e0       	ldi	r16, 0x00	; 0
    24ce:	10 e0       	ldi	r17, 0x00	; 0
    24d0:	98 01       	movw	r18, r16
    24d2:	b9 01       	movw	r22, r18
    24d4:	a8 01       	movw	r20, r16
    24d6:	ce 01       	movw	r24, r28
    24d8:	8f 58       	subi	r24, 0x8F	; 143
    24da:	9f 4f       	sbci	r25, 0xFF	; 255
    24dc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    24e0:	00 e0       	ldi	r16, 0x00	; 0
    24e2:	10 e0       	ldi	r17, 0x00	; 0
    24e4:	98 01       	movw	r18, r16
    24e6:	40 e0       	ldi	r20, 0x00	; 0
    24e8:	50 e0       	ldi	r21, 0x00	; 0
    24ea:	60 e8       	ldi	r22, 0x80	; 128
    24ec:	7f e3       	ldi	r23, 0x3F	; 63
    24ee:	ce 01       	movw	r24, r28
    24f0:	87 58       	subi	r24, 0x87	; 135
    24f2:	9f 4f       	sbci	r25, 0xFF	; 255
    24f4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
    24f8:	cb 57       	subi	r28, 0x7B	; 123
    24fa:	df 4f       	sbci	r29, 0xFF	; 255
    24fc:	79 82       	std	Y+1, r7	; 0x01
    24fe:	68 82       	st	Y, r6
    2500:	c5 58       	subi	r28, 0x85	; 133
    2502:	d0 40       	sbci	r29, 0x00	; 0
    2504:	c9 57       	subi	r28, 0x79	; 121
    2506:	df 4f       	sbci	r29, 0xFF	; 255
    2508:	99 82       	std	Y+1, r9	; 0x01
    250a:	88 82       	st	Y, r8
    250c:	c7 58       	subi	r28, 0x87	; 135
    250e:	d0 40       	sbci	r29, 0x00	; 0
    2510:	cf 57       	subi	r28, 0x7F	; 127
    2512:	df 4f       	sbci	r29, 0xFF	; 255
    2514:	b9 82       	std	Y+1, r11	; 0x01
    2516:	a8 82       	st	Y, r10
    2518:	c1 58       	subi	r28, 0x81	; 129
    251a:	d0 40       	sbci	r29, 0x00	; 0
    251c:	cd 57       	subi	r28, 0x7D	; 125
    251e:	df 4f       	sbci	r29, 0xFF	; 255
    2520:	d9 82       	std	Y+1, r13	; 0x01
    2522:	c8 82       	st	Y, r12
    2524:	c3 58       	subi	r28, 0x83	; 131
    2526:	d0 40       	sbci	r29, 0x00	; 0
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),dec_matrix),QB_SIZE2);
    2528:	9e 01       	movw	r18, r28
    252a:	2f 57       	subi	r18, 0x7F	; 127
    252c:	3f 4f       	sbci	r19, 0xFF	; 255
    252e:	ae 01       	movw	r20, r28
    2530:	4b 57       	subi	r20, 0x7B	; 123
    2532:	5f 4f       	sbci	r21, 0xFF	; 255
    2534:	62 e0       	ldi	r22, 0x02	; 2
    2536:	70 e0       	ldi	r23, 0x00	; 0
    2538:	c7 01       	movw	r24, r14
    253a:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    253e:	ae 01       	movw	r20, r28
    2540:	4f 5f       	subi	r20, 0xFF	; 255
    2542:	5f 4f       	sbci	r21, 0xFF	; 255
    2544:	bc 01       	movw	r22, r24
    2546:	c7 01       	movw	r24, r14
    2548:	0e 94 e7 07 	call	0xfce	; 0xfce <_ZN5Gates11multiply4x4EP7ComplexPA4_S0_>
    254c:	42 e0       	ldi	r20, 0x02	; 2
    254e:	50 e0       	ldi	r21, 0x00	; 0
    2550:	bc 01       	movw	r22, r24
    2552:	c7 01       	movw	r24, r14
    2554:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    2558:	c8 57       	subi	r28, 0x78	; 120
    255a:	df 4f       	sbci	r29, 0xFF	; 255
    255c:	0f b6       	in	r0, 0x3f	; 63
    255e:	f8 94       	cli
    2560:	de bf       	out	0x3e, r29	; 62
    2562:	0f be       	out	0x3f, r0	; 63
    2564:	cd bf       	out	0x3d, r28	; 61
    2566:	df 91       	pop	r29
    2568:	cf 91       	pop	r28
    256a:	1f 91       	pop	r17
    256c:	0f 91       	pop	r16
    256e:	ff 90       	pop	r15
    2570:	ef 90       	pop	r14
    2572:	df 90       	pop	r13
    2574:	cf 90       	pop	r12
    2576:	bf 90       	pop	r11
    2578:	af 90       	pop	r10
    257a:	9f 90       	pop	r9
    257c:	8f 90       	pop	r8
    257e:	7f 90       	pop	r7
    2580:	6f 90       	pop	r6
    2582:	08 95       	ret

00002584 <_ZN5Gates3ROXEiii>:
int * Gates::ROX(int theta,int phi,int delta){
    2584:	2f 92       	push	r2
    2586:	3f 92       	push	r3
    2588:	4f 92       	push	r4
    258a:	5f 92       	push	r5
    258c:	6f 92       	push	r6
    258e:	7f 92       	push	r7
    2590:	8f 92       	push	r8
    2592:	9f 92       	push	r9
    2594:	af 92       	push	r10
    2596:	bf 92       	push	r11
    2598:	cf 92       	push	r12
    259a:	df 92       	push	r13
    259c:	ef 92       	push	r14
    259e:	ff 92       	push	r15
    25a0:	0f 93       	push	r16
    25a2:	1f 93       	push	r17
    25a4:	cf 93       	push	r28
    25a6:	df 93       	push	r29
    25a8:	cd b7       	in	r28, 0x3d	; 61
    25aa:	de b7       	in	r29, 0x3e	; 62
    25ac:	a4 97       	sbiw	r28, 0x24	; 36
    25ae:	0f b6       	in	r0, 0x3f	; 63
    25b0:	f8 94       	cli
    25b2:	de bf       	out	0x3e, r29	; 62
    25b4:	0f be       	out	0x3f, r0	; 63
    25b6:	cd bf       	out	0x3d, r28	; 61
    25b8:	7c 01       	movw	r14, r24
    25ba:	1b 01       	movw	r2, r22
    25bc:	6a 01       	movw	r12, r20
	float delta_float=(delta*M_PI)/180;
    25be:	b9 01       	movw	r22, r18
    25c0:	88 27       	eor	r24, r24
    25c2:	77 fd       	sbrc	r23, 7
    25c4:	80 95       	com	r24
    25c6:	98 2f       	mov	r25, r24
    25c8:	0e 94 2c 2f 	call	0x5e58	; 0x5e58 <__floatsisf>
    25cc:	2b ed       	ldi	r18, 0xDB	; 219
    25ce:	3f e0       	ldi	r19, 0x0F	; 15
    25d0:	49 e4       	ldi	r20, 0x49	; 73
    25d2:	50 e4       	ldi	r21, 0x40	; 64
    25d4:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
    25d8:	20 e0       	ldi	r18, 0x00	; 0
    25da:	30 e0       	ldi	r19, 0x00	; 0
    25dc:	44 e3       	ldi	r20, 0x34	; 52
    25de:	53 e4       	ldi	r21, 0x43	; 67
    25e0:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <__divsf3>
	Complex rox_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(cos(delta_float/2),0), Complex(0,-sin(delta_float/2))},
    25e4:	20 e0       	ldi	r18, 0x00	; 0
    25e6:	30 e0       	ldi	r19, 0x00	; 0
    25e8:	40 e0       	ldi	r20, 0x00	; 0
    25ea:	5f e3       	ldi	r21, 0x3F	; 63
    25ec:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
    25f0:	4b 01       	movw	r8, r22
    25f2:	5c 01       	movw	r10, r24
    25f4:	0e 94 5d 2e 	call	0x5cba	; 0x5cba <cos>
    25f8:	2b 01       	movw	r4, r22
    25fa:	3c 01       	movw	r6, r24
														 {Complex(0,-sin(delta_float/2)),Complex(cos(delta_float/2),0)}};
    25fc:	00 e0       	ldi	r16, 0x00	; 0
    25fe:	10 e0       	ldi	r17, 0x00	; 0
    2600:	98 01       	movw	r18, r16
    2602:	ab 01       	movw	r20, r22
    2604:	bc 01       	movw	r22, r24
    2606:	ce 01       	movw	r24, r28
    2608:	01 96       	adiw	r24, 0x01	; 1
    260a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE2]={theta1,theta2}; int phi_list[QB_SIZE2]={phi1,phi2};
	return vec2ampl(multiply4x4(ampl2vec(QB_SIZE2,theta_list,phi_list),dec_matrix),QB_SIZE2);
}
int * Gates::ROX(int theta,int phi,int delta){
	float delta_float=(delta*M_PI)/180;
	Complex rox_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(cos(delta_float/2),0), Complex(0,-sin(delta_float/2))},
    260e:	c5 01       	movw	r24, r10
    2610:	b4 01       	movw	r22, r8
    2612:	0e 94 71 31 	call	0x62e2	; 0x62e2 <sin>
														 {Complex(0,-sin(delta_float/2)),Complex(cos(delta_float/2),0)}};
    2616:	4b 01       	movw	r8, r22
    2618:	5c 01       	movw	r10, r24
    261a:	b7 fa       	bst	r11, 7
    261c:	b0 94       	com	r11
    261e:	b7 f8       	bld	r11, 7
    2620:	b0 94       	com	r11
    2622:	95 01       	movw	r18, r10
    2624:	84 01       	movw	r16, r8
    2626:	40 e0       	ldi	r20, 0x00	; 0
    2628:	50 e0       	ldi	r21, 0x00	; 0
    262a:	ba 01       	movw	r22, r20
    262c:	ce 01       	movw	r24, r28
    262e:	09 96       	adiw	r24, 0x09	; 9
    2630:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2634:	95 01       	movw	r18, r10
    2636:	84 01       	movw	r16, r8
    2638:	40 e0       	ldi	r20, 0x00	; 0
    263a:	50 e0       	ldi	r21, 0x00	; 0
    263c:	ba 01       	movw	r22, r20
    263e:	ce 01       	movw	r24, r28
    2640:	41 96       	adiw	r24, 0x11	; 17
    2642:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2646:	00 e0       	ldi	r16, 0x00	; 0
    2648:	10 e0       	ldi	r17, 0x00	; 0
    264a:	98 01       	movw	r18, r16
    264c:	b3 01       	movw	r22, r6
    264e:	a2 01       	movw	r20, r4
    2650:	ce 01       	movw	r24, r28
    2652:	49 96       	adiw	r24, 0x19	; 25
    2654:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    2658:	3c a2       	std	Y+36, r3	; 0x24
    265a:	2b a2       	std	Y+35, r2	; 0x23
    265c:	da a2       	std	Y+34, r13	; 0x22
    265e:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),rox_matrix),QB_SIZE1);		
    2660:	9e 01       	movw	r18, r28
    2662:	2f 5d       	subi	r18, 0xDF	; 223
    2664:	3f 4f       	sbci	r19, 0xFF	; 255
    2666:	ae 01       	movw	r20, r28
    2668:	4d 5d       	subi	r20, 0xDD	; 221
    266a:	5f 4f       	sbci	r21, 0xFF	; 255
    266c:	61 e0       	ldi	r22, 0x01	; 1
    266e:	70 e0       	ldi	r23, 0x00	; 0
    2670:	c7 01       	movw	r24, r14
    2672:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    2676:	ae 01       	movw	r20, r28
    2678:	4f 5f       	subi	r20, 0xFF	; 255
    267a:	5f 4f       	sbci	r21, 0xFF	; 255
    267c:	bc 01       	movw	r22, r24
    267e:	c7 01       	movw	r24, r14
    2680:	0e 94 29 07 	call	0xe52	; 0xe52 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    2684:	41 e0       	ldi	r20, 0x01	; 1
    2686:	50 e0       	ldi	r21, 0x00	; 0
    2688:	bc 01       	movw	r22, r24
    268a:	c7 01       	movw	r24, r14
    268c:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    2690:	a4 96       	adiw	r28, 0x24	; 36
    2692:	0f b6       	in	r0, 0x3f	; 63
    2694:	f8 94       	cli
    2696:	de bf       	out	0x3e, r29	; 62
    2698:	0f be       	out	0x3f, r0	; 63
    269a:	cd bf       	out	0x3d, r28	; 61
    269c:	df 91       	pop	r29
    269e:	cf 91       	pop	r28
    26a0:	1f 91       	pop	r17
    26a2:	0f 91       	pop	r16
    26a4:	ff 90       	pop	r15
    26a6:	ef 90       	pop	r14
    26a8:	df 90       	pop	r13
    26aa:	cf 90       	pop	r12
    26ac:	bf 90       	pop	r11
    26ae:	af 90       	pop	r10
    26b0:	9f 90       	pop	r9
    26b2:	8f 90       	pop	r8
    26b4:	7f 90       	pop	r7
    26b6:	6f 90       	pop	r6
    26b8:	5f 90       	pop	r5
    26ba:	4f 90       	pop	r4
    26bc:	3f 90       	pop	r3
    26be:	2f 90       	pop	r2
    26c0:	08 95       	ret

000026c2 <_ZN5Gates3ROYEiii>:
int * Gates::ROY(int theta,int phi,int delta){
    26c2:	2f 92       	push	r2
    26c4:	3f 92       	push	r3
    26c6:	4f 92       	push	r4
    26c8:	5f 92       	push	r5
    26ca:	6f 92       	push	r6
    26cc:	7f 92       	push	r7
    26ce:	8f 92       	push	r8
    26d0:	9f 92       	push	r9
    26d2:	af 92       	push	r10
    26d4:	bf 92       	push	r11
    26d6:	cf 92       	push	r12
    26d8:	df 92       	push	r13
    26da:	ef 92       	push	r14
    26dc:	ff 92       	push	r15
    26de:	0f 93       	push	r16
    26e0:	1f 93       	push	r17
    26e2:	cf 93       	push	r28
    26e4:	df 93       	push	r29
    26e6:	cd b7       	in	r28, 0x3d	; 61
    26e8:	de b7       	in	r29, 0x3e	; 62
    26ea:	a4 97       	sbiw	r28, 0x24	; 36
    26ec:	0f b6       	in	r0, 0x3f	; 63
    26ee:	f8 94       	cli
    26f0:	de bf       	out	0x3e, r29	; 62
    26f2:	0f be       	out	0x3f, r0	; 63
    26f4:	cd bf       	out	0x3d, r28	; 61
    26f6:	7c 01       	movw	r14, r24
    26f8:	1b 01       	movw	r2, r22
    26fa:	6a 01       	movw	r12, r20
	float delta_float=(delta*M_PI)/180;
    26fc:	b9 01       	movw	r22, r18
    26fe:	88 27       	eor	r24, r24
    2700:	77 fd       	sbrc	r23, 7
    2702:	80 95       	com	r24
    2704:	98 2f       	mov	r25, r24
    2706:	0e 94 2c 2f 	call	0x5e58	; 0x5e58 <__floatsisf>
    270a:	2b ed       	ldi	r18, 0xDB	; 219
    270c:	3f e0       	ldi	r19, 0x0F	; 15
    270e:	49 e4       	ldi	r20, 0x49	; 73
    2710:	50 e4       	ldi	r21, 0x40	; 64
    2712:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
    2716:	20 e0       	ldi	r18, 0x00	; 0
    2718:	30 e0       	ldi	r19, 0x00	; 0
    271a:	44 e3       	ldi	r20, 0x34	; 52
    271c:	53 e4       	ldi	r21, 0x43	; 67
    271e:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <__divsf3>
	Complex roy_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(cos(delta_float/2),0),Complex(-sin(delta_float/2),0)},
    2722:	20 e0       	ldi	r18, 0x00	; 0
    2724:	30 e0       	ldi	r19, 0x00	; 0
    2726:	40 e0       	ldi	r20, 0x00	; 0
    2728:	5f e3       	ldi	r21, 0x3F	; 63
    272a:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
    272e:	4b 01       	movw	r8, r22
    2730:	5c 01       	movw	r10, r24
    2732:	0e 94 5d 2e 	call	0x5cba	; 0x5cba <cos>
    2736:	2b 01       	movw	r4, r22
    2738:	3c 01       	movw	r6, r24
														 {Complex(sin(delta_float/2),0),Complex(cos(delta_float/2),0)}};
    273a:	00 e0       	ldi	r16, 0x00	; 0
    273c:	10 e0       	ldi	r17, 0x00	; 0
    273e:	98 01       	movw	r18, r16
    2740:	ab 01       	movw	r20, r22
    2742:	bc 01       	movw	r22, r24
    2744:	ce 01       	movw	r24, r28
    2746:	01 96       	adiw	r24, 0x01	; 1
    2748:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),rox_matrix),QB_SIZE1);		
}
int * Gates::ROY(int theta,int phi,int delta){
	float delta_float=(delta*M_PI)/180;
	Complex roy_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(cos(delta_float/2),0),Complex(-sin(delta_float/2),0)},
    274c:	c5 01       	movw	r24, r10
    274e:	b4 01       	movw	r22, r8
    2750:	0e 94 71 31 	call	0x62e2	; 0x62e2 <sin>
    2754:	4b 01       	movw	r8, r22
    2756:	5c 01       	movw	r10, r24
														 {Complex(sin(delta_float/2),0),Complex(cos(delta_float/2),0)}};
    2758:	ab 01       	movw	r20, r22
    275a:	bc 01       	movw	r22, r24
    275c:	70 58       	subi	r23, 0x80	; 128
    275e:	00 e0       	ldi	r16, 0x00	; 0
    2760:	10 e0       	ldi	r17, 0x00	; 0
    2762:	98 01       	movw	r18, r16
    2764:	ce 01       	movw	r24, r28
    2766:	09 96       	adiw	r24, 0x09	; 9
    2768:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    276c:	00 e0       	ldi	r16, 0x00	; 0
    276e:	10 e0       	ldi	r17, 0x00	; 0
    2770:	98 01       	movw	r18, r16
    2772:	b5 01       	movw	r22, r10
    2774:	a4 01       	movw	r20, r8
    2776:	ce 01       	movw	r24, r28
    2778:	41 96       	adiw	r24, 0x11	; 17
    277a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    277e:	00 e0       	ldi	r16, 0x00	; 0
    2780:	10 e0       	ldi	r17, 0x00	; 0
    2782:	98 01       	movw	r18, r16
    2784:	b3 01       	movw	r22, r6
    2786:	a2 01       	movw	r20, r4
    2788:	ce 01       	movw	r24, r28
    278a:	49 96       	adiw	r24, 0x19	; 25
    278c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    2790:	3c a2       	std	Y+36, r3	; 0x24
    2792:	2b a2       	std	Y+35, r2	; 0x23
    2794:	da a2       	std	Y+34, r13	; 0x22
    2796:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),roy_matrix),QB_SIZE1);
    2798:	9e 01       	movw	r18, r28
    279a:	2f 5d       	subi	r18, 0xDF	; 223
    279c:	3f 4f       	sbci	r19, 0xFF	; 255
    279e:	ae 01       	movw	r20, r28
    27a0:	4d 5d       	subi	r20, 0xDD	; 221
    27a2:	5f 4f       	sbci	r21, 0xFF	; 255
    27a4:	61 e0       	ldi	r22, 0x01	; 1
    27a6:	70 e0       	ldi	r23, 0x00	; 0
    27a8:	c7 01       	movw	r24, r14
    27aa:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    27ae:	ae 01       	movw	r20, r28
    27b0:	4f 5f       	subi	r20, 0xFF	; 255
    27b2:	5f 4f       	sbci	r21, 0xFF	; 255
    27b4:	bc 01       	movw	r22, r24
    27b6:	c7 01       	movw	r24, r14
    27b8:	0e 94 29 07 	call	0xe52	; 0xe52 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    27bc:	41 e0       	ldi	r20, 0x01	; 1
    27be:	50 e0       	ldi	r21, 0x00	; 0
    27c0:	bc 01       	movw	r22, r24
    27c2:	c7 01       	movw	r24, r14
    27c4:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    27c8:	a4 96       	adiw	r28, 0x24	; 36
    27ca:	0f b6       	in	r0, 0x3f	; 63
    27cc:	f8 94       	cli
    27ce:	de bf       	out	0x3e, r29	; 62
    27d0:	0f be       	out	0x3f, r0	; 63
    27d2:	cd bf       	out	0x3d, r28	; 61
    27d4:	df 91       	pop	r29
    27d6:	cf 91       	pop	r28
    27d8:	1f 91       	pop	r17
    27da:	0f 91       	pop	r16
    27dc:	ff 90       	pop	r15
    27de:	ef 90       	pop	r14
    27e0:	df 90       	pop	r13
    27e2:	cf 90       	pop	r12
    27e4:	bf 90       	pop	r11
    27e6:	af 90       	pop	r10
    27e8:	9f 90       	pop	r9
    27ea:	8f 90       	pop	r8
    27ec:	7f 90       	pop	r7
    27ee:	6f 90       	pop	r6
    27f0:	5f 90       	pop	r5
    27f2:	4f 90       	pop	r4
    27f4:	3f 90       	pop	r3
    27f6:	2f 90       	pop	r2
    27f8:	08 95       	ret

000027fa <_ZN5Gates3ROZEiii>:
int * Gates::ROZ(int theta,int phi,int delta){
    27fa:	4f 92       	push	r4
    27fc:	5f 92       	push	r5
    27fe:	6f 92       	push	r6
    2800:	7f 92       	push	r7
    2802:	af 92       	push	r10
    2804:	bf 92       	push	r11
    2806:	cf 92       	push	r12
    2808:	df 92       	push	r13
    280a:	ef 92       	push	r14
    280c:	ff 92       	push	r15
    280e:	0f 93       	push	r16
    2810:	1f 93       	push	r17
    2812:	cf 93       	push	r28
    2814:	df 93       	push	r29
    2816:	cd b7       	in	r28, 0x3d	; 61
    2818:	de b7       	in	r29, 0x3e	; 62
    281a:	a4 97       	sbiw	r28, 0x24	; 36
    281c:	0f b6       	in	r0, 0x3f	; 63
    281e:	f8 94       	cli
    2820:	de bf       	out	0x3e, r29	; 62
    2822:	0f be       	out	0x3f, r0	; 63
    2824:	cd bf       	out	0x3d, r28	; 61
    2826:	7c 01       	movw	r14, r24
    2828:	5b 01       	movw	r10, r22
    282a:	6a 01       	movw	r12, r20
	float delta_float=(delta*M_PI)/180;
    282c:	b9 01       	movw	r22, r18
    282e:	88 27       	eor	r24, r24
    2830:	77 fd       	sbrc	r23, 7
    2832:	80 95       	com	r24
    2834:	98 2f       	mov	r25, r24
    2836:	0e 94 2c 2f 	call	0x5e58	; 0x5e58 <__floatsisf>
    283a:	2b ed       	ldi	r18, 0xDB	; 219
    283c:	3f e0       	ldi	r19, 0x0F	; 15
    283e:	49 e4       	ldi	r20, 0x49	; 73
    2840:	50 e4       	ldi	r21, 0x40	; 64
    2842:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
    2846:	20 e0       	ldi	r18, 0x00	; 0
    2848:	30 e0       	ldi	r19, 0x00	; 0
    284a:	44 e3       	ldi	r20, 0x34	; 52
    284c:	53 e4       	ldi	r21, 0x43	; 67
    284e:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <__divsf3>
    2852:	2b 01       	movw	r4, r22
    2854:	3c 01       	movw	r6, r24
	Complex roy_matrix[QB1_MATRIX_SIZE][QB1_MATRIX_SIZE]{{Complex(0,exp(-delta_float/2)),Complex(0,0)},
    2856:	90 58       	subi	r25, 0x80	; 128
    2858:	20 e0       	ldi	r18, 0x00	; 0
    285a:	30 e0       	ldi	r19, 0x00	; 0
    285c:	40 e0       	ldi	r20, 0x00	; 0
    285e:	5f e3       	ldi	r21, 0x3F	; 63
    2860:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
    2864:	0e 94 cd 2e 	call	0x5d9a	; 0x5d9a <exp>
    2868:	8b 01       	movw	r16, r22
    286a:	9c 01       	movw	r18, r24
														 {Complex(0,0),		  		     Complex(0,exp(delta_float/2))}};
    286c:	40 e0       	ldi	r20, 0x00	; 0
    286e:	50 e0       	ldi	r21, 0x00	; 0
    2870:	ba 01       	movw	r22, r20
    2872:	ce 01       	movw	r24, r28
    2874:	01 96       	adiw	r24, 0x01	; 1
    2876:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    287a:	00 e0       	ldi	r16, 0x00	; 0
    287c:	10 e0       	ldi	r17, 0x00	; 0
    287e:	98 01       	movw	r18, r16
    2880:	b9 01       	movw	r22, r18
    2882:	a8 01       	movw	r20, r16
    2884:	ce 01       	movw	r24, r28
    2886:	09 96       	adiw	r24, 0x09	; 9
    2888:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    288c:	00 e0       	ldi	r16, 0x00	; 0
    288e:	10 e0       	ldi	r17, 0x00	; 0
    2890:	98 01       	movw	r18, r16
    2892:	b9 01       	movw	r22, r18
    2894:	a8 01       	movw	r20, r16
    2896:	ce 01       	movw	r24, r28
    2898:	41 96       	adiw	r24, 0x11	; 17
    289a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    289e:	20 e0       	ldi	r18, 0x00	; 0
    28a0:	30 e0       	ldi	r19, 0x00	; 0
    28a2:	40 e0       	ldi	r20, 0x00	; 0
    28a4:	5f e3       	ldi	r21, 0x3F	; 63
    28a6:	c3 01       	movw	r24, r6
    28a8:	b2 01       	movw	r22, r4
    28aa:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
    28ae:	0e 94 cd 2e 	call	0x5d9a	; 0x5d9a <exp>
    28b2:	8b 01       	movw	r16, r22
    28b4:	9c 01       	movw	r18, r24
    28b6:	40 e0       	ldi	r20, 0x00	; 0
    28b8:	50 e0       	ldi	r21, 0x00	; 0
    28ba:	ba 01       	movw	r22, r20
    28bc:	ce 01       	movw	r24, r28
    28be:	49 96       	adiw	r24, 0x19	; 25
    28c0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE1]={theta}; int phi_list[QB_SIZE1]={phi};
    28c4:	bc a2       	std	Y+36, r11	; 0x24
    28c6:	ab a2       	std	Y+35, r10	; 0x23
    28c8:	da a2       	std	Y+34, r13	; 0x22
    28ca:	c9 a2       	std	Y+33, r12	; 0x21
	return vec2ampl(multiply2x2(ampl2vec(QB_SIZE1,theta_list,phi_list),roy_matrix),QB_SIZE1);
    28cc:	9e 01       	movw	r18, r28
    28ce:	2f 5d       	subi	r18, 0xDF	; 223
    28d0:	3f 4f       	sbci	r19, 0xFF	; 255
    28d2:	ae 01       	movw	r20, r28
    28d4:	4d 5d       	subi	r20, 0xDD	; 221
    28d6:	5f 4f       	sbci	r21, 0xFF	; 255
    28d8:	61 e0       	ldi	r22, 0x01	; 1
    28da:	70 e0       	ldi	r23, 0x00	; 0
    28dc:	c7 01       	movw	r24, r14
    28de:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    28e2:	ae 01       	movw	r20, r28
    28e4:	4f 5f       	subi	r20, 0xFF	; 255
    28e6:	5f 4f       	sbci	r21, 0xFF	; 255
    28e8:	bc 01       	movw	r22, r24
    28ea:	c7 01       	movw	r24, r14
    28ec:	0e 94 29 07 	call	0xe52	; 0xe52 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
    28f0:	41 e0       	ldi	r20, 0x01	; 1
    28f2:	50 e0       	ldi	r21, 0x00	; 0
    28f4:	bc 01       	movw	r22, r24
    28f6:	c7 01       	movw	r24, r14
    28f8:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    28fc:	a4 96       	adiw	r28, 0x24	; 36
    28fe:	0f b6       	in	r0, 0x3f	; 63
    2900:	f8 94       	cli
    2902:	de bf       	out	0x3e, r29	; 62
    2904:	0f be       	out	0x3f, r0	; 63
    2906:	cd bf       	out	0x3d, r28	; 61
    2908:	df 91       	pop	r29
    290a:	cf 91       	pop	r28
    290c:	1f 91       	pop	r17
    290e:	0f 91       	pop	r16
    2910:	ff 90       	pop	r15
    2912:	ef 90       	pop	r14
    2914:	df 90       	pop	r13
    2916:	cf 90       	pop	r12
    2918:	bf 90       	pop	r11
    291a:	af 90       	pop	r10
    291c:	7f 90       	pop	r7
    291e:	6f 90       	pop	r6
    2920:	5f 90       	pop	r5
    2922:	4f 90       	pop	r4
    2924:	08 95       	ret

00002926 <_ZN5Gates3CSWEiiiiii>:
int * Gates::CSW(int theta1, int phi1,int theta2,int phi2,int theta3,int phi3){
    2926:	2f 92       	push	r2
    2928:	3f 92       	push	r3
    292a:	4f 92       	push	r4
    292c:	5f 92       	push	r5
    292e:	6f 92       	push	r6
    2930:	7f 92       	push	r7
    2932:	8f 92       	push	r8
    2934:	9f 92       	push	r9
    2936:	af 92       	push	r10
    2938:	bf 92       	push	r11
    293a:	cf 92       	push	r12
    293c:	df 92       	push	r13
    293e:	ef 92       	push	r14
    2940:	ff 92       	push	r15
    2942:	0f 93       	push	r16
    2944:	1f 93       	push	r17
    2946:	cf 93       	push	r28
    2948:	df 93       	push	r29
    294a:	cd b7       	in	r28, 0x3d	; 61
    294c:	de b7       	in	r29, 0x3e	; 62
    294e:	cc 50       	subi	r28, 0x0C	; 12
    2950:	d2 40       	sbci	r29, 0x02	; 2
    2952:	0f b6       	in	r0, 0x3f	; 63
    2954:	f8 94       	cli
    2956:	de bf       	out	0x3e, r29	; 62
    2958:	0f be       	out	0x3f, r0	; 63
    295a:	cd bf       	out	0x3d, r28	; 61
    295c:	5c 01       	movw	r10, r24
    295e:	3b 01       	movw	r6, r22
    2960:	2a 01       	movw	r4, r20
    2962:	49 01       	movw	r8, r18
    2964:	18 01       	movw	r2, r16
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)}};
    2966:	00 e0       	ldi	r16, 0x00	; 0
    2968:	10 e0       	ldi	r17, 0x00	; 0
    296a:	98 01       	movw	r18, r16
    296c:	40 e0       	ldi	r20, 0x00	; 0
    296e:	50 e0       	ldi	r21, 0x00	; 0
    2970:	60 e8       	ldi	r22, 0x80	; 128
    2972:	7f e3       	ldi	r23, 0x3F	; 63
    2974:	ce 01       	movw	r24, r28
    2976:	01 96       	adiw	r24, 0x01	; 1
    2978:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    297c:	00 e0       	ldi	r16, 0x00	; 0
    297e:	10 e0       	ldi	r17, 0x00	; 0
    2980:	98 01       	movw	r18, r16
    2982:	b9 01       	movw	r22, r18
    2984:	a8 01       	movw	r20, r16
    2986:	ce 01       	movw	r24, r28
    2988:	09 96       	adiw	r24, 0x09	; 9
    298a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    298e:	00 e0       	ldi	r16, 0x00	; 0
    2990:	10 e0       	ldi	r17, 0x00	; 0
    2992:	98 01       	movw	r18, r16
    2994:	b9 01       	movw	r22, r18
    2996:	a8 01       	movw	r20, r16
    2998:	ce 01       	movw	r24, r28
    299a:	41 96       	adiw	r24, 0x11	; 17
    299c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    29a0:	00 e0       	ldi	r16, 0x00	; 0
    29a2:	10 e0       	ldi	r17, 0x00	; 0
    29a4:	98 01       	movw	r18, r16
    29a6:	b9 01       	movw	r22, r18
    29a8:	a8 01       	movw	r20, r16
    29aa:	ce 01       	movw	r24, r28
    29ac:	49 96       	adiw	r24, 0x19	; 25
    29ae:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    29b2:	00 e0       	ldi	r16, 0x00	; 0
    29b4:	10 e0       	ldi	r17, 0x00	; 0
    29b6:	98 01       	movw	r18, r16
    29b8:	b9 01       	movw	r22, r18
    29ba:	a8 01       	movw	r20, r16
    29bc:	ce 01       	movw	r24, r28
    29be:	81 96       	adiw	r24, 0x21	; 33
    29c0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    29c4:	00 e0       	ldi	r16, 0x00	; 0
    29c6:	10 e0       	ldi	r17, 0x00	; 0
    29c8:	98 01       	movw	r18, r16
    29ca:	b9 01       	movw	r22, r18
    29cc:	a8 01       	movw	r20, r16
    29ce:	ce 01       	movw	r24, r28
    29d0:	89 96       	adiw	r24, 0x29	; 41
    29d2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    29d6:	00 e0       	ldi	r16, 0x00	; 0
    29d8:	10 e0       	ldi	r17, 0x00	; 0
    29da:	98 01       	movw	r18, r16
    29dc:	b9 01       	movw	r22, r18
    29de:	a8 01       	movw	r20, r16
    29e0:	ce 01       	movw	r24, r28
    29e2:	c1 96       	adiw	r24, 0x31	; 49
    29e4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    29e8:	00 e0       	ldi	r16, 0x00	; 0
    29ea:	10 e0       	ldi	r17, 0x00	; 0
    29ec:	98 01       	movw	r18, r16
    29ee:	b9 01       	movw	r22, r18
    29f0:	a8 01       	movw	r20, r16
    29f2:	ce 01       	movw	r24, r28
    29f4:	c9 96       	adiw	r24, 0x39	; 57
    29f6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    29fa:	00 e0       	ldi	r16, 0x00	; 0
    29fc:	10 e0       	ldi	r17, 0x00	; 0
    29fe:	98 01       	movw	r18, r16
    2a00:	b9 01       	movw	r22, r18
    2a02:	a8 01       	movw	r20, r16
    2a04:	ce 01       	movw	r24, r28
    2a06:	8f 5b       	subi	r24, 0xBF	; 191
    2a08:	9f 4f       	sbci	r25, 0xFF	; 255
    2a0a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2a0e:	00 e0       	ldi	r16, 0x00	; 0
    2a10:	10 e0       	ldi	r17, 0x00	; 0
    2a12:	98 01       	movw	r18, r16
    2a14:	40 e0       	ldi	r20, 0x00	; 0
    2a16:	50 e0       	ldi	r21, 0x00	; 0
    2a18:	60 e8       	ldi	r22, 0x80	; 128
    2a1a:	7f e3       	ldi	r23, 0x3F	; 63
    2a1c:	ce 01       	movw	r24, r28
    2a1e:	87 5b       	subi	r24, 0xB7	; 183
    2a20:	9f 4f       	sbci	r25, 0xFF	; 255
    2a22:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2a26:	00 e0       	ldi	r16, 0x00	; 0
    2a28:	10 e0       	ldi	r17, 0x00	; 0
    2a2a:	98 01       	movw	r18, r16
    2a2c:	b9 01       	movw	r22, r18
    2a2e:	a8 01       	movw	r20, r16
    2a30:	ce 01       	movw	r24, r28
    2a32:	8f 5a       	subi	r24, 0xAF	; 175
    2a34:	9f 4f       	sbci	r25, 0xFF	; 255
    2a36:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2a3a:	00 e0       	ldi	r16, 0x00	; 0
    2a3c:	10 e0       	ldi	r17, 0x00	; 0
    2a3e:	98 01       	movw	r18, r16
    2a40:	b9 01       	movw	r22, r18
    2a42:	a8 01       	movw	r20, r16
    2a44:	ce 01       	movw	r24, r28
    2a46:	87 5a       	subi	r24, 0xA7	; 167
    2a48:	9f 4f       	sbci	r25, 0xFF	; 255
    2a4a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2a4e:	00 e0       	ldi	r16, 0x00	; 0
    2a50:	10 e0       	ldi	r17, 0x00	; 0
    2a52:	98 01       	movw	r18, r16
    2a54:	b9 01       	movw	r22, r18
    2a56:	a8 01       	movw	r20, r16
    2a58:	ce 01       	movw	r24, r28
    2a5a:	8f 59       	subi	r24, 0x9F	; 159
    2a5c:	9f 4f       	sbci	r25, 0xFF	; 255
    2a5e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2a62:	00 e0       	ldi	r16, 0x00	; 0
    2a64:	10 e0       	ldi	r17, 0x00	; 0
    2a66:	98 01       	movw	r18, r16
    2a68:	b9 01       	movw	r22, r18
    2a6a:	a8 01       	movw	r20, r16
    2a6c:	ce 01       	movw	r24, r28
    2a6e:	87 59       	subi	r24, 0x97	; 151
    2a70:	9f 4f       	sbci	r25, 0xFF	; 255
    2a72:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2a76:	00 e0       	ldi	r16, 0x00	; 0
    2a78:	10 e0       	ldi	r17, 0x00	; 0
    2a7a:	98 01       	movw	r18, r16
    2a7c:	b9 01       	movw	r22, r18
    2a7e:	a8 01       	movw	r20, r16
    2a80:	ce 01       	movw	r24, r28
    2a82:	8f 58       	subi	r24, 0x8F	; 143
    2a84:	9f 4f       	sbci	r25, 0xFF	; 255
    2a86:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2a8a:	00 e0       	ldi	r16, 0x00	; 0
    2a8c:	10 e0       	ldi	r17, 0x00	; 0
    2a8e:	98 01       	movw	r18, r16
    2a90:	b9 01       	movw	r22, r18
    2a92:	a8 01       	movw	r20, r16
    2a94:	ce 01       	movw	r24, r28
    2a96:	87 58       	subi	r24, 0x87	; 135
    2a98:	9f 4f       	sbci	r25, 0xFF	; 255
    2a9a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2a9e:	00 e0       	ldi	r16, 0x00	; 0
    2aa0:	10 e0       	ldi	r17, 0x00	; 0
    2aa2:	98 01       	movw	r18, r16
    2aa4:	b9 01       	movw	r22, r18
    2aa6:	a8 01       	movw	r20, r16
    2aa8:	ce 01       	movw	r24, r28
    2aaa:	8f 57       	subi	r24, 0x7F	; 127
    2aac:	9f 4f       	sbci	r25, 0xFF	; 255
    2aae:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2ab2:	00 e0       	ldi	r16, 0x00	; 0
    2ab4:	10 e0       	ldi	r17, 0x00	; 0
    2ab6:	98 01       	movw	r18, r16
    2ab8:	b9 01       	movw	r22, r18
    2aba:	a8 01       	movw	r20, r16
    2abc:	ce 01       	movw	r24, r28
    2abe:	87 57       	subi	r24, 0x77	; 119
    2ac0:	9f 4f       	sbci	r25, 0xFF	; 255
    2ac2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2ac6:	00 e0       	ldi	r16, 0x00	; 0
    2ac8:	10 e0       	ldi	r17, 0x00	; 0
    2aca:	98 01       	movw	r18, r16
    2acc:	40 e0       	ldi	r20, 0x00	; 0
    2ace:	50 e0       	ldi	r21, 0x00	; 0
    2ad0:	60 e8       	ldi	r22, 0x80	; 128
    2ad2:	7f e3       	ldi	r23, 0x3F	; 63
    2ad4:	ce 01       	movw	r24, r28
    2ad6:	8f 56       	subi	r24, 0x6F	; 111
    2ad8:	9f 4f       	sbci	r25, 0xFF	; 255
    2ada:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2ade:	00 e0       	ldi	r16, 0x00	; 0
    2ae0:	10 e0       	ldi	r17, 0x00	; 0
    2ae2:	98 01       	movw	r18, r16
    2ae4:	b9 01       	movw	r22, r18
    2ae6:	a8 01       	movw	r20, r16
    2ae8:	ce 01       	movw	r24, r28
    2aea:	87 56       	subi	r24, 0x67	; 103
    2aec:	9f 4f       	sbci	r25, 0xFF	; 255
    2aee:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2af2:	00 e0       	ldi	r16, 0x00	; 0
    2af4:	10 e0       	ldi	r17, 0x00	; 0
    2af6:	98 01       	movw	r18, r16
    2af8:	b9 01       	movw	r22, r18
    2afa:	a8 01       	movw	r20, r16
    2afc:	ce 01       	movw	r24, r28
    2afe:	8f 55       	subi	r24, 0x5F	; 95
    2b00:	9f 4f       	sbci	r25, 0xFF	; 255
    2b02:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2b06:	00 e0       	ldi	r16, 0x00	; 0
    2b08:	10 e0       	ldi	r17, 0x00	; 0
    2b0a:	98 01       	movw	r18, r16
    2b0c:	b9 01       	movw	r22, r18
    2b0e:	a8 01       	movw	r20, r16
    2b10:	ce 01       	movw	r24, r28
    2b12:	87 55       	subi	r24, 0x57	; 87
    2b14:	9f 4f       	sbci	r25, 0xFF	; 255
    2b16:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2b1a:	00 e0       	ldi	r16, 0x00	; 0
    2b1c:	10 e0       	ldi	r17, 0x00	; 0
    2b1e:	98 01       	movw	r18, r16
    2b20:	b9 01       	movw	r22, r18
    2b22:	a8 01       	movw	r20, r16
    2b24:	ce 01       	movw	r24, r28
    2b26:	8f 54       	subi	r24, 0x4F	; 79
    2b28:	9f 4f       	sbci	r25, 0xFF	; 255
    2b2a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2b2e:	00 e0       	ldi	r16, 0x00	; 0
    2b30:	10 e0       	ldi	r17, 0x00	; 0
    2b32:	98 01       	movw	r18, r16
    2b34:	b9 01       	movw	r22, r18
    2b36:	a8 01       	movw	r20, r16
    2b38:	ce 01       	movw	r24, r28
    2b3a:	87 54       	subi	r24, 0x47	; 71
    2b3c:	9f 4f       	sbci	r25, 0xFF	; 255
    2b3e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2b42:	00 e0       	ldi	r16, 0x00	; 0
    2b44:	10 e0       	ldi	r17, 0x00	; 0
    2b46:	98 01       	movw	r18, r16
    2b48:	b9 01       	movw	r22, r18
    2b4a:	a8 01       	movw	r20, r16
    2b4c:	ce 01       	movw	r24, r28
    2b4e:	8f 53       	subi	r24, 0x3F	; 63
    2b50:	9f 4f       	sbci	r25, 0xFF	; 255
    2b52:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2b56:	00 e0       	ldi	r16, 0x00	; 0
    2b58:	10 e0       	ldi	r17, 0x00	; 0
    2b5a:	98 01       	movw	r18, r16
    2b5c:	b9 01       	movw	r22, r18
    2b5e:	a8 01       	movw	r20, r16
    2b60:	ce 01       	movw	r24, r28
    2b62:	87 53       	subi	r24, 0x37	; 55
    2b64:	9f 4f       	sbci	r25, 0xFF	; 255
    2b66:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2b6a:	00 e0       	ldi	r16, 0x00	; 0
    2b6c:	10 e0       	ldi	r17, 0x00	; 0
    2b6e:	98 01       	movw	r18, r16
    2b70:	b9 01       	movw	r22, r18
    2b72:	a8 01       	movw	r20, r16
    2b74:	ce 01       	movw	r24, r28
    2b76:	8f 52       	subi	r24, 0x2F	; 47
    2b78:	9f 4f       	sbci	r25, 0xFF	; 255
    2b7a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2b7e:	00 e0       	ldi	r16, 0x00	; 0
    2b80:	10 e0       	ldi	r17, 0x00	; 0
    2b82:	98 01       	movw	r18, r16
    2b84:	40 e0       	ldi	r20, 0x00	; 0
    2b86:	50 e0       	ldi	r21, 0x00	; 0
    2b88:	60 e8       	ldi	r22, 0x80	; 128
    2b8a:	7f e3       	ldi	r23, 0x3F	; 63
    2b8c:	ce 01       	movw	r24, r28
    2b8e:	87 52       	subi	r24, 0x27	; 39
    2b90:	9f 4f       	sbci	r25, 0xFF	; 255
    2b92:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2b96:	00 e0       	ldi	r16, 0x00	; 0
    2b98:	10 e0       	ldi	r17, 0x00	; 0
    2b9a:	98 01       	movw	r18, r16
    2b9c:	b9 01       	movw	r22, r18
    2b9e:	a8 01       	movw	r20, r16
    2ba0:	ce 01       	movw	r24, r28
    2ba2:	8f 51       	subi	r24, 0x1F	; 31
    2ba4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ba6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2baa:	00 e0       	ldi	r16, 0x00	; 0
    2bac:	10 e0       	ldi	r17, 0x00	; 0
    2bae:	98 01       	movw	r18, r16
    2bb0:	b9 01       	movw	r22, r18
    2bb2:	a8 01       	movw	r20, r16
    2bb4:	ce 01       	movw	r24, r28
    2bb6:	87 51       	subi	r24, 0x17	; 23
    2bb8:	9f 4f       	sbci	r25, 0xFF	; 255
    2bba:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2bbe:	00 e0       	ldi	r16, 0x00	; 0
    2bc0:	10 e0       	ldi	r17, 0x00	; 0
    2bc2:	98 01       	movw	r18, r16
    2bc4:	b9 01       	movw	r22, r18
    2bc6:	a8 01       	movw	r20, r16
    2bc8:	ce 01       	movw	r24, r28
    2bca:	8f 50       	subi	r24, 0x0F	; 15
    2bcc:	9f 4f       	sbci	r25, 0xFF	; 255
    2bce:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2bd2:	00 e0       	ldi	r16, 0x00	; 0
    2bd4:	10 e0       	ldi	r17, 0x00	; 0
    2bd6:	98 01       	movw	r18, r16
    2bd8:	b9 01       	movw	r22, r18
    2bda:	a8 01       	movw	r20, r16
    2bdc:	ce 01       	movw	r24, r28
    2bde:	87 50       	subi	r24, 0x07	; 7
    2be0:	9f 4f       	sbci	r25, 0xFF	; 255
    2be2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2be6:	00 e0       	ldi	r16, 0x00	; 0
    2be8:	10 e0       	ldi	r17, 0x00	; 0
    2bea:	98 01       	movw	r18, r16
    2bec:	b9 01       	movw	r22, r18
    2bee:	a8 01       	movw	r20, r16
    2bf0:	ce 01       	movw	r24, r28
    2bf2:	8f 5f       	subi	r24, 0xFF	; 255
    2bf4:	9e 4f       	sbci	r25, 0xFE	; 254
    2bf6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2bfa:	00 e0       	ldi	r16, 0x00	; 0
    2bfc:	10 e0       	ldi	r17, 0x00	; 0
    2bfe:	98 01       	movw	r18, r16
    2c00:	b9 01       	movw	r22, r18
    2c02:	a8 01       	movw	r20, r16
    2c04:	ce 01       	movw	r24, r28
    2c06:	87 5f       	subi	r24, 0xF7	; 247
    2c08:	9e 4f       	sbci	r25, 0xFE	; 254
    2c0a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2c0e:	00 e0       	ldi	r16, 0x00	; 0
    2c10:	10 e0       	ldi	r17, 0x00	; 0
    2c12:	98 01       	movw	r18, r16
    2c14:	b9 01       	movw	r22, r18
    2c16:	a8 01       	movw	r20, r16
    2c18:	ce 01       	movw	r24, r28
    2c1a:	8f 5e       	subi	r24, 0xEF	; 239
    2c1c:	9e 4f       	sbci	r25, 0xFE	; 254
    2c1e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2c22:	00 e0       	ldi	r16, 0x00	; 0
    2c24:	10 e0       	ldi	r17, 0x00	; 0
    2c26:	98 01       	movw	r18, r16
    2c28:	b9 01       	movw	r22, r18
    2c2a:	a8 01       	movw	r20, r16
    2c2c:	ce 01       	movw	r24, r28
    2c2e:	87 5e       	subi	r24, 0xE7	; 231
    2c30:	9e 4f       	sbci	r25, 0xFE	; 254
    2c32:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2c36:	00 e0       	ldi	r16, 0x00	; 0
    2c38:	10 e0       	ldi	r17, 0x00	; 0
    2c3a:	98 01       	movw	r18, r16
    2c3c:	40 e0       	ldi	r20, 0x00	; 0
    2c3e:	50 e0       	ldi	r21, 0x00	; 0
    2c40:	60 e8       	ldi	r22, 0x80	; 128
    2c42:	7f e3       	ldi	r23, 0x3F	; 63
    2c44:	ce 01       	movw	r24, r28
    2c46:	8f 5d       	subi	r24, 0xDF	; 223
    2c48:	9e 4f       	sbci	r25, 0xFE	; 254
    2c4a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2c4e:	00 e0       	ldi	r16, 0x00	; 0
    2c50:	10 e0       	ldi	r17, 0x00	; 0
    2c52:	98 01       	movw	r18, r16
    2c54:	b9 01       	movw	r22, r18
    2c56:	a8 01       	movw	r20, r16
    2c58:	ce 01       	movw	r24, r28
    2c5a:	87 5d       	subi	r24, 0xD7	; 215
    2c5c:	9e 4f       	sbci	r25, 0xFE	; 254
    2c5e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2c62:	00 e0       	ldi	r16, 0x00	; 0
    2c64:	10 e0       	ldi	r17, 0x00	; 0
    2c66:	98 01       	movw	r18, r16
    2c68:	b9 01       	movw	r22, r18
    2c6a:	a8 01       	movw	r20, r16
    2c6c:	ce 01       	movw	r24, r28
    2c6e:	8f 5c       	subi	r24, 0xCF	; 207
    2c70:	9e 4f       	sbci	r25, 0xFE	; 254
    2c72:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2c76:	00 e0       	ldi	r16, 0x00	; 0
    2c78:	10 e0       	ldi	r17, 0x00	; 0
    2c7a:	98 01       	movw	r18, r16
    2c7c:	b9 01       	movw	r22, r18
    2c7e:	a8 01       	movw	r20, r16
    2c80:	ce 01       	movw	r24, r28
    2c82:	87 5c       	subi	r24, 0xC7	; 199
    2c84:	9e 4f       	sbci	r25, 0xFE	; 254
    2c86:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2c8a:	00 e0       	ldi	r16, 0x00	; 0
    2c8c:	10 e0       	ldi	r17, 0x00	; 0
    2c8e:	98 01       	movw	r18, r16
    2c90:	b9 01       	movw	r22, r18
    2c92:	a8 01       	movw	r20, r16
    2c94:	ce 01       	movw	r24, r28
    2c96:	8f 5b       	subi	r24, 0xBF	; 191
    2c98:	9e 4f       	sbci	r25, 0xFE	; 254
    2c9a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2c9e:	00 e0       	ldi	r16, 0x00	; 0
    2ca0:	10 e0       	ldi	r17, 0x00	; 0
    2ca2:	98 01       	movw	r18, r16
    2ca4:	b9 01       	movw	r22, r18
    2ca6:	a8 01       	movw	r20, r16
    2ca8:	ce 01       	movw	r24, r28
    2caa:	87 5b       	subi	r24, 0xB7	; 183
    2cac:	9e 4f       	sbci	r25, 0xFE	; 254
    2cae:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2cb2:	00 e0       	ldi	r16, 0x00	; 0
    2cb4:	10 e0       	ldi	r17, 0x00	; 0
    2cb6:	98 01       	movw	r18, r16
    2cb8:	b9 01       	movw	r22, r18
    2cba:	a8 01       	movw	r20, r16
    2cbc:	ce 01       	movw	r24, r28
    2cbe:	8f 5a       	subi	r24, 0xAF	; 175
    2cc0:	9e 4f       	sbci	r25, 0xFE	; 254
    2cc2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2cc6:	00 e0       	ldi	r16, 0x00	; 0
    2cc8:	10 e0       	ldi	r17, 0x00	; 0
    2cca:	98 01       	movw	r18, r16
    2ccc:	b9 01       	movw	r22, r18
    2cce:	a8 01       	movw	r20, r16
    2cd0:	ce 01       	movw	r24, r28
    2cd2:	87 5a       	subi	r24, 0xA7	; 167
    2cd4:	9e 4f       	sbci	r25, 0xFE	; 254
    2cd6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2cda:	00 e0       	ldi	r16, 0x00	; 0
    2cdc:	10 e0       	ldi	r17, 0x00	; 0
    2cde:	98 01       	movw	r18, r16
    2ce0:	b9 01       	movw	r22, r18
    2ce2:	a8 01       	movw	r20, r16
    2ce4:	ce 01       	movw	r24, r28
    2ce6:	8f 59       	subi	r24, 0x9F	; 159
    2ce8:	9e 4f       	sbci	r25, 0xFE	; 254
    2cea:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2cee:	00 e0       	ldi	r16, 0x00	; 0
    2cf0:	10 e0       	ldi	r17, 0x00	; 0
    2cf2:	98 01       	movw	r18, r16
    2cf4:	b9 01       	movw	r22, r18
    2cf6:	a8 01       	movw	r20, r16
    2cf8:	ce 01       	movw	r24, r28
    2cfa:	87 59       	subi	r24, 0x97	; 151
    2cfc:	9e 4f       	sbci	r25, 0xFE	; 254
    2cfe:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2d02:	00 e0       	ldi	r16, 0x00	; 0
    2d04:	10 e0       	ldi	r17, 0x00	; 0
    2d06:	98 01       	movw	r18, r16
    2d08:	40 e0       	ldi	r20, 0x00	; 0
    2d0a:	50 e0       	ldi	r21, 0x00	; 0
    2d0c:	60 e8       	ldi	r22, 0x80	; 128
    2d0e:	7f e3       	ldi	r23, 0x3F	; 63
    2d10:	ce 01       	movw	r24, r28
    2d12:	8f 58       	subi	r24, 0x8F	; 143
    2d14:	9e 4f       	sbci	r25, 0xFE	; 254
    2d16:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2d1a:	00 e0       	ldi	r16, 0x00	; 0
    2d1c:	10 e0       	ldi	r17, 0x00	; 0
    2d1e:	98 01       	movw	r18, r16
    2d20:	b9 01       	movw	r22, r18
    2d22:	a8 01       	movw	r20, r16
    2d24:	ce 01       	movw	r24, r28
    2d26:	87 58       	subi	r24, 0x87	; 135
    2d28:	9e 4f       	sbci	r25, 0xFE	; 254
    2d2a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2d2e:	00 e0       	ldi	r16, 0x00	; 0
    2d30:	10 e0       	ldi	r17, 0x00	; 0
    2d32:	98 01       	movw	r18, r16
    2d34:	b9 01       	movw	r22, r18
    2d36:	a8 01       	movw	r20, r16
    2d38:	ce 01       	movw	r24, r28
    2d3a:	8f 57       	subi	r24, 0x7F	; 127
    2d3c:	9e 4f       	sbci	r25, 0xFE	; 254
    2d3e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2d42:	00 e0       	ldi	r16, 0x00	; 0
    2d44:	10 e0       	ldi	r17, 0x00	; 0
    2d46:	98 01       	movw	r18, r16
    2d48:	b9 01       	movw	r22, r18
    2d4a:	a8 01       	movw	r20, r16
    2d4c:	ce 01       	movw	r24, r28
    2d4e:	87 57       	subi	r24, 0x77	; 119
    2d50:	9e 4f       	sbci	r25, 0xFE	; 254
    2d52:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2d56:	00 e0       	ldi	r16, 0x00	; 0
    2d58:	10 e0       	ldi	r17, 0x00	; 0
    2d5a:	98 01       	movw	r18, r16
    2d5c:	b9 01       	movw	r22, r18
    2d5e:	a8 01       	movw	r20, r16
    2d60:	ce 01       	movw	r24, r28
    2d62:	8f 56       	subi	r24, 0x6F	; 111
    2d64:	9e 4f       	sbci	r25, 0xFE	; 254
    2d66:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2d6a:	00 e0       	ldi	r16, 0x00	; 0
    2d6c:	10 e0       	ldi	r17, 0x00	; 0
    2d6e:	98 01       	movw	r18, r16
    2d70:	b9 01       	movw	r22, r18
    2d72:	a8 01       	movw	r20, r16
    2d74:	ce 01       	movw	r24, r28
    2d76:	87 56       	subi	r24, 0x67	; 103
    2d78:	9e 4f       	sbci	r25, 0xFE	; 254
    2d7a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2d7e:	00 e0       	ldi	r16, 0x00	; 0
    2d80:	10 e0       	ldi	r17, 0x00	; 0
    2d82:	98 01       	movw	r18, r16
    2d84:	b9 01       	movw	r22, r18
    2d86:	a8 01       	movw	r20, r16
    2d88:	ce 01       	movw	r24, r28
    2d8a:	8f 55       	subi	r24, 0x5F	; 95
    2d8c:	9e 4f       	sbci	r25, 0xFE	; 254
    2d8e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2d92:	00 e0       	ldi	r16, 0x00	; 0
    2d94:	10 e0       	ldi	r17, 0x00	; 0
    2d96:	98 01       	movw	r18, r16
    2d98:	40 e0       	ldi	r20, 0x00	; 0
    2d9a:	50 e0       	ldi	r21, 0x00	; 0
    2d9c:	60 e8       	ldi	r22, 0x80	; 128
    2d9e:	7f e3       	ldi	r23, 0x3F	; 63
    2da0:	ce 01       	movw	r24, r28
    2da2:	87 55       	subi	r24, 0x57	; 87
    2da4:	9e 4f       	sbci	r25, 0xFE	; 254
    2da6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2daa:	00 e0       	ldi	r16, 0x00	; 0
    2dac:	10 e0       	ldi	r17, 0x00	; 0
    2dae:	98 01       	movw	r18, r16
    2db0:	b9 01       	movw	r22, r18
    2db2:	a8 01       	movw	r20, r16
    2db4:	ce 01       	movw	r24, r28
    2db6:	8f 54       	subi	r24, 0x4F	; 79
    2db8:	9e 4f       	sbci	r25, 0xFE	; 254
    2dba:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2dbe:	00 e0       	ldi	r16, 0x00	; 0
    2dc0:	10 e0       	ldi	r17, 0x00	; 0
    2dc2:	98 01       	movw	r18, r16
    2dc4:	b9 01       	movw	r22, r18
    2dc6:	a8 01       	movw	r20, r16
    2dc8:	ce 01       	movw	r24, r28
    2dca:	87 54       	subi	r24, 0x47	; 71
    2dcc:	9e 4f       	sbci	r25, 0xFE	; 254
    2dce:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2dd2:	00 e0       	ldi	r16, 0x00	; 0
    2dd4:	10 e0       	ldi	r17, 0x00	; 0
    2dd6:	98 01       	movw	r18, r16
    2dd8:	b9 01       	movw	r22, r18
    2dda:	a8 01       	movw	r20, r16
    2ddc:	ce 01       	movw	r24, r28
    2dde:	8f 53       	subi	r24, 0x3F	; 63
    2de0:	9e 4f       	sbci	r25, 0xFE	; 254
    2de2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2de6:	00 e0       	ldi	r16, 0x00	; 0
    2de8:	10 e0       	ldi	r17, 0x00	; 0
    2dea:	98 01       	movw	r18, r16
    2dec:	b9 01       	movw	r22, r18
    2dee:	a8 01       	movw	r20, r16
    2df0:	ce 01       	movw	r24, r28
    2df2:	87 53       	subi	r24, 0x37	; 55
    2df4:	9e 4f       	sbci	r25, 0xFE	; 254
    2df6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2dfa:	00 e0       	ldi	r16, 0x00	; 0
    2dfc:	10 e0       	ldi	r17, 0x00	; 0
    2dfe:	98 01       	movw	r18, r16
    2e00:	b9 01       	movw	r22, r18
    2e02:	a8 01       	movw	r20, r16
    2e04:	ce 01       	movw	r24, r28
    2e06:	8f 52       	subi	r24, 0x2F	; 47
    2e08:	9e 4f       	sbci	r25, 0xFE	; 254
    2e0a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2e0e:	00 e0       	ldi	r16, 0x00	; 0
    2e10:	10 e0       	ldi	r17, 0x00	; 0
    2e12:	98 01       	movw	r18, r16
    2e14:	b9 01       	movw	r22, r18
    2e16:	a8 01       	movw	r20, r16
    2e18:	ce 01       	movw	r24, r28
    2e1a:	87 52       	subi	r24, 0x27	; 39
    2e1c:	9e 4f       	sbci	r25, 0xFE	; 254
    2e1e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2e22:	00 e0       	ldi	r16, 0x00	; 0
    2e24:	10 e0       	ldi	r17, 0x00	; 0
    2e26:	98 01       	movw	r18, r16
    2e28:	b9 01       	movw	r22, r18
    2e2a:	a8 01       	movw	r20, r16
    2e2c:	ce 01       	movw	r24, r28
    2e2e:	8f 51       	subi	r24, 0x1F	; 31
    2e30:	9e 4f       	sbci	r25, 0xFE	; 254
    2e32:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2e36:	00 e0       	ldi	r16, 0x00	; 0
    2e38:	10 e0       	ldi	r17, 0x00	; 0
    2e3a:	98 01       	movw	r18, r16
    2e3c:	b9 01       	movw	r22, r18
    2e3e:	a8 01       	movw	r20, r16
    2e40:	ce 01       	movw	r24, r28
    2e42:	87 51       	subi	r24, 0x17	; 23
    2e44:	9e 4f       	sbci	r25, 0xFE	; 254
    2e46:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2e4a:	00 e0       	ldi	r16, 0x00	; 0
    2e4c:	10 e0       	ldi	r17, 0x00	; 0
    2e4e:	98 01       	movw	r18, r16
    2e50:	b9 01       	movw	r22, r18
    2e52:	a8 01       	movw	r20, r16
    2e54:	ce 01       	movw	r24, r28
    2e56:	8f 50       	subi	r24, 0x0F	; 15
    2e58:	9e 4f       	sbci	r25, 0xFE	; 254
    2e5a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2e5e:	00 e0       	ldi	r16, 0x00	; 0
    2e60:	10 e0       	ldi	r17, 0x00	; 0
    2e62:	98 01       	movw	r18, r16
    2e64:	40 e0       	ldi	r20, 0x00	; 0
    2e66:	50 e0       	ldi	r21, 0x00	; 0
    2e68:	60 e8       	ldi	r22, 0x80	; 128
    2e6a:	7f e3       	ldi	r23, 0x3F	; 63
    2e6c:	ce 01       	movw	r24, r28
    2e6e:	87 50       	subi	r24, 0x07	; 7
    2e70:	9e 4f       	sbci	r25, 0xFE	; 254
    2e72:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE3]={theta1,theta2,theta3}; int phi_list[QB_SIZE3]={phi1,phi2,phi3};
    2e76:	c9 5f       	subi	r28, 0xF9	; 249
    2e78:	dd 4f       	sbci	r29, 0xFD	; 253
    2e7a:	79 82       	std	Y+1, r7	; 0x01
    2e7c:	68 82       	st	Y, r6
    2e7e:	c7 50       	subi	r28, 0x07	; 7
    2e80:	d2 40       	sbci	r29, 0x02	; 2
    2e82:	c7 5f       	subi	r28, 0xF7	; 247
    2e84:	dd 4f       	sbci	r29, 0xFD	; 253
    2e86:	99 82       	std	Y+1, r9	; 0x01
    2e88:	88 82       	st	Y, r8
    2e8a:	c9 50       	subi	r28, 0x09	; 9
    2e8c:	d2 40       	sbci	r29, 0x02	; 2
    2e8e:	c5 5f       	subi	r28, 0xF5	; 245
    2e90:	dd 4f       	sbci	r29, 0xFD	; 253
    2e92:	f9 82       	std	Y+1, r15	; 0x01
    2e94:	e8 82       	st	Y, r14
    2e96:	cb 50       	subi	r28, 0x0B	; 11
    2e98:	d2 40       	sbci	r29, 0x02	; 2
    2e9a:	cf 5f       	subi	r28, 0xFF	; 255
    2e9c:	dd 4f       	sbci	r29, 0xFD	; 253
    2e9e:	59 82       	std	Y+1, r5	; 0x01
    2ea0:	48 82       	st	Y, r4
    2ea2:	c1 50       	subi	r28, 0x01	; 1
    2ea4:	d2 40       	sbci	r29, 0x02	; 2
    2ea6:	cd 5f       	subi	r28, 0xFD	; 253
    2ea8:	dd 4f       	sbci	r29, 0xFD	; 253
    2eaa:	39 82       	std	Y+1, r3	; 0x01
    2eac:	28 82       	st	Y, r2
    2eae:	c3 50       	subi	r28, 0x03	; 3
    2eb0:	d2 40       	sbci	r29, 0x02	; 2
    2eb2:	cb 5f       	subi	r28, 0xFB	; 251
    2eb4:	dd 4f       	sbci	r29, 0xFD	; 253
    2eb6:	d9 82       	std	Y+1, r13	; 0x01
    2eb8:	c8 82       	st	Y, r12
    2eba:	c5 50       	subi	r28, 0x05	; 5
    2ebc:	d2 40       	sbci	r29, 0x02	; 2
	return vec2ampl(multiply8x8(ampl2vec(QB_SIZE3,theta_list,phi_list),csw_matrix),QB_SIZE3);
    2ebe:	9e 01       	movw	r18, r28
    2ec0:	2f 5f       	subi	r18, 0xFF	; 255
    2ec2:	3d 4f       	sbci	r19, 0xFD	; 253
    2ec4:	ae 01       	movw	r20, r28
    2ec6:	49 5f       	subi	r20, 0xF9	; 249
    2ec8:	5d 4f       	sbci	r21, 0xFD	; 253
    2eca:	63 e0       	ldi	r22, 0x03	; 3
    2ecc:	70 e0       	ldi	r23, 0x00	; 0
    2ece:	c5 01       	movw	r24, r10
    2ed0:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    2ed4:	ae 01       	movw	r20, r28
    2ed6:	4f 5f       	subi	r20, 0xFF	; 255
    2ed8:	5f 4f       	sbci	r21, 0xFF	; 255
    2eda:	bc 01       	movw	r22, r24
    2edc:	c5 01       	movw	r24, r10
    2ede:	0e 94 8e 08 	call	0x111c	; 0x111c <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_>
    2ee2:	43 e0       	ldi	r20, 0x03	; 3
    2ee4:	50 e0       	ldi	r21, 0x00	; 0
    2ee6:	bc 01       	movw	r22, r24
    2ee8:	c5 01       	movw	r24, r10
    2eea:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    2eee:	c4 5f       	subi	r28, 0xF4	; 244
    2ef0:	dd 4f       	sbci	r29, 0xFD	; 253
    2ef2:	0f b6       	in	r0, 0x3f	; 63
    2ef4:	f8 94       	cli
    2ef6:	de bf       	out	0x3e, r29	; 62
    2ef8:	0f be       	out	0x3f, r0	; 63
    2efa:	cd bf       	out	0x3d, r28	; 61
    2efc:	df 91       	pop	r29
    2efe:	cf 91       	pop	r28
    2f00:	1f 91       	pop	r17
    2f02:	0f 91       	pop	r16
    2f04:	ff 90       	pop	r15
    2f06:	ef 90       	pop	r14
    2f08:	df 90       	pop	r13
    2f0a:	cf 90       	pop	r12
    2f0c:	bf 90       	pop	r11
    2f0e:	af 90       	pop	r10
    2f10:	9f 90       	pop	r9
    2f12:	8f 90       	pop	r8
    2f14:	7f 90       	pop	r7
    2f16:	6f 90       	pop	r6
    2f18:	5f 90       	pop	r5
    2f1a:	4f 90       	pop	r4
    2f1c:	3f 90       	pop	r3
    2f1e:	2f 90       	pop	r2
    2f20:	08 95       	ret

00002f22 <_ZN5Gates3TOFEiiiiii>:
int * Gates::TOF(int theta1, int phi1,int theta2,int phi2,int theta3,int phi3){
    2f22:	2f 92       	push	r2
    2f24:	3f 92       	push	r3
    2f26:	4f 92       	push	r4
    2f28:	5f 92       	push	r5
    2f2a:	6f 92       	push	r6
    2f2c:	7f 92       	push	r7
    2f2e:	8f 92       	push	r8
    2f30:	9f 92       	push	r9
    2f32:	af 92       	push	r10
    2f34:	bf 92       	push	r11
    2f36:	cf 92       	push	r12
    2f38:	df 92       	push	r13
    2f3a:	ef 92       	push	r14
    2f3c:	ff 92       	push	r15
    2f3e:	0f 93       	push	r16
    2f40:	1f 93       	push	r17
    2f42:	cf 93       	push	r28
    2f44:	df 93       	push	r29
    2f46:	cd b7       	in	r28, 0x3d	; 61
    2f48:	de b7       	in	r29, 0x3e	; 62
    2f4a:	cc 50       	subi	r28, 0x0C	; 12
    2f4c:	d2 40       	sbci	r29, 0x02	; 2
    2f4e:	0f b6       	in	r0, 0x3f	; 63
    2f50:	f8 94       	cli
    2f52:	de bf       	out	0x3e, r29	; 62
    2f54:	0f be       	out	0x3f, r0	; 63
    2f56:	cd bf       	out	0x3d, r28	; 61
    2f58:	5c 01       	movw	r10, r24
    2f5a:	3b 01       	movw	r6, r22
    2f5c:	2a 01       	movw	r4, r20
    2f5e:	49 01       	movw	r8, r18
    2f60:	18 01       	movw	r2, r16
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0)}};
    2f62:	00 e0       	ldi	r16, 0x00	; 0
    2f64:	10 e0       	ldi	r17, 0x00	; 0
    2f66:	98 01       	movw	r18, r16
    2f68:	40 e0       	ldi	r20, 0x00	; 0
    2f6a:	50 e0       	ldi	r21, 0x00	; 0
    2f6c:	60 e8       	ldi	r22, 0x80	; 128
    2f6e:	7f e3       	ldi	r23, 0x3F	; 63
    2f70:	ce 01       	movw	r24, r28
    2f72:	01 96       	adiw	r24, 0x01	; 1
    2f74:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2f78:	00 e0       	ldi	r16, 0x00	; 0
    2f7a:	10 e0       	ldi	r17, 0x00	; 0
    2f7c:	98 01       	movw	r18, r16
    2f7e:	b9 01       	movw	r22, r18
    2f80:	a8 01       	movw	r20, r16
    2f82:	ce 01       	movw	r24, r28
    2f84:	09 96       	adiw	r24, 0x09	; 9
    2f86:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2f8a:	00 e0       	ldi	r16, 0x00	; 0
    2f8c:	10 e0       	ldi	r17, 0x00	; 0
    2f8e:	98 01       	movw	r18, r16
    2f90:	b9 01       	movw	r22, r18
    2f92:	a8 01       	movw	r20, r16
    2f94:	ce 01       	movw	r24, r28
    2f96:	41 96       	adiw	r24, 0x11	; 17
    2f98:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2f9c:	00 e0       	ldi	r16, 0x00	; 0
    2f9e:	10 e0       	ldi	r17, 0x00	; 0
    2fa0:	98 01       	movw	r18, r16
    2fa2:	b9 01       	movw	r22, r18
    2fa4:	a8 01       	movw	r20, r16
    2fa6:	ce 01       	movw	r24, r28
    2fa8:	49 96       	adiw	r24, 0x19	; 25
    2faa:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2fae:	00 e0       	ldi	r16, 0x00	; 0
    2fb0:	10 e0       	ldi	r17, 0x00	; 0
    2fb2:	98 01       	movw	r18, r16
    2fb4:	b9 01       	movw	r22, r18
    2fb6:	a8 01       	movw	r20, r16
    2fb8:	ce 01       	movw	r24, r28
    2fba:	81 96       	adiw	r24, 0x21	; 33
    2fbc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2fc0:	00 e0       	ldi	r16, 0x00	; 0
    2fc2:	10 e0       	ldi	r17, 0x00	; 0
    2fc4:	98 01       	movw	r18, r16
    2fc6:	b9 01       	movw	r22, r18
    2fc8:	a8 01       	movw	r20, r16
    2fca:	ce 01       	movw	r24, r28
    2fcc:	89 96       	adiw	r24, 0x29	; 41
    2fce:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2fd2:	00 e0       	ldi	r16, 0x00	; 0
    2fd4:	10 e0       	ldi	r17, 0x00	; 0
    2fd6:	98 01       	movw	r18, r16
    2fd8:	b9 01       	movw	r22, r18
    2fda:	a8 01       	movw	r20, r16
    2fdc:	ce 01       	movw	r24, r28
    2fde:	c1 96       	adiw	r24, 0x31	; 49
    2fe0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2fe4:	00 e0       	ldi	r16, 0x00	; 0
    2fe6:	10 e0       	ldi	r17, 0x00	; 0
    2fe8:	98 01       	movw	r18, r16
    2fea:	b9 01       	movw	r22, r18
    2fec:	a8 01       	movw	r20, r16
    2fee:	ce 01       	movw	r24, r28
    2ff0:	c9 96       	adiw	r24, 0x39	; 57
    2ff2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    2ff6:	00 e0       	ldi	r16, 0x00	; 0
    2ff8:	10 e0       	ldi	r17, 0x00	; 0
    2ffa:	98 01       	movw	r18, r16
    2ffc:	b9 01       	movw	r22, r18
    2ffe:	a8 01       	movw	r20, r16
    3000:	ce 01       	movw	r24, r28
    3002:	8f 5b       	subi	r24, 0xBF	; 191
    3004:	9f 4f       	sbci	r25, 0xFF	; 255
    3006:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    300a:	00 e0       	ldi	r16, 0x00	; 0
    300c:	10 e0       	ldi	r17, 0x00	; 0
    300e:	98 01       	movw	r18, r16
    3010:	40 e0       	ldi	r20, 0x00	; 0
    3012:	50 e0       	ldi	r21, 0x00	; 0
    3014:	60 e8       	ldi	r22, 0x80	; 128
    3016:	7f e3       	ldi	r23, 0x3F	; 63
    3018:	ce 01       	movw	r24, r28
    301a:	87 5b       	subi	r24, 0xB7	; 183
    301c:	9f 4f       	sbci	r25, 0xFF	; 255
    301e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3022:	00 e0       	ldi	r16, 0x00	; 0
    3024:	10 e0       	ldi	r17, 0x00	; 0
    3026:	98 01       	movw	r18, r16
    3028:	b9 01       	movw	r22, r18
    302a:	a8 01       	movw	r20, r16
    302c:	ce 01       	movw	r24, r28
    302e:	8f 5a       	subi	r24, 0xAF	; 175
    3030:	9f 4f       	sbci	r25, 0xFF	; 255
    3032:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3036:	00 e0       	ldi	r16, 0x00	; 0
    3038:	10 e0       	ldi	r17, 0x00	; 0
    303a:	98 01       	movw	r18, r16
    303c:	b9 01       	movw	r22, r18
    303e:	a8 01       	movw	r20, r16
    3040:	ce 01       	movw	r24, r28
    3042:	87 5a       	subi	r24, 0xA7	; 167
    3044:	9f 4f       	sbci	r25, 0xFF	; 255
    3046:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    304a:	00 e0       	ldi	r16, 0x00	; 0
    304c:	10 e0       	ldi	r17, 0x00	; 0
    304e:	98 01       	movw	r18, r16
    3050:	b9 01       	movw	r22, r18
    3052:	a8 01       	movw	r20, r16
    3054:	ce 01       	movw	r24, r28
    3056:	8f 59       	subi	r24, 0x9F	; 159
    3058:	9f 4f       	sbci	r25, 0xFF	; 255
    305a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    305e:	00 e0       	ldi	r16, 0x00	; 0
    3060:	10 e0       	ldi	r17, 0x00	; 0
    3062:	98 01       	movw	r18, r16
    3064:	b9 01       	movw	r22, r18
    3066:	a8 01       	movw	r20, r16
    3068:	ce 01       	movw	r24, r28
    306a:	87 59       	subi	r24, 0x97	; 151
    306c:	9f 4f       	sbci	r25, 0xFF	; 255
    306e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3072:	00 e0       	ldi	r16, 0x00	; 0
    3074:	10 e0       	ldi	r17, 0x00	; 0
    3076:	98 01       	movw	r18, r16
    3078:	b9 01       	movw	r22, r18
    307a:	a8 01       	movw	r20, r16
    307c:	ce 01       	movw	r24, r28
    307e:	8f 58       	subi	r24, 0x8F	; 143
    3080:	9f 4f       	sbci	r25, 0xFF	; 255
    3082:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3086:	00 e0       	ldi	r16, 0x00	; 0
    3088:	10 e0       	ldi	r17, 0x00	; 0
    308a:	98 01       	movw	r18, r16
    308c:	b9 01       	movw	r22, r18
    308e:	a8 01       	movw	r20, r16
    3090:	ce 01       	movw	r24, r28
    3092:	87 58       	subi	r24, 0x87	; 135
    3094:	9f 4f       	sbci	r25, 0xFF	; 255
    3096:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    309a:	00 e0       	ldi	r16, 0x00	; 0
    309c:	10 e0       	ldi	r17, 0x00	; 0
    309e:	98 01       	movw	r18, r16
    30a0:	b9 01       	movw	r22, r18
    30a2:	a8 01       	movw	r20, r16
    30a4:	ce 01       	movw	r24, r28
    30a6:	8f 57       	subi	r24, 0x7F	; 127
    30a8:	9f 4f       	sbci	r25, 0xFF	; 255
    30aa:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    30ae:	00 e0       	ldi	r16, 0x00	; 0
    30b0:	10 e0       	ldi	r17, 0x00	; 0
    30b2:	98 01       	movw	r18, r16
    30b4:	b9 01       	movw	r22, r18
    30b6:	a8 01       	movw	r20, r16
    30b8:	ce 01       	movw	r24, r28
    30ba:	87 57       	subi	r24, 0x77	; 119
    30bc:	9f 4f       	sbci	r25, 0xFF	; 255
    30be:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    30c2:	00 e0       	ldi	r16, 0x00	; 0
    30c4:	10 e0       	ldi	r17, 0x00	; 0
    30c6:	98 01       	movw	r18, r16
    30c8:	40 e0       	ldi	r20, 0x00	; 0
    30ca:	50 e0       	ldi	r21, 0x00	; 0
    30cc:	60 e8       	ldi	r22, 0x80	; 128
    30ce:	7f e3       	ldi	r23, 0x3F	; 63
    30d0:	ce 01       	movw	r24, r28
    30d2:	8f 56       	subi	r24, 0x6F	; 111
    30d4:	9f 4f       	sbci	r25, 0xFF	; 255
    30d6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    30da:	00 e0       	ldi	r16, 0x00	; 0
    30dc:	10 e0       	ldi	r17, 0x00	; 0
    30de:	98 01       	movw	r18, r16
    30e0:	b9 01       	movw	r22, r18
    30e2:	a8 01       	movw	r20, r16
    30e4:	ce 01       	movw	r24, r28
    30e6:	87 56       	subi	r24, 0x67	; 103
    30e8:	9f 4f       	sbci	r25, 0xFF	; 255
    30ea:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    30ee:	00 e0       	ldi	r16, 0x00	; 0
    30f0:	10 e0       	ldi	r17, 0x00	; 0
    30f2:	98 01       	movw	r18, r16
    30f4:	b9 01       	movw	r22, r18
    30f6:	a8 01       	movw	r20, r16
    30f8:	ce 01       	movw	r24, r28
    30fa:	8f 55       	subi	r24, 0x5F	; 95
    30fc:	9f 4f       	sbci	r25, 0xFF	; 255
    30fe:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3102:	00 e0       	ldi	r16, 0x00	; 0
    3104:	10 e0       	ldi	r17, 0x00	; 0
    3106:	98 01       	movw	r18, r16
    3108:	b9 01       	movw	r22, r18
    310a:	a8 01       	movw	r20, r16
    310c:	ce 01       	movw	r24, r28
    310e:	87 55       	subi	r24, 0x57	; 87
    3110:	9f 4f       	sbci	r25, 0xFF	; 255
    3112:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3116:	00 e0       	ldi	r16, 0x00	; 0
    3118:	10 e0       	ldi	r17, 0x00	; 0
    311a:	98 01       	movw	r18, r16
    311c:	b9 01       	movw	r22, r18
    311e:	a8 01       	movw	r20, r16
    3120:	ce 01       	movw	r24, r28
    3122:	8f 54       	subi	r24, 0x4F	; 79
    3124:	9f 4f       	sbci	r25, 0xFF	; 255
    3126:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    312a:	00 e0       	ldi	r16, 0x00	; 0
    312c:	10 e0       	ldi	r17, 0x00	; 0
    312e:	98 01       	movw	r18, r16
    3130:	b9 01       	movw	r22, r18
    3132:	a8 01       	movw	r20, r16
    3134:	ce 01       	movw	r24, r28
    3136:	87 54       	subi	r24, 0x47	; 71
    3138:	9f 4f       	sbci	r25, 0xFF	; 255
    313a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    313e:	00 e0       	ldi	r16, 0x00	; 0
    3140:	10 e0       	ldi	r17, 0x00	; 0
    3142:	98 01       	movw	r18, r16
    3144:	b9 01       	movw	r22, r18
    3146:	a8 01       	movw	r20, r16
    3148:	ce 01       	movw	r24, r28
    314a:	8f 53       	subi	r24, 0x3F	; 63
    314c:	9f 4f       	sbci	r25, 0xFF	; 255
    314e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3152:	00 e0       	ldi	r16, 0x00	; 0
    3154:	10 e0       	ldi	r17, 0x00	; 0
    3156:	98 01       	movw	r18, r16
    3158:	b9 01       	movw	r22, r18
    315a:	a8 01       	movw	r20, r16
    315c:	ce 01       	movw	r24, r28
    315e:	87 53       	subi	r24, 0x37	; 55
    3160:	9f 4f       	sbci	r25, 0xFF	; 255
    3162:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3166:	00 e0       	ldi	r16, 0x00	; 0
    3168:	10 e0       	ldi	r17, 0x00	; 0
    316a:	98 01       	movw	r18, r16
    316c:	b9 01       	movw	r22, r18
    316e:	a8 01       	movw	r20, r16
    3170:	ce 01       	movw	r24, r28
    3172:	8f 52       	subi	r24, 0x2F	; 47
    3174:	9f 4f       	sbci	r25, 0xFF	; 255
    3176:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    317a:	00 e0       	ldi	r16, 0x00	; 0
    317c:	10 e0       	ldi	r17, 0x00	; 0
    317e:	98 01       	movw	r18, r16
    3180:	40 e0       	ldi	r20, 0x00	; 0
    3182:	50 e0       	ldi	r21, 0x00	; 0
    3184:	60 e8       	ldi	r22, 0x80	; 128
    3186:	7f e3       	ldi	r23, 0x3F	; 63
    3188:	ce 01       	movw	r24, r28
    318a:	87 52       	subi	r24, 0x27	; 39
    318c:	9f 4f       	sbci	r25, 0xFF	; 255
    318e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3192:	00 e0       	ldi	r16, 0x00	; 0
    3194:	10 e0       	ldi	r17, 0x00	; 0
    3196:	98 01       	movw	r18, r16
    3198:	b9 01       	movw	r22, r18
    319a:	a8 01       	movw	r20, r16
    319c:	ce 01       	movw	r24, r28
    319e:	8f 51       	subi	r24, 0x1F	; 31
    31a0:	9f 4f       	sbci	r25, 0xFF	; 255
    31a2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    31a6:	00 e0       	ldi	r16, 0x00	; 0
    31a8:	10 e0       	ldi	r17, 0x00	; 0
    31aa:	98 01       	movw	r18, r16
    31ac:	b9 01       	movw	r22, r18
    31ae:	a8 01       	movw	r20, r16
    31b0:	ce 01       	movw	r24, r28
    31b2:	87 51       	subi	r24, 0x17	; 23
    31b4:	9f 4f       	sbci	r25, 0xFF	; 255
    31b6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    31ba:	00 e0       	ldi	r16, 0x00	; 0
    31bc:	10 e0       	ldi	r17, 0x00	; 0
    31be:	98 01       	movw	r18, r16
    31c0:	b9 01       	movw	r22, r18
    31c2:	a8 01       	movw	r20, r16
    31c4:	ce 01       	movw	r24, r28
    31c6:	8f 50       	subi	r24, 0x0F	; 15
    31c8:	9f 4f       	sbci	r25, 0xFF	; 255
    31ca:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    31ce:	00 e0       	ldi	r16, 0x00	; 0
    31d0:	10 e0       	ldi	r17, 0x00	; 0
    31d2:	98 01       	movw	r18, r16
    31d4:	b9 01       	movw	r22, r18
    31d6:	a8 01       	movw	r20, r16
    31d8:	ce 01       	movw	r24, r28
    31da:	87 50       	subi	r24, 0x07	; 7
    31dc:	9f 4f       	sbci	r25, 0xFF	; 255
    31de:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    31e2:	00 e0       	ldi	r16, 0x00	; 0
    31e4:	10 e0       	ldi	r17, 0x00	; 0
    31e6:	98 01       	movw	r18, r16
    31e8:	b9 01       	movw	r22, r18
    31ea:	a8 01       	movw	r20, r16
    31ec:	ce 01       	movw	r24, r28
    31ee:	8f 5f       	subi	r24, 0xFF	; 255
    31f0:	9e 4f       	sbci	r25, 0xFE	; 254
    31f2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    31f6:	00 e0       	ldi	r16, 0x00	; 0
    31f8:	10 e0       	ldi	r17, 0x00	; 0
    31fa:	98 01       	movw	r18, r16
    31fc:	b9 01       	movw	r22, r18
    31fe:	a8 01       	movw	r20, r16
    3200:	ce 01       	movw	r24, r28
    3202:	87 5f       	subi	r24, 0xF7	; 247
    3204:	9e 4f       	sbci	r25, 0xFE	; 254
    3206:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    320a:	00 e0       	ldi	r16, 0x00	; 0
    320c:	10 e0       	ldi	r17, 0x00	; 0
    320e:	98 01       	movw	r18, r16
    3210:	b9 01       	movw	r22, r18
    3212:	a8 01       	movw	r20, r16
    3214:	ce 01       	movw	r24, r28
    3216:	8f 5e       	subi	r24, 0xEF	; 239
    3218:	9e 4f       	sbci	r25, 0xFE	; 254
    321a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    321e:	00 e0       	ldi	r16, 0x00	; 0
    3220:	10 e0       	ldi	r17, 0x00	; 0
    3222:	98 01       	movw	r18, r16
    3224:	b9 01       	movw	r22, r18
    3226:	a8 01       	movw	r20, r16
    3228:	ce 01       	movw	r24, r28
    322a:	87 5e       	subi	r24, 0xE7	; 231
    322c:	9e 4f       	sbci	r25, 0xFE	; 254
    322e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3232:	00 e0       	ldi	r16, 0x00	; 0
    3234:	10 e0       	ldi	r17, 0x00	; 0
    3236:	98 01       	movw	r18, r16
    3238:	40 e0       	ldi	r20, 0x00	; 0
    323a:	50 e0       	ldi	r21, 0x00	; 0
    323c:	60 e8       	ldi	r22, 0x80	; 128
    323e:	7f e3       	ldi	r23, 0x3F	; 63
    3240:	ce 01       	movw	r24, r28
    3242:	8f 5d       	subi	r24, 0xDF	; 223
    3244:	9e 4f       	sbci	r25, 0xFE	; 254
    3246:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    324a:	00 e0       	ldi	r16, 0x00	; 0
    324c:	10 e0       	ldi	r17, 0x00	; 0
    324e:	98 01       	movw	r18, r16
    3250:	b9 01       	movw	r22, r18
    3252:	a8 01       	movw	r20, r16
    3254:	ce 01       	movw	r24, r28
    3256:	87 5d       	subi	r24, 0xD7	; 215
    3258:	9e 4f       	sbci	r25, 0xFE	; 254
    325a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    325e:	00 e0       	ldi	r16, 0x00	; 0
    3260:	10 e0       	ldi	r17, 0x00	; 0
    3262:	98 01       	movw	r18, r16
    3264:	b9 01       	movw	r22, r18
    3266:	a8 01       	movw	r20, r16
    3268:	ce 01       	movw	r24, r28
    326a:	8f 5c       	subi	r24, 0xCF	; 207
    326c:	9e 4f       	sbci	r25, 0xFE	; 254
    326e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3272:	00 e0       	ldi	r16, 0x00	; 0
    3274:	10 e0       	ldi	r17, 0x00	; 0
    3276:	98 01       	movw	r18, r16
    3278:	b9 01       	movw	r22, r18
    327a:	a8 01       	movw	r20, r16
    327c:	ce 01       	movw	r24, r28
    327e:	87 5c       	subi	r24, 0xC7	; 199
    3280:	9e 4f       	sbci	r25, 0xFE	; 254
    3282:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3286:	00 e0       	ldi	r16, 0x00	; 0
    3288:	10 e0       	ldi	r17, 0x00	; 0
    328a:	98 01       	movw	r18, r16
    328c:	b9 01       	movw	r22, r18
    328e:	a8 01       	movw	r20, r16
    3290:	ce 01       	movw	r24, r28
    3292:	8f 5b       	subi	r24, 0xBF	; 191
    3294:	9e 4f       	sbci	r25, 0xFE	; 254
    3296:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    329a:	00 e0       	ldi	r16, 0x00	; 0
    329c:	10 e0       	ldi	r17, 0x00	; 0
    329e:	98 01       	movw	r18, r16
    32a0:	b9 01       	movw	r22, r18
    32a2:	a8 01       	movw	r20, r16
    32a4:	ce 01       	movw	r24, r28
    32a6:	87 5b       	subi	r24, 0xB7	; 183
    32a8:	9e 4f       	sbci	r25, 0xFE	; 254
    32aa:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    32ae:	00 e0       	ldi	r16, 0x00	; 0
    32b0:	10 e0       	ldi	r17, 0x00	; 0
    32b2:	98 01       	movw	r18, r16
    32b4:	b9 01       	movw	r22, r18
    32b6:	a8 01       	movw	r20, r16
    32b8:	ce 01       	movw	r24, r28
    32ba:	8f 5a       	subi	r24, 0xAF	; 175
    32bc:	9e 4f       	sbci	r25, 0xFE	; 254
    32be:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    32c2:	00 e0       	ldi	r16, 0x00	; 0
    32c4:	10 e0       	ldi	r17, 0x00	; 0
    32c6:	98 01       	movw	r18, r16
    32c8:	b9 01       	movw	r22, r18
    32ca:	a8 01       	movw	r20, r16
    32cc:	ce 01       	movw	r24, r28
    32ce:	87 5a       	subi	r24, 0xA7	; 167
    32d0:	9e 4f       	sbci	r25, 0xFE	; 254
    32d2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    32d6:	00 e0       	ldi	r16, 0x00	; 0
    32d8:	10 e0       	ldi	r17, 0x00	; 0
    32da:	98 01       	movw	r18, r16
    32dc:	b9 01       	movw	r22, r18
    32de:	a8 01       	movw	r20, r16
    32e0:	ce 01       	movw	r24, r28
    32e2:	8f 59       	subi	r24, 0x9F	; 159
    32e4:	9e 4f       	sbci	r25, 0xFE	; 254
    32e6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    32ea:	00 e0       	ldi	r16, 0x00	; 0
    32ec:	10 e0       	ldi	r17, 0x00	; 0
    32ee:	98 01       	movw	r18, r16
    32f0:	40 e0       	ldi	r20, 0x00	; 0
    32f2:	50 e0       	ldi	r21, 0x00	; 0
    32f4:	60 e8       	ldi	r22, 0x80	; 128
    32f6:	7f e3       	ldi	r23, 0x3F	; 63
    32f8:	ce 01       	movw	r24, r28
    32fa:	87 59       	subi	r24, 0x97	; 151
    32fc:	9e 4f       	sbci	r25, 0xFE	; 254
    32fe:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3302:	00 e0       	ldi	r16, 0x00	; 0
    3304:	10 e0       	ldi	r17, 0x00	; 0
    3306:	98 01       	movw	r18, r16
    3308:	b9 01       	movw	r22, r18
    330a:	a8 01       	movw	r20, r16
    330c:	ce 01       	movw	r24, r28
    330e:	8f 58       	subi	r24, 0x8F	; 143
    3310:	9e 4f       	sbci	r25, 0xFE	; 254
    3312:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3316:	00 e0       	ldi	r16, 0x00	; 0
    3318:	10 e0       	ldi	r17, 0x00	; 0
    331a:	98 01       	movw	r18, r16
    331c:	b9 01       	movw	r22, r18
    331e:	a8 01       	movw	r20, r16
    3320:	ce 01       	movw	r24, r28
    3322:	87 58       	subi	r24, 0x87	; 135
    3324:	9e 4f       	sbci	r25, 0xFE	; 254
    3326:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    332a:	00 e0       	ldi	r16, 0x00	; 0
    332c:	10 e0       	ldi	r17, 0x00	; 0
    332e:	98 01       	movw	r18, r16
    3330:	b9 01       	movw	r22, r18
    3332:	a8 01       	movw	r20, r16
    3334:	ce 01       	movw	r24, r28
    3336:	8f 57       	subi	r24, 0x7F	; 127
    3338:	9e 4f       	sbci	r25, 0xFE	; 254
    333a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    333e:	00 e0       	ldi	r16, 0x00	; 0
    3340:	10 e0       	ldi	r17, 0x00	; 0
    3342:	98 01       	movw	r18, r16
    3344:	b9 01       	movw	r22, r18
    3346:	a8 01       	movw	r20, r16
    3348:	ce 01       	movw	r24, r28
    334a:	87 57       	subi	r24, 0x77	; 119
    334c:	9e 4f       	sbci	r25, 0xFE	; 254
    334e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3352:	00 e0       	ldi	r16, 0x00	; 0
    3354:	10 e0       	ldi	r17, 0x00	; 0
    3356:	98 01       	movw	r18, r16
    3358:	b9 01       	movw	r22, r18
    335a:	a8 01       	movw	r20, r16
    335c:	ce 01       	movw	r24, r28
    335e:	8f 56       	subi	r24, 0x6F	; 111
    3360:	9e 4f       	sbci	r25, 0xFE	; 254
    3362:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3366:	00 e0       	ldi	r16, 0x00	; 0
    3368:	10 e0       	ldi	r17, 0x00	; 0
    336a:	98 01       	movw	r18, r16
    336c:	b9 01       	movw	r22, r18
    336e:	a8 01       	movw	r20, r16
    3370:	ce 01       	movw	r24, r28
    3372:	87 56       	subi	r24, 0x67	; 103
    3374:	9e 4f       	sbci	r25, 0xFE	; 254
    3376:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    337a:	00 e0       	ldi	r16, 0x00	; 0
    337c:	10 e0       	ldi	r17, 0x00	; 0
    337e:	98 01       	movw	r18, r16
    3380:	b9 01       	movw	r22, r18
    3382:	a8 01       	movw	r20, r16
    3384:	ce 01       	movw	r24, r28
    3386:	8f 55       	subi	r24, 0x5F	; 95
    3388:	9e 4f       	sbci	r25, 0xFE	; 254
    338a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    338e:	00 e0       	ldi	r16, 0x00	; 0
    3390:	10 e0       	ldi	r17, 0x00	; 0
    3392:	98 01       	movw	r18, r16
    3394:	b9 01       	movw	r22, r18
    3396:	a8 01       	movw	r20, r16
    3398:	ce 01       	movw	r24, r28
    339a:	87 55       	subi	r24, 0x57	; 87
    339c:	9e 4f       	sbci	r25, 0xFE	; 254
    339e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    33a2:	00 e0       	ldi	r16, 0x00	; 0
    33a4:	10 e0       	ldi	r17, 0x00	; 0
    33a6:	98 01       	movw	r18, r16
    33a8:	b9 01       	movw	r22, r18
    33aa:	a8 01       	movw	r20, r16
    33ac:	ce 01       	movw	r24, r28
    33ae:	8f 54       	subi	r24, 0x4F	; 79
    33b0:	9e 4f       	sbci	r25, 0xFE	; 254
    33b2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    33b6:	00 e0       	ldi	r16, 0x00	; 0
    33b8:	10 e0       	ldi	r17, 0x00	; 0
    33ba:	98 01       	movw	r18, r16
    33bc:	40 e0       	ldi	r20, 0x00	; 0
    33be:	50 e0       	ldi	r21, 0x00	; 0
    33c0:	60 e8       	ldi	r22, 0x80	; 128
    33c2:	7f e3       	ldi	r23, 0x3F	; 63
    33c4:	ce 01       	movw	r24, r28
    33c6:	87 54       	subi	r24, 0x47	; 71
    33c8:	9e 4f       	sbci	r25, 0xFE	; 254
    33ca:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    33ce:	00 e0       	ldi	r16, 0x00	; 0
    33d0:	10 e0       	ldi	r17, 0x00	; 0
    33d2:	98 01       	movw	r18, r16
    33d4:	b9 01       	movw	r22, r18
    33d6:	a8 01       	movw	r20, r16
    33d8:	ce 01       	movw	r24, r28
    33da:	8f 53       	subi	r24, 0x3F	; 63
    33dc:	9e 4f       	sbci	r25, 0xFE	; 254
    33de:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    33e2:	00 e0       	ldi	r16, 0x00	; 0
    33e4:	10 e0       	ldi	r17, 0x00	; 0
    33e6:	98 01       	movw	r18, r16
    33e8:	b9 01       	movw	r22, r18
    33ea:	a8 01       	movw	r20, r16
    33ec:	ce 01       	movw	r24, r28
    33ee:	87 53       	subi	r24, 0x37	; 55
    33f0:	9e 4f       	sbci	r25, 0xFE	; 254
    33f2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    33f6:	00 e0       	ldi	r16, 0x00	; 0
    33f8:	10 e0       	ldi	r17, 0x00	; 0
    33fa:	98 01       	movw	r18, r16
    33fc:	b9 01       	movw	r22, r18
    33fe:	a8 01       	movw	r20, r16
    3400:	ce 01       	movw	r24, r28
    3402:	8f 52       	subi	r24, 0x2F	; 47
    3404:	9e 4f       	sbci	r25, 0xFE	; 254
    3406:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    340a:	00 e0       	ldi	r16, 0x00	; 0
    340c:	10 e0       	ldi	r17, 0x00	; 0
    340e:	98 01       	movw	r18, r16
    3410:	b9 01       	movw	r22, r18
    3412:	a8 01       	movw	r20, r16
    3414:	ce 01       	movw	r24, r28
    3416:	87 52       	subi	r24, 0x27	; 39
    3418:	9e 4f       	sbci	r25, 0xFE	; 254
    341a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    341e:	00 e0       	ldi	r16, 0x00	; 0
    3420:	10 e0       	ldi	r17, 0x00	; 0
    3422:	98 01       	movw	r18, r16
    3424:	b9 01       	movw	r22, r18
    3426:	a8 01       	movw	r20, r16
    3428:	ce 01       	movw	r24, r28
    342a:	8f 51       	subi	r24, 0x1F	; 31
    342c:	9e 4f       	sbci	r25, 0xFE	; 254
    342e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3432:	00 e0       	ldi	r16, 0x00	; 0
    3434:	10 e0       	ldi	r17, 0x00	; 0
    3436:	98 01       	movw	r18, r16
    3438:	b9 01       	movw	r22, r18
    343a:	a8 01       	movw	r20, r16
    343c:	ce 01       	movw	r24, r28
    343e:	87 51       	subi	r24, 0x17	; 23
    3440:	9e 4f       	sbci	r25, 0xFE	; 254
    3442:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3446:	00 e0       	ldi	r16, 0x00	; 0
    3448:	10 e0       	ldi	r17, 0x00	; 0
    344a:	98 01       	movw	r18, r16
    344c:	40 e0       	ldi	r20, 0x00	; 0
    344e:	50 e0       	ldi	r21, 0x00	; 0
    3450:	60 e8       	ldi	r22, 0x80	; 128
    3452:	7f e3       	ldi	r23, 0x3F	; 63
    3454:	ce 01       	movw	r24, r28
    3456:	8f 50       	subi	r24, 0x0F	; 15
    3458:	9e 4f       	sbci	r25, 0xFE	; 254
    345a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    345e:	00 e0       	ldi	r16, 0x00	; 0
    3460:	10 e0       	ldi	r17, 0x00	; 0
    3462:	98 01       	movw	r18, r16
    3464:	b9 01       	movw	r22, r18
    3466:	a8 01       	movw	r20, r16
    3468:	ce 01       	movw	r24, r28
    346a:	87 50       	subi	r24, 0x07	; 7
    346c:	9e 4f       	sbci	r25, 0xFE	; 254
    346e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE3]={theta1,theta2,theta3}; int phi_list[QB_SIZE3]={phi1,phi2,phi3};
    3472:	c9 5f       	subi	r28, 0xF9	; 249
    3474:	dd 4f       	sbci	r29, 0xFD	; 253
    3476:	79 82       	std	Y+1, r7	; 0x01
    3478:	68 82       	st	Y, r6
    347a:	c7 50       	subi	r28, 0x07	; 7
    347c:	d2 40       	sbci	r29, 0x02	; 2
    347e:	c7 5f       	subi	r28, 0xF7	; 247
    3480:	dd 4f       	sbci	r29, 0xFD	; 253
    3482:	99 82       	std	Y+1, r9	; 0x01
    3484:	88 82       	st	Y, r8
    3486:	c9 50       	subi	r28, 0x09	; 9
    3488:	d2 40       	sbci	r29, 0x02	; 2
    348a:	c5 5f       	subi	r28, 0xF5	; 245
    348c:	dd 4f       	sbci	r29, 0xFD	; 253
    348e:	f9 82       	std	Y+1, r15	; 0x01
    3490:	e8 82       	st	Y, r14
    3492:	cb 50       	subi	r28, 0x0B	; 11
    3494:	d2 40       	sbci	r29, 0x02	; 2
    3496:	cf 5f       	subi	r28, 0xFF	; 255
    3498:	dd 4f       	sbci	r29, 0xFD	; 253
    349a:	59 82       	std	Y+1, r5	; 0x01
    349c:	48 82       	st	Y, r4
    349e:	c1 50       	subi	r28, 0x01	; 1
    34a0:	d2 40       	sbci	r29, 0x02	; 2
    34a2:	cd 5f       	subi	r28, 0xFD	; 253
    34a4:	dd 4f       	sbci	r29, 0xFD	; 253
    34a6:	39 82       	std	Y+1, r3	; 0x01
    34a8:	28 82       	st	Y, r2
    34aa:	c3 50       	subi	r28, 0x03	; 3
    34ac:	d2 40       	sbci	r29, 0x02	; 2
    34ae:	cb 5f       	subi	r28, 0xFB	; 251
    34b0:	dd 4f       	sbci	r29, 0xFD	; 253
    34b2:	d9 82       	std	Y+1, r13	; 0x01
    34b4:	c8 82       	st	Y, r12
    34b6:	c5 50       	subi	r28, 0x05	; 5
    34b8:	d2 40       	sbci	r29, 0x02	; 2
	return vec2ampl(multiply8x8(ampl2vec(QB_SIZE3,theta_list,phi_list),tof_matrix),QB_SIZE3);
    34ba:	9e 01       	movw	r18, r28
    34bc:	2f 5f       	subi	r18, 0xFF	; 255
    34be:	3d 4f       	sbci	r19, 0xFD	; 253
    34c0:	ae 01       	movw	r20, r28
    34c2:	49 5f       	subi	r20, 0xF9	; 249
    34c4:	5d 4f       	sbci	r21, 0xFD	; 253
    34c6:	63 e0       	ldi	r22, 0x03	; 3
    34c8:	70 e0       	ldi	r23, 0x00	; 0
    34ca:	c5 01       	movw	r24, r10
    34cc:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    34d0:	ae 01       	movw	r20, r28
    34d2:	4f 5f       	subi	r20, 0xFF	; 255
    34d4:	5f 4f       	sbci	r21, 0xFF	; 255
    34d6:	bc 01       	movw	r22, r24
    34d8:	c5 01       	movw	r24, r10
    34da:	0e 94 8e 08 	call	0x111c	; 0x111c <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_>
    34de:	43 e0       	ldi	r20, 0x03	; 3
    34e0:	50 e0       	ldi	r21, 0x00	; 0
    34e2:	bc 01       	movw	r22, r24
    34e4:	c5 01       	movw	r24, r10
    34e6:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
}
    34ea:	c4 5f       	subi	r28, 0xF4	; 244
    34ec:	dd 4f       	sbci	r29, 0xFD	; 253
    34ee:	0f b6       	in	r0, 0x3f	; 63
    34f0:	f8 94       	cli
    34f2:	de bf       	out	0x3e, r29	; 62
    34f4:	0f be       	out	0x3f, r0	; 63
    34f6:	cd bf       	out	0x3d, r28	; 61
    34f8:	df 91       	pop	r29
    34fa:	cf 91       	pop	r28
    34fc:	1f 91       	pop	r17
    34fe:	0f 91       	pop	r16
    3500:	ff 90       	pop	r15
    3502:	ef 90       	pop	r14
    3504:	df 90       	pop	r13
    3506:	cf 90       	pop	r12
    3508:	bf 90       	pop	r11
    350a:	af 90       	pop	r10
    350c:	9f 90       	pop	r9
    350e:	8f 90       	pop	r8
    3510:	7f 90       	pop	r7
    3512:	6f 90       	pop	r6
    3514:	5f 90       	pop	r5
    3516:	4f 90       	pop	r4
    3518:	3f 90       	pop	r3
    351a:	2f 90       	pop	r2
    351c:	08 95       	ret

0000351e <_ZN5Gates3DEUEiiiiiii>:
int * Gates::DEU(int theta1, int phi1,int theta2,int phi2,int theta3,int phi3,int delta){
    351e:	2f 92       	push	r2
    3520:	3f 92       	push	r3
    3522:	4f 92       	push	r4
    3524:	5f 92       	push	r5
    3526:	6f 92       	push	r6
    3528:	7f 92       	push	r7
    352a:	8f 92       	push	r8
    352c:	9f 92       	push	r9
    352e:	af 92       	push	r10
    3530:	bf 92       	push	r11
    3532:	cf 92       	push	r12
    3534:	df 92       	push	r13
    3536:	ef 92       	push	r14
    3538:	ff 92       	push	r15
    353a:	0f 93       	push	r16
    353c:	1f 93       	push	r17
    353e:	cf 93       	push	r28
    3540:	df 93       	push	r29
    3542:	cd b7       	in	r28, 0x3d	; 61
    3544:	de b7       	in	r29, 0x3e	; 62
    3546:	c4 51       	subi	r28, 0x14	; 20
    3548:	d2 40       	sbci	r29, 0x02	; 2
    354a:	0f b6       	in	r0, 0x3f	; 63
    354c:	f8 94       	cli
    354e:	de bf       	out	0x3e, r29	; 62
    3550:	0f be       	out	0x3f, r0	; 63
    3552:	cd bf       	out	0x3d, r28	; 61
    3554:	c3 5f       	subi	r28, 0xF3	; 243
    3556:	dd 4f       	sbci	r29, 0xFD	; 253
    3558:	99 83       	std	Y+1, r25	; 0x01
    355a:	88 83       	st	Y, r24
    355c:	cd 50       	subi	r28, 0x0D	; 13
    355e:	d2 40       	sbci	r29, 0x02	; 2
    3560:	2b 01       	movw	r4, r22
    3562:	c1 5f       	subi	r28, 0xF1	; 241
    3564:	dd 4f       	sbci	r29, 0xFD	; 253
    3566:	59 83       	std	Y+1, r21	; 0x01
    3568:	48 83       	st	Y, r20
    356a:	cf 50       	subi	r28, 0x0F	; 15
    356c:	d2 40       	sbci	r29, 0x02	; 2
    356e:	39 01       	movw	r6, r18
    3570:	cf 5e       	subi	r28, 0xEF	; 239
    3572:	dd 4f       	sbci	r29, 0xFD	; 253
    3574:	19 83       	std	Y+1, r17	; 0x01
    3576:	08 83       	st	Y, r16
    3578:	c1 51       	subi	r28, 0x11	; 17
    357a:	d2 40       	sbci	r29, 0x02	; 2
    357c:	17 01       	movw	r2, r14
    357e:	cd 5e       	subi	r28, 0xED	; 237
    3580:	dd 4f       	sbci	r29, 0xFD	; 253
    3582:	d9 82       	std	Y+1, r13	; 0x01
    3584:	c8 82       	st	Y, r12
    3586:	c3 51       	subi	r28, 0x13	; 19
    3588:	d2 40       	sbci	r29, 0x02	; 2
	float delta_float=(delta*M_PI)/180;
    358a:	b5 01       	movw	r22, r10
    358c:	88 27       	eor	r24, r24
    358e:	77 fd       	sbrc	r23, 7
    3590:	80 95       	com	r24
    3592:	98 2f       	mov	r25, r24
    3594:	0e 94 2c 2f 	call	0x5e58	; 0x5e58 <__floatsisf>
    3598:	2b ed       	ldi	r18, 0xDB	; 219
    359a:	3f e0       	ldi	r19, 0x0F	; 15
    359c:	49 e4       	ldi	r20, 0x49	; 73
    359e:	50 e4       	ldi	r21, 0x40	; 64
    35a0:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
    35a4:	20 e0       	ldi	r18, 0x00	; 0
    35a6:	30 e0       	ldi	r19, 0x00	; 0
    35a8:	44 e3       	ldi	r20, 0x34	; 52
    35aa:	53 e4       	ldi	r21, 0x43	; 67
    35ac:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <__divsf3>
    35b0:	4b 01       	movw	r8, r22
    35b2:	5c 01       	movw	r10, r24
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,cos(delta_float)),Complex(sin(delta_float),0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(sin(delta_float),0),Complex(0,cos(delta_float))}};
    35b4:	00 e0       	ldi	r16, 0x00	; 0
    35b6:	10 e0       	ldi	r17, 0x00	; 0
    35b8:	98 01       	movw	r18, r16
    35ba:	40 e0       	ldi	r20, 0x00	; 0
    35bc:	50 e0       	ldi	r21, 0x00	; 0
    35be:	60 e8       	ldi	r22, 0x80	; 128
    35c0:	7f e3       	ldi	r23, 0x3F	; 63
    35c2:	ce 01       	movw	r24, r28
    35c4:	01 96       	adiw	r24, 0x01	; 1
    35c6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    35ca:	00 e0       	ldi	r16, 0x00	; 0
    35cc:	10 e0       	ldi	r17, 0x00	; 0
    35ce:	98 01       	movw	r18, r16
    35d0:	b9 01       	movw	r22, r18
    35d2:	a8 01       	movw	r20, r16
    35d4:	ce 01       	movw	r24, r28
    35d6:	09 96       	adiw	r24, 0x09	; 9
    35d8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    35dc:	00 e0       	ldi	r16, 0x00	; 0
    35de:	10 e0       	ldi	r17, 0x00	; 0
    35e0:	98 01       	movw	r18, r16
    35e2:	b9 01       	movw	r22, r18
    35e4:	a8 01       	movw	r20, r16
    35e6:	ce 01       	movw	r24, r28
    35e8:	41 96       	adiw	r24, 0x11	; 17
    35ea:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    35ee:	00 e0       	ldi	r16, 0x00	; 0
    35f0:	10 e0       	ldi	r17, 0x00	; 0
    35f2:	98 01       	movw	r18, r16
    35f4:	b9 01       	movw	r22, r18
    35f6:	a8 01       	movw	r20, r16
    35f8:	ce 01       	movw	r24, r28
    35fa:	49 96       	adiw	r24, 0x19	; 25
    35fc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3600:	00 e0       	ldi	r16, 0x00	; 0
    3602:	10 e0       	ldi	r17, 0x00	; 0
    3604:	98 01       	movw	r18, r16
    3606:	b9 01       	movw	r22, r18
    3608:	a8 01       	movw	r20, r16
    360a:	ce 01       	movw	r24, r28
    360c:	81 96       	adiw	r24, 0x21	; 33
    360e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3612:	00 e0       	ldi	r16, 0x00	; 0
    3614:	10 e0       	ldi	r17, 0x00	; 0
    3616:	98 01       	movw	r18, r16
    3618:	b9 01       	movw	r22, r18
    361a:	a8 01       	movw	r20, r16
    361c:	ce 01       	movw	r24, r28
    361e:	89 96       	adiw	r24, 0x29	; 41
    3620:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3624:	00 e0       	ldi	r16, 0x00	; 0
    3626:	10 e0       	ldi	r17, 0x00	; 0
    3628:	98 01       	movw	r18, r16
    362a:	b9 01       	movw	r22, r18
    362c:	a8 01       	movw	r20, r16
    362e:	ce 01       	movw	r24, r28
    3630:	c1 96       	adiw	r24, 0x31	; 49
    3632:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3636:	00 e0       	ldi	r16, 0x00	; 0
    3638:	10 e0       	ldi	r17, 0x00	; 0
    363a:	98 01       	movw	r18, r16
    363c:	b9 01       	movw	r22, r18
    363e:	a8 01       	movw	r20, r16
    3640:	ce 01       	movw	r24, r28
    3642:	c9 96       	adiw	r24, 0x39	; 57
    3644:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3648:	00 e0       	ldi	r16, 0x00	; 0
    364a:	10 e0       	ldi	r17, 0x00	; 0
    364c:	98 01       	movw	r18, r16
    364e:	b9 01       	movw	r22, r18
    3650:	a8 01       	movw	r20, r16
    3652:	ce 01       	movw	r24, r28
    3654:	8f 5b       	subi	r24, 0xBF	; 191
    3656:	9f 4f       	sbci	r25, 0xFF	; 255
    3658:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    365c:	00 e0       	ldi	r16, 0x00	; 0
    365e:	10 e0       	ldi	r17, 0x00	; 0
    3660:	98 01       	movw	r18, r16
    3662:	40 e0       	ldi	r20, 0x00	; 0
    3664:	50 e0       	ldi	r21, 0x00	; 0
    3666:	60 e8       	ldi	r22, 0x80	; 128
    3668:	7f e3       	ldi	r23, 0x3F	; 63
    366a:	ce 01       	movw	r24, r28
    366c:	87 5b       	subi	r24, 0xB7	; 183
    366e:	9f 4f       	sbci	r25, 0xFF	; 255
    3670:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3674:	00 e0       	ldi	r16, 0x00	; 0
    3676:	10 e0       	ldi	r17, 0x00	; 0
    3678:	98 01       	movw	r18, r16
    367a:	b9 01       	movw	r22, r18
    367c:	a8 01       	movw	r20, r16
    367e:	ce 01       	movw	r24, r28
    3680:	8f 5a       	subi	r24, 0xAF	; 175
    3682:	9f 4f       	sbci	r25, 0xFF	; 255
    3684:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3688:	00 e0       	ldi	r16, 0x00	; 0
    368a:	10 e0       	ldi	r17, 0x00	; 0
    368c:	98 01       	movw	r18, r16
    368e:	b9 01       	movw	r22, r18
    3690:	a8 01       	movw	r20, r16
    3692:	ce 01       	movw	r24, r28
    3694:	87 5a       	subi	r24, 0xA7	; 167
    3696:	9f 4f       	sbci	r25, 0xFF	; 255
    3698:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    369c:	00 e0       	ldi	r16, 0x00	; 0
    369e:	10 e0       	ldi	r17, 0x00	; 0
    36a0:	98 01       	movw	r18, r16
    36a2:	b9 01       	movw	r22, r18
    36a4:	a8 01       	movw	r20, r16
    36a6:	ce 01       	movw	r24, r28
    36a8:	8f 59       	subi	r24, 0x9F	; 159
    36aa:	9f 4f       	sbci	r25, 0xFF	; 255
    36ac:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    36b0:	00 e0       	ldi	r16, 0x00	; 0
    36b2:	10 e0       	ldi	r17, 0x00	; 0
    36b4:	98 01       	movw	r18, r16
    36b6:	b9 01       	movw	r22, r18
    36b8:	a8 01       	movw	r20, r16
    36ba:	ce 01       	movw	r24, r28
    36bc:	87 59       	subi	r24, 0x97	; 151
    36be:	9f 4f       	sbci	r25, 0xFF	; 255
    36c0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    36c4:	00 e0       	ldi	r16, 0x00	; 0
    36c6:	10 e0       	ldi	r17, 0x00	; 0
    36c8:	98 01       	movw	r18, r16
    36ca:	b9 01       	movw	r22, r18
    36cc:	a8 01       	movw	r20, r16
    36ce:	ce 01       	movw	r24, r28
    36d0:	8f 58       	subi	r24, 0x8F	; 143
    36d2:	9f 4f       	sbci	r25, 0xFF	; 255
    36d4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    36d8:	00 e0       	ldi	r16, 0x00	; 0
    36da:	10 e0       	ldi	r17, 0x00	; 0
    36dc:	98 01       	movw	r18, r16
    36de:	b9 01       	movw	r22, r18
    36e0:	a8 01       	movw	r20, r16
    36e2:	ce 01       	movw	r24, r28
    36e4:	87 58       	subi	r24, 0x87	; 135
    36e6:	9f 4f       	sbci	r25, 0xFF	; 255
    36e8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    36ec:	00 e0       	ldi	r16, 0x00	; 0
    36ee:	10 e0       	ldi	r17, 0x00	; 0
    36f0:	98 01       	movw	r18, r16
    36f2:	b9 01       	movw	r22, r18
    36f4:	a8 01       	movw	r20, r16
    36f6:	ce 01       	movw	r24, r28
    36f8:	8f 57       	subi	r24, 0x7F	; 127
    36fa:	9f 4f       	sbci	r25, 0xFF	; 255
    36fc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3700:	00 e0       	ldi	r16, 0x00	; 0
    3702:	10 e0       	ldi	r17, 0x00	; 0
    3704:	98 01       	movw	r18, r16
    3706:	b9 01       	movw	r22, r18
    3708:	a8 01       	movw	r20, r16
    370a:	ce 01       	movw	r24, r28
    370c:	87 57       	subi	r24, 0x77	; 119
    370e:	9f 4f       	sbci	r25, 0xFF	; 255
    3710:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3714:	00 e0       	ldi	r16, 0x00	; 0
    3716:	10 e0       	ldi	r17, 0x00	; 0
    3718:	98 01       	movw	r18, r16
    371a:	40 e0       	ldi	r20, 0x00	; 0
    371c:	50 e0       	ldi	r21, 0x00	; 0
    371e:	60 e8       	ldi	r22, 0x80	; 128
    3720:	7f e3       	ldi	r23, 0x3F	; 63
    3722:	ce 01       	movw	r24, r28
    3724:	8f 56       	subi	r24, 0x6F	; 111
    3726:	9f 4f       	sbci	r25, 0xFF	; 255
    3728:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    372c:	00 e0       	ldi	r16, 0x00	; 0
    372e:	10 e0       	ldi	r17, 0x00	; 0
    3730:	98 01       	movw	r18, r16
    3732:	b9 01       	movw	r22, r18
    3734:	a8 01       	movw	r20, r16
    3736:	ce 01       	movw	r24, r28
    3738:	87 56       	subi	r24, 0x67	; 103
    373a:	9f 4f       	sbci	r25, 0xFF	; 255
    373c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3740:	00 e0       	ldi	r16, 0x00	; 0
    3742:	10 e0       	ldi	r17, 0x00	; 0
    3744:	98 01       	movw	r18, r16
    3746:	b9 01       	movw	r22, r18
    3748:	a8 01       	movw	r20, r16
    374a:	ce 01       	movw	r24, r28
    374c:	8f 55       	subi	r24, 0x5F	; 95
    374e:	9f 4f       	sbci	r25, 0xFF	; 255
    3750:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3754:	00 e0       	ldi	r16, 0x00	; 0
    3756:	10 e0       	ldi	r17, 0x00	; 0
    3758:	98 01       	movw	r18, r16
    375a:	b9 01       	movw	r22, r18
    375c:	a8 01       	movw	r20, r16
    375e:	ce 01       	movw	r24, r28
    3760:	87 55       	subi	r24, 0x57	; 87
    3762:	9f 4f       	sbci	r25, 0xFF	; 255
    3764:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3768:	00 e0       	ldi	r16, 0x00	; 0
    376a:	10 e0       	ldi	r17, 0x00	; 0
    376c:	98 01       	movw	r18, r16
    376e:	b9 01       	movw	r22, r18
    3770:	a8 01       	movw	r20, r16
    3772:	ce 01       	movw	r24, r28
    3774:	8f 54       	subi	r24, 0x4F	; 79
    3776:	9f 4f       	sbci	r25, 0xFF	; 255
    3778:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    377c:	00 e0       	ldi	r16, 0x00	; 0
    377e:	10 e0       	ldi	r17, 0x00	; 0
    3780:	98 01       	movw	r18, r16
    3782:	b9 01       	movw	r22, r18
    3784:	a8 01       	movw	r20, r16
    3786:	ce 01       	movw	r24, r28
    3788:	87 54       	subi	r24, 0x47	; 71
    378a:	9f 4f       	sbci	r25, 0xFF	; 255
    378c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3790:	00 e0       	ldi	r16, 0x00	; 0
    3792:	10 e0       	ldi	r17, 0x00	; 0
    3794:	98 01       	movw	r18, r16
    3796:	b9 01       	movw	r22, r18
    3798:	a8 01       	movw	r20, r16
    379a:	ce 01       	movw	r24, r28
    379c:	8f 53       	subi	r24, 0x3F	; 63
    379e:	9f 4f       	sbci	r25, 0xFF	; 255
    37a0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    37a4:	00 e0       	ldi	r16, 0x00	; 0
    37a6:	10 e0       	ldi	r17, 0x00	; 0
    37a8:	98 01       	movw	r18, r16
    37aa:	b9 01       	movw	r22, r18
    37ac:	a8 01       	movw	r20, r16
    37ae:	ce 01       	movw	r24, r28
    37b0:	87 53       	subi	r24, 0x37	; 55
    37b2:	9f 4f       	sbci	r25, 0xFF	; 255
    37b4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    37b8:	00 e0       	ldi	r16, 0x00	; 0
    37ba:	10 e0       	ldi	r17, 0x00	; 0
    37bc:	98 01       	movw	r18, r16
    37be:	b9 01       	movw	r22, r18
    37c0:	a8 01       	movw	r20, r16
    37c2:	ce 01       	movw	r24, r28
    37c4:	8f 52       	subi	r24, 0x2F	; 47
    37c6:	9f 4f       	sbci	r25, 0xFF	; 255
    37c8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    37cc:	00 e0       	ldi	r16, 0x00	; 0
    37ce:	10 e0       	ldi	r17, 0x00	; 0
    37d0:	98 01       	movw	r18, r16
    37d2:	40 e0       	ldi	r20, 0x00	; 0
    37d4:	50 e0       	ldi	r21, 0x00	; 0
    37d6:	60 e8       	ldi	r22, 0x80	; 128
    37d8:	7f e3       	ldi	r23, 0x3F	; 63
    37da:	ce 01       	movw	r24, r28
    37dc:	87 52       	subi	r24, 0x27	; 39
    37de:	9f 4f       	sbci	r25, 0xFF	; 255
    37e0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    37e4:	00 e0       	ldi	r16, 0x00	; 0
    37e6:	10 e0       	ldi	r17, 0x00	; 0
    37e8:	98 01       	movw	r18, r16
    37ea:	b9 01       	movw	r22, r18
    37ec:	a8 01       	movw	r20, r16
    37ee:	ce 01       	movw	r24, r28
    37f0:	8f 51       	subi	r24, 0x1F	; 31
    37f2:	9f 4f       	sbci	r25, 0xFF	; 255
    37f4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    37f8:	00 e0       	ldi	r16, 0x00	; 0
    37fa:	10 e0       	ldi	r17, 0x00	; 0
    37fc:	98 01       	movw	r18, r16
    37fe:	b9 01       	movw	r22, r18
    3800:	a8 01       	movw	r20, r16
    3802:	ce 01       	movw	r24, r28
    3804:	87 51       	subi	r24, 0x17	; 23
    3806:	9f 4f       	sbci	r25, 0xFF	; 255
    3808:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    380c:	00 e0       	ldi	r16, 0x00	; 0
    380e:	10 e0       	ldi	r17, 0x00	; 0
    3810:	98 01       	movw	r18, r16
    3812:	b9 01       	movw	r22, r18
    3814:	a8 01       	movw	r20, r16
    3816:	ce 01       	movw	r24, r28
    3818:	8f 50       	subi	r24, 0x0F	; 15
    381a:	9f 4f       	sbci	r25, 0xFF	; 255
    381c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3820:	00 e0       	ldi	r16, 0x00	; 0
    3822:	10 e0       	ldi	r17, 0x00	; 0
    3824:	98 01       	movw	r18, r16
    3826:	b9 01       	movw	r22, r18
    3828:	a8 01       	movw	r20, r16
    382a:	ce 01       	movw	r24, r28
    382c:	87 50       	subi	r24, 0x07	; 7
    382e:	9f 4f       	sbci	r25, 0xFF	; 255
    3830:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3834:	00 e0       	ldi	r16, 0x00	; 0
    3836:	10 e0       	ldi	r17, 0x00	; 0
    3838:	98 01       	movw	r18, r16
    383a:	b9 01       	movw	r22, r18
    383c:	a8 01       	movw	r20, r16
    383e:	ce 01       	movw	r24, r28
    3840:	8f 5f       	subi	r24, 0xFF	; 255
    3842:	9e 4f       	sbci	r25, 0xFE	; 254
    3844:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3848:	00 e0       	ldi	r16, 0x00	; 0
    384a:	10 e0       	ldi	r17, 0x00	; 0
    384c:	98 01       	movw	r18, r16
    384e:	b9 01       	movw	r22, r18
    3850:	a8 01       	movw	r20, r16
    3852:	ce 01       	movw	r24, r28
    3854:	87 5f       	subi	r24, 0xF7	; 247
    3856:	9e 4f       	sbci	r25, 0xFE	; 254
    3858:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    385c:	00 e0       	ldi	r16, 0x00	; 0
    385e:	10 e0       	ldi	r17, 0x00	; 0
    3860:	98 01       	movw	r18, r16
    3862:	b9 01       	movw	r22, r18
    3864:	a8 01       	movw	r20, r16
    3866:	ce 01       	movw	r24, r28
    3868:	8f 5e       	subi	r24, 0xEF	; 239
    386a:	9e 4f       	sbci	r25, 0xFE	; 254
    386c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3870:	00 e0       	ldi	r16, 0x00	; 0
    3872:	10 e0       	ldi	r17, 0x00	; 0
    3874:	98 01       	movw	r18, r16
    3876:	b9 01       	movw	r22, r18
    3878:	a8 01       	movw	r20, r16
    387a:	ce 01       	movw	r24, r28
    387c:	87 5e       	subi	r24, 0xE7	; 231
    387e:	9e 4f       	sbci	r25, 0xFE	; 254
    3880:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3884:	00 e0       	ldi	r16, 0x00	; 0
    3886:	10 e0       	ldi	r17, 0x00	; 0
    3888:	98 01       	movw	r18, r16
    388a:	40 e0       	ldi	r20, 0x00	; 0
    388c:	50 e0       	ldi	r21, 0x00	; 0
    388e:	60 e8       	ldi	r22, 0x80	; 128
    3890:	7f e3       	ldi	r23, 0x3F	; 63
    3892:	ce 01       	movw	r24, r28
    3894:	8f 5d       	subi	r24, 0xDF	; 223
    3896:	9e 4f       	sbci	r25, 0xFE	; 254
    3898:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    389c:	00 e0       	ldi	r16, 0x00	; 0
    389e:	10 e0       	ldi	r17, 0x00	; 0
    38a0:	98 01       	movw	r18, r16
    38a2:	b9 01       	movw	r22, r18
    38a4:	a8 01       	movw	r20, r16
    38a6:	ce 01       	movw	r24, r28
    38a8:	87 5d       	subi	r24, 0xD7	; 215
    38aa:	9e 4f       	sbci	r25, 0xFE	; 254
    38ac:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    38b0:	00 e0       	ldi	r16, 0x00	; 0
    38b2:	10 e0       	ldi	r17, 0x00	; 0
    38b4:	98 01       	movw	r18, r16
    38b6:	b9 01       	movw	r22, r18
    38b8:	a8 01       	movw	r20, r16
    38ba:	ce 01       	movw	r24, r28
    38bc:	8f 5c       	subi	r24, 0xCF	; 207
    38be:	9e 4f       	sbci	r25, 0xFE	; 254
    38c0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    38c4:	00 e0       	ldi	r16, 0x00	; 0
    38c6:	10 e0       	ldi	r17, 0x00	; 0
    38c8:	98 01       	movw	r18, r16
    38ca:	b9 01       	movw	r22, r18
    38cc:	a8 01       	movw	r20, r16
    38ce:	ce 01       	movw	r24, r28
    38d0:	87 5c       	subi	r24, 0xC7	; 199
    38d2:	9e 4f       	sbci	r25, 0xFE	; 254
    38d4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    38d8:	00 e0       	ldi	r16, 0x00	; 0
    38da:	10 e0       	ldi	r17, 0x00	; 0
    38dc:	98 01       	movw	r18, r16
    38de:	b9 01       	movw	r22, r18
    38e0:	a8 01       	movw	r20, r16
    38e2:	ce 01       	movw	r24, r28
    38e4:	8f 5b       	subi	r24, 0xBF	; 191
    38e6:	9e 4f       	sbci	r25, 0xFE	; 254
    38e8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    38ec:	00 e0       	ldi	r16, 0x00	; 0
    38ee:	10 e0       	ldi	r17, 0x00	; 0
    38f0:	98 01       	movw	r18, r16
    38f2:	b9 01       	movw	r22, r18
    38f4:	a8 01       	movw	r20, r16
    38f6:	ce 01       	movw	r24, r28
    38f8:	87 5b       	subi	r24, 0xB7	; 183
    38fa:	9e 4f       	sbci	r25, 0xFE	; 254
    38fc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3900:	00 e0       	ldi	r16, 0x00	; 0
    3902:	10 e0       	ldi	r17, 0x00	; 0
    3904:	98 01       	movw	r18, r16
    3906:	b9 01       	movw	r22, r18
    3908:	a8 01       	movw	r20, r16
    390a:	ce 01       	movw	r24, r28
    390c:	8f 5a       	subi	r24, 0xAF	; 175
    390e:	9e 4f       	sbci	r25, 0xFE	; 254
    3910:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3914:	00 e0       	ldi	r16, 0x00	; 0
    3916:	10 e0       	ldi	r17, 0x00	; 0
    3918:	98 01       	movw	r18, r16
    391a:	b9 01       	movw	r22, r18
    391c:	a8 01       	movw	r20, r16
    391e:	ce 01       	movw	r24, r28
    3920:	87 5a       	subi	r24, 0xA7	; 167
    3922:	9e 4f       	sbci	r25, 0xFE	; 254
    3924:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3928:	00 e0       	ldi	r16, 0x00	; 0
    392a:	10 e0       	ldi	r17, 0x00	; 0
    392c:	98 01       	movw	r18, r16
    392e:	b9 01       	movw	r22, r18
    3930:	a8 01       	movw	r20, r16
    3932:	ce 01       	movw	r24, r28
    3934:	8f 59       	subi	r24, 0x9F	; 159
    3936:	9e 4f       	sbci	r25, 0xFE	; 254
    3938:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    393c:	00 e0       	ldi	r16, 0x00	; 0
    393e:	10 e0       	ldi	r17, 0x00	; 0
    3940:	98 01       	movw	r18, r16
    3942:	40 e0       	ldi	r20, 0x00	; 0
    3944:	50 e0       	ldi	r21, 0x00	; 0
    3946:	60 e8       	ldi	r22, 0x80	; 128
    3948:	7f e3       	ldi	r23, 0x3F	; 63
    394a:	ce 01       	movw	r24, r28
    394c:	87 59       	subi	r24, 0x97	; 151
    394e:	9e 4f       	sbci	r25, 0xFE	; 254
    3950:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3954:	00 e0       	ldi	r16, 0x00	; 0
    3956:	10 e0       	ldi	r17, 0x00	; 0
    3958:	98 01       	movw	r18, r16
    395a:	b9 01       	movw	r22, r18
    395c:	a8 01       	movw	r20, r16
    395e:	ce 01       	movw	r24, r28
    3960:	8f 58       	subi	r24, 0x8F	; 143
    3962:	9e 4f       	sbci	r25, 0xFE	; 254
    3964:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3968:	00 e0       	ldi	r16, 0x00	; 0
    396a:	10 e0       	ldi	r17, 0x00	; 0
    396c:	98 01       	movw	r18, r16
    396e:	b9 01       	movw	r22, r18
    3970:	a8 01       	movw	r20, r16
    3972:	ce 01       	movw	r24, r28
    3974:	87 58       	subi	r24, 0x87	; 135
    3976:	9e 4f       	sbci	r25, 0xFE	; 254
    3978:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    397c:	00 e0       	ldi	r16, 0x00	; 0
    397e:	10 e0       	ldi	r17, 0x00	; 0
    3980:	98 01       	movw	r18, r16
    3982:	b9 01       	movw	r22, r18
    3984:	a8 01       	movw	r20, r16
    3986:	ce 01       	movw	r24, r28
    3988:	8f 57       	subi	r24, 0x7F	; 127
    398a:	9e 4f       	sbci	r25, 0xFE	; 254
    398c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3990:	00 e0       	ldi	r16, 0x00	; 0
    3992:	10 e0       	ldi	r17, 0x00	; 0
    3994:	98 01       	movw	r18, r16
    3996:	b9 01       	movw	r22, r18
    3998:	a8 01       	movw	r20, r16
    399a:	ce 01       	movw	r24, r28
    399c:	87 57       	subi	r24, 0x77	; 119
    399e:	9e 4f       	sbci	r25, 0xFE	; 254
    39a0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    39a4:	00 e0       	ldi	r16, 0x00	; 0
    39a6:	10 e0       	ldi	r17, 0x00	; 0
    39a8:	98 01       	movw	r18, r16
    39aa:	b9 01       	movw	r22, r18
    39ac:	a8 01       	movw	r20, r16
    39ae:	ce 01       	movw	r24, r28
    39b0:	8f 56       	subi	r24, 0x6F	; 111
    39b2:	9e 4f       	sbci	r25, 0xFE	; 254
    39b4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    39b8:	00 e0       	ldi	r16, 0x00	; 0
    39ba:	10 e0       	ldi	r17, 0x00	; 0
    39bc:	98 01       	movw	r18, r16
    39be:	b9 01       	movw	r22, r18
    39c0:	a8 01       	movw	r20, r16
    39c2:	ce 01       	movw	r24, r28
    39c4:	87 56       	subi	r24, 0x67	; 103
    39c6:	9e 4f       	sbci	r25, 0xFE	; 254
    39c8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    39cc:	00 e0       	ldi	r16, 0x00	; 0
    39ce:	10 e0       	ldi	r17, 0x00	; 0
    39d0:	98 01       	movw	r18, r16
    39d2:	b9 01       	movw	r22, r18
    39d4:	a8 01       	movw	r20, r16
    39d6:	ce 01       	movw	r24, r28
    39d8:	8f 55       	subi	r24, 0x5F	; 95
    39da:	9e 4f       	sbci	r25, 0xFE	; 254
    39dc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    39e0:	00 e0       	ldi	r16, 0x00	; 0
    39e2:	10 e0       	ldi	r17, 0x00	; 0
    39e4:	98 01       	movw	r18, r16
    39e6:	b9 01       	movw	r22, r18
    39e8:	a8 01       	movw	r20, r16
    39ea:	ce 01       	movw	r24, r28
    39ec:	87 55       	subi	r24, 0x57	; 87
    39ee:	9e 4f       	sbci	r25, 0xFE	; 254
    39f0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
														  {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),               Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,cos(delta_float)),Complex(sin(delta_float),0)},
    39f4:	c5 01       	movw	r24, r10
    39f6:	b4 01       	movw	r22, r8
    39f8:	0e 94 5d 2e 	call	0x5cba	; 0x5cba <cos>
    39fc:	6b 01       	movw	r12, r22
    39fe:	7c 01       	movw	r14, r24
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(sin(delta_float),0),Complex(0,cos(delta_float))}};
    3a00:	8b 01       	movw	r16, r22
    3a02:	9c 01       	movw	r18, r24
    3a04:	40 e0       	ldi	r20, 0x00	; 0
    3a06:	50 e0       	ldi	r21, 0x00	; 0
    3a08:	ba 01       	movw	r22, r20
    3a0a:	ce 01       	movw	r24, r28
    3a0c:	8f 54       	subi	r24, 0x4F	; 79
    3a0e:	9e 4f       	sbci	r25, 0xFE	; 254
    3a10:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
														  {Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),               Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(1,0),Complex(0,0),				 Complex(0,0)},
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,cos(delta_float)),Complex(sin(delta_float),0)},
    3a14:	c5 01       	movw	r24, r10
    3a16:	b4 01       	movw	r22, r8
    3a18:	0e 94 71 31 	call	0x62e2	; 0x62e2 <sin>
    3a1c:	4b 01       	movw	r8, r22
    3a1e:	5c 01       	movw	r10, r24
														  {Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(0,0),Complex(sin(delta_float),0),Complex(0,cos(delta_float))}};
    3a20:	00 e0       	ldi	r16, 0x00	; 0
    3a22:	10 e0       	ldi	r17, 0x00	; 0
    3a24:	98 01       	movw	r18, r16
    3a26:	ab 01       	movw	r20, r22
    3a28:	bc 01       	movw	r22, r24
    3a2a:	ce 01       	movw	r24, r28
    3a2c:	87 54       	subi	r24, 0x47	; 71
    3a2e:	9e 4f       	sbci	r25, 0xFE	; 254
    3a30:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3a34:	00 e0       	ldi	r16, 0x00	; 0
    3a36:	10 e0       	ldi	r17, 0x00	; 0
    3a38:	98 01       	movw	r18, r16
    3a3a:	b9 01       	movw	r22, r18
    3a3c:	a8 01       	movw	r20, r16
    3a3e:	ce 01       	movw	r24, r28
    3a40:	8f 53       	subi	r24, 0x3F	; 63
    3a42:	9e 4f       	sbci	r25, 0xFE	; 254
    3a44:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3a48:	00 e0       	ldi	r16, 0x00	; 0
    3a4a:	10 e0       	ldi	r17, 0x00	; 0
    3a4c:	98 01       	movw	r18, r16
    3a4e:	b9 01       	movw	r22, r18
    3a50:	a8 01       	movw	r20, r16
    3a52:	ce 01       	movw	r24, r28
    3a54:	87 53       	subi	r24, 0x37	; 55
    3a56:	9e 4f       	sbci	r25, 0xFE	; 254
    3a58:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3a5c:	00 e0       	ldi	r16, 0x00	; 0
    3a5e:	10 e0       	ldi	r17, 0x00	; 0
    3a60:	98 01       	movw	r18, r16
    3a62:	b9 01       	movw	r22, r18
    3a64:	a8 01       	movw	r20, r16
    3a66:	ce 01       	movw	r24, r28
    3a68:	8f 52       	subi	r24, 0x2F	; 47
    3a6a:	9e 4f       	sbci	r25, 0xFE	; 254
    3a6c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3a70:	00 e0       	ldi	r16, 0x00	; 0
    3a72:	10 e0       	ldi	r17, 0x00	; 0
    3a74:	98 01       	movw	r18, r16
    3a76:	b9 01       	movw	r22, r18
    3a78:	a8 01       	movw	r20, r16
    3a7a:	ce 01       	movw	r24, r28
    3a7c:	87 52       	subi	r24, 0x27	; 39
    3a7e:	9e 4f       	sbci	r25, 0xFE	; 254
    3a80:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3a84:	00 e0       	ldi	r16, 0x00	; 0
    3a86:	10 e0       	ldi	r17, 0x00	; 0
    3a88:	98 01       	movw	r18, r16
    3a8a:	b9 01       	movw	r22, r18
    3a8c:	a8 01       	movw	r20, r16
    3a8e:	ce 01       	movw	r24, r28
    3a90:	8f 51       	subi	r24, 0x1F	; 31
    3a92:	9e 4f       	sbci	r25, 0xFE	; 254
    3a94:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3a98:	00 e0       	ldi	r16, 0x00	; 0
    3a9a:	10 e0       	ldi	r17, 0x00	; 0
    3a9c:	98 01       	movw	r18, r16
    3a9e:	b9 01       	movw	r22, r18
    3aa0:	a8 01       	movw	r20, r16
    3aa2:	ce 01       	movw	r24, r28
    3aa4:	87 51       	subi	r24, 0x17	; 23
    3aa6:	9e 4f       	sbci	r25, 0xFE	; 254
    3aa8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3aac:	00 e0       	ldi	r16, 0x00	; 0
    3aae:	10 e0       	ldi	r17, 0x00	; 0
    3ab0:	98 01       	movw	r18, r16
    3ab2:	b5 01       	movw	r22, r10
    3ab4:	a4 01       	movw	r20, r8
    3ab6:	ce 01       	movw	r24, r28
    3ab8:	8f 50       	subi	r24, 0x0F	; 15
    3aba:	9e 4f       	sbci	r25, 0xFE	; 254
    3abc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
    3ac0:	97 01       	movw	r18, r14
    3ac2:	86 01       	movw	r16, r12
    3ac4:	40 e0       	ldi	r20, 0x00	; 0
    3ac6:	50 e0       	ldi	r21, 0x00	; 0
    3ac8:	ba 01       	movw	r22, r20
    3aca:	ce 01       	movw	r24, r28
    3acc:	87 50       	subi	r24, 0x07	; 7
    3ace:	9e 4f       	sbci	r25, 0xFE	; 254
    3ad0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7ComplexC1Eff>
	int theta_list[QB_SIZE3]={theta1,theta2,theta3}; int phi_list[QB_SIZE3]={phi1,phi2,phi3};
    3ad4:	c9 5f       	subi	r28, 0xF9	; 249
    3ad6:	dd 4f       	sbci	r29, 0xFD	; 253
    3ad8:	59 82       	std	Y+1, r5	; 0x01
    3ada:	48 82       	st	Y, r4
    3adc:	c7 50       	subi	r28, 0x07	; 7
    3ade:	d2 40       	sbci	r29, 0x02	; 2
    3ae0:	c7 5f       	subi	r28, 0xF7	; 247
    3ae2:	dd 4f       	sbci	r29, 0xFD	; 253
    3ae4:	79 82       	std	Y+1, r7	; 0x01
    3ae6:	68 82       	st	Y, r6
    3ae8:	c9 50       	subi	r28, 0x09	; 9
    3aea:	d2 40       	sbci	r29, 0x02	; 2
    3aec:	c5 5f       	subi	r28, 0xF5	; 245
    3aee:	dd 4f       	sbci	r29, 0xFD	; 253
    3af0:	39 82       	std	Y+1, r3	; 0x01
    3af2:	28 82       	st	Y, r2
    3af4:	cb 50       	subi	r28, 0x0B	; 11
    3af6:	d2 40       	sbci	r29, 0x02	; 2
    3af8:	c1 5f       	subi	r28, 0xF1	; 241
    3afa:	dd 4f       	sbci	r29, 0xFD	; 253
    3afc:	88 81       	ld	r24, Y
    3afe:	99 81       	ldd	r25, Y+1	; 0x01
    3b00:	cf 50       	subi	r28, 0x0F	; 15
    3b02:	d2 40       	sbci	r29, 0x02	; 2
    3b04:	cf 5f       	subi	r28, 0xFF	; 255
    3b06:	dd 4f       	sbci	r29, 0xFD	; 253
    3b08:	99 83       	std	Y+1, r25	; 0x01
    3b0a:	88 83       	st	Y, r24
    3b0c:	c1 50       	subi	r28, 0x01	; 1
    3b0e:	d2 40       	sbci	r29, 0x02	; 2
    3b10:	cf 5e       	subi	r28, 0xEF	; 239
    3b12:	dd 4f       	sbci	r29, 0xFD	; 253
    3b14:	88 81       	ld	r24, Y
    3b16:	99 81       	ldd	r25, Y+1	; 0x01
    3b18:	c1 51       	subi	r28, 0x11	; 17
    3b1a:	d2 40       	sbci	r29, 0x02	; 2
    3b1c:	cd 5f       	subi	r28, 0xFD	; 253
    3b1e:	dd 4f       	sbci	r29, 0xFD	; 253
    3b20:	99 83       	std	Y+1, r25	; 0x01
    3b22:	88 83       	st	Y, r24
    3b24:	c3 50       	subi	r28, 0x03	; 3
    3b26:	d2 40       	sbci	r29, 0x02	; 2
    3b28:	cd 5e       	subi	r28, 0xED	; 237
    3b2a:	dd 4f       	sbci	r29, 0xFD	; 253
    3b2c:	88 81       	ld	r24, Y
    3b2e:	99 81       	ldd	r25, Y+1	; 0x01
    3b30:	c3 51       	subi	r28, 0x13	; 19
    3b32:	d2 40       	sbci	r29, 0x02	; 2
    3b34:	cb 5f       	subi	r28, 0xFB	; 251
    3b36:	dd 4f       	sbci	r29, 0xFD	; 253
    3b38:	99 83       	std	Y+1, r25	; 0x01
    3b3a:	88 83       	st	Y, r24
    3b3c:	c5 50       	subi	r28, 0x05	; 5
    3b3e:	d2 40       	sbci	r29, 0x02	; 2
	return vec2ampl(multiply8x8(ampl2vec(QB_SIZE3,theta_list,phi_list),deu_matrix),QB_SIZE3);	
    3b40:	9e 01       	movw	r18, r28
    3b42:	2f 5f       	subi	r18, 0xFF	; 255
    3b44:	3d 4f       	sbci	r19, 0xFD	; 253
    3b46:	ae 01       	movw	r20, r28
    3b48:	49 5f       	subi	r20, 0xF9	; 249
    3b4a:	5d 4f       	sbci	r21, 0xFD	; 253
    3b4c:	63 e0       	ldi	r22, 0x03	; 3
    3b4e:	70 e0       	ldi	r23, 0x00	; 0
    3b50:	c3 5f       	subi	r28, 0xF3	; 243
    3b52:	dd 4f       	sbci	r29, 0xFD	; 253
    3b54:	88 81       	ld	r24, Y
    3b56:	99 81       	ldd	r25, Y+1	; 0x01
    3b58:	cd 50       	subi	r28, 0x0D	; 13
    3b5a:	d2 40       	sbci	r29, 0x02	; 2
    3b5c:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN5Gates8ampl2vecEiPiS0_>
    3b60:	ae 01       	movw	r20, r28
    3b62:	4f 5f       	subi	r20, 0xFF	; 255
    3b64:	5f 4f       	sbci	r21, 0xFF	; 255
    3b66:	bc 01       	movw	r22, r24
    3b68:	c3 5f       	subi	r28, 0xF3	; 243
    3b6a:	dd 4f       	sbci	r29, 0xFD	; 253
    3b6c:	88 81       	ld	r24, Y
    3b6e:	99 81       	ldd	r25, Y+1	; 0x01
    3b70:	cd 50       	subi	r28, 0x0D	; 13
    3b72:	d2 40       	sbci	r29, 0x02	; 2
    3b74:	0e 94 8e 08 	call	0x111c	; 0x111c <_ZN5Gates11multiply8x8EP7ComplexPA8_S0_>
    3b78:	43 e0       	ldi	r20, 0x03	; 3
    3b7a:	50 e0       	ldi	r21, 0x00	; 0
    3b7c:	bc 01       	movw	r22, r24
    3b7e:	c3 5f       	subi	r28, 0xF3	; 243
    3b80:	dd 4f       	sbci	r29, 0xFD	; 253
    3b82:	88 81       	ld	r24, Y
    3b84:	99 81       	ldd	r25, Y+1	; 0x01
    3b86:	cd 50       	subi	r28, 0x0D	; 13
    3b88:	d2 40       	sbci	r29, 0x02	; 2
    3b8a:	0e 94 98 06 	call	0xd30	; 0xd30 <_ZN5Gates8vec2amplEP7Complexi>
    3b8e:	cc 5e       	subi	r28, 0xEC	; 236
    3b90:	dd 4f       	sbci	r29, 0xFD	; 253
    3b92:	0f b6       	in	r0, 0x3f	; 63
    3b94:	f8 94       	cli
    3b96:	de bf       	out	0x3e, r29	; 62
    3b98:	0f be       	out	0x3f, r0	; 63
    3b9a:	cd bf       	out	0x3d, r28	; 61
    3b9c:	df 91       	pop	r29
    3b9e:	cf 91       	pop	r28
    3ba0:	1f 91       	pop	r17
    3ba2:	0f 91       	pop	r16
    3ba4:	ff 90       	pop	r15
    3ba6:	ef 90       	pop	r14
    3ba8:	df 90       	pop	r13
    3baa:	cf 90       	pop	r12
    3bac:	bf 90       	pop	r11
    3bae:	af 90       	pop	r10
    3bb0:	9f 90       	pop	r9
    3bb2:	8f 90       	pop	r8
    3bb4:	7f 90       	pop	r7
    3bb6:	6f 90       	pop	r6
    3bb8:	5f 90       	pop	r5
    3bba:	4f 90       	pop	r4
    3bbc:	3f 90       	pop	r3
    3bbe:	2f 90       	pop	r2
    3bc0:	08 95       	ret

00003bc2 <_GLOBAL__sub_I__ZN5GatesC2Ev>:
#include <stdarg.h>
#include <stdlib.h>
#include <avr/eeprom.h>
Gates::Gates(){}

Serial s;
    3bc2:	82 e1       	ldi	r24, 0x12	; 18
    3bc4:	91 e0       	ldi	r25, 0x01	; 1
    3bc6:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <_ZN6SerialC1Ev>
    3bca:	08 95       	ret

00003bcc <_ZN4QEPU9JumpstackC1Ev>:
#include "qepu.h"

QEPU::Jumpstack::Jumpstack():newest_address_index(0){
    3bcc:	fc 01       	movw	r30, r24
    3bce:	11 82       	std	Z+1, r1	; 0x01
    3bd0:	10 82       	st	Z, r1
    3bd2:	08 95       	ret

00003bd4 <_ZN4QEPU9Jumpstack4pushEi>:
	
}
void QEPU::Jumpstack::push(int newaddress){
	addresses_toreturn[newest_address_index]=newaddress;
    3bd4:	fc 01       	movw	r30, r24
    3bd6:	20 81       	ld	r18, Z
    3bd8:	31 81       	ldd	r19, Z+1	; 0x01
    3bda:	2f 5f       	subi	r18, 0xFF	; 255
    3bdc:	3f 4f       	sbci	r19, 0xFF	; 255
    3bde:	f9 01       	movw	r30, r18
    3be0:	ee 0f       	add	r30, r30
    3be2:	ff 1f       	adc	r31, r31
    3be4:	e8 0f       	add	r30, r24
    3be6:	f9 1f       	adc	r31, r25
    3be8:	71 83       	std	Z+1, r23	; 0x01
    3bea:	60 83       	st	Z, r22
	newest_address_index++;
    3bec:	fc 01       	movw	r30, r24
    3bee:	31 83       	std	Z+1, r19	; 0x01
    3bf0:	20 83       	st	Z, r18
    3bf2:	08 95       	ret

00003bf4 <_ZN4QEPU9Jumpstack3popEv>:
}
int QEPU::Jumpstack::pop(){
    3bf4:	fc 01       	movw	r30, r24
	if(newest_address_index<=0) return 0;
    3bf6:	20 81       	ld	r18, Z
    3bf8:	31 81       	ldd	r19, Z+1	; 0x01
    3bfa:	12 16       	cp	r1, r18
    3bfc:	13 06       	cpc	r1, r19
    3bfe:	a4 f4       	brge	.+40     	; 0x3c28 <_ZN4QEPU9Jumpstack3popEv+0x34>
    3c00:	d9 01       	movw	r26, r18
    3c02:	aa 0f       	add	r26, r26
    3c04:	bb 1f       	adc	r27, r27
    3c06:	a8 0f       	add	r26, r24
    3c08:	b9 1f       	adc	r27, r25
	int address_returning=addresses_toreturn[newest_address_index];
    3c0a:	12 96       	adiw	r26, 0x02	; 2
    3c0c:	8c 91       	ld	r24, X
    3c0e:	12 97       	sbiw	r26, 0x02	; 2
    3c10:	13 96       	adiw	r26, 0x03	; 3
    3c12:	9c 91       	ld	r25, X
    3c14:	13 97       	sbiw	r26, 0x03	; 3
	addresses_toreturn[newest_address_index]=0;
    3c16:	13 96       	adiw	r26, 0x03	; 3
    3c18:	1c 92       	st	X, r1
    3c1a:	1e 92       	st	-X, r1
    3c1c:	12 97       	sbiw	r26, 0x02	; 2
	newest_address_index--;
    3c1e:	21 50       	subi	r18, 0x01	; 1
    3c20:	31 09       	sbc	r19, r1
    3c22:	31 83       	std	Z+1, r19	; 0x01
    3c24:	20 83       	st	Z, r18
	return address_returning;
    3c26:	08 95       	ret
void QEPU::Jumpstack::push(int newaddress){
	addresses_toreturn[newest_address_index]=newaddress;
	newest_address_index++;
}
int QEPU::Jumpstack::pop(){
	if(newest_address_index<=0) return 0;
    3c28:	80 e0       	ldi	r24, 0x00	; 0
    3c2a:	90 e0       	ldi	r25, 0x00	; 0
	int address_returning=addresses_toreturn[newest_address_index];
	addresses_toreturn[newest_address_index]=0;
	newest_address_index--;
	return address_returning;
}
    3c2c:	08 95       	ret

00003c2e <_ZN4QEPU10setup_seedEv>:

//SETUP SEED FOR RAND():
uint16_t EEMEM randinit;

void QEPU::setup_seed(){
	srand(eeprom_read_word(&randinit));
    3c2e:	80 e0       	ldi	r24, 0x00	; 0
    3c30:	90 e0       	ldi	r25, 0x00	; 0
    3c32:	0e 94 d5 36 	call	0x6daa	; 0x6daa <__eerd_word_m32>
    3c36:	0e 94 8a 33 	call	0x6714	; 0x6714 <srand>
	eeprom_write_word(&randinit,rand()%10000);
    3c3a:	0e 94 85 33 	call	0x670a	; 0x670a <rand>
    3c3e:	60 e1       	ldi	r22, 0x10	; 16
    3c40:	77 e2       	ldi	r23, 0x27	; 39
    3c42:	0e 94 e2 31 	call	0x63c4	; 0x63c4 <__divmodhi4>
    3c46:	bc 01       	movw	r22, r24
    3c48:	80 e0       	ldi	r24, 0x00	; 0
    3c4a:	90 e0       	ldi	r25, 0x00	; 0
    3c4c:	0e 94 db 36 	call	0x6db6	; 0x6db6 <__eewr_word_m32>
    3c50:	08 95       	ret

00003c52 <_ZN4QEPUC1Ev>:
#include "qepu.h"
QEPU::QEPU(){serial.writestr("INITIALIZING . . . ");setup_seed();CTRL_QB_DIR=OUTPUT;program_counter=0;program_counter_maximum=0;}
    3c52:	0f 93       	push	r16
    3c54:	1f 93       	push	r17
    3c56:	cf 93       	push	r28
    3c58:	df 93       	push	r29
    3c5a:	ec 01       	movw	r28, r24
    3c5c:	0e 94 c0 02 	call	0x580	; 0x580 <_ZN4QEPU4FlagC1Ev>
    3c60:	8e 01       	movw	r16, r28
    3c62:	0f 5f       	subi	r16, 0xFF	; 255
    3c64:	1f 4f       	sbci	r17, 0xFF	; 255
    3c66:	c8 01       	movw	r24, r16
    3c68:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <_ZN6SerialC1Ev>
    3c6c:	ce 01       	movw	r24, r28
    3c6e:	02 96       	adiw	r24, 0x02	; 2
    3c70:	0e 94 1c 02 	call	0x438	; 0x438 <_ZN6EEPromC1Ev>
    3c74:	ce 01       	movw	r24, r28
    3c76:	03 96       	adiw	r24, 0x03	; 3
    3c78:	0e 94 27 2b 	call	0x564e	; 0x564e <_ZN4SRAMC1Ev>
    3c7c:	ce 01       	movw	r24, r28
    3c7e:	09 96       	adiw	r24, 0x09	; 9
    3c80:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <_ZN5GatesC1Ev>
    3c84:	ce 01       	movw	r24, r28
    3c86:	0a 96       	adiw	r24, 0x0a	; 10
    3c88:	0e 94 e6 1d 	call	0x3bcc	; 0x3bcc <_ZN4QEPU9JumpstackC1Ev>
    3c8c:	66 e8       	ldi	r22, 0x86	; 134
    3c8e:	70 e0       	ldi	r23, 0x00	; 0
    3c90:	c8 01       	movw	r24, r16
    3c92:	0e 94 85 2c 	call	0x590a	; 0x590a <_ZN6Serial8writestrEPc>
    3c96:	ce 01       	movw	r24, r28
    3c98:	0e 94 17 1e 	call	0x3c2e	; 0x3c2e <_ZN4QEPU10setup_seedEv>
    3c9c:	8f ef       	ldi	r24, 0xFF	; 255
    3c9e:	8a bb       	out	0x1a, r24	; 26
    3ca0:	fe 01       	movw	r30, r28
    3ca2:	eb 52       	subi	r30, 0x2B	; 43
    3ca4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ca6:	11 82       	std	Z+1, r1	; 0x01
    3ca8:	10 82       	st	Z, r1
    3caa:	c9 52       	subi	r28, 0x29	; 41
    3cac:	df 4f       	sbci	r29, 0xFF	; 255
    3cae:	19 82       	std	Y+1, r1	; 0x01
    3cb0:	18 82       	st	Y, r1
    3cb2:	df 91       	pop	r29
    3cb4:	cf 91       	pop	r28
    3cb6:	1f 91       	pop	r17
    3cb8:	0f 91       	pop	r16
    3cba:	08 95       	ret

00003cbc <_ZN4QEPU14setbuffctrlpinEii>:
void QEPU::setdatapin(int pin,int state){
	BUS_OUT&=~(1<<pin); // CLEAR PIN
	BUS_OUT|=(state<<pin); // SET PIN
}
void QEPU::setbuffctrlpin(int pin,int state){
	CTRL_BUFF&=~(1<<pin); // CLEAR PIN
    3cbc:	75 b3       	in	r23, 0x15	; 21
    3cbe:	21 e0       	ldi	r18, 0x01	; 1
    3cc0:	30 e0       	ldi	r19, 0x00	; 0
    3cc2:	c9 01       	movw	r24, r18
    3cc4:	06 2e       	mov	r0, r22
    3cc6:	02 c0       	rjmp	.+4      	; 0x3ccc <_ZN4QEPU14setbuffctrlpinEii+0x10>
    3cc8:	88 0f       	add	r24, r24
    3cca:	99 1f       	adc	r25, r25
    3ccc:	0a 94       	dec	r0
    3cce:	e2 f7       	brpl	.-8      	; 0x3cc8 <_ZN4QEPU14setbuffctrlpinEii+0xc>
    3cd0:	80 95       	com	r24
    3cd2:	87 23       	and	r24, r23
    3cd4:	85 bb       	out	0x15, r24	; 21
	CTRL_BUFF|=(state<<pin); // SET PIN
    3cd6:	85 b3       	in	r24, 0x15	; 21
    3cd8:	02 c0       	rjmp	.+4      	; 0x3cde <_ZN4QEPU14setbuffctrlpinEii+0x22>
    3cda:	44 0f       	add	r20, r20
    3cdc:	55 1f       	adc	r21, r21
    3cde:	6a 95       	dec	r22
    3ce0:	e2 f7       	brpl	.-8      	; 0x3cda <_ZN4QEPU14setbuffctrlpinEii+0x1e>
    3ce2:	48 2b       	or	r20, r24
    3ce4:	45 bb       	out	0x15, r20	; 21
    3ce6:	08 95       	ret

00003ce8 <_ZN4QEPU14deselect_qubitEv>:
		deselect_qubit();
	}
	return deg_read;
}
void QEPU::deselect_qubit(){
	CTRL_BUFF_DIR=OUTPUT;
    3ce8:	2f ef       	ldi	r18, 0xFF	; 255
    3cea:	24 bb       	out	0x14, r18	; 20
	setbuffctrlpin(EO_AB,LOW);
    3cec:	40 e0       	ldi	r20, 0x00	; 0
    3cee:	50 e0       	ldi	r21, 0x00	; 0
    3cf0:	64 e0       	ldi	r22, 0x04	; 4
    3cf2:	70 e0       	ldi	r23, 0x00	; 0
    3cf4:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <_ZN4QEPU14setbuffctrlpinEii>
    3cf8:	08 95       	ret

00003cfa <_ZN4QEPU12select_qubitEi>:
}
void QEPU::select_qubit(int index){
    3cfa:	af 92       	push	r10
    3cfc:	bf 92       	push	r11
    3cfe:	cf 92       	push	r12
    3d00:	df 92       	push	r13
    3d02:	ef 92       	push	r14
    3d04:	ff 92       	push	r15
    3d06:	0f 93       	push	r16
    3d08:	1f 93       	push	r17
    3d0a:	cf 93       	push	r28
    3d0c:	df 93       	push	r29
    3d0e:	00 d0       	rcall	.+0      	; 0x3d10 <_ZN4QEPU12select_qubitEi+0x16>
    3d10:	00 d0       	rcall	.+0      	; 0x3d12 <_ZN4QEPU12select_qubitEi+0x18>
    3d12:	00 d0       	rcall	.+0      	; 0x3d14 <_ZN4QEPU12select_qubitEi+0x1a>
    3d14:	cd b7       	in	r28, 0x3d	; 61
    3d16:	de b7       	in	r29, 0x3e	; 62
    3d18:	8c 01       	movw	r16, r24
	int address_buffer[ADDRESS_BUFFER_SIZE];
	int mask_bit_addressbuff=0b1111;
	for(int i=0;i<ADDRESS_BUFFER_SIZE;i++){
		address_buffer[i]=(index&mask_bit_addressbuff)>>(4*i);
    3d1a:	cb 01       	movw	r24, r22
    3d1c:	8f 70       	andi	r24, 0x0F	; 15
    3d1e:	99 27       	eor	r25, r25
    3d20:	9a 83       	std	Y+2, r25	; 0x02
    3d22:	89 83       	std	Y+1, r24	; 0x01
    3d24:	cb 01       	movw	r24, r22
    3d26:	80 7f       	andi	r24, 0xF0	; 240
    3d28:	99 27       	eor	r25, r25
    3d2a:	95 95       	asr	r25
    3d2c:	87 95       	ror	r24
    3d2e:	95 95       	asr	r25
    3d30:	87 95       	ror	r24
    3d32:	95 95       	asr	r25
    3d34:	87 95       	ror	r24
    3d36:	95 95       	asr	r25
    3d38:	87 95       	ror	r24
    3d3a:	9c 83       	std	Y+4, r25	; 0x04
    3d3c:	8b 83       	std	Y+3, r24	; 0x03
    3d3e:	66 27       	eor	r22, r22
    3d40:	7f 70       	andi	r23, 0x0F	; 15
    3d42:	87 2f       	mov	r24, r23
    3d44:	88 0f       	add	r24, r24
    3d46:	88 0b       	sbc	r24, r24
    3d48:	7d 83       	std	Y+5, r23	; 0x05
    3d4a:	8e 83       	std	Y+6, r24	; 0x06
		mask_bit_addressbuff<<=4;
	}
	CTRL_QB_DIR=OUTPUT;
    3d4c:	8f ef       	ldi	r24, 0xFF	; 255
    3d4e:	8a bb       	out	0x1a, r24	; 26
	CTRL_BUFF_DIR=OUTPUT;
    3d50:	84 bb       	out	0x14, r24	; 20
	setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
	setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
	setbuffctrlpin(EO_AB,HIGH);
}
void QEPU::setctrl(int bin){
	CTRL_QB=bin;
    3d52:	89 81       	ldd	r24, Y+1	; 0x01
    3d54:	8b bb       	out	0x1b, r24	; 27
	}
	CTRL_QB_DIR=OUTPUT;
	CTRL_BUFF_DIR=OUTPUT;
	
	setctrl(address_buffer[0]);
	setbuffctrlpin(IN_ABBUFFER_START,HIGH);
    3d56:	41 e0       	ldi	r20, 0x01	; 1
    3d58:	50 e0       	ldi	r21, 0x00	; 0
    3d5a:	62 e0       	ldi	r22, 0x02	; 2
    3d5c:	70 e0       	ldi	r23, 0x00	; 0
    3d5e:	c8 01       	movw	r24, r16
    3d60:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <_ZN4QEPU14setbuffctrlpinEii>
	setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
    3d64:	41 e0       	ldi	r20, 0x01	; 1
    3d66:	50 e0       	ldi	r21, 0x00	; 0
    3d68:	63 e0       	ldi	r22, 0x03	; 3
    3d6a:	70 e0       	ldi	r23, 0x00	; 0
    3d6c:	c8 01       	movw	r24, r16
    3d6e:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <_ZN4QEPU14setbuffctrlpinEii>
	setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
    3d72:	40 e0       	ldi	r20, 0x00	; 0
    3d74:	50 e0       	ldi	r21, 0x00	; 0
    3d76:	63 e0       	ldi	r22, 0x03	; 3
    3d78:	70 e0       	ldi	r23, 0x00	; 0
    3d7a:	c8 01       	movw	r24, r16
    3d7c:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <_ZN4QEPU14setbuffctrlpinEii>
	setbuffctrlpin(IN_ABBUFFER_START,LOW);
    3d80:	40 e0       	ldi	r20, 0x00	; 0
    3d82:	50 e0       	ldi	r21, 0x00	; 0
    3d84:	62 e0       	ldi	r22, 0x02	; 2
    3d86:	70 e0       	ldi	r23, 0x00	; 0
    3d88:	c8 01       	movw	r24, r16
    3d8a:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <_ZN4QEPU14setbuffctrlpinEii>
	utils.delay(ADDRESS_WRITE_DELAY);
    3d8e:	68 01       	movw	r12, r16
    3d90:	84 ed       	ldi	r24, 0xD4	; 212
    3d92:	c8 0e       	add	r12, r24
    3d94:	d1 1c       	adc	r13, r1
    3d96:	6a e0       	ldi	r22, 0x0A	; 10
    3d98:	70 e0       	ldi	r23, 0x00	; 0
    3d9a:	c6 01       	movw	r24, r12
    3d9c:	0e 94 59 2d 	call	0x5ab2	; 0x5ab2 <_ZN5Utils5delayEi>
    3da0:	7e 01       	movw	r14, r28
    3da2:	93 e0       	ldi	r25, 0x03	; 3
    3da4:	e9 0e       	add	r14, r25
    3da6:	f1 1c       	adc	r15, r1
    3da8:	5e 01       	movw	r10, r28
    3daa:	e7 e0       	ldi	r30, 0x07	; 7
    3dac:	ae 0e       	add	r10, r30
    3dae:	b1 1c       	adc	r11, r1
	for(int i=1;i<ADDRESS_BUFFER_SIZE;i++){
		setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
    3db0:	41 e0       	ldi	r20, 0x01	; 1
    3db2:	50 e0       	ldi	r21, 0x00	; 0
    3db4:	63 e0       	ldi	r22, 0x03	; 3
    3db6:	70 e0       	ldi	r23, 0x00	; 0
    3db8:	c8 01       	movw	r24, r16
    3dba:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <_ZN4QEPU14setbuffctrlpinEii>
		setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
    3dbe:	40 e0       	ldi	r20, 0x00	; 0
    3dc0:	50 e0       	ldi	r21, 0x00	; 0
    3dc2:	63 e0       	ldi	r22, 0x03	; 3
    3dc4:	70 e0       	ldi	r23, 0x00	; 0
    3dc6:	c8 01       	movw	r24, r16
    3dc8:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <_ZN4QEPU14setbuffctrlpinEii>
		setctrl(address_buffer[i]);
    3dcc:	f7 01       	movw	r30, r14
    3dce:	80 81       	ld	r24, Z
    3dd0:	f2 e0       	ldi	r31, 0x02	; 2
    3dd2:	ef 0e       	add	r14, r31
    3dd4:	f1 1c       	adc	r15, r1
	setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
	setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
	setbuffctrlpin(EO_AB,HIGH);
}
void QEPU::setctrl(int bin){
	CTRL_QB=bin;
    3dd6:	8b bb       	out	0x1b, r24	; 27
	utils.delay(ADDRESS_WRITE_DELAY);
	for(int i=1;i<ADDRESS_BUFFER_SIZE;i++){
		setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
		setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
		setctrl(address_buffer[i]);
		utils.delay(ADDRESS_WRITE_DELAY);
    3dd8:	6a e0       	ldi	r22, 0x0A	; 10
    3dda:	70 e0       	ldi	r23, 0x00	; 0
    3ddc:	c6 01       	movw	r24, r12
    3dde:	0e 94 59 2d 	call	0x5ab2	; 0x5ab2 <_ZN5Utils5delayEi>
	setbuffctrlpin(IN_ABBUFFER_START,HIGH);
	setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
	setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
	setbuffctrlpin(IN_ABBUFFER_START,LOW);
	utils.delay(ADDRESS_WRITE_DELAY);
	for(int i=1;i<ADDRESS_BUFFER_SIZE;i++){
    3de2:	ea 14       	cp	r14, r10
    3de4:	fb 04       	cpc	r15, r11
    3de6:	21 f7       	brne	.-56     	; 0x3db0 <_ZN4QEPU12select_qubitEi+0xb6>
		setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
		setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
		setctrl(address_buffer[i]);
		utils.delay(ADDRESS_WRITE_DELAY);
	}
	setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
    3de8:	41 e0       	ldi	r20, 0x01	; 1
    3dea:	50 e0       	ldi	r21, 0x00	; 0
    3dec:	63 e0       	ldi	r22, 0x03	; 3
    3dee:	70 e0       	ldi	r23, 0x00	; 0
    3df0:	c8 01       	movw	r24, r16
    3df2:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <_ZN4QEPU14setbuffctrlpinEii>
	setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
    3df6:	40 e0       	ldi	r20, 0x00	; 0
    3df8:	50 e0       	ldi	r21, 0x00	; 0
    3dfa:	63 e0       	ldi	r22, 0x03	; 3
    3dfc:	70 e0       	ldi	r23, 0x00	; 0
    3dfe:	c8 01       	movw	r24, r16
    3e00:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <_ZN4QEPU14setbuffctrlpinEii>
	setbuffctrlpin(EO_AB,HIGH);
    3e04:	41 e0       	ldi	r20, 0x01	; 1
    3e06:	50 e0       	ldi	r21, 0x00	; 0
    3e08:	64 e0       	ldi	r22, 0x04	; 4
    3e0a:	70 e0       	ldi	r23, 0x00	; 0
    3e0c:	c8 01       	movw	r24, r16
    3e0e:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <_ZN4QEPU14setbuffctrlpinEii>
}
    3e12:	26 96       	adiw	r28, 0x06	; 6
    3e14:	0f b6       	in	r0, 0x3f	; 63
    3e16:	f8 94       	cli
    3e18:	de bf       	out	0x3e, r29	; 62
    3e1a:	0f be       	out	0x3f, r0	; 63
    3e1c:	cd bf       	out	0x3d, r28	; 61
    3e1e:	df 91       	pop	r29
    3e20:	cf 91       	pop	r28
    3e22:	1f 91       	pop	r17
    3e24:	0f 91       	pop	r16
    3e26:	ff 90       	pop	r15
    3e28:	ef 90       	pop	r14
    3e2a:	df 90       	pop	r13
    3e2c:	cf 90       	pop	r12
    3e2e:	bf 90       	pop	r11
    3e30:	af 90       	pop	r10
    3e32:	08 95       	ret

00003e34 <_ZN4QEPU10setctrlpinEii>:
void QEPU::setbuffctrlpin(int pin,int state){
	CTRL_BUFF&=~(1<<pin); // CLEAR PIN
	CTRL_BUFF|=(state<<pin); // SET PIN
}
void QEPU::setctrlpin(int pin,int state){
	CTRL_QB&=~(1<<pin); // CLEAR PIN
    3e34:	7b b3       	in	r23, 0x1b	; 27
    3e36:	21 e0       	ldi	r18, 0x01	; 1
    3e38:	30 e0       	ldi	r19, 0x00	; 0
    3e3a:	c9 01       	movw	r24, r18
    3e3c:	06 2e       	mov	r0, r22
    3e3e:	02 c0       	rjmp	.+4      	; 0x3e44 <_ZN4QEPU10setctrlpinEii+0x10>
    3e40:	88 0f       	add	r24, r24
    3e42:	99 1f       	adc	r25, r25
    3e44:	0a 94       	dec	r0
    3e46:	e2 f7       	brpl	.-8      	; 0x3e40 <_ZN4QEPU10setctrlpinEii+0xc>
    3e48:	80 95       	com	r24
    3e4a:	87 23       	and	r24, r23
    3e4c:	8b bb       	out	0x1b, r24	; 27
	CTRL_QB|=(state<<pin); // SET PIN
    3e4e:	8b b3       	in	r24, 0x1b	; 27
    3e50:	02 c0       	rjmp	.+4      	; 0x3e56 <_ZN4QEPU10setctrlpinEii+0x22>
    3e52:	44 0f       	add	r20, r20
    3e54:	55 1f       	adc	r21, r21
    3e56:	6a 95       	dec	r22
    3e58:	e2 f7       	brpl	.-8      	; 0x3e52 <_ZN4QEPU10setctrlpinEii+0x1e>
    3e5a:	48 2b       	or	r20, r24
    3e5c:	4b bb       	out	0x1b, r20	; 27
    3e5e:	08 95       	ret

00003e60 <_ZN4QEPU5writeEiii>:
void QEPU::close_bus(){
	setctrl(0); // CLOSE ALL CONTROLS
	deselect_qubit(); // DESELECT ALL QUBITS
	bus_write(LOW);
}
void QEPU::write(int index,int dim,int deg){
    3e60:	ff 92       	push	r15
    3e62:	0f 93       	push	r16
    3e64:	1f 93       	push	r17
    3e66:	cf 93       	push	r28
    3e68:	df 93       	push	r29
    3e6a:	ec 01       	movw	r28, r24
    3e6c:	8a 01       	movw	r16, r20
	BUS_DIR=OUTPUT;
    3e6e:	ff 24       	eor	r15, r15
    3e70:	fa 94       	dec	r15
    3e72:	f7 ba       	out	0x17, r15	; 23
	eeprom_write_word(&randinit,rand()%10000);
}

//QUBIT MEMORY HANDLING:
void QEPU::bus_write(int8_t data){
	BUS_DIR=OUTPUT;
    3e74:	f7 ba       	out	0x17, r15	; 23
	BUS_OUT=data;
    3e76:	28 bb       	out	0x18, r18	; 24
}
void QEPU::write(int index,int dim,int deg){
	BUS_DIR=OUTPUT;
	
	bus_write(deg);
	select_qubit(index);
    3e78:	0e 94 7d 1e 	call	0x3cfa	; 0x3cfa <_ZN4QEPU12select_qubitEi>
	setctrlpin(DIM_SEL,dim);
    3e7c:	a8 01       	movw	r20, r16
    3e7e:	64 e0       	ldi	r22, 0x04	; 4
    3e80:	70 e0       	ldi	r23, 0x00	; 0
    3e82:	ce 01       	movw	r24, r28
    3e84:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(WRITE_QB,HIGH); // CLOCK UP LOAD
    3e88:	41 e0       	ldi	r20, 0x01	; 1
    3e8a:	50 e0       	ldi	r21, 0x00	; 0
    3e8c:	66 e0       	ldi	r22, 0x06	; 6
    3e8e:	70 e0       	ldi	r23, 0x00	; 0
    3e90:	ce 01       	movw	r24, r28
    3e92:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(WRITE_QB,LOW); // CLOCK DOWN LOAD
    3e96:	40 e0       	ldi	r20, 0x00	; 0
    3e98:	50 e0       	ldi	r21, 0x00	; 0
    3e9a:	66 e0       	ldi	r22, 0x06	; 6
    3e9c:	70 e0       	ldi	r23, 0x00	; 0
    3e9e:	ce 01       	movw	r24, r28
    3ea0:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <_ZN4QEPU10setctrlpinEii>
	eeprom_write_word(&randinit,rand()%10000);
}

//QUBIT MEMORY HANDLING:
void QEPU::bus_write(int8_t data){
	BUS_DIR=OUTPUT;
    3ea4:	f7 ba       	out	0x17, r15	; 23
	BUS_OUT=data;
    3ea6:	18 ba       	out	0x18, r1	; 24
	select_qubit(index);
	setctrlpin(DIM_SEL,dim);
	setctrlpin(WRITE_QB,HIGH); // CLOCK UP LOAD
	setctrlpin(WRITE_QB,LOW); // CLOCK DOWN LOAD
	bus_write(LOW);
	deselect_qubit();
    3ea8:	ce 01       	movw	r24, r28
    3eaa:	0e 94 74 1e 	call	0x3ce8	; 0x3ce8 <_ZN4QEPU14deselect_qubitEv>
}
    3eae:	df 91       	pop	r29
    3eb0:	cf 91       	pop	r28
    3eb2:	1f 91       	pop	r17
    3eb4:	0f 91       	pop	r16
    3eb6:	ff 90       	pop	r15
    3eb8:	08 95       	ret

00003eba <_ZN4QEPU4readEiib>:
int QEPU::read(int index,int dim,bool freeze_bus){
    3eba:	ff 92       	push	r15
    3ebc:	0f 93       	push	r16
    3ebe:	1f 93       	push	r17
    3ec0:	cf 93       	push	r28
    3ec2:	df 93       	push	r29
    3ec4:	ec 01       	movw	r28, r24
    3ec6:	8a 01       	movw	r16, r20
    3ec8:	f2 2e       	mov	r15, r18
	BUS_DIR=INPUT;
    3eca:	17 ba       	out	0x17, r1	; 23
	
	select_qubit(index);
    3ecc:	0e 94 7d 1e 	call	0x3cfa	; 0x3cfa <_ZN4QEPU12select_qubitEi>
	//OPEN ALL AND GATES
	setctrlpin(5,1); // CLOCK UP READ
    3ed0:	41 e0       	ldi	r20, 0x01	; 1
    3ed2:	50 e0       	ldi	r21, 0x00	; 0
    3ed4:	65 e0       	ldi	r22, 0x05	; 5
    3ed6:	70 e0       	ldi	r23, 0x00	; 0
    3ed8:	ce 01       	movw	r24, r28
    3eda:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(4,dim);
    3ede:	a8 01       	movw	r20, r16
    3ee0:	64 e0       	ldi	r22, 0x04	; 4
    3ee2:	70 e0       	ldi	r23, 0x00	; 0
    3ee4:	ce 01       	movw	r24, r28
    3ee6:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <_ZN4QEPU10setctrlpinEii>
	int deg_read=BUS_IN; // READ INPUT
    3eea:	06 b3       	in	r16, 0x16	; 22
    3eec:	10 e0       	ldi	r17, 0x00	; 0
	//CLOSE ALL AND GATES
	BUS_DIR=OUTPUT;
    3eee:	8f ef       	ldi	r24, 0xFF	; 255
    3ef0:	87 bb       	out	0x17, r24	; 23
	if(!freeze_bus){
    3ef2:	f1 10       	cpse	r15, r1
    3ef4:	04 c0       	rjmp	.+8      	; 0x3efe <_ZN4QEPU4readEiib+0x44>
	setbuffctrlpin(IN_ABBUFFER_CLOCK,HIGH);
	setbuffctrlpin(IN_ABBUFFER_CLOCK,LOW);
	setbuffctrlpin(EO_AB,HIGH);
}
void QEPU::setctrl(int bin){
	CTRL_QB=bin;
    3ef6:	1b ba       	out	0x1b, r1	; 27
	int deg_read=BUS_IN; // READ INPUT
	//CLOSE ALL AND GATES
	BUS_DIR=OUTPUT;
	if(!freeze_bus){
		setctrl(0); // CLOSE ALL CONTROLS
		deselect_qubit();
    3ef8:	ce 01       	movw	r24, r28
    3efa:	0e 94 74 1e 	call	0x3ce8	; 0x3ce8 <_ZN4QEPU14deselect_qubitEv>
	}
	return deg_read;
}
    3efe:	c8 01       	movw	r24, r16
    3f00:	df 91       	pop	r29
    3f02:	cf 91       	pop	r28
    3f04:	1f 91       	pop	r17
    3f06:	0f 91       	pop	r16
    3f08:	ff 90       	pop	r15
    3f0a:	08 95       	ret

00003f0c <_ZN4QEPU7measureEi>:
}
void QEPU::setctrlpin(int pin,int state){
	CTRL_QB&=~(1<<pin); // CLEAR PIN
	CTRL_QB|=(state<<pin); // SET PIN
}
int QEPU::measure(int amplitude){
    3f0c:	cf 93       	push	r28
    3f0e:	df 93       	push	r29
    3f10:	ec 01       	movw	r28, r24
	return gates.touch(utils.custom_pow(sin(amplitude*M_PI/360),2));
    3f12:	88 27       	eor	r24, r24
    3f14:	77 fd       	sbrc	r23, 7
    3f16:	80 95       	com	r24
    3f18:	98 2f       	mov	r25, r24
    3f1a:	0e 94 2c 2f 	call	0x5e58	; 0x5e58 <__floatsisf>
    3f1e:	2b ed       	ldi	r18, 0xDB	; 219
    3f20:	3f e0       	ldi	r19, 0x0F	; 15
    3f22:	49 e4       	ldi	r20, 0x49	; 73
    3f24:	50 e4       	ldi	r21, 0x40	; 64
    3f26:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
    3f2a:	20 e0       	ldi	r18, 0x00	; 0
    3f2c:	30 e0       	ldi	r19, 0x00	; 0
    3f2e:	44 eb       	ldi	r20, 0xB4	; 180
    3f30:	53 e4       	ldi	r21, 0x43	; 67
    3f32:	0e 94 60 2e 	call	0x5cc0	; 0x5cc0 <__divsf3>
    3f36:	0e 94 71 31 	call	0x62e2	; 0x62e2 <sin>
    3f3a:	ab 01       	movw	r20, r22
    3f3c:	bc 01       	movw	r22, r24
    3f3e:	22 e0       	ldi	r18, 0x02	; 2
    3f40:	30 e0       	ldi	r19, 0x00	; 0
    3f42:	ce 01       	movw	r24, r28
    3f44:	8c 52       	subi	r24, 0x2C	; 44
    3f46:	9f 4f       	sbci	r25, 0xFF	; 255
    3f48:	0e 94 67 2d 	call	0x5ace	; 0x5ace <_ZN5Utils10custom_powEfi>
    3f4c:	ab 01       	movw	r20, r22
    3f4e:	bc 01       	movw	r22, r24
    3f50:	ce 01       	movw	r24, r28
    3f52:	09 96       	adiw	r24, 0x09	; 9
    3f54:	0e 94 65 03 	call	0x6ca	; 0x6ca <_ZN5Gates5touchEd>
}
    3f58:	df 91       	pop	r29
    3f5a:	cf 91       	pop	r28
    3f5c:	08 95       	ret

00003f5e <_ZN4QEPU14fetch_registerEi>:

int QEPU::fetch_register(int address){
    3f5e:	8f 92       	push	r8
    3f60:	9f 92       	push	r9
    3f62:	af 92       	push	r10
    3f64:	bf 92       	push	r11
    3f66:	cf 92       	push	r12
    3f68:	df 92       	push	r13
    3f6a:	ef 92       	push	r14
    3f6c:	ff 92       	push	r15
    3f6e:	0f 93       	push	r16
    3f70:	1f 93       	push	r17
    3f72:	cf 93       	push	r28
    3f74:	df 93       	push	r29
    3f76:	cd b7       	in	r28, 0x3d	; 61
    3f78:	de b7       	in	r29, 0x3e	; 62
    3f7a:	29 97       	sbiw	r28, 0x09	; 9
    3f7c:	0f b6       	in	r0, 0x3f	; 63
    3f7e:	f8 94       	cli
    3f80:	de bf       	out	0x3e, r29	; 62
    3f82:	0f be       	out	0x3f, r0	; 63
    3f84:	cd bf       	out	0x3d, r28	; 61
    3f86:	5c 01       	movw	r10, r24
	char data_fetched[BUS_WIDTH+1]="";
    3f88:	19 82       	std	Y+1, r1	; 0x01
    3f8a:	1a 82       	std	Y+2, r1	; 0x02
    3f8c:	1b 82       	std	Y+3, r1	; 0x03
    3f8e:	1c 82       	std	Y+4, r1	; 0x04
    3f90:	fe 01       	movw	r30, r28
    3f92:	35 96       	adiw	r30, 0x05	; 5
    3f94:	85 e0       	ldi	r24, 0x05	; 5
    3f96:	df 01       	movw	r26, r30
    3f98:	1d 92       	st	X+, r1
    3f9a:	8a 95       	dec	r24
    3f9c:	e9 f7       	brne	.-6      	; 0x3f98 <_ZN4QEPU14fetch_registerEi+0x3a>
	int address_offset=address*BUS_WIDTH;
    3f9e:	4b 01       	movw	r8, r22
    3fa0:	88 0c       	add	r8, r8
    3fa2:	99 1c       	adc	r9, r9
    3fa4:	88 0c       	add	r8, r8
    3fa6:	99 1c       	adc	r9, r9
    3fa8:	88 0c       	add	r8, r8
    3faa:	99 1c       	adc	r9, r9
	for(int i=0;i<BUS_WIDTH;i++)
    3fac:	e1 2c       	mov	r14, r1
    3fae:	f1 2c       	mov	r15, r1
		sprintf(data_fetched,"%s%d",data_fetched,measure(read(address_offset+i,THE,false)));
    3fb0:	8e 01       	movw	r16, r28
    3fb2:	0f 5f       	subi	r16, 0xFF	; 255
    3fb4:	1f 4f       	sbci	r17, 0xFF	; 255
    3fb6:	0f 2e       	mov	r0, r31
    3fb8:	fa e9       	ldi	r31, 0x9A	; 154
    3fba:	cf 2e       	mov	r12, r31
    3fbc:	f0 e0       	ldi	r31, 0x00	; 0
    3fbe:	df 2e       	mov	r13, r31
    3fc0:	f0 2d       	mov	r31, r0
    3fc2:	b7 01       	movw	r22, r14
    3fc4:	68 0d       	add	r22, r8
    3fc6:	79 1d       	adc	r23, r9
    3fc8:	20 e0       	ldi	r18, 0x00	; 0
    3fca:	40 e0       	ldi	r20, 0x00	; 0
    3fcc:	50 e0       	ldi	r21, 0x00	; 0
    3fce:	c5 01       	movw	r24, r10
    3fd0:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    3fd4:	bc 01       	movw	r22, r24
    3fd6:	c5 01       	movw	r24, r10
    3fd8:	0e 94 86 1f 	call	0x3f0c	; 0x3f0c <_ZN4QEPU7measureEi>
    3fdc:	9f 93       	push	r25
    3fde:	8f 93       	push	r24
    3fe0:	1f 93       	push	r17
    3fe2:	0f 93       	push	r16
    3fe4:	df 92       	push	r13
    3fe6:	cf 92       	push	r12
    3fe8:	1f 93       	push	r17
    3fea:	0f 93       	push	r16
    3fec:	0e 94 e1 34 	call	0x69c2	; 0x69c2 <sprintf>
}

int QEPU::fetch_register(int address){
	char data_fetched[BUS_WIDTH+1]="";
	int address_offset=address*BUS_WIDTH;
	for(int i=0;i<BUS_WIDTH;i++)
    3ff0:	bf ef       	ldi	r27, 0xFF	; 255
    3ff2:	eb 1a       	sub	r14, r27
    3ff4:	fb 0a       	sbc	r15, r27
    3ff6:	0f b6       	in	r0, 0x3f	; 63
    3ff8:	f8 94       	cli
    3ffa:	de bf       	out	0x3e, r29	; 62
    3ffc:	0f be       	out	0x3f, r0	; 63
    3ffe:	cd bf       	out	0x3d, r28	; 61
    4000:	98 e0       	ldi	r25, 0x08	; 8
    4002:	e9 16       	cp	r14, r25
    4004:	f1 04       	cpc	r15, r1
    4006:	e9 f6       	brne	.-70     	; 0x3fc2 <_ZN4QEPU14fetch_registerEi+0x64>
		sprintf(data_fetched,"%s%d",data_fetched,measure(read(address_offset+i,THE,false)));
	strrev(data_fetched);
    4008:	ce 01       	movw	r24, r28
    400a:	01 96       	adiw	r24, 0x01	; 1
    400c:	0e 94 d1 34 	call	0x69a2	; 0x69a2 <strrev>
	return strtol(data_fetched,NULL,2);
    4010:	42 e0       	ldi	r20, 0x02	; 2
    4012:	50 e0       	ldi	r21, 0x00	; 0
    4014:	60 e0       	ldi	r22, 0x00	; 0
    4016:	70 e0       	ldi	r23, 0x00	; 0
    4018:	ce 01       	movw	r24, r28
    401a:	01 96       	adiw	r24, 0x01	; 1
    401c:	0e 94 95 33 	call	0x672a	; 0x672a <strtol>
}
    4020:	cb 01       	movw	r24, r22
    4022:	29 96       	adiw	r28, 0x09	; 9
    4024:	0f b6       	in	r0, 0x3f	; 63
    4026:	f8 94       	cli
    4028:	de bf       	out	0x3e, r29	; 62
    402a:	0f be       	out	0x3f, r0	; 63
    402c:	cd bf       	out	0x3d, r28	; 61
    402e:	df 91       	pop	r29
    4030:	cf 91       	pop	r28
    4032:	1f 91       	pop	r17
    4034:	0f 91       	pop	r16
    4036:	ff 90       	pop	r15
    4038:	ef 90       	pop	r14
    403a:	df 90       	pop	r13
    403c:	cf 90       	pop	r12
    403e:	bf 90       	pop	r11
    4040:	af 90       	pop	r10
    4042:	9f 90       	pop	r9
    4044:	8f 90       	pop	r8
    4046:	08 95       	ret

00004048 <_ZN4QEPU12set_registerEii>:

void QEPU::set_register(int address,int data){
    4048:	cf 92       	push	r12
    404a:	df 92       	push	r13
    404c:	ef 92       	push	r14
    404e:	ff 92       	push	r15
    4050:	0f 93       	push	r16
    4052:	1f 93       	push	r17
    4054:	cf 93       	push	r28
    4056:	df 93       	push	r29
    4058:	6c 01       	movw	r12, r24
    405a:	8b 01       	movw	r16, r22
    405c:	ba 01       	movw	r22, r20
	char* data_str=utils.int2binstr(data,BUS_WIDTH);
    405e:	48 e0       	ldi	r20, 0x08	; 8
    4060:	50 e0       	ldi	r21, 0x00	; 0
    4062:	8c 52       	subi	r24, 0x2C	; 44
    4064:	9f 4f       	sbci	r25, 0xFF	; 255
    4066:	0e 94 a6 2c 	call	0x594c	; 0x594c <_ZN5Utils10int2binstrEii>
    406a:	d8 2f       	mov	r29, r24
    406c:	c9 2f       	mov	r28, r25
	strrev(data_str);
    406e:	0e 94 d1 34 	call	0x69a2	; 0x69a2 <strrev>
    4072:	ed 2e       	mov	r14, r29
    4074:	fc 2e       	mov	r15, r28
	int address_offset=address*BUS_WIDTH;
    4076:	00 0f       	add	r16, r16
    4078:	11 1f       	adc	r17, r17
    407a:	00 0f       	add	r16, r16
    407c:	11 1f       	adc	r17, r17
    407e:	00 0f       	add	r16, r16
    4080:	11 1f       	adc	r17, r17
	
	for(int i=0;i<BUS_WIDTH;i++)
    4082:	c0 e0       	ldi	r28, 0x00	; 0
    4084:	d0 e0       	ldi	r29, 0x00	; 0
		if(data_str[i]=='1') write(address_offset+i,THE,180);
    4086:	f7 01       	movw	r30, r14
    4088:	81 91       	ld	r24, Z+
    408a:	7f 01       	movw	r14, r30
    408c:	81 33       	cpi	r24, 0x31	; 49
    408e:	49 f4       	brne	.+18     	; 0x40a2 <_ZN4QEPU12set_registerEii+0x5a>
    4090:	24 eb       	ldi	r18, 0xB4	; 180
    4092:	30 e0       	ldi	r19, 0x00	; 0
    4094:	40 e0       	ldi	r20, 0x00	; 0
    4096:	50 e0       	ldi	r21, 0x00	; 0
    4098:	b8 01       	movw	r22, r16
    409a:	c6 01       	movw	r24, r12
    409c:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    40a0:	08 c0       	rjmp	.+16     	; 0x40b2 <_ZN4QEPU12set_registerEii+0x6a>
		else write(address_offset+i,THE,0);
    40a2:	20 e0       	ldi	r18, 0x00	; 0
    40a4:	30 e0       	ldi	r19, 0x00	; 0
    40a6:	40 e0       	ldi	r20, 0x00	; 0
    40a8:	50 e0       	ldi	r21, 0x00	; 0
    40aa:	b8 01       	movw	r22, r16
    40ac:	c6 01       	movw	r24, r12
    40ae:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
void QEPU::set_register(int address,int data){
	char* data_str=utils.int2binstr(data,BUS_WIDTH);
	strrev(data_str);
	int address_offset=address*BUS_WIDTH;
	
	for(int i=0;i<BUS_WIDTH;i++)
    40b2:	21 96       	adiw	r28, 0x01	; 1
    40b4:	0f 5f       	subi	r16, 0xFF	; 255
    40b6:	1f 4f       	sbci	r17, 0xFF	; 255
    40b8:	c8 30       	cpi	r28, 0x08	; 8
    40ba:	d1 05       	cpc	r29, r1
    40bc:	21 f7       	brne	.-56     	; 0x4086 <_ZN4QEPU12set_registerEii+0x3e>
		if(data_str[i]=='1') write(address_offset+i,THE,180);
		else write(address_offset+i,THE,0);
}
    40be:	df 91       	pop	r29
    40c0:	cf 91       	pop	r28
    40c2:	1f 91       	pop	r17
    40c4:	0f 91       	pop	r16
    40c6:	ff 90       	pop	r15
    40c8:	ef 90       	pop	r14
    40ca:	df 90       	pop	r13
    40cc:	cf 90       	pop	r12
    40ce:	08 95       	ret

000040d0 <_ZN4QEPU7dumpmemEi>:

void QEPU::dumpmem(int length){
    40d0:	4f 92       	push	r4
    40d2:	5f 92       	push	r5
    40d4:	6f 92       	push	r6
    40d6:	7f 92       	push	r7
    40d8:	8f 92       	push	r8
    40da:	9f 92       	push	r9
    40dc:	af 92       	push	r10
    40de:	bf 92       	push	r11
    40e0:	cf 92       	push	r12
    40e2:	df 92       	push	r13
    40e4:	ef 92       	push	r14
    40e6:	ff 92       	push	r15
    40e8:	0f 93       	push	r16
    40ea:	1f 93       	push	r17
    40ec:	cf 93       	push	r28
    40ee:	df 93       	push	r29
    40f0:	6c 01       	movw	r12, r24
    40f2:	5b 01       	movw	r10, r22
	serial.writestrln("");
    40f4:	8c 01       	movw	r16, r24
    40f6:	0f 5f       	subi	r16, 0xFF	; 255
    40f8:	1f 4f       	sbci	r17, 0xFF	; 255
    40fa:	65 ec       	ldi	r22, 0xC5	; 197
    40fc:	70 e0       	ldi	r23, 0x00	; 0
    40fe:	c8 01       	movw	r24, r16
    4100:	0e 94 9a 2c 	call	0x5934	; 0x5934 <_ZN6Serial10writestrlnEPc>
	serial.writestrln("** QUANTUM MEMORY DUMP **");
    4104:	6f e9       	ldi	r22, 0x9F	; 159
    4106:	70 e0       	ldi	r23, 0x00	; 0
    4108:	c8 01       	movw	r24, r16
    410a:	0e 94 9a 2c 	call	0x5934	; 0x5934 <_ZN6Serial10writestrlnEPc>
	for(int i=0;i<length;i++){
    410e:	1a 14       	cp	r1, r10
    4110:	1b 04       	cpc	r1, r11
    4112:	0c f0       	brlt	.+2      	; 0x4116 <_ZN4QEPU7dumpmemEi+0x46>
    4114:	6b c0       	rjmp	.+214    	; 0x41ec <_ZN4QEPU7dumpmemEi+0x11c>
    4116:	c0 e0       	ldi	r28, 0x00	; 0
    4118:	d0 e0       	ldi	r29, 0x00	; 0
		char * thedim=(char*)malloc(sizeof(char)*3); sprintf(thedim,"%d",read(i,THE,false));
    411a:	0f 2e       	mov	r0, r31
    411c:	fc e9       	ldi	r31, 0x9C	; 156
    411e:	ef 2e       	mov	r14, r31
    4120:	f0 e0       	ldi	r31, 0x00	; 0
    4122:	ff 2e       	mov	r15, r31
    4124:	f0 2d       	mov	r31, r0
    4126:	83 e0       	ldi	r24, 0x03	; 3
    4128:	90 e0       	ldi	r25, 0x00	; 0
    412a:	0e 94 10 32 	call	0x6420	; 0x6420 <malloc>
    412e:	68 2e       	mov	r6, r24
    4130:	79 2e       	mov	r7, r25
    4132:	20 e0       	ldi	r18, 0x00	; 0
    4134:	40 e0       	ldi	r20, 0x00	; 0
    4136:	50 e0       	ldi	r21, 0x00	; 0
    4138:	be 01       	movw	r22, r28
    413a:	c6 01       	movw	r24, r12
    413c:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4140:	9f 93       	push	r25
    4142:	8f 93       	push	r24
    4144:	ff 92       	push	r15
    4146:	ef 92       	push	r14
    4148:	7f 92       	push	r7
    414a:	6f 92       	push	r6
    414c:	0e 94 e1 34 	call	0x69c2	; 0x69c2 <sprintf>
		char * phidim=(char*)malloc(sizeof(char)*3); sprintf(phidim,"%d",read(i,PHI,false));
    4150:	83 e0       	ldi	r24, 0x03	; 3
    4152:	90 e0       	ldi	r25, 0x00	; 0
    4154:	0e 94 10 32 	call	0x6420	; 0x6420 <malloc>
    4158:	88 2e       	mov	r8, r24
    415a:	99 2e       	mov	r9, r25
    415c:	20 e0       	ldi	r18, 0x00	; 0
    415e:	41 e0       	ldi	r20, 0x01	; 1
    4160:	50 e0       	ldi	r21, 0x00	; 0
    4162:	be 01       	movw	r22, r28
    4164:	c6 01       	movw	r24, r12
    4166:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    416a:	9f 93       	push	r25
    416c:	8f 93       	push	r24
    416e:	ff 92       	push	r15
    4170:	ef 92       	push	r14
    4172:	9f 92       	push	r9
    4174:	8f 92       	push	r8
    4176:	0e 94 e1 34 	call	0x69c2	; 0x69c2 <sprintf>
		char * qindex=(char*)malloc(sizeof(char));	 sprintf(qindex,"%d",i);
    417a:	81 e0       	ldi	r24, 0x01	; 1
    417c:	90 e0       	ldi	r25, 0x00	; 0
    417e:	0e 94 10 32 	call	0x6420	; 0x6420 <malloc>
    4182:	48 2e       	mov	r4, r24
    4184:	59 2e       	mov	r5, r25
    4186:	df 93       	push	r29
    4188:	cf 93       	push	r28
    418a:	ff 92       	push	r15
    418c:	ef 92       	push	r14
    418e:	5f 92       	push	r5
    4190:	4f 92       	push	r4
    4192:	0e 94 e1 34 	call	0x69c2	; 0x69c2 <sprintf>
		serial.writestr("Q"); serial.writestr(qindex); serial.writestr(": Theta - ");
    4196:	69 eb       	ldi	r22, 0xB9	; 185
    4198:	70 e0       	ldi	r23, 0x00	; 0
    419a:	c8 01       	movw	r24, r16
    419c:	0e 94 85 2c 	call	0x590a	; 0x590a <_ZN6Serial8writestrEPc>
    41a0:	64 2d       	mov	r22, r4
    41a2:	75 2d       	mov	r23, r5
    41a4:	c8 01       	movw	r24, r16
    41a6:	0e 94 85 2c 	call	0x590a	; 0x590a <_ZN6Serial8writestrEPc>
    41aa:	6b eb       	ldi	r22, 0xBB	; 187
    41ac:	70 e0       	ldi	r23, 0x00	; 0
    41ae:	c8 01       	movw	r24, r16
    41b0:	0e 94 85 2c 	call	0x590a	; 0x590a <_ZN6Serial8writestrEPc>
		serial.writestr(thedim);
    41b4:	66 2d       	mov	r22, r6
    41b6:	77 2d       	mov	r23, r7
    41b8:	c8 01       	movw	r24, r16
    41ba:	0e 94 85 2c 	call	0x590a	; 0x590a <_ZN6Serial8writestrEPc>
		serial.writestr(" , Phi - ");
    41be:	66 ec       	ldi	r22, 0xC6	; 198
    41c0:	70 e0       	ldi	r23, 0x00	; 0
    41c2:	c8 01       	movw	r24, r16
    41c4:	0e 94 85 2c 	call	0x590a	; 0x590a <_ZN6Serial8writestrEPc>
		serial.writestrln(phidim);
    41c8:	68 2d       	mov	r22, r8
    41ca:	79 2d       	mov	r23, r9
    41cc:	c8 01       	movw	r24, r16
    41ce:	0e 94 9a 2c 	call	0x5934	; 0x5934 <_ZN6Serial10writestrlnEPc>
}

void QEPU::dumpmem(int length){
	serial.writestrln("");
	serial.writestrln("** QUANTUM MEMORY DUMP **");
	for(int i=0;i<length;i++){
    41d2:	21 96       	adiw	r28, 0x01	; 1
    41d4:	8d b7       	in	r24, 0x3d	; 61
    41d6:	9e b7       	in	r25, 0x3e	; 62
    41d8:	42 96       	adiw	r24, 0x12	; 18
    41da:	0f b6       	in	r0, 0x3f	; 63
    41dc:	f8 94       	cli
    41de:	9e bf       	out	0x3e, r25	; 62
    41e0:	0f be       	out	0x3f, r0	; 63
    41e2:	8d bf       	out	0x3d, r24	; 61
    41e4:	ca 15       	cp	r28, r10
    41e6:	db 05       	cpc	r29, r11
    41e8:	09 f0       	breq	.+2      	; 0x41ec <_ZN4QEPU7dumpmemEi+0x11c>
    41ea:	9d cf       	rjmp	.-198    	; 0x4126 <_ZN4QEPU7dumpmemEi+0x56>
		serial.writestr("Q"); serial.writestr(qindex); serial.writestr(": Theta - ");
		serial.writestr(thedim);
		serial.writestr(" , Phi - ");
		serial.writestrln(phidim);
	}
}
    41ec:	df 91       	pop	r29
    41ee:	cf 91       	pop	r28
    41f0:	1f 91       	pop	r17
    41f2:	0f 91       	pop	r16
    41f4:	ff 90       	pop	r15
    41f6:	ef 90       	pop	r14
    41f8:	df 90       	pop	r13
    41fa:	cf 90       	pop	r12
    41fc:	bf 90       	pop	r11
    41fe:	af 90       	pop	r10
    4200:	9f 90       	pop	r9
    4202:	8f 90       	pop	r8
    4204:	7f 90       	pop	r7
    4206:	6f 90       	pop	r6
    4208:	5f 90       	pop	r5
    420a:	4f 90       	pop	r4
    420c:	08 95       	ret

0000420e <_ZN4QEPU7executeEilll>:
	dumpmem(QUBIT_COUNT);
	serial.writestr("The execution of the program has finished");
	#pragma endregion
}

void QEPU::execute(int func,int32_t op1,int32_t op2,int32_t op3){
    420e:	2f 92       	push	r2
    4210:	3f 92       	push	r3
    4212:	4f 92       	push	r4
    4214:	5f 92       	push	r5
    4216:	6f 92       	push	r6
    4218:	7f 92       	push	r7
    421a:	8f 92       	push	r8
    421c:	9f 92       	push	r9
    421e:	af 92       	push	r10
    4220:	bf 92       	push	r11
    4222:	cf 92       	push	r12
    4224:	df 92       	push	r13
    4226:	ef 92       	push	r14
    4228:	ff 92       	push	r15
    422a:	0f 93       	push	r16
    422c:	1f 93       	push	r17
    422e:	cf 93       	push	r28
    4230:	df 93       	push	r29
    4232:	cd b7       	in	r28, 0x3d	; 61
    4234:	de b7       	in	r29, 0x3e	; 62
    4236:	2a 97       	sbiw	r28, 0x0a	; 10
    4238:	0f b6       	in	r0, 0x3f	; 63
    423a:	f8 94       	cli
    423c:	de bf       	out	0x3e, r29	; 62
    423e:	0f be       	out	0x3f, r0	; 63
    4240:	cd bf       	out	0x3d, r28	; 61
    4242:	9a 87       	std	Y+10, r25	; 0x0a
    4244:	89 87       	std	Y+9, r24	; 0x09
    4246:	8b 01       	movw	r16, r22
    4248:	29 01       	movw	r4, r18
    424a:	3a 01       	movw	r6, r20
    424c:	a9 82       	std	Y+1, r10	; 0x01
    424e:	ba 82       	std	Y+2, r11	; 0x02
    4250:	cb 82       	std	Y+3, r12	; 0x03
    4252:	dc 82       	std	Y+4, r13	; 0x04
	int * newthephi=(int*)malloc(sizeof(int)*MAX_NEWTHEPHI);
    4254:	8c e0       	ldi	r24, 0x0C	; 12
    4256:	90 e0       	ldi	r25, 0x00	; 0
    4258:	0e 94 10 32 	call	0x6420	; 0x6420 <malloc>
    425c:	6c 01       	movw	r12, r24
	//TODO: MAKE A SWITCH ON THE FUNCTION
	switch(func){
    425e:	f8 01       	movw	r30, r16
    4260:	31 97       	sbiw	r30, 0x01	; 1
    4262:	ee 32       	cpi	r30, 0x2E	; 46
    4264:	f1 05       	cpc	r31, r1
    4266:	08 f0       	brcs	.+2      	; 0x426a <_ZN4QEPU7executeEilll+0x5c>
    4268:	77 c7       	rjmp	.+3822   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
    426a:	e6 5d       	subi	r30, 0xD6	; 214
    426c:	ff 4f       	sbci	r31, 0xFF	; 255
    426e:	0c 94 f6 31 	jmp	0x63ec	; 0x63ec <__tablejump2__>
		//DATA MOVEMENT AND PROGRAM CONTROL/FLUX/IO FUNCTIONS:
		case 0x01: /*MOR (move register) */
			write(op1,THE,read(op2,THE,false));
    4272:	20 e0       	ldi	r18, 0x00	; 0
    4274:	40 e0       	ldi	r20, 0x00	; 0
    4276:	50 e0       	ldi	r21, 0x00	; 0
    4278:	6e 2d       	mov	r22, r14
    427a:	7f 2d       	mov	r23, r15
    427c:	89 85       	ldd	r24, Y+9	; 0x09
    427e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4280:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4284:	9c 01       	movw	r18, r24
    4286:	40 e0       	ldi	r20, 0x00	; 0
    4288:	50 e0       	ldi	r21, 0x00	; 0
    428a:	b2 01       	movw	r22, r4
    428c:	89 85       	ldd	r24, Y+9	; 0x09
    428e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4290:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			write(op1,PHI,read(op2,PHI,false));
    4294:	20 e0       	ldi	r18, 0x00	; 0
    4296:	41 e0       	ldi	r20, 0x01	; 1
    4298:	50 e0       	ldi	r21, 0x00	; 0
    429a:	6e 2d       	mov	r22, r14
    429c:	7f 2d       	mov	r23, r15
    429e:	89 85       	ldd	r24, Y+9	; 0x09
    42a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    42a2:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    42a6:	9c 01       	movw	r18, r24
    42a8:	41 e0       	ldi	r20, 0x01	; 1
    42aa:	50 e0       	ldi	r21, 0x00	; 0
    42ac:	b2 01       	movw	r22, r4
    42ae:	89 85       	ldd	r24, Y+9	; 0x09
    42b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    42b2:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    42b6:	50 c7       	rjmp	.+3744   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x02: /*MOM (move memory)*/
			sram.write(op1,sram.read(op2));
    42b8:	09 85       	ldd	r16, Y+9	; 0x09
    42ba:	1a 85       	ldd	r17, Y+10	; 0x0a
    42bc:	0d 5f       	subi	r16, 0xFD	; 253
    42be:	1f 4f       	sbci	r17, 0xFF	; 255
    42c0:	6e 2d       	mov	r22, r14
    42c2:	c8 01       	movw	r24, r16
    42c4:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <_ZN4SRAM4readEa>
    42c8:	48 2f       	mov	r20, r24
    42ca:	64 2d       	mov	r22, r4
    42cc:	c8 01       	movw	r24, r16
    42ce:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <_ZN4SRAM5writeEaa>
			break;
    42d2:	42 c7       	rjmp	.+3716   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x03: /*STR (store)*/
			sram.write(op1,fetch_register(op2));
    42d4:	6e 2d       	mov	r22, r14
    42d6:	7f 2d       	mov	r23, r15
    42d8:	89 85       	ldd	r24, Y+9	; 0x09
    42da:	9a 85       	ldd	r25, Y+10	; 0x0a
    42dc:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <_ZN4QEPU14fetch_registerEi>
    42e0:	48 2f       	mov	r20, r24
    42e2:	64 2d       	mov	r22, r4
    42e4:	89 85       	ldd	r24, Y+9	; 0x09
    42e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    42e8:	03 96       	adiw	r24, 0x03	; 3
    42ea:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <_ZN4SRAM5writeEaa>
			break;
    42ee:	34 c7       	rjmp	.+3688   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x04: /*LOD (load)*/
			set_register(op1,sram.read(op2));
    42f0:	6e 2d       	mov	r22, r14
    42f2:	89 85       	ldd	r24, Y+9	; 0x09
    42f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    42f6:	03 96       	adiw	r24, 0x03	; 3
    42f8:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <_ZN4SRAM4readEa>
    42fc:	48 2f       	mov	r20, r24
    42fe:	55 27       	eor	r21, r21
    4300:	47 fd       	sbrc	r20, 7
    4302:	50 95       	com	r21
    4304:	b2 01       	movw	r22, r4
    4306:	89 85       	ldd	r24, Y+9	; 0x09
    4308:	9a 85       	ldd	r25, Y+10	; 0x0a
    430a:	0e 94 24 20 	call	0x4048	; 0x4048 <_ZN4QEPU12set_registerEii>
			break;
    430e:	24 c7       	rjmp	.+3656   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x05: /*CRW (Constant Ram Write)*/
			sram.write(op1,op2);
    4310:	4e 2d       	mov	r20, r14
    4312:	64 2d       	mov	r22, r4
    4314:	89 85       	ldd	r24, Y+9	; 0x09
    4316:	9a 85       	ldd	r25, Y+10	; 0x0a
    4318:	03 96       	adiw	r24, 0x03	; 3
    431a:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <_ZN4SRAM5writeEaa>
			break;
    431e:	1c c7       	rjmp	.+3640   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x06: /*CQW* (Constant Qubit Write)*/
			set_register(op1,op2);
    4320:	4e 2d       	mov	r20, r14
    4322:	5f 2d       	mov	r21, r15
    4324:	b2 01       	movw	r22, r4
    4326:	89 85       	ldd	r24, Y+9	; 0x09
    4328:	9a 85       	ldd	r25, Y+10	; 0x0a
    432a:	0e 94 24 20 	call	0x4048	; 0x4048 <_ZN4QEPU12set_registerEii>
			break;
    432e:	14 c7       	rjmp	.+3624   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x07: /*POP (pop)*/
			set_register(op1,sram.pop());
    4330:	89 85       	ldd	r24, Y+9	; 0x09
    4332:	9a 85       	ldd	r25, Y+10	; 0x0a
    4334:	03 96       	adiw	r24, 0x03	; 3
    4336:	0e 94 0e 2c 	call	0x581c	; 0x581c <_ZN4SRAM3popEv>
    433a:	ac 01       	movw	r20, r24
    433c:	b2 01       	movw	r22, r4
    433e:	89 85       	ldd	r24, Y+9	; 0x09
    4340:	9a 85       	ldd	r25, Y+10	; 0x0a
    4342:	0e 94 24 20 	call	0x4048	; 0x4048 <_ZN4QEPU12set_registerEii>
			break;
    4346:	08 c7       	rjmp	.+3600   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x08: /*PSH (push)*/
			sram.push(fetch_register(op1));
    4348:	b2 01       	movw	r22, r4
    434a:	89 85       	ldd	r24, Y+9	; 0x09
    434c:	9a 85       	ldd	r25, Y+10	; 0x0a
    434e:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <_ZN4QEPU14fetch_registerEi>
    4352:	bc 01       	movw	r22, r24
    4354:	89 85       	ldd	r24, Y+9	; 0x09
    4356:	9a 85       	ldd	r25, Y+10	; 0x0a
    4358:	03 96       	adiw	r24, 0x03	; 3
    435a:	0e 94 2b 2c 	call	0x5856	; 0x5856 <_ZN4SRAM4pushEi>
			break;
    435e:	fc c6       	rjmp	.+3576   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x09: /*CMT (constantmovtheta)*/
			write(op1,THE,op2);
    4360:	2e 2d       	mov	r18, r14
    4362:	3f 2d       	mov	r19, r15
    4364:	40 e0       	ldi	r20, 0x00	; 0
    4366:	50 e0       	ldi	r21, 0x00	; 0
    4368:	b2 01       	movw	r22, r4
    436a:	89 85       	ldd	r24, Y+9	; 0x09
    436c:	9a 85       	ldd	r25, Y+10	; 0x0a
    436e:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4372:	f2 c6       	rjmp	.+3556   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x0A: /*CMP (constantmovphi)*/
			write(op1,PHI,op2);
    4374:	2e 2d       	mov	r18, r14
    4376:	3f 2d       	mov	r19, r15
    4378:	41 e0       	ldi	r20, 0x01	; 1
    437a:	50 e0       	ldi	r21, 0x00	; 0
    437c:	b2 01       	movw	r22, r4
    437e:	89 85       	ldd	r24, Y+9	; 0x09
    4380:	9a 85       	ldd	r25, Y+10	; 0x0a
    4382:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4386:	e8 c6       	rjmp	.+3536   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x0B: /*CME (compare)*/
			flags.compare(fetch_register(op1),fetch_register(op2));
    4388:	6e 2d       	mov	r22, r14
    438a:	7f 2d       	mov	r23, r15
    438c:	89 85       	ldd	r24, Y+9	; 0x09
    438e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4390:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <_ZN4QEPU14fetch_registerEi>
    4394:	8c 01       	movw	r16, r24
    4396:	b2 01       	movw	r22, r4
    4398:	89 85       	ldd	r24, Y+9	; 0x09
    439a:	9a 85       	ldd	r25, Y+10	; 0x0a
    439c:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <_ZN4QEPU14fetch_registerEi>
    43a0:	b8 01       	movw	r22, r16
    43a2:	0e 94 c1 02 	call	0x582	; 0x582 <_ZN4QEPU4Flag7compareEii>
			break;
    43a6:	d8 c6       	rjmp	.+3504   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		/*IMPLEMENT CONDICIONAL/INCONDICIONAL BRANCHES HERE*/
		case 0x0C: /*BLW (branch if lower (with jumpstack))*/
			if(flags.flaglist[CND_LWER]){
    43a8:	80 91 0a 01 	lds	r24, 0x010A
    43ac:	88 23       	and	r24, r24
    43ae:	09 f4       	brne	.+2      	; 0x43b2 <_ZN4QEPU7executeEilll+0x1a4>
    43b0:	d3 c6       	rjmp	.+3494   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
    43b2:	09 85       	ldd	r16, Y+9	; 0x09
    43b4:	1a 85       	ldd	r17, Y+10	; 0x0a
    43b6:	0b 52       	subi	r16, 0x2B	; 43
    43b8:	1f 4f       	sbci	r17, 0xFF	; 255
    43ba:	f8 01       	movw	r30, r16
    43bc:	60 81       	ld	r22, Z
    43be:	71 81       	ldd	r23, Z+1	; 0x01
    43c0:	6f 5f       	subi	r22, 0xFF	; 255
    43c2:	7f 4f       	sbci	r23, 0xFF	; 255
    43c4:	89 85       	ldd	r24, Y+9	; 0x09
    43c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    43c8:	0a 96       	adiw	r24, 0x0a	; 10
    43ca:	0e 94 ea 1d 	call	0x3bd4	; 0x3bd4 <_ZN4QEPU9Jumpstack4pushEi>
		serial.writestrln(phidim);
	}
}

void QEPU::set_programcounter(int newaddress){
	program_counter=newaddress-1;
    43ce:	f1 e0       	ldi	r31, 0x01	; 1
    43d0:	4f 1a       	sub	r4, r31
    43d2:	51 08       	sbc	r5, r1
    43d4:	f8 01       	movw	r30, r16
    43d6:	51 82       	std	Z+1, r5	; 0x01
    43d8:	40 82       	st	Z, r4
    43da:	be c6       	rjmp	.+3452   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
				set_programcounter(op1);
			}
			break;
		case 0x0D: /*BLE (branch if lower or equal (with jumpstack))*/
			if(flags.flaglist[CND_LWER_EQUAL]){
    43dc:	80 91 0b 01 	lds	r24, 0x010B
    43e0:	88 23       	and	r24, r24
    43e2:	09 f4       	brne	.+2      	; 0x43e6 <_ZN4QEPU7executeEilll+0x1d8>
    43e4:	b9 c6       	rjmp	.+3442   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
    43e6:	09 85       	ldd	r16, Y+9	; 0x09
    43e8:	1a 85       	ldd	r17, Y+10	; 0x0a
    43ea:	0b 52       	subi	r16, 0x2B	; 43
    43ec:	1f 4f       	sbci	r17, 0xFF	; 255
    43ee:	f8 01       	movw	r30, r16
    43f0:	60 81       	ld	r22, Z
    43f2:	71 81       	ldd	r23, Z+1	; 0x01
    43f4:	6f 5f       	subi	r22, 0xFF	; 255
    43f6:	7f 4f       	sbci	r23, 0xFF	; 255
    43f8:	89 85       	ldd	r24, Y+9	; 0x09
    43fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    43fc:	0a 96       	adiw	r24, 0x0a	; 10
    43fe:	0e 94 ea 1d 	call	0x3bd4	; 0x3bd4 <_ZN4QEPU9Jumpstack4pushEi>
		serial.writestrln(phidim);
	}
}

void QEPU::set_programcounter(int newaddress){
	program_counter=newaddress-1;
    4402:	f1 e0       	ldi	r31, 0x01	; 1
    4404:	4f 1a       	sub	r4, r31
    4406:	51 08       	sbc	r5, r1
    4408:	f8 01       	movw	r30, r16
    440a:	51 82       	std	Z+1, r5	; 0x01
    440c:	40 82       	st	Z, r4
    440e:	a4 c6       	rjmp	.+3400   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
				set_programcounter(op1);
			}
			break;
		case 0x0E: /*BEQ (branch if equal) (with jumpstack)*/
			if(flags.flaglist[CND_EQUAL]){
    4410:	80 91 0c 01 	lds	r24, 0x010C
    4414:	88 23       	and	r24, r24
    4416:	09 f4       	brne	.+2      	; 0x441a <_ZN4QEPU7executeEilll+0x20c>
    4418:	9f c6       	rjmp	.+3390   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
    441a:	09 85       	ldd	r16, Y+9	; 0x09
    441c:	1a 85       	ldd	r17, Y+10	; 0x0a
    441e:	0b 52       	subi	r16, 0x2B	; 43
    4420:	1f 4f       	sbci	r17, 0xFF	; 255
    4422:	f8 01       	movw	r30, r16
    4424:	60 81       	ld	r22, Z
    4426:	71 81       	ldd	r23, Z+1	; 0x01
    4428:	6f 5f       	subi	r22, 0xFF	; 255
    442a:	7f 4f       	sbci	r23, 0xFF	; 255
    442c:	89 85       	ldd	r24, Y+9	; 0x09
    442e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4430:	0a 96       	adiw	r24, 0x0a	; 10
    4432:	0e 94 ea 1d 	call	0x3bd4	; 0x3bd4 <_ZN4QEPU9Jumpstack4pushEi>
		serial.writestrln(phidim);
	}
}

void QEPU::set_programcounter(int newaddress){
	program_counter=newaddress-1;
    4436:	f1 e0       	ldi	r31, 0x01	; 1
    4438:	4f 1a       	sub	r4, r31
    443a:	51 08       	sbc	r5, r1
    443c:	f8 01       	movw	r30, r16
    443e:	51 82       	std	Z+1, r5	; 0x01
    4440:	40 82       	st	Z, r4
    4442:	8a c6       	rjmp	.+3348   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
				set_programcounter(op1);
			}
			break;
		case 0x0F: /*BGE (branch if greater or equal (with jumpstack))*/
			if(flags.flaglist[CND_GRTER_EQUAL]){
    4444:	80 91 0d 01 	lds	r24, 0x010D
    4448:	88 23       	and	r24, r24
    444a:	09 f4       	brne	.+2      	; 0x444e <_ZN4QEPU7executeEilll+0x240>
    444c:	85 c6       	rjmp	.+3338   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
    444e:	09 85       	ldd	r16, Y+9	; 0x09
    4450:	1a 85       	ldd	r17, Y+10	; 0x0a
    4452:	0b 52       	subi	r16, 0x2B	; 43
    4454:	1f 4f       	sbci	r17, 0xFF	; 255
    4456:	f8 01       	movw	r30, r16
    4458:	60 81       	ld	r22, Z
    445a:	71 81       	ldd	r23, Z+1	; 0x01
    445c:	6f 5f       	subi	r22, 0xFF	; 255
    445e:	7f 4f       	sbci	r23, 0xFF	; 255
    4460:	89 85       	ldd	r24, Y+9	; 0x09
    4462:	9a 85       	ldd	r25, Y+10	; 0x0a
    4464:	0a 96       	adiw	r24, 0x0a	; 10
    4466:	0e 94 ea 1d 	call	0x3bd4	; 0x3bd4 <_ZN4QEPU9Jumpstack4pushEi>
		serial.writestrln(phidim);
	}
}

void QEPU::set_programcounter(int newaddress){
	program_counter=newaddress-1;
    446a:	f1 e0       	ldi	r31, 0x01	; 1
    446c:	4f 1a       	sub	r4, r31
    446e:	51 08       	sbc	r5, r1
    4470:	f8 01       	movw	r30, r16
    4472:	51 82       	std	Z+1, r5	; 0x01
    4474:	40 82       	st	Z, r4
    4476:	70 c6       	rjmp	.+3296   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
				set_programcounter(op1);
			}
			break;
		case 0x10: /*BGR (branch if greater (with jumpstack))*/
			if(flags.flaglist[CND_GRTER]){
    4478:	80 91 0e 01 	lds	r24, 0x010E
    447c:	88 23       	and	r24, r24
    447e:	09 f4       	brne	.+2      	; 0x4482 <_ZN4QEPU7executeEilll+0x274>
    4480:	6b c6       	rjmp	.+3286   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
    4482:	09 85       	ldd	r16, Y+9	; 0x09
    4484:	1a 85       	ldd	r17, Y+10	; 0x0a
    4486:	0b 52       	subi	r16, 0x2B	; 43
    4488:	1f 4f       	sbci	r17, 0xFF	; 255
    448a:	f8 01       	movw	r30, r16
    448c:	60 81       	ld	r22, Z
    448e:	71 81       	ldd	r23, Z+1	; 0x01
    4490:	6f 5f       	subi	r22, 0xFF	; 255
    4492:	7f 4f       	sbci	r23, 0xFF	; 255
    4494:	89 85       	ldd	r24, Y+9	; 0x09
    4496:	9a 85       	ldd	r25, Y+10	; 0x0a
    4498:	0a 96       	adiw	r24, 0x0a	; 10
    449a:	0e 94 ea 1d 	call	0x3bd4	; 0x3bd4 <_ZN4QEPU9Jumpstack4pushEi>
		serial.writestrln(phidim);
	}
}

void QEPU::set_programcounter(int newaddress){
	program_counter=newaddress-1;
    449e:	f1 e0       	ldi	r31, 0x01	; 1
    44a0:	4f 1a       	sub	r4, r31
    44a2:	51 08       	sbc	r5, r1
    44a4:	f8 01       	movw	r30, r16
    44a6:	51 82       	std	Z+1, r5	; 0x01
    44a8:	40 82       	st	Z, r4
    44aa:	56 c6       	rjmp	.+3244   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
				set_programcounter(op1);
			}
			break;
		case 0x12: /*BDI (branch if different (with jumpstack))*/
			if(flags.flaglist[CND_DIFF]){
    44ac:	80 91 0f 01 	lds	r24, 0x010F
    44b0:	88 23       	and	r24, r24
    44b2:	09 f4       	brne	.+2      	; 0x44b6 <_ZN4QEPU7executeEilll+0x2a8>
    44b4:	51 c6       	rjmp	.+3234   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
    44b6:	09 85       	ldd	r16, Y+9	; 0x09
    44b8:	1a 85       	ldd	r17, Y+10	; 0x0a
    44ba:	0b 52       	subi	r16, 0x2B	; 43
    44bc:	1f 4f       	sbci	r17, 0xFF	; 255
    44be:	f8 01       	movw	r30, r16
    44c0:	60 81       	ld	r22, Z
    44c2:	71 81       	ldd	r23, Z+1	; 0x01
    44c4:	6f 5f       	subi	r22, 0xFF	; 255
    44c6:	7f 4f       	sbci	r23, 0xFF	; 255
    44c8:	89 85       	ldd	r24, Y+9	; 0x09
    44ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    44cc:	0a 96       	adiw	r24, 0x0a	; 10
    44ce:	0e 94 ea 1d 	call	0x3bd4	; 0x3bd4 <_ZN4QEPU9Jumpstack4pushEi>
		serial.writestrln(phidim);
	}
}

void QEPU::set_programcounter(int newaddress){
	program_counter=newaddress-1;
    44d2:	f1 e0       	ldi	r31, 0x01	; 1
    44d4:	4f 1a       	sub	r4, r31
    44d6:	51 08       	sbc	r5, r1
    44d8:	f8 01       	movw	r30, r16
    44da:	51 82       	std	Z+1, r5	; 0x01
    44dc:	40 82       	st	Z, r4
    44de:	3c c6       	rjmp	.+3192   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
				set_programcounter(op1);
			}
			break;
		case 0x13: /*BZE (branch if register(op1)=0 (zero) (with jumpstack))*/
			if(flags.flaglist[CND_ZERO]){
    44e0:	80 91 10 01 	lds	r24, 0x0110
    44e4:	88 23       	and	r24, r24
    44e6:	09 f4       	brne	.+2      	; 0x44ea <_ZN4QEPU7executeEilll+0x2dc>
    44e8:	37 c6       	rjmp	.+3182   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
    44ea:	09 85       	ldd	r16, Y+9	; 0x09
    44ec:	1a 85       	ldd	r17, Y+10	; 0x0a
    44ee:	0b 52       	subi	r16, 0x2B	; 43
    44f0:	1f 4f       	sbci	r17, 0xFF	; 255
    44f2:	f8 01       	movw	r30, r16
    44f4:	60 81       	ld	r22, Z
    44f6:	71 81       	ldd	r23, Z+1	; 0x01
    44f8:	6f 5f       	subi	r22, 0xFF	; 255
    44fa:	7f 4f       	sbci	r23, 0xFF	; 255
    44fc:	89 85       	ldd	r24, Y+9	; 0x09
    44fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    4500:	0a 96       	adiw	r24, 0x0a	; 10
    4502:	0e 94 ea 1d 	call	0x3bd4	; 0x3bd4 <_ZN4QEPU9Jumpstack4pushEi>
		serial.writestrln(phidim);
	}
}

void QEPU::set_programcounter(int newaddress){
	program_counter=newaddress-1;
    4506:	f1 e0       	ldi	r31, 0x01	; 1
    4508:	4f 1a       	sub	r4, r31
    450a:	51 08       	sbc	r5, r1
    450c:	f8 01       	movw	r30, r16
    450e:	51 82       	std	Z+1, r5	; 0x01
    4510:	40 82       	st	Z, r4
    4512:	22 c6       	rjmp	.+3140   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
				set_programcounter(op1);
			}
			break;
		case 0x14: /*BNZ (branch if register(op1)!=0 (not zero) (with jumpstack))*/
			if(flags.flaglist[CND_NOT_ZERO]){
    4514:	80 91 11 01 	lds	r24, 0x0111
    4518:	88 23       	and	r24, r24
    451a:	09 f4       	brne	.+2      	; 0x451e <_ZN4QEPU7executeEilll+0x310>
    451c:	1d c6       	rjmp	.+3130   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
    451e:	09 85       	ldd	r16, Y+9	; 0x09
    4520:	1a 85       	ldd	r17, Y+10	; 0x0a
    4522:	0b 52       	subi	r16, 0x2B	; 43
    4524:	1f 4f       	sbci	r17, 0xFF	; 255
    4526:	f8 01       	movw	r30, r16
    4528:	60 81       	ld	r22, Z
    452a:	71 81       	ldd	r23, Z+1	; 0x01
    452c:	6f 5f       	subi	r22, 0xFF	; 255
    452e:	7f 4f       	sbci	r23, 0xFF	; 255
    4530:	89 85       	ldd	r24, Y+9	; 0x09
    4532:	9a 85       	ldd	r25, Y+10	; 0x0a
    4534:	0a 96       	adiw	r24, 0x0a	; 10
    4536:	0e 94 ea 1d 	call	0x3bd4	; 0x3bd4 <_ZN4QEPU9Jumpstack4pushEi>
		serial.writestrln(phidim);
	}
}

void QEPU::set_programcounter(int newaddress){
	program_counter=newaddress-1;
    453a:	f1 e0       	ldi	r31, 0x01	; 1
    453c:	4f 1a       	sub	r4, r31
    453e:	51 08       	sbc	r5, r1
    4540:	f8 01       	movw	r30, r16
    4542:	51 82       	std	Z+1, r5	; 0x01
    4544:	40 82       	st	Z, r4
    4546:	08 c6       	rjmp	.+3088   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
				jumpstack.push(program_counter+1);
				set_programcounter(op1);
			}
			break;
		case 0x15: /*CALL (incondicional branch WITH jumpstack)*/
			jumpstack.push(program_counter+1);
    4548:	09 85       	ldd	r16, Y+9	; 0x09
    454a:	1a 85       	ldd	r17, Y+10	; 0x0a
    454c:	0b 52       	subi	r16, 0x2B	; 43
    454e:	1f 4f       	sbci	r17, 0xFF	; 255
    4550:	f8 01       	movw	r30, r16
    4552:	60 81       	ld	r22, Z
    4554:	71 81       	ldd	r23, Z+1	; 0x01
    4556:	6f 5f       	subi	r22, 0xFF	; 255
    4558:	7f 4f       	sbci	r23, 0xFF	; 255
    455a:	89 85       	ldd	r24, Y+9	; 0x09
    455c:	9a 85       	ldd	r25, Y+10	; 0x0a
    455e:	0a 96       	adiw	r24, 0x0a	; 10
    4560:	0e 94 ea 1d 	call	0x3bd4	; 0x3bd4 <_ZN4QEPU9Jumpstack4pushEi>
		serial.writestrln(phidim);
	}
}

void QEPU::set_programcounter(int newaddress){
	program_counter=newaddress-1;
    4564:	f1 e0       	ldi	r31, 0x01	; 1
    4566:	4f 1a       	sub	r4, r31
    4568:	51 08       	sbc	r5, r1
    456a:	f8 01       	movw	r30, r16
    456c:	51 82       	std	Z+1, r5	; 0x01
    456e:	40 82       	st	Z, r4
    4570:	f3 c5       	rjmp	.+3046   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
    4572:	e9 85       	ldd	r30, Y+9	; 0x09
    4574:	fa 85       	ldd	r31, Y+10	; 0x0a
    4576:	eb 52       	subi	r30, 0x2B	; 43
    4578:	ff 4f       	sbci	r31, 0xFF	; 255
    457a:	81 e0       	ldi	r24, 0x01	; 1
    457c:	48 1a       	sub	r4, r24
    457e:	51 08       	sbc	r5, r1
    4580:	51 82       	std	Z+1, r5	; 0x01
    4582:	40 82       	st	Z, r4
    4584:	e9 c5       	rjmp	.+3026   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		break;
		
		/*IMPLEMENT LOGIC AND ARITHMETIC (CLASSICAL) CALCULATIONS*/
		
		case 0x17: /*RET (return)*/
			set_programcounter(jumpstack.pop());
    4586:	89 85       	ldd	r24, Y+9	; 0x09
    4588:	9a 85       	ldd	r25, Y+10	; 0x0a
    458a:	0a 96       	adiw	r24, 0x0a	; 10
    458c:	0e 94 fa 1d 	call	0x3bf4	; 0x3bf4 <_ZN4QEPU9Jumpstack3popEv>
		serial.writestrln(phidim);
	}
}

void QEPU::set_programcounter(int newaddress){
	program_counter=newaddress-1;
    4590:	e9 85       	ldd	r30, Y+9	; 0x09
    4592:	fa 85       	ldd	r31, Y+10	; 0x0a
    4594:	eb 52       	subi	r30, 0x2B	; 43
    4596:	ff 4f       	sbci	r31, 0xFF	; 255
    4598:	01 97       	sbiw	r24, 0x01	; 1
    459a:	91 83       	std	Z+1, r25	; 0x01
    459c:	80 83       	st	Z, r24
    459e:	dc c5       	rjmp	.+3000   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
			break;
		case 0x18: /*INT (interrupt)*/
			//NEEDS TABLE SYSTEM
			break;
		case 0x19: /*DLY (delay)*/
			utils.delay(op1);
    45a0:	b2 01       	movw	r22, r4
    45a2:	89 85       	ldd	r24, Y+9	; 0x09
    45a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    45a6:	8c 52       	subi	r24, 0x2C	; 44
    45a8:	9f 4f       	sbci	r25, 0xFF	; 255
    45aa:	0e 94 59 2d 	call	0x5ab2	; 0x5ab2 <_ZN5Utils5delayEi>
			break;
    45ae:	d4 c5       	rjmp	.+2984   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x1A: /*NOP (nop) - DOES NOTHING*/ 
			break;
		case 0x1B: /*HLT (halt)*/ 
			program_counter=program_counter_maximum;
    45b0:	e9 85       	ldd	r30, Y+9	; 0x09
    45b2:	fa 85       	ldd	r31, Y+10	; 0x0a
    45b4:	eb 52       	subi	r30, 0x2B	; 43
    45b6:	ff 4f       	sbci	r31, 0xFF	; 255
    45b8:	a9 85       	ldd	r26, Y+9	; 0x09
    45ba:	ba 85       	ldd	r27, Y+10	; 0x0a
    45bc:	a9 52       	subi	r26, 0x29	; 41
    45be:	bf 4f       	sbci	r27, 0xFF	; 255
    45c0:	8d 91       	ld	r24, X+
    45c2:	9c 91       	ld	r25, X
    45c4:	91 83       	std	Z+1, r25	; 0x01
    45c6:	80 83       	st	Z, r24
			break;
    45c8:	c7 c5       	rjmp	.+2958   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		//QUANTUM FUNCTIONS:
		//1 QUBIT GATES -
		case 0x1C: // X GATE
			newthephi=gates.X(read(op1,THE,false),read(op1,PHI,false));
    45ca:	20 e0       	ldi	r18, 0x00	; 0
    45cc:	41 e0       	ldi	r20, 0x01	; 1
    45ce:	50 e0       	ldi	r21, 0x00	; 0
    45d0:	b2 01       	movw	r22, r4
    45d2:	89 85       	ldd	r24, Y+9	; 0x09
    45d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    45d6:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    45da:	8c 01       	movw	r16, r24
    45dc:	20 e0       	ldi	r18, 0x00	; 0
    45de:	40 e0       	ldi	r20, 0x00	; 0
    45e0:	50 e0       	ldi	r21, 0x00	; 0
    45e2:	b2 01       	movw	r22, r4
    45e4:	89 85       	ldd	r24, Y+9	; 0x09
    45e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    45e8:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    45ec:	a8 01       	movw	r20, r16
    45ee:	bc 01       	movw	r22, r24
    45f0:	89 85       	ldd	r24, Y+9	; 0x09
    45f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    45f4:	09 96       	adiw	r24, 0x09	; 9
    45f6:	0e 94 31 09 	call	0x1262	; 0x1262 <_ZN5Gates1XEii>
    45fa:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    45fc:	fc 01       	movw	r30, r24
    45fe:	20 81       	ld	r18, Z
    4600:	31 81       	ldd	r19, Z+1	; 0x01
    4602:	40 e0       	ldi	r20, 0x00	; 0
    4604:	50 e0       	ldi	r21, 0x00	; 0
    4606:	b2 01       	movw	r22, r4
    4608:	89 85       	ldd	r24, Y+9	; 0x09
    460a:	9a 85       	ldd	r25, Y+10	; 0x0a
    460c:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4610:	f6 01       	movw	r30, r12
    4612:	22 81       	ldd	r18, Z+2	; 0x02
    4614:	33 81       	ldd	r19, Z+3	; 0x03
    4616:	41 e0       	ldi	r20, 0x01	; 1
    4618:	50 e0       	ldi	r21, 0x00	; 0
    461a:	b2 01       	movw	r22, r4
    461c:	89 85       	ldd	r24, Y+9	; 0x09
    461e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4620:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4624:	99 c5       	rjmp	.+2866   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x1D: // Y GATE
			newthephi=gates.Y(read(op1,THE,false),read(op1,PHI,false));
    4626:	20 e0       	ldi	r18, 0x00	; 0
    4628:	41 e0       	ldi	r20, 0x01	; 1
    462a:	50 e0       	ldi	r21, 0x00	; 0
    462c:	b2 01       	movw	r22, r4
    462e:	89 85       	ldd	r24, Y+9	; 0x09
    4630:	9a 85       	ldd	r25, Y+10	; 0x0a
    4632:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4636:	8c 01       	movw	r16, r24
    4638:	20 e0       	ldi	r18, 0x00	; 0
    463a:	40 e0       	ldi	r20, 0x00	; 0
    463c:	50 e0       	ldi	r21, 0x00	; 0
    463e:	b2 01       	movw	r22, r4
    4640:	89 85       	ldd	r24, Y+9	; 0x09
    4642:	9a 85       	ldd	r25, Y+10	; 0x0a
    4644:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4648:	a8 01       	movw	r20, r16
    464a:	bc 01       	movw	r22, r24
    464c:	89 85       	ldd	r24, Y+9	; 0x09
    464e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4650:	09 96       	adiw	r24, 0x09	; 9
    4652:	0e 94 9b 09 	call	0x1336	; 0x1336 <_ZN5Gates1YEii>
    4656:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    4658:	fc 01       	movw	r30, r24
    465a:	20 81       	ld	r18, Z
    465c:	31 81       	ldd	r19, Z+1	; 0x01
    465e:	40 e0       	ldi	r20, 0x00	; 0
    4660:	50 e0       	ldi	r21, 0x00	; 0
    4662:	b2 01       	movw	r22, r4
    4664:	89 85       	ldd	r24, Y+9	; 0x09
    4666:	9a 85       	ldd	r25, Y+10	; 0x0a
    4668:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    466c:	f6 01       	movw	r30, r12
    466e:	22 81       	ldd	r18, Z+2	; 0x02
    4670:	33 81       	ldd	r19, Z+3	; 0x03
    4672:	41 e0       	ldi	r20, 0x01	; 1
    4674:	50 e0       	ldi	r21, 0x00	; 0
    4676:	b2 01       	movw	r22, r4
    4678:	89 85       	ldd	r24, Y+9	; 0x09
    467a:	9a 85       	ldd	r25, Y+10	; 0x0a
    467c:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4680:	6b c5       	rjmp	.+2774   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x1E: // Z GATE
			newthephi=gates.Z(read(op1,THE,false),read(op1,PHI,false));
    4682:	20 e0       	ldi	r18, 0x00	; 0
    4684:	41 e0       	ldi	r20, 0x01	; 1
    4686:	50 e0       	ldi	r21, 0x00	; 0
    4688:	b2 01       	movw	r22, r4
    468a:	89 85       	ldd	r24, Y+9	; 0x09
    468c:	9a 85       	ldd	r25, Y+10	; 0x0a
    468e:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4692:	8c 01       	movw	r16, r24
    4694:	20 e0       	ldi	r18, 0x00	; 0
    4696:	40 e0       	ldi	r20, 0x00	; 0
    4698:	50 e0       	ldi	r21, 0x00	; 0
    469a:	b2 01       	movw	r22, r4
    469c:	89 85       	ldd	r24, Y+9	; 0x09
    469e:	9a 85       	ldd	r25, Y+10	; 0x0a
    46a0:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    46a4:	a8 01       	movw	r20, r16
    46a6:	bc 01       	movw	r22, r24
    46a8:	89 85       	ldd	r24, Y+9	; 0x09
    46aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    46ac:	09 96       	adiw	r24, 0x09	; 9
    46ae:	0e 94 05 0a 	call	0x140a	; 0x140a <_ZN5Gates1ZEii>
    46b2:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    46b4:	fc 01       	movw	r30, r24
    46b6:	20 81       	ld	r18, Z
    46b8:	31 81       	ldd	r19, Z+1	; 0x01
    46ba:	40 e0       	ldi	r20, 0x00	; 0
    46bc:	50 e0       	ldi	r21, 0x00	; 0
    46be:	b2 01       	movw	r22, r4
    46c0:	89 85       	ldd	r24, Y+9	; 0x09
    46c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    46c4:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    46c8:	f6 01       	movw	r30, r12
    46ca:	22 81       	ldd	r18, Z+2	; 0x02
    46cc:	33 81       	ldd	r19, Z+3	; 0x03
    46ce:	41 e0       	ldi	r20, 0x01	; 1
    46d0:	50 e0       	ldi	r21, 0x00	; 0
    46d2:	b2 01       	movw	r22, r4
    46d4:	89 85       	ldd	r24, Y+9	; 0x09
    46d6:	9a 85       	ldd	r25, Y+10	; 0x0a
    46d8:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    46dc:	3d c5       	rjmp	.+2682   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x1F: // H GATE
			newthephi=gates.H(read(op1,THE,false),read(op1,PHI,false));
    46de:	20 e0       	ldi	r18, 0x00	; 0
    46e0:	41 e0       	ldi	r20, 0x01	; 1
    46e2:	50 e0       	ldi	r21, 0x00	; 0
    46e4:	b2 01       	movw	r22, r4
    46e6:	89 85       	ldd	r24, Y+9	; 0x09
    46e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    46ea:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    46ee:	8c 01       	movw	r16, r24
    46f0:	20 e0       	ldi	r18, 0x00	; 0
    46f2:	40 e0       	ldi	r20, 0x00	; 0
    46f4:	50 e0       	ldi	r21, 0x00	; 0
    46f6:	b2 01       	movw	r22, r4
    46f8:	89 85       	ldd	r24, Y+9	; 0x09
    46fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    46fc:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4700:	a8 01       	movw	r20, r16
    4702:	bc 01       	movw	r22, r24
    4704:	89 85       	ldd	r24, Y+9	; 0x09
    4706:	9a 85       	ldd	r25, Y+10	; 0x0a
    4708:	09 96       	adiw	r24, 0x09	; 9
    470a:	0e 94 6f 0a 	call	0x14de	; 0x14de <_ZN5Gates1HEii>
    470e:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    4710:	fc 01       	movw	r30, r24
    4712:	20 81       	ld	r18, Z
    4714:	31 81       	ldd	r19, Z+1	; 0x01
    4716:	40 e0       	ldi	r20, 0x00	; 0
    4718:	50 e0       	ldi	r21, 0x00	; 0
    471a:	b2 01       	movw	r22, r4
    471c:	89 85       	ldd	r24, Y+9	; 0x09
    471e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4720:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4724:	f6 01       	movw	r30, r12
    4726:	22 81       	ldd	r18, Z+2	; 0x02
    4728:	33 81       	ldd	r19, Z+3	; 0x03
    472a:	41 e0       	ldi	r20, 0x01	; 1
    472c:	50 e0       	ldi	r21, 0x00	; 0
    472e:	b2 01       	movw	r22, r4
    4730:	89 85       	ldd	r24, Y+9	; 0x09
    4732:	9a 85       	ldd	r25, Y+10	; 0x0a
    4734:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4738:	0f c5       	rjmp	.+2590   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x20: // S GATE
			newthephi=gates.S(read(op1,THE,false),read(op1,PHI,false));
    473a:	20 e0       	ldi	r18, 0x00	; 0
    473c:	41 e0       	ldi	r20, 0x01	; 1
    473e:	50 e0       	ldi	r21, 0x00	; 0
    4740:	b2 01       	movw	r22, r4
    4742:	89 85       	ldd	r24, Y+9	; 0x09
    4744:	9a 85       	ldd	r25, Y+10	; 0x0a
    4746:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    474a:	8c 01       	movw	r16, r24
    474c:	20 e0       	ldi	r18, 0x00	; 0
    474e:	40 e0       	ldi	r20, 0x00	; 0
    4750:	50 e0       	ldi	r21, 0x00	; 0
    4752:	b2 01       	movw	r22, r4
    4754:	89 85       	ldd	r24, Y+9	; 0x09
    4756:	9a 85       	ldd	r25, Y+10	; 0x0a
    4758:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    475c:	a8 01       	movw	r20, r16
    475e:	bc 01       	movw	r22, r24
    4760:	89 85       	ldd	r24, Y+9	; 0x09
    4762:	9a 85       	ldd	r25, Y+10	; 0x0a
    4764:	09 96       	adiw	r24, 0x09	; 9
    4766:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <_ZN5Gates1SEii>
    476a:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    476c:	fc 01       	movw	r30, r24
    476e:	20 81       	ld	r18, Z
    4770:	31 81       	ldd	r19, Z+1	; 0x01
    4772:	40 e0       	ldi	r20, 0x00	; 0
    4774:	50 e0       	ldi	r21, 0x00	; 0
    4776:	b2 01       	movw	r22, r4
    4778:	89 85       	ldd	r24, Y+9	; 0x09
    477a:	9a 85       	ldd	r25, Y+10	; 0x0a
    477c:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4780:	f6 01       	movw	r30, r12
    4782:	22 81       	ldd	r18, Z+2	; 0x02
    4784:	33 81       	ldd	r19, Z+3	; 0x03
    4786:	41 e0       	ldi	r20, 0x01	; 1
    4788:	50 e0       	ldi	r21, 0x00	; 0
    478a:	b2 01       	movw	r22, r4
    478c:	89 85       	ldd	r24, Y+9	; 0x09
    478e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4790:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4794:	e1 c4       	rjmp	.+2498   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x21: // T GATE
			newthephi=gates.T(read(op1,THE,false),read(op1,PHI,false));
    4796:	20 e0       	ldi	r18, 0x00	; 0
    4798:	41 e0       	ldi	r20, 0x01	; 1
    479a:	50 e0       	ldi	r21, 0x00	; 0
    479c:	b2 01       	movw	r22, r4
    479e:	89 85       	ldd	r24, Y+9	; 0x09
    47a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    47a2:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    47a6:	8c 01       	movw	r16, r24
    47a8:	20 e0       	ldi	r18, 0x00	; 0
    47aa:	40 e0       	ldi	r20, 0x00	; 0
    47ac:	50 e0       	ldi	r21, 0x00	; 0
    47ae:	b2 01       	movw	r22, r4
    47b0:	89 85       	ldd	r24, Y+9	; 0x09
    47b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    47b4:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    47b8:	a8 01       	movw	r20, r16
    47ba:	bc 01       	movw	r22, r24
    47bc:	89 85       	ldd	r24, Y+9	; 0x09
    47be:	9a 85       	ldd	r25, Y+10	; 0x0a
    47c0:	09 96       	adiw	r24, 0x09	; 9
    47c2:	0e 94 47 0b 	call	0x168e	; 0x168e <_ZN5Gates1TEii>
    47c6:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    47c8:	fc 01       	movw	r30, r24
    47ca:	20 81       	ld	r18, Z
    47cc:	31 81       	ldd	r19, Z+1	; 0x01
    47ce:	40 e0       	ldi	r20, 0x00	; 0
    47d0:	50 e0       	ldi	r21, 0x00	; 0
    47d2:	b2 01       	movw	r22, r4
    47d4:	89 85       	ldd	r24, Y+9	; 0x09
    47d6:	9a 85       	ldd	r25, Y+10	; 0x0a
    47d8:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    47dc:	f6 01       	movw	r30, r12
    47de:	22 81       	ldd	r18, Z+2	; 0x02
    47e0:	33 81       	ldd	r19, Z+3	; 0x03
    47e2:	41 e0       	ldi	r20, 0x01	; 1
    47e4:	50 e0       	ldi	r21, 0x00	; 0
    47e6:	b2 01       	movw	r22, r4
    47e8:	89 85       	ldd	r24, Y+9	; 0x09
    47ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    47ec:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    47f0:	b3 c4       	rjmp	.+2406   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x22: // ROTATE X GATE
			newthephi=gates.ROX(read(op1,THE,false),read(op1,PHI,false),op2);
    47f2:	20 e0       	ldi	r18, 0x00	; 0
    47f4:	41 e0       	ldi	r20, 0x01	; 1
    47f6:	50 e0       	ldi	r21, 0x00	; 0
    47f8:	b2 01       	movw	r22, r4
    47fa:	89 85       	ldd	r24, Y+9	; 0x09
    47fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    47fe:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4802:	8c 01       	movw	r16, r24
    4804:	20 e0       	ldi	r18, 0x00	; 0
    4806:	40 e0       	ldi	r20, 0x00	; 0
    4808:	50 e0       	ldi	r21, 0x00	; 0
    480a:	b2 01       	movw	r22, r4
    480c:	89 85       	ldd	r24, Y+9	; 0x09
    480e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4810:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4814:	2e 2d       	mov	r18, r14
    4816:	3f 2d       	mov	r19, r15
    4818:	a8 01       	movw	r20, r16
    481a:	bc 01       	movw	r22, r24
    481c:	89 85       	ldd	r24, Y+9	; 0x09
    481e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4820:	09 96       	adiw	r24, 0x09	; 9
    4822:	0e 94 c2 12 	call	0x2584	; 0x2584 <_ZN5Gates3ROXEiii>
    4826:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4828:	fc 01       	movw	r30, r24
    482a:	20 81       	ld	r18, Z
    482c:	31 81       	ldd	r19, Z+1	; 0x01
    482e:	40 e0       	ldi	r20, 0x00	; 0
    4830:	50 e0       	ldi	r21, 0x00	; 0
    4832:	b2 01       	movw	r22, r4
    4834:	89 85       	ldd	r24, Y+9	; 0x09
    4836:	9a 85       	ldd	r25, Y+10	; 0x0a
    4838:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    483c:	f6 01       	movw	r30, r12
    483e:	22 81       	ldd	r18, Z+2	; 0x02
    4840:	33 81       	ldd	r19, Z+3	; 0x03
    4842:	41 e0       	ldi	r20, 0x01	; 1
    4844:	50 e0       	ldi	r21, 0x00	; 0
    4846:	b2 01       	movw	r22, r4
    4848:	89 85       	ldd	r24, Y+9	; 0x09
    484a:	9a 85       	ldd	r25, Y+10	; 0x0a
    484c:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4850:	83 c4       	rjmp	.+2310   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x23: // ROTATE Y GATE
			newthephi=gates.ROY(read(op1,THE,false),read(op1,PHI,false),op2);
    4852:	20 e0       	ldi	r18, 0x00	; 0
    4854:	41 e0       	ldi	r20, 0x01	; 1
    4856:	50 e0       	ldi	r21, 0x00	; 0
    4858:	b2 01       	movw	r22, r4
    485a:	89 85       	ldd	r24, Y+9	; 0x09
    485c:	9a 85       	ldd	r25, Y+10	; 0x0a
    485e:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4862:	8c 01       	movw	r16, r24
    4864:	20 e0       	ldi	r18, 0x00	; 0
    4866:	40 e0       	ldi	r20, 0x00	; 0
    4868:	50 e0       	ldi	r21, 0x00	; 0
    486a:	b2 01       	movw	r22, r4
    486c:	89 85       	ldd	r24, Y+9	; 0x09
    486e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4870:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4874:	2e 2d       	mov	r18, r14
    4876:	3f 2d       	mov	r19, r15
    4878:	a8 01       	movw	r20, r16
    487a:	bc 01       	movw	r22, r24
    487c:	89 85       	ldd	r24, Y+9	; 0x09
    487e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4880:	09 96       	adiw	r24, 0x09	; 9
    4882:	0e 94 61 13 	call	0x26c2	; 0x26c2 <_ZN5Gates3ROYEiii>
    4886:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4888:	fc 01       	movw	r30, r24
    488a:	20 81       	ld	r18, Z
    488c:	31 81       	ldd	r19, Z+1	; 0x01
    488e:	40 e0       	ldi	r20, 0x00	; 0
    4890:	50 e0       	ldi	r21, 0x00	; 0
    4892:	b2 01       	movw	r22, r4
    4894:	89 85       	ldd	r24, Y+9	; 0x09
    4896:	9a 85       	ldd	r25, Y+10	; 0x0a
    4898:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    489c:	f6 01       	movw	r30, r12
    489e:	22 81       	ldd	r18, Z+2	; 0x02
    48a0:	33 81       	ldd	r19, Z+3	; 0x03
    48a2:	41 e0       	ldi	r20, 0x01	; 1
    48a4:	50 e0       	ldi	r21, 0x00	; 0
    48a6:	b2 01       	movw	r22, r4
    48a8:	89 85       	ldd	r24, Y+9	; 0x09
    48aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    48ac:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    48b0:	53 c4       	rjmp	.+2214   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x24: // ROTATE Z GATE
			newthephi=gates.ROZ(read(op1,THE,false),read(op1,PHI,false),op2);
    48b2:	20 e0       	ldi	r18, 0x00	; 0
    48b4:	41 e0       	ldi	r20, 0x01	; 1
    48b6:	50 e0       	ldi	r21, 0x00	; 0
    48b8:	b2 01       	movw	r22, r4
    48ba:	89 85       	ldd	r24, Y+9	; 0x09
    48bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    48be:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    48c2:	8c 01       	movw	r16, r24
    48c4:	20 e0       	ldi	r18, 0x00	; 0
    48c6:	40 e0       	ldi	r20, 0x00	; 0
    48c8:	50 e0       	ldi	r21, 0x00	; 0
    48ca:	b2 01       	movw	r22, r4
    48cc:	89 85       	ldd	r24, Y+9	; 0x09
    48ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    48d0:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    48d4:	2e 2d       	mov	r18, r14
    48d6:	3f 2d       	mov	r19, r15
    48d8:	a8 01       	movw	r20, r16
    48da:	bc 01       	movw	r22, r24
    48dc:	89 85       	ldd	r24, Y+9	; 0x09
    48de:	9a 85       	ldd	r25, Y+10	; 0x0a
    48e0:	09 96       	adiw	r24, 0x09	; 9
    48e2:	0e 94 fd 13 	call	0x27fa	; 0x27fa <_ZN5Gates3ROZEiii>
    48e6:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    48e8:	fc 01       	movw	r30, r24
    48ea:	20 81       	ld	r18, Z
    48ec:	31 81       	ldd	r19, Z+1	; 0x01
    48ee:	40 e0       	ldi	r20, 0x00	; 0
    48f0:	50 e0       	ldi	r21, 0x00	; 0
    48f2:	b2 01       	movw	r22, r4
    48f4:	89 85       	ldd	r24, Y+9	; 0x09
    48f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    48f8:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    48fc:	f6 01       	movw	r30, r12
    48fe:	22 81       	ldd	r18, Z+2	; 0x02
    4900:	33 81       	ldd	r19, Z+3	; 0x03
    4902:	41 e0       	ldi	r20, 0x01	; 1
    4904:	50 e0       	ldi	r21, 0x00	; 0
    4906:	b2 01       	movw	r22, r4
    4908:	89 85       	ldd	r24, Y+9	; 0x09
    490a:	9a 85       	ldd	r25, Y+10	; 0x0a
    490c:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4910:	23 c4       	rjmp	.+2118   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		//2 QUBIT GATES -
		case 0x25: // CNOT GATE
			newthephi=gates.CNO(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false));
    4912:	ae 2c       	mov	r10, r14
    4914:	bf 2c       	mov	r11, r15
    4916:	20 e0       	ldi	r18, 0x00	; 0
    4918:	41 e0       	ldi	r20, 0x01	; 1
    491a:	50 e0       	ldi	r21, 0x00	; 0
    491c:	6e 2d       	mov	r22, r14
    491e:	7f 2d       	mov	r23, r15
    4920:	89 85       	ldd	r24, Y+9	; 0x09
    4922:	9a 85       	ldd	r25, Y+10	; 0x0a
    4924:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4928:	8c 01       	movw	r16, r24
    492a:	20 e0       	ldi	r18, 0x00	; 0
    492c:	40 e0       	ldi	r20, 0x00	; 0
    492e:	50 e0       	ldi	r21, 0x00	; 0
    4930:	6e 2d       	mov	r22, r14
    4932:	7f 2d       	mov	r23, r15
    4934:	89 85       	ldd	r24, Y+9	; 0x09
    4936:	9a 85       	ldd	r25, Y+10	; 0x0a
    4938:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    493c:	7c 01       	movw	r14, r24
    493e:	20 e0       	ldi	r18, 0x00	; 0
    4940:	41 e0       	ldi	r20, 0x01	; 1
    4942:	50 e0       	ldi	r21, 0x00	; 0
    4944:	b2 01       	movw	r22, r4
    4946:	89 85       	ldd	r24, Y+9	; 0x09
    4948:	9a 85       	ldd	r25, Y+10	; 0x0a
    494a:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    494e:	6c 01       	movw	r12, r24
    4950:	20 e0       	ldi	r18, 0x00	; 0
    4952:	40 e0       	ldi	r20, 0x00	; 0
    4954:	50 e0       	ldi	r21, 0x00	; 0
    4956:	b2 01       	movw	r22, r4
    4958:	89 85       	ldd	r24, Y+9	; 0x09
    495a:	9a 85       	ldd	r25, Y+10	; 0x0a
    495c:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4960:	97 01       	movw	r18, r14
    4962:	a6 01       	movw	r20, r12
    4964:	bc 01       	movw	r22, r24
    4966:	89 85       	ldd	r24, Y+9	; 0x09
    4968:	9a 85       	ldd	r25, Y+10	; 0x0a
    496a:	09 96       	adiw	r24, 0x09	; 9
    496c:	0e 94 b0 0b 	call	0x1760	; 0x1760 <_ZN5Gates3CNOEiiii>
    4970:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4972:	fc 01       	movw	r30, r24
    4974:	20 81       	ld	r18, Z
    4976:	31 81       	ldd	r19, Z+1	; 0x01
    4978:	40 e0       	ldi	r20, 0x00	; 0
    497a:	50 e0       	ldi	r21, 0x00	; 0
    497c:	b2 01       	movw	r22, r4
    497e:	89 85       	ldd	r24, Y+9	; 0x09
    4980:	9a 85       	ldd	r25, Y+10	; 0x0a
    4982:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4986:	f6 01       	movw	r30, r12
    4988:	22 81       	ldd	r18, Z+2	; 0x02
    498a:	33 81       	ldd	r19, Z+3	; 0x03
    498c:	41 e0       	ldi	r20, 0x01	; 1
    498e:	50 e0       	ldi	r21, 0x00	; 0
    4990:	b2 01       	movw	r22, r4
    4992:	89 85       	ldd	r24, Y+9	; 0x09
    4994:	9a 85       	ldd	r25, Y+10	; 0x0a
    4996:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    499a:	f6 01       	movw	r30, r12
    499c:	24 81       	ldd	r18, Z+4	; 0x04
    499e:	35 81       	ldd	r19, Z+5	; 0x05
    49a0:	40 e0       	ldi	r20, 0x00	; 0
    49a2:	50 e0       	ldi	r21, 0x00	; 0
    49a4:	6a 2d       	mov	r22, r10
    49a6:	7b 2d       	mov	r23, r11
    49a8:	89 85       	ldd	r24, Y+9	; 0x09
    49aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    49ac:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    49b0:	f6 01       	movw	r30, r12
    49b2:	26 81       	ldd	r18, Z+6	; 0x06
    49b4:	37 81       	ldd	r19, Z+7	; 0x07
    49b6:	41 e0       	ldi	r20, 0x01	; 1
    49b8:	50 e0       	ldi	r21, 0x00	; 0
    49ba:	6a 2d       	mov	r22, r10
    49bc:	7b 2d       	mov	r23, r11
    49be:	89 85       	ldd	r24, Y+9	; 0x09
    49c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    49c2:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    49c6:	c8 c3       	rjmp	.+1936   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x26: // CSIGN GATE
			newthephi=gates.CSI(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false));
    49c8:	ae 2c       	mov	r10, r14
    49ca:	bf 2c       	mov	r11, r15
    49cc:	20 e0       	ldi	r18, 0x00	; 0
    49ce:	41 e0       	ldi	r20, 0x01	; 1
    49d0:	50 e0       	ldi	r21, 0x00	; 0
    49d2:	6e 2d       	mov	r22, r14
    49d4:	7f 2d       	mov	r23, r15
    49d6:	89 85       	ldd	r24, Y+9	; 0x09
    49d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    49da:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    49de:	8c 01       	movw	r16, r24
    49e0:	20 e0       	ldi	r18, 0x00	; 0
    49e2:	40 e0       	ldi	r20, 0x00	; 0
    49e4:	50 e0       	ldi	r21, 0x00	; 0
    49e6:	6e 2d       	mov	r22, r14
    49e8:	7f 2d       	mov	r23, r15
    49ea:	89 85       	ldd	r24, Y+9	; 0x09
    49ec:	9a 85       	ldd	r25, Y+10	; 0x0a
    49ee:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    49f2:	7c 01       	movw	r14, r24
    49f4:	20 e0       	ldi	r18, 0x00	; 0
    49f6:	41 e0       	ldi	r20, 0x01	; 1
    49f8:	50 e0       	ldi	r21, 0x00	; 0
    49fa:	b2 01       	movw	r22, r4
    49fc:	89 85       	ldd	r24, Y+9	; 0x09
    49fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a00:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4a04:	6c 01       	movw	r12, r24
    4a06:	20 e0       	ldi	r18, 0x00	; 0
    4a08:	40 e0       	ldi	r20, 0x00	; 0
    4a0a:	50 e0       	ldi	r21, 0x00	; 0
    4a0c:	b2 01       	movw	r22, r4
    4a0e:	89 85       	ldd	r24, Y+9	; 0x09
    4a10:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a12:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4a16:	97 01       	movw	r18, r14
    4a18:	a6 01       	movw	r20, r12
    4a1a:	bc 01       	movw	r22, r24
    4a1c:	89 85       	ldd	r24, Y+9	; 0x09
    4a1e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a20:	09 96       	adiw	r24, 0x09	; 9
    4a22:	0e 94 b2 0c 	call	0x1964	; 0x1964 <_ZN5Gates3CSIEiiii>
    4a26:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4a28:	fc 01       	movw	r30, r24
    4a2a:	20 81       	ld	r18, Z
    4a2c:	31 81       	ldd	r19, Z+1	; 0x01
    4a2e:	40 e0       	ldi	r20, 0x00	; 0
    4a30:	50 e0       	ldi	r21, 0x00	; 0
    4a32:	b2 01       	movw	r22, r4
    4a34:	89 85       	ldd	r24, Y+9	; 0x09
    4a36:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a38:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4a3c:	f6 01       	movw	r30, r12
    4a3e:	22 81       	ldd	r18, Z+2	; 0x02
    4a40:	33 81       	ldd	r19, Z+3	; 0x03
    4a42:	41 e0       	ldi	r20, 0x01	; 1
    4a44:	50 e0       	ldi	r21, 0x00	; 0
    4a46:	b2 01       	movw	r22, r4
    4a48:	89 85       	ldd	r24, Y+9	; 0x09
    4a4a:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a4c:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4a50:	f6 01       	movw	r30, r12
    4a52:	24 81       	ldd	r18, Z+4	; 0x04
    4a54:	35 81       	ldd	r19, Z+5	; 0x05
    4a56:	40 e0       	ldi	r20, 0x00	; 0
    4a58:	50 e0       	ldi	r21, 0x00	; 0
    4a5a:	6a 2d       	mov	r22, r10
    4a5c:	7b 2d       	mov	r23, r11
    4a5e:	89 85       	ldd	r24, Y+9	; 0x09
    4a60:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a62:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4a66:	f6 01       	movw	r30, r12
    4a68:	26 81       	ldd	r18, Z+6	; 0x06
    4a6a:	37 81       	ldd	r19, Z+7	; 0x07
    4a6c:	41 e0       	ldi	r20, 0x01	; 1
    4a6e:	50 e0       	ldi	r21, 0x00	; 0
    4a70:	6a 2d       	mov	r22, r10
    4a72:	7b 2d       	mov	r23, r11
    4a74:	89 85       	ldd	r24, Y+9	; 0x09
    4a76:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a78:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4a7c:	6d c3       	rjmp	.+1754   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x27: // SWAP GATE
			newthephi=gates.SWA(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false));
    4a7e:	ae 2c       	mov	r10, r14
    4a80:	bf 2c       	mov	r11, r15
    4a82:	20 e0       	ldi	r18, 0x00	; 0
    4a84:	41 e0       	ldi	r20, 0x01	; 1
    4a86:	50 e0       	ldi	r21, 0x00	; 0
    4a88:	6e 2d       	mov	r22, r14
    4a8a:	7f 2d       	mov	r23, r15
    4a8c:	89 85       	ldd	r24, Y+9	; 0x09
    4a8e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a90:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4a94:	8c 01       	movw	r16, r24
    4a96:	20 e0       	ldi	r18, 0x00	; 0
    4a98:	40 e0       	ldi	r20, 0x00	; 0
    4a9a:	50 e0       	ldi	r21, 0x00	; 0
    4a9c:	6e 2d       	mov	r22, r14
    4a9e:	7f 2d       	mov	r23, r15
    4aa0:	89 85       	ldd	r24, Y+9	; 0x09
    4aa2:	9a 85       	ldd	r25, Y+10	; 0x0a
    4aa4:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4aa8:	7c 01       	movw	r14, r24
    4aaa:	20 e0       	ldi	r18, 0x00	; 0
    4aac:	41 e0       	ldi	r20, 0x01	; 1
    4aae:	50 e0       	ldi	r21, 0x00	; 0
    4ab0:	b2 01       	movw	r22, r4
    4ab2:	89 85       	ldd	r24, Y+9	; 0x09
    4ab4:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ab6:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4aba:	6c 01       	movw	r12, r24
    4abc:	20 e0       	ldi	r18, 0x00	; 0
    4abe:	40 e0       	ldi	r20, 0x00	; 0
    4ac0:	50 e0       	ldi	r21, 0x00	; 0
    4ac2:	b2 01       	movw	r22, r4
    4ac4:	89 85       	ldd	r24, Y+9	; 0x09
    4ac6:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ac8:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4acc:	97 01       	movw	r18, r14
    4ace:	a6 01       	movw	r20, r12
    4ad0:	bc 01       	movw	r22, r24
    4ad2:	89 85       	ldd	r24, Y+9	; 0x09
    4ad4:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ad6:	09 96       	adiw	r24, 0x09	; 9
    4ad8:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <_ZN5Gates3SWAEiiii>
    4adc:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4ade:	fc 01       	movw	r30, r24
    4ae0:	20 81       	ld	r18, Z
    4ae2:	31 81       	ldd	r19, Z+1	; 0x01
    4ae4:	40 e0       	ldi	r20, 0x00	; 0
    4ae6:	50 e0       	ldi	r21, 0x00	; 0
    4ae8:	b2 01       	movw	r22, r4
    4aea:	89 85       	ldd	r24, Y+9	; 0x09
    4aec:	9a 85       	ldd	r25, Y+10	; 0x0a
    4aee:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4af2:	f6 01       	movw	r30, r12
    4af4:	22 81       	ldd	r18, Z+2	; 0x02
    4af6:	33 81       	ldd	r19, Z+3	; 0x03
    4af8:	41 e0       	ldi	r20, 0x01	; 1
    4afa:	50 e0       	ldi	r21, 0x00	; 0
    4afc:	b2 01       	movw	r22, r4
    4afe:	89 85       	ldd	r24, Y+9	; 0x09
    4b00:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b02:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4b06:	f6 01       	movw	r30, r12
    4b08:	24 81       	ldd	r18, Z+4	; 0x04
    4b0a:	35 81       	ldd	r19, Z+5	; 0x05
    4b0c:	40 e0       	ldi	r20, 0x00	; 0
    4b0e:	50 e0       	ldi	r21, 0x00	; 0
    4b10:	6a 2d       	mov	r22, r10
    4b12:	7b 2d       	mov	r23, r11
    4b14:	89 85       	ldd	r24, Y+9	; 0x09
    4b16:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b18:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4b1c:	f6 01       	movw	r30, r12
    4b1e:	26 81       	ldd	r18, Z+6	; 0x06
    4b20:	37 81       	ldd	r19, Z+7	; 0x07
    4b22:	41 e0       	ldi	r20, 0x01	; 1
    4b24:	50 e0       	ldi	r21, 0x00	; 0
    4b26:	6a 2d       	mov	r22, r10
    4b28:	7b 2d       	mov	r23, r11
    4b2a:	89 85       	ldd	r24, Y+9	; 0x09
    4b2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b2e:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4b32:	12 c3       	rjmp	.+1572   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x28: // INCREMENT GATE
			newthephi=gates.INC(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false));
    4b34:	ae 2c       	mov	r10, r14
    4b36:	bf 2c       	mov	r11, r15
    4b38:	20 e0       	ldi	r18, 0x00	; 0
    4b3a:	41 e0       	ldi	r20, 0x01	; 1
    4b3c:	50 e0       	ldi	r21, 0x00	; 0
    4b3e:	6e 2d       	mov	r22, r14
    4b40:	7f 2d       	mov	r23, r15
    4b42:	89 85       	ldd	r24, Y+9	; 0x09
    4b44:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b46:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4b4a:	8c 01       	movw	r16, r24
    4b4c:	20 e0       	ldi	r18, 0x00	; 0
    4b4e:	40 e0       	ldi	r20, 0x00	; 0
    4b50:	50 e0       	ldi	r21, 0x00	; 0
    4b52:	6e 2d       	mov	r22, r14
    4b54:	7f 2d       	mov	r23, r15
    4b56:	89 85       	ldd	r24, Y+9	; 0x09
    4b58:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b5a:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4b5e:	7c 01       	movw	r14, r24
    4b60:	20 e0       	ldi	r18, 0x00	; 0
    4b62:	41 e0       	ldi	r20, 0x01	; 1
    4b64:	50 e0       	ldi	r21, 0x00	; 0
    4b66:	b2 01       	movw	r22, r4
    4b68:	89 85       	ldd	r24, Y+9	; 0x09
    4b6a:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b6c:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4b70:	6c 01       	movw	r12, r24
    4b72:	20 e0       	ldi	r18, 0x00	; 0
    4b74:	40 e0       	ldi	r20, 0x00	; 0
    4b76:	50 e0       	ldi	r21, 0x00	; 0
    4b78:	b2 01       	movw	r22, r4
    4b7a:	89 85       	ldd	r24, Y+9	; 0x09
    4b7c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b7e:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4b82:	97 01       	movw	r18, r14
    4b84:	a6 01       	movw	r20, r12
    4b86:	bc 01       	movw	r22, r24
    4b88:	89 85       	ldd	r24, Y+9	; 0x09
    4b8a:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b8c:	09 96       	adiw	r24, 0x09	; 9
    4b8e:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <_ZN5Gates3INCEiiii>
    4b92:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4b94:	fc 01       	movw	r30, r24
    4b96:	20 81       	ld	r18, Z
    4b98:	31 81       	ldd	r19, Z+1	; 0x01
    4b9a:	40 e0       	ldi	r20, 0x00	; 0
    4b9c:	50 e0       	ldi	r21, 0x00	; 0
    4b9e:	b2 01       	movw	r22, r4
    4ba0:	89 85       	ldd	r24, Y+9	; 0x09
    4ba2:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ba4:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4ba8:	f6 01       	movw	r30, r12
    4baa:	22 81       	ldd	r18, Z+2	; 0x02
    4bac:	33 81       	ldd	r19, Z+3	; 0x03
    4bae:	41 e0       	ldi	r20, 0x01	; 1
    4bb0:	50 e0       	ldi	r21, 0x00	; 0
    4bb2:	b2 01       	movw	r22, r4
    4bb4:	89 85       	ldd	r24, Y+9	; 0x09
    4bb6:	9a 85       	ldd	r25, Y+10	; 0x0a
    4bb8:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4bbc:	f6 01       	movw	r30, r12
    4bbe:	24 81       	ldd	r18, Z+4	; 0x04
    4bc0:	35 81       	ldd	r19, Z+5	; 0x05
    4bc2:	40 e0       	ldi	r20, 0x00	; 0
    4bc4:	50 e0       	ldi	r21, 0x00	; 0
    4bc6:	6a 2d       	mov	r22, r10
    4bc8:	7b 2d       	mov	r23, r11
    4bca:	89 85       	ldd	r24, Y+9	; 0x09
    4bcc:	9a 85       	ldd	r25, Y+10	; 0x0a
    4bce:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4bd2:	f6 01       	movw	r30, r12
    4bd4:	26 81       	ldd	r18, Z+6	; 0x06
    4bd6:	37 81       	ldd	r19, Z+7	; 0x07
    4bd8:	41 e0       	ldi	r20, 0x01	; 1
    4bda:	50 e0       	ldi	r21, 0x00	; 0
    4bdc:	6a 2d       	mov	r22, r10
    4bde:	7b 2d       	mov	r23, r11
    4be0:	89 85       	ldd	r24, Y+9	; 0x09
    4be2:	9a 85       	ldd	r25, Y+10	; 0x0a
    4be4:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4be8:	b7 c2       	rjmp	.+1390   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x29: // DECREMENT GATE
			newthephi=gates.DEC(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false));
    4bea:	ae 2c       	mov	r10, r14
    4bec:	bf 2c       	mov	r11, r15
    4bee:	20 e0       	ldi	r18, 0x00	; 0
    4bf0:	41 e0       	ldi	r20, 0x01	; 1
    4bf2:	50 e0       	ldi	r21, 0x00	; 0
    4bf4:	6e 2d       	mov	r22, r14
    4bf6:	7f 2d       	mov	r23, r15
    4bf8:	89 85       	ldd	r24, Y+9	; 0x09
    4bfa:	9a 85       	ldd	r25, Y+10	; 0x0a
    4bfc:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4c00:	8c 01       	movw	r16, r24
    4c02:	20 e0       	ldi	r18, 0x00	; 0
    4c04:	40 e0       	ldi	r20, 0x00	; 0
    4c06:	50 e0       	ldi	r21, 0x00	; 0
    4c08:	6e 2d       	mov	r22, r14
    4c0a:	7f 2d       	mov	r23, r15
    4c0c:	89 85       	ldd	r24, Y+9	; 0x09
    4c0e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c10:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4c14:	7c 01       	movw	r14, r24
    4c16:	20 e0       	ldi	r18, 0x00	; 0
    4c18:	41 e0       	ldi	r20, 0x01	; 1
    4c1a:	50 e0       	ldi	r21, 0x00	; 0
    4c1c:	b2 01       	movw	r22, r4
    4c1e:	89 85       	ldd	r24, Y+9	; 0x09
    4c20:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c22:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4c26:	6c 01       	movw	r12, r24
    4c28:	20 e0       	ldi	r18, 0x00	; 0
    4c2a:	40 e0       	ldi	r20, 0x00	; 0
    4c2c:	50 e0       	ldi	r21, 0x00	; 0
    4c2e:	b2 01       	movw	r22, r4
    4c30:	89 85       	ldd	r24, Y+9	; 0x09
    4c32:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c34:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4c38:	97 01       	movw	r18, r14
    4c3a:	a6 01       	movw	r20, r12
    4c3c:	bc 01       	movw	r22, r24
    4c3e:	89 85       	ldd	r24, Y+9	; 0x09
    4c40:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c42:	09 96       	adiw	r24, 0x09	; 9
    4c44:	0e 94 b8 0f 	call	0x1f70	; 0x1f70 <_ZN5Gates3DECEiiii>
    4c48:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4c4a:	fc 01       	movw	r30, r24
    4c4c:	20 81       	ld	r18, Z
    4c4e:	31 81       	ldd	r19, Z+1	; 0x01
    4c50:	40 e0       	ldi	r20, 0x00	; 0
    4c52:	50 e0       	ldi	r21, 0x00	; 0
    4c54:	b2 01       	movw	r22, r4
    4c56:	89 85       	ldd	r24, Y+9	; 0x09
    4c58:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c5a:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4c5e:	f6 01       	movw	r30, r12
    4c60:	22 81       	ldd	r18, Z+2	; 0x02
    4c62:	33 81       	ldd	r19, Z+3	; 0x03
    4c64:	41 e0       	ldi	r20, 0x01	; 1
    4c66:	50 e0       	ldi	r21, 0x00	; 0
    4c68:	b2 01       	movw	r22, r4
    4c6a:	89 85       	ldd	r24, Y+9	; 0x09
    4c6c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c6e:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4c72:	f6 01       	movw	r30, r12
    4c74:	24 81       	ldd	r18, Z+4	; 0x04
    4c76:	35 81       	ldd	r19, Z+5	; 0x05
    4c78:	40 e0       	ldi	r20, 0x00	; 0
    4c7a:	50 e0       	ldi	r21, 0x00	; 0
    4c7c:	6a 2d       	mov	r22, r10
    4c7e:	7b 2d       	mov	r23, r11
    4c80:	89 85       	ldd	r24, Y+9	; 0x09
    4c82:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c84:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4c88:	f6 01       	movw	r30, r12
    4c8a:	26 81       	ldd	r18, Z+6	; 0x06
    4c8c:	37 81       	ldd	r19, Z+7	; 0x07
    4c8e:	41 e0       	ldi	r20, 0x01	; 1
    4c90:	50 e0       	ldi	r21, 0x00	; 0
    4c92:	6a 2d       	mov	r22, r10
    4c94:	7b 2d       	mov	r23, r11
    4c96:	89 85       	ldd	r24, Y+9	; 0x09
    4c98:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c9a:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4c9e:	5c c2       	rjmp	.+1208   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x2A: // SWAGSQ GATE
			newthephi=gates.SWQ(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false));
    4ca0:	ae 2c       	mov	r10, r14
    4ca2:	bf 2c       	mov	r11, r15
    4ca4:	20 e0       	ldi	r18, 0x00	; 0
    4ca6:	41 e0       	ldi	r20, 0x01	; 1
    4ca8:	50 e0       	ldi	r21, 0x00	; 0
    4caa:	6e 2d       	mov	r22, r14
    4cac:	7f 2d       	mov	r23, r15
    4cae:	89 85       	ldd	r24, Y+9	; 0x09
    4cb0:	9a 85       	ldd	r25, Y+10	; 0x0a
    4cb2:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4cb6:	8c 01       	movw	r16, r24
    4cb8:	20 e0       	ldi	r18, 0x00	; 0
    4cba:	40 e0       	ldi	r20, 0x00	; 0
    4cbc:	50 e0       	ldi	r21, 0x00	; 0
    4cbe:	6e 2d       	mov	r22, r14
    4cc0:	7f 2d       	mov	r23, r15
    4cc2:	89 85       	ldd	r24, Y+9	; 0x09
    4cc4:	9a 85       	ldd	r25, Y+10	; 0x0a
    4cc6:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4cca:	7c 01       	movw	r14, r24
    4ccc:	20 e0       	ldi	r18, 0x00	; 0
    4cce:	41 e0       	ldi	r20, 0x01	; 1
    4cd0:	50 e0       	ldi	r21, 0x00	; 0
    4cd2:	b2 01       	movw	r22, r4
    4cd4:	89 85       	ldd	r24, Y+9	; 0x09
    4cd6:	9a 85       	ldd	r25, Y+10	; 0x0a
    4cd8:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4cdc:	6c 01       	movw	r12, r24
    4cde:	20 e0       	ldi	r18, 0x00	; 0
    4ce0:	40 e0       	ldi	r20, 0x00	; 0
    4ce2:	50 e0       	ldi	r21, 0x00	; 0
    4ce4:	b2 01       	movw	r22, r4
    4ce6:	89 85       	ldd	r24, Y+9	; 0x09
    4ce8:	9a 85       	ldd	r25, Y+10	; 0x0a
    4cea:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4cee:	97 01       	movw	r18, r14
    4cf0:	a6 01       	movw	r20, r12
    4cf2:	bc 01       	movw	r22, r24
    4cf4:	89 85       	ldd	r24, Y+9	; 0x09
    4cf6:	9a 85       	ldd	r25, Y+10	; 0x0a
    4cf8:	09 96       	adiw	r24, 0x09	; 9
    4cfa:	0e 94 ba 10 	call	0x2174	; 0x2174 <_ZN5Gates3SWQEiiii>
    4cfe:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4d00:	fc 01       	movw	r30, r24
    4d02:	20 81       	ld	r18, Z
    4d04:	31 81       	ldd	r19, Z+1	; 0x01
    4d06:	40 e0       	ldi	r20, 0x00	; 0
    4d08:	50 e0       	ldi	r21, 0x00	; 0
    4d0a:	b2 01       	movw	r22, r4
    4d0c:	89 85       	ldd	r24, Y+9	; 0x09
    4d0e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d10:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4d14:	f6 01       	movw	r30, r12
    4d16:	22 81       	ldd	r18, Z+2	; 0x02
    4d18:	33 81       	ldd	r19, Z+3	; 0x03
    4d1a:	41 e0       	ldi	r20, 0x01	; 1
    4d1c:	50 e0       	ldi	r21, 0x00	; 0
    4d1e:	b2 01       	movw	r22, r4
    4d20:	89 85       	ldd	r24, Y+9	; 0x09
    4d22:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d24:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4d28:	f6 01       	movw	r30, r12
    4d2a:	24 81       	ldd	r18, Z+4	; 0x04
    4d2c:	35 81       	ldd	r19, Z+5	; 0x05
    4d2e:	40 e0       	ldi	r20, 0x00	; 0
    4d30:	50 e0       	ldi	r21, 0x00	; 0
    4d32:	6a 2d       	mov	r22, r10
    4d34:	7b 2d       	mov	r23, r11
    4d36:	89 85       	ldd	r24, Y+9	; 0x09
    4d38:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d3a:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4d3e:	f6 01       	movw	r30, r12
    4d40:	26 81       	ldd	r18, Z+6	; 0x06
    4d42:	37 81       	ldd	r19, Z+7	; 0x07
    4d44:	41 e0       	ldi	r20, 0x01	; 1
    4d46:	50 e0       	ldi	r21, 0x00	; 0
    4d48:	6a 2d       	mov	r22, r10
    4d4a:	7b 2d       	mov	r23, r11
    4d4c:	89 85       	ldd	r24, Y+9	; 0x09
    4d4e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d50:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4d54:	01 c2       	rjmp	.+1026   	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x2B: // SWAPI GATE
			newthephi=gates.SWI(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false));
    4d56:	ae 2c       	mov	r10, r14
    4d58:	bf 2c       	mov	r11, r15
    4d5a:	20 e0       	ldi	r18, 0x00	; 0
    4d5c:	41 e0       	ldi	r20, 0x01	; 1
    4d5e:	50 e0       	ldi	r21, 0x00	; 0
    4d60:	6e 2d       	mov	r22, r14
    4d62:	7f 2d       	mov	r23, r15
    4d64:	89 85       	ldd	r24, Y+9	; 0x09
    4d66:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d68:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4d6c:	8c 01       	movw	r16, r24
    4d6e:	20 e0       	ldi	r18, 0x00	; 0
    4d70:	40 e0       	ldi	r20, 0x00	; 0
    4d72:	50 e0       	ldi	r21, 0x00	; 0
    4d74:	6e 2d       	mov	r22, r14
    4d76:	7f 2d       	mov	r23, r15
    4d78:	89 85       	ldd	r24, Y+9	; 0x09
    4d7a:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d7c:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4d80:	7c 01       	movw	r14, r24
    4d82:	20 e0       	ldi	r18, 0x00	; 0
    4d84:	41 e0       	ldi	r20, 0x01	; 1
    4d86:	50 e0       	ldi	r21, 0x00	; 0
    4d88:	b2 01       	movw	r22, r4
    4d8a:	89 85       	ldd	r24, Y+9	; 0x09
    4d8c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d8e:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4d92:	6c 01       	movw	r12, r24
    4d94:	20 e0       	ldi	r18, 0x00	; 0
    4d96:	40 e0       	ldi	r20, 0x00	; 0
    4d98:	50 e0       	ldi	r21, 0x00	; 0
    4d9a:	b2 01       	movw	r22, r4
    4d9c:	89 85       	ldd	r24, Y+9	; 0x09
    4d9e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4da0:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4da4:	97 01       	movw	r18, r14
    4da6:	a6 01       	movw	r20, r12
    4da8:	bc 01       	movw	r22, r24
    4daa:	89 85       	ldd	r24, Y+9	; 0x09
    4dac:	9a 85       	ldd	r25, Y+10	; 0x0a
    4dae:	09 96       	adiw	r24, 0x09	; 9
    4db0:	0e 94 c0 11 	call	0x2380	; 0x2380 <_ZN5Gates3SWIEiiii>
    4db4:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4db6:	fc 01       	movw	r30, r24
    4db8:	20 81       	ld	r18, Z
    4dba:	31 81       	ldd	r19, Z+1	; 0x01
    4dbc:	40 e0       	ldi	r20, 0x00	; 0
    4dbe:	50 e0       	ldi	r21, 0x00	; 0
    4dc0:	b2 01       	movw	r22, r4
    4dc2:	89 85       	ldd	r24, Y+9	; 0x09
    4dc4:	9a 85       	ldd	r25, Y+10	; 0x0a
    4dc6:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4dca:	f6 01       	movw	r30, r12
    4dcc:	22 81       	ldd	r18, Z+2	; 0x02
    4dce:	33 81       	ldd	r19, Z+3	; 0x03
    4dd0:	41 e0       	ldi	r20, 0x01	; 1
    4dd2:	50 e0       	ldi	r21, 0x00	; 0
    4dd4:	b2 01       	movw	r22, r4
    4dd6:	89 85       	ldd	r24, Y+9	; 0x09
    4dd8:	9a 85       	ldd	r25, Y+10	; 0x0a
    4dda:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4dde:	f6 01       	movw	r30, r12
    4de0:	24 81       	ldd	r18, Z+4	; 0x04
    4de2:	35 81       	ldd	r19, Z+5	; 0x05
    4de4:	40 e0       	ldi	r20, 0x00	; 0
    4de6:	50 e0       	ldi	r21, 0x00	; 0
    4de8:	6a 2d       	mov	r22, r10
    4dea:	7b 2d       	mov	r23, r11
    4dec:	89 85       	ldd	r24, Y+9	; 0x09
    4dee:	9a 85       	ldd	r25, Y+10	; 0x0a
    4df0:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4df4:	f6 01       	movw	r30, r12
    4df6:	26 81       	ldd	r18, Z+6	; 0x06
    4df8:	37 81       	ldd	r19, Z+7	; 0x07
    4dfa:	41 e0       	ldi	r20, 0x01	; 1
    4dfc:	50 e0       	ldi	r21, 0x00	; 0
    4dfe:	6a 2d       	mov	r22, r10
    4e00:	7b 2d       	mov	r23, r11
    4e02:	89 85       	ldd	r24, Y+9	; 0x09
    4e04:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e06:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4e0a:	a6 c1       	rjmp	.+844    	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		//3 QUBIT GATES -
		case 0x2C: // CONTROL SWAP GATE
			newthephi=gates.CSW(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false),read(op3,THE,false),read(op3,PHI,false));
    4e0c:	20 e0       	ldi	r18, 0x00	; 0
    4e0e:	41 e0       	ldi	r20, 0x01	; 1
    4e10:	50 e0       	ldi	r21, 0x00	; 0
    4e12:	69 81       	ldd	r22, Y+1	; 0x01
    4e14:	7a 81       	ldd	r23, Y+2	; 0x02
    4e16:	89 85       	ldd	r24, Y+9	; 0x09
    4e18:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e1a:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4e1e:	6c 01       	movw	r12, r24
    4e20:	20 e0       	ldi	r18, 0x00	; 0
    4e22:	40 e0       	ldi	r20, 0x00	; 0
    4e24:	50 e0       	ldi	r21, 0x00	; 0
    4e26:	69 81       	ldd	r22, Y+1	; 0x01
    4e28:	7a 81       	ldd	r23, Y+2	; 0x02
    4e2a:	89 85       	ldd	r24, Y+9	; 0x09
    4e2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e2e:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4e32:	8c 01       	movw	r16, r24
    4e34:	be 2c       	mov	r11, r14
    4e36:	af 2c       	mov	r10, r15
    4e38:	20 e0       	ldi	r18, 0x00	; 0
    4e3a:	41 e0       	ldi	r20, 0x01	; 1
    4e3c:	50 e0       	ldi	r21, 0x00	; 0
    4e3e:	6e 2d       	mov	r22, r14
    4e40:	7f 2d       	mov	r23, r15
    4e42:	89 85       	ldd	r24, Y+9	; 0x09
    4e44:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e46:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4e4a:	4c 01       	movw	r8, r24
    4e4c:	20 e0       	ldi	r18, 0x00	; 0
    4e4e:	40 e0       	ldi	r20, 0x00	; 0
    4e50:	50 e0       	ldi	r21, 0x00	; 0
    4e52:	6e 2d       	mov	r22, r14
    4e54:	7f 2d       	mov	r23, r15
    4e56:	89 85       	ldd	r24, Y+9	; 0x09
    4e58:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e5a:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4e5e:	1c 01       	movw	r2, r24
    4e60:	20 e0       	ldi	r18, 0x00	; 0
    4e62:	41 e0       	ldi	r20, 0x01	; 1
    4e64:	50 e0       	ldi	r21, 0x00	; 0
    4e66:	b2 01       	movw	r22, r4
    4e68:	89 85       	ldd	r24, Y+9	; 0x09
    4e6a:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e6c:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4e70:	9e 83       	std	Y+6, r25	; 0x06
    4e72:	8d 83       	std	Y+5, r24	; 0x05
    4e74:	20 e0       	ldi	r18, 0x00	; 0
    4e76:	40 e0       	ldi	r20, 0x00	; 0
    4e78:	50 e0       	ldi	r21, 0x00	; 0
    4e7a:	b2 01       	movw	r22, r4
    4e7c:	89 85       	ldd	r24, Y+9	; 0x09
    4e7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e80:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4e84:	78 01       	movw	r14, r16
    4e86:	84 01       	movw	r16, r8
    4e88:	91 01       	movw	r18, r2
    4e8a:	4d 81       	ldd	r20, Y+5	; 0x05
    4e8c:	5e 81       	ldd	r21, Y+6	; 0x06
    4e8e:	bc 01       	movw	r22, r24
    4e90:	89 85       	ldd	r24, Y+9	; 0x09
    4e92:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e94:	09 96       	adiw	r24, 0x09	; 9
    4e96:	0e 94 93 14 	call	0x2926	; 0x2926 <_ZN5Gates3CSWEiiiiii>
    4e9a:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4e9c:	fc 01       	movw	r30, r24
    4e9e:	20 81       	ld	r18, Z
    4ea0:	31 81       	ldd	r19, Z+1	; 0x01
    4ea2:	40 e0       	ldi	r20, 0x00	; 0
    4ea4:	50 e0       	ldi	r21, 0x00	; 0
    4ea6:	b2 01       	movw	r22, r4
    4ea8:	89 85       	ldd	r24, Y+9	; 0x09
    4eaa:	9a 85       	ldd	r25, Y+10	; 0x0a
    4eac:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4eb0:	f6 01       	movw	r30, r12
    4eb2:	22 81       	ldd	r18, Z+2	; 0x02
    4eb4:	33 81       	ldd	r19, Z+3	; 0x03
    4eb6:	41 e0       	ldi	r20, 0x01	; 1
    4eb8:	50 e0       	ldi	r21, 0x00	; 0
    4eba:	b2 01       	movw	r22, r4
    4ebc:	89 85       	ldd	r24, Y+9	; 0x09
    4ebe:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ec0:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4ec4:	f6 01       	movw	r30, r12
    4ec6:	24 81       	ldd	r18, Z+4	; 0x04
    4ec8:	35 81       	ldd	r19, Z+5	; 0x05
    4eca:	40 e0       	ldi	r20, 0x00	; 0
    4ecc:	50 e0       	ldi	r21, 0x00	; 0
    4ece:	6b 2d       	mov	r22, r11
    4ed0:	7a 2d       	mov	r23, r10
    4ed2:	89 85       	ldd	r24, Y+9	; 0x09
    4ed4:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ed6:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4eda:	f6 01       	movw	r30, r12
    4edc:	26 81       	ldd	r18, Z+6	; 0x06
    4ede:	37 81       	ldd	r19, Z+7	; 0x07
    4ee0:	41 e0       	ldi	r20, 0x01	; 1
    4ee2:	50 e0       	ldi	r21, 0x00	; 0
    4ee4:	6b 2d       	mov	r22, r11
    4ee6:	7a 2d       	mov	r23, r10
    4ee8:	89 85       	ldd	r24, Y+9	; 0x09
    4eea:	9a 85       	ldd	r25, Y+10	; 0x0a
    4eec:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			write(op3,THE,newthephi[4]); write(op3,PHI,newthephi[5]);
    4ef0:	f6 01       	movw	r30, r12
    4ef2:	20 85       	ldd	r18, Z+8	; 0x08
    4ef4:	31 85       	ldd	r19, Z+9	; 0x09
    4ef6:	40 e0       	ldi	r20, 0x00	; 0
    4ef8:	50 e0       	ldi	r21, 0x00	; 0
    4efa:	69 81       	ldd	r22, Y+1	; 0x01
    4efc:	7a 81       	ldd	r23, Y+2	; 0x02
    4efe:	89 85       	ldd	r24, Y+9	; 0x09
    4f00:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f02:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4f06:	f6 01       	movw	r30, r12
    4f08:	22 85       	ldd	r18, Z+10	; 0x0a
    4f0a:	33 85       	ldd	r19, Z+11	; 0x0b
    4f0c:	41 e0       	ldi	r20, 0x01	; 1
    4f0e:	50 e0       	ldi	r21, 0x00	; 0
    4f10:	69 81       	ldd	r22, Y+1	; 0x01
    4f12:	7a 81       	ldd	r23, Y+2	; 0x02
    4f14:	89 85       	ldd	r24, Y+9	; 0x09
    4f16:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f18:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    4f1c:	1d c1       	rjmp	.+570    	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x2D: // TOFFOLI GATE
			newthephi=gates.TOF(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false),read(op3,THE,false),read(op3,PHI,false));
    4f1e:	20 e0       	ldi	r18, 0x00	; 0
    4f20:	41 e0       	ldi	r20, 0x01	; 1
    4f22:	50 e0       	ldi	r21, 0x00	; 0
    4f24:	69 81       	ldd	r22, Y+1	; 0x01
    4f26:	7a 81       	ldd	r23, Y+2	; 0x02
    4f28:	89 85       	ldd	r24, Y+9	; 0x09
    4f2a:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f2c:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4f30:	6c 01       	movw	r12, r24
    4f32:	20 e0       	ldi	r18, 0x00	; 0
    4f34:	40 e0       	ldi	r20, 0x00	; 0
    4f36:	50 e0       	ldi	r21, 0x00	; 0
    4f38:	69 81       	ldd	r22, Y+1	; 0x01
    4f3a:	7a 81       	ldd	r23, Y+2	; 0x02
    4f3c:	89 85       	ldd	r24, Y+9	; 0x09
    4f3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f40:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4f44:	8c 01       	movw	r16, r24
    4f46:	be 2c       	mov	r11, r14
    4f48:	af 2c       	mov	r10, r15
    4f4a:	20 e0       	ldi	r18, 0x00	; 0
    4f4c:	41 e0       	ldi	r20, 0x01	; 1
    4f4e:	50 e0       	ldi	r21, 0x00	; 0
    4f50:	6e 2d       	mov	r22, r14
    4f52:	7f 2d       	mov	r23, r15
    4f54:	89 85       	ldd	r24, Y+9	; 0x09
    4f56:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f58:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4f5c:	4c 01       	movw	r8, r24
    4f5e:	20 e0       	ldi	r18, 0x00	; 0
    4f60:	40 e0       	ldi	r20, 0x00	; 0
    4f62:	50 e0       	ldi	r21, 0x00	; 0
    4f64:	6e 2d       	mov	r22, r14
    4f66:	7f 2d       	mov	r23, r15
    4f68:	89 85       	ldd	r24, Y+9	; 0x09
    4f6a:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f6c:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4f70:	1c 01       	movw	r2, r24
    4f72:	20 e0       	ldi	r18, 0x00	; 0
    4f74:	41 e0       	ldi	r20, 0x01	; 1
    4f76:	50 e0       	ldi	r21, 0x00	; 0
    4f78:	b2 01       	movw	r22, r4
    4f7a:	89 85       	ldd	r24, Y+9	; 0x09
    4f7c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f7e:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4f82:	9e 83       	std	Y+6, r25	; 0x06
    4f84:	8d 83       	std	Y+5, r24	; 0x05
    4f86:	20 e0       	ldi	r18, 0x00	; 0
    4f88:	40 e0       	ldi	r20, 0x00	; 0
    4f8a:	50 e0       	ldi	r21, 0x00	; 0
    4f8c:	b2 01       	movw	r22, r4
    4f8e:	89 85       	ldd	r24, Y+9	; 0x09
    4f90:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f92:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    4f96:	78 01       	movw	r14, r16
    4f98:	84 01       	movw	r16, r8
    4f9a:	91 01       	movw	r18, r2
    4f9c:	4d 81       	ldd	r20, Y+5	; 0x05
    4f9e:	5e 81       	ldd	r21, Y+6	; 0x06
    4fa0:	bc 01       	movw	r22, r24
    4fa2:	89 85       	ldd	r24, Y+9	; 0x09
    4fa4:	9a 85       	ldd	r25, Y+10	; 0x0a
    4fa6:	09 96       	adiw	r24, 0x09	; 9
    4fa8:	0e 94 91 17 	call	0x2f22	; 0x2f22 <_ZN5Gates3TOFEiiiiii>
    4fac:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    4fae:	fc 01       	movw	r30, r24
    4fb0:	20 81       	ld	r18, Z
    4fb2:	31 81       	ldd	r19, Z+1	; 0x01
    4fb4:	40 e0       	ldi	r20, 0x00	; 0
    4fb6:	50 e0       	ldi	r21, 0x00	; 0
    4fb8:	b2 01       	movw	r22, r4
    4fba:	89 85       	ldd	r24, Y+9	; 0x09
    4fbc:	9a 85       	ldd	r25, Y+10	; 0x0a
    4fbe:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4fc2:	f6 01       	movw	r30, r12
    4fc4:	22 81       	ldd	r18, Z+2	; 0x02
    4fc6:	33 81       	ldd	r19, Z+3	; 0x03
    4fc8:	41 e0       	ldi	r20, 0x01	; 1
    4fca:	50 e0       	ldi	r21, 0x00	; 0
    4fcc:	b2 01       	movw	r22, r4
    4fce:	89 85       	ldd	r24, Y+9	; 0x09
    4fd0:	9a 85       	ldd	r25, Y+10	; 0x0a
    4fd2:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    4fd6:	f6 01       	movw	r30, r12
    4fd8:	24 81       	ldd	r18, Z+4	; 0x04
    4fda:	35 81       	ldd	r19, Z+5	; 0x05
    4fdc:	40 e0       	ldi	r20, 0x00	; 0
    4fde:	50 e0       	ldi	r21, 0x00	; 0
    4fe0:	6b 2d       	mov	r22, r11
    4fe2:	7a 2d       	mov	r23, r10
    4fe4:	89 85       	ldd	r24, Y+9	; 0x09
    4fe6:	9a 85       	ldd	r25, Y+10	; 0x0a
    4fe8:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    4fec:	f6 01       	movw	r30, r12
    4fee:	26 81       	ldd	r18, Z+6	; 0x06
    4ff0:	37 81       	ldd	r19, Z+7	; 0x07
    4ff2:	41 e0       	ldi	r20, 0x01	; 1
    4ff4:	50 e0       	ldi	r21, 0x00	; 0
    4ff6:	6b 2d       	mov	r22, r11
    4ff8:	7a 2d       	mov	r23, r10
    4ffa:	89 85       	ldd	r24, Y+9	; 0x09
    4ffc:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ffe:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			write(op3,THE,newthephi[4]); write(op3,PHI,newthephi[5]);
    5002:	f6 01       	movw	r30, r12
    5004:	20 85       	ldd	r18, Z+8	; 0x08
    5006:	31 85       	ldd	r19, Z+9	; 0x09
    5008:	40 e0       	ldi	r20, 0x00	; 0
    500a:	50 e0       	ldi	r21, 0x00	; 0
    500c:	69 81       	ldd	r22, Y+1	; 0x01
    500e:	7a 81       	ldd	r23, Y+2	; 0x02
    5010:	89 85       	ldd	r24, Y+9	; 0x09
    5012:	9a 85       	ldd	r25, Y+10	; 0x0a
    5014:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    5018:	f6 01       	movw	r30, r12
    501a:	22 85       	ldd	r18, Z+10	; 0x0a
    501c:	33 85       	ldd	r19, Z+11	; 0x0b
    501e:	41 e0       	ldi	r20, 0x01	; 1
    5020:	50 e0       	ldi	r21, 0x00	; 0
    5022:	69 81       	ldd	r22, Y+1	; 0x01
    5024:	7a 81       	ldd	r23, Y+2	; 0x02
    5026:	89 85       	ldd	r24, Y+9	; 0x09
    5028:	9a 85       	ldd	r25, Y+10	; 0x0a
    502a:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			break;
    502e:	94 c0       	rjmp	.+296    	; 0x5158 <_ZN4QEPU7executeEilll+0xf4a>
		case 0x2E: // DEUTSCH GATE
			newthephi=gates.DEU(read(op1,THE,false),read(op1,PHI,false),read(op2,THE,false),read(op2,PHI,false),read(op3,THE,false),read(op3,PHI,false),read(0,THE,false));
    5030:	20 e0       	ldi	r18, 0x00	; 0
    5032:	40 e0       	ldi	r20, 0x00	; 0
    5034:	50 e0       	ldi	r21, 0x00	; 0
    5036:	60 e0       	ldi	r22, 0x00	; 0
    5038:	70 e0       	ldi	r23, 0x00	; 0
    503a:	89 85       	ldd	r24, Y+9	; 0x09
    503c:	9a 85       	ldd	r25, Y+10	; 0x0a
    503e:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    5042:	5c 01       	movw	r10, r24
    5044:	20 e0       	ldi	r18, 0x00	; 0
    5046:	41 e0       	ldi	r20, 0x01	; 1
    5048:	50 e0       	ldi	r21, 0x00	; 0
    504a:	69 81       	ldd	r22, Y+1	; 0x01
    504c:	7a 81       	ldd	r23, Y+2	; 0x02
    504e:	89 85       	ldd	r24, Y+9	; 0x09
    5050:	9a 85       	ldd	r25, Y+10	; 0x0a
    5052:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    5056:	6c 01       	movw	r12, r24
    5058:	20 e0       	ldi	r18, 0x00	; 0
    505a:	40 e0       	ldi	r20, 0x00	; 0
    505c:	50 e0       	ldi	r21, 0x00	; 0
    505e:	69 81       	ldd	r22, Y+1	; 0x01
    5060:	7a 81       	ldd	r23, Y+2	; 0x02
    5062:	89 85       	ldd	r24, Y+9	; 0x09
    5064:	9a 85       	ldd	r25, Y+10	; 0x0a
    5066:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    506a:	8c 01       	movw	r16, r24
    506c:	9e 2c       	mov	r9, r14
    506e:	8f 2c       	mov	r8, r15
    5070:	20 e0       	ldi	r18, 0x00	; 0
    5072:	41 e0       	ldi	r20, 0x01	; 1
    5074:	50 e0       	ldi	r21, 0x00	; 0
    5076:	6e 2d       	mov	r22, r14
    5078:	7f 2d       	mov	r23, r15
    507a:	89 85       	ldd	r24, Y+9	; 0x09
    507c:	9a 85       	ldd	r25, Y+10	; 0x0a
    507e:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    5082:	1c 01       	movw	r2, r24
    5084:	20 e0       	ldi	r18, 0x00	; 0
    5086:	40 e0       	ldi	r20, 0x00	; 0
    5088:	50 e0       	ldi	r21, 0x00	; 0
    508a:	6e 2d       	mov	r22, r14
    508c:	7f 2d       	mov	r23, r15
    508e:	89 85       	ldd	r24, Y+9	; 0x09
    5090:	9a 85       	ldd	r25, Y+10	; 0x0a
    5092:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    5096:	9e 83       	std	Y+6, r25	; 0x06
    5098:	8d 83       	std	Y+5, r24	; 0x05
    509a:	20 e0       	ldi	r18, 0x00	; 0
    509c:	41 e0       	ldi	r20, 0x01	; 1
    509e:	50 e0       	ldi	r21, 0x00	; 0
    50a0:	b2 01       	movw	r22, r4
    50a2:	89 85       	ldd	r24, Y+9	; 0x09
    50a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    50a6:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    50aa:	98 87       	std	Y+8, r25	; 0x08
    50ac:	8f 83       	std	Y+7, r24	; 0x07
    50ae:	20 e0       	ldi	r18, 0x00	; 0
    50b0:	40 e0       	ldi	r20, 0x00	; 0
    50b2:	50 e0       	ldi	r21, 0x00	; 0
    50b4:	b2 01       	movw	r22, r4
    50b6:	89 85       	ldd	r24, Y+9	; 0x09
    50b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    50ba:	0e 94 5d 1f 	call	0x3eba	; 0x3eba <_ZN4QEPU4readEiib>
    50be:	78 01       	movw	r14, r16
    50c0:	81 01       	movw	r16, r2
    50c2:	2d 81       	ldd	r18, Y+5	; 0x05
    50c4:	3e 81       	ldd	r19, Y+6	; 0x06
    50c6:	4f 81       	ldd	r20, Y+7	; 0x07
    50c8:	58 85       	ldd	r21, Y+8	; 0x08
    50ca:	bc 01       	movw	r22, r24
    50cc:	89 85       	ldd	r24, Y+9	; 0x09
    50ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    50d0:	09 96       	adiw	r24, 0x09	; 9
    50d2:	0e 94 8f 1a 	call	0x351e	; 0x351e <_ZN5Gates3DEUEiiiiiii>
    50d6:	6c 01       	movw	r12, r24
			write(op1,THE,newthephi[0]); write(op1,PHI,newthephi[1]);
    50d8:	fc 01       	movw	r30, r24
    50da:	20 81       	ld	r18, Z
    50dc:	31 81       	ldd	r19, Z+1	; 0x01
    50de:	40 e0       	ldi	r20, 0x00	; 0
    50e0:	50 e0       	ldi	r21, 0x00	; 0
    50e2:	b2 01       	movw	r22, r4
    50e4:	89 85       	ldd	r24, Y+9	; 0x09
    50e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    50e8:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    50ec:	f6 01       	movw	r30, r12
    50ee:	22 81       	ldd	r18, Z+2	; 0x02
    50f0:	33 81       	ldd	r19, Z+3	; 0x03
    50f2:	41 e0       	ldi	r20, 0x01	; 1
    50f4:	50 e0       	ldi	r21, 0x00	; 0
    50f6:	b2 01       	movw	r22, r4
    50f8:	89 85       	ldd	r24, Y+9	; 0x09
    50fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    50fc:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			write(op2,THE,newthephi[2]); write(op2,PHI,newthephi[3]);
    5100:	f6 01       	movw	r30, r12
    5102:	24 81       	ldd	r18, Z+4	; 0x04
    5104:	35 81       	ldd	r19, Z+5	; 0x05
    5106:	40 e0       	ldi	r20, 0x00	; 0
    5108:	50 e0       	ldi	r21, 0x00	; 0
    510a:	69 2d       	mov	r22, r9
    510c:	78 2d       	mov	r23, r8
    510e:	89 85       	ldd	r24, Y+9	; 0x09
    5110:	9a 85       	ldd	r25, Y+10	; 0x0a
    5112:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    5116:	f6 01       	movw	r30, r12
    5118:	26 81       	ldd	r18, Z+6	; 0x06
    511a:	37 81       	ldd	r19, Z+7	; 0x07
    511c:	41 e0       	ldi	r20, 0x01	; 1
    511e:	50 e0       	ldi	r21, 0x00	; 0
    5120:	69 2d       	mov	r22, r9
    5122:	78 2d       	mov	r23, r8
    5124:	89 85       	ldd	r24, Y+9	; 0x09
    5126:	9a 85       	ldd	r25, Y+10	; 0x0a
    5128:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
			write(op3,THE,newthephi[4]); write(op3,PHI,newthephi[5]);
    512c:	f6 01       	movw	r30, r12
    512e:	20 85       	ldd	r18, Z+8	; 0x08
    5130:	31 85       	ldd	r19, Z+9	; 0x09
    5132:	40 e0       	ldi	r20, 0x00	; 0
    5134:	50 e0       	ldi	r21, 0x00	; 0
    5136:	69 81       	ldd	r22, Y+1	; 0x01
    5138:	7a 81       	ldd	r23, Y+2	; 0x02
    513a:	89 85       	ldd	r24, Y+9	; 0x09
    513c:	9a 85       	ldd	r25, Y+10	; 0x0a
    513e:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
    5142:	f6 01       	movw	r30, r12
    5144:	22 85       	ldd	r18, Z+10	; 0x0a
    5146:	33 85       	ldd	r19, Z+11	; 0x0b
    5148:	41 e0       	ldi	r20, 0x01	; 1
    514a:	50 e0       	ldi	r21, 0x00	; 0
    514c:	69 81       	ldd	r22, Y+1	; 0x01
    514e:	7a 81       	ldd	r23, Y+2	; 0x02
    5150:	89 85       	ldd	r24, Y+9	; 0x09
    5152:	9a 85       	ldd	r25, Y+10	; 0x0a
    5154:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <_ZN4QEPU5writeEiii>
		serial.writestr(" , OP1: ");   serial.writestr(utils.int2str(op1));
		serial.writestr(" , OP2: ");   serial.writestr(utils.int2str(op2));
		serial.writestr(" PC: ");	   serial.writestrln(utils.int2str(program_counter));
		serial.writestrln("");
	}
	free(newthephi);	
    5158:	c6 01       	movw	r24, r12
    515a:	0e 94 a8 32 	call	0x6550	; 0x6550 <free>
    515e:	2a 96       	adiw	r28, 0x0a	; 10
    5160:	0f b6       	in	r0, 0x3f	; 63
    5162:	f8 94       	cli
    5164:	de bf       	out	0x3e, r29	; 62
    5166:	0f be       	out	0x3f, r0	; 63
    5168:	cd bf       	out	0x3d, r28	; 61
    516a:	df 91       	pop	r29
    516c:	cf 91       	pop	r28
    516e:	1f 91       	pop	r17
    5170:	0f 91       	pop	r16
    5172:	ff 90       	pop	r15
    5174:	ef 90       	pop	r14
    5176:	df 90       	pop	r13
    5178:	cf 90       	pop	r12
    517a:	bf 90       	pop	r11
    517c:	af 90       	pop	r10
    517e:	9f 90       	pop	r9
    5180:	8f 90       	pop	r8
    5182:	7f 90       	pop	r7
    5184:	6f 90       	pop	r6
    5186:	5f 90       	pop	r5
    5188:	4f 90       	pop	r4
    518a:	3f 90       	pop	r3
    518c:	2f 90       	pop	r2
    518e:	08 95       	ret

00005190 <_ZN4QEPU3runEv>:

void QEPU::set_programcounter(int newaddress){
	program_counter=newaddress-1;
}

void QEPU::run(){
    5190:	2f 92       	push	r2
    5192:	3f 92       	push	r3
    5194:	4f 92       	push	r4
    5196:	5f 92       	push	r5
    5198:	6f 92       	push	r6
    519a:	7f 92       	push	r7
    519c:	8f 92       	push	r8
    519e:	9f 92       	push	r9
    51a0:	af 92       	push	r10
    51a2:	bf 92       	push	r11
    51a4:	cf 92       	push	r12
    51a6:	df 92       	push	r13
    51a8:	ef 92       	push	r14
    51aa:	ff 92       	push	r15
    51ac:	0f 93       	push	r16
    51ae:	1f 93       	push	r17
    51b0:	cf 93       	push	r28
    51b2:	df 93       	push	r29
    51b4:	cd b7       	in	r28, 0x3d	; 61
    51b6:	de b7       	in	r29, 0x3e	; 62
    51b8:	c1 53       	subi	r28, 0x31	; 49
    51ba:	d2 40       	sbci	r29, 0x02	; 2
    51bc:	0f b6       	in	r0, 0x3f	; 63
    51be:	f8 94       	cli
    51c0:	de bf       	out	0x3e, r29	; 62
    51c2:	0f be       	out	0x3f, r0	; 63
    51c4:	cd bf       	out	0x3d, r28	; 61
    51c6:	c0 5e       	subi	r28, 0xE0	; 224
    51c8:	dd 4f       	sbci	r29, 0xFD	; 253
    51ca:	99 83       	std	Y+1, r25	; 0x01
    51cc:	88 83       	st	Y, r24
    51ce:	c0 52       	subi	r28, 0x20	; 32
    51d0:	d2 40       	sbci	r29, 0x02	; 2
	//TEMPORARY PRINTING FOR DEBUGGING PURPOSES
	serial.writestrln(" RUNNING "); serial.writestrln("");
    51d2:	01 96       	adiw	r24, 0x01	; 1
    51d4:	c0 5d       	subi	r28, 0xD0	; 208
    51d6:	dd 4f       	sbci	r29, 0xFD	; 253
    51d8:	99 83       	std	Y+1, r25	; 0x01
    51da:	88 83       	st	Y, r24
    51dc:	c0 53       	subi	r28, 0x30	; 48
    51de:	d2 40       	sbci	r29, 0x02	; 2
    51e0:	60 ed       	ldi	r22, 0xD0	; 208
    51e2:	70 e0       	ldi	r23, 0x00	; 0
    51e4:	0e 94 9a 2c 	call	0x5934	; 0x5934 <_ZN6Serial10writestrlnEPc>
    51e8:	65 ec       	ldi	r22, 0xC5	; 197
    51ea:	70 e0       	ldi	r23, 0x00	; 0
    51ec:	c0 5d       	subi	r28, 0xD0	; 208
    51ee:	dd 4f       	sbci	r29, 0xFD	; 253
    51f0:	88 81       	ld	r24, Y
    51f2:	99 81       	ldd	r25, Y+1	; 0x01
    51f4:	c0 53       	subi	r28, 0x30	; 48
    51f6:	d2 40       	sbci	r29, 0x02	; 2
    51f8:	0e 94 9a 2c 	call	0x5934	; 0x5934 <_ZN6Serial10writestrlnEPc>
	
	/*EEPROM FETCH*/
	#pragma region EEPROM_FETCH
	int * eeprom_mem=utils.str2intarr(eeprom.readall()); //TODO: READ ALL EEPROM
    51fc:	c0 5e       	subi	r28, 0xE0	; 224
    51fe:	dd 4f       	sbci	r29, 0xFD	; 253
    5200:	88 81       	ld	r24, Y
    5202:	99 81       	ldd	r25, Y+1	; 0x01
    5204:	c0 52       	subi	r28, 0x20	; 32
    5206:	d2 40       	sbci	r29, 0x02	; 2
    5208:	02 96       	adiw	r24, 0x02	; 2
    520a:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <_ZN6EEProm7readallEv>
    520e:	bc 01       	movw	r22, r24
    5210:	c0 5e       	subi	r28, 0xE0	; 224
    5212:	dd 4f       	sbci	r29, 0xFD	; 253
    5214:	88 81       	ld	r24, Y
    5216:	99 81       	ldd	r25, Y+1	; 0x01
    5218:	c0 52       	subi	r28, 0x20	; 32
    521a:	d2 40       	sbci	r29, 0x02	; 2
    521c:	8c 52       	subi	r24, 0x2C	; 44
    521e:	9f 4f       	sbci	r25, 0xFF	; 255
    5220:	0e 94 d1 2c 	call	0x59a2	; 0x59a2 <_ZN5Utils10str2intarrEPc>
    5224:	dc 01       	movw	r26, r24
    5226:	18 97       	sbiw	r26, 0x08	; 8
	int eeprom_mem_length=0;
    5228:	61 2c       	mov	r6, r1
    522a:	71 2c       	mov	r7, r1
    522c:	fd 01       	movw	r30, r26
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
    522e:	18 96       	adiw	r26, 0x08	; 8
    5230:	2d 91       	ld	r18, X+
    5232:	3c 91       	ld	r19, X
    5234:	19 97       	sbiw	r26, 0x09	; 9
    5236:	2f 3f       	cpi	r18, 0xFF	; 255
    5238:	31 05       	cpc	r19, r1
    523a:	b1 f4       	brne	.+44     	; 0x5268 <_ZN4QEPU3runEv+0xd8>
    523c:	16 96       	adiw	r26, 0x06	; 6
    523e:	2d 91       	ld	r18, X+
    5240:	3c 91       	ld	r19, X
    5242:	17 97       	sbiw	r26, 0x07	; 7
    5244:	2f 3f       	cpi	r18, 0xFF	; 255
    5246:	31 05       	cpc	r19, r1
    5248:	79 f4       	brne	.+30     	; 0x5268 <_ZN4QEPU3runEv+0xd8>
    524a:	24 81       	ldd	r18, Z+4	; 0x04
    524c:	35 81       	ldd	r19, Z+5	; 0x05
    524e:	2f 3f       	cpi	r18, 0xFF	; 255
    5250:	31 05       	cpc	r19, r1
    5252:	51 f4       	brne	.+20     	; 0x5268 <_ZN4QEPU3runEv+0xd8>
    5254:	22 81       	ldd	r18, Z+2	; 0x02
    5256:	33 81       	ldd	r19, Z+3	; 0x03
    5258:	2f 3f       	cpi	r18, 0xFF	; 255
    525a:	31 05       	cpc	r19, r1
    525c:	29 f4       	brne	.+10     	; 0x5268 <_ZN4QEPU3runEv+0xd8>
    525e:	20 81       	ld	r18, Z
    5260:	31 81       	ldd	r19, Z+1	; 0x01
    5262:	2f 3f       	cpi	r18, 0xFF	; 255
    5264:	31 05       	cpc	r19, r1
    5266:	29 f0       	breq	.+10     	; 0x5272 <_ZN4QEPU3runEv+0xe2>
    5268:	2f ef       	ldi	r18, 0xFF	; 255
    526a:	62 1a       	sub	r6, r18
    526c:	72 0a       	sbc	r7, r18
    526e:	12 96       	adiw	r26, 0x02	; 2
    5270:	dd cf       	rjmp	.-70     	; 0x522c <_ZN4QEPU3runEv+0x9c>
    5272:	93 01       	movw	r18, r6
    5274:	24 50       	subi	r18, 0x04	; 4
    5276:	31 09       	sbc	r19, r1
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
	for(int i=0;i<eeprom_mem_length;i++){
    5278:	12 16       	cp	r1, r18
    527a:	13 06       	cpc	r1, r19
    527c:	a4 f5       	brge	.+104    	; 0x52e6 <_ZN4QEPU3runEv+0x156>
    527e:	fc 01       	movw	r30, r24
    5280:	35 e0       	ldi	r19, 0x05	; 5
    5282:	63 1a       	sub	r6, r19
    5284:	71 08       	sbc	r7, r1
    5286:	20 e0       	ldi	r18, 0x00	; 0
    5288:	30 e0       	ldi	r19, 0x00	; 0
	int * eeprom_mem=utils.str2intarr(eeprom.readall()); //TODO: READ ALL EEPROM
	int eeprom_mem_length=0;
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
    528a:	80 e0       	ldi	r24, 0x00	; 0
    528c:	90 e0       	ldi	r25, 0x00	; 0
    528e:	40 e0       	ldi	r20, 0x00	; 0
    5290:	50 e0       	ldi	r21, 0x00	; 0
	for(int i=0;i<eeprom_mem_length;i++){
		if(eeprom_splittedx>=INSTR_WIDTH) {line++;eeprom_splittedx=0;} 
		eeprom_splitted[line][eeprom_splittedx++]=eeprom_mem[i];
    5292:	1d e0       	ldi	r17, 0x0D	; 13
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
	for(int i=0;i<eeprom_mem_length;i++){
		if(eeprom_splittedx>=INSTR_WIDTH) {line++;eeprom_splittedx=0;} 
    5294:	31 2c       	mov	r3, r1
    5296:	41 2c       	mov	r4, r1
    5298:	0b c0       	rjmp	.+22     	; 0x52b0 <_ZN4QEPU3runEv+0x120>
    529a:	6d 30       	cpi	r22, 0x0D	; 13
    529c:	71 05       	cpc	r23, r1
    529e:	2c f0       	brlt	.+10     	; 0x52aa <_ZN4QEPU3runEv+0x11a>
    52a0:	4f 5f       	subi	r20, 0xFF	; 255
    52a2:	5f 4f       	sbci	r21, 0xFF	; 255
    52a4:	83 2d       	mov	r24, r3
    52a6:	94 2d       	mov	r25, r4
    52a8:	01 c0       	rjmp	.+2      	; 0x52ac <_ZN4QEPU3runEv+0x11c>
		eeprom_splitted[line][eeprom_splittedx++]=eeprom_mem[i];
    52aa:	cb 01       	movw	r24, r22
    52ac:	2f 5f       	subi	r18, 0xFF	; 255
    52ae:	3f 4f       	sbci	r19, 0xFF	; 255
    52b0:	bc 01       	movw	r22, r24
    52b2:	6f 5f       	subi	r22, 0xFF	; 255
    52b4:	7f 4f       	sbci	r23, 0xFF	; 255
    52b6:	c1 90       	ld	r12, Z+
    52b8:	d1 90       	ld	r13, Z+
    52ba:	14 9f       	mul	r17, r20
    52bc:	d0 01       	movw	r26, r0
    52be:	15 9f       	mul	r17, r21
    52c0:	b0 0d       	add	r27, r0
    52c2:	11 24       	eor	r1, r1
    52c4:	8a 0f       	add	r24, r26
    52c6:	9b 1f       	adc	r25, r27
    52c8:	dc 01       	movw	r26, r24
    52ca:	aa 0f       	add	r26, r26
    52cc:	bb 1f       	adc	r27, r27
    52ce:	81 e0       	ldi	r24, 0x01	; 1
    52d0:	90 e0       	ldi	r25, 0x00	; 0
    52d2:	8c 0f       	add	r24, r28
    52d4:	9d 1f       	adc	r25, r29
    52d6:	a8 0f       	add	r26, r24
    52d8:	b9 1f       	adc	r27, r25
    52da:	cd 92       	st	X+, r12
    52dc:	dc 92       	st	X, r13
	int eeprom_mem_length=0;
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
	for(int i=0;i<eeprom_mem_length;i++){
    52de:	26 15       	cp	r18, r6
    52e0:	37 05       	cpc	r19, r7
    52e2:	d9 f6       	brne	.-74     	; 0x529a <_ZN4QEPU3runEv+0x10a>
    52e4:	02 c0       	rjmp	.+4      	; 0x52ea <_ZN4QEPU3runEv+0x15a>
	int * eeprom_mem=utils.str2intarr(eeprom.readall()); //TODO: READ ALL EEPROM
	int eeprom_mem_length=0;
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
    52e6:	40 e0       	ldi	r20, 0x00	; 0
    52e8:	50 e0       	ldi	r21, 0x00	; 0
	}
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	program_counter_maximum=line;
    52ea:	c0 5e       	subi	r28, 0xE0	; 224
    52ec:	dd 4f       	sbci	r29, 0xFD	; 253
    52ee:	e8 81       	ld	r30, Y
    52f0:	f9 81       	ldd	r31, Y+1	; 0x01
    52f2:	c0 52       	subi	r28, 0x20	; 32
    52f4:	d2 40       	sbci	r29, 0x02	; 2
    52f6:	e9 52       	subi	r30, 0x29	; 41
    52f8:	ff 4f       	sbci	r31, 0xFF	; 255
    52fa:	51 83       	std	Z+1, r21	; 0x01
    52fc:	40 83       	st	Z, r20
	for(program_counter=0;program_counter<program_counter_maximum;program_counter++){
    52fe:	c0 5e       	subi	r28, 0xE0	; 224
    5300:	dd 4f       	sbci	r29, 0xFD	; 253
    5302:	e8 81       	ld	r30, Y
    5304:	f9 81       	ldd	r31, Y+1	; 0x01
    5306:	c0 52       	subi	r28, 0x20	; 32
    5308:	d2 40       	sbci	r29, 0x02	; 2
    530a:	eb 52       	subi	r30, 0x2B	; 43
    530c:	ff 4f       	sbci	r31, 0xFF	; 255
    530e:	11 82       	std	Z+1, r1	; 0x01
    5310:	10 82       	st	Z, r1
    5312:	14 16       	cp	r1, r20
    5314:	15 06       	cpc	r1, r21
    5316:	0c f0       	brlt	.+2      	; 0x531a <_ZN4QEPU3runEv+0x18a>
    5318:	58 c1       	rjmp	.+688    	; 0x55ca <_ZN4QEPU3runEv+0x43a>
    531a:	80 e0       	ldi	r24, 0x00	; 0
    531c:	90 e0       	ldi	r25, 0x00	; 0
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]=""; char op3s[OP3_WIDTH]="";	
    531e:	3e 01       	movw	r6, r28
    5320:	e9 ee       	ldi	r30, 0xE9	; 233
    5322:	6e 1a       	sub	r6, r30
    5324:	ed ef       	ldi	r30, 0xFD	; 253
    5326:	7e 0a       	sbc	r7, r30
    5328:	1e 01       	movw	r2, r28
    532a:	f0 ef       	ldi	r31, 0xF0	; 240
    532c:	2f 1a       	sub	r2, r31
    532e:	fd ef       	ldi	r31, 0xFD	; 253
    5330:	3f 0a       	sbc	r3, r31
    5332:	2e 01       	movw	r4, r28
    5334:	27 ef       	ldi	r18, 0xF7	; 247
    5336:	42 1a       	sub	r4, r18
    5338:	2d ef       	ldi	r18, 0xFD	; 253
    533a:	52 0a       	sbc	r5, r18
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
			sprintf(op1s,"%s%x",op1s,eeprom_splitted[program_counter][k+FIXED_OP1_OFFSET]); // HEX CONCAT TO STRING (OP1 FETCH)
    533c:	c0 5e       	subi	r28, 0xE0	; 224
    533e:	dd 4f       	sbci	r29, 0xFD	; 253
    5340:	e8 81       	ld	r30, Y
    5342:	f9 81       	ldd	r31, Y+1	; 0x01
    5344:	c0 52       	subi	r28, 0x20	; 32
    5346:	d2 40       	sbci	r29, 0x02	; 2
    5348:	eb 52       	subi	r30, 0x2B	; 43
    534a:	ff 4f       	sbci	r31, 0xFF	; 255
    534c:	c2 5e       	subi	r28, 0xE2	; 226
    534e:	dd 4f       	sbci	r29, 0xFD	; 253
    5350:	f9 83       	std	Y+1, r31	; 0x01
    5352:	e8 83       	st	Y, r30
    5354:	ce 51       	subi	r28, 0x1E	; 30
    5356:	d2 40       	sbci	r29, 0x02	; 2
    5358:	0f 2e       	mov	r0, r31
    535a:	fa ed       	ldi	r31, 0xDA	; 218
    535c:	8f 2e       	mov	r8, r31
    535e:	f0 e0       	ldi	r31, 0x00	; 0
    5360:	9f 2e       	mov	r9, r31
    5362:	f0 2d       	mov	r31, r0
    5364:	c6 5d       	subi	r28, 0xD6	; 214
    5366:	dd 4f       	sbci	r29, 0xFD	; 253
    5368:	68 82       	st	Y, r6
    536a:	ca 52       	subi	r28, 0x2A	; 42
    536c:	d2 40       	sbci	r29, 0x02	; 2
    536e:	c5 5d       	subi	r28, 0xD5	; 213
    5370:	dd 4f       	sbci	r29, 0xFD	; 253
    5372:	78 82       	st	Y, r7
    5374:	cb 52       	subi	r28, 0x2B	; 43
    5376:	d2 40       	sbci	r29, 0x02	; 2
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
    5378:	c4 5d       	subi	r28, 0xD4	; 212
    537a:	dd 4f       	sbci	r29, 0xFD	; 253
    537c:	28 82       	st	Y, r2
    537e:	cc 52       	subi	r28, 0x2C	; 44
    5380:	d2 40       	sbci	r29, 0x02	; 2
    5382:	c3 5d       	subi	r28, 0xD3	; 211
    5384:	dd 4f       	sbci	r29, 0xFD	; 253
    5386:	38 82       	st	Y, r3
    5388:	cd 52       	subi	r28, 0x2D	; 45
    538a:	d2 40       	sbci	r29, 0x02	; 2
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
    538c:	c2 5d       	subi	r28, 0xD2	; 210
    538e:	dd 4f       	sbci	r29, 0xFD	; 253
    5390:	48 82       	st	Y, r4
    5392:	ce 52       	subi	r28, 0x2E	; 46
    5394:	d2 40       	sbci	r29, 0x02	; 2
    5396:	c1 5d       	subi	r28, 0xD1	; 209
    5398:	dd 4f       	sbci	r29, 0xFD	; 253
    539a:	58 82       	st	Y, r5
    539c:	cf 52       	subi	r28, 0x2F	; 47
    539e:	d2 40       	sbci	r29, 0x02	; 2
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	program_counter_maximum=line;
	for(program_counter=0;program_counter<program_counter_maximum;program_counter++){
    53a0:	c0 5e       	subi	r28, 0xE0	; 224
    53a2:	dd 4f       	sbci	r29, 0xFD	; 253
    53a4:	28 81       	ld	r18, Y
    53a6:	39 81       	ldd	r19, Y+1	; 0x01
    53a8:	c0 52       	subi	r28, 0x20	; 32
    53aa:	d2 40       	sbci	r29, 0x02	; 2
    53ac:	29 52       	subi	r18, 0x29	; 41
    53ae:	3f 4f       	sbci	r19, 0xFF	; 255
    53b0:	c8 5d       	subi	r28, 0xD8	; 216
    53b2:	dd 4f       	sbci	r29, 0xFD	; 253
    53b4:	39 83       	std	Y+1, r19	; 0x01
    53b6:	28 83       	st	Y, r18
    53b8:	c8 52       	subi	r28, 0x28	; 40
    53ba:	d2 40       	sbci	r29, 0x02	; 2
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]=""; char op3s[OP3_WIDTH]="";	
    53bc:	f3 01       	movw	r30, r6
    53be:	10 82       	st	Z, r1
    53c0:	11 82       	std	Z+1, r1	; 0x01
    53c2:	12 82       	std	Z+2, r1	; 0x02
    53c4:	13 82       	std	Z+3, r1	; 0x03
    53c6:	14 82       	std	Z+4, r1	; 0x04
    53c8:	15 82       	std	Z+5, r1	; 0x05
    53ca:	16 82       	std	Z+6, r1	; 0x06
    53cc:	f1 01       	movw	r30, r2
    53ce:	10 82       	st	Z, r1
    53d0:	11 82       	std	Z+1, r1	; 0x01
    53d2:	12 82       	std	Z+2, r1	; 0x02
    53d4:	13 82       	std	Z+3, r1	; 0x03
    53d6:	14 82       	std	Z+4, r1	; 0x04
    53d8:	15 82       	std	Z+5, r1	; 0x05
    53da:	16 82       	std	Z+6, r1	; 0x06
    53dc:	f2 01       	movw	r30, r4
    53de:	10 82       	st	Z, r1
    53e0:	11 82       	std	Z+1, r1	; 0x01
    53e2:	12 82       	std	Z+2, r1	; 0x02
    53e4:	13 82       	std	Z+3, r1	; 0x03
    53e6:	14 82       	std	Z+4, r1	; 0x04
    53e8:	15 82       	std	Z+5, r1	; 0x05
    53ea:	16 82       	std	Z+6, r1	; 0x06
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
    53ec:	2a e1       	ldi	r18, 0x1A	; 26
    53ee:	28 9f       	mul	r18, r24
    53f0:	f0 01       	movw	r30, r0
    53f2:	29 9f       	mul	r18, r25
    53f4:	f0 0d       	add	r31, r0
    53f6:	11 24       	eor	r1, r1
    53f8:	21 e0       	ldi	r18, 0x01	; 1
    53fa:	30 e0       	ldi	r19, 0x00	; 0
    53fc:	2c 0f       	add	r18, r28
    53fe:	3d 1f       	adc	r19, r29
    5400:	e2 0f       	add	r30, r18
    5402:	f3 1f       	adc	r31, r19
    5404:	80 81       	ld	r24, Z
    5406:	91 81       	ldd	r25, Z+1	; 0x01
    5408:	ce 5d       	subi	r28, 0xDE	; 222
    540a:	dd 4f       	sbci	r29, 0xFD	; 253
    540c:	99 83       	std	Y+1, r25	; 0x01
    540e:	88 83       	st	Y, r24
    5410:	c2 52       	subi	r28, 0x22	; 34
    5412:	d2 40       	sbci	r29, 0x02	; 2
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
    5414:	c1 2c       	mov	r12, r1
    5416:	d1 2c       	mov	r13, r1
			sprintf(op1s,"%s%x",op1s,eeprom_splitted[program_counter][k+FIXED_OP1_OFFSET]); // HEX CONCAT TO STRING (OP1 FETCH)
    5418:	1d e0       	ldi	r17, 0x0D	; 13
    541a:	c2 5e       	subi	r28, 0xE2	; 226
    541c:	dd 4f       	sbci	r29, 0xFD	; 253
    541e:	a8 80       	ld	r10, Y
    5420:	b9 80       	ldd	r11, Y+1	; 0x01
    5422:	ce 51       	subi	r28, 0x1E	; 30
    5424:	d2 40       	sbci	r29, 0x02	; 2
    5426:	9f ef       	ldi	r25, 0xFF	; 255
    5428:	c9 1a       	sub	r12, r25
    542a:	d9 0a       	sbc	r13, r25
    542c:	f5 01       	movw	r30, r10
    542e:	80 81       	ld	r24, Z
    5430:	91 81       	ldd	r25, Z+1	; 0x01
    5432:	18 9f       	mul	r17, r24
    5434:	f0 01       	movw	r30, r0
    5436:	19 9f       	mul	r17, r25
    5438:	f0 0d       	add	r31, r0
    543a:	11 24       	eor	r1, r1
    543c:	ec 0d       	add	r30, r12
    543e:	fd 1d       	adc	r31, r13
    5440:	ee 0f       	add	r30, r30
    5442:	ff 1f       	adc	r31, r31
    5444:	21 e0       	ldi	r18, 0x01	; 1
    5446:	30 e0       	ldi	r19, 0x00	; 0
    5448:	2c 0f       	add	r18, r28
    544a:	3d 1f       	adc	r19, r29
    544c:	e2 0f       	add	r30, r18
    544e:	f3 1f       	adc	r31, r19
    5450:	81 81       	ldd	r24, Z+1	; 0x01
    5452:	8f 93       	push	r24
    5454:	80 81       	ld	r24, Z
    5456:	8f 93       	push	r24
    5458:	7f 92       	push	r7
    545a:	6f 92       	push	r6
    545c:	9f 92       	push	r9
    545e:	8f 92       	push	r8
    5460:	7f 92       	push	r7
    5462:	6f 92       	push	r6
    5464:	0e 94 e1 34 	call	0x69c2	; 0x69c2 <sprintf>
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
    5468:	f5 01       	movw	r30, r10
    546a:	80 81       	ld	r24, Z
    546c:	91 81       	ldd	r25, Z+1	; 0x01
    546e:	18 9f       	mul	r17, r24
    5470:	f0 01       	movw	r30, r0
    5472:	19 9f       	mul	r17, r25
    5474:	f0 0d       	add	r31, r0
    5476:	11 24       	eor	r1, r1
    5478:	ec 0d       	add	r30, r12
    547a:	fd 1d       	adc	r31, r13
    547c:	34 96       	adiw	r30, 0x04	; 4
    547e:	ee 0f       	add	r30, r30
    5480:	ff 1f       	adc	r31, r31
    5482:	21 e0       	ldi	r18, 0x01	; 1
    5484:	30 e0       	ldi	r19, 0x00	; 0
    5486:	2c 0f       	add	r18, r28
    5488:	3d 1f       	adc	r19, r29
    548a:	e2 0f       	add	r30, r18
    548c:	f3 1f       	adc	r31, r19
    548e:	81 81       	ldd	r24, Z+1	; 0x01
    5490:	8f 93       	push	r24
    5492:	80 81       	ld	r24, Z
    5494:	8f 93       	push	r24
    5496:	3f 92       	push	r3
    5498:	2f 92       	push	r2
    549a:	9f 92       	push	r9
    549c:	8f 92       	push	r8
    549e:	3f 92       	push	r3
    54a0:	2f 92       	push	r2
    54a2:	0e 94 e1 34 	call	0x69c2	; 0x69c2 <sprintf>
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
    54a6:	f5 01       	movw	r30, r10
    54a8:	80 81       	ld	r24, Z
    54aa:	91 81       	ldd	r25, Z+1	; 0x01
    54ac:	18 9f       	mul	r17, r24
    54ae:	f0 01       	movw	r30, r0
    54b0:	19 9f       	mul	r17, r25
    54b2:	f0 0d       	add	r31, r0
    54b4:	11 24       	eor	r1, r1
    54b6:	ec 0d       	add	r30, r12
    54b8:	fd 1d       	adc	r31, r13
    54ba:	38 96       	adiw	r30, 0x08	; 8
    54bc:	ee 0f       	add	r30, r30
    54be:	ff 1f       	adc	r31, r31
    54c0:	21 e0       	ldi	r18, 0x01	; 1
    54c2:	30 e0       	ldi	r19, 0x00	; 0
    54c4:	2c 0f       	add	r18, r28
    54c6:	3d 1f       	adc	r19, r29
    54c8:	e2 0f       	add	r30, r18
    54ca:	f3 1f       	adc	r31, r19
    54cc:	81 81       	ldd	r24, Z+1	; 0x01
    54ce:	8f 93       	push	r24
    54d0:	80 81       	ld	r24, Z
    54d2:	8f 93       	push	r24
    54d4:	5f 92       	push	r5
    54d6:	4f 92       	push	r4
    54d8:	9f 92       	push	r9
    54da:	8f 92       	push	r8
    54dc:	5f 92       	push	r5
    54de:	4f 92       	push	r4
    54e0:	0e 94 e1 34 	call	0x69c2	; 0x69c2 <sprintf>
	program_counter_maximum=line;
	for(program_counter=0;program_counter<program_counter_maximum;program_counter++){
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]=""; char op3s[OP3_WIDTH]="";	
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
    54e4:	0f b6       	in	r0, 0x3f	; 63
    54e6:	f8 94       	cli
    54e8:	de bf       	out	0x3e, r29	; 62
    54ea:	0f be       	out	0x3f, r0	; 63
    54ec:	cd bf       	out	0x3d, r28	; 61
    54ee:	94 e0       	ldi	r25, 0x04	; 4
    54f0:	c9 16       	cp	r12, r25
    54f2:	d1 04       	cpc	r13, r1
    54f4:	09 f0       	breq	.+2      	; 0x54f8 <_ZN4QEPU3runEv+0x368>
    54f6:	97 cf       	rjmp	.-210    	; 0x5426 <_ZN4QEPU3runEv+0x296>
			sprintf(op1s,"%s%x",op1s,eeprom_splitted[program_counter][k+FIXED_OP1_OFFSET]); // HEX CONCAT TO STRING (OP1 FETCH)
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
		}
		execute(func,strtol(op1s,NULL,16),strtol(op2s,NULL,16),strtol(op3s,NULL,16)); //*INSTRUCTION DECODE AND EXECUTE*/
    54f8:	40 e1       	ldi	r20, 0x10	; 16
    54fa:	50 e0       	ldi	r21, 0x00	; 0
    54fc:	60 e0       	ldi	r22, 0x00	; 0
    54fe:	70 e0       	ldi	r23, 0x00	; 0
    5500:	c2 5d       	subi	r28, 0xD2	; 210
    5502:	dd 4f       	sbci	r29, 0xFD	; 253
    5504:	88 81       	ld	r24, Y
    5506:	ce 52       	subi	r28, 0x2E	; 46
    5508:	d2 40       	sbci	r29, 0x02	; 2
    550a:	c1 5d       	subi	r28, 0xD1	; 209
    550c:	dd 4f       	sbci	r29, 0xFD	; 253
    550e:	98 81       	ld	r25, Y
    5510:	cf 52       	subi	r28, 0x2F	; 47
    5512:	d2 40       	sbci	r29, 0x02	; 2
    5514:	0e 94 95 33 	call	0x672a	; 0x672a <strtol>
    5518:	5b 01       	movw	r10, r22
    551a:	6c 01       	movw	r12, r24
    551c:	40 e1       	ldi	r20, 0x10	; 16
    551e:	50 e0       	ldi	r21, 0x00	; 0
    5520:	60 e0       	ldi	r22, 0x00	; 0
    5522:	70 e0       	ldi	r23, 0x00	; 0
    5524:	c4 5d       	subi	r28, 0xD4	; 212
    5526:	dd 4f       	sbci	r29, 0xFD	; 253
    5528:	88 81       	ld	r24, Y
    552a:	cc 52       	subi	r28, 0x2C	; 44
    552c:	d2 40       	sbci	r29, 0x02	; 2
    552e:	c3 5d       	subi	r28, 0xD3	; 211
    5530:	dd 4f       	sbci	r29, 0xFD	; 253
    5532:	98 81       	ld	r25, Y
    5534:	cd 52       	subi	r28, 0x2D	; 45
    5536:	d2 40       	sbci	r29, 0x02	; 2
    5538:	0e 94 95 33 	call	0x672a	; 0x672a <strtol>
    553c:	cc 5d       	subi	r28, 0xDC	; 220
    553e:	dd 4f       	sbci	r29, 0xFD	; 253
    5540:	68 83       	st	Y, r22
    5542:	79 83       	std	Y+1, r23	; 0x01
    5544:	8a 83       	std	Y+2, r24	; 0x02
    5546:	9b 83       	std	Y+3, r25	; 0x03
    5548:	c4 52       	subi	r28, 0x24	; 36
    554a:	d2 40       	sbci	r29, 0x02	; 2
    554c:	40 e1       	ldi	r20, 0x10	; 16
    554e:	50 e0       	ldi	r21, 0x00	; 0
    5550:	60 e0       	ldi	r22, 0x00	; 0
    5552:	70 e0       	ldi	r23, 0x00	; 0
    5554:	c6 5d       	subi	r28, 0xD6	; 214
    5556:	dd 4f       	sbci	r29, 0xFD	; 253
    5558:	88 81       	ld	r24, Y
    555a:	ca 52       	subi	r28, 0x2A	; 42
    555c:	d2 40       	sbci	r29, 0x02	; 2
    555e:	c5 5d       	subi	r28, 0xD5	; 213
    5560:	dd 4f       	sbci	r29, 0xFD	; 253
    5562:	98 81       	ld	r25, Y
    5564:	cb 52       	subi	r28, 0x2B	; 43
    5566:	d2 40       	sbci	r29, 0x02	; 2
    5568:	0e 94 95 33 	call	0x672a	; 0x672a <strtol>
    556c:	9b 01       	movw	r18, r22
    556e:	ac 01       	movw	r20, r24
    5570:	cc 5d       	subi	r28, 0xDC	; 220
    5572:	dd 4f       	sbci	r29, 0xFD	; 253
    5574:	e8 80       	ld	r14, Y
    5576:	f9 80       	ldd	r15, Y+1	; 0x01
    5578:	0a 81       	ldd	r16, Y+2	; 0x02
    557a:	1b 81       	ldd	r17, Y+3	; 0x03
    557c:	c4 52       	subi	r28, 0x24	; 36
    557e:	d2 40       	sbci	r29, 0x02	; 2
    5580:	ce 5d       	subi	r28, 0xDE	; 222
    5582:	dd 4f       	sbci	r29, 0xFD	; 253
    5584:	68 81       	ld	r22, Y
    5586:	79 81       	ldd	r23, Y+1	; 0x01
    5588:	c2 52       	subi	r28, 0x22	; 34
    558a:	d2 40       	sbci	r29, 0x02	; 2
    558c:	c0 5e       	subi	r28, 0xE0	; 224
    558e:	dd 4f       	sbci	r29, 0xFD	; 253
    5590:	88 81       	ld	r24, Y
    5592:	99 81       	ldd	r25, Y+1	; 0x01
    5594:	c0 52       	subi	r28, 0x20	; 32
    5596:	d2 40       	sbci	r29, 0x02	; 2
    5598:	0e 94 07 21 	call	0x420e	; 0x420e <_ZN4QEPU7executeEilll>
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	program_counter_maximum=line;
	for(program_counter=0;program_counter<program_counter_maximum;program_counter++){
    559c:	c2 5e       	subi	r28, 0xE2	; 226
    559e:	dd 4f       	sbci	r29, 0xFD	; 253
    55a0:	e8 81       	ld	r30, Y
    55a2:	f9 81       	ldd	r31, Y+1	; 0x01
    55a4:	ce 51       	subi	r28, 0x1E	; 30
    55a6:	d2 40       	sbci	r29, 0x02	; 2
    55a8:	80 81       	ld	r24, Z
    55aa:	91 81       	ldd	r25, Z+1	; 0x01
    55ac:	01 96       	adiw	r24, 0x01	; 1
    55ae:	91 83       	std	Z+1, r25	; 0x01
    55b0:	80 83       	st	Z, r24
    55b2:	c8 5d       	subi	r28, 0xD8	; 216
    55b4:	dd 4f       	sbci	r29, 0xFD	; 253
    55b6:	e8 81       	ld	r30, Y
    55b8:	f9 81       	ldd	r31, Y+1	; 0x01
    55ba:	c8 52       	subi	r28, 0x28	; 40
    55bc:	d2 40       	sbci	r29, 0x02	; 2
    55be:	20 81       	ld	r18, Z
    55c0:	31 81       	ldd	r19, Z+1	; 0x01
    55c2:	82 17       	cp	r24, r18
    55c4:	93 07       	cpc	r25, r19
    55c6:	0c f4       	brge	.+2      	; 0x55ca <_ZN4QEPU3runEv+0x43a>
    55c8:	f9 ce       	rjmp	.-526    	; 0x53bc <_ZN4QEPU3runEv+0x22c>
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
			sprintf(op3s,"%s%x",op3s,eeprom_splitted[program_counter][k+FIXED_OP3_OFFSET]); // HEX CONCAT TO STRING (OP3 FETCH)
		}
		execute(func,strtol(op1s,NULL,16),strtol(op2s,NULL,16),strtol(op3s,NULL,16)); //*INSTRUCTION DECODE AND EXECUTE*/
	}
	dumpmem(QUBIT_COUNT);
    55ca:	60 e1       	ldi	r22, 0x10	; 16
    55cc:	70 e0       	ldi	r23, 0x00	; 0
    55ce:	c0 5e       	subi	r28, 0xE0	; 224
    55d0:	dd 4f       	sbci	r29, 0xFD	; 253
    55d2:	88 81       	ld	r24, Y
    55d4:	99 81       	ldd	r25, Y+1	; 0x01
    55d6:	c0 52       	subi	r28, 0x20	; 32
    55d8:	d2 40       	sbci	r29, 0x02	; 2
    55da:	0e 94 68 20 	call	0x40d0	; 0x40d0 <_ZN4QEPU7dumpmemEi>
	serial.writestr("The execution of the program has finished");
    55de:	6f ed       	ldi	r22, 0xDF	; 223
    55e0:	70 e0       	ldi	r23, 0x00	; 0
    55e2:	c0 5d       	subi	r28, 0xD0	; 208
    55e4:	dd 4f       	sbci	r29, 0xFD	; 253
    55e6:	88 81       	ld	r24, Y
    55e8:	99 81       	ldd	r25, Y+1	; 0x01
    55ea:	c0 53       	subi	r28, 0x30	; 48
    55ec:	d2 40       	sbci	r29, 0x02	; 2
    55ee:	0e 94 85 2c 	call	0x590a	; 0x590a <_ZN6Serial8writestrEPc>
	#pragma endregion
}
    55f2:	cf 5c       	subi	r28, 0xCF	; 207
    55f4:	dd 4f       	sbci	r29, 0xFD	; 253
    55f6:	0f b6       	in	r0, 0x3f	; 63
    55f8:	f8 94       	cli
    55fa:	de bf       	out	0x3e, r29	; 62
    55fc:	0f be       	out	0x3f, r0	; 63
    55fe:	cd bf       	out	0x3d, r28	; 61
    5600:	df 91       	pop	r29
    5602:	cf 91       	pop	r28
    5604:	1f 91       	pop	r17
    5606:	0f 91       	pop	r16
    5608:	ff 90       	pop	r15
    560a:	ef 90       	pop	r14
    560c:	df 90       	pop	r13
    560e:	cf 90       	pop	r12
    5610:	bf 90       	pop	r11
    5612:	af 90       	pop	r10
    5614:	9f 90       	pop	r9
    5616:	8f 90       	pop	r8
    5618:	7f 90       	pop	r7
    561a:	6f 90       	pop	r6
    561c:	5f 90       	pop	r5
    561e:	4f 90       	pop	r4
    5620:	3f 90       	pop	r3
    5622:	2f 90       	pop	r2
    5624:	08 95       	ret

00005626 <main>:
#include "qepu.h"
int main(void){
    5626:	cf 93       	push	r28
    5628:	df 93       	push	r29
    562a:	cd b7       	in	r28, 0x3d	; 61
    562c:	de b7       	in	r29, 0x3e	; 62
    562e:	c9 5d       	subi	r28, 0xD9	; 217
    5630:	d1 09       	sbc	r29, r1
    5632:	0f b6       	in	r0, 0x3f	; 63
    5634:	f8 94       	cli
    5636:	de bf       	out	0x3e, r29	; 62
    5638:	0f be       	out	0x3f, r0	; 63
    563a:	cd bf       	out	0x3d, r28	; 61
	
	sram.push(3);
	sram.dumpmem(5);
	*/

	QEPU qepu;
    563c:	ce 01       	movw	r24, r28
    563e:	01 96       	adiw	r24, 0x01	; 1
    5640:	0e 94 29 1e 	call	0x3c52	; 0x3c52 <_ZN4QEPUC1Ev>
	qepu.run();	
    5644:	ce 01       	movw	r24, r28
    5646:	01 96       	adiw	r24, 0x01	; 1
    5648:	0e 94 c8 28 	call	0x5190	; 0x5190 <_ZN4QEPU3runEv>
    564c:	ff cf       	rjmp	.-2      	; 0x564c <main+0x26>

0000564e <_ZN4SRAMC1Ev>:
#include "sram.h"

SRAM::SRAM(){
    564e:	cf 93       	push	r28
    5650:	df 93       	push	r29
    5652:	ec 01       	movw	r28, r24
    5654:	03 96       	adiw	r24, 0x03	; 3
    5656:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <_ZN6SerialC1Ev>
	CTRLMEM_DIR=OUTPUT;
    565a:	8f ef       	ldi	r24, 0xFF	; 255
    565c:	84 bb       	out	0x14, r24	; 20
	stack_head_offset=MEMORY_HEAD_PERMISSION_OFFSET+HEAD_PROGRAMMER_OFFSET;
    565e:	84 e1       	ldi	r24, 0x14	; 20
    5660:	90 e0       	ldi	r25, 0x00	; 0
    5662:	99 83       	std	Y+1, r25	; 0x01
    5664:	88 83       	st	Y, r24
	stack_tail_offset=ADDRESS_MAX-MEMORY_TAIL_PERMISSION_OFFSET-TAIL_PROGRAMMER_OFFSET;
    5666:	88 e3       	ldi	r24, 0x38	; 56
    5668:	90 e0       	ldi	r25, 0x00	; 0
    566a:	9d 83       	std	Y+5, r25	; 0x05
    566c:	8c 83       	std	Y+4, r24	; 0x04
}
    566e:	df 91       	pop	r29
    5670:	cf 91       	pop	r28
    5672:	08 95       	ret

00005674 <_ZN4SRAM11set_addressEi>:

void SRAM::set_address(int address){
	MEM_ADDRESS_DIR=OUTPUT;
    5674:	2f ef       	ldi	r18, 0xFF	; 255
    5676:	2a bb       	out	0x1a, r18	; 26
	if(address+stack_head_offset>stack_tail_offset) MEM_ADDRESS=stack_tail_offset;
    5678:	fc 01       	movw	r30, r24
    567a:	20 81       	ld	r18, Z
    567c:	31 81       	ldd	r19, Z+1	; 0x01
    567e:	84 81       	ldd	r24, Z+4	; 0x04
    5680:	95 81       	ldd	r25, Z+5	; 0x05
    5682:	a9 01       	movw	r20, r18
    5684:	46 0f       	add	r20, r22
    5686:	57 1f       	adc	r21, r23
    5688:	84 17       	cp	r24, r20
    568a:	95 07       	cpc	r25, r21
    568c:	14 f4       	brge	.+4      	; 0x5692 <_ZN4SRAM11set_addressEi+0x1e>
    568e:	8b bb       	out	0x1b, r24	; 27
    5690:	08 95       	ret
	else MEM_ADDRESS=address+stack_head_offset;
    5692:	26 0f       	add	r18, r22
    5694:	2b bb       	out	0x1b, r18	; 27
    5696:	08 95       	ret

00005698 <_ZN4SRAM10setctrlpinEii>:
void SRAM::bus_write(int8_t data){
	BUS_DIR=OUTPUT;
	BUS_OUT=data;
}
void SRAM::setctrlpin(int pin,int state){
	CTRLMEM&=~(1<<pin); // CLEAR PIN
    5698:	75 b3       	in	r23, 0x15	; 21
    569a:	21 e0       	ldi	r18, 0x01	; 1
    569c:	30 e0       	ldi	r19, 0x00	; 0
    569e:	c9 01       	movw	r24, r18
    56a0:	06 2e       	mov	r0, r22
    56a2:	02 c0       	rjmp	.+4      	; 0x56a8 <_ZN4SRAM10setctrlpinEii+0x10>
    56a4:	88 0f       	add	r24, r24
    56a6:	99 1f       	adc	r25, r25
    56a8:	0a 94       	dec	r0
    56aa:	e2 f7       	brpl	.-8      	; 0x56a4 <_ZN4SRAM10setctrlpinEii+0xc>
    56ac:	80 95       	com	r24
    56ae:	87 23       	and	r24, r23
    56b0:	85 bb       	out	0x15, r24	; 21
	CTRLMEM|=(state<<pin); // SET PIN
    56b2:	85 b3       	in	r24, 0x15	; 21
    56b4:	02 c0       	rjmp	.+4      	; 0x56ba <_ZN4SRAM10setctrlpinEii+0x22>
    56b6:	44 0f       	add	r20, r20
    56b8:	55 1f       	adc	r21, r21
    56ba:	6a 95       	dec	r22
    56bc:	e2 f7       	brpl	.-8      	; 0x56b6 <_ZN4SRAM10setctrlpinEii+0x1e>
    56be:	48 2b       	or	r20, r24
    56c0:	45 bb       	out	0x15, r20	; 21
    56c2:	08 95       	ret

000056c4 <_ZN4SRAM17memory_managementEv>:
		sprintf(mem_debug_str,"Address: %d (Off: %d) Data: %d",i,i+stack_head_offset,read(i));
		serial.writestrln(mem_debug_str);
	}
}

void SRAM::memory_management(){
    56c4:	fc 01       	movw	r30, r24
	if(stack_head_offset>stack_tail_offset || stack_head_offset<0 || stack_head_offset>ADDRESS_MAX || stack_tail_offset<0 || stack_tail_offset>ADDRESS_MAX){
    56c6:	80 81       	ld	r24, Z
    56c8:	91 81       	ldd	r25, Z+1	; 0x01
    56ca:	24 81       	ldd	r18, Z+4	; 0x04
    56cc:	35 81       	ldd	r19, Z+5	; 0x05
    56ce:	28 17       	cp	r18, r24
    56d0:	39 07       	cpc	r19, r25
    56d2:	34 f0       	brlt	.+12     	; 0x56e0 <_ZN4SRAM17memory_managementEv+0x1c>
    56d4:	81 30       	cpi	r24, 0x01	; 1
    56d6:	91 40       	sbci	r25, 0x01	; 1
    56d8:	18 f4       	brcc	.+6      	; 0x56e0 <_ZN4SRAM17memory_managementEv+0x1c>
    56da:	21 30       	cpi	r18, 0x01	; 1
    56dc:	31 40       	sbci	r19, 0x01	; 1
    56de:	40 f0       	brcs	.+16     	; 0x56f0 <_ZN4SRAM17memory_managementEv+0x2c>
		//RESTORE STACK POINTERS TO DEFAULT
		stack_head_offset=MEMORY_HEAD_PERMISSION_OFFSET+HEAD_PROGRAMMER_OFFSET;
    56e0:	84 e1       	ldi	r24, 0x14	; 20
    56e2:	90 e0       	ldi	r25, 0x00	; 0
    56e4:	91 83       	std	Z+1, r25	; 0x01
    56e6:	80 83       	st	Z, r24
		stack_tail_offset=ADDRESS_MAX-MEMORY_TAIL_PERMISSION_OFFSET-TAIL_PROGRAMMER_OFFSET;
    56e8:	88 e3       	ldi	r24, 0x38	; 56
    56ea:	90 e0       	ldi	r25, 0x00	; 0
    56ec:	95 83       	std	Z+5, r25	; 0x05
    56ee:	84 83       	std	Z+4, r24	; 0x04
    56f0:	08 95       	ret

000056f2 <_ZN4SRAM4readEa>:
	MEM_ADDRESS_DIR=OUTPUT;
	if(address+stack_head_offset>stack_tail_offset) MEM_ADDRESS=stack_tail_offset;
	else MEM_ADDRESS=address+stack_head_offset;
}

int8_t SRAM::read(int8_t address){
    56f2:	1f 93       	push	r17
    56f4:	cf 93       	push	r28
    56f6:	df 93       	push	r29
    56f8:	ec 01       	movw	r28, r24
    56fa:	16 2f       	mov	r17, r22
	memory_management();
    56fc:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <_ZN4SRAM17memory_managementEv>
	set_address(address);
    5700:	61 2f       	mov	r22, r17
    5702:	77 27       	eor	r23, r23
    5704:	67 fd       	sbrc	r22, 7
    5706:	70 95       	com	r23
    5708:	ce 01       	movw	r24, r28
    570a:	0e 94 3a 2b 	call	0x5674	; 0x5674 <_ZN4SRAM11set_addressEi>
	BUS_DIR=INPUT;
    570e:	17 ba       	out	0x17, r1	; 23
	setctrlpin(MRE,HIGH);
    5710:	41 e0       	ldi	r20, 0x01	; 1
    5712:	50 e0       	ldi	r21, 0x00	; 0
    5714:	66 e0       	ldi	r22, 0x06	; 6
    5716:	70 e0       	ldi	r23, 0x00	; 0
    5718:	ce 01       	movw	r24, r28
    571a:	0e 94 4c 2b 	call	0x5698	; 0x5698 <_ZN4SRAM10setctrlpinEii>
	int bus_data=BUS_IN;
    571e:	16 b3       	in	r17, 0x16	; 22
	setctrlpin(MRE,LOW);
    5720:	40 e0       	ldi	r20, 0x00	; 0
    5722:	50 e0       	ldi	r21, 0x00	; 0
    5724:	66 e0       	ldi	r22, 0x06	; 6
    5726:	70 e0       	ldi	r23, 0x00	; 0
    5728:	ce 01       	movw	r24, r28
    572a:	0e 94 4c 2b 	call	0x5698	; 0x5698 <_ZN4SRAM10setctrlpinEii>
	BUS_DIR=OUTPUT;
    572e:	8f ef       	ldi	r24, 0xFF	; 255
    5730:	87 bb       	out	0x17, r24	; 23
	MEM_ADDRESS=LOW;
    5732:	1b ba       	out	0x1b, r1	; 27
	return bus_data;
}
    5734:	81 2f       	mov	r24, r17
    5736:	df 91       	pop	r29
    5738:	cf 91       	pop	r28
    573a:	1f 91       	pop	r17
    573c:	08 95       	ret

0000573e <_ZN4SRAM9read_sramEv>:
	}else{
		stack_head_offset--;
		write(0,register_data);
	}
}
int* SRAM::read_sram(){
    573e:	cf 92       	push	r12
    5740:	df 92       	push	r13
    5742:	ef 92       	push	r14
    5744:	ff 92       	push	r15
    5746:	0f 93       	push	r16
    5748:	1f 93       	push	r17
    574a:	cf 93       	push	r28
    574c:	df 93       	push	r29
    574e:	cd b7       	in	r28, 0x3d	; 61
    5750:	de b7       	in	r29, 0x3e	; 62
    5752:	d2 50       	subi	r29, 0x02	; 2
    5754:	0f b6       	in	r0, 0x3f	; 63
    5756:	f8 94       	cli
    5758:	de bf       	out	0x3e, r29	; 62
    575a:	0f be       	out	0x3f, r0	; 63
    575c:	cd bf       	out	0x3d, r28	; 61
    575e:	7c 01       	movw	r14, r24
	int ram_memory[ADDRESS_MAX];
	for(int i=stack_head_offset;i<stack_tail_offset;i++) ram_memory[i]=read(i);
    5760:	fc 01       	movw	r30, r24
    5762:	00 81       	ld	r16, Z
    5764:	11 81       	ldd	r17, Z+1	; 0x01
    5766:	84 81       	ldd	r24, Z+4	; 0x04
    5768:	95 81       	ldd	r25, Z+5	; 0x05
    576a:	08 17       	cp	r16, r24
    576c:	19 07       	cpc	r17, r25
    576e:	e4 f4       	brge	.+56     	; 0x57a8 <_ZN4SRAM9read_sramEv+0x6a>
    5770:	68 01       	movw	r12, r16
    5772:	cc 0c       	add	r12, r12
    5774:	dd 1c       	adc	r13, r13
    5776:	81 e0       	ldi	r24, 0x01	; 1
    5778:	90 e0       	ldi	r25, 0x00	; 0
    577a:	8c 0f       	add	r24, r28
    577c:	9d 1f       	adc	r25, r29
    577e:	c8 0e       	add	r12, r24
    5780:	d9 1e       	adc	r13, r25
    5782:	60 2f       	mov	r22, r16
    5784:	c7 01       	movw	r24, r14
    5786:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <_ZN4SRAM4readEa>
    578a:	99 27       	eor	r25, r25
    578c:	87 fd       	sbrc	r24, 7
    578e:	90 95       	com	r25
    5790:	f6 01       	movw	r30, r12
    5792:	81 93       	st	Z+, r24
    5794:	91 93       	st	Z+, r25
    5796:	6f 01       	movw	r12, r30
    5798:	0f 5f       	subi	r16, 0xFF	; 255
    579a:	1f 4f       	sbci	r17, 0xFF	; 255
    579c:	f7 01       	movw	r30, r14
    579e:	84 81       	ldd	r24, Z+4	; 0x04
    57a0:	95 81       	ldd	r25, Z+5	; 0x05
    57a2:	08 17       	cp	r16, r24
    57a4:	19 07       	cpc	r17, r25
    57a6:	6c f3       	brlt	.-38     	; 0x5782 <_ZN4SRAM9read_sramEv+0x44>
	return ram_memory;
}
    57a8:	ce 01       	movw	r24, r28
    57aa:	01 96       	adiw	r24, 0x01	; 1
    57ac:	de 5f       	subi	r29, 0xFE	; 254
    57ae:	0f b6       	in	r0, 0x3f	; 63
    57b0:	f8 94       	cli
    57b2:	de bf       	out	0x3e, r29	; 62
    57b4:	0f be       	out	0x3f, r0	; 63
    57b6:	cd bf       	out	0x3d, r28	; 61
    57b8:	df 91       	pop	r29
    57ba:	cf 91       	pop	r28
    57bc:	1f 91       	pop	r17
    57be:	0f 91       	pop	r16
    57c0:	ff 90       	pop	r15
    57c2:	ef 90       	pop	r14
    57c4:	df 90       	pop	r13
    57c6:	cf 90       	pop	r12
    57c8:	08 95       	ret

000057ca <_ZN4SRAM5writeEaa>:
	setctrlpin(MRE,LOW);
	BUS_DIR=OUTPUT;
	MEM_ADDRESS=LOW;
	return bus_data;
}
void SRAM::write(int8_t address,int8_t data){
    57ca:	0f 93       	push	r16
    57cc:	1f 93       	push	r17
    57ce:	cf 93       	push	r28
    57d0:	df 93       	push	r29
    57d2:	ec 01       	movw	r28, r24
    57d4:	16 2f       	mov	r17, r22
    57d6:	04 2f       	mov	r16, r20
	memory_management();
    57d8:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <_ZN4SRAM17memory_managementEv>
	set_address(address);
    57dc:	61 2f       	mov	r22, r17
    57de:	77 27       	eor	r23, r23
    57e0:	67 fd       	sbrc	r22, 7
    57e2:	70 95       	com	r23
    57e4:	ce 01       	movw	r24, r28
    57e6:	0e 94 3a 2b 	call	0x5674	; 0x5674 <_ZN4SRAM11set_addressEi>
	setctrlpin(MWR,LOW);
	MEM_ADDRESS=LOW;
	bus_write(LOW);
}
void SRAM::bus_write(int8_t data){
	BUS_DIR=OUTPUT;
    57ea:	1f ef       	ldi	r17, 0xFF	; 255
    57ec:	17 bb       	out	0x17, r17	; 23
	BUS_OUT=data;
    57ee:	08 bb       	out	0x18, r16	; 24
}
void SRAM::write(int8_t address,int8_t data){
	memory_management();
	set_address(address);
	bus_write(data);
	setctrlpin(MWR,HIGH);
    57f0:	41 e0       	ldi	r20, 0x01	; 1
    57f2:	50 e0       	ldi	r21, 0x00	; 0
    57f4:	65 e0       	ldi	r22, 0x05	; 5
    57f6:	70 e0       	ldi	r23, 0x00	; 0
    57f8:	ce 01       	movw	r24, r28
    57fa:	0e 94 4c 2b 	call	0x5698	; 0x5698 <_ZN4SRAM10setctrlpinEii>
	setctrlpin(MWR,LOW);
    57fe:	40 e0       	ldi	r20, 0x00	; 0
    5800:	50 e0       	ldi	r21, 0x00	; 0
    5802:	65 e0       	ldi	r22, 0x05	; 5
    5804:	70 e0       	ldi	r23, 0x00	; 0
    5806:	ce 01       	movw	r24, r28
    5808:	0e 94 4c 2b 	call	0x5698	; 0x5698 <_ZN4SRAM10setctrlpinEii>
	MEM_ADDRESS=LOW;
    580c:	1b ba       	out	0x1b, r1	; 27
	bus_write(LOW);
}
void SRAM::bus_write(int8_t data){
	BUS_DIR=OUTPUT;
    580e:	17 bb       	out	0x17, r17	; 23
	BUS_OUT=data;
    5810:	18 ba       	out	0x18, r1	; 24
	bus_write(data);
	setctrlpin(MWR,HIGH);
	setctrlpin(MWR,LOW);
	MEM_ADDRESS=LOW;
	bus_write(LOW);
}
    5812:	df 91       	pop	r29
    5814:	cf 91       	pop	r28
    5816:	1f 91       	pop	r17
    5818:	0f 91       	pop	r16
    581a:	08 95       	ret

0000581c <_ZN4SRAM3popEv>:
}
void SRAM::setctrlpin(int pin,int state){
	CTRLMEM&=~(1<<pin); // CLEAR PIN
	CTRLMEM|=(state<<pin); // SET PIN
}
int SRAM::pop(){
    581c:	cf 93       	push	r28
    581e:	df 93       	push	r29
    5820:	ec 01       	movw	r28, r24
	memory_management();
    5822:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <_ZN4SRAM17memory_managementEv>
	int popped_number=read(0);
    5826:	60 e0       	ldi	r22, 0x00	; 0
    5828:	ce 01       	movw	r24, r28
    582a:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <_ZN4SRAM4readEa>
	stack_head_offset++;
    582e:	28 81       	ld	r18, Y
    5830:	39 81       	ldd	r19, Y+1	; 0x01
    5832:	2f 5f       	subi	r18, 0xFF	; 255
    5834:	3f 4f       	sbci	r19, 0xFF	; 255
    5836:	39 83       	std	Y+1, r19	; 0x01
    5838:	28 83       	st	Y, r18
	if(stack_head_offset>stack_tail_offset) return 0;
    583a:	4c 81       	ldd	r20, Y+4	; 0x04
    583c:	5d 81       	ldd	r21, Y+5	; 0x05
    583e:	42 17       	cp	r20, r18
    5840:	53 07       	cpc	r21, r19
    5842:	24 f0       	brlt	.+8      	; 0x584c <_ZN4SRAM3popEv+0x30>
	CTRLMEM&=~(1<<pin); // CLEAR PIN
	CTRLMEM|=(state<<pin); // SET PIN
}
int SRAM::pop(){
	memory_management();
	int popped_number=read(0);
    5844:	99 27       	eor	r25, r25
    5846:	87 fd       	sbrc	r24, 7
    5848:	90 95       	com	r25
	stack_head_offset++;
	if(stack_head_offset>stack_tail_offset) return 0;
	else return popped_number;
    584a:	02 c0       	rjmp	.+4      	; 0x5850 <_ZN4SRAM3popEv+0x34>
}
int SRAM::pop(){
	memory_management();
	int popped_number=read(0);
	stack_head_offset++;
	if(stack_head_offset>stack_tail_offset) return 0;
    584c:	80 e0       	ldi	r24, 0x00	; 0
    584e:	90 e0       	ldi	r25, 0x00	; 0
	else return popped_number;
}
    5850:	df 91       	pop	r29
    5852:	cf 91       	pop	r28
    5854:	08 95       	ret

00005856 <_ZN4SRAM4pushEi>:
void SRAM::push(int register_data){
    5856:	ef 92       	push	r14
    5858:	ff 92       	push	r15
    585a:	0f 93       	push	r16
    585c:	1f 93       	push	r17
    585e:	cf 93       	push	r28
    5860:	df 93       	push	r29
    5862:	8c 01       	movw	r16, r24
    5864:	f6 2e       	mov	r15, r22
    5866:	e7 2e       	mov	r14, r23
	memory_management();
    5868:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <_ZN4SRAM17memory_managementEv>
	if(stack_head_offset<=MEMORY_HEAD_PERMISSION_OFFSET){ //PUSH EVERY OTHER ELEMENT FORWARD ****
    586c:	f8 01       	movw	r30, r16
    586e:	80 81       	ld	r24, Z
    5870:	91 81       	ldd	r25, Z+1	; 0x01
    5872:	18 16       	cp	r1, r24
    5874:	19 06       	cpc	r1, r25
    5876:	6c f1       	brlt	.+90     	; 0x58d2 <_ZN4SRAM4pushEi+0x7c>
		int *ram_memory=utils.arrint_shiftright(read_sram(),register_data,stack_tail_offset-stack_head_offset);
    5878:	c4 81       	ldd	r28, Z+4	; 0x04
    587a:	d5 81       	ldd	r29, Z+5	; 0x05
    587c:	c8 1b       	sub	r28, r24
    587e:	d9 0b       	sbc	r29, r25
    5880:	c8 01       	movw	r24, r16
    5882:	0e 94 9f 2b 	call	0x573e	; 0x573e <_ZN4SRAM9read_sramEv>
    5886:	9e 01       	movw	r18, r28
    5888:	4f 2d       	mov	r20, r15
    588a:	5e 2d       	mov	r21, r14
    588c:	bc 01       	movw	r22, r24
    588e:	c8 01       	movw	r24, r16
    5890:	02 96       	adiw	r24, 0x02	; 2
    5892:	0e 94 91 2d 	call	0x5b22	; 0x5b22 <_ZN5Utils17arrint_shiftrightEPiii>
		for(int i=stack_head_offset;i<stack_tail_offset;i++) write(i,ram_memory[i]);
    5896:	f8 01       	movw	r30, r16
    5898:	c0 81       	ld	r28, Z
    589a:	d1 81       	ldd	r29, Z+1	; 0x01
    589c:	24 81       	ldd	r18, Z+4	; 0x04
    589e:	35 81       	ldd	r19, Z+5	; 0x05
    58a0:	c2 17       	cp	r28, r18
    58a2:	d3 07       	cpc	r29, r19
    58a4:	fc f4       	brge	.+62     	; 0x58e4 <_ZN4SRAM4pushEi+0x8e>
    58a6:	7e 01       	movw	r14, r28
    58a8:	ee 0c       	add	r14, r14
    58aa:	ff 1c       	adc	r15, r15
    58ac:	e8 0e       	add	r14, r24
    58ae:	f9 1e       	adc	r15, r25
    58b0:	f7 01       	movw	r30, r14
    58b2:	40 81       	ld	r20, Z
    58b4:	f2 e0       	ldi	r31, 0x02	; 2
    58b6:	ef 0e       	add	r14, r31
    58b8:	f1 1c       	adc	r15, r1
    58ba:	6c 2f       	mov	r22, r28
    58bc:	c8 01       	movw	r24, r16
    58be:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <_ZN4SRAM5writeEaa>
    58c2:	21 96       	adiw	r28, 0x01	; 1
    58c4:	f8 01       	movw	r30, r16
    58c6:	84 81       	ldd	r24, Z+4	; 0x04
    58c8:	95 81       	ldd	r25, Z+5	; 0x05
    58ca:	c8 17       	cp	r28, r24
    58cc:	d9 07       	cpc	r29, r25
    58ce:	84 f3       	brlt	.-32     	; 0x58b0 <_ZN4SRAM4pushEi+0x5a>
    58d0:	09 c0       	rjmp	.+18     	; 0x58e4 <_ZN4SRAM4pushEi+0x8e>
	}else{
		stack_head_offset--;
    58d2:	01 97       	sbiw	r24, 0x01	; 1
    58d4:	f8 01       	movw	r30, r16
    58d6:	91 83       	std	Z+1, r25	; 0x01
    58d8:	80 83       	st	Z, r24
		write(0,register_data);
    58da:	4f 2d       	mov	r20, r15
    58dc:	60 e0       	ldi	r22, 0x00	; 0
    58de:	c8 01       	movw	r24, r16
    58e0:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <_ZN4SRAM5writeEaa>
	}
}
    58e4:	df 91       	pop	r29
    58e6:	cf 91       	pop	r28
    58e8:	1f 91       	pop	r17
    58ea:	0f 91       	pop	r16
    58ec:	ff 90       	pop	r15
    58ee:	ef 90       	pop	r14
    58f0:	08 95       	ret

000058f2 <_ZN6SerialC1Ev>:
    58f2:	83 e3       	ldi	r24, 0x33	; 51
    58f4:	89 b9       	out	0x09, r24	; 9
    58f6:	10 bc       	out	0x20, r1	; 32
    58f8:	86 e8       	ldi	r24, 0x86	; 134
    58fa:	80 bd       	out	0x20, r24	; 32
    58fc:	88 e1       	ldi	r24, 0x18	; 24
    58fe:	8a b9       	out	0x0a, r24	; 10
    5900:	08 95       	ret

00005902 <_ZN6Serial5writeEc>:
    5902:	5d 9b       	sbis	0x0b, 5	; 11
    5904:	fe cf       	rjmp	.-4      	; 0x5902 <_ZN6Serial5writeEc>
    5906:	6c b9       	out	0x0c, r22	; 12
    5908:	08 95       	ret

0000590a <_ZN6Serial8writestrEPc>:
    590a:	0f 93       	push	r16
    590c:	1f 93       	push	r17
    590e:	cf 93       	push	r28
    5910:	df 93       	push	r29
    5912:	8c 01       	movw	r16, r24
    5914:	eb 01       	movw	r28, r22
    5916:	68 81       	ld	r22, Y
    5918:	66 23       	and	r22, r22
    591a:	39 f0       	breq	.+14     	; 0x592a <_ZN6Serial8writestrEPc+0x20>
    591c:	21 96       	adiw	r28, 0x01	; 1
    591e:	c8 01       	movw	r24, r16
    5920:	0e 94 81 2c 	call	0x5902	; 0x5902 <_ZN6Serial5writeEc>
    5924:	69 91       	ld	r22, Y+
    5926:	61 11       	cpse	r22, r1
    5928:	fa cf       	rjmp	.-12     	; 0x591e <_ZN6Serial8writestrEPc+0x14>
    592a:	df 91       	pop	r29
    592c:	cf 91       	pop	r28
    592e:	1f 91       	pop	r17
    5930:	0f 91       	pop	r16
    5932:	08 95       	ret

00005934 <_ZN6Serial10writestrlnEPc>:
    5934:	cf 93       	push	r28
    5936:	df 93       	push	r29
    5938:	ec 01       	movw	r28, r24
    593a:	0e 94 85 2c 	call	0x590a	; 0x590a <_ZN6Serial8writestrEPc>
    593e:	6d e0       	ldi	r22, 0x0D	; 13
    5940:	ce 01       	movw	r24, r28
    5942:	0e 94 81 2c 	call	0x5902	; 0x5902 <_ZN6Serial5writeEc>
    5946:	df 91       	pop	r29
    5948:	cf 91       	pop	r28
    594a:	08 95       	ret

0000594c <_ZN5Utils10int2binstrEii>:
#include "utils.h"

char * Utils::int2binstr(int num,int strlength){
    594c:	0f 93       	push	r16
    594e:	1f 93       	push	r17
    5950:	cf 93       	push	r28
    5952:	df 93       	push	r29
    5954:	06 2f       	mov	r16, r22
    5956:	17 2f       	mov	r17, r23
    5958:	ea 01       	movw	r28, r20
	char * str = (char*)malloc(strlength + 1);
    595a:	ca 01       	movw	r24, r20
    595c:	01 96       	adiw	r24, 0x01	; 1
    595e:	0e 94 10 32 	call	0x6420	; 0x6420 <malloc>
	if(!str) return NULL;
    5962:	00 97       	sbiw	r24, 0x00	; 0
    5964:	b9 f0       	breq	.+46     	; 0x5994 <_ZN5Utils10int2binstrEii+0x48>
	str[strlength] = 0;
    5966:	fc 01       	movw	r30, r24
    5968:	ec 0f       	add	r30, r28
    596a:	fd 1f       	adc	r31, r29
    596c:	10 82       	st	Z, r1

	// type punning because signed shift is implementation-defined
	unsigned u = *(unsigned *)&num;
    596e:	20 2f       	mov	r18, r16
    5970:	31 2f       	mov	r19, r17
	for(; strlength--; u >>= 1)
    5972:	be 01       	movw	r22, r28
    5974:	61 50       	subi	r22, 0x01	; 1
    5976:	71 09       	sbc	r23, r1
    5978:	cd 2b       	or	r28, r29
    597a:	71 f0       	breq	.+28     	; 0x5998 <_ZN5Utils10int2binstrEii+0x4c>
	str[strlength] = u & 1 ? '1' : '0';
    597c:	20 ff       	sbrs	r18, 0
    597e:	02 c0       	rjmp	.+4      	; 0x5984 <_ZN5Utils10int2binstrEii+0x38>
    5980:	41 e3       	ldi	r20, 0x31	; 49
    5982:	01 c0       	rjmp	.+2      	; 0x5986 <_ZN5Utils10int2binstrEii+0x3a>
    5984:	40 e3       	ldi	r20, 0x30	; 48
    5986:	42 93       	st	-Z, r20
	if(!str) return NULL;
	str[strlength] = 0;

	// type punning because signed shift is implementation-defined
	unsigned u = *(unsigned *)&num;
	for(; strlength--; u >>= 1)
    5988:	36 95       	lsr	r19
    598a:	27 95       	ror	r18
    598c:	61 50       	subi	r22, 0x01	; 1
    598e:	71 09       	sbc	r23, r1
    5990:	a8 f7       	brcc	.-22     	; 0x597c <_ZN5Utils10int2binstrEii+0x30>
    5992:	02 c0       	rjmp	.+4      	; 0x5998 <_ZN5Utils10int2binstrEii+0x4c>
#include "utils.h"

char * Utils::int2binstr(int num,int strlength){
	char * str = (char*)malloc(strlength + 1);
	if(!str) return NULL;
    5994:	80 e0       	ldi	r24, 0x00	; 0
    5996:	90 e0       	ldi	r25, 0x00	; 0
	unsigned u = *(unsigned *)&num;
	for(; strlength--; u >>= 1)
	str[strlength] = u & 1 ? '1' : '0';

	return str;
}
    5998:	df 91       	pop	r29
    599a:	cf 91       	pop	r28
    599c:	1f 91       	pop	r17
    599e:	0f 91       	pop	r16
    59a0:	08 95       	ret

000059a2 <_ZN5Utils10str2intarrEPc>:
char* Utils::char2str(char c){
	char*str=(char*)malloc(sizeof(char));
	sprintf(str,"%d",c);
	return str;
}
int*  Utils::str2intarr(char* c){
    59a2:	cf 92       	push	r12
    59a4:	df 92       	push	r13
    59a6:	ef 92       	push	r14
    59a8:	ff 92       	push	r15
    59aa:	0f 93       	push	r16
    59ac:	1f 93       	push	r17
    59ae:	cf 93       	push	r28
    59b0:	df 93       	push	r29
    59b2:	d6 2f       	mov	r29, r22
    59b4:	c7 2f       	mov	r28, r23
    59b6:	e6 2f       	mov	r30, r22
    59b8:	f7 2f       	mov	r31, r23
	int c_length=0;
    59ba:	80 e0       	ldi	r24, 0x00	; 0
    59bc:	90 e0       	ldi	r25, 0x00	; 0
	for(int i=0;true;i++) if(c[i]==0xFF && c[i-1]==0xFF && c[i-2]==0xFF && c[i-3]==0xFF && c[i-4]==0xFF) break; else c_length++; c_length-=4;
    59be:	21 91       	ld	r18, Z+
    59c0:	2f 3f       	cpi	r18, 0xFF	; 255
    59c2:	89 f4       	brne	.+34     	; 0x59e6 <_ZN5Utils10str2intarrEPc+0x44>
    59c4:	df 01       	movw	r26, r30
    59c6:	12 97       	sbiw	r26, 0x02	; 2
    59c8:	4c 91       	ld	r20, X
    59ca:	4f 3f       	cpi	r20, 0xFF	; 255
    59cc:	61 f4       	brne	.+24     	; 0x59e6 <_ZN5Utils10str2intarrEPc+0x44>
    59ce:	11 97       	sbiw	r26, 0x01	; 1
    59d0:	4c 91       	ld	r20, X
    59d2:	4f 3f       	cpi	r20, 0xFF	; 255
    59d4:	41 f4       	brne	.+16     	; 0x59e6 <_ZN5Utils10str2intarrEPc+0x44>
    59d6:	11 97       	sbiw	r26, 0x01	; 1
    59d8:	4c 91       	ld	r20, X
    59da:	4f 3f       	cpi	r20, 0xFF	; 255
    59dc:	21 f4       	brne	.+8      	; 0x59e6 <_ZN5Utils10str2intarrEPc+0x44>
    59de:	11 97       	sbiw	r26, 0x01	; 1
    59e0:	2c 91       	ld	r18, X
    59e2:	2f 3f       	cpi	r18, 0xFF	; 255
    59e4:	11 f0       	breq	.+4      	; 0x59ea <_ZN5Utils10str2intarrEPc+0x48>
    59e6:	01 96       	adiw	r24, 0x01	; 1
    59e8:	ea cf       	rjmp	.-44     	; 0x59be <_ZN5Utils10str2intarrEPc+0x1c>
    59ea:	8c 01       	movw	r16, r24
    59ec:	04 50       	subi	r16, 0x04	; 4
    59ee:	11 09       	sbc	r17, r1
	
	int *intarr=(int*)malloc(sizeof(int)*(c_length+5));
    59f0:	6c 01       	movw	r12, r24
    59f2:	2f ef       	ldi	r18, 0xFF	; 255
    59f4:	c2 1a       	sub	r12, r18
    59f6:	d2 0a       	sbc	r13, r18
    59f8:	76 01       	movw	r14, r12
    59fa:	ee 0c       	add	r14, r14
    59fc:	ff 1c       	adc	r15, r15
    59fe:	c7 01       	movw	r24, r14
    5a00:	0e 94 10 32 	call	0x6420	; 0x6420 <malloc>
	for(int i=0;i<c_length;i++) intarr[i]=(int)c[i];
    5a04:	10 16       	cp	r1, r16
    5a06:	11 06       	cpc	r1, r17
    5a08:	74 f4       	brge	.+28     	; 0x5a26 <_ZN5Utils10str2intarrEPc+0x84>
    5a0a:	dc 01       	movw	r26, r24
    5a0c:	ed 2f       	mov	r30, r29
    5a0e:	fc 2f       	mov	r31, r28
    5a10:	20 e0       	ldi	r18, 0x00	; 0
    5a12:	30 e0       	ldi	r19, 0x00	; 0
    5a14:	41 91       	ld	r20, Z+
    5a16:	50 e0       	ldi	r21, 0x00	; 0
    5a18:	4d 93       	st	X+, r20
    5a1a:	5d 93       	st	X+, r21
    5a1c:	2f 5f       	subi	r18, 0xFF	; 255
    5a1e:	3f 4f       	sbci	r19, 0xFF	; 255
    5a20:	20 17       	cp	r18, r16
    5a22:	31 07       	cpc	r19, r17
    5a24:	bc f3       	brlt	.-18     	; 0x5a14 <_ZN5Utils10str2intarrEPc+0x72>
	for(int i=c_length;i<c_length+5;i++) intarr[i]=0xFF;
    5a26:	0c 15       	cp	r16, r12
    5a28:	1d 05       	cpc	r17, r13
    5a2a:	7c f4       	brge	.+30     	; 0x5a4a <_ZN5Utils10str2intarrEPc+0xa8>
    5a2c:	f7 01       	movw	r30, r14
    5a2e:	3a 97       	sbiw	r30, 0x0a	; 10
    5a30:	e8 0f       	add	r30, r24
    5a32:	f9 1f       	adc	r31, r25
    5a34:	25 e0       	ldi	r18, 0x05	; 5
    5a36:	30 e0       	ldi	r19, 0x00	; 0
    5a38:	4f ef       	ldi	r20, 0xFF	; 255
    5a3a:	50 e0       	ldi	r21, 0x00	; 0
    5a3c:	41 93       	st	Z+, r20
    5a3e:	51 93       	st	Z+, r21
    5a40:	21 50       	subi	r18, 0x01	; 1
    5a42:	31 09       	sbc	r19, r1
    5a44:	21 15       	cp	r18, r1
    5a46:	31 05       	cpc	r19, r1
    5a48:	c9 f7       	brne	.-14     	; 0x5a3c <_ZN5Utils10str2intarrEPc+0x9a>
	return intarr;
}
    5a4a:	df 91       	pop	r29
    5a4c:	cf 91       	pop	r28
    5a4e:	1f 91       	pop	r17
    5a50:	0f 91       	pop	r16
    5a52:	ff 90       	pop	r15
    5a54:	ef 90       	pop	r14
    5a56:	df 90       	pop	r13
    5a58:	cf 90       	pop	r12
    5a5a:	08 95       	ret

00005a5c <_ZN5Utils7int2strEi>:
		dec/=10;
		++counter;
	}
	return counter;
}
char* Utils::int2str(int dec){
    5a5c:	0f 93       	push	r16
    5a5e:	1f 93       	push	r17
    5a60:	cf 93       	push	r28
    5a62:	df 93       	push	r29
    5a64:	cd b7       	in	r28, 0x3d	; 61
    5a66:	de b7       	in	r29, 0x3e	; 62
    5a68:	2a 97       	sbiw	r28, 0x0a	; 10
    5a6a:	0f b6       	in	r0, 0x3f	; 63
    5a6c:	f8 94       	cli
    5a6e:	de bf       	out	0x3e, r29	; 62
    5a70:	0f be       	out	0x3f, r0	; 63
    5a72:	cd bf       	out	0x3d, r28	; 61
	char str[10];
	sprintf(str,"%d",dec);
    5a74:	7f 93       	push	r23
    5a76:	6f 93       	push	r22
    5a78:	8c e9       	ldi	r24, 0x9C	; 156
    5a7a:	90 e0       	ldi	r25, 0x00	; 0
    5a7c:	9f 93       	push	r25
    5a7e:	8f 93       	push	r24
    5a80:	8e 01       	movw	r16, r28
    5a82:	0f 5f       	subi	r16, 0xFF	; 255
    5a84:	1f 4f       	sbci	r17, 0xFF	; 255
    5a86:	1f 93       	push	r17
    5a88:	0f 93       	push	r16
    5a8a:	0e 94 e1 34 	call	0x69c2	; 0x69c2 <sprintf>
	return str;
    5a8e:	0f 90       	pop	r0
    5a90:	0f 90       	pop	r0
    5a92:	0f 90       	pop	r0
    5a94:	0f 90       	pop	r0
    5a96:	0f 90       	pop	r0
    5a98:	0f 90       	pop	r0
}
    5a9a:	c8 01       	movw	r24, r16
    5a9c:	2a 96       	adiw	r28, 0x0a	; 10
    5a9e:	0f b6       	in	r0, 0x3f	; 63
    5aa0:	f8 94       	cli
    5aa2:	de bf       	out	0x3e, r29	; 62
    5aa4:	0f be       	out	0x3f, r0	; 63
    5aa6:	cd bf       	out	0x3d, r28	; 61
    5aa8:	df 91       	pop	r29
    5aaa:	cf 91       	pop	r28
    5aac:	1f 91       	pop	r17
    5aae:	0f 91       	pop	r16
    5ab0:	08 95       	ret

00005ab2 <_ZN5Utils5delayEi>:
	sprintf(str2,"%d",n2);
	strcat(str1,str2);
	return atoi(str1);
}
int Utils::delay(int ms){
	while(ms--) _delay_ms(1);
    5ab2:	61 15       	cp	r22, r1
    5ab4:	71 05       	cpc	r23, r1
    5ab6:	51 f0       	breq	.+20     	; 0x5acc <_ZN5Utils5delayEi+0x1a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    5ab8:	86 e6       	ldi	r24, 0x66	; 102
    5aba:	9e e0       	ldi	r25, 0x0E	; 14
    5abc:	01 97       	sbiw	r24, 0x01	; 1
    5abe:	f1 f7       	brne	.-4      	; 0x5abc <_ZN5Utils5delayEi+0xa>
    5ac0:	00 00       	nop
    5ac2:	61 50       	subi	r22, 0x01	; 1
    5ac4:	71 09       	sbc	r23, r1
    5ac6:	61 15       	cp	r22, r1
    5ac8:	71 05       	cpc	r23, r1
    5aca:	b1 f7       	brne	.-20     	; 0x5ab8 <_ZN5Utils5delayEi+0x6>
}
    5acc:	08 95       	ret

00005ace <_ZN5Utils10custom_powEfi>:
float Utils::custom_pow(float base,int exp){
    5ace:	cf 92       	push	r12
    5ad0:	df 92       	push	r13
    5ad2:	ef 92       	push	r14
    5ad4:	ff 92       	push	r15
    5ad6:	0f 93       	push	r16
    5ad8:	1f 93       	push	r17
    5ada:	cf 93       	push	r28
    5adc:	df 93       	push	r29
    5ade:	6a 01       	movw	r12, r20
    5ae0:	7b 01       	movw	r14, r22
    5ae2:	89 01       	movw	r16, r18
	float result=1; for(int i=0;i<exp;i++) result*=base;
    5ae4:	12 16       	cp	r1, r18
    5ae6:	13 06       	cpc	r1, r19
    5ae8:	7c f4       	brge	.+30     	; 0x5b08 <_ZN5Utils10custom_powEfi+0x3a>
    5aea:	c0 e0       	ldi	r28, 0x00	; 0
    5aec:	d0 e0       	ldi	r29, 0x00	; 0
    5aee:	60 e0       	ldi	r22, 0x00	; 0
    5af0:	70 e0       	ldi	r23, 0x00	; 0
    5af2:	80 e8       	ldi	r24, 0x80	; 128
    5af4:	9f e3       	ldi	r25, 0x3F	; 63
    5af6:	a7 01       	movw	r20, r14
    5af8:	96 01       	movw	r18, r12
    5afa:	0e 94 0e 31 	call	0x621c	; 0x621c <__mulsf3>
    5afe:	21 96       	adiw	r28, 0x01	; 1
    5b00:	c0 17       	cp	r28, r16
    5b02:	d1 07       	cpc	r29, r17
    5b04:	c1 f7       	brne	.-16     	; 0x5af6 <_ZN5Utils10custom_powEfi+0x28>
    5b06:	04 c0       	rjmp	.+8      	; 0x5b10 <_ZN5Utils10custom_powEfi+0x42>
    5b08:	60 e0       	ldi	r22, 0x00	; 0
    5b0a:	70 e0       	ldi	r23, 0x00	; 0
    5b0c:	80 e8       	ldi	r24, 0x80	; 128
    5b0e:	9f e3       	ldi	r25, 0x3F	; 63
	return result;
}
    5b10:	df 91       	pop	r29
    5b12:	cf 91       	pop	r28
    5b14:	1f 91       	pop	r17
    5b16:	0f 91       	pop	r16
    5b18:	ff 90       	pop	r15
    5b1a:	ef 90       	pop	r14
    5b1c:	df 90       	pop	r13
    5b1e:	cf 90       	pop	r12
    5b20:	08 95       	ret

00005b22 <_ZN5Utils17arrint_shiftrightEPiii>:
int * Utils::arrint_shiftright(int * arr,int newelem,int array_length){
    5b22:	cf 92       	push	r12
    5b24:	df 92       	push	r13
    5b26:	ef 92       	push	r14
    5b28:	ff 92       	push	r15
    5b2a:	0f 93       	push	r16
    5b2c:	1f 93       	push	r17
    5b2e:	cf 93       	push	r28
    5b30:	df 93       	push	r29
    5b32:	7b 01       	movw	r14, r22
    5b34:	6a 01       	movw	r12, r20
    5b36:	e9 01       	movw	r28, r18
	int * new_array=(int*)malloc(sizeof(int)*array_length);
    5b38:	89 01       	movw	r16, r18
    5b3a:	00 0f       	add	r16, r16
    5b3c:	11 1f       	adc	r17, r17
    5b3e:	c8 01       	movw	r24, r16
    5b40:	0e 94 10 32 	call	0x6420	; 0x6420 <malloc>
	int new_array_index=0;
	new_array[0]=newelem;
    5b44:	fc 01       	movw	r30, r24
    5b46:	d1 82       	std	Z+1, r13	; 0x01
    5b48:	c0 82       	st	Z, r12
	for(int i=0;i<array_length;i++) new_array[++new_array_index]=arr[i];
    5b4a:	1c 16       	cp	r1, r28
    5b4c:	1d 06       	cpc	r1, r29
    5b4e:	6c f4       	brge	.+26     	; 0x5b6a <_ZN5Utils17arrint_shiftrightEPiii+0x48>
    5b50:	f7 01       	movw	r30, r14
    5b52:	dc 01       	movw	r26, r24
    5b54:	12 96       	adiw	r26, 0x02	; 2
    5b56:	b7 01       	movw	r22, r14
    5b58:	60 0f       	add	r22, r16
    5b5a:	71 1f       	adc	r23, r17
    5b5c:	21 91       	ld	r18, Z+
    5b5e:	31 91       	ld	r19, Z+
    5b60:	2d 93       	st	X+, r18
    5b62:	3d 93       	st	X+, r19
    5b64:	e6 17       	cp	r30, r22
    5b66:	f7 07       	cpc	r31, r23
    5b68:	c9 f7       	brne	.-14     	; 0x5b5c <_ZN5Utils17arrint_shiftrightEPiii+0x3a>
	return new_array;
    5b6a:	df 91       	pop	r29
    5b6c:	cf 91       	pop	r28
    5b6e:	1f 91       	pop	r17
    5b70:	0f 91       	pop	r16
    5b72:	ff 90       	pop	r15
    5b74:	ef 90       	pop	r14
    5b76:	df 90       	pop	r13
    5b78:	cf 90       	pop	r12
    5b7a:	08 95       	ret

00005b7c <acos>:
    5b7c:	9f 93       	push	r25
    5b7e:	9f 77       	andi	r25, 0x7F	; 127
    5b80:	a6 d1       	rcall	.+844    	; 0x5ece <__fp_arccos>
    5b82:	0f 90       	pop	r0
    5b84:	00 20       	and	r0, r0
    5b86:	3a f4       	brpl	.+14     	; 0x5b96 <acos+0x1a>
    5b88:	90 58       	subi	r25, 0x80	; 128
    5b8a:	a2 ea       	ldi	r26, 0xA2	; 162
    5b8c:	2a ed       	ldi	r18, 0xDA	; 218
    5b8e:	3f e0       	ldi	r19, 0x0F	; 15
    5b90:	49 e4       	ldi	r20, 0x49	; 73
    5b92:	50 e4       	ldi	r21, 0x40	; 64
    5b94:	13 d0       	rcall	.+38     	; 0x5bbc <__addsf3x>
    5b96:	3e c2       	rjmp	.+1148   	; 0x6014 <__fp_round>

00005b98 <__subsf3>:
    5b98:	50 58       	subi	r21, 0x80	; 128

00005b9a <__addsf3>:
    5b9a:	bb 27       	eor	r27, r27
    5b9c:	aa 27       	eor	r26, r26
    5b9e:	0e d0       	rcall	.+28     	; 0x5bbc <__addsf3x>
    5ba0:	39 c2       	rjmp	.+1138   	; 0x6014 <__fp_round>
    5ba2:	02 d2       	rcall	.+1028   	; 0x5fa8 <__fp_pscA>
    5ba4:	30 f0       	brcs	.+12     	; 0x5bb2 <__addsf3+0x18>
    5ba6:	07 d2       	rcall	.+1038   	; 0x5fb6 <__fp_pscB>
    5ba8:	20 f0       	brcs	.+8      	; 0x5bb2 <__addsf3+0x18>
    5baa:	31 f4       	brne	.+12     	; 0x5bb8 <__addsf3+0x1e>
    5bac:	9f 3f       	cpi	r25, 0xFF	; 255
    5bae:	11 f4       	brne	.+4      	; 0x5bb4 <__addsf3+0x1a>
    5bb0:	1e f4       	brtc	.+6      	; 0x5bb8 <__addsf3+0x1e>
    5bb2:	d2 c1       	rjmp	.+932    	; 0x5f58 <__fp_nan>
    5bb4:	0e f4       	brtc	.+2      	; 0x5bb8 <__addsf3+0x1e>
    5bb6:	e0 95       	com	r30
    5bb8:	e7 fb       	bst	r30, 7
    5bba:	c8 c1       	rjmp	.+912    	; 0x5f4c <__fp_inf>

00005bbc <__addsf3x>:
    5bbc:	e9 2f       	mov	r30, r25
    5bbe:	4c d2       	rcall	.+1176   	; 0x6058 <__fp_split3>
    5bc0:	80 f3       	brcs	.-32     	; 0x5ba2 <__addsf3+0x8>
    5bc2:	ba 17       	cp	r27, r26
    5bc4:	62 07       	cpc	r22, r18
    5bc6:	73 07       	cpc	r23, r19
    5bc8:	84 07       	cpc	r24, r20
    5bca:	95 07       	cpc	r25, r21
    5bcc:	18 f0       	brcs	.+6      	; 0x5bd4 <__addsf3x+0x18>
    5bce:	71 f4       	brne	.+28     	; 0x5bec <__addsf3x+0x30>
    5bd0:	9e f5       	brtc	.+102    	; 0x5c38 <__addsf3x+0x7c>
    5bd2:	64 c2       	rjmp	.+1224   	; 0x609c <__fp_zero>
    5bd4:	0e f4       	brtc	.+2      	; 0x5bd8 <__addsf3x+0x1c>
    5bd6:	e0 95       	com	r30
    5bd8:	0b 2e       	mov	r0, r27
    5bda:	ba 2f       	mov	r27, r26
    5bdc:	a0 2d       	mov	r26, r0
    5bde:	0b 01       	movw	r0, r22
    5be0:	b9 01       	movw	r22, r18
    5be2:	90 01       	movw	r18, r0
    5be4:	0c 01       	movw	r0, r24
    5be6:	ca 01       	movw	r24, r20
    5be8:	a0 01       	movw	r20, r0
    5bea:	11 24       	eor	r1, r1
    5bec:	ff 27       	eor	r31, r31
    5bee:	59 1b       	sub	r21, r25
    5bf0:	99 f0       	breq	.+38     	; 0x5c18 <__addsf3x+0x5c>
    5bf2:	59 3f       	cpi	r21, 0xF9	; 249
    5bf4:	50 f4       	brcc	.+20     	; 0x5c0a <__addsf3x+0x4e>
    5bf6:	50 3e       	cpi	r21, 0xE0	; 224
    5bf8:	68 f1       	brcs	.+90     	; 0x5c54 <__addsf3x+0x98>
    5bfa:	1a 16       	cp	r1, r26
    5bfc:	f0 40       	sbci	r31, 0x00	; 0
    5bfe:	a2 2f       	mov	r26, r18
    5c00:	23 2f       	mov	r18, r19
    5c02:	34 2f       	mov	r19, r20
    5c04:	44 27       	eor	r20, r20
    5c06:	58 5f       	subi	r21, 0xF8	; 248
    5c08:	f3 cf       	rjmp	.-26     	; 0x5bf0 <__addsf3x+0x34>
    5c0a:	46 95       	lsr	r20
    5c0c:	37 95       	ror	r19
    5c0e:	27 95       	ror	r18
    5c10:	a7 95       	ror	r26
    5c12:	f0 40       	sbci	r31, 0x00	; 0
    5c14:	53 95       	inc	r21
    5c16:	c9 f7       	brne	.-14     	; 0x5c0a <__addsf3x+0x4e>
    5c18:	7e f4       	brtc	.+30     	; 0x5c38 <__addsf3x+0x7c>
    5c1a:	1f 16       	cp	r1, r31
    5c1c:	ba 0b       	sbc	r27, r26
    5c1e:	62 0b       	sbc	r22, r18
    5c20:	73 0b       	sbc	r23, r19
    5c22:	84 0b       	sbc	r24, r20
    5c24:	ba f0       	brmi	.+46     	; 0x5c54 <__addsf3x+0x98>
    5c26:	91 50       	subi	r25, 0x01	; 1
    5c28:	a1 f0       	breq	.+40     	; 0x5c52 <__addsf3x+0x96>
    5c2a:	ff 0f       	add	r31, r31
    5c2c:	bb 1f       	adc	r27, r27
    5c2e:	66 1f       	adc	r22, r22
    5c30:	77 1f       	adc	r23, r23
    5c32:	88 1f       	adc	r24, r24
    5c34:	c2 f7       	brpl	.-16     	; 0x5c26 <__addsf3x+0x6a>
    5c36:	0e c0       	rjmp	.+28     	; 0x5c54 <__addsf3x+0x98>
    5c38:	ba 0f       	add	r27, r26
    5c3a:	62 1f       	adc	r22, r18
    5c3c:	73 1f       	adc	r23, r19
    5c3e:	84 1f       	adc	r24, r20
    5c40:	48 f4       	brcc	.+18     	; 0x5c54 <__addsf3x+0x98>
    5c42:	87 95       	ror	r24
    5c44:	77 95       	ror	r23
    5c46:	67 95       	ror	r22
    5c48:	b7 95       	ror	r27
    5c4a:	f7 95       	ror	r31
    5c4c:	9e 3f       	cpi	r25, 0xFE	; 254
    5c4e:	08 f0       	brcs	.+2      	; 0x5c52 <__addsf3x+0x96>
    5c50:	b3 cf       	rjmp	.-154    	; 0x5bb8 <__addsf3+0x1e>
    5c52:	93 95       	inc	r25
    5c54:	88 0f       	add	r24, r24
    5c56:	08 f0       	brcs	.+2      	; 0x5c5a <__addsf3x+0x9e>
    5c58:	99 27       	eor	r25, r25
    5c5a:	ee 0f       	add	r30, r30
    5c5c:	97 95       	ror	r25
    5c5e:	87 95       	ror	r24
    5c60:	08 95       	ret

00005c62 <atan>:
    5c62:	df 93       	push	r29
    5c64:	dd 27       	eor	r29, r29
    5c66:	b9 2f       	mov	r27, r25
    5c68:	bf 77       	andi	r27, 0x7F	; 127
    5c6a:	40 e8       	ldi	r20, 0x80	; 128
    5c6c:	5f e3       	ldi	r21, 0x3F	; 63
    5c6e:	16 16       	cp	r1, r22
    5c70:	17 06       	cpc	r1, r23
    5c72:	48 07       	cpc	r20, r24
    5c74:	5b 07       	cpc	r21, r27
    5c76:	10 f4       	brcc	.+4      	; 0x5c7c <atan+0x1a>
    5c78:	d9 2f       	mov	r29, r25
    5c7a:	1b d2       	rcall	.+1078   	; 0x60b2 <inverse>
    5c7c:	9f 93       	push	r25
    5c7e:	8f 93       	push	r24
    5c80:	7f 93       	push	r23
    5c82:	6f 93       	push	r22
    5c84:	76 d3       	rcall	.+1772   	; 0x6372 <square>
    5c86:	e0 eb       	ldi	r30, 0xB0	; 176
    5c88:	f0 e0       	ldi	r31, 0x00	; 0
    5c8a:	69 d1       	rcall	.+722    	; 0x5f5e <__fp_powser>
    5c8c:	c3 d1       	rcall	.+902    	; 0x6014 <__fp_round>
    5c8e:	2f 91       	pop	r18
    5c90:	3f 91       	pop	r19
    5c92:	4f 91       	pop	r20
    5c94:	5f 91       	pop	r21
    5c96:	ce d2       	rcall	.+1436   	; 0x6234 <__mulsf3x>
    5c98:	dd 23       	and	r29, r29
    5c9a:	49 f0       	breq	.+18     	; 0x5cae <atan+0x4c>
    5c9c:	90 58       	subi	r25, 0x80	; 128
    5c9e:	a2 ea       	ldi	r26, 0xA2	; 162
    5ca0:	2a ed       	ldi	r18, 0xDA	; 218
    5ca2:	3f e0       	ldi	r19, 0x0F	; 15
    5ca4:	49 ec       	ldi	r20, 0xC9	; 201
    5ca6:	5f e3       	ldi	r21, 0x3F	; 63
    5ca8:	d0 78       	andi	r29, 0x80	; 128
    5caa:	5d 27       	eor	r21, r29
    5cac:	87 df       	rcall	.-242    	; 0x5bbc <__addsf3x>
    5cae:	df 91       	pop	r29
    5cb0:	b1 c1       	rjmp	.+866    	; 0x6014 <__fp_round>

00005cb2 <__cmpsf2>:
    5cb2:	28 d1       	rcall	.+592    	; 0x5f04 <__fp_cmp>
    5cb4:	08 f4       	brcc	.+2      	; 0x5cb8 <__cmpsf2+0x6>
    5cb6:	81 e0       	ldi	r24, 0x01	; 1
    5cb8:	08 95       	ret

00005cba <cos>:
    5cba:	85 d1       	rcall	.+778    	; 0x5fc6 <__fp_rempio2>
    5cbc:	e3 95       	inc	r30
    5cbe:	bb c1       	rjmp	.+886    	; 0x6036 <__fp_sinus>

00005cc0 <__divsf3>:
    5cc0:	0c d0       	rcall	.+24     	; 0x5cda <__divsf3x>
    5cc2:	a8 c1       	rjmp	.+848    	; 0x6014 <__fp_round>
    5cc4:	78 d1       	rcall	.+752    	; 0x5fb6 <__fp_pscB>
    5cc6:	40 f0       	brcs	.+16     	; 0x5cd8 <__divsf3+0x18>
    5cc8:	6f d1       	rcall	.+734    	; 0x5fa8 <__fp_pscA>
    5cca:	30 f0       	brcs	.+12     	; 0x5cd8 <__divsf3+0x18>
    5ccc:	21 f4       	brne	.+8      	; 0x5cd6 <__divsf3+0x16>
    5cce:	5f 3f       	cpi	r21, 0xFF	; 255
    5cd0:	19 f0       	breq	.+6      	; 0x5cd8 <__divsf3+0x18>
    5cd2:	3c c1       	rjmp	.+632    	; 0x5f4c <__fp_inf>
    5cd4:	51 11       	cpse	r21, r1
    5cd6:	e3 c1       	rjmp	.+966    	; 0x609e <__fp_szero>
    5cd8:	3f c1       	rjmp	.+638    	; 0x5f58 <__fp_nan>

00005cda <__divsf3x>:
    5cda:	be d1       	rcall	.+892    	; 0x6058 <__fp_split3>
    5cdc:	98 f3       	brcs	.-26     	; 0x5cc4 <__divsf3+0x4>

00005cde <__divsf3_pse>:
    5cde:	99 23       	and	r25, r25
    5ce0:	c9 f3       	breq	.-14     	; 0x5cd4 <__divsf3+0x14>
    5ce2:	55 23       	and	r21, r21
    5ce4:	b1 f3       	breq	.-20     	; 0x5cd2 <__divsf3+0x12>
    5ce6:	95 1b       	sub	r25, r21
    5ce8:	55 0b       	sbc	r21, r21
    5cea:	bb 27       	eor	r27, r27
    5cec:	aa 27       	eor	r26, r26
    5cee:	62 17       	cp	r22, r18
    5cf0:	73 07       	cpc	r23, r19
    5cf2:	84 07       	cpc	r24, r20
    5cf4:	38 f0       	brcs	.+14     	; 0x5d04 <__divsf3_pse+0x26>
    5cf6:	9f 5f       	subi	r25, 0xFF	; 255
    5cf8:	5f 4f       	sbci	r21, 0xFF	; 255
    5cfa:	22 0f       	add	r18, r18
    5cfc:	33 1f       	adc	r19, r19
    5cfe:	44 1f       	adc	r20, r20
    5d00:	aa 1f       	adc	r26, r26
    5d02:	a9 f3       	breq	.-22     	; 0x5cee <__divsf3_pse+0x10>
    5d04:	33 d0       	rcall	.+102    	; 0x5d6c <__divsf3_pse+0x8e>
    5d06:	0e 2e       	mov	r0, r30
    5d08:	3a f0       	brmi	.+14     	; 0x5d18 <__divsf3_pse+0x3a>
    5d0a:	e0 e8       	ldi	r30, 0x80	; 128
    5d0c:	30 d0       	rcall	.+96     	; 0x5d6e <__divsf3_pse+0x90>
    5d0e:	91 50       	subi	r25, 0x01	; 1
    5d10:	50 40       	sbci	r21, 0x00	; 0
    5d12:	e6 95       	lsr	r30
    5d14:	00 1c       	adc	r0, r0
    5d16:	ca f7       	brpl	.-14     	; 0x5d0a <__divsf3_pse+0x2c>
    5d18:	29 d0       	rcall	.+82     	; 0x5d6c <__divsf3_pse+0x8e>
    5d1a:	fe 2f       	mov	r31, r30
    5d1c:	27 d0       	rcall	.+78     	; 0x5d6c <__divsf3_pse+0x8e>
    5d1e:	66 0f       	add	r22, r22
    5d20:	77 1f       	adc	r23, r23
    5d22:	88 1f       	adc	r24, r24
    5d24:	bb 1f       	adc	r27, r27
    5d26:	26 17       	cp	r18, r22
    5d28:	37 07       	cpc	r19, r23
    5d2a:	48 07       	cpc	r20, r24
    5d2c:	ab 07       	cpc	r26, r27
    5d2e:	b0 e8       	ldi	r27, 0x80	; 128
    5d30:	09 f0       	breq	.+2      	; 0x5d34 <__divsf3_pse+0x56>
    5d32:	bb 0b       	sbc	r27, r27
    5d34:	80 2d       	mov	r24, r0
    5d36:	bf 01       	movw	r22, r30
    5d38:	ff 27       	eor	r31, r31
    5d3a:	93 58       	subi	r25, 0x83	; 131
    5d3c:	5f 4f       	sbci	r21, 0xFF	; 255
    5d3e:	2a f0       	brmi	.+10     	; 0x5d4a <__divsf3_pse+0x6c>
    5d40:	9e 3f       	cpi	r25, 0xFE	; 254
    5d42:	51 05       	cpc	r21, r1
    5d44:	68 f0       	brcs	.+26     	; 0x5d60 <__divsf3_pse+0x82>
    5d46:	02 c1       	rjmp	.+516    	; 0x5f4c <__fp_inf>
    5d48:	aa c1       	rjmp	.+852    	; 0x609e <__fp_szero>
    5d4a:	5f 3f       	cpi	r21, 0xFF	; 255
    5d4c:	ec f3       	brlt	.-6      	; 0x5d48 <__divsf3_pse+0x6a>
    5d4e:	98 3e       	cpi	r25, 0xE8	; 232
    5d50:	dc f3       	brlt	.-10     	; 0x5d48 <__divsf3_pse+0x6a>
    5d52:	86 95       	lsr	r24
    5d54:	77 95       	ror	r23
    5d56:	67 95       	ror	r22
    5d58:	b7 95       	ror	r27
    5d5a:	f7 95       	ror	r31
    5d5c:	9f 5f       	subi	r25, 0xFF	; 255
    5d5e:	c9 f7       	brne	.-14     	; 0x5d52 <__divsf3_pse+0x74>
    5d60:	88 0f       	add	r24, r24
    5d62:	91 1d       	adc	r25, r1
    5d64:	96 95       	lsr	r25
    5d66:	87 95       	ror	r24
    5d68:	97 f9       	bld	r25, 7
    5d6a:	08 95       	ret
    5d6c:	e1 e0       	ldi	r30, 0x01	; 1
    5d6e:	66 0f       	add	r22, r22
    5d70:	77 1f       	adc	r23, r23
    5d72:	88 1f       	adc	r24, r24
    5d74:	bb 1f       	adc	r27, r27
    5d76:	62 17       	cp	r22, r18
    5d78:	73 07       	cpc	r23, r19
    5d7a:	84 07       	cpc	r24, r20
    5d7c:	ba 07       	cpc	r27, r26
    5d7e:	20 f0       	brcs	.+8      	; 0x5d88 <__divsf3_pse+0xaa>
    5d80:	62 1b       	sub	r22, r18
    5d82:	73 0b       	sbc	r23, r19
    5d84:	84 0b       	sbc	r24, r20
    5d86:	ba 0b       	sbc	r27, r26
    5d88:	ee 1f       	adc	r30, r30
    5d8a:	88 f7       	brcc	.-30     	; 0x5d6e <__divsf3_pse+0x90>
    5d8c:	e0 95       	com	r30
    5d8e:	08 95       	ret
    5d90:	19 f4       	brne	.+6      	; 0x5d98 <__divsf3_pse+0xba>
    5d92:	0e f0       	brts	.+2      	; 0x5d96 <__divsf3_pse+0xb8>
    5d94:	db c0       	rjmp	.+438    	; 0x5f4c <__fp_inf>
    5d96:	82 c1       	rjmp	.+772    	; 0x609c <__fp_zero>
    5d98:	df c0       	rjmp	.+446    	; 0x5f58 <__fp_nan>

00005d9a <exp>:
    5d9a:	66 d1       	rcall	.+716    	; 0x6068 <__fp_splitA>
    5d9c:	c8 f3       	brcs	.-14     	; 0x5d90 <__divsf3_pse+0xb2>
    5d9e:	96 38       	cpi	r25, 0x86	; 134
    5da0:	c0 f7       	brcc	.-16     	; 0x5d92 <__divsf3_pse+0xb4>
    5da2:	07 f8       	bld	r0, 7
    5da4:	0f 92       	push	r0
    5da6:	e8 94       	clt
    5da8:	2b e3       	ldi	r18, 0x3B	; 59
    5daa:	3a ea       	ldi	r19, 0xAA	; 170
    5dac:	48 eb       	ldi	r20, 0xB8	; 184
    5dae:	5f e7       	ldi	r21, 0x7F	; 127
    5db0:	43 d2       	rcall	.+1158   	; 0x6238 <__mulsf3_pse>
    5db2:	0f 92       	push	r0
    5db4:	0f 92       	push	r0
    5db6:	0f 92       	push	r0
    5db8:	4d b7       	in	r20, 0x3d	; 61
    5dba:	5e b7       	in	r21, 0x3e	; 62
    5dbc:	0f 92       	push	r0
    5dbe:	fb d1       	rcall	.+1014   	; 0x61b6 <modf>
    5dc0:	ed ed       	ldi	r30, 0xDD	; 221
    5dc2:	f0 e0       	ldi	r31, 0x00	; 0
    5dc4:	cc d0       	rcall	.+408    	; 0x5f5e <__fp_powser>
    5dc6:	4f 91       	pop	r20
    5dc8:	5f 91       	pop	r21
    5dca:	ef 91       	pop	r30
    5dcc:	ff 91       	pop	r31
    5dce:	e5 95       	asr	r30
    5dd0:	ee 1f       	adc	r30, r30
    5dd2:	ff 1f       	adc	r31, r31
    5dd4:	49 f0       	breq	.+18     	; 0x5de8 <exp+0x4e>
    5dd6:	fe 57       	subi	r31, 0x7E	; 126
    5dd8:	e0 68       	ori	r30, 0x80	; 128
    5dda:	44 27       	eor	r20, r20
    5ddc:	ee 0f       	add	r30, r30
    5dde:	44 1f       	adc	r20, r20
    5de0:	fa 95       	dec	r31
    5de2:	e1 f7       	brne	.-8      	; 0x5ddc <exp+0x42>
    5de4:	41 95       	neg	r20
    5de6:	55 0b       	sbc	r21, r21
    5de8:	6d d1       	rcall	.+730    	; 0x60c4 <ldexp>
    5dea:	0f 90       	pop	r0
    5dec:	07 fe       	sbrs	r0, 7
    5dee:	61 c1       	rjmp	.+706    	; 0x60b2 <inverse>
    5df0:	08 95       	ret

00005df2 <__fixsfsi>:
    5df2:	04 d0       	rcall	.+8      	; 0x5dfc <__fixunssfsi>
    5df4:	68 94       	set
    5df6:	b1 11       	cpse	r27, r1
    5df8:	52 c1       	rjmp	.+676    	; 0x609e <__fp_szero>
    5dfa:	08 95       	ret

00005dfc <__fixunssfsi>:
    5dfc:	35 d1       	rcall	.+618    	; 0x6068 <__fp_splitA>
    5dfe:	88 f0       	brcs	.+34     	; 0x5e22 <__fixunssfsi+0x26>
    5e00:	9f 57       	subi	r25, 0x7F	; 127
    5e02:	90 f0       	brcs	.+36     	; 0x5e28 <__fixunssfsi+0x2c>
    5e04:	b9 2f       	mov	r27, r25
    5e06:	99 27       	eor	r25, r25
    5e08:	b7 51       	subi	r27, 0x17	; 23
    5e0a:	a0 f0       	brcs	.+40     	; 0x5e34 <__fixunssfsi+0x38>
    5e0c:	d1 f0       	breq	.+52     	; 0x5e42 <__fixunssfsi+0x46>
    5e0e:	66 0f       	add	r22, r22
    5e10:	77 1f       	adc	r23, r23
    5e12:	88 1f       	adc	r24, r24
    5e14:	99 1f       	adc	r25, r25
    5e16:	1a f0       	brmi	.+6      	; 0x5e1e <__fixunssfsi+0x22>
    5e18:	ba 95       	dec	r27
    5e1a:	c9 f7       	brne	.-14     	; 0x5e0e <__fixunssfsi+0x12>
    5e1c:	12 c0       	rjmp	.+36     	; 0x5e42 <__fixunssfsi+0x46>
    5e1e:	b1 30       	cpi	r27, 0x01	; 1
    5e20:	81 f0       	breq	.+32     	; 0x5e42 <__fixunssfsi+0x46>
    5e22:	3c d1       	rcall	.+632    	; 0x609c <__fp_zero>
    5e24:	b1 e0       	ldi	r27, 0x01	; 1
    5e26:	08 95       	ret
    5e28:	39 c1       	rjmp	.+626    	; 0x609c <__fp_zero>
    5e2a:	67 2f       	mov	r22, r23
    5e2c:	78 2f       	mov	r23, r24
    5e2e:	88 27       	eor	r24, r24
    5e30:	b8 5f       	subi	r27, 0xF8	; 248
    5e32:	39 f0       	breq	.+14     	; 0x5e42 <__fixunssfsi+0x46>
    5e34:	b9 3f       	cpi	r27, 0xF9	; 249
    5e36:	cc f3       	brlt	.-14     	; 0x5e2a <__fixunssfsi+0x2e>
    5e38:	86 95       	lsr	r24
    5e3a:	77 95       	ror	r23
    5e3c:	67 95       	ror	r22
    5e3e:	b3 95       	inc	r27
    5e40:	d9 f7       	brne	.-10     	; 0x5e38 <__fixunssfsi+0x3c>
    5e42:	3e f4       	brtc	.+14     	; 0x5e52 <__fixunssfsi+0x56>
    5e44:	90 95       	com	r25
    5e46:	80 95       	com	r24
    5e48:	70 95       	com	r23
    5e4a:	61 95       	neg	r22
    5e4c:	7f 4f       	sbci	r23, 0xFF	; 255
    5e4e:	8f 4f       	sbci	r24, 0xFF	; 255
    5e50:	9f 4f       	sbci	r25, 0xFF	; 255
    5e52:	08 95       	ret

00005e54 <__floatunsisf>:
    5e54:	e8 94       	clt
    5e56:	09 c0       	rjmp	.+18     	; 0x5e6a <__floatsisf+0x12>

00005e58 <__floatsisf>:
    5e58:	97 fb       	bst	r25, 7
    5e5a:	3e f4       	brtc	.+14     	; 0x5e6a <__floatsisf+0x12>
    5e5c:	90 95       	com	r25
    5e5e:	80 95       	com	r24
    5e60:	70 95       	com	r23
    5e62:	61 95       	neg	r22
    5e64:	7f 4f       	sbci	r23, 0xFF	; 255
    5e66:	8f 4f       	sbci	r24, 0xFF	; 255
    5e68:	9f 4f       	sbci	r25, 0xFF	; 255
    5e6a:	99 23       	and	r25, r25
    5e6c:	a9 f0       	breq	.+42     	; 0x5e98 <__floatsisf+0x40>
    5e6e:	f9 2f       	mov	r31, r25
    5e70:	96 e9       	ldi	r25, 0x96	; 150
    5e72:	bb 27       	eor	r27, r27
    5e74:	93 95       	inc	r25
    5e76:	f6 95       	lsr	r31
    5e78:	87 95       	ror	r24
    5e7a:	77 95       	ror	r23
    5e7c:	67 95       	ror	r22
    5e7e:	b7 95       	ror	r27
    5e80:	f1 11       	cpse	r31, r1
    5e82:	f8 cf       	rjmp	.-16     	; 0x5e74 <__floatsisf+0x1c>
    5e84:	fa f4       	brpl	.+62     	; 0x5ec4 <__floatsisf+0x6c>
    5e86:	bb 0f       	add	r27, r27
    5e88:	11 f4       	brne	.+4      	; 0x5e8e <__floatsisf+0x36>
    5e8a:	60 ff       	sbrs	r22, 0
    5e8c:	1b c0       	rjmp	.+54     	; 0x5ec4 <__floatsisf+0x6c>
    5e8e:	6f 5f       	subi	r22, 0xFF	; 255
    5e90:	7f 4f       	sbci	r23, 0xFF	; 255
    5e92:	8f 4f       	sbci	r24, 0xFF	; 255
    5e94:	9f 4f       	sbci	r25, 0xFF	; 255
    5e96:	16 c0       	rjmp	.+44     	; 0x5ec4 <__floatsisf+0x6c>
    5e98:	88 23       	and	r24, r24
    5e9a:	11 f0       	breq	.+4      	; 0x5ea0 <__floatsisf+0x48>
    5e9c:	96 e9       	ldi	r25, 0x96	; 150
    5e9e:	11 c0       	rjmp	.+34     	; 0x5ec2 <__floatsisf+0x6a>
    5ea0:	77 23       	and	r23, r23
    5ea2:	21 f0       	breq	.+8      	; 0x5eac <__floatsisf+0x54>
    5ea4:	9e e8       	ldi	r25, 0x8E	; 142
    5ea6:	87 2f       	mov	r24, r23
    5ea8:	76 2f       	mov	r23, r22
    5eaa:	05 c0       	rjmp	.+10     	; 0x5eb6 <__floatsisf+0x5e>
    5eac:	66 23       	and	r22, r22
    5eae:	71 f0       	breq	.+28     	; 0x5ecc <__floatsisf+0x74>
    5eb0:	96 e8       	ldi	r25, 0x86	; 134
    5eb2:	86 2f       	mov	r24, r22
    5eb4:	70 e0       	ldi	r23, 0x00	; 0
    5eb6:	60 e0       	ldi	r22, 0x00	; 0
    5eb8:	2a f0       	brmi	.+10     	; 0x5ec4 <__floatsisf+0x6c>
    5eba:	9a 95       	dec	r25
    5ebc:	66 0f       	add	r22, r22
    5ebe:	77 1f       	adc	r23, r23
    5ec0:	88 1f       	adc	r24, r24
    5ec2:	da f7       	brpl	.-10     	; 0x5eba <__floatsisf+0x62>
    5ec4:	88 0f       	add	r24, r24
    5ec6:	96 95       	lsr	r25
    5ec8:	87 95       	ror	r24
    5eca:	97 f9       	bld	r25, 7
    5ecc:	08 95       	ret

00005ece <__fp_arccos>:
    5ece:	df 93       	push	r29
    5ed0:	cf 93       	push	r28
    5ed2:	1f 93       	push	r17
    5ed4:	0f 93       	push	r16
    5ed6:	8b 01       	movw	r16, r22
    5ed8:	ec 01       	movw	r28, r24
    5eda:	e5 e0       	ldi	r30, 0x05	; 5
    5edc:	f1 e0       	ldi	r31, 0x01	; 1
    5ede:	3f d0       	rcall	.+126    	; 0x5f5e <__fp_powser>
    5ee0:	99 d0       	rcall	.+306    	; 0x6014 <__fp_round>
    5ee2:	98 01       	movw	r18, r16
    5ee4:	ae 01       	movw	r20, r28
    5ee6:	8b 01       	movw	r16, r22
    5ee8:	ec 01       	movw	r28, r24
    5eea:	60 e0       	ldi	r22, 0x00	; 0
    5eec:	70 e0       	ldi	r23, 0x00	; 0
    5eee:	80 e8       	ldi	r24, 0x80	; 128
    5ef0:	9f e3       	ldi	r25, 0x3F	; 63
    5ef2:	52 de       	rcall	.-860    	; 0x5b98 <__subsf3>
    5ef4:	00 d2       	rcall	.+1024   	; 0x62f6 <sqrt>
    5ef6:	98 01       	movw	r18, r16
    5ef8:	ae 01       	movw	r20, r28
    5efa:	0f 91       	pop	r16
    5efc:	1f 91       	pop	r17
    5efe:	cf 91       	pop	r28
    5f00:	df 91       	pop	r29
    5f02:	98 c1       	rjmp	.+816    	; 0x6234 <__mulsf3x>

00005f04 <__fp_cmp>:
    5f04:	99 0f       	add	r25, r25
    5f06:	00 08       	sbc	r0, r0
    5f08:	55 0f       	add	r21, r21
    5f0a:	aa 0b       	sbc	r26, r26
    5f0c:	e0 e8       	ldi	r30, 0x80	; 128
    5f0e:	fe ef       	ldi	r31, 0xFE	; 254
    5f10:	16 16       	cp	r1, r22
    5f12:	17 06       	cpc	r1, r23
    5f14:	e8 07       	cpc	r30, r24
    5f16:	f9 07       	cpc	r31, r25
    5f18:	c0 f0       	brcs	.+48     	; 0x5f4a <__fp_cmp+0x46>
    5f1a:	12 16       	cp	r1, r18
    5f1c:	13 06       	cpc	r1, r19
    5f1e:	e4 07       	cpc	r30, r20
    5f20:	f5 07       	cpc	r31, r21
    5f22:	98 f0       	brcs	.+38     	; 0x5f4a <__fp_cmp+0x46>
    5f24:	62 1b       	sub	r22, r18
    5f26:	73 0b       	sbc	r23, r19
    5f28:	84 0b       	sbc	r24, r20
    5f2a:	95 0b       	sbc	r25, r21
    5f2c:	39 f4       	brne	.+14     	; 0x5f3c <__fp_cmp+0x38>
    5f2e:	0a 26       	eor	r0, r26
    5f30:	61 f0       	breq	.+24     	; 0x5f4a <__fp_cmp+0x46>
    5f32:	23 2b       	or	r18, r19
    5f34:	24 2b       	or	r18, r20
    5f36:	25 2b       	or	r18, r21
    5f38:	21 f4       	brne	.+8      	; 0x5f42 <__fp_cmp+0x3e>
    5f3a:	08 95       	ret
    5f3c:	0a 26       	eor	r0, r26
    5f3e:	09 f4       	brne	.+2      	; 0x5f42 <__fp_cmp+0x3e>
    5f40:	a1 40       	sbci	r26, 0x01	; 1
    5f42:	a6 95       	lsr	r26
    5f44:	8f ef       	ldi	r24, 0xFF	; 255
    5f46:	81 1d       	adc	r24, r1
    5f48:	81 1d       	adc	r24, r1
    5f4a:	08 95       	ret

00005f4c <__fp_inf>:
    5f4c:	97 f9       	bld	r25, 7
    5f4e:	9f 67       	ori	r25, 0x7F	; 127
    5f50:	80 e8       	ldi	r24, 0x80	; 128
    5f52:	70 e0       	ldi	r23, 0x00	; 0
    5f54:	60 e0       	ldi	r22, 0x00	; 0
    5f56:	08 95       	ret

00005f58 <__fp_nan>:
    5f58:	9f ef       	ldi	r25, 0xFF	; 255
    5f5a:	80 ec       	ldi	r24, 0xC0	; 192
    5f5c:	08 95       	ret

00005f5e <__fp_powser>:
    5f5e:	df 93       	push	r29
    5f60:	cf 93       	push	r28
    5f62:	1f 93       	push	r17
    5f64:	0f 93       	push	r16
    5f66:	ff 92       	push	r15
    5f68:	ef 92       	push	r14
    5f6a:	df 92       	push	r13
    5f6c:	7b 01       	movw	r14, r22
    5f6e:	8c 01       	movw	r16, r24
    5f70:	68 94       	set
    5f72:	05 c0       	rjmp	.+10     	; 0x5f7e <__fp_powser+0x20>
    5f74:	da 2e       	mov	r13, r26
    5f76:	ef 01       	movw	r28, r30
    5f78:	5d d1       	rcall	.+698    	; 0x6234 <__mulsf3x>
    5f7a:	fe 01       	movw	r30, r28
    5f7c:	e8 94       	clt
    5f7e:	a5 91       	lpm	r26, Z+
    5f80:	25 91       	lpm	r18, Z+
    5f82:	35 91       	lpm	r19, Z+
    5f84:	45 91       	lpm	r20, Z+
    5f86:	55 91       	lpm	r21, Z+
    5f88:	ae f3       	brts	.-22     	; 0x5f74 <__fp_powser+0x16>
    5f8a:	ef 01       	movw	r28, r30
    5f8c:	17 de       	rcall	.-978    	; 0x5bbc <__addsf3x>
    5f8e:	fe 01       	movw	r30, r28
    5f90:	97 01       	movw	r18, r14
    5f92:	a8 01       	movw	r20, r16
    5f94:	da 94       	dec	r13
    5f96:	79 f7       	brne	.-34     	; 0x5f76 <__fp_powser+0x18>
    5f98:	df 90       	pop	r13
    5f9a:	ef 90       	pop	r14
    5f9c:	ff 90       	pop	r15
    5f9e:	0f 91       	pop	r16
    5fa0:	1f 91       	pop	r17
    5fa2:	cf 91       	pop	r28
    5fa4:	df 91       	pop	r29
    5fa6:	08 95       	ret

00005fa8 <__fp_pscA>:
    5fa8:	00 24       	eor	r0, r0
    5faa:	0a 94       	dec	r0
    5fac:	16 16       	cp	r1, r22
    5fae:	17 06       	cpc	r1, r23
    5fb0:	18 06       	cpc	r1, r24
    5fb2:	09 06       	cpc	r0, r25
    5fb4:	08 95       	ret

00005fb6 <__fp_pscB>:
    5fb6:	00 24       	eor	r0, r0
    5fb8:	0a 94       	dec	r0
    5fba:	12 16       	cp	r1, r18
    5fbc:	13 06       	cpc	r1, r19
    5fbe:	14 06       	cpc	r1, r20
    5fc0:	05 06       	cpc	r0, r21
    5fc2:	08 95       	ret
    5fc4:	c9 cf       	rjmp	.-110    	; 0x5f58 <__fp_nan>

00005fc6 <__fp_rempio2>:
    5fc6:	50 d0       	rcall	.+160    	; 0x6068 <__fp_splitA>
    5fc8:	e8 f3       	brcs	.-6      	; 0x5fc4 <__fp_pscB+0xe>
    5fca:	e8 94       	clt
    5fcc:	e0 e0       	ldi	r30, 0x00	; 0
    5fce:	bb 27       	eor	r27, r27
    5fd0:	9f 57       	subi	r25, 0x7F	; 127
    5fd2:	f0 f0       	brcs	.+60     	; 0x6010 <__fp_rempio2+0x4a>
    5fd4:	2a ed       	ldi	r18, 0xDA	; 218
    5fd6:	3f e0       	ldi	r19, 0x0F	; 15
    5fd8:	49 ec       	ldi	r20, 0xC9	; 201
    5fda:	06 c0       	rjmp	.+12     	; 0x5fe8 <__fp_rempio2+0x22>
    5fdc:	ee 0f       	add	r30, r30
    5fde:	bb 0f       	add	r27, r27
    5fe0:	66 1f       	adc	r22, r22
    5fe2:	77 1f       	adc	r23, r23
    5fe4:	88 1f       	adc	r24, r24
    5fe6:	28 f0       	brcs	.+10     	; 0x5ff2 <__fp_rempio2+0x2c>
    5fe8:	b2 3a       	cpi	r27, 0xA2	; 162
    5fea:	62 07       	cpc	r22, r18
    5fec:	73 07       	cpc	r23, r19
    5fee:	84 07       	cpc	r24, r20
    5ff0:	28 f0       	brcs	.+10     	; 0x5ffc <__fp_rempio2+0x36>
    5ff2:	b2 5a       	subi	r27, 0xA2	; 162
    5ff4:	62 0b       	sbc	r22, r18
    5ff6:	73 0b       	sbc	r23, r19
    5ff8:	84 0b       	sbc	r24, r20
    5ffa:	e3 95       	inc	r30
    5ffc:	9a 95       	dec	r25
    5ffe:	72 f7       	brpl	.-36     	; 0x5fdc <__fp_rempio2+0x16>
    6000:	80 38       	cpi	r24, 0x80	; 128
    6002:	30 f4       	brcc	.+12     	; 0x6010 <__fp_rempio2+0x4a>
    6004:	9a 95       	dec	r25
    6006:	bb 0f       	add	r27, r27
    6008:	66 1f       	adc	r22, r22
    600a:	77 1f       	adc	r23, r23
    600c:	88 1f       	adc	r24, r24
    600e:	d2 f7       	brpl	.-12     	; 0x6004 <__fp_rempio2+0x3e>
    6010:	90 48       	sbci	r25, 0x80	; 128
    6012:	b4 c1       	rjmp	.+872    	; 0x637c <__fp_mpack_finite>

00006014 <__fp_round>:
    6014:	09 2e       	mov	r0, r25
    6016:	03 94       	inc	r0
    6018:	00 0c       	add	r0, r0
    601a:	11 f4       	brne	.+4      	; 0x6020 <__fp_round+0xc>
    601c:	88 23       	and	r24, r24
    601e:	52 f0       	brmi	.+20     	; 0x6034 <__fp_round+0x20>
    6020:	bb 0f       	add	r27, r27
    6022:	40 f4       	brcc	.+16     	; 0x6034 <__fp_round+0x20>
    6024:	bf 2b       	or	r27, r31
    6026:	11 f4       	brne	.+4      	; 0x602c <__fp_round+0x18>
    6028:	60 ff       	sbrs	r22, 0
    602a:	04 c0       	rjmp	.+8      	; 0x6034 <__fp_round+0x20>
    602c:	6f 5f       	subi	r22, 0xFF	; 255
    602e:	7f 4f       	sbci	r23, 0xFF	; 255
    6030:	8f 4f       	sbci	r24, 0xFF	; 255
    6032:	9f 4f       	sbci	r25, 0xFF	; 255
    6034:	08 95       	ret

00006036 <__fp_sinus>:
    6036:	ef 93       	push	r30
    6038:	e0 ff       	sbrs	r30, 0
    603a:	06 c0       	rjmp	.+12     	; 0x6048 <__fp_sinus+0x12>
    603c:	a2 ea       	ldi	r26, 0xA2	; 162
    603e:	2a ed       	ldi	r18, 0xDA	; 218
    6040:	3f e0       	ldi	r19, 0x0F	; 15
    6042:	49 ec       	ldi	r20, 0xC9	; 201
    6044:	5f eb       	ldi	r21, 0xBF	; 191
    6046:	ba dd       	rcall	.-1164   	; 0x5bbc <__addsf3x>
    6048:	e5 df       	rcall	.-54     	; 0x6014 <__fp_round>
    604a:	0f 90       	pop	r0
    604c:	03 94       	inc	r0
    604e:	01 fc       	sbrc	r0, 1
    6050:	90 58       	subi	r25, 0x80	; 128
    6052:	ed e2       	ldi	r30, 0x2D	; 45
    6054:	f1 e0       	ldi	r31, 0x01	; 1
    6056:	a5 c1       	rjmp	.+842    	; 0x63a2 <__fp_powsodd>

00006058 <__fp_split3>:
    6058:	57 fd       	sbrc	r21, 7
    605a:	90 58       	subi	r25, 0x80	; 128
    605c:	44 0f       	add	r20, r20
    605e:	55 1f       	adc	r21, r21
    6060:	59 f0       	breq	.+22     	; 0x6078 <__fp_splitA+0x10>
    6062:	5f 3f       	cpi	r21, 0xFF	; 255
    6064:	71 f0       	breq	.+28     	; 0x6082 <__fp_splitA+0x1a>
    6066:	47 95       	ror	r20

00006068 <__fp_splitA>:
    6068:	88 0f       	add	r24, r24
    606a:	97 fb       	bst	r25, 7
    606c:	99 1f       	adc	r25, r25
    606e:	61 f0       	breq	.+24     	; 0x6088 <__fp_splitA+0x20>
    6070:	9f 3f       	cpi	r25, 0xFF	; 255
    6072:	79 f0       	breq	.+30     	; 0x6092 <__fp_splitA+0x2a>
    6074:	87 95       	ror	r24
    6076:	08 95       	ret
    6078:	12 16       	cp	r1, r18
    607a:	13 06       	cpc	r1, r19
    607c:	14 06       	cpc	r1, r20
    607e:	55 1f       	adc	r21, r21
    6080:	f2 cf       	rjmp	.-28     	; 0x6066 <__fp_split3+0xe>
    6082:	46 95       	lsr	r20
    6084:	f1 df       	rcall	.-30     	; 0x6068 <__fp_splitA>
    6086:	08 c0       	rjmp	.+16     	; 0x6098 <__fp_splitA+0x30>
    6088:	16 16       	cp	r1, r22
    608a:	17 06       	cpc	r1, r23
    608c:	18 06       	cpc	r1, r24
    608e:	99 1f       	adc	r25, r25
    6090:	f1 cf       	rjmp	.-30     	; 0x6074 <__fp_splitA+0xc>
    6092:	86 95       	lsr	r24
    6094:	71 05       	cpc	r23, r1
    6096:	61 05       	cpc	r22, r1
    6098:	08 94       	sec
    609a:	08 95       	ret

0000609c <__fp_zero>:
    609c:	e8 94       	clt

0000609e <__fp_szero>:
    609e:	bb 27       	eor	r27, r27
    60a0:	66 27       	eor	r22, r22
    60a2:	77 27       	eor	r23, r23
    60a4:	cb 01       	movw	r24, r22
    60a6:	97 f9       	bld	r25, 7
    60a8:	08 95       	ret

000060aa <__gesf2>:
    60aa:	2c df       	rcall	.-424    	; 0x5f04 <__fp_cmp>
    60ac:	08 f4       	brcc	.+2      	; 0x60b0 <__gesf2+0x6>
    60ae:	8f ef       	ldi	r24, 0xFF	; 255
    60b0:	08 95       	ret

000060b2 <inverse>:
    60b2:	9b 01       	movw	r18, r22
    60b4:	ac 01       	movw	r20, r24
    60b6:	60 e0       	ldi	r22, 0x00	; 0
    60b8:	70 e0       	ldi	r23, 0x00	; 0
    60ba:	80 e8       	ldi	r24, 0x80	; 128
    60bc:	9f e3       	ldi	r25, 0x3F	; 63
    60be:	00 ce       	rjmp	.-1024   	; 0x5cc0 <__divsf3>
    60c0:	45 cf       	rjmp	.-374    	; 0x5f4c <__fp_inf>
    60c2:	5a c1       	rjmp	.+692    	; 0x6378 <__fp_mpack>

000060c4 <ldexp>:
    60c4:	d1 df       	rcall	.-94     	; 0x6068 <__fp_splitA>
    60c6:	e8 f3       	brcs	.-6      	; 0x60c2 <inverse+0x10>
    60c8:	99 23       	and	r25, r25
    60ca:	d9 f3       	breq	.-10     	; 0x60c2 <inverse+0x10>
    60cc:	94 0f       	add	r25, r20
    60ce:	51 1d       	adc	r21, r1
    60d0:	bb f3       	brvs	.-18     	; 0x60c0 <inverse+0xe>
    60d2:	91 50       	subi	r25, 0x01	; 1
    60d4:	50 40       	sbci	r21, 0x00	; 0
    60d6:	94 f0       	brlt	.+36     	; 0x60fc <ldexp+0x38>
    60d8:	59 f0       	breq	.+22     	; 0x60f0 <ldexp+0x2c>
    60da:	88 23       	and	r24, r24
    60dc:	32 f0       	brmi	.+12     	; 0x60ea <ldexp+0x26>
    60de:	66 0f       	add	r22, r22
    60e0:	77 1f       	adc	r23, r23
    60e2:	88 1f       	adc	r24, r24
    60e4:	91 50       	subi	r25, 0x01	; 1
    60e6:	50 40       	sbci	r21, 0x00	; 0
    60e8:	c1 f7       	brne	.-16     	; 0x60da <ldexp+0x16>
    60ea:	9e 3f       	cpi	r25, 0xFE	; 254
    60ec:	51 05       	cpc	r21, r1
    60ee:	44 f7       	brge	.-48     	; 0x60c0 <inverse+0xe>
    60f0:	88 0f       	add	r24, r24
    60f2:	91 1d       	adc	r25, r1
    60f4:	96 95       	lsr	r25
    60f6:	87 95       	ror	r24
    60f8:	97 f9       	bld	r25, 7
    60fa:	08 95       	ret
    60fc:	5f 3f       	cpi	r21, 0xFF	; 255
    60fe:	ac f0       	brlt	.+42     	; 0x612a <ldexp+0x66>
    6100:	98 3e       	cpi	r25, 0xE8	; 232
    6102:	9c f0       	brlt	.+38     	; 0x612a <ldexp+0x66>
    6104:	bb 27       	eor	r27, r27
    6106:	86 95       	lsr	r24
    6108:	77 95       	ror	r23
    610a:	67 95       	ror	r22
    610c:	b7 95       	ror	r27
    610e:	08 f4       	brcc	.+2      	; 0x6112 <ldexp+0x4e>
    6110:	b1 60       	ori	r27, 0x01	; 1
    6112:	93 95       	inc	r25
    6114:	c1 f7       	brne	.-16     	; 0x6106 <ldexp+0x42>
    6116:	bb 0f       	add	r27, r27
    6118:	58 f7       	brcc	.-42     	; 0x60f0 <ldexp+0x2c>
    611a:	11 f4       	brne	.+4      	; 0x6120 <ldexp+0x5c>
    611c:	60 ff       	sbrs	r22, 0
    611e:	e8 cf       	rjmp	.-48     	; 0x60f0 <ldexp+0x2c>
    6120:	6f 5f       	subi	r22, 0xFF	; 255
    6122:	7f 4f       	sbci	r23, 0xFF	; 255
    6124:	8f 4f       	sbci	r24, 0xFF	; 255
    6126:	9f 4f       	sbci	r25, 0xFF	; 255
    6128:	e3 cf       	rjmp	.-58     	; 0x60f0 <ldexp+0x2c>
    612a:	b9 cf       	rjmp	.-142    	; 0x609e <__fp_szero>
    612c:	0e f0       	brts	.+2      	; 0x6130 <ldexp+0x6c>
    612e:	24 c1       	rjmp	.+584    	; 0x6378 <__fp_mpack>
    6130:	13 cf       	rjmp	.-474    	; 0x5f58 <__fp_nan>
    6132:	68 94       	set
    6134:	0b cf       	rjmp	.-490    	; 0x5f4c <__fp_inf>

00006136 <log>:
    6136:	98 df       	rcall	.-208    	; 0x6068 <__fp_splitA>
    6138:	c8 f3       	brcs	.-14     	; 0x612c <ldexp+0x68>
    613a:	99 23       	and	r25, r25
    613c:	d1 f3       	breq	.-12     	; 0x6132 <ldexp+0x6e>
    613e:	c6 f3       	brts	.-16     	; 0x6130 <ldexp+0x6c>
    6140:	df 93       	push	r29
    6142:	cf 93       	push	r28
    6144:	1f 93       	push	r17
    6146:	0f 93       	push	r16
    6148:	ff 92       	push	r15
    614a:	c9 2f       	mov	r28, r25
    614c:	dd 27       	eor	r29, r29
    614e:	88 23       	and	r24, r24
    6150:	2a f0       	brmi	.+10     	; 0x615c <log+0x26>
    6152:	21 97       	sbiw	r28, 0x01	; 1
    6154:	66 0f       	add	r22, r22
    6156:	77 1f       	adc	r23, r23
    6158:	88 1f       	adc	r24, r24
    615a:	da f7       	brpl	.-10     	; 0x6152 <log+0x1c>
    615c:	20 e0       	ldi	r18, 0x00	; 0
    615e:	30 e0       	ldi	r19, 0x00	; 0
    6160:	40 e8       	ldi	r20, 0x80	; 128
    6162:	5f eb       	ldi	r21, 0xBF	; 191
    6164:	9f e3       	ldi	r25, 0x3F	; 63
    6166:	88 39       	cpi	r24, 0x98	; 152
    6168:	20 f0       	brcs	.+8      	; 0x6172 <log+0x3c>
    616a:	80 3e       	cpi	r24, 0xE0	; 224
    616c:	30 f0       	brcs	.+12     	; 0x617a <log+0x44>
    616e:	21 96       	adiw	r28, 0x01	; 1
    6170:	8f 77       	andi	r24, 0x7F	; 127
    6172:	13 dd       	rcall	.-1498   	; 0x5b9a <__addsf3>
    6174:	eb e4       	ldi	r30, 0x4B	; 75
    6176:	f1 e0       	ldi	r31, 0x01	; 1
    6178:	03 c0       	rjmp	.+6      	; 0x6180 <log+0x4a>
    617a:	0f dd       	rcall	.-1506   	; 0x5b9a <__addsf3>
    617c:	e8 e7       	ldi	r30, 0x78	; 120
    617e:	f1 e0       	ldi	r31, 0x01	; 1
    6180:	ee de       	rcall	.-548    	; 0x5f5e <__fp_powser>
    6182:	8b 01       	movw	r16, r22
    6184:	be 01       	movw	r22, r28
    6186:	ec 01       	movw	r28, r24
    6188:	fb 2e       	mov	r15, r27
    618a:	6f 57       	subi	r22, 0x7F	; 127
    618c:	71 09       	sbc	r23, r1
    618e:	75 95       	asr	r23
    6190:	77 1f       	adc	r23, r23
    6192:	88 0b       	sbc	r24, r24
    6194:	99 0b       	sbc	r25, r25
    6196:	60 de       	rcall	.-832    	; 0x5e58 <__floatsisf>
    6198:	28 e1       	ldi	r18, 0x18	; 24
    619a:	32 e7       	ldi	r19, 0x72	; 114
    619c:	41 e3       	ldi	r20, 0x31	; 49
    619e:	5f e3       	ldi	r21, 0x3F	; 63
    61a0:	49 d0       	rcall	.+146    	; 0x6234 <__mulsf3x>
    61a2:	af 2d       	mov	r26, r15
    61a4:	98 01       	movw	r18, r16
    61a6:	ae 01       	movw	r20, r28
    61a8:	ff 90       	pop	r15
    61aa:	0f 91       	pop	r16
    61ac:	1f 91       	pop	r17
    61ae:	cf 91       	pop	r28
    61b0:	df 91       	pop	r29
    61b2:	04 dd       	rcall	.-1528   	; 0x5bbc <__addsf3x>
    61b4:	2f cf       	rjmp	.-418    	; 0x6014 <__fp_round>

000061b6 <modf>:
    61b6:	fa 01       	movw	r30, r20
    61b8:	dc 01       	movw	r26, r24
    61ba:	aa 0f       	add	r26, r26
    61bc:	bb 1f       	adc	r27, r27
    61be:	9b 01       	movw	r18, r22
    61c0:	ac 01       	movw	r20, r24
    61c2:	bf 57       	subi	r27, 0x7F	; 127
    61c4:	28 f4       	brcc	.+10     	; 0x61d0 <modf+0x1a>
    61c6:	22 27       	eor	r18, r18
    61c8:	33 27       	eor	r19, r19
    61ca:	44 27       	eor	r20, r20
    61cc:	50 78       	andi	r21, 0x80	; 128
    61ce:	1f c0       	rjmp	.+62     	; 0x620e <modf+0x58>
    61d0:	b7 51       	subi	r27, 0x17	; 23
    61d2:	88 f4       	brcc	.+34     	; 0x61f6 <modf+0x40>
    61d4:	ab 2f       	mov	r26, r27
    61d6:	00 24       	eor	r0, r0
    61d8:	46 95       	lsr	r20
    61da:	37 95       	ror	r19
    61dc:	27 95       	ror	r18
    61de:	01 1c       	adc	r0, r1
    61e0:	a3 95       	inc	r26
    61e2:	d2 f3       	brmi	.-12     	; 0x61d8 <modf+0x22>
    61e4:	00 20       	and	r0, r0
    61e6:	69 f0       	breq	.+26     	; 0x6202 <modf+0x4c>
    61e8:	22 0f       	add	r18, r18
    61ea:	33 1f       	adc	r19, r19
    61ec:	44 1f       	adc	r20, r20
    61ee:	b3 95       	inc	r27
    61f0:	da f3       	brmi	.-10     	; 0x61e8 <modf+0x32>
    61f2:	0d d0       	rcall	.+26     	; 0x620e <modf+0x58>
    61f4:	d1 cc       	rjmp	.-1630   	; 0x5b98 <__subsf3>
    61f6:	61 30       	cpi	r22, 0x01	; 1
    61f8:	71 05       	cpc	r23, r1
    61fa:	a0 e8       	ldi	r26, 0x80	; 128
    61fc:	8a 07       	cpc	r24, r26
    61fe:	b9 46       	sbci	r27, 0x69	; 105
    6200:	30 f4       	brcc	.+12     	; 0x620e <modf+0x58>
    6202:	9b 01       	movw	r18, r22
    6204:	ac 01       	movw	r20, r24
    6206:	66 27       	eor	r22, r22
    6208:	77 27       	eor	r23, r23
    620a:	88 27       	eor	r24, r24
    620c:	90 78       	andi	r25, 0x80	; 128
    620e:	30 96       	adiw	r30, 0x00	; 0
    6210:	21 f0       	breq	.+8      	; 0x621a <modf+0x64>
    6212:	20 83       	st	Z, r18
    6214:	31 83       	std	Z+1, r19	; 0x01
    6216:	42 83       	std	Z+2, r20	; 0x02
    6218:	53 83       	std	Z+3, r21	; 0x03
    621a:	08 95       	ret

0000621c <__mulsf3>:
    621c:	0b d0       	rcall	.+22     	; 0x6234 <__mulsf3x>
    621e:	fa ce       	rjmp	.-524    	; 0x6014 <__fp_round>
    6220:	c3 de       	rcall	.-634    	; 0x5fa8 <__fp_pscA>
    6222:	28 f0       	brcs	.+10     	; 0x622e <__mulsf3+0x12>
    6224:	c8 de       	rcall	.-624    	; 0x5fb6 <__fp_pscB>
    6226:	18 f0       	brcs	.+6      	; 0x622e <__mulsf3+0x12>
    6228:	95 23       	and	r25, r21
    622a:	09 f0       	breq	.+2      	; 0x622e <__mulsf3+0x12>
    622c:	8f ce       	rjmp	.-738    	; 0x5f4c <__fp_inf>
    622e:	94 ce       	rjmp	.-728    	; 0x5f58 <__fp_nan>
    6230:	11 24       	eor	r1, r1
    6232:	35 cf       	rjmp	.-406    	; 0x609e <__fp_szero>

00006234 <__mulsf3x>:
    6234:	11 df       	rcall	.-478    	; 0x6058 <__fp_split3>
    6236:	a0 f3       	brcs	.-24     	; 0x6220 <__mulsf3+0x4>

00006238 <__mulsf3_pse>:
    6238:	95 9f       	mul	r25, r21
    623a:	d1 f3       	breq	.-12     	; 0x6230 <__mulsf3+0x14>
    623c:	95 0f       	add	r25, r21
    623e:	50 e0       	ldi	r21, 0x00	; 0
    6240:	55 1f       	adc	r21, r21
    6242:	62 9f       	mul	r22, r18
    6244:	f0 01       	movw	r30, r0
    6246:	72 9f       	mul	r23, r18
    6248:	bb 27       	eor	r27, r27
    624a:	f0 0d       	add	r31, r0
    624c:	b1 1d       	adc	r27, r1
    624e:	63 9f       	mul	r22, r19
    6250:	aa 27       	eor	r26, r26
    6252:	f0 0d       	add	r31, r0
    6254:	b1 1d       	adc	r27, r1
    6256:	aa 1f       	adc	r26, r26
    6258:	64 9f       	mul	r22, r20
    625a:	66 27       	eor	r22, r22
    625c:	b0 0d       	add	r27, r0
    625e:	a1 1d       	adc	r26, r1
    6260:	66 1f       	adc	r22, r22
    6262:	82 9f       	mul	r24, r18
    6264:	22 27       	eor	r18, r18
    6266:	b0 0d       	add	r27, r0
    6268:	a1 1d       	adc	r26, r1
    626a:	62 1f       	adc	r22, r18
    626c:	73 9f       	mul	r23, r19
    626e:	b0 0d       	add	r27, r0
    6270:	a1 1d       	adc	r26, r1
    6272:	62 1f       	adc	r22, r18
    6274:	83 9f       	mul	r24, r19
    6276:	a0 0d       	add	r26, r0
    6278:	61 1d       	adc	r22, r1
    627a:	22 1f       	adc	r18, r18
    627c:	74 9f       	mul	r23, r20
    627e:	33 27       	eor	r19, r19
    6280:	a0 0d       	add	r26, r0
    6282:	61 1d       	adc	r22, r1
    6284:	23 1f       	adc	r18, r19
    6286:	84 9f       	mul	r24, r20
    6288:	60 0d       	add	r22, r0
    628a:	21 1d       	adc	r18, r1
    628c:	82 2f       	mov	r24, r18
    628e:	76 2f       	mov	r23, r22
    6290:	6a 2f       	mov	r22, r26
    6292:	11 24       	eor	r1, r1
    6294:	9f 57       	subi	r25, 0x7F	; 127
    6296:	50 40       	sbci	r21, 0x00	; 0
    6298:	8a f0       	brmi	.+34     	; 0x62bc <__mulsf3_pse+0x84>
    629a:	e1 f0       	breq	.+56     	; 0x62d4 <__mulsf3_pse+0x9c>
    629c:	88 23       	and	r24, r24
    629e:	4a f0       	brmi	.+18     	; 0x62b2 <__mulsf3_pse+0x7a>
    62a0:	ee 0f       	add	r30, r30
    62a2:	ff 1f       	adc	r31, r31
    62a4:	bb 1f       	adc	r27, r27
    62a6:	66 1f       	adc	r22, r22
    62a8:	77 1f       	adc	r23, r23
    62aa:	88 1f       	adc	r24, r24
    62ac:	91 50       	subi	r25, 0x01	; 1
    62ae:	50 40       	sbci	r21, 0x00	; 0
    62b0:	a9 f7       	brne	.-22     	; 0x629c <__mulsf3_pse+0x64>
    62b2:	9e 3f       	cpi	r25, 0xFE	; 254
    62b4:	51 05       	cpc	r21, r1
    62b6:	70 f0       	brcs	.+28     	; 0x62d4 <__mulsf3_pse+0x9c>
    62b8:	49 ce       	rjmp	.-878    	; 0x5f4c <__fp_inf>
    62ba:	f1 ce       	rjmp	.-542    	; 0x609e <__fp_szero>
    62bc:	5f 3f       	cpi	r21, 0xFF	; 255
    62be:	ec f3       	brlt	.-6      	; 0x62ba <__mulsf3_pse+0x82>
    62c0:	98 3e       	cpi	r25, 0xE8	; 232
    62c2:	dc f3       	brlt	.-10     	; 0x62ba <__mulsf3_pse+0x82>
    62c4:	86 95       	lsr	r24
    62c6:	77 95       	ror	r23
    62c8:	67 95       	ror	r22
    62ca:	b7 95       	ror	r27
    62cc:	f7 95       	ror	r31
    62ce:	e7 95       	ror	r30
    62d0:	9f 5f       	subi	r25, 0xFF	; 255
    62d2:	c1 f7       	brne	.-16     	; 0x62c4 <__mulsf3_pse+0x8c>
    62d4:	fe 2b       	or	r31, r30
    62d6:	88 0f       	add	r24, r24
    62d8:	91 1d       	adc	r25, r1
    62da:	96 95       	lsr	r25
    62dc:	87 95       	ror	r24
    62de:	97 f9       	bld	r25, 7
    62e0:	08 95       	ret

000062e2 <sin>:
    62e2:	9f 93       	push	r25
    62e4:	70 de       	rcall	.-800    	; 0x5fc6 <__fp_rempio2>
    62e6:	0f 90       	pop	r0
    62e8:	07 fc       	sbrc	r0, 7
    62ea:	ee 5f       	subi	r30, 0xFE	; 254
    62ec:	a4 ce       	rjmp	.-696    	; 0x6036 <__fp_sinus>
    62ee:	11 f4       	brne	.+4      	; 0x62f4 <sin+0x12>
    62f0:	0e f4       	brtc	.+2      	; 0x62f4 <sin+0x12>
    62f2:	32 ce       	rjmp	.-924    	; 0x5f58 <__fp_nan>
    62f4:	41 c0       	rjmp	.+130    	; 0x6378 <__fp_mpack>

000062f6 <sqrt>:
    62f6:	b8 de       	rcall	.-656    	; 0x6068 <__fp_splitA>
    62f8:	d0 f3       	brcs	.-12     	; 0x62ee <sin+0xc>
    62fa:	99 23       	and	r25, r25
    62fc:	d9 f3       	breq	.-10     	; 0x62f4 <sin+0x12>
    62fe:	ce f3       	brts	.-14     	; 0x62f2 <sin+0x10>
    6300:	9f 57       	subi	r25, 0x7F	; 127
    6302:	55 0b       	sbc	r21, r21
    6304:	87 ff       	sbrs	r24, 7
    6306:	46 d0       	rcall	.+140    	; 0x6394 <__fp_norm2>
    6308:	00 24       	eor	r0, r0
    630a:	a0 e6       	ldi	r26, 0x60	; 96
    630c:	40 ea       	ldi	r20, 0xA0	; 160
    630e:	90 01       	movw	r18, r0
    6310:	80 58       	subi	r24, 0x80	; 128
    6312:	56 95       	lsr	r21
    6314:	97 95       	ror	r25
    6316:	28 f4       	brcc	.+10     	; 0x6322 <sqrt+0x2c>
    6318:	80 5c       	subi	r24, 0xC0	; 192
    631a:	66 0f       	add	r22, r22
    631c:	77 1f       	adc	r23, r23
    631e:	88 1f       	adc	r24, r24
    6320:	20 f0       	brcs	.+8      	; 0x632a <sqrt+0x34>
    6322:	26 17       	cp	r18, r22
    6324:	37 07       	cpc	r19, r23
    6326:	48 07       	cpc	r20, r24
    6328:	30 f4       	brcc	.+12     	; 0x6336 <sqrt+0x40>
    632a:	62 1b       	sub	r22, r18
    632c:	73 0b       	sbc	r23, r19
    632e:	84 0b       	sbc	r24, r20
    6330:	20 29       	or	r18, r0
    6332:	31 29       	or	r19, r1
    6334:	4a 2b       	or	r20, r26
    6336:	a6 95       	lsr	r26
    6338:	17 94       	ror	r1
    633a:	07 94       	ror	r0
    633c:	20 25       	eor	r18, r0
    633e:	31 25       	eor	r19, r1
    6340:	4a 27       	eor	r20, r26
    6342:	58 f7       	brcc	.-42     	; 0x631a <sqrt+0x24>
    6344:	66 0f       	add	r22, r22
    6346:	77 1f       	adc	r23, r23
    6348:	88 1f       	adc	r24, r24
    634a:	20 f0       	brcs	.+8      	; 0x6354 <sqrt+0x5e>
    634c:	26 17       	cp	r18, r22
    634e:	37 07       	cpc	r19, r23
    6350:	48 07       	cpc	r20, r24
    6352:	30 f4       	brcc	.+12     	; 0x6360 <sqrt+0x6a>
    6354:	62 0b       	sbc	r22, r18
    6356:	73 0b       	sbc	r23, r19
    6358:	84 0b       	sbc	r24, r20
    635a:	20 0d       	add	r18, r0
    635c:	31 1d       	adc	r19, r1
    635e:	41 1d       	adc	r20, r1
    6360:	a0 95       	com	r26
    6362:	81 f7       	brne	.-32     	; 0x6344 <sqrt+0x4e>
    6364:	b9 01       	movw	r22, r18
    6366:	84 2f       	mov	r24, r20
    6368:	91 58       	subi	r25, 0x81	; 129
    636a:	88 0f       	add	r24, r24
    636c:	96 95       	lsr	r25
    636e:	87 95       	ror	r24
    6370:	08 95       	ret

00006372 <square>:
    6372:	9b 01       	movw	r18, r22
    6374:	ac 01       	movw	r20, r24
    6376:	52 cf       	rjmp	.-348    	; 0x621c <__mulsf3>

00006378 <__fp_mpack>:
    6378:	9f 3f       	cpi	r25, 0xFF	; 255
    637a:	31 f0       	breq	.+12     	; 0x6388 <__fp_mpack_finite+0xc>

0000637c <__fp_mpack_finite>:
    637c:	91 50       	subi	r25, 0x01	; 1
    637e:	20 f4       	brcc	.+8      	; 0x6388 <__fp_mpack_finite+0xc>
    6380:	87 95       	ror	r24
    6382:	77 95       	ror	r23
    6384:	67 95       	ror	r22
    6386:	b7 95       	ror	r27
    6388:	88 0f       	add	r24, r24
    638a:	91 1d       	adc	r25, r1
    638c:	96 95       	lsr	r25
    638e:	87 95       	ror	r24
    6390:	97 f9       	bld	r25, 7
    6392:	08 95       	ret

00006394 <__fp_norm2>:
    6394:	91 50       	subi	r25, 0x01	; 1
    6396:	50 40       	sbci	r21, 0x00	; 0
    6398:	66 0f       	add	r22, r22
    639a:	77 1f       	adc	r23, r23
    639c:	88 1f       	adc	r24, r24
    639e:	d2 f7       	brpl	.-12     	; 0x6394 <__fp_norm2>
    63a0:	08 95       	ret

000063a2 <__fp_powsodd>:
    63a2:	9f 93       	push	r25
    63a4:	8f 93       	push	r24
    63a6:	7f 93       	push	r23
    63a8:	6f 93       	push	r22
    63aa:	ff 93       	push	r31
    63ac:	ef 93       	push	r30
    63ae:	9b 01       	movw	r18, r22
    63b0:	ac 01       	movw	r20, r24
    63b2:	34 df       	rcall	.-408    	; 0x621c <__mulsf3>
    63b4:	ef 91       	pop	r30
    63b6:	ff 91       	pop	r31
    63b8:	d2 dd       	rcall	.-1116   	; 0x5f5e <__fp_powser>
    63ba:	2f 91       	pop	r18
    63bc:	3f 91       	pop	r19
    63be:	4f 91       	pop	r20
    63c0:	5f 91       	pop	r21
    63c2:	2c cf       	rjmp	.-424    	; 0x621c <__mulsf3>

000063c4 <__divmodhi4>:
    63c4:	97 fb       	bst	r25, 7
    63c6:	07 2e       	mov	r0, r23
    63c8:	16 f4       	brtc	.+4      	; 0x63ce <__divmodhi4+0xa>
    63ca:	00 94       	com	r0
    63cc:	07 d0       	rcall	.+14     	; 0x63dc <__divmodhi4_neg1>
    63ce:	77 fd       	sbrc	r23, 7
    63d0:	09 d0       	rcall	.+18     	; 0x63e4 <__divmodhi4_neg2>
    63d2:	0e 94 fc 31 	call	0x63f8	; 0x63f8 <__udivmodhi4>
    63d6:	07 fc       	sbrc	r0, 7
    63d8:	05 d0       	rcall	.+10     	; 0x63e4 <__divmodhi4_neg2>
    63da:	3e f4       	brtc	.+14     	; 0x63ea <__divmodhi4_exit>

000063dc <__divmodhi4_neg1>:
    63dc:	90 95       	com	r25
    63de:	81 95       	neg	r24
    63e0:	9f 4f       	sbci	r25, 0xFF	; 255
    63e2:	08 95       	ret

000063e4 <__divmodhi4_neg2>:
    63e4:	70 95       	com	r23
    63e6:	61 95       	neg	r22
    63e8:	7f 4f       	sbci	r23, 0xFF	; 255

000063ea <__divmodhi4_exit>:
    63ea:	08 95       	ret

000063ec <__tablejump2__>:
    63ec:	ee 0f       	add	r30, r30
    63ee:	ff 1f       	adc	r31, r31

000063f0 <__tablejump__>:
    63f0:	05 90       	lpm	r0, Z+
    63f2:	f4 91       	lpm	r31, Z
    63f4:	e0 2d       	mov	r30, r0
    63f6:	09 94       	ijmp

000063f8 <__udivmodhi4>:
    63f8:	aa 1b       	sub	r26, r26
    63fa:	bb 1b       	sub	r27, r27
    63fc:	51 e1       	ldi	r21, 0x11	; 17
    63fe:	07 c0       	rjmp	.+14     	; 0x640e <__udivmodhi4_ep>

00006400 <__udivmodhi4_loop>:
    6400:	aa 1f       	adc	r26, r26
    6402:	bb 1f       	adc	r27, r27
    6404:	a6 17       	cp	r26, r22
    6406:	b7 07       	cpc	r27, r23
    6408:	10 f0       	brcs	.+4      	; 0x640e <__udivmodhi4_ep>
    640a:	a6 1b       	sub	r26, r22
    640c:	b7 0b       	sbc	r27, r23

0000640e <__udivmodhi4_ep>:
    640e:	88 1f       	adc	r24, r24
    6410:	99 1f       	adc	r25, r25
    6412:	5a 95       	dec	r21
    6414:	a9 f7       	brne	.-22     	; 0x6400 <__udivmodhi4_loop>
    6416:	80 95       	com	r24
    6418:	90 95       	com	r25
    641a:	bc 01       	movw	r22, r24
    641c:	cd 01       	movw	r24, r26
    641e:	08 95       	ret

00006420 <malloc>:
    6420:	cf 93       	push	r28
    6422:	df 93       	push	r29
    6424:	82 30       	cpi	r24, 0x02	; 2
    6426:	91 05       	cpc	r25, r1
    6428:	10 f4       	brcc	.+4      	; 0x642e <malloc+0xe>
    642a:	82 e0       	ldi	r24, 0x02	; 2
    642c:	90 e0       	ldi	r25, 0x00	; 0
    642e:	e0 91 15 01 	lds	r30, 0x0115
    6432:	f0 91 16 01 	lds	r31, 0x0116
    6436:	20 e0       	ldi	r18, 0x00	; 0
    6438:	30 e0       	ldi	r19, 0x00	; 0
    643a:	a0 e0       	ldi	r26, 0x00	; 0
    643c:	b0 e0       	ldi	r27, 0x00	; 0
    643e:	30 97       	sbiw	r30, 0x00	; 0
    6440:	39 f1       	breq	.+78     	; 0x6490 <malloc+0x70>
    6442:	40 81       	ld	r20, Z
    6444:	51 81       	ldd	r21, Z+1	; 0x01
    6446:	48 17       	cp	r20, r24
    6448:	59 07       	cpc	r21, r25
    644a:	b8 f0       	brcs	.+46     	; 0x647a <malloc+0x5a>
    644c:	48 17       	cp	r20, r24
    644e:	59 07       	cpc	r21, r25
    6450:	71 f4       	brne	.+28     	; 0x646e <malloc+0x4e>
    6452:	82 81       	ldd	r24, Z+2	; 0x02
    6454:	93 81       	ldd	r25, Z+3	; 0x03
    6456:	10 97       	sbiw	r26, 0x00	; 0
    6458:	29 f0       	breq	.+10     	; 0x6464 <malloc+0x44>
    645a:	13 96       	adiw	r26, 0x03	; 3
    645c:	9c 93       	st	X, r25
    645e:	8e 93       	st	-X, r24
    6460:	12 97       	sbiw	r26, 0x02	; 2
    6462:	2c c0       	rjmp	.+88     	; 0x64bc <malloc+0x9c>
    6464:	90 93 16 01 	sts	0x0116, r25
    6468:	80 93 15 01 	sts	0x0115, r24
    646c:	27 c0       	rjmp	.+78     	; 0x64bc <malloc+0x9c>
    646e:	21 15       	cp	r18, r1
    6470:	31 05       	cpc	r19, r1
    6472:	31 f0       	breq	.+12     	; 0x6480 <malloc+0x60>
    6474:	42 17       	cp	r20, r18
    6476:	53 07       	cpc	r21, r19
    6478:	18 f0       	brcs	.+6      	; 0x6480 <malloc+0x60>
    647a:	a9 01       	movw	r20, r18
    647c:	db 01       	movw	r26, r22
    647e:	01 c0       	rjmp	.+2      	; 0x6482 <malloc+0x62>
    6480:	ef 01       	movw	r28, r30
    6482:	9a 01       	movw	r18, r20
    6484:	bd 01       	movw	r22, r26
    6486:	df 01       	movw	r26, r30
    6488:	02 80       	ldd	r0, Z+2	; 0x02
    648a:	f3 81       	ldd	r31, Z+3	; 0x03
    648c:	e0 2d       	mov	r30, r0
    648e:	d7 cf       	rjmp	.-82     	; 0x643e <malloc+0x1e>
    6490:	21 15       	cp	r18, r1
    6492:	31 05       	cpc	r19, r1
    6494:	f9 f0       	breq	.+62     	; 0x64d4 <malloc+0xb4>
    6496:	28 1b       	sub	r18, r24
    6498:	39 0b       	sbc	r19, r25
    649a:	24 30       	cpi	r18, 0x04	; 4
    649c:	31 05       	cpc	r19, r1
    649e:	80 f4       	brcc	.+32     	; 0x64c0 <malloc+0xa0>
    64a0:	8a 81       	ldd	r24, Y+2	; 0x02
    64a2:	9b 81       	ldd	r25, Y+3	; 0x03
    64a4:	61 15       	cp	r22, r1
    64a6:	71 05       	cpc	r23, r1
    64a8:	21 f0       	breq	.+8      	; 0x64b2 <malloc+0x92>
    64aa:	fb 01       	movw	r30, r22
    64ac:	93 83       	std	Z+3, r25	; 0x03
    64ae:	82 83       	std	Z+2, r24	; 0x02
    64b0:	04 c0       	rjmp	.+8      	; 0x64ba <malloc+0x9a>
    64b2:	90 93 16 01 	sts	0x0116, r25
    64b6:	80 93 15 01 	sts	0x0115, r24
    64ba:	fe 01       	movw	r30, r28
    64bc:	32 96       	adiw	r30, 0x02	; 2
    64be:	44 c0       	rjmp	.+136    	; 0x6548 <malloc+0x128>
    64c0:	fe 01       	movw	r30, r28
    64c2:	e2 0f       	add	r30, r18
    64c4:	f3 1f       	adc	r31, r19
    64c6:	81 93       	st	Z+, r24
    64c8:	91 93       	st	Z+, r25
    64ca:	22 50       	subi	r18, 0x02	; 2
    64cc:	31 09       	sbc	r19, r1
    64ce:	39 83       	std	Y+1, r19	; 0x01
    64d0:	28 83       	st	Y, r18
    64d2:	3a c0       	rjmp	.+116    	; 0x6548 <malloc+0x128>
    64d4:	20 91 13 01 	lds	r18, 0x0113
    64d8:	30 91 14 01 	lds	r19, 0x0114
    64dc:	23 2b       	or	r18, r19
    64de:	41 f4       	brne	.+16     	; 0x64f0 <malloc+0xd0>
    64e0:	20 91 62 00 	lds	r18, 0x0062
    64e4:	30 91 63 00 	lds	r19, 0x0063
    64e8:	30 93 14 01 	sts	0x0114, r19
    64ec:	20 93 13 01 	sts	0x0113, r18
    64f0:	20 91 60 00 	lds	r18, 0x0060
    64f4:	30 91 61 00 	lds	r19, 0x0061
    64f8:	21 15       	cp	r18, r1
    64fa:	31 05       	cpc	r19, r1
    64fc:	41 f4       	brne	.+16     	; 0x650e <malloc+0xee>
    64fe:	2d b7       	in	r18, 0x3d	; 61
    6500:	3e b7       	in	r19, 0x3e	; 62
    6502:	40 91 64 00 	lds	r20, 0x0064
    6506:	50 91 65 00 	lds	r21, 0x0065
    650a:	24 1b       	sub	r18, r20
    650c:	35 0b       	sbc	r19, r21
    650e:	e0 91 13 01 	lds	r30, 0x0113
    6512:	f0 91 14 01 	lds	r31, 0x0114
    6516:	e2 17       	cp	r30, r18
    6518:	f3 07       	cpc	r31, r19
    651a:	a0 f4       	brcc	.+40     	; 0x6544 <malloc+0x124>
    651c:	2e 1b       	sub	r18, r30
    651e:	3f 0b       	sbc	r19, r31
    6520:	28 17       	cp	r18, r24
    6522:	39 07       	cpc	r19, r25
    6524:	78 f0       	brcs	.+30     	; 0x6544 <malloc+0x124>
    6526:	ac 01       	movw	r20, r24
    6528:	4e 5f       	subi	r20, 0xFE	; 254
    652a:	5f 4f       	sbci	r21, 0xFF	; 255
    652c:	24 17       	cp	r18, r20
    652e:	35 07       	cpc	r19, r21
    6530:	48 f0       	brcs	.+18     	; 0x6544 <malloc+0x124>
    6532:	4e 0f       	add	r20, r30
    6534:	5f 1f       	adc	r21, r31
    6536:	50 93 14 01 	sts	0x0114, r21
    653a:	40 93 13 01 	sts	0x0113, r20
    653e:	81 93       	st	Z+, r24
    6540:	91 93       	st	Z+, r25
    6542:	02 c0       	rjmp	.+4      	; 0x6548 <malloc+0x128>
    6544:	e0 e0       	ldi	r30, 0x00	; 0
    6546:	f0 e0       	ldi	r31, 0x00	; 0
    6548:	cf 01       	movw	r24, r30
    654a:	df 91       	pop	r29
    654c:	cf 91       	pop	r28
    654e:	08 95       	ret

00006550 <free>:
    6550:	cf 93       	push	r28
    6552:	df 93       	push	r29
    6554:	00 97       	sbiw	r24, 0x00	; 0
    6556:	09 f4       	brne	.+2      	; 0x655a <free+0xa>
    6558:	87 c0       	rjmp	.+270    	; 0x6668 <free+0x118>
    655a:	fc 01       	movw	r30, r24
    655c:	32 97       	sbiw	r30, 0x02	; 2
    655e:	13 82       	std	Z+3, r1	; 0x03
    6560:	12 82       	std	Z+2, r1	; 0x02
    6562:	c0 91 15 01 	lds	r28, 0x0115
    6566:	d0 91 16 01 	lds	r29, 0x0116
    656a:	20 97       	sbiw	r28, 0x00	; 0
    656c:	81 f4       	brne	.+32     	; 0x658e <free+0x3e>
    656e:	20 81       	ld	r18, Z
    6570:	31 81       	ldd	r19, Z+1	; 0x01
    6572:	28 0f       	add	r18, r24
    6574:	39 1f       	adc	r19, r25
    6576:	80 91 13 01 	lds	r24, 0x0113
    657a:	90 91 14 01 	lds	r25, 0x0114
    657e:	82 17       	cp	r24, r18
    6580:	93 07       	cpc	r25, r19
    6582:	79 f5       	brne	.+94     	; 0x65e2 <free+0x92>
    6584:	f0 93 14 01 	sts	0x0114, r31
    6588:	e0 93 13 01 	sts	0x0113, r30
    658c:	6d c0       	rjmp	.+218    	; 0x6668 <free+0x118>
    658e:	de 01       	movw	r26, r28
    6590:	20 e0       	ldi	r18, 0x00	; 0
    6592:	30 e0       	ldi	r19, 0x00	; 0
    6594:	ae 17       	cp	r26, r30
    6596:	bf 07       	cpc	r27, r31
    6598:	50 f4       	brcc	.+20     	; 0x65ae <free+0x5e>
    659a:	12 96       	adiw	r26, 0x02	; 2
    659c:	4d 91       	ld	r20, X+
    659e:	5c 91       	ld	r21, X
    65a0:	13 97       	sbiw	r26, 0x03	; 3
    65a2:	9d 01       	movw	r18, r26
    65a4:	41 15       	cp	r20, r1
    65a6:	51 05       	cpc	r21, r1
    65a8:	09 f1       	breq	.+66     	; 0x65ec <free+0x9c>
    65aa:	da 01       	movw	r26, r20
    65ac:	f3 cf       	rjmp	.-26     	; 0x6594 <free+0x44>
    65ae:	b3 83       	std	Z+3, r27	; 0x03
    65b0:	a2 83       	std	Z+2, r26	; 0x02
    65b2:	40 81       	ld	r20, Z
    65b4:	51 81       	ldd	r21, Z+1	; 0x01
    65b6:	84 0f       	add	r24, r20
    65b8:	95 1f       	adc	r25, r21
    65ba:	8a 17       	cp	r24, r26
    65bc:	9b 07       	cpc	r25, r27
    65be:	71 f4       	brne	.+28     	; 0x65dc <free+0x8c>
    65c0:	8d 91       	ld	r24, X+
    65c2:	9c 91       	ld	r25, X
    65c4:	11 97       	sbiw	r26, 0x01	; 1
    65c6:	84 0f       	add	r24, r20
    65c8:	95 1f       	adc	r25, r21
    65ca:	02 96       	adiw	r24, 0x02	; 2
    65cc:	91 83       	std	Z+1, r25	; 0x01
    65ce:	80 83       	st	Z, r24
    65d0:	12 96       	adiw	r26, 0x02	; 2
    65d2:	8d 91       	ld	r24, X+
    65d4:	9c 91       	ld	r25, X
    65d6:	13 97       	sbiw	r26, 0x03	; 3
    65d8:	93 83       	std	Z+3, r25	; 0x03
    65da:	82 83       	std	Z+2, r24	; 0x02
    65dc:	21 15       	cp	r18, r1
    65de:	31 05       	cpc	r19, r1
    65e0:	29 f4       	brne	.+10     	; 0x65ec <free+0x9c>
    65e2:	f0 93 16 01 	sts	0x0116, r31
    65e6:	e0 93 15 01 	sts	0x0115, r30
    65ea:	3e c0       	rjmp	.+124    	; 0x6668 <free+0x118>
    65ec:	d9 01       	movw	r26, r18
    65ee:	13 96       	adiw	r26, 0x03	; 3
    65f0:	fc 93       	st	X, r31
    65f2:	ee 93       	st	-X, r30
    65f4:	12 97       	sbiw	r26, 0x02	; 2
    65f6:	4d 91       	ld	r20, X+
    65f8:	5d 91       	ld	r21, X+
    65fa:	a4 0f       	add	r26, r20
    65fc:	b5 1f       	adc	r27, r21
    65fe:	ea 17       	cp	r30, r26
    6600:	fb 07       	cpc	r31, r27
    6602:	79 f4       	brne	.+30     	; 0x6622 <free+0xd2>
    6604:	80 81       	ld	r24, Z
    6606:	91 81       	ldd	r25, Z+1	; 0x01
    6608:	84 0f       	add	r24, r20
    660a:	95 1f       	adc	r25, r21
    660c:	02 96       	adiw	r24, 0x02	; 2
    660e:	d9 01       	movw	r26, r18
    6610:	11 96       	adiw	r26, 0x01	; 1
    6612:	9c 93       	st	X, r25
    6614:	8e 93       	st	-X, r24
    6616:	82 81       	ldd	r24, Z+2	; 0x02
    6618:	93 81       	ldd	r25, Z+3	; 0x03
    661a:	13 96       	adiw	r26, 0x03	; 3
    661c:	9c 93       	st	X, r25
    661e:	8e 93       	st	-X, r24
    6620:	12 97       	sbiw	r26, 0x02	; 2
    6622:	e0 e0       	ldi	r30, 0x00	; 0
    6624:	f0 e0       	ldi	r31, 0x00	; 0
    6626:	8a 81       	ldd	r24, Y+2	; 0x02
    6628:	9b 81       	ldd	r25, Y+3	; 0x03
    662a:	00 97       	sbiw	r24, 0x00	; 0
    662c:	19 f0       	breq	.+6      	; 0x6634 <free+0xe4>
    662e:	fe 01       	movw	r30, r28
    6630:	ec 01       	movw	r28, r24
    6632:	f9 cf       	rjmp	.-14     	; 0x6626 <free+0xd6>
    6634:	ce 01       	movw	r24, r28
    6636:	02 96       	adiw	r24, 0x02	; 2
    6638:	28 81       	ld	r18, Y
    663a:	39 81       	ldd	r19, Y+1	; 0x01
    663c:	82 0f       	add	r24, r18
    663e:	93 1f       	adc	r25, r19
    6640:	20 91 13 01 	lds	r18, 0x0113
    6644:	30 91 14 01 	lds	r19, 0x0114
    6648:	28 17       	cp	r18, r24
    664a:	39 07       	cpc	r19, r25
    664c:	69 f4       	brne	.+26     	; 0x6668 <free+0x118>
    664e:	30 97       	sbiw	r30, 0x00	; 0
    6650:	29 f4       	brne	.+10     	; 0x665c <free+0x10c>
    6652:	10 92 16 01 	sts	0x0116, r1
    6656:	10 92 15 01 	sts	0x0115, r1
    665a:	02 c0       	rjmp	.+4      	; 0x6660 <free+0x110>
    665c:	13 82       	std	Z+3, r1	; 0x03
    665e:	12 82       	std	Z+2, r1	; 0x02
    6660:	d0 93 14 01 	sts	0x0114, r29
    6664:	c0 93 13 01 	sts	0x0113, r28
    6668:	df 91       	pop	r29
    666a:	cf 91       	pop	r28
    666c:	08 95       	ret

0000666e <do_rand>:
    666e:	8f 92       	push	r8
    6670:	9f 92       	push	r9
    6672:	af 92       	push	r10
    6674:	bf 92       	push	r11
    6676:	cf 92       	push	r12
    6678:	df 92       	push	r13
    667a:	ef 92       	push	r14
    667c:	ff 92       	push	r15
    667e:	cf 93       	push	r28
    6680:	df 93       	push	r29
    6682:	ec 01       	movw	r28, r24
    6684:	68 81       	ld	r22, Y
    6686:	79 81       	ldd	r23, Y+1	; 0x01
    6688:	8a 81       	ldd	r24, Y+2	; 0x02
    668a:	9b 81       	ldd	r25, Y+3	; 0x03
    668c:	61 15       	cp	r22, r1
    668e:	71 05       	cpc	r23, r1
    6690:	81 05       	cpc	r24, r1
    6692:	91 05       	cpc	r25, r1
    6694:	21 f4       	brne	.+8      	; 0x669e <do_rand+0x30>
    6696:	64 e2       	ldi	r22, 0x24	; 36
    6698:	79 ed       	ldi	r23, 0xD9	; 217
    669a:	8b e5       	ldi	r24, 0x5B	; 91
    669c:	97 e0       	ldi	r25, 0x07	; 7
    669e:	2d e1       	ldi	r18, 0x1D	; 29
    66a0:	33 ef       	ldi	r19, 0xF3	; 243
    66a2:	41 e0       	ldi	r20, 0x01	; 1
    66a4:	50 e0       	ldi	r21, 0x00	; 0
    66a6:	0e 94 d8 37 	call	0x6fb0	; 0x6fb0 <__divmodsi4>
    66aa:	49 01       	movw	r8, r18
    66ac:	5a 01       	movw	r10, r20
    66ae:	9b 01       	movw	r18, r22
    66b0:	ac 01       	movw	r20, r24
    66b2:	a7 ea       	ldi	r26, 0xA7	; 167
    66b4:	b1 e4       	ldi	r27, 0x41	; 65
    66b6:	0e 94 f7 37 	call	0x6fee	; 0x6fee <__muluhisi3>
    66ba:	6b 01       	movw	r12, r22
    66bc:	7c 01       	movw	r14, r24
    66be:	ac ee       	ldi	r26, 0xEC	; 236
    66c0:	b4 ef       	ldi	r27, 0xF4	; 244
    66c2:	a5 01       	movw	r20, r10
    66c4:	94 01       	movw	r18, r8
    66c6:	0e 94 05 38 	call	0x700a	; 0x700a <__mulohisi3>
    66ca:	c6 0e       	add	r12, r22
    66cc:	d7 1e       	adc	r13, r23
    66ce:	e8 1e       	adc	r14, r24
    66d0:	f9 1e       	adc	r15, r25
    66d2:	f7 fe       	sbrs	r15, 7
    66d4:	06 c0       	rjmp	.+12     	; 0x66e2 <do_rand+0x74>
    66d6:	81 e0       	ldi	r24, 0x01	; 1
    66d8:	c8 1a       	sub	r12, r24
    66da:	d1 08       	sbc	r13, r1
    66dc:	e1 08       	sbc	r14, r1
    66de:	80 e8       	ldi	r24, 0x80	; 128
    66e0:	f8 0a       	sbc	r15, r24
    66e2:	c8 82       	st	Y, r12
    66e4:	d9 82       	std	Y+1, r13	; 0x01
    66e6:	ea 82       	std	Y+2, r14	; 0x02
    66e8:	fb 82       	std	Y+3, r15	; 0x03
    66ea:	c6 01       	movw	r24, r12
    66ec:	9f 77       	andi	r25, 0x7F	; 127
    66ee:	df 91       	pop	r29
    66f0:	cf 91       	pop	r28
    66f2:	ff 90       	pop	r15
    66f4:	ef 90       	pop	r14
    66f6:	df 90       	pop	r13
    66f8:	cf 90       	pop	r12
    66fa:	bf 90       	pop	r11
    66fc:	af 90       	pop	r10
    66fe:	9f 90       	pop	r9
    6700:	8f 90       	pop	r8
    6702:	08 95       	ret

00006704 <rand_r>:
    6704:	0e 94 37 33 	call	0x666e	; 0x666e <do_rand>
    6708:	08 95       	ret

0000670a <rand>:
    670a:	86 e6       	ldi	r24, 0x66	; 102
    670c:	90 e0       	ldi	r25, 0x00	; 0
    670e:	0e 94 37 33 	call	0x666e	; 0x666e <do_rand>
    6712:	08 95       	ret

00006714 <srand>:
    6714:	a0 e0       	ldi	r26, 0x00	; 0
    6716:	b0 e0       	ldi	r27, 0x00	; 0
    6718:	80 93 66 00 	sts	0x0066, r24
    671c:	90 93 67 00 	sts	0x0067, r25
    6720:	a0 93 68 00 	sts	0x0068, r26
    6724:	b0 93 69 00 	sts	0x0069, r27
    6728:	08 95       	ret

0000672a <strtol>:
    672a:	2f 92       	push	r2
    672c:	3f 92       	push	r3
    672e:	5f 92       	push	r5
    6730:	6f 92       	push	r6
    6732:	7f 92       	push	r7
    6734:	8f 92       	push	r8
    6736:	9f 92       	push	r9
    6738:	af 92       	push	r10
    673a:	bf 92       	push	r11
    673c:	cf 92       	push	r12
    673e:	df 92       	push	r13
    6740:	ef 92       	push	r14
    6742:	ff 92       	push	r15
    6744:	0f 93       	push	r16
    6746:	1f 93       	push	r17
    6748:	cf 93       	push	r28
    674a:	df 93       	push	r29
    674c:	8b 01       	movw	r16, r22
    674e:	ea 01       	movw	r28, r20
    6750:	61 15       	cp	r22, r1
    6752:	71 05       	cpc	r23, r1
    6754:	21 f0       	breq	.+8      	; 0x675e <strtol+0x34>
    6756:	db 01       	movw	r26, r22
    6758:	8c 93       	st	X, r24
    675a:	11 96       	adiw	r26, 0x01	; 1
    675c:	9c 93       	st	X, r25
    675e:	20 97       	sbiw	r28, 0x00	; 0
    6760:	39 f0       	breq	.+14     	; 0x6770 <strtol+0x46>
    6762:	9e 01       	movw	r18, r28
    6764:	22 50       	subi	r18, 0x02	; 2
    6766:	31 09       	sbc	r19, r1
    6768:	23 32       	cpi	r18, 0x23	; 35
    676a:	31 05       	cpc	r19, r1
    676c:	08 f0       	brcs	.+2      	; 0x6770 <strtol+0x46>
    676e:	fb c0       	rjmp	.+502    	; 0x6966 <strtol+0x23c>
    6770:	7c 01       	movw	r14, r24
    6772:	67 01       	movw	r12, r14
    6774:	bf ef       	ldi	r27, 0xFF	; 255
    6776:	cb 1a       	sub	r12, r27
    6778:	db 0a       	sbc	r13, r27
    677a:	56 01       	movw	r10, r12
    677c:	f7 01       	movw	r30, r14
    677e:	60 80       	ld	r6, Z
    6780:	86 2d       	mov	r24, r6
    6782:	90 e0       	ldi	r25, 0x00	; 0
    6784:	0e 94 c9 34 	call	0x6992	; 0x6992 <isspace>
    6788:	89 2b       	or	r24, r25
    678a:	11 f0       	breq	.+4      	; 0x6790 <strtol+0x66>
    678c:	76 01       	movw	r14, r12
    678e:	f1 cf       	rjmp	.-30     	; 0x6772 <strtol+0x48>
    6790:	fd e2       	ldi	r31, 0x2D	; 45
    6792:	6f 12       	cpse	r6, r31
    6794:	0a c0       	rjmp	.+20     	; 0x67aa <strtol+0x80>
    6796:	57 01       	movw	r10, r14
    6798:	82 e0       	ldi	r24, 0x02	; 2
    679a:	a8 0e       	add	r10, r24
    679c:	b1 1c       	adc	r11, r1
    679e:	d7 01       	movw	r26, r14
    67a0:	11 96       	adiw	r26, 0x01	; 1
    67a2:	6c 90       	ld	r6, X
    67a4:	77 24       	eor	r7, r7
    67a6:	73 94       	inc	r7
    67a8:	0b c0       	rjmp	.+22     	; 0x67c0 <strtol+0x96>
    67aa:	bb e2       	ldi	r27, 0x2B	; 43
    67ac:	6b 12       	cpse	r6, r27
    67ae:	07 c0       	rjmp	.+14     	; 0x67be <strtol+0x94>
    67b0:	57 01       	movw	r10, r14
    67b2:	e2 e0       	ldi	r30, 0x02	; 2
    67b4:	ae 0e       	add	r10, r30
    67b6:	b1 1c       	adc	r11, r1
    67b8:	d7 01       	movw	r26, r14
    67ba:	11 96       	adiw	r26, 0x01	; 1
    67bc:	6c 90       	ld	r6, X
    67be:	71 2c       	mov	r7, r1
    67c0:	ce 01       	movw	r24, r28
    67c2:	8f 7e       	andi	r24, 0xEF	; 239
    67c4:	89 2b       	or	r24, r25
    67c6:	89 f4       	brne	.+34     	; 0x67ea <strtol+0xc0>
    67c8:	b0 e3       	ldi	r27, 0x30	; 48
    67ca:	6b 12       	cpse	r6, r27
    67cc:	22 c0       	rjmp	.+68     	; 0x6812 <strtol+0xe8>
    67ce:	f5 01       	movw	r30, r10
    67d0:	80 81       	ld	r24, Z
    67d2:	8f 7d       	andi	r24, 0xDF	; 223
    67d4:	88 35       	cpi	r24, 0x58	; 88
    67d6:	41 f5       	brne	.+80     	; 0x6828 <strtol+0xfe>
    67d8:	61 80       	ldd	r6, Z+1	; 0x01
    67da:	f2 e0       	ldi	r31, 0x02	; 2
    67dc:	af 0e       	add	r10, r31
    67de:	b1 1c       	adc	r11, r1
    67e0:	87 2d       	mov	r24, r7
    67e2:	82 60       	ori	r24, 0x02	; 2
    67e4:	78 2e       	mov	r7, r24
    67e6:	c0 e1       	ldi	r28, 0x10	; 16
    67e8:	d0 e0       	ldi	r29, 0x00	; 0
    67ea:	c8 30       	cpi	r28, 0x08	; 8
    67ec:	d1 05       	cpc	r29, r1
    67ee:	f1 f0       	breq	.+60     	; 0x682c <strtol+0x102>
    67f0:	4c f4       	brge	.+18     	; 0x6804 <strtol+0xda>
    67f2:	c2 30       	cpi	r28, 0x02	; 2
    67f4:	d1 05       	cpc	r29, r1
    67f6:	11 f5       	brne	.+68     	; 0x683c <strtol+0x112>
    67f8:	c1 2c       	mov	r12, r1
    67fa:	d1 2c       	mov	r13, r1
    67fc:	e1 2c       	mov	r14, r1
    67fe:	b0 e4       	ldi	r27, 0x40	; 64
    6800:	fb 2e       	mov	r15, r27
    6802:	2f c0       	rjmp	.+94     	; 0x6862 <strtol+0x138>
    6804:	ca 30       	cpi	r28, 0x0A	; 10
    6806:	d1 05       	cpc	r29, r1
    6808:	31 f0       	breq	.+12     	; 0x6816 <strtol+0xec>
    680a:	c0 31       	cpi	r28, 0x10	; 16
    680c:	d1 05       	cpc	r29, r1
    680e:	21 f1       	breq	.+72     	; 0x6858 <strtol+0x12e>
    6810:	15 c0       	rjmp	.+42     	; 0x683c <strtol+0x112>
    6812:	20 97       	sbiw	r28, 0x00	; 0
    6814:	51 f7       	brne	.-44     	; 0x67ea <strtol+0xc0>
    6816:	ca e0       	ldi	r28, 0x0A	; 10
    6818:	d0 e0       	ldi	r29, 0x00	; 0
    681a:	ac ec       	ldi	r26, 0xCC	; 204
    681c:	ca 2e       	mov	r12, r26
    681e:	dc 2c       	mov	r13, r12
    6820:	ec 2c       	mov	r14, r12
    6822:	ac e0       	ldi	r26, 0x0C	; 12
    6824:	fa 2e       	mov	r15, r26
    6826:	1d c0       	rjmp	.+58     	; 0x6862 <strtol+0x138>
    6828:	20 97       	sbiw	r28, 0x00	; 0
    682a:	f9 f6       	brne	.-66     	; 0x67ea <strtol+0xc0>
    682c:	c8 e0       	ldi	r28, 0x08	; 8
    682e:	d0 e0       	ldi	r29, 0x00	; 0
    6830:	c1 2c       	mov	r12, r1
    6832:	d1 2c       	mov	r13, r1
    6834:	e1 2c       	mov	r14, r1
    6836:	f0 e1       	ldi	r31, 0x10	; 16
    6838:	ff 2e       	mov	r15, r31
    683a:	13 c0       	rjmp	.+38     	; 0x6862 <strtol+0x138>
    683c:	60 e0       	ldi	r22, 0x00	; 0
    683e:	70 e0       	ldi	r23, 0x00	; 0
    6840:	80 e0       	ldi	r24, 0x00	; 0
    6842:	90 e8       	ldi	r25, 0x80	; 128
    6844:	9e 01       	movw	r18, r28
    6846:	44 27       	eor	r20, r20
    6848:	37 fd       	sbrc	r19, 7
    684a:	40 95       	com	r20
    684c:	54 2f       	mov	r21, r20
    684e:	0e 94 b6 37 	call	0x6f6c	; 0x6f6c <__udivmodsi4>
    6852:	69 01       	movw	r12, r18
    6854:	7a 01       	movw	r14, r20
    6856:	05 c0       	rjmp	.+10     	; 0x6862 <strtol+0x138>
    6858:	c1 2c       	mov	r12, r1
    685a:	d1 2c       	mov	r13, r1
    685c:	e1 2c       	mov	r14, r1
    685e:	e8 e0       	ldi	r30, 0x08	; 8
    6860:	fe 2e       	mov	r15, r30
    6862:	f5 01       	movw	r30, r10
    6864:	60 e0       	ldi	r22, 0x00	; 0
    6866:	20 e0       	ldi	r18, 0x00	; 0
    6868:	30 e0       	ldi	r19, 0x00	; 0
    686a:	a9 01       	movw	r20, r18
    686c:	4e 01       	movw	r8, r28
    686e:	aa 24       	eor	r10, r10
    6870:	97 fc       	sbrc	r9, 7
    6872:	a0 94       	com	r10
    6874:	ba 2c       	mov	r11, r10
    6876:	1f 01       	movw	r2, r30
    6878:	70 ed       	ldi	r23, 0xD0	; 208
    687a:	57 2e       	mov	r5, r23
    687c:	56 0c       	add	r5, r6
    687e:	a9 e0       	ldi	r26, 0x09	; 9
    6880:	a5 15       	cp	r26, r5
    6882:	70 f4       	brcc	.+28     	; 0x68a0 <strtol+0x176>
    6884:	8f eb       	ldi	r24, 0xBF	; 191
    6886:	86 0d       	add	r24, r6
    6888:	8a 31       	cpi	r24, 0x1A	; 26
    688a:	18 f4       	brcc	.+6      	; 0x6892 <strtol+0x168>
    688c:	99 ec       	ldi	r25, 0xC9	; 201
    688e:	59 2e       	mov	r5, r25
    6890:	06 c0       	rjmp	.+12     	; 0x689e <strtol+0x174>
    6892:	8f e9       	ldi	r24, 0x9F	; 159
    6894:	86 0d       	add	r24, r6
    6896:	8a 31       	cpi	r24, 0x1A	; 26
    6898:	30 f5       	brcc	.+76     	; 0x68e6 <strtol+0x1bc>
    689a:	89 ea       	ldi	r24, 0xA9	; 169
    689c:	58 2e       	mov	r5, r24
    689e:	56 0c       	add	r5, r6
    68a0:	85 2d       	mov	r24, r5
    68a2:	90 e0       	ldi	r25, 0x00	; 0
    68a4:	8c 17       	cp	r24, r28
    68a6:	9d 07       	cpc	r25, r29
    68a8:	f4 f4       	brge	.+60     	; 0x68e6 <strtol+0x1bc>
    68aa:	67 fd       	sbrc	r22, 7
    68ac:	18 c0       	rjmp	.+48     	; 0x68de <strtol+0x1b4>
    68ae:	c2 16       	cp	r12, r18
    68b0:	d3 06       	cpc	r13, r19
    68b2:	e4 06       	cpc	r14, r20
    68b4:	f5 06       	cpc	r15, r21
    68b6:	80 f0       	brcs	.+32     	; 0x68d8 <strtol+0x1ae>
    68b8:	c5 01       	movw	r24, r10
    68ba:	b4 01       	movw	r22, r8
    68bc:	0e 94 a6 37 	call	0x6f4c	; 0x6f4c <__mulsi3>
    68c0:	9b 01       	movw	r18, r22
    68c2:	ac 01       	movw	r20, r24
    68c4:	25 0d       	add	r18, r5
    68c6:	31 1d       	adc	r19, r1
    68c8:	41 1d       	adc	r20, r1
    68ca:	51 1d       	adc	r21, r1
    68cc:	21 30       	cpi	r18, 0x01	; 1
    68ce:	31 05       	cpc	r19, r1
    68d0:	41 05       	cpc	r20, r1
    68d2:	b0 e8       	ldi	r27, 0x80	; 128
    68d4:	5b 07       	cpc	r21, r27
    68d6:	10 f0       	brcs	.+4      	; 0x68dc <strtol+0x1b2>
    68d8:	6f ef       	ldi	r22, 0xFF	; 255
    68da:	01 c0       	rjmp	.+2      	; 0x68de <strtol+0x1b4>
    68dc:	61 e0       	ldi	r22, 0x01	; 1
    68de:	31 96       	adiw	r30, 0x01	; 1
    68e0:	d1 01       	movw	r26, r2
    68e2:	6c 90       	ld	r6, X
    68e4:	c8 cf       	rjmp	.-112    	; 0x6876 <strtol+0x14c>
    68e6:	87 2d       	mov	r24, r7
    68e8:	81 70       	andi	r24, 0x01	; 1
    68ea:	01 15       	cp	r16, r1
    68ec:	11 05       	cpc	r17, r1
    68ee:	71 f0       	breq	.+28     	; 0x690c <strtol+0x1e2>
    68f0:	66 23       	and	r22, r22
    68f2:	29 f0       	breq	.+10     	; 0x68fe <strtol+0x1d4>
    68f4:	31 97       	sbiw	r30, 0x01	; 1
    68f6:	d8 01       	movw	r26, r16
    68f8:	ed 93       	st	X+, r30
    68fa:	fc 93       	st	X, r31
    68fc:	07 c0       	rjmp	.+14     	; 0x690c <strtol+0x1e2>
    68fe:	71 fe       	sbrs	r7, 1
    6900:	19 c0       	rjmp	.+50     	; 0x6934 <strtol+0x20a>
    6902:	32 97       	sbiw	r30, 0x02	; 2
    6904:	d8 01       	movw	r26, r16
    6906:	ed 93       	st	X+, r30
    6908:	fc 93       	st	X, r31
    690a:	14 c0       	rjmp	.+40     	; 0x6934 <strtol+0x20a>
    690c:	67 ff       	sbrs	r22, 7
    690e:	12 c0       	rjmp	.+36     	; 0x6934 <strtol+0x20a>
    6910:	88 23       	and	r24, r24
    6912:	29 f0       	breq	.+10     	; 0x691e <strtol+0x1f4>
    6914:	20 e0       	ldi	r18, 0x00	; 0
    6916:	30 e0       	ldi	r19, 0x00	; 0
    6918:	40 e0       	ldi	r20, 0x00	; 0
    691a:	50 e8       	ldi	r21, 0x80	; 128
    691c:	04 c0       	rjmp	.+8      	; 0x6926 <strtol+0x1fc>
    691e:	2f ef       	ldi	r18, 0xFF	; 255
    6920:	3f ef       	ldi	r19, 0xFF	; 255
    6922:	4f ef       	ldi	r20, 0xFF	; 255
    6924:	5f e7       	ldi	r21, 0x7F	; 127
    6926:	82 e2       	ldi	r24, 0x22	; 34
    6928:	90 e0       	ldi	r25, 0x00	; 0
    692a:	90 93 18 01 	sts	0x0118, r25
    692e:	80 93 17 01 	sts	0x0117, r24
    6932:	16 c0       	rjmp	.+44     	; 0x6960 <strtol+0x236>
    6934:	88 23       	and	r24, r24
    6936:	41 f0       	breq	.+16     	; 0x6948 <strtol+0x21e>
    6938:	50 95       	com	r21
    693a:	40 95       	com	r20
    693c:	30 95       	com	r19
    693e:	21 95       	neg	r18
    6940:	3f 4f       	sbci	r19, 0xFF	; 255
    6942:	4f 4f       	sbci	r20, 0xFF	; 255
    6944:	5f 4f       	sbci	r21, 0xFF	; 255
    6946:	0c c0       	rjmp	.+24     	; 0x6960 <strtol+0x236>
    6948:	57 ff       	sbrs	r21, 7
    694a:	0a c0       	rjmp	.+20     	; 0x6960 <strtol+0x236>
    694c:	82 e2       	ldi	r24, 0x22	; 34
    694e:	90 e0       	ldi	r25, 0x00	; 0
    6950:	90 93 18 01 	sts	0x0118, r25
    6954:	80 93 17 01 	sts	0x0117, r24
    6958:	2f ef       	ldi	r18, 0xFF	; 255
    695a:	3f ef       	ldi	r19, 0xFF	; 255
    695c:	4f ef       	ldi	r20, 0xFF	; 255
    695e:	5f e7       	ldi	r21, 0x7F	; 127
    6960:	b9 01       	movw	r22, r18
    6962:	ca 01       	movw	r24, r20
    6964:	04 c0       	rjmp	.+8      	; 0x696e <strtol+0x244>
    6966:	60 e0       	ldi	r22, 0x00	; 0
    6968:	70 e0       	ldi	r23, 0x00	; 0
    696a:	80 e0       	ldi	r24, 0x00	; 0
    696c:	90 e0       	ldi	r25, 0x00	; 0
    696e:	df 91       	pop	r29
    6970:	cf 91       	pop	r28
    6972:	1f 91       	pop	r17
    6974:	0f 91       	pop	r16
    6976:	ff 90       	pop	r15
    6978:	ef 90       	pop	r14
    697a:	df 90       	pop	r13
    697c:	cf 90       	pop	r12
    697e:	bf 90       	pop	r11
    6980:	af 90       	pop	r10
    6982:	9f 90       	pop	r9
    6984:	8f 90       	pop	r8
    6986:	7f 90       	pop	r7
    6988:	6f 90       	pop	r6
    698a:	5f 90       	pop	r5
    698c:	3f 90       	pop	r3
    698e:	2f 90       	pop	r2
    6990:	08 95       	ret

00006992 <isspace>:
    6992:	91 11       	cpse	r25, r1
    6994:	15 c2       	rjmp	.+1066   	; 0x6dc0 <__ctype_isfalse>
    6996:	80 32       	cpi	r24, 0x20	; 32
    6998:	19 f0       	breq	.+6      	; 0x69a0 <isspace+0xe>
    699a:	89 50       	subi	r24, 0x09	; 9
    699c:	85 50       	subi	r24, 0x05	; 5
    699e:	d0 f7       	brcc	.-12     	; 0x6994 <isspace+0x2>
    69a0:	08 95       	ret

000069a2 <strrev>:
    69a2:	dc 01       	movw	r26, r24
    69a4:	fc 01       	movw	r30, r24
    69a6:	67 2f       	mov	r22, r23
    69a8:	71 91       	ld	r23, Z+
    69aa:	77 23       	and	r23, r23
    69ac:	e1 f7       	brne	.-8      	; 0x69a6 <strrev+0x4>
    69ae:	32 97       	sbiw	r30, 0x02	; 2
    69b0:	04 c0       	rjmp	.+8      	; 0x69ba <strrev+0x18>
    69b2:	7c 91       	ld	r23, X
    69b4:	6d 93       	st	X+, r22
    69b6:	70 83       	st	Z, r23
    69b8:	62 91       	ld	r22, -Z
    69ba:	ae 17       	cp	r26, r30
    69bc:	bf 07       	cpc	r27, r31
    69be:	c8 f3       	brcs	.-14     	; 0x69b2 <strrev+0x10>
    69c0:	08 95       	ret

000069c2 <sprintf>:
    69c2:	ae e0       	ldi	r26, 0x0E	; 14
    69c4:	b0 e0       	ldi	r27, 0x00	; 0
    69c6:	e7 ee       	ldi	r30, 0xE7	; 231
    69c8:	f4 e3       	ldi	r31, 0x34	; 52
    69ca:	0c 94 18 38 	jmp	0x7030	; 0x7030 <__prologue_saves__+0x1c>
    69ce:	0d 89       	ldd	r16, Y+21	; 0x15
    69d0:	1e 89       	ldd	r17, Y+22	; 0x16
    69d2:	86 e0       	ldi	r24, 0x06	; 6
    69d4:	8c 83       	std	Y+4, r24	; 0x04
    69d6:	1a 83       	std	Y+2, r17	; 0x02
    69d8:	09 83       	std	Y+1, r16	; 0x01
    69da:	8f ef       	ldi	r24, 0xFF	; 255
    69dc:	9f e7       	ldi	r25, 0x7F	; 127
    69de:	9e 83       	std	Y+6, r25	; 0x06
    69e0:	8d 83       	std	Y+5, r24	; 0x05
    69e2:	ae 01       	movw	r20, r28
    69e4:	47 5e       	subi	r20, 0xE7	; 231
    69e6:	5f 4f       	sbci	r21, 0xFF	; 255
    69e8:	6f 89       	ldd	r22, Y+23	; 0x17
    69ea:	78 8d       	ldd	r23, Y+24	; 0x18
    69ec:	ce 01       	movw	r24, r28
    69ee:	01 96       	adiw	r24, 0x01	; 1
    69f0:	0e 94 03 35 	call	0x6a06	; 0x6a06 <vfprintf>
    69f4:	ef 81       	ldd	r30, Y+7	; 0x07
    69f6:	f8 85       	ldd	r31, Y+8	; 0x08
    69f8:	e0 0f       	add	r30, r16
    69fa:	f1 1f       	adc	r31, r17
    69fc:	10 82       	st	Z, r1
    69fe:	2e 96       	adiw	r28, 0x0e	; 14
    6a00:	e4 e0       	ldi	r30, 0x04	; 4
    6a02:	0c 94 34 38 	jmp	0x7068	; 0x7068 <__epilogue_restores__+0x1c>

00006a06 <vfprintf>:
    6a06:	ac e0       	ldi	r26, 0x0C	; 12
    6a08:	b0 e0       	ldi	r27, 0x00	; 0
    6a0a:	e9 e0       	ldi	r30, 0x09	; 9
    6a0c:	f5 e3       	ldi	r31, 0x35	; 53
    6a0e:	0c 94 0a 38 	jmp	0x7014	; 0x7014 <__prologue_saves__>
    6a12:	7c 01       	movw	r14, r24
    6a14:	6b 01       	movw	r12, r22
    6a16:	8a 01       	movw	r16, r20
    6a18:	fc 01       	movw	r30, r24
    6a1a:	17 82       	std	Z+7, r1	; 0x07
    6a1c:	16 82       	std	Z+6, r1	; 0x06
    6a1e:	83 81       	ldd	r24, Z+3	; 0x03
    6a20:	81 ff       	sbrs	r24, 1
    6a22:	bd c1       	rjmp	.+890    	; 0x6d9e <vfprintf+0x398>
    6a24:	ce 01       	movw	r24, r28
    6a26:	01 96       	adiw	r24, 0x01	; 1
    6a28:	4c 01       	movw	r8, r24
    6a2a:	f7 01       	movw	r30, r14
    6a2c:	93 81       	ldd	r25, Z+3	; 0x03
    6a2e:	f6 01       	movw	r30, r12
    6a30:	93 fd       	sbrc	r25, 3
    6a32:	85 91       	lpm	r24, Z+
    6a34:	93 ff       	sbrs	r25, 3
    6a36:	81 91       	ld	r24, Z+
    6a38:	6f 01       	movw	r12, r30
    6a3a:	88 23       	and	r24, r24
    6a3c:	09 f4       	brne	.+2      	; 0x6a40 <vfprintf+0x3a>
    6a3e:	ab c1       	rjmp	.+854    	; 0x6d96 <vfprintf+0x390>
    6a40:	85 32       	cpi	r24, 0x25	; 37
    6a42:	39 f4       	brne	.+14     	; 0x6a52 <vfprintf+0x4c>
    6a44:	93 fd       	sbrc	r25, 3
    6a46:	85 91       	lpm	r24, Z+
    6a48:	93 ff       	sbrs	r25, 3
    6a4a:	81 91       	ld	r24, Z+
    6a4c:	6f 01       	movw	r12, r30
    6a4e:	85 32       	cpi	r24, 0x25	; 37
    6a50:	29 f4       	brne	.+10     	; 0x6a5c <vfprintf+0x56>
    6a52:	b7 01       	movw	r22, r14
    6a54:	90 e0       	ldi	r25, 0x00	; 0
    6a56:	0e 94 f9 36 	call	0x6df2	; 0x6df2 <fputc>
    6a5a:	e7 cf       	rjmp	.-50     	; 0x6a2a <vfprintf+0x24>
    6a5c:	51 2c       	mov	r5, r1
    6a5e:	31 2c       	mov	r3, r1
    6a60:	20 e0       	ldi	r18, 0x00	; 0
    6a62:	20 32       	cpi	r18, 0x20	; 32
    6a64:	a0 f4       	brcc	.+40     	; 0x6a8e <vfprintf+0x88>
    6a66:	8b 32       	cpi	r24, 0x2B	; 43
    6a68:	69 f0       	breq	.+26     	; 0x6a84 <vfprintf+0x7e>
    6a6a:	30 f4       	brcc	.+12     	; 0x6a78 <vfprintf+0x72>
    6a6c:	80 32       	cpi	r24, 0x20	; 32
    6a6e:	59 f0       	breq	.+22     	; 0x6a86 <vfprintf+0x80>
    6a70:	83 32       	cpi	r24, 0x23	; 35
    6a72:	69 f4       	brne	.+26     	; 0x6a8e <vfprintf+0x88>
    6a74:	20 61       	ori	r18, 0x10	; 16
    6a76:	2c c0       	rjmp	.+88     	; 0x6ad0 <vfprintf+0xca>
    6a78:	8d 32       	cpi	r24, 0x2D	; 45
    6a7a:	39 f0       	breq	.+14     	; 0x6a8a <vfprintf+0x84>
    6a7c:	80 33       	cpi	r24, 0x30	; 48
    6a7e:	39 f4       	brne	.+14     	; 0x6a8e <vfprintf+0x88>
    6a80:	21 60       	ori	r18, 0x01	; 1
    6a82:	26 c0       	rjmp	.+76     	; 0x6ad0 <vfprintf+0xca>
    6a84:	22 60       	ori	r18, 0x02	; 2
    6a86:	24 60       	ori	r18, 0x04	; 4
    6a88:	23 c0       	rjmp	.+70     	; 0x6ad0 <vfprintf+0xca>
    6a8a:	28 60       	ori	r18, 0x08	; 8
    6a8c:	21 c0       	rjmp	.+66     	; 0x6ad0 <vfprintf+0xca>
    6a8e:	27 fd       	sbrc	r18, 7
    6a90:	27 c0       	rjmp	.+78     	; 0x6ae0 <vfprintf+0xda>
    6a92:	30 ed       	ldi	r19, 0xD0	; 208
    6a94:	38 0f       	add	r19, r24
    6a96:	3a 30       	cpi	r19, 0x0A	; 10
    6a98:	78 f4       	brcc	.+30     	; 0x6ab8 <vfprintf+0xb2>
    6a9a:	26 ff       	sbrs	r18, 6
    6a9c:	06 c0       	rjmp	.+12     	; 0x6aaa <vfprintf+0xa4>
    6a9e:	fa e0       	ldi	r31, 0x0A	; 10
    6aa0:	5f 9e       	mul	r5, r31
    6aa2:	30 0d       	add	r19, r0
    6aa4:	11 24       	eor	r1, r1
    6aa6:	53 2e       	mov	r5, r19
    6aa8:	13 c0       	rjmp	.+38     	; 0x6ad0 <vfprintf+0xca>
    6aaa:	8a e0       	ldi	r24, 0x0A	; 10
    6aac:	38 9e       	mul	r3, r24
    6aae:	30 0d       	add	r19, r0
    6ab0:	11 24       	eor	r1, r1
    6ab2:	33 2e       	mov	r3, r19
    6ab4:	20 62       	ori	r18, 0x20	; 32
    6ab6:	0c c0       	rjmp	.+24     	; 0x6ad0 <vfprintf+0xca>
    6ab8:	8e 32       	cpi	r24, 0x2E	; 46
    6aba:	21 f4       	brne	.+8      	; 0x6ac4 <vfprintf+0xbe>
    6abc:	26 fd       	sbrc	r18, 6
    6abe:	6b c1       	rjmp	.+726    	; 0x6d96 <vfprintf+0x390>
    6ac0:	20 64       	ori	r18, 0x40	; 64
    6ac2:	06 c0       	rjmp	.+12     	; 0x6ad0 <vfprintf+0xca>
    6ac4:	8c 36       	cpi	r24, 0x6C	; 108
    6ac6:	11 f4       	brne	.+4      	; 0x6acc <vfprintf+0xc6>
    6ac8:	20 68       	ori	r18, 0x80	; 128
    6aca:	02 c0       	rjmp	.+4      	; 0x6ad0 <vfprintf+0xca>
    6acc:	88 36       	cpi	r24, 0x68	; 104
    6ace:	41 f4       	brne	.+16     	; 0x6ae0 <vfprintf+0xda>
    6ad0:	f6 01       	movw	r30, r12
    6ad2:	93 fd       	sbrc	r25, 3
    6ad4:	85 91       	lpm	r24, Z+
    6ad6:	93 ff       	sbrs	r25, 3
    6ad8:	81 91       	ld	r24, Z+
    6ada:	6f 01       	movw	r12, r30
    6adc:	81 11       	cpse	r24, r1
    6ade:	c1 cf       	rjmp	.-126    	; 0x6a62 <vfprintf+0x5c>
    6ae0:	98 2f       	mov	r25, r24
    6ae2:	9f 7d       	andi	r25, 0xDF	; 223
    6ae4:	95 54       	subi	r25, 0x45	; 69
    6ae6:	93 30       	cpi	r25, 0x03	; 3
    6ae8:	28 f4       	brcc	.+10     	; 0x6af4 <vfprintf+0xee>
    6aea:	0c 5f       	subi	r16, 0xFC	; 252
    6aec:	1f 4f       	sbci	r17, 0xFF	; 255
    6aee:	ff e3       	ldi	r31, 0x3F	; 63
    6af0:	f9 83       	std	Y+1, r31	; 0x01
    6af2:	0d c0       	rjmp	.+26     	; 0x6b0e <vfprintf+0x108>
    6af4:	83 36       	cpi	r24, 0x63	; 99
    6af6:	31 f0       	breq	.+12     	; 0x6b04 <vfprintf+0xfe>
    6af8:	83 37       	cpi	r24, 0x73	; 115
    6afa:	71 f0       	breq	.+28     	; 0x6b18 <vfprintf+0x112>
    6afc:	83 35       	cpi	r24, 0x53	; 83
    6afe:	09 f0       	breq	.+2      	; 0x6b02 <vfprintf+0xfc>
    6b00:	5b c0       	rjmp	.+182    	; 0x6bb8 <vfprintf+0x1b2>
    6b02:	22 c0       	rjmp	.+68     	; 0x6b48 <vfprintf+0x142>
    6b04:	f8 01       	movw	r30, r16
    6b06:	80 81       	ld	r24, Z
    6b08:	89 83       	std	Y+1, r24	; 0x01
    6b0a:	0e 5f       	subi	r16, 0xFE	; 254
    6b0c:	1f 4f       	sbci	r17, 0xFF	; 255
    6b0e:	44 24       	eor	r4, r4
    6b10:	43 94       	inc	r4
    6b12:	51 2c       	mov	r5, r1
    6b14:	54 01       	movw	r10, r8
    6b16:	15 c0       	rjmp	.+42     	; 0x6b42 <vfprintf+0x13c>
    6b18:	38 01       	movw	r6, r16
    6b1a:	f2 e0       	ldi	r31, 0x02	; 2
    6b1c:	6f 0e       	add	r6, r31
    6b1e:	71 1c       	adc	r7, r1
    6b20:	f8 01       	movw	r30, r16
    6b22:	a0 80       	ld	r10, Z
    6b24:	b1 80       	ldd	r11, Z+1	; 0x01
    6b26:	26 ff       	sbrs	r18, 6
    6b28:	03 c0       	rjmp	.+6      	; 0x6b30 <vfprintf+0x12a>
    6b2a:	65 2d       	mov	r22, r5
    6b2c:	70 e0       	ldi	r23, 0x00	; 0
    6b2e:	02 c0       	rjmp	.+4      	; 0x6b34 <vfprintf+0x12e>
    6b30:	6f ef       	ldi	r22, 0xFF	; 255
    6b32:	7f ef       	ldi	r23, 0xFF	; 255
    6b34:	c5 01       	movw	r24, r10
    6b36:	2c 87       	std	Y+12, r18	; 0x0c
    6b38:	0e 94 ee 36 	call	0x6ddc	; 0x6ddc <strnlen>
    6b3c:	2c 01       	movw	r4, r24
    6b3e:	83 01       	movw	r16, r6
    6b40:	2c 85       	ldd	r18, Y+12	; 0x0c
    6b42:	2f 77       	andi	r18, 0x7F	; 127
    6b44:	22 2e       	mov	r2, r18
    6b46:	17 c0       	rjmp	.+46     	; 0x6b76 <vfprintf+0x170>
    6b48:	38 01       	movw	r6, r16
    6b4a:	f2 e0       	ldi	r31, 0x02	; 2
    6b4c:	6f 0e       	add	r6, r31
    6b4e:	71 1c       	adc	r7, r1
    6b50:	f8 01       	movw	r30, r16
    6b52:	a0 80       	ld	r10, Z
    6b54:	b1 80       	ldd	r11, Z+1	; 0x01
    6b56:	26 ff       	sbrs	r18, 6
    6b58:	03 c0       	rjmp	.+6      	; 0x6b60 <vfprintf+0x15a>
    6b5a:	65 2d       	mov	r22, r5
    6b5c:	70 e0       	ldi	r23, 0x00	; 0
    6b5e:	02 c0       	rjmp	.+4      	; 0x6b64 <vfprintf+0x15e>
    6b60:	6f ef       	ldi	r22, 0xFF	; 255
    6b62:	7f ef       	ldi	r23, 0xFF	; 255
    6b64:	c5 01       	movw	r24, r10
    6b66:	2c 87       	std	Y+12, r18	; 0x0c
    6b68:	0e 94 e3 36 	call	0x6dc6	; 0x6dc6 <strnlen_P>
    6b6c:	2c 01       	movw	r4, r24
    6b6e:	2c 85       	ldd	r18, Y+12	; 0x0c
    6b70:	20 68       	ori	r18, 0x80	; 128
    6b72:	22 2e       	mov	r2, r18
    6b74:	83 01       	movw	r16, r6
    6b76:	23 fc       	sbrc	r2, 3
    6b78:	1b c0       	rjmp	.+54     	; 0x6bb0 <vfprintf+0x1aa>
    6b7a:	83 2d       	mov	r24, r3
    6b7c:	90 e0       	ldi	r25, 0x00	; 0
    6b7e:	48 16       	cp	r4, r24
    6b80:	59 06       	cpc	r5, r25
    6b82:	b0 f4       	brcc	.+44     	; 0x6bb0 <vfprintf+0x1aa>
    6b84:	b7 01       	movw	r22, r14
    6b86:	80 e2       	ldi	r24, 0x20	; 32
    6b88:	90 e0       	ldi	r25, 0x00	; 0
    6b8a:	0e 94 f9 36 	call	0x6df2	; 0x6df2 <fputc>
    6b8e:	3a 94       	dec	r3
    6b90:	f4 cf       	rjmp	.-24     	; 0x6b7a <vfprintf+0x174>
    6b92:	f5 01       	movw	r30, r10
    6b94:	27 fc       	sbrc	r2, 7
    6b96:	85 91       	lpm	r24, Z+
    6b98:	27 fe       	sbrs	r2, 7
    6b9a:	81 91       	ld	r24, Z+
    6b9c:	5f 01       	movw	r10, r30
    6b9e:	b7 01       	movw	r22, r14
    6ba0:	90 e0       	ldi	r25, 0x00	; 0
    6ba2:	0e 94 f9 36 	call	0x6df2	; 0x6df2 <fputc>
    6ba6:	31 10       	cpse	r3, r1
    6ba8:	3a 94       	dec	r3
    6baa:	f1 e0       	ldi	r31, 0x01	; 1
    6bac:	4f 1a       	sub	r4, r31
    6bae:	51 08       	sbc	r5, r1
    6bb0:	41 14       	cp	r4, r1
    6bb2:	51 04       	cpc	r5, r1
    6bb4:	71 f7       	brne	.-36     	; 0x6b92 <vfprintf+0x18c>
    6bb6:	e5 c0       	rjmp	.+458    	; 0x6d82 <vfprintf+0x37c>
    6bb8:	84 36       	cpi	r24, 0x64	; 100
    6bba:	11 f0       	breq	.+4      	; 0x6bc0 <vfprintf+0x1ba>
    6bbc:	89 36       	cpi	r24, 0x69	; 105
    6bbe:	39 f5       	brne	.+78     	; 0x6c0e <vfprintf+0x208>
    6bc0:	f8 01       	movw	r30, r16
    6bc2:	27 ff       	sbrs	r18, 7
    6bc4:	07 c0       	rjmp	.+14     	; 0x6bd4 <vfprintf+0x1ce>
    6bc6:	60 81       	ld	r22, Z
    6bc8:	71 81       	ldd	r23, Z+1	; 0x01
    6bca:	82 81       	ldd	r24, Z+2	; 0x02
    6bcc:	93 81       	ldd	r25, Z+3	; 0x03
    6bce:	0c 5f       	subi	r16, 0xFC	; 252
    6bd0:	1f 4f       	sbci	r17, 0xFF	; 255
    6bd2:	08 c0       	rjmp	.+16     	; 0x6be4 <vfprintf+0x1de>
    6bd4:	60 81       	ld	r22, Z
    6bd6:	71 81       	ldd	r23, Z+1	; 0x01
    6bd8:	88 27       	eor	r24, r24
    6bda:	77 fd       	sbrc	r23, 7
    6bdc:	80 95       	com	r24
    6bde:	98 2f       	mov	r25, r24
    6be0:	0e 5f       	subi	r16, 0xFE	; 254
    6be2:	1f 4f       	sbci	r17, 0xFF	; 255
    6be4:	2f 76       	andi	r18, 0x6F	; 111
    6be6:	b2 2e       	mov	r11, r18
    6be8:	97 ff       	sbrs	r25, 7
    6bea:	09 c0       	rjmp	.+18     	; 0x6bfe <vfprintf+0x1f8>
    6bec:	90 95       	com	r25
    6bee:	80 95       	com	r24
    6bf0:	70 95       	com	r23
    6bf2:	61 95       	neg	r22
    6bf4:	7f 4f       	sbci	r23, 0xFF	; 255
    6bf6:	8f 4f       	sbci	r24, 0xFF	; 255
    6bf8:	9f 4f       	sbci	r25, 0xFF	; 255
    6bfa:	20 68       	ori	r18, 0x80	; 128
    6bfc:	b2 2e       	mov	r11, r18
    6bfe:	2a e0       	ldi	r18, 0x0A	; 10
    6c00:	30 e0       	ldi	r19, 0x00	; 0
    6c02:	a4 01       	movw	r20, r8
    6c04:	0e 94 2b 37 	call	0x6e56	; 0x6e56 <__ultoa_invert>
    6c08:	a8 2e       	mov	r10, r24
    6c0a:	a8 18       	sub	r10, r8
    6c0c:	44 c0       	rjmp	.+136    	; 0x6c96 <vfprintf+0x290>
    6c0e:	85 37       	cpi	r24, 0x75	; 117
    6c10:	29 f4       	brne	.+10     	; 0x6c1c <vfprintf+0x216>
    6c12:	2f 7e       	andi	r18, 0xEF	; 239
    6c14:	b2 2e       	mov	r11, r18
    6c16:	2a e0       	ldi	r18, 0x0A	; 10
    6c18:	30 e0       	ldi	r19, 0x00	; 0
    6c1a:	25 c0       	rjmp	.+74     	; 0x6c66 <vfprintf+0x260>
    6c1c:	f2 2f       	mov	r31, r18
    6c1e:	f9 7f       	andi	r31, 0xF9	; 249
    6c20:	bf 2e       	mov	r11, r31
    6c22:	8f 36       	cpi	r24, 0x6F	; 111
    6c24:	c1 f0       	breq	.+48     	; 0x6c56 <vfprintf+0x250>
    6c26:	18 f4       	brcc	.+6      	; 0x6c2e <vfprintf+0x228>
    6c28:	88 35       	cpi	r24, 0x58	; 88
    6c2a:	79 f0       	breq	.+30     	; 0x6c4a <vfprintf+0x244>
    6c2c:	b4 c0       	rjmp	.+360    	; 0x6d96 <vfprintf+0x390>
    6c2e:	80 37       	cpi	r24, 0x70	; 112
    6c30:	19 f0       	breq	.+6      	; 0x6c38 <vfprintf+0x232>
    6c32:	88 37       	cpi	r24, 0x78	; 120
    6c34:	21 f0       	breq	.+8      	; 0x6c3e <vfprintf+0x238>
    6c36:	af c0       	rjmp	.+350    	; 0x6d96 <vfprintf+0x390>
    6c38:	2f 2f       	mov	r18, r31
    6c3a:	20 61       	ori	r18, 0x10	; 16
    6c3c:	b2 2e       	mov	r11, r18
    6c3e:	b4 fe       	sbrs	r11, 4
    6c40:	0d c0       	rjmp	.+26     	; 0x6c5c <vfprintf+0x256>
    6c42:	8b 2d       	mov	r24, r11
    6c44:	84 60       	ori	r24, 0x04	; 4
    6c46:	b8 2e       	mov	r11, r24
    6c48:	09 c0       	rjmp	.+18     	; 0x6c5c <vfprintf+0x256>
    6c4a:	24 ff       	sbrs	r18, 4
    6c4c:	0a c0       	rjmp	.+20     	; 0x6c62 <vfprintf+0x25c>
    6c4e:	9f 2f       	mov	r25, r31
    6c50:	96 60       	ori	r25, 0x06	; 6
    6c52:	b9 2e       	mov	r11, r25
    6c54:	06 c0       	rjmp	.+12     	; 0x6c62 <vfprintf+0x25c>
    6c56:	28 e0       	ldi	r18, 0x08	; 8
    6c58:	30 e0       	ldi	r19, 0x00	; 0
    6c5a:	05 c0       	rjmp	.+10     	; 0x6c66 <vfprintf+0x260>
    6c5c:	20 e1       	ldi	r18, 0x10	; 16
    6c5e:	30 e0       	ldi	r19, 0x00	; 0
    6c60:	02 c0       	rjmp	.+4      	; 0x6c66 <vfprintf+0x260>
    6c62:	20 e1       	ldi	r18, 0x10	; 16
    6c64:	32 e0       	ldi	r19, 0x02	; 2
    6c66:	f8 01       	movw	r30, r16
    6c68:	b7 fe       	sbrs	r11, 7
    6c6a:	07 c0       	rjmp	.+14     	; 0x6c7a <vfprintf+0x274>
    6c6c:	60 81       	ld	r22, Z
    6c6e:	71 81       	ldd	r23, Z+1	; 0x01
    6c70:	82 81       	ldd	r24, Z+2	; 0x02
    6c72:	93 81       	ldd	r25, Z+3	; 0x03
    6c74:	0c 5f       	subi	r16, 0xFC	; 252
    6c76:	1f 4f       	sbci	r17, 0xFF	; 255
    6c78:	06 c0       	rjmp	.+12     	; 0x6c86 <vfprintf+0x280>
    6c7a:	60 81       	ld	r22, Z
    6c7c:	71 81       	ldd	r23, Z+1	; 0x01
    6c7e:	80 e0       	ldi	r24, 0x00	; 0
    6c80:	90 e0       	ldi	r25, 0x00	; 0
    6c82:	0e 5f       	subi	r16, 0xFE	; 254
    6c84:	1f 4f       	sbci	r17, 0xFF	; 255
    6c86:	a4 01       	movw	r20, r8
    6c88:	0e 94 2b 37 	call	0x6e56	; 0x6e56 <__ultoa_invert>
    6c8c:	a8 2e       	mov	r10, r24
    6c8e:	a8 18       	sub	r10, r8
    6c90:	fb 2d       	mov	r31, r11
    6c92:	ff 77       	andi	r31, 0x7F	; 127
    6c94:	bf 2e       	mov	r11, r31
    6c96:	b6 fe       	sbrs	r11, 6
    6c98:	0b c0       	rjmp	.+22     	; 0x6cb0 <vfprintf+0x2aa>
    6c9a:	2b 2d       	mov	r18, r11
    6c9c:	2e 7f       	andi	r18, 0xFE	; 254
    6c9e:	a5 14       	cp	r10, r5
    6ca0:	50 f4       	brcc	.+20     	; 0x6cb6 <vfprintf+0x2b0>
    6ca2:	b4 fe       	sbrs	r11, 4
    6ca4:	0a c0       	rjmp	.+20     	; 0x6cba <vfprintf+0x2b4>
    6ca6:	b2 fc       	sbrc	r11, 2
    6ca8:	08 c0       	rjmp	.+16     	; 0x6cba <vfprintf+0x2b4>
    6caa:	2b 2d       	mov	r18, r11
    6cac:	2e 7e       	andi	r18, 0xEE	; 238
    6cae:	05 c0       	rjmp	.+10     	; 0x6cba <vfprintf+0x2b4>
    6cb0:	7a 2c       	mov	r7, r10
    6cb2:	2b 2d       	mov	r18, r11
    6cb4:	03 c0       	rjmp	.+6      	; 0x6cbc <vfprintf+0x2b6>
    6cb6:	7a 2c       	mov	r7, r10
    6cb8:	01 c0       	rjmp	.+2      	; 0x6cbc <vfprintf+0x2b6>
    6cba:	75 2c       	mov	r7, r5
    6cbc:	24 ff       	sbrs	r18, 4
    6cbe:	0d c0       	rjmp	.+26     	; 0x6cda <vfprintf+0x2d4>
    6cc0:	fe 01       	movw	r30, r28
    6cc2:	ea 0d       	add	r30, r10
    6cc4:	f1 1d       	adc	r31, r1
    6cc6:	80 81       	ld	r24, Z
    6cc8:	80 33       	cpi	r24, 0x30	; 48
    6cca:	11 f4       	brne	.+4      	; 0x6cd0 <vfprintf+0x2ca>
    6ccc:	29 7e       	andi	r18, 0xE9	; 233
    6cce:	09 c0       	rjmp	.+18     	; 0x6ce2 <vfprintf+0x2dc>
    6cd0:	22 ff       	sbrs	r18, 2
    6cd2:	06 c0       	rjmp	.+12     	; 0x6ce0 <vfprintf+0x2da>
    6cd4:	73 94       	inc	r7
    6cd6:	73 94       	inc	r7
    6cd8:	04 c0       	rjmp	.+8      	; 0x6ce2 <vfprintf+0x2dc>
    6cda:	82 2f       	mov	r24, r18
    6cdc:	86 78       	andi	r24, 0x86	; 134
    6cde:	09 f0       	breq	.+2      	; 0x6ce2 <vfprintf+0x2dc>
    6ce0:	73 94       	inc	r7
    6ce2:	23 fd       	sbrc	r18, 3
    6ce4:	13 c0       	rjmp	.+38     	; 0x6d0c <vfprintf+0x306>
    6ce6:	20 ff       	sbrs	r18, 0
    6ce8:	06 c0       	rjmp	.+12     	; 0x6cf6 <vfprintf+0x2f0>
    6cea:	5a 2c       	mov	r5, r10
    6cec:	73 14       	cp	r7, r3
    6cee:	18 f4       	brcc	.+6      	; 0x6cf6 <vfprintf+0x2f0>
    6cf0:	53 0c       	add	r5, r3
    6cf2:	57 18       	sub	r5, r7
    6cf4:	73 2c       	mov	r7, r3
    6cf6:	73 14       	cp	r7, r3
    6cf8:	68 f4       	brcc	.+26     	; 0x6d14 <vfprintf+0x30e>
    6cfa:	b7 01       	movw	r22, r14
    6cfc:	80 e2       	ldi	r24, 0x20	; 32
    6cfe:	90 e0       	ldi	r25, 0x00	; 0
    6d00:	2c 87       	std	Y+12, r18	; 0x0c
    6d02:	0e 94 f9 36 	call	0x6df2	; 0x6df2 <fputc>
    6d06:	73 94       	inc	r7
    6d08:	2c 85       	ldd	r18, Y+12	; 0x0c
    6d0a:	f5 cf       	rjmp	.-22     	; 0x6cf6 <vfprintf+0x2f0>
    6d0c:	73 14       	cp	r7, r3
    6d0e:	10 f4       	brcc	.+4      	; 0x6d14 <vfprintf+0x30e>
    6d10:	37 18       	sub	r3, r7
    6d12:	01 c0       	rjmp	.+2      	; 0x6d16 <vfprintf+0x310>
    6d14:	31 2c       	mov	r3, r1
    6d16:	24 ff       	sbrs	r18, 4
    6d18:	12 c0       	rjmp	.+36     	; 0x6d3e <vfprintf+0x338>
    6d1a:	b7 01       	movw	r22, r14
    6d1c:	80 e3       	ldi	r24, 0x30	; 48
    6d1e:	90 e0       	ldi	r25, 0x00	; 0
    6d20:	2c 87       	std	Y+12, r18	; 0x0c
    6d22:	0e 94 f9 36 	call	0x6df2	; 0x6df2 <fputc>
    6d26:	2c 85       	ldd	r18, Y+12	; 0x0c
    6d28:	22 ff       	sbrs	r18, 2
    6d2a:	17 c0       	rjmp	.+46     	; 0x6d5a <vfprintf+0x354>
    6d2c:	21 ff       	sbrs	r18, 1
    6d2e:	03 c0       	rjmp	.+6      	; 0x6d36 <vfprintf+0x330>
    6d30:	88 e5       	ldi	r24, 0x58	; 88
    6d32:	90 e0       	ldi	r25, 0x00	; 0
    6d34:	02 c0       	rjmp	.+4      	; 0x6d3a <vfprintf+0x334>
    6d36:	88 e7       	ldi	r24, 0x78	; 120
    6d38:	90 e0       	ldi	r25, 0x00	; 0
    6d3a:	b7 01       	movw	r22, r14
    6d3c:	0c c0       	rjmp	.+24     	; 0x6d56 <vfprintf+0x350>
    6d3e:	82 2f       	mov	r24, r18
    6d40:	86 78       	andi	r24, 0x86	; 134
    6d42:	59 f0       	breq	.+22     	; 0x6d5a <vfprintf+0x354>
    6d44:	21 fd       	sbrc	r18, 1
    6d46:	02 c0       	rjmp	.+4      	; 0x6d4c <vfprintf+0x346>
    6d48:	80 e2       	ldi	r24, 0x20	; 32
    6d4a:	01 c0       	rjmp	.+2      	; 0x6d4e <vfprintf+0x348>
    6d4c:	8b e2       	ldi	r24, 0x2B	; 43
    6d4e:	27 fd       	sbrc	r18, 7
    6d50:	8d e2       	ldi	r24, 0x2D	; 45
    6d52:	b7 01       	movw	r22, r14
    6d54:	90 e0       	ldi	r25, 0x00	; 0
    6d56:	0e 94 f9 36 	call	0x6df2	; 0x6df2 <fputc>
    6d5a:	a5 14       	cp	r10, r5
    6d5c:	38 f4       	brcc	.+14     	; 0x6d6c <vfprintf+0x366>
    6d5e:	b7 01       	movw	r22, r14
    6d60:	80 e3       	ldi	r24, 0x30	; 48
    6d62:	90 e0       	ldi	r25, 0x00	; 0
    6d64:	0e 94 f9 36 	call	0x6df2	; 0x6df2 <fputc>
    6d68:	5a 94       	dec	r5
    6d6a:	f7 cf       	rjmp	.-18     	; 0x6d5a <vfprintf+0x354>
    6d6c:	aa 94       	dec	r10
    6d6e:	f4 01       	movw	r30, r8
    6d70:	ea 0d       	add	r30, r10
    6d72:	f1 1d       	adc	r31, r1
    6d74:	80 81       	ld	r24, Z
    6d76:	b7 01       	movw	r22, r14
    6d78:	90 e0       	ldi	r25, 0x00	; 0
    6d7a:	0e 94 f9 36 	call	0x6df2	; 0x6df2 <fputc>
    6d7e:	a1 10       	cpse	r10, r1
    6d80:	f5 cf       	rjmp	.-22     	; 0x6d6c <vfprintf+0x366>
    6d82:	33 20       	and	r3, r3
    6d84:	09 f4       	brne	.+2      	; 0x6d88 <vfprintf+0x382>
    6d86:	51 ce       	rjmp	.-862    	; 0x6a2a <vfprintf+0x24>
    6d88:	b7 01       	movw	r22, r14
    6d8a:	80 e2       	ldi	r24, 0x20	; 32
    6d8c:	90 e0       	ldi	r25, 0x00	; 0
    6d8e:	0e 94 f9 36 	call	0x6df2	; 0x6df2 <fputc>
    6d92:	3a 94       	dec	r3
    6d94:	f6 cf       	rjmp	.-20     	; 0x6d82 <vfprintf+0x37c>
    6d96:	f7 01       	movw	r30, r14
    6d98:	86 81       	ldd	r24, Z+6	; 0x06
    6d9a:	97 81       	ldd	r25, Z+7	; 0x07
    6d9c:	02 c0       	rjmp	.+4      	; 0x6da2 <vfprintf+0x39c>
    6d9e:	8f ef       	ldi	r24, 0xFF	; 255
    6da0:	9f ef       	ldi	r25, 0xFF	; 255
    6da2:	2c 96       	adiw	r28, 0x0c	; 12
    6da4:	e2 e1       	ldi	r30, 0x12	; 18
    6da6:	0c 94 26 38 	jmp	0x704c	; 0x704c <__epilogue_restores__>

00006daa <__eerd_word_m32>:
    6daa:	a8 e1       	ldi	r26, 0x18	; 24
    6dac:	b0 e0       	ldi	r27, 0x00	; 0
    6dae:	42 e0       	ldi	r20, 0x02	; 2
    6db0:	50 e0       	ldi	r21, 0x00	; 0
    6db2:	0c 94 8b 37 	jmp	0x6f16	; 0x6f16 <__eerd_blraw_m32>

00006db6 <__eewr_word_m32>:
    6db6:	0e 94 99 37 	call	0x6f32	; 0x6f32 <__eewr_byte_m32>
    6dba:	27 2f       	mov	r18, r23
    6dbc:	0c 94 9a 37 	jmp	0x6f34	; 0x6f34 <__eewr_r18_m32>

00006dc0 <__ctype_isfalse>:
    6dc0:	99 27       	eor	r25, r25
    6dc2:	88 27       	eor	r24, r24

00006dc4 <__ctype_istrue>:
    6dc4:	08 95       	ret

00006dc6 <strnlen_P>:
    6dc6:	fc 01       	movw	r30, r24
    6dc8:	05 90       	lpm	r0, Z+
    6dca:	61 50       	subi	r22, 0x01	; 1
    6dcc:	70 40       	sbci	r23, 0x00	; 0
    6dce:	01 10       	cpse	r0, r1
    6dd0:	d8 f7       	brcc	.-10     	; 0x6dc8 <strnlen_P+0x2>
    6dd2:	80 95       	com	r24
    6dd4:	90 95       	com	r25
    6dd6:	8e 0f       	add	r24, r30
    6dd8:	9f 1f       	adc	r25, r31
    6dda:	08 95       	ret

00006ddc <strnlen>:
    6ddc:	fc 01       	movw	r30, r24
    6dde:	61 50       	subi	r22, 0x01	; 1
    6de0:	70 40       	sbci	r23, 0x00	; 0
    6de2:	01 90       	ld	r0, Z+
    6de4:	01 10       	cpse	r0, r1
    6de6:	d8 f7       	brcc	.-10     	; 0x6dde <strnlen+0x2>
    6de8:	80 95       	com	r24
    6dea:	90 95       	com	r25
    6dec:	8e 0f       	add	r24, r30
    6dee:	9f 1f       	adc	r25, r31
    6df0:	08 95       	ret

00006df2 <fputc>:
    6df2:	0f 93       	push	r16
    6df4:	1f 93       	push	r17
    6df6:	cf 93       	push	r28
    6df8:	df 93       	push	r29
    6dfa:	18 2f       	mov	r17, r24
    6dfc:	09 2f       	mov	r16, r25
    6dfe:	eb 01       	movw	r28, r22
    6e00:	8b 81       	ldd	r24, Y+3	; 0x03
    6e02:	81 fd       	sbrc	r24, 1
    6e04:	03 c0       	rjmp	.+6      	; 0x6e0c <fputc+0x1a>
    6e06:	8f ef       	ldi	r24, 0xFF	; 255
    6e08:	9f ef       	ldi	r25, 0xFF	; 255
    6e0a:	20 c0       	rjmp	.+64     	; 0x6e4c <fputc+0x5a>
    6e0c:	82 ff       	sbrs	r24, 2
    6e0e:	10 c0       	rjmp	.+32     	; 0x6e30 <fputc+0x3e>
    6e10:	4e 81       	ldd	r20, Y+6	; 0x06
    6e12:	5f 81       	ldd	r21, Y+7	; 0x07
    6e14:	2c 81       	ldd	r18, Y+4	; 0x04
    6e16:	3d 81       	ldd	r19, Y+5	; 0x05
    6e18:	42 17       	cp	r20, r18
    6e1a:	53 07       	cpc	r21, r19
    6e1c:	7c f4       	brge	.+30     	; 0x6e3c <fputc+0x4a>
    6e1e:	e8 81       	ld	r30, Y
    6e20:	f9 81       	ldd	r31, Y+1	; 0x01
    6e22:	9f 01       	movw	r18, r30
    6e24:	2f 5f       	subi	r18, 0xFF	; 255
    6e26:	3f 4f       	sbci	r19, 0xFF	; 255
    6e28:	39 83       	std	Y+1, r19	; 0x01
    6e2a:	28 83       	st	Y, r18
    6e2c:	10 83       	st	Z, r17
    6e2e:	06 c0       	rjmp	.+12     	; 0x6e3c <fputc+0x4a>
    6e30:	e8 85       	ldd	r30, Y+8	; 0x08
    6e32:	f9 85       	ldd	r31, Y+9	; 0x09
    6e34:	81 2f       	mov	r24, r17
    6e36:	09 95       	icall
    6e38:	89 2b       	or	r24, r25
    6e3a:	29 f7       	brne	.-54     	; 0x6e06 <fputc+0x14>
    6e3c:	2e 81       	ldd	r18, Y+6	; 0x06
    6e3e:	3f 81       	ldd	r19, Y+7	; 0x07
    6e40:	2f 5f       	subi	r18, 0xFF	; 255
    6e42:	3f 4f       	sbci	r19, 0xFF	; 255
    6e44:	3f 83       	std	Y+7, r19	; 0x07
    6e46:	2e 83       	std	Y+6, r18	; 0x06
    6e48:	81 2f       	mov	r24, r17
    6e4a:	90 2f       	mov	r25, r16
    6e4c:	df 91       	pop	r29
    6e4e:	cf 91       	pop	r28
    6e50:	1f 91       	pop	r17
    6e52:	0f 91       	pop	r16
    6e54:	08 95       	ret

00006e56 <__ultoa_invert>:
    6e56:	fa 01       	movw	r30, r20
    6e58:	aa 27       	eor	r26, r26
    6e5a:	28 30       	cpi	r18, 0x08	; 8
    6e5c:	51 f1       	breq	.+84     	; 0x6eb2 <__ultoa_invert+0x5c>
    6e5e:	20 31       	cpi	r18, 0x10	; 16
    6e60:	81 f1       	breq	.+96     	; 0x6ec2 <__ultoa_invert+0x6c>
    6e62:	e8 94       	clt
    6e64:	6f 93       	push	r22
    6e66:	6e 7f       	andi	r22, 0xFE	; 254
    6e68:	6e 5f       	subi	r22, 0xFE	; 254
    6e6a:	7f 4f       	sbci	r23, 0xFF	; 255
    6e6c:	8f 4f       	sbci	r24, 0xFF	; 255
    6e6e:	9f 4f       	sbci	r25, 0xFF	; 255
    6e70:	af 4f       	sbci	r26, 0xFF	; 255
    6e72:	b1 e0       	ldi	r27, 0x01	; 1
    6e74:	3e d0       	rcall	.+124    	; 0x6ef2 <__ultoa_invert+0x9c>
    6e76:	b4 e0       	ldi	r27, 0x04	; 4
    6e78:	3c d0       	rcall	.+120    	; 0x6ef2 <__ultoa_invert+0x9c>
    6e7a:	67 0f       	add	r22, r23
    6e7c:	78 1f       	adc	r23, r24
    6e7e:	89 1f       	adc	r24, r25
    6e80:	9a 1f       	adc	r25, r26
    6e82:	a1 1d       	adc	r26, r1
    6e84:	68 0f       	add	r22, r24
    6e86:	79 1f       	adc	r23, r25
    6e88:	8a 1f       	adc	r24, r26
    6e8a:	91 1d       	adc	r25, r1
    6e8c:	a1 1d       	adc	r26, r1
    6e8e:	6a 0f       	add	r22, r26
    6e90:	71 1d       	adc	r23, r1
    6e92:	81 1d       	adc	r24, r1
    6e94:	91 1d       	adc	r25, r1
    6e96:	a1 1d       	adc	r26, r1
    6e98:	20 d0       	rcall	.+64     	; 0x6eda <__ultoa_invert+0x84>
    6e9a:	09 f4       	brne	.+2      	; 0x6e9e <__ultoa_invert+0x48>
    6e9c:	68 94       	set
    6e9e:	3f 91       	pop	r19
    6ea0:	2a e0       	ldi	r18, 0x0A	; 10
    6ea2:	26 9f       	mul	r18, r22
    6ea4:	11 24       	eor	r1, r1
    6ea6:	30 19       	sub	r19, r0
    6ea8:	30 5d       	subi	r19, 0xD0	; 208
    6eaa:	31 93       	st	Z+, r19
    6eac:	de f6       	brtc	.-74     	; 0x6e64 <__ultoa_invert+0xe>
    6eae:	cf 01       	movw	r24, r30
    6eb0:	08 95       	ret
    6eb2:	46 2f       	mov	r20, r22
    6eb4:	47 70       	andi	r20, 0x07	; 7
    6eb6:	40 5d       	subi	r20, 0xD0	; 208
    6eb8:	41 93       	st	Z+, r20
    6eba:	b3 e0       	ldi	r27, 0x03	; 3
    6ebc:	0f d0       	rcall	.+30     	; 0x6edc <__ultoa_invert+0x86>
    6ebe:	c9 f7       	brne	.-14     	; 0x6eb2 <__ultoa_invert+0x5c>
    6ec0:	f6 cf       	rjmp	.-20     	; 0x6eae <__ultoa_invert+0x58>
    6ec2:	46 2f       	mov	r20, r22
    6ec4:	4f 70       	andi	r20, 0x0F	; 15
    6ec6:	40 5d       	subi	r20, 0xD0	; 208
    6ec8:	4a 33       	cpi	r20, 0x3A	; 58
    6eca:	18 f0       	brcs	.+6      	; 0x6ed2 <__ultoa_invert+0x7c>
    6ecc:	49 5d       	subi	r20, 0xD9	; 217
    6ece:	31 fd       	sbrc	r19, 1
    6ed0:	40 52       	subi	r20, 0x20	; 32
    6ed2:	41 93       	st	Z+, r20
    6ed4:	02 d0       	rcall	.+4      	; 0x6eda <__ultoa_invert+0x84>
    6ed6:	a9 f7       	brne	.-22     	; 0x6ec2 <__ultoa_invert+0x6c>
    6ed8:	ea cf       	rjmp	.-44     	; 0x6eae <__ultoa_invert+0x58>
    6eda:	b4 e0       	ldi	r27, 0x04	; 4
    6edc:	a6 95       	lsr	r26
    6ede:	97 95       	ror	r25
    6ee0:	87 95       	ror	r24
    6ee2:	77 95       	ror	r23
    6ee4:	67 95       	ror	r22
    6ee6:	ba 95       	dec	r27
    6ee8:	c9 f7       	brne	.-14     	; 0x6edc <__ultoa_invert+0x86>
    6eea:	00 97       	sbiw	r24, 0x00	; 0
    6eec:	61 05       	cpc	r22, r1
    6eee:	71 05       	cpc	r23, r1
    6ef0:	08 95       	ret
    6ef2:	9b 01       	movw	r18, r22
    6ef4:	ac 01       	movw	r20, r24
    6ef6:	0a 2e       	mov	r0, r26
    6ef8:	06 94       	lsr	r0
    6efa:	57 95       	ror	r21
    6efc:	47 95       	ror	r20
    6efe:	37 95       	ror	r19
    6f00:	27 95       	ror	r18
    6f02:	ba 95       	dec	r27
    6f04:	c9 f7       	brne	.-14     	; 0x6ef8 <__ultoa_invert+0xa2>
    6f06:	62 0f       	add	r22, r18
    6f08:	73 1f       	adc	r23, r19
    6f0a:	84 1f       	adc	r24, r20
    6f0c:	95 1f       	adc	r25, r21
    6f0e:	a0 1d       	adc	r26, r0
    6f10:	08 95       	ret

00006f12 <__eerd_block_m32>:
    6f12:	dc 01       	movw	r26, r24
    6f14:	cb 01       	movw	r24, r22

00006f16 <__eerd_blraw_m32>:
    6f16:	fc 01       	movw	r30, r24
    6f18:	e1 99       	sbic	0x1c, 1	; 28
    6f1a:	fe cf       	rjmp	.-4      	; 0x6f18 <__eerd_blraw_m32+0x2>
    6f1c:	06 c0       	rjmp	.+12     	; 0x6f2a <__eerd_blraw_m32+0x14>
    6f1e:	ff bb       	out	0x1f, r31	; 31
    6f20:	ee bb       	out	0x1e, r30	; 30
    6f22:	e0 9a       	sbi	0x1c, 0	; 28
    6f24:	31 96       	adiw	r30, 0x01	; 1
    6f26:	0d b2       	in	r0, 0x1d	; 29
    6f28:	0d 92       	st	X+, r0
    6f2a:	41 50       	subi	r20, 0x01	; 1
    6f2c:	50 40       	sbci	r21, 0x00	; 0
    6f2e:	b8 f7       	brcc	.-18     	; 0x6f1e <__eerd_blraw_m32+0x8>
    6f30:	08 95       	ret

00006f32 <__eewr_byte_m32>:
    6f32:	26 2f       	mov	r18, r22

00006f34 <__eewr_r18_m32>:
    6f34:	e1 99       	sbic	0x1c, 1	; 28
    6f36:	fe cf       	rjmp	.-4      	; 0x6f34 <__eewr_r18_m32>
    6f38:	9f bb       	out	0x1f, r25	; 31
    6f3a:	8e bb       	out	0x1e, r24	; 30
    6f3c:	2d bb       	out	0x1d, r18	; 29
    6f3e:	0f b6       	in	r0, 0x3f	; 63
    6f40:	f8 94       	cli
    6f42:	e2 9a       	sbi	0x1c, 2	; 28
    6f44:	e1 9a       	sbi	0x1c, 1	; 28
    6f46:	0f be       	out	0x3f, r0	; 63
    6f48:	01 96       	adiw	r24, 0x01	; 1
    6f4a:	08 95       	ret

00006f4c <__mulsi3>:
    6f4c:	db 01       	movw	r26, r22
    6f4e:	8f 93       	push	r24
    6f50:	9f 93       	push	r25
    6f52:	0e 94 f7 37 	call	0x6fee	; 0x6fee <__muluhisi3>
    6f56:	bf 91       	pop	r27
    6f58:	af 91       	pop	r26
    6f5a:	a2 9f       	mul	r26, r18
    6f5c:	80 0d       	add	r24, r0
    6f5e:	91 1d       	adc	r25, r1
    6f60:	a3 9f       	mul	r26, r19
    6f62:	90 0d       	add	r25, r0
    6f64:	b2 9f       	mul	r27, r18
    6f66:	90 0d       	add	r25, r0
    6f68:	11 24       	eor	r1, r1
    6f6a:	08 95       	ret

00006f6c <__udivmodsi4>:
    6f6c:	a1 e2       	ldi	r26, 0x21	; 33
    6f6e:	1a 2e       	mov	r1, r26
    6f70:	aa 1b       	sub	r26, r26
    6f72:	bb 1b       	sub	r27, r27
    6f74:	fd 01       	movw	r30, r26
    6f76:	0d c0       	rjmp	.+26     	; 0x6f92 <__udivmodsi4_ep>

00006f78 <__udivmodsi4_loop>:
    6f78:	aa 1f       	adc	r26, r26
    6f7a:	bb 1f       	adc	r27, r27
    6f7c:	ee 1f       	adc	r30, r30
    6f7e:	ff 1f       	adc	r31, r31
    6f80:	a2 17       	cp	r26, r18
    6f82:	b3 07       	cpc	r27, r19
    6f84:	e4 07       	cpc	r30, r20
    6f86:	f5 07       	cpc	r31, r21
    6f88:	20 f0       	brcs	.+8      	; 0x6f92 <__udivmodsi4_ep>
    6f8a:	a2 1b       	sub	r26, r18
    6f8c:	b3 0b       	sbc	r27, r19
    6f8e:	e4 0b       	sbc	r30, r20
    6f90:	f5 0b       	sbc	r31, r21

00006f92 <__udivmodsi4_ep>:
    6f92:	66 1f       	adc	r22, r22
    6f94:	77 1f       	adc	r23, r23
    6f96:	88 1f       	adc	r24, r24
    6f98:	99 1f       	adc	r25, r25
    6f9a:	1a 94       	dec	r1
    6f9c:	69 f7       	brne	.-38     	; 0x6f78 <__udivmodsi4_loop>
    6f9e:	60 95       	com	r22
    6fa0:	70 95       	com	r23
    6fa2:	80 95       	com	r24
    6fa4:	90 95       	com	r25
    6fa6:	9b 01       	movw	r18, r22
    6fa8:	ac 01       	movw	r20, r24
    6faa:	bd 01       	movw	r22, r26
    6fac:	cf 01       	movw	r24, r30
    6fae:	08 95       	ret

00006fb0 <__divmodsi4>:
    6fb0:	05 2e       	mov	r0, r21
    6fb2:	97 fb       	bst	r25, 7
    6fb4:	1e f4       	brtc	.+6      	; 0x6fbc <__divmodsi4+0xc>
    6fb6:	00 94       	com	r0
    6fb8:	0e 94 ef 37 	call	0x6fde	; 0x6fde <__negsi2>
    6fbc:	57 fd       	sbrc	r21, 7
    6fbe:	07 d0       	rcall	.+14     	; 0x6fce <__divmodsi4_neg2>
    6fc0:	0e 94 b6 37 	call	0x6f6c	; 0x6f6c <__udivmodsi4>
    6fc4:	07 fc       	sbrc	r0, 7
    6fc6:	03 d0       	rcall	.+6      	; 0x6fce <__divmodsi4_neg2>
    6fc8:	4e f4       	brtc	.+18     	; 0x6fdc <__divmodsi4_exit>
    6fca:	0c 94 ef 37 	jmp	0x6fde	; 0x6fde <__negsi2>

00006fce <__divmodsi4_neg2>:
    6fce:	50 95       	com	r21
    6fd0:	40 95       	com	r20
    6fd2:	30 95       	com	r19
    6fd4:	21 95       	neg	r18
    6fd6:	3f 4f       	sbci	r19, 0xFF	; 255
    6fd8:	4f 4f       	sbci	r20, 0xFF	; 255
    6fda:	5f 4f       	sbci	r21, 0xFF	; 255

00006fdc <__divmodsi4_exit>:
    6fdc:	08 95       	ret

00006fde <__negsi2>:
    6fde:	90 95       	com	r25
    6fe0:	80 95       	com	r24
    6fe2:	70 95       	com	r23
    6fe4:	61 95       	neg	r22
    6fe6:	7f 4f       	sbci	r23, 0xFF	; 255
    6fe8:	8f 4f       	sbci	r24, 0xFF	; 255
    6fea:	9f 4f       	sbci	r25, 0xFF	; 255
    6fec:	08 95       	ret

00006fee <__muluhisi3>:
    6fee:	0e 94 41 38 	call	0x7082	; 0x7082 <__umulhisi3>
    6ff2:	a5 9f       	mul	r26, r21
    6ff4:	90 0d       	add	r25, r0
    6ff6:	b4 9f       	mul	r27, r20
    6ff8:	90 0d       	add	r25, r0
    6ffa:	a4 9f       	mul	r26, r20
    6ffc:	80 0d       	add	r24, r0
    6ffe:	91 1d       	adc	r25, r1
    7000:	11 24       	eor	r1, r1
    7002:	08 95       	ret

00007004 <__mulshisi3>:
    7004:	b7 ff       	sbrs	r27, 7
    7006:	0c 94 f7 37 	jmp	0x6fee	; 0x6fee <__muluhisi3>

0000700a <__mulohisi3>:
    700a:	0e 94 f7 37 	call	0x6fee	; 0x6fee <__muluhisi3>
    700e:	82 1b       	sub	r24, r18
    7010:	93 0b       	sbc	r25, r19
    7012:	08 95       	ret

00007014 <__prologue_saves__>:
    7014:	2f 92       	push	r2
    7016:	3f 92       	push	r3
    7018:	4f 92       	push	r4
    701a:	5f 92       	push	r5
    701c:	6f 92       	push	r6
    701e:	7f 92       	push	r7
    7020:	8f 92       	push	r8
    7022:	9f 92       	push	r9
    7024:	af 92       	push	r10
    7026:	bf 92       	push	r11
    7028:	cf 92       	push	r12
    702a:	df 92       	push	r13
    702c:	ef 92       	push	r14
    702e:	ff 92       	push	r15
    7030:	0f 93       	push	r16
    7032:	1f 93       	push	r17
    7034:	cf 93       	push	r28
    7036:	df 93       	push	r29
    7038:	cd b7       	in	r28, 0x3d	; 61
    703a:	de b7       	in	r29, 0x3e	; 62
    703c:	ca 1b       	sub	r28, r26
    703e:	db 0b       	sbc	r29, r27
    7040:	0f b6       	in	r0, 0x3f	; 63
    7042:	f8 94       	cli
    7044:	de bf       	out	0x3e, r29	; 62
    7046:	0f be       	out	0x3f, r0	; 63
    7048:	cd bf       	out	0x3d, r28	; 61
    704a:	09 94       	ijmp

0000704c <__epilogue_restores__>:
    704c:	2a 88       	ldd	r2, Y+18	; 0x12
    704e:	39 88       	ldd	r3, Y+17	; 0x11
    7050:	48 88       	ldd	r4, Y+16	; 0x10
    7052:	5f 84       	ldd	r5, Y+15	; 0x0f
    7054:	6e 84       	ldd	r6, Y+14	; 0x0e
    7056:	7d 84       	ldd	r7, Y+13	; 0x0d
    7058:	8c 84       	ldd	r8, Y+12	; 0x0c
    705a:	9b 84       	ldd	r9, Y+11	; 0x0b
    705c:	aa 84       	ldd	r10, Y+10	; 0x0a
    705e:	b9 84       	ldd	r11, Y+9	; 0x09
    7060:	c8 84       	ldd	r12, Y+8	; 0x08
    7062:	df 80       	ldd	r13, Y+7	; 0x07
    7064:	ee 80       	ldd	r14, Y+6	; 0x06
    7066:	fd 80       	ldd	r15, Y+5	; 0x05
    7068:	0c 81       	ldd	r16, Y+4	; 0x04
    706a:	1b 81       	ldd	r17, Y+3	; 0x03
    706c:	aa 81       	ldd	r26, Y+2	; 0x02
    706e:	b9 81       	ldd	r27, Y+1	; 0x01
    7070:	ce 0f       	add	r28, r30
    7072:	d1 1d       	adc	r29, r1
    7074:	0f b6       	in	r0, 0x3f	; 63
    7076:	f8 94       	cli
    7078:	de bf       	out	0x3e, r29	; 62
    707a:	0f be       	out	0x3f, r0	; 63
    707c:	cd bf       	out	0x3d, r28	; 61
    707e:	ed 01       	movw	r28, r26
    7080:	08 95       	ret

00007082 <__umulhisi3>:
    7082:	a2 9f       	mul	r26, r18
    7084:	b0 01       	movw	r22, r0
    7086:	b3 9f       	mul	r27, r19
    7088:	c0 01       	movw	r24, r0
    708a:	a3 9f       	mul	r26, r19
    708c:	70 0d       	add	r23, r0
    708e:	81 1d       	adc	r24, r1
    7090:	11 24       	eor	r1, r1
    7092:	91 1d       	adc	r25, r1
    7094:	b2 9f       	mul	r27, r18
    7096:	70 0d       	add	r23, r0
    7098:	81 1d       	adc	r24, r1
    709a:	11 24       	eor	r1, r1
    709c:	91 1d       	adc	r25, r1
    709e:	08 95       	ret

000070a0 <_exit>:
    70a0:	f8 94       	cli

000070a2 <__stop_program>:
    70a2:	ff cf       	rjmp	.-2      	; 0x70a2 <__stop_program>
