
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000292e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000060  00800060  0000292e  000029c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  008000c0  008000c0  00002a22  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002a22  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000260  00000000  00000000  00002a7e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000526b  00000000  00000000  00002cde  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000eb7  00000000  00000000  00007f49  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c82  00000000  00000000  00008e00  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000a34  00000000  00000000  00009a84  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000968  00000000  00000000  0000a4b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002cee  00000000  00000000  0000ae20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000248  00000000  00000000  0000db0e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
       4:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
       8:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
       c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      10:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      14:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      18:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      1c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      20:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      24:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      28:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      2c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      30:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      34:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      38:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      3c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      40:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      44:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      48:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      4c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      50:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      54:	9d 08       	sbc	r9, r13
      56:	b8 08       	sbc	r11, r8
      58:	bd 09       	sbc	r27, r13
      5a:	bd 09       	sbc	r27, r13
      5c:	bd 09       	sbc	r27, r13
      5e:	bd 09       	sbc	r27, r13
      60:	bd 09       	sbc	r27, r13
      62:	bd 09       	sbc	r27, r13
      64:	bd 09       	sbc	r27, r13
      66:	be 08       	sbc	r11, r14
      68:	bd 09       	sbc	r27, r13
      6a:	bd 09       	sbc	r27, r13
      6c:	bd 09       	sbc	r27, r13
      6e:	c4 08       	sbc	r12, r4
      70:	cc 08       	sbc	r12, r12
      72:	d4 08       	sbc	r13, r4
      74:	fb 08       	sbc	r15, r11
      76:	22 09       	sbc	r18, r2
      78:	49 09       	sbc	r20, r9
      7a:	70 09       	sbc	r23, r0
      7c:	97 09       	sbc	r25, r7
      7e:	08 4a       	sbci	r16, 0xA8	; 168
      80:	d7 3b       	cpi	r29, 0xB7	; 183
      82:	3b ce       	rjmp	.-906    	; 0xfffffcfa <__eeprom_end+0xff7efcfa>
      84:	01 6e       	ori	r16, 0xE1	; 225
      86:	84 bc       	out	0x24, r8	; 36
      88:	bf fd       	.word	0xfdbf	; ????
      8a:	c1 2f       	mov	r28, r17
      8c:	3d 6c       	ori	r19, 0xCD	; 205
      8e:	74 31       	cpi	r23, 0x14	; 20
      90:	9a bd       	out	0x2a, r25	; 42
      92:	56 83       	std	Z+6, r21	; 0x06
      94:	3d da       	rcall	.-2950   	; 0xfffff510 <__eeprom_end+0xff7ef510>
      96:	3d 00       	.word	0x003d	; ????
      98:	c7 7f       	andi	r28, 0xF7	; 247
      9a:	11 be       	out	0x31, r1	; 49
      9c:	d9 e4       	ldi	r29, 0x49	; 73
      9e:	bb 4c       	sbci	r27, 0xCB	; 203
      a0:	3e 91       	ld	r19, -X
      a2:	6b aa       	std	Y+51, r6	; 0x33
      a4:	aa be       	out	0x3a, r10	; 58
      a6:	00 00       	nop
      a8:	00 80       	ld	r0, Z
      aa:	3f 07       	cpc	r19, r31
      ac:	2c 7a       	andi	r18, 0xAC	; 172
      ae:	a5 ba       	out	0x15, r10	; 21
      b0:	6c c5       	rjmp	.+2776   	; 0xb8a <_ZN5Gates1HEii+0x24>
      b2:	90 da       	rcall	.-2784   	; 0xfffff5d4 <__eeprom_end+0xff7ef5d4>
      b4:	3b 93       	.word	0x933b	; ????
      b6:	65 fc       	sbrc	r6, 5
      b8:	8b bc       	out	0x2b, r8	; 43
      ba:	53 f8       	bld	r5, 3
      bc:	10 fd       	sbrc	r17, 0
      be:	3c 56       	subi	r19, 0x6C	; 108
      c0:	92 83       	std	Z+2, r25	; 0x02
      c2:	4d bd       	out	0x2d, r20	; 45
      c4:	87 9d       	mul	r24, r7
      c6:	3a b6       	in	r3, 0x3a	; 58
      c8:	3d cb       	rjmp	.-2438   	; 0xfffff744 <__eeprom_end+0xff7ef744>
      ca:	c9 bf       	out	0x39, r28	; 57
      cc:	5b be       	out	0x3b, r5	; 59
      ce:	73 da       	rcall	.-2842   	; 0xfffff5b6 <__eeprom_end+0xff7ef5b6>
      d0:	0f c9       	rjmp	.-3554   	; 0xfffff2f0 <__eeprom_end+0xff7ef2f0>
      d2:	3f 05       	cpc	r19, r15
      d4:	a8 4c       	sbci	r26, 0xC8	; 200
      d6:	cd b2       	in	r12, 0x1d	; 29
      d8:	d4 4e       	sbci	r29, 0xE4	; 228
      da:	b9 38       	cpi	r27, 0x89	; 137
      dc:	36 a9       	ldd	r19, Z+54	; 0x36
      de:	02 0c       	add	r0, r2
      e0:	50 b9       	out	0x00, r21	; 0
      e2:	91 86       	std	Z+9, r9	; 0x09
      e4:	88 08       	sbc	r8, r8
      e6:	3c a6       	std	Y+44, r3	; 0x2c
      e8:	aa aa       	std	Y+50, r10	; 0x32
      ea:	2a be       	out	0x3a, r2	; 58
      ec:	00 00       	nop
      ee:	00 80       	ld	r0, Z
      f0:	3f 00       	.word	0x003f	; ????

000000f2 <__ctors_start>:
      f2:	d0 06       	cpc	r13, r16

000000f4 <__ctors_end>:
      f4:	11 24       	eor	r1, r1
      f6:	1f be       	out	0x3f, r1	; 63
      f8:	cf e5       	ldi	r28, 0x5F	; 95
      fa:	d4 e0       	ldi	r29, 0x04	; 4
      fc:	de bf       	out	0x3e, r29	; 62
      fe:	cd bf       	out	0x3d, r28	; 61

00000100 <__do_copy_data>:
     100:	10 e0       	ldi	r17, 0x00	; 0
     102:	a0 e6       	ldi	r26, 0x60	; 96
     104:	b0 e0       	ldi	r27, 0x00	; 0
     106:	ee e2       	ldi	r30, 0x2E	; 46
     108:	f9 e2       	ldi	r31, 0x29	; 41
     10a:	02 c0       	rjmp	.+4      	; 0x110 <__do_copy_data+0x10>
     10c:	05 90       	lpm	r0, Z+
     10e:	0d 92       	st	X+, r0
     110:	a0 3c       	cpi	r26, 0xC0	; 192
     112:	b1 07       	cpc	r27, r17
     114:	d9 f7       	brne	.-10     	; 0x10c <__do_copy_data+0xc>

00000116 <__do_clear_bss>:
     116:	20 e0       	ldi	r18, 0x00	; 0
     118:	a0 ec       	ldi	r26, 0xC0	; 192
     11a:	b0 e0       	ldi	r27, 0x00	; 0
     11c:	01 c0       	rjmp	.+2      	; 0x120 <.do_clear_bss_start>

0000011e <.do_clear_bss_loop>:
     11e:	1d 92       	st	X+, r1

00000120 <.do_clear_bss_start>:
     120:	a8 3c       	cpi	r26, 0xC8	; 200
     122:	b2 07       	cpc	r27, r18
     124:	e1 f7       	brne	.-8      	; 0x11e <.do_clear_bss_loop>

00000126 <__do_global_ctors>:
     126:	10 e0       	ldi	r17, 0x00	; 0
     128:	c4 ef       	ldi	r28, 0xF4	; 244
     12a:	d0 e0       	ldi	r29, 0x00	; 0
     12c:	04 c0       	rjmp	.+8      	; 0x136 <__do_global_ctors+0x10>
     12e:	22 97       	sbiw	r28, 0x02	; 2
     130:	fe 01       	movw	r30, r28
     132:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <__tablejump__>
     136:	c2 3f       	cpi	r28, 0xF2	; 242
     138:	d1 07       	cpc	r29, r17
     13a:	c9 f7       	brne	.-14     	; 0x12e <__do_global_ctors+0x8>
     13c:	0e 94 d5 06 	call	0xdaa	; 0xdaa <main>
     140:	0c 94 95 14 	jmp	0x292a	; 0x292a <_exit>

00000144 <__bad_interrupt>:
     144:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000148 <_ZN7ComplexC1Eff>:
#include "complex.h"
Complex::Complex(float Re,float Im):re(Re),im(Im){}
     148:	0f 93       	push	r16
     14a:	1f 93       	push	r17
     14c:	fc 01       	movw	r30, r24
     14e:	40 83       	st	Z, r20
     150:	51 83       	std	Z+1, r21	; 0x01
     152:	62 83       	std	Z+2, r22	; 0x02
     154:	73 83       	std	Z+3, r23	; 0x03
     156:	04 83       	std	Z+4, r16	; 0x04
     158:	15 83       	std	Z+5, r17	; 0x05
     15a:	26 83       	std	Z+6, r18	; 0x06
     15c:	37 83       	std	Z+7, r19	; 0x07
     15e:	1f 91       	pop	r17
     160:	0f 91       	pop	r16
     162:	08 95       	ret

00000164 <_ZN7ComplexC1Ev>:
Complex::Complex(void):re(0.0f),im(0.0f){}
     164:	fc 01       	movw	r30, r24
     166:	10 82       	st	Z, r1
     168:	11 82       	std	Z+1, r1	; 0x01
     16a:	12 82       	std	Z+2, r1	; 0x02
     16c:	13 82       	std	Z+3, r1	; 0x03
     16e:	14 82       	std	Z+4, r1	; 0x04
     170:	15 82       	std	Z+5, r1	; 0x05
     172:	16 82       	std	Z+6, r1	; 0x06
     174:	17 82       	std	Z+7, r1	; 0x07
     176:	08 95       	ret

00000178 <_ZN7Complex3addES_>:
	
Complex Complex::add(Complex c2){
     178:	af 92       	push	r10
     17a:	bf 92       	push	r11
     17c:	cf 92       	push	r12
     17e:	df 92       	push	r13
     180:	ef 92       	push	r14
     182:	ff 92       	push	r15
     184:	0f 93       	push	r16
     186:	1f 93       	push	r17
     188:	cf 93       	push	r28
     18a:	df 93       	push	r29
     18c:	cd b7       	in	r28, 0x3d	; 61
     18e:	de b7       	in	r29, 0x3e	; 62
     190:	68 97       	sbiw	r28, 0x18	; 24
     192:	0f b6       	in	r0, 0x3f	; 63
     194:	f8 94       	cli
     196:	de bf       	out	0x3e, r29	; 62
     198:	0f be       	out	0x3f, r0	; 63
     19a:	cd bf       	out	0x3d, r28	; 61
     19c:	5c 01       	movw	r10, r24
     19e:	09 8b       	std	Y+17, r16	; 0x11
     1a0:	1a 8b       	std	Y+18, r17	; 0x12
     1a2:	2b 8b       	std	Y+19, r18	; 0x13
     1a4:	3c 8b       	std	Y+20, r19	; 0x14
     1a6:	4d 8b       	std	Y+21, r20	; 0x15
     1a8:	5e 8b       	std	Y+22, r21	; 0x16
     1aa:	6f 8b       	std	Y+23, r22	; 0x17
     1ac:	78 8f       	std	Y+24, r23	; 0x18
	return Complex(this->re+c2.re,this->im+c2.im);
     1ae:	2d 89       	ldd	r18, Y+21	; 0x15
     1b0:	3e 89       	ldd	r19, Y+22	; 0x16
     1b2:	4f 89       	ldd	r20, Y+23	; 0x17
     1b4:	58 8d       	ldd	r21, Y+24	; 0x18
     1b6:	fc 01       	movw	r30, r24
     1b8:	64 81       	ldd	r22, Z+4	; 0x04
     1ba:	75 81       	ldd	r23, Z+5	; 0x05
     1bc:	86 81       	ldd	r24, Z+6	; 0x06
     1be:	97 81       	ldd	r25, Z+7	; 0x07
     1c0:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <__addsf3>
     1c4:	6b 01       	movw	r12, r22
     1c6:	7c 01       	movw	r14, r24
     1c8:	29 89       	ldd	r18, Y+17	; 0x11
     1ca:	3a 89       	ldd	r19, Y+18	; 0x12
     1cc:	4b 89       	ldd	r20, Y+19	; 0x13
     1ce:	5c 89       	ldd	r21, Y+20	; 0x14
     1d0:	f5 01       	movw	r30, r10
     1d2:	60 81       	ld	r22, Z
     1d4:	71 81       	ldd	r23, Z+1	; 0x01
     1d6:	82 81       	ldd	r24, Z+2	; 0x02
     1d8:	93 81       	ldd	r25, Z+3	; 0x03
     1da:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <__addsf3>
     1de:	ab 01       	movw	r20, r22
     1e0:	bc 01       	movw	r22, r24
     1e2:	97 01       	movw	r18, r14
     1e4:	86 01       	movw	r16, r12
     1e6:	ce 01       	movw	r24, r28
     1e8:	01 96       	adiw	r24, 0x01	; 1
     1ea:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     1ee:	88 e0       	ldi	r24, 0x08	; 8
     1f0:	fe 01       	movw	r30, r28
     1f2:	31 96       	adiw	r30, 0x01	; 1
     1f4:	de 01       	movw	r26, r28
     1f6:	19 96       	adiw	r26, 0x09	; 9
     1f8:	01 90       	ld	r0, Z+
     1fa:	0d 92       	st	X+, r0
     1fc:	8a 95       	dec	r24
     1fe:	e1 f7       	brne	.-8      	; 0x1f8 <_ZN7Complex3addES_+0x80>
     200:	29 85       	ldd	r18, Y+9	; 0x09
     202:	3a 85       	ldd	r19, Y+10	; 0x0a
     204:	4b 85       	ldd	r20, Y+11	; 0x0b
     206:	5c 85       	ldd	r21, Y+12	; 0x0c
     208:	6d 85       	ldd	r22, Y+13	; 0x0d
     20a:	7e 85       	ldd	r23, Y+14	; 0x0e
}
     20c:	8f 85       	ldd	r24, Y+15	; 0x0f
     20e:	98 89       	ldd	r25, Y+16	; 0x10
     210:	68 96       	adiw	r28, 0x18	; 24
     212:	0f b6       	in	r0, 0x3f	; 63
     214:	f8 94       	cli
     216:	de bf       	out	0x3e, r29	; 62
     218:	0f be       	out	0x3f, r0	; 63
     21a:	cd bf       	out	0x3d, r28	; 61
     21c:	df 91       	pop	r29
     21e:	cf 91       	pop	r28
     220:	1f 91       	pop	r17
     222:	0f 91       	pop	r16
     224:	ff 90       	pop	r15
     226:	ef 90       	pop	r14
     228:	df 90       	pop	r13
     22a:	cf 90       	pop	r12
     22c:	bf 90       	pop	r11
     22e:	af 90       	pop	r10
     230:	08 95       	ret

00000232 <_ZN7Complex3mulES_>:
Complex Complex::mul(Complex c2){
     232:	4f 92       	push	r4
     234:	5f 92       	push	r5
     236:	6f 92       	push	r6
     238:	7f 92       	push	r7
     23a:	8f 92       	push	r8
     23c:	9f 92       	push	r9
     23e:	af 92       	push	r10
     240:	bf 92       	push	r11
     242:	cf 92       	push	r12
     244:	df 92       	push	r13
     246:	ef 92       	push	r14
     248:	ff 92       	push	r15
     24a:	0f 93       	push	r16
     24c:	1f 93       	push	r17
     24e:	cf 93       	push	r28
     250:	df 93       	push	r29
     252:	cd b7       	in	r28, 0x3d	; 61
     254:	de b7       	in	r29, 0x3e	; 62
     256:	a0 97       	sbiw	r28, 0x20	; 32
     258:	0f b6       	in	r0, 0x3f	; 63
     25a:	f8 94       	cli
     25c:	de bf       	out	0x3e, r29	; 62
     25e:	0f be       	out	0x3f, r0	; 63
     260:	cd bf       	out	0x3d, r28	; 61
     262:	09 8b       	std	Y+17, r16	; 0x11
     264:	1a 8b       	std	Y+18, r17	; 0x12
     266:	2b 8b       	std	Y+19, r18	; 0x13
     268:	3c 8b       	std	Y+20, r19	; 0x14
     26a:	4d 8b       	std	Y+21, r20	; 0x15
     26c:	5e 8b       	std	Y+22, r21	; 0x16
     26e:	6f 8b       	std	Y+23, r22	; 0x17
     270:	78 8f       	std	Y+24, r23	; 0x18
     272:	89 88       	ldd	r8, Y+17	; 0x11
     274:	9a 88       	ldd	r9, Y+18	; 0x12
     276:	ab 88       	ldd	r10, Y+19	; 0x13
     278:	bc 88       	ldd	r11, Y+20	; 0x14
     27a:	2d 89       	ldd	r18, Y+21	; 0x15
     27c:	3e 89       	ldd	r19, Y+22	; 0x16
     27e:	4f 89       	ldd	r20, Y+23	; 0x17
     280:	58 8d       	ldd	r21, Y+24	; 0x18
     282:	2d 8f       	std	Y+29, r18	; 0x1d
     284:	3e 8f       	std	Y+30, r19	; 0x1e
     286:	4f 8f       	std	Y+31, r20	; 0x1f
     288:	58 a3       	std	Y+32, r21	; 0x20
	return Complex((this->re*c2.re)-(this->im*c2.im),(this->re*c2.im)+(this->im*c2.re));
     28a:	fc 01       	movw	r30, r24
     28c:	c0 80       	ld	r12, Z
     28e:	d1 80       	ldd	r13, Z+1	; 0x01
     290:	e2 80       	ldd	r14, Z+2	; 0x02
     292:	f3 80       	ldd	r15, Z+3	; 0x03
     294:	24 81       	ldd	r18, Z+4	; 0x04
     296:	35 81       	ldd	r19, Z+5	; 0x05
     298:	46 81       	ldd	r20, Z+6	; 0x06
     29a:	57 81       	ldd	r21, Z+7	; 0x07
     29c:	29 8f       	std	Y+25, r18	; 0x19
     29e:	3a 8f       	std	Y+26, r19	; 0x1a
     2a0:	4b 8f       	std	Y+27, r20	; 0x1b
     2a2:	5c 8f       	std	Y+28, r21	; 0x1c
     2a4:	2d 8d       	ldd	r18, Y+29	; 0x1d
     2a6:	3e 8d       	ldd	r19, Y+30	; 0x1e
     2a8:	4f 8d       	ldd	r20, Y+31	; 0x1f
     2aa:	58 a1       	ldd	r21, Y+32	; 0x20
     2ac:	c7 01       	movw	r24, r14
     2ae:	b6 01       	movw	r22, r12
     2b0:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__mulsf3>
     2b4:	2b 01       	movw	r4, r22
     2b6:	3c 01       	movw	r6, r24
     2b8:	a5 01       	movw	r20, r10
     2ba:	94 01       	movw	r18, r8
     2bc:	69 8d       	ldd	r22, Y+25	; 0x19
     2be:	7a 8d       	ldd	r23, Y+26	; 0x1a
     2c0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2c2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2c4:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__mulsf3>
     2c8:	9b 01       	movw	r18, r22
     2ca:	ac 01       	movw	r20, r24
     2cc:	c3 01       	movw	r24, r6
     2ce:	b2 01       	movw	r22, r4
     2d0:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <__addsf3>
     2d4:	2b 01       	movw	r4, r22
     2d6:	3c 01       	movw	r6, r24
     2d8:	a5 01       	movw	r20, r10
     2da:	94 01       	movw	r18, r8
     2dc:	c7 01       	movw	r24, r14
     2de:	b6 01       	movw	r22, r12
     2e0:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__mulsf3>
     2e4:	6b 01       	movw	r12, r22
     2e6:	7c 01       	movw	r14, r24
     2e8:	2d 8d       	ldd	r18, Y+29	; 0x1d
     2ea:	3e 8d       	ldd	r19, Y+30	; 0x1e
     2ec:	4f 8d       	ldd	r20, Y+31	; 0x1f
     2ee:	58 a1       	ldd	r21, Y+32	; 0x20
     2f0:	69 8d       	ldd	r22, Y+25	; 0x19
     2f2:	7a 8d       	ldd	r23, Y+26	; 0x1a
     2f4:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2f6:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2f8:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__mulsf3>
     2fc:	9b 01       	movw	r18, r22
     2fe:	ac 01       	movw	r20, r24
     300:	c7 01       	movw	r24, r14
     302:	b6 01       	movw	r22, r12
     304:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <__subsf3>
     308:	ab 01       	movw	r20, r22
     30a:	bc 01       	movw	r22, r24
     30c:	93 01       	movw	r18, r6
     30e:	82 01       	movw	r16, r4
     310:	ce 01       	movw	r24, r28
     312:	01 96       	adiw	r24, 0x01	; 1
     314:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     318:	88 e0       	ldi	r24, 0x08	; 8
     31a:	fe 01       	movw	r30, r28
     31c:	31 96       	adiw	r30, 0x01	; 1
     31e:	de 01       	movw	r26, r28
     320:	19 96       	adiw	r26, 0x09	; 9
     322:	01 90       	ld	r0, Z+
     324:	0d 92       	st	X+, r0
     326:	8a 95       	dec	r24
     328:	e1 f7       	brne	.-8      	; 0x322 <_ZN7Complex3mulES_+0xf0>
     32a:	29 85       	ldd	r18, Y+9	; 0x09
     32c:	3a 85       	ldd	r19, Y+10	; 0x0a
     32e:	4b 85       	ldd	r20, Y+11	; 0x0b
     330:	5c 85       	ldd	r21, Y+12	; 0x0c
     332:	6d 85       	ldd	r22, Y+13	; 0x0d
     334:	7e 85       	ldd	r23, Y+14	; 0x0e
}
     336:	8f 85       	ldd	r24, Y+15	; 0x0f
     338:	98 89       	ldd	r25, Y+16	; 0x10
     33a:	a0 96       	adiw	r28, 0x20	; 32
     33c:	0f b6       	in	r0, 0x3f	; 63
     33e:	f8 94       	cli
     340:	de bf       	out	0x3e, r29	; 62
     342:	0f be       	out	0x3f, r0	; 63
     344:	cd bf       	out	0x3d, r28	; 61
     346:	df 91       	pop	r29
     348:	cf 91       	pop	r28
     34a:	1f 91       	pop	r17
     34c:	0f 91       	pop	r16
     34e:	ff 90       	pop	r15
     350:	ef 90       	pop	r14
     352:	df 90       	pop	r13
     354:	cf 90       	pop	r12
     356:	bf 90       	pop	r11
     358:	af 90       	pop	r10
     35a:	9f 90       	pop	r9
     35c:	8f 90       	pop	r8
     35e:	7f 90       	pop	r7
     360:	6f 90       	pop	r6
     362:	5f 90       	pop	r5
     364:	4f 90       	pop	r4
     366:	08 95       	ret

00000368 <_ZN7Complex3argEv>:
float Complex::arg(){
	return atan(this->im/this->re);
     368:	fc 01       	movw	r30, r24
     36a:	20 81       	ld	r18, Z
     36c:	31 81       	ldd	r19, Z+1	; 0x01
     36e:	42 81       	ldd	r20, Z+2	; 0x02
     370:	53 81       	ldd	r21, Z+3	; 0x03
     372:	64 81       	ldd	r22, Z+4	; 0x04
     374:	75 81       	ldd	r23, Z+5	; 0x05
     376:	86 81       	ldd	r24, Z+6	; 0x06
     378:	97 81       	ldd	r25, Z+7	; 0x07
     37a:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__divsf3>
     37e:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <atan>
     382:	08 95       	ret

00000384 <_ZN6EEPromC1Ev>:
#include <util/delay.h>
#include "eeprom.h"

EEProm::EEProm(){
	//Set up TWI Module
	TWBR = 5;
     384:	85 e0       	ldi	r24, 0x05	; 5
     386:	80 b9       	out	0x00, r24	; 0
	TWSR &= (~((1<<TWPS1)|(1<<TWPS0)));
     388:	81 b1       	in	r24, 0x01	; 1
     38a:	8c 7f       	andi	r24, 0xFC	; 252
     38c:	81 b9       	out	0x01, r24	; 1
     38e:	08 95       	ret

00000390 <_ZN6EEProm4readEj>:

	//Initiate a Dummy Write Sequence to start Random Read
	do
	{
		//Put Start Condition on TWI Bus
		TWCR=(1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
     390:	94 ea       	ldi	r25, 0xA4	; 164
		if((TWSR & 0xF8) != 0x08)
			return FALSE;

		//Now write SLA+W
		//EEPROM @ 00h
		TWDR=0b10100000;	
     392:	30 ea       	ldi	r19, 0xA0	; 160

		//Initiate Transfer
		TWCR=(1<<TWINT)|(1<<TWEN);
     394:	24 e8       	ldi	r18, 0x84	; 132

	//Initiate a Dummy Write Sequence to start Random Read
	do
	{
		//Put Start Condition on TWI Bus
		TWCR=(1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
     396:	96 bf       	out	0x36, r25	; 54

		//Poll Till Done
		while(!(TWCR & (1<<TWINT)));
     398:	06 b6       	in	r0, 0x36	; 54
     39a:	07 fe       	sbrs	r0, 7
     39c:	fd cf       	rjmp	.-6      	; 0x398 <_ZN6EEProm4readEj+0x8>

		//Check status
		if((TWSR & 0xF8) != 0x08)
     39e:	81 b1       	in	r24, 0x01	; 1
     3a0:	88 7f       	andi	r24, 0xF8	; 248
     3a2:	88 30       	cpi	r24, 0x08	; 8
     3a4:	09 f0       	breq	.+2      	; 0x3a8 <_ZN6EEProm4readEj+0x18>
     3a6:	41 c0       	rjmp	.+130    	; 0x42a <_ZN6EEProm4readEj+0x9a>
			return FALSE;

		//Now write SLA+W
		//EEPROM @ 00h
		TWDR=0b10100000;	
     3a8:	33 b9       	out	0x03, r19	; 3

		//Initiate Transfer
		TWCR=(1<<TWINT)|(1<<TWEN);
     3aa:	26 bf       	out	0x36, r18	; 54

		//Poll Till Done
		while(!(TWCR & (1<<TWINT)));
     3ac:	06 b6       	in	r0, 0x36	; 54
     3ae:	07 fe       	sbrs	r0, 7
     3b0:	fd cf       	rjmp	.-6      	; 0x3ac <_ZN6EEProm4readEj+0x1c>
	
	}while((TWSR & 0xF8) != 0x18);
     3b2:	81 b1       	in	r24, 0x01	; 1
     3b4:	88 7f       	andi	r24, 0xF8	; 248

uint8_t EEProm::read(uint16_t address){
	uint8_t data;

	//Initiate a Dummy Write Sequence to start Random Read
	do
     3b6:	88 31       	cpi	r24, 0x18	; 24
     3b8:	71 f7       	brne	.-36     	; 0x396 <_ZN6EEProm4readEj+0x6>
	
	}while((TWSR & 0xF8) != 0x18);
		

	//Now write ADDRH
	TWDR=(address>>8);
     3ba:	73 b9       	out	0x03, r23	; 3

	//Initiate Transfer
	TWCR=(1<<TWINT)|(1<<TWEN);
     3bc:	84 e8       	ldi	r24, 0x84	; 132
     3be:	86 bf       	out	0x36, r24	; 54

	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));
     3c0:	06 b6       	in	r0, 0x36	; 54
     3c2:	07 fe       	sbrs	r0, 7
     3c4:	fd cf       	rjmp	.-6      	; 0x3c0 <_ZN6EEProm4readEj+0x30>

	//Check status
	if((TWSR & 0xF8) != 0x28)
     3c6:	81 b1       	in	r24, 0x01	; 1
     3c8:	88 7f       	andi	r24, 0xF8	; 248
     3ca:	88 32       	cpi	r24, 0x28	; 40
     3cc:	81 f5       	brne	.+96     	; 0x42e <_ZN6EEProm4readEj+0x9e>
		return FALSE;

	//Now write ADDRL
	TWDR=(address);
     3ce:	63 b9       	out	0x03, r22	; 3

	//Initiate Transfer
	TWCR=(1<<TWINT)|(1<<TWEN);
     3d0:	84 e8       	ldi	r24, 0x84	; 132
     3d2:	86 bf       	out	0x36, r24	; 54

	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));
     3d4:	06 b6       	in	r0, 0x36	; 54
     3d6:	07 fe       	sbrs	r0, 7
     3d8:	fd cf       	rjmp	.-6      	; 0x3d4 <_ZN6EEProm4readEj+0x44>

	//Check status
	if((TWSR & 0xF8) != 0x28)
     3da:	81 b1       	in	r24, 0x01	; 1
     3dc:	88 7f       	andi	r24, 0xF8	; 248
     3de:	88 32       	cpi	r24, 0x28	; 40
     3e0:	41 f5       	brne	.+80     	; 0x432 <_ZN6EEProm4readEj+0xa2>
	//*************************DUMMY WRITE SEQUENCE END **********************


	
	//Put Start Condition on TWI Bus
	TWCR=(1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
     3e2:	84 ea       	ldi	r24, 0xA4	; 164
     3e4:	86 bf       	out	0x36, r24	; 54

	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));
     3e6:	06 b6       	in	r0, 0x36	; 54
     3e8:	07 fe       	sbrs	r0, 7
     3ea:	fd cf       	rjmp	.-6      	; 0x3e6 <_ZN6EEProm4readEj+0x56>

	//Check status
	if((TWSR & 0xF8) != 0x10)
     3ec:	81 b1       	in	r24, 0x01	; 1
     3ee:	88 7f       	andi	r24, 0xF8	; 248
     3f0:	80 31       	cpi	r24, 0x10	; 16
     3f2:	09 f5       	brne	.+66     	; 0x436 <_ZN6EEProm4readEj+0xa6>
		return FALSE;

	//Now write SLA+R
	//EEPROM @ 00h
	TWDR=0b10100001;	
     3f4:	81 ea       	ldi	r24, 0xA1	; 161
     3f6:	83 b9       	out	0x03, r24	; 3

	//Initiate Transfer
	TWCR=(1<<TWINT)|(1<<TWEN);
     3f8:	84 e8       	ldi	r24, 0x84	; 132
     3fa:	86 bf       	out	0x36, r24	; 54

	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));
     3fc:	06 b6       	in	r0, 0x36	; 54
     3fe:	07 fe       	sbrs	r0, 7
     400:	fd cf       	rjmp	.-6      	; 0x3fc <_ZN6EEProm4readEj+0x6c>

	//Check status
	if((TWSR & 0xF8) != 0x40)
     402:	81 b1       	in	r24, 0x01	; 1
     404:	88 7f       	andi	r24, 0xF8	; 248
     406:	80 34       	cpi	r24, 0x40	; 64
     408:	c1 f4       	brne	.+48     	; 0x43a <_ZN6EEProm4readEj+0xaa>
		return FALSE;

	//Now enable Reception of data by clearing TWINT
	TWCR=(1<<TWINT)|(1<<TWEN);
     40a:	84 e8       	ldi	r24, 0x84	; 132
     40c:	86 bf       	out	0x36, r24	; 54

	//Wait till done
	while(!(TWCR & (1<<TWINT)));
     40e:	06 b6       	in	r0, 0x36	; 54
     410:	07 fe       	sbrs	r0, 7
     412:	fd cf       	rjmp	.-6      	; 0x40e <_ZN6EEProm4readEj+0x7e>

	//Check status
	if((TWSR & 0xF8) != 0x58)
     414:	81 b1       	in	r24, 0x01	; 1
     416:	88 7f       	andi	r24, 0xF8	; 248
     418:	88 35       	cpi	r24, 0x58	; 88
     41a:	89 f4       	brne	.+34     	; 0x43e <_ZN6EEProm4readEj+0xae>
		return FALSE;

	//Read the data
	data=TWDR;
     41c:	83 b1       	in	r24, 0x03	; 3

	//Put Stop Condition on bus
	TWCR=(1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     41e:	94 e9       	ldi	r25, 0x94	; 148
     420:	96 bf       	out	0x36, r25	; 54
	
	//Wait for STOP to finish
	while(TWCR & (1<<TWSTO));
     422:	06 b6       	in	r0, 0x36	; 54
     424:	04 fc       	sbrc	r0, 4
     426:	fd cf       	rjmp	.-6      	; 0x422 <_ZN6EEProm4readEj+0x92>
     428:	08 95       	ret
		//Poll Till Done
		while(!(TWCR & (1<<TWINT)));

		//Check status
		if((TWSR & 0xF8) != 0x08)
			return FALSE;
     42a:	80 e0       	ldi	r24, 0x00	; 0
     42c:	08 95       	ret
	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));

	//Check status
	if((TWSR & 0xF8) != 0x28)
		return FALSE;
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	08 95       	ret
	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));

	//Check status
	if((TWSR & 0xF8) != 0x28)
		return FALSE;
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	08 95       	ret
	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));

	//Check status
	if((TWSR & 0xF8) != 0x10)
		return FALSE;
     436:	80 e0       	ldi	r24, 0x00	; 0
     438:	08 95       	ret
	//Poll Till Done
	while(!(TWCR & (1<<TWINT)));

	//Check status
	if((TWSR & 0xF8) != 0x40)
		return FALSE;
     43a:	80 e0       	ldi	r24, 0x00	; 0
     43c:	08 95       	ret
	//Wait till done
	while(!(TWCR & (1<<TWINT)));

	//Check status
	if((TWSR & 0xF8) != 0x58)
		return FALSE;
     43e:	80 e0       	ldi	r24, 0x00	; 0
	//Wait for STOP to finish
	while(TWCR & (1<<TWSTO));

	//Return TRUE
	return data;
}
     440:	08 95       	ret

00000442 <_ZN6EEProm7readallEv>:
char* EEProm::readall(){
     442:	cf 92       	push	r12
     444:	df 92       	push	r13
     446:	ef 92       	push	r14
     448:	ff 92       	push	r15
     44a:	0f 93       	push	r16
     44c:	1f 93       	push	r17
     44e:	cf 93       	push	r28
     450:	df 93       	push	r29
     452:	cd b7       	in	r28, 0x3d	; 61
     454:	de b7       	in	r29, 0x3e	; 62
     456:	c4 56       	subi	r28, 0x64	; 100
     458:	d1 09       	sbc	r29, r1
     45a:	0f b6       	in	r0, 0x3f	; 63
     45c:	f8 94       	cli
     45e:	de bf       	out	0x3e, r29	; 62
     460:	0f be       	out	0x3f, r0	; 63
     462:	cd bf       	out	0x3d, r28	; 61
     464:	6c 01       	movw	r12, r24
     466:	ce 01       	movw	r24, r28
     468:	01 96       	adiw	r24, 0x01	; 1
     46a:	7c 01       	movw	r14, r24
	char eeprom_mem[MAX_MEM_SIZE];
	for(int i=0;MAX_MEM_SIZE;i++) {
     46c:	00 e0       	ldi	r16, 0x00	; 0
     46e:	10 e0       	ldi	r17, 0x00	; 0
		eeprom_mem[i]=read(i); 
     470:	b8 01       	movw	r22, r16
     472:	c6 01       	movw	r24, r12
     474:	0e 94 c8 01 	call	0x390	; 0x390 <_ZN6EEProm4readEj>
     478:	f7 01       	movw	r30, r14
     47a:	81 93       	st	Z+, r24
     47c:	7f 01       	movw	r14, r30
		if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break;
     47e:	8f 3f       	cpi	r24, 0xFF	; 255
     480:	81 f4       	brne	.+32     	; 0x4a2 <__stack+0x43>
     482:	32 97       	sbiw	r30, 0x02	; 2
     484:	20 81       	ld	r18, Z
     486:	2f 3f       	cpi	r18, 0xFF	; 255
     488:	61 f4       	brne	.+24     	; 0x4a2 <__stack+0x43>
     48a:	31 97       	sbiw	r30, 0x01	; 1
     48c:	20 81       	ld	r18, Z
     48e:	2f 3f       	cpi	r18, 0xFF	; 255
     490:	41 f4       	brne	.+16     	; 0x4a2 <__stack+0x43>
     492:	31 97       	sbiw	r30, 0x01	; 1
     494:	20 81       	ld	r18, Z
     496:	2f 3f       	cpi	r18, 0xFF	; 255
     498:	21 f4       	brne	.+8      	; 0x4a2 <__stack+0x43>
     49a:	31 97       	sbiw	r30, 0x01	; 1
     49c:	80 81       	ld	r24, Z
     49e:	8f 3f       	cpi	r24, 0xFF	; 255
     4a0:	19 f0       	breq	.+6      	; 0x4a8 <__stack+0x49>
	//Return TRUE
	return data;
}
char* EEProm::readall(){
	char eeprom_mem[MAX_MEM_SIZE];
	for(int i=0;MAX_MEM_SIZE;i++) {
     4a2:	0f 5f       	subi	r16, 0xFF	; 255
     4a4:	1f 4f       	sbci	r17, 0xFF	; 255
		eeprom_mem[i]=read(i); 
		if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break;
	}
     4a6:	e4 cf       	rjmp	.-56     	; 0x470 <__stack+0x11>
	return eeprom_mem;
     4a8:	ce 01       	movw	r24, r28
     4aa:	01 96       	adiw	r24, 0x01	; 1
     4ac:	cc 59       	subi	r28, 0x9C	; 156
     4ae:	df 4f       	sbci	r29, 0xFF	; 255
     4b0:	0f b6       	in	r0, 0x3f	; 63
     4b2:	f8 94       	cli
     4b4:	de bf       	out	0x3e, r29	; 62
     4b6:	0f be       	out	0x3f, r0	; 63
     4b8:	cd bf       	out	0x3d, r28	; 61
     4ba:	df 91       	pop	r29
     4bc:	cf 91       	pop	r28
     4be:	1f 91       	pop	r17
     4c0:	0f 91       	pop	r16
     4c2:	ff 90       	pop	r15
     4c4:	ef 90       	pop	r14
     4c6:	df 90       	pop	r13
     4c8:	cf 90       	pop	r12
     4ca:	08 95       	ret

000004cc <_ZN5Gates10setup_seedEv>:
Gates::Gates(){setup_seed();}

Serial s;
QEPU::Utils u;

void Gates::setup_seed(){
     4cc:	cf 93       	push	r28
	unsigned char oldADMUX = ADMUX;
     4ce:	c7 b1       	in	r28, 0x07	; 7
	ADMUX |=  _BV(MUX0); //choose ADC1 on PB2
     4d0:	38 9a       	sbi	0x07, 0	; 7
	ADCSRA |= _BV(ADPS2) |_BV(ADPS1) |_BV(ADPS0); //set prescaler to max value, 128
     4d2:	86 b1       	in	r24, 0x06	; 6
     4d4:	87 60       	ori	r24, 0x07	; 7
     4d6:	86 b9       	out	0x06, r24	; 6

	ADCSRA |= _BV(ADEN); //enable the ADC
     4d8:	37 9a       	sbi	0x06, 7	; 6
	ADCSRA |= _BV(ADSC);//start conversion
     4da:	36 9a       	sbi	0x06, 6	; 6

	while (ADCSRA & _BV(ADSC)); //wait until the hardware clears the flag. Note semicolon!
     4dc:	36 99       	sbic	0x06, 6	; 6
     4de:	fe cf       	rjmp	.-4      	; 0x4dc <_ZN5Gates10setup_seedEv+0x10>

	unsigned char byte1 = ADCL;
     4e0:	24 b1       	in	r18, 0x04	; 4

	ADCSRA |= _BV(ADSC);//start conversion
     4e2:	36 9a       	sbi	0x06, 6	; 6

	while (ADCSRA & _BV(ADSC)); //wait again note semicolon!
     4e4:	36 99       	sbic	0x06, 6	; 6
     4e6:	fe cf       	rjmp	.-4      	; 0x4e4 <_ZN5Gates10setup_seedEv+0x18>

	unsigned char byte2 = ADCL;
     4e8:	84 b1       	in	r24, 0x04	; 4

	unsigned int seed = byte1 << 8 | byte2;
     4ea:	90 e0       	ldi	r25, 0x00	; 0

	srand(seed);
     4ec:	92 2b       	or	r25, r18
     4ee:	0e 94 07 10 	call	0x200e	; 0x200e <srand>

	ADCSRA &= ~_BV(ADEN); //disable ADC
     4f2:	37 98       	cbi	0x06, 7	; 6

	ADMUX = oldADMUX;
     4f4:	c7 b9       	out	0x07, r28	; 7
}
     4f6:	cf 91       	pop	r28
     4f8:	08 95       	ret

000004fa <_ZN5GatesC1Ev>:
#include "gates.h"
#include "uart.h"
#include "qepu.h"
#include <stdlib.h>
Gates::Gates(){setup_seed();}
     4fa:	0e 94 66 02 	call	0x4cc	; 0x4cc <_ZN5Gates10setup_seedEv>
     4fe:	08 95       	ret

00000500 <_ZN5Gates8ampl2vecEii>:

int Gates::touch(double probability){
	return RAND_MAX*probability>=rand();
}

Complex * Gates::ampl2vec(int theta,int phi){
     500:	4f 92       	push	r4
     502:	5f 92       	push	r5
     504:	6f 92       	push	r6
     506:	7f 92       	push	r7
     508:	8f 92       	push	r8
     50a:	9f 92       	push	r9
     50c:	af 92       	push	r10
     50e:	bf 92       	push	r11
     510:	ef 92       	push	r14
     512:	ff 92       	push	r15
     514:	0f 93       	push	r16
     516:	1f 93       	push	r17
     518:	cf 93       	push	r28
     51a:	df 93       	push	r29
     51c:	8b 01       	movw	r16, r22
     51e:	ea 01       	movw	r28, r20
	Complex* vec=(Complex*)malloc(sizeof(Complex)*2);
     520:	80 e1       	ldi	r24, 0x10	; 16
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <malloc>
     528:	7c 01       	movw	r14, r24
	vec[0].re=cos(theta*M_PI/360);						 // ALPHA RE (IM=0)
     52a:	b8 01       	movw	r22, r16
     52c:	88 27       	eor	r24, r24
     52e:	77 fd       	sbrc	r23, 7
     530:	80 95       	com	r24
     532:	98 2f       	mov	r25, r24
     534:	0e 94 a7 0c 	call	0x194e	; 0x194e <__floatsisf>
     538:	2b ed       	ldi	r18, 0xDB	; 219
     53a:	3f e0       	ldi	r19, 0x0F	; 15
     53c:	49 e4       	ldi	r20, 0x49	; 73
     53e:	50 e4       	ldi	r21, 0x40	; 64
     540:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__mulsf3>
     544:	20 e0       	ldi	r18, 0x00	; 0
     546:	30 e0       	ldi	r19, 0x00	; 0
     548:	44 eb       	ldi	r20, 0xB4	; 180
     54a:	53 e4       	ldi	r21, 0x43	; 67
     54c:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__divsf3>
     550:	4b 01       	movw	r8, r22
     552:	5c 01       	movw	r10, r24
     554:	0e 94 09 0c 	call	0x1812	; 0x1812 <cos>
     558:	f7 01       	movw	r30, r14
     55a:	60 83       	st	Z, r22
     55c:	71 83       	std	Z+1, r23	; 0x01
     55e:	82 83       	std	Z+2, r24	; 0x02
     560:	93 83       	std	Z+3, r25	; 0x03
	vec[1].re=sin((theta*M_PI)/360)*cos((phi*M_PI)/180); // BETA RE
     562:	c5 01       	movw	r24, r10
     564:	b4 01       	movw	r22, r8
     566:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <sin>
     56a:	4b 01       	movw	r8, r22
     56c:	5c 01       	movw	r10, r24
     56e:	be 01       	movw	r22, r28
     570:	88 27       	eor	r24, r24
     572:	77 fd       	sbrc	r23, 7
     574:	80 95       	com	r24
     576:	98 2f       	mov	r25, r24
     578:	0e 94 a7 0c 	call	0x194e	; 0x194e <__floatsisf>
     57c:	2b ed       	ldi	r18, 0xDB	; 219
     57e:	3f e0       	ldi	r19, 0x0F	; 15
     580:	49 e4       	ldi	r20, 0x49	; 73
     582:	50 e4       	ldi	r21, 0x40	; 64
     584:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__mulsf3>
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	44 e3       	ldi	r20, 0x34	; 52
     58e:	53 e4       	ldi	r21, 0x43	; 67
     590:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__divsf3>
     594:	2b 01       	movw	r4, r22
     596:	3c 01       	movw	r6, r24
     598:	0e 94 09 0c 	call	0x1812	; 0x1812 <cos>
     59c:	9b 01       	movw	r18, r22
     59e:	ac 01       	movw	r20, r24
     5a0:	c5 01       	movw	r24, r10
     5a2:	b4 01       	movw	r22, r8
     5a4:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__mulsf3>
     5a8:	f7 01       	movw	r30, r14
     5aa:	60 87       	std	Z+8, r22	; 0x08
     5ac:	71 87       	std	Z+9, r23	; 0x09
     5ae:	82 87       	std	Z+10, r24	; 0x0a
     5b0:	93 87       	std	Z+11, r25	; 0x0b
	vec[1].im=sin((theta*M_PI)/360)*sin((phi*M_PI)/180); // BETA IM
     5b2:	c3 01       	movw	r24, r6
     5b4:	b2 01       	movw	r22, r4
     5b6:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <sin>
     5ba:	9b 01       	movw	r18, r22
     5bc:	ac 01       	movw	r20, r24
     5be:	c5 01       	movw	r24, r10
     5c0:	b4 01       	movw	r22, r8
     5c2:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__mulsf3>
     5c6:	f7 01       	movw	r30, r14
     5c8:	64 87       	std	Z+12, r22	; 0x0c
     5ca:	75 87       	std	Z+13, r23	; 0x0d
     5cc:	86 87       	std	Z+14, r24	; 0x0e
     5ce:	97 87       	std	Z+15, r25	; 0x0f
	
	s.writestrln("Before: ");
     5d0:	6a e6       	ldi	r22, 0x6A	; 106
     5d2:	70 e0       	ldi	r23, 0x00	; 0
     5d4:	81 ec       	ldi	r24, 0xC1	; 193
     5d6:	90 e0       	ldi	r25, 0x00	; 0
     5d8:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <_ZN6Serial10writestrlnEPc>
     5dc:	e7 01       	movw	r28, r14
	for(int i=0;i<2;i++){
     5de:	00 e0       	ldi	r16, 0x00	; 0
     5e0:	10 e0       	ldi	r17, 0x00	; 0
		s.writestr("R: "); s.writestr(u.int2str(vec[i].re*1000));
     5e2:	63 e7       	ldi	r22, 0x73	; 115
     5e4:	70 e0       	ldi	r23, 0x00	; 0
     5e6:	81 ec       	ldi	r24, 0xC1	; 193
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN6Serial8writestrEPc>
     5ee:	20 e0       	ldi	r18, 0x00	; 0
     5f0:	30 e0       	ldi	r19, 0x00	; 0
     5f2:	4a e7       	ldi	r20, 0x7A	; 122
     5f4:	54 e4       	ldi	r21, 0x44	; 68
     5f6:	68 81       	ld	r22, Y
     5f8:	79 81       	ldd	r23, Y+1	; 0x01
     5fa:	8a 81       	ldd	r24, Y+2	; 0x02
     5fc:	9b 81       	ldd	r25, Y+3	; 0x03
     5fe:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__mulsf3>
     602:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <__fixsfsi>
     606:	80 ec       	ldi	r24, 0xC0	; 192
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	0e 94 3c 08 	call	0x1078	; 0x1078 <_ZN4QEPU5Utils7int2strEi>
     60e:	bc 01       	movw	r22, r24
     610:	81 ec       	ldi	r24, 0xC1	; 193
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN6Serial8writestrEPc>
		s.writestr(" . I: "); s.writestr(u.int2str(vec[i].im*1000));
     618:	67 e7       	ldi	r22, 0x77	; 119
     61a:	70 e0       	ldi	r23, 0x00	; 0
     61c:	81 ec       	ldi	r24, 0xC1	; 193
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN6Serial8writestrEPc>
     624:	20 e0       	ldi	r18, 0x00	; 0
     626:	30 e0       	ldi	r19, 0x00	; 0
     628:	4a e7       	ldi	r20, 0x7A	; 122
     62a:	54 e4       	ldi	r21, 0x44	; 68
     62c:	6c 81       	ldd	r22, Y+4	; 0x04
     62e:	7d 81       	ldd	r23, Y+5	; 0x05
     630:	8e 81       	ldd	r24, Y+6	; 0x06
     632:	9f 81       	ldd	r25, Y+7	; 0x07
     634:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__mulsf3>
     638:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <__fixsfsi>
     63c:	80 ec       	ldi	r24, 0xC0	; 192
     63e:	90 e0       	ldi	r25, 0x00	; 0
     640:	0e 94 3c 08 	call	0x1078	; 0x1078 <_ZN4QEPU5Utils7int2strEi>
     644:	bc 01       	movw	r22, r24
     646:	81 ec       	ldi	r24, 0xC1	; 193
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN6Serial8writestrEPc>
		s.writestrln("");
     64e:	6f ea       	ldi	r22, 0xAF	; 175
     650:	70 e0       	ldi	r23, 0x00	; 0
     652:	81 ec       	ldi	r24, 0xC1	; 193
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <_ZN6Serial10writestrlnEPc>
	vec[0].re=cos(theta*M_PI/360);						 // ALPHA RE (IM=0)
	vec[1].re=sin((theta*M_PI)/360)*cos((phi*M_PI)/180); // BETA RE
	vec[1].im=sin((theta*M_PI)/360)*sin((phi*M_PI)/180); // BETA IM
	
	s.writestrln("Before: ");
	for(int i=0;i<2;i++){
     65a:	0f 5f       	subi	r16, 0xFF	; 255
     65c:	1f 4f       	sbci	r17, 0xFF	; 255
     65e:	28 96       	adiw	r28, 0x08	; 8
     660:	02 30       	cpi	r16, 0x02	; 2
     662:	11 05       	cpc	r17, r1
     664:	09 f0       	breq	.+2      	; 0x668 <_ZN5Gates8ampl2vecEii+0x168>
     666:	bd cf       	rjmp	.-134    	; 0x5e2 <_ZN5Gates8ampl2vecEii+0xe2>
		s.writestr("R: "); s.writestr(u.int2str(vec[i].re*1000));
		s.writestr(" . I: "); s.writestr(u.int2str(vec[i].im*1000));
		s.writestrln("");
	}
	return vec;
}
     668:	c7 01       	movw	r24, r14
     66a:	df 91       	pop	r29
     66c:	cf 91       	pop	r28
     66e:	1f 91       	pop	r17
     670:	0f 91       	pop	r16
     672:	ff 90       	pop	r15
     674:	ef 90       	pop	r14
     676:	bf 90       	pop	r11
     678:	af 90       	pop	r10
     67a:	9f 90       	pop	r9
     67c:	8f 90       	pop	r8
     67e:	7f 90       	pop	r7
     680:	6f 90       	pop	r6
     682:	5f 90       	pop	r5
     684:	4f 90       	pop	r4
     686:	08 95       	ret

00000688 <_ZN5Gates8vec2amplEP7Complex>:
int * Gates::vec2ampl(Complex * vec){
     688:	ef 92       	push	r14
     68a:	ff 92       	push	r15
     68c:	0f 93       	push	r16
     68e:	1f 93       	push	r17
     690:	cf 93       	push	r28
     692:	df 93       	push	r29
     694:	eb 01       	movw	r28, r22
	int* newthephi=(int*)malloc(sizeof(int)*2);
     696:	84 e0       	ldi	r24, 0x04	; 4
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <malloc>
     69e:	7c 01       	movw	r14, r24
	newthephi[0]=(360*acos(vec[0].re))/M_PI;
     6a0:	68 81       	ld	r22, Y
     6a2:	79 81       	ldd	r23, Y+1	; 0x01
     6a4:	8a 81       	ldd	r24, Y+2	; 0x02
     6a6:	9b 81       	ldd	r25, Y+3	; 0x03
     6a8:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <acos>
     6ac:	20 e0       	ldi	r18, 0x00	; 0
     6ae:	30 e0       	ldi	r19, 0x00	; 0
     6b0:	44 eb       	ldi	r20, 0xB4	; 180
     6b2:	53 e4       	ldi	r21, 0x43	; 67
     6b4:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__mulsf3>
     6b8:	2b ed       	ldi	r18, 0xDB	; 219
     6ba:	3f e0       	ldi	r19, 0x0F	; 15
     6bc:	49 e4       	ldi	r20, 0x49	; 73
     6be:	50 e4       	ldi	r21, 0x40	; 64
     6c0:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__divsf3>
     6c4:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <__fixsfsi>
     6c8:	f7 01       	movw	r30, r14
     6ca:	71 83       	std	Z+1, r23	; 0x01
     6cc:	60 83       	st	Z, r22
	newthephi[1]=(180*vec[1].arg())/M_PI;
     6ce:	ce 01       	movw	r24, r28
     6d0:	08 96       	adiw	r24, 0x08	; 8
     6d2:	0e 94 b4 01 	call	0x368	; 0x368 <_ZN7Complex3argEv>
     6d6:	20 e0       	ldi	r18, 0x00	; 0
     6d8:	30 e0       	ldi	r19, 0x00	; 0
     6da:	44 e3       	ldi	r20, 0x34	; 52
     6dc:	53 e4       	ldi	r21, 0x43	; 67
     6de:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__mulsf3>
     6e2:	2b ed       	ldi	r18, 0xDB	; 219
     6e4:	3f e0       	ldi	r19, 0x0F	; 15
     6e6:	49 e4       	ldi	r20, 0x49	; 73
     6e8:	50 e4       	ldi	r21, 0x40	; 64
     6ea:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__divsf3>
     6ee:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <__fixsfsi>
     6f2:	f7 01       	movw	r30, r14
     6f4:	73 83       	std	Z+3, r23	; 0x03
     6f6:	62 83       	std	Z+2, r22	; 0x02
	
	s.writestrln(""); s.writestrln("After: ");
     6f8:	6f ea       	ldi	r22, 0xAF	; 175
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	81 ec       	ldi	r24, 0xC1	; 193
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <_ZN6Serial10writestrlnEPc>
     704:	6e e7       	ldi	r22, 0x7E	; 126
     706:	70 e0       	ldi	r23, 0x00	; 0
     708:	81 ec       	ldi	r24, 0xC1	; 193
     70a:	90 e0       	ldi	r25, 0x00	; 0
     70c:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <_ZN6Serial10writestrlnEPc>
	for(int i=0;i<2;i++){
     710:	00 e0       	ldi	r16, 0x00	; 0
     712:	10 e0       	ldi	r17, 0x00	; 0
		s.writestr("R: "); s.writestr(u.int2str(vec[i].re*1000));
     714:	63 e7       	ldi	r22, 0x73	; 115
     716:	70 e0       	ldi	r23, 0x00	; 0
     718:	81 ec       	ldi	r24, 0xC1	; 193
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN6Serial8writestrEPc>
     720:	20 e0       	ldi	r18, 0x00	; 0
     722:	30 e0       	ldi	r19, 0x00	; 0
     724:	4a e7       	ldi	r20, 0x7A	; 122
     726:	54 e4       	ldi	r21, 0x44	; 68
     728:	68 81       	ld	r22, Y
     72a:	79 81       	ldd	r23, Y+1	; 0x01
     72c:	8a 81       	ldd	r24, Y+2	; 0x02
     72e:	9b 81       	ldd	r25, Y+3	; 0x03
     730:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__mulsf3>
     734:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <__fixsfsi>
     738:	80 ec       	ldi	r24, 0xC0	; 192
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	0e 94 3c 08 	call	0x1078	; 0x1078 <_ZN4QEPU5Utils7int2strEi>
     740:	bc 01       	movw	r22, r24
     742:	81 ec       	ldi	r24, 0xC1	; 193
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN6Serial8writestrEPc>
		s.writestr(" . I: "); s.writestr(u.int2str(vec[i].im*1000));
     74a:	67 e7       	ldi	r22, 0x77	; 119
     74c:	70 e0       	ldi	r23, 0x00	; 0
     74e:	81 ec       	ldi	r24, 0xC1	; 193
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN6Serial8writestrEPc>
     756:	20 e0       	ldi	r18, 0x00	; 0
     758:	30 e0       	ldi	r19, 0x00	; 0
     75a:	4a e7       	ldi	r20, 0x7A	; 122
     75c:	54 e4       	ldi	r21, 0x44	; 68
     75e:	6c 81       	ldd	r22, Y+4	; 0x04
     760:	7d 81       	ldd	r23, Y+5	; 0x05
     762:	8e 81       	ldd	r24, Y+6	; 0x06
     764:	9f 81       	ldd	r25, Y+7	; 0x07
     766:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__mulsf3>
     76a:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <__fixsfsi>
     76e:	80 ec       	ldi	r24, 0xC0	; 192
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	0e 94 3c 08 	call	0x1078	; 0x1078 <_ZN4QEPU5Utils7int2strEi>
     776:	bc 01       	movw	r22, r24
     778:	81 ec       	ldi	r24, 0xC1	; 193
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN6Serial8writestrEPc>
		s.writestrln("");
     780:	6f ea       	ldi	r22, 0xAF	; 175
     782:	70 e0       	ldi	r23, 0x00	; 0
     784:	81 ec       	ldi	r24, 0xC1	; 193
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <_ZN6Serial10writestrlnEPc>
	int* newthephi=(int*)malloc(sizeof(int)*2);
	newthephi[0]=(360*acos(vec[0].re))/M_PI;
	newthephi[1]=(180*vec[1].arg())/M_PI;
	
	s.writestrln(""); s.writestrln("After: ");
	for(int i=0;i<2;i++){
     78c:	0f 5f       	subi	r16, 0xFF	; 255
     78e:	1f 4f       	sbci	r17, 0xFF	; 255
     790:	28 96       	adiw	r28, 0x08	; 8
     792:	02 30       	cpi	r16, 0x02	; 2
     794:	11 05       	cpc	r17, r1
     796:	09 f0       	breq	.+2      	; 0x79a <_ZN5Gates8vec2amplEP7Complex+0x112>
     798:	bd cf       	rjmp	.-134    	; 0x714 <_ZN5Gates8vec2amplEP7Complex+0x8c>
		s.writestr("R: "); s.writestr(u.int2str(vec[i].re*1000));
		s.writestr(" . I: "); s.writestr(u.int2str(vec[i].im*1000));
		s.writestrln("");
	}
	s.writestrln("");
     79a:	6f ea       	ldi	r22, 0xAF	; 175
     79c:	70 e0       	ldi	r23, 0x00	; 0
     79e:	81 ec       	ldi	r24, 0xC1	; 193
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <_ZN6Serial10writestrlnEPc>
	return newthephi;
}
     7a6:	c7 01       	movw	r24, r14
     7a8:	df 91       	pop	r29
     7aa:	cf 91       	pop	r28
     7ac:	1f 91       	pop	r17
     7ae:	0f 91       	pop	r16
     7b0:	ff 90       	pop	r15
     7b2:	ef 90       	pop	r14
     7b4:	08 95       	ret

000007b6 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>:

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
     7b6:	2f 92       	push	r2
     7b8:	3f 92       	push	r3
     7ba:	4f 92       	push	r4
     7bc:	5f 92       	push	r5
     7be:	6f 92       	push	r6
     7c0:	7f 92       	push	r7
     7c2:	8f 92       	push	r8
     7c4:	9f 92       	push	r9
     7c6:	af 92       	push	r10
     7c8:	bf 92       	push	r11
     7ca:	cf 92       	push	r12
     7cc:	df 92       	push	r13
     7ce:	ef 92       	push	r14
     7d0:	ff 92       	push	r15
     7d2:	0f 93       	push	r16
     7d4:	1f 93       	push	r17
     7d6:	cf 93       	push	r28
     7d8:	df 93       	push	r29
     7da:	cd b7       	in	r28, 0x3d	; 61
     7dc:	de b7       	in	r29, 0x3e	; 62
     7de:	60 97       	sbiw	r28, 0x10	; 16
     7e0:	0f b6       	in	r0, 0x3f	; 63
     7e2:	f8 94       	cli
     7e4:	de bf       	out	0x3e, r29	; 62
     7e6:	0f be       	out	0x3f, r0	; 63
     7e8:	cd bf       	out	0x3d, r28	; 61
     7ea:	4b 01       	movw	r8, r22
     7ec:	3a 01       	movw	r6, r20
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
     7ee:	80 e1       	ldi	r24, 0x10	; 16
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <malloc>
     7f6:	38 2e       	mov	r3, r24
     7f8:	29 2e       	mov	r2, r25
     7fa:	c8 2e       	mov	r12, r24
     7fc:	d9 2e       	mov	r13, r25
	for(int i=0;i<qb_size;i++){
     7fe:	a1 2c       	mov	r10, r1
     800:	b1 2c       	mov	r11, r1
		Complex tmp;
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
     802:	24 01       	movw	r4, r8
     804:	88 e0       	ldi	r24, 0x08	; 8
     806:	48 0e       	add	r4, r24
     808:	51 1c       	adc	r5, r1

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
		Complex tmp;
     80a:	ce 01       	movw	r24, r28
     80c:	09 96       	adiw	r24, 0x09	; 9
     80e:	0e 94 b2 00 	call	0x164	; 0x164 <_ZN7ComplexC1Ev>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
     812:	75 01       	movw	r14, r10
     814:	ee 0c       	add	r14, r14
     816:	ff 1c       	adc	r15, r15
     818:	ee 0c       	add	r14, r14
     81a:	ff 1c       	adc	r15, r15
     81c:	ee 0c       	add	r14, r14
     81e:	ff 1c       	adc	r15, r15
     820:	e6 0c       	add	r14, r6
     822:	f7 1c       	adc	r15, r7
     824:	d7 01       	movw	r26, r14
     826:	0c 91       	ld	r16, X
     828:	11 96       	adiw	r26, 0x01	; 1
     82a:	1c 91       	ld	r17, X
     82c:	11 97       	sbiw	r26, 0x01	; 1
     82e:	12 96       	adiw	r26, 0x02	; 2
     830:	2c 91       	ld	r18, X
     832:	12 97       	sbiw	r26, 0x02	; 2
     834:	13 96       	adiw	r26, 0x03	; 3
     836:	3c 91       	ld	r19, X
     838:	13 97       	sbiw	r26, 0x03	; 3
     83a:	14 96       	adiw	r26, 0x04	; 4
     83c:	4c 91       	ld	r20, X
     83e:	14 97       	sbiw	r26, 0x04	; 4
     840:	15 96       	adiw	r26, 0x05	; 5
     842:	5c 91       	ld	r21, X
     844:	15 97       	sbiw	r26, 0x05	; 5
     846:	16 96       	adiw	r26, 0x06	; 6
     848:	6c 91       	ld	r22, X
     84a:	16 97       	sbiw	r26, 0x06	; 6
     84c:	17 96       	adiw	r26, 0x07	; 7
     84e:	7c 91       	ld	r23, X
     850:	c4 01       	movw	r24, r8
     852:	0e 94 19 01 	call	0x232	; 0x232 <_ZN7Complex3mulES_>
     856:	02 2f       	mov	r16, r18
     858:	13 2f       	mov	r17, r19
     85a:	24 2f       	mov	r18, r20
     85c:	35 2f       	mov	r19, r21
     85e:	46 2f       	mov	r20, r22
     860:	57 2f       	mov	r21, r23
     862:	68 2f       	mov	r22, r24
     864:	79 2f       	mov	r23, r25
     866:	ce 01       	movw	r24, r28
     868:	09 96       	adiw	r24, 0x09	; 9
     86a:	0e 94 bc 00 	call	0x178	; 0x178 <_ZN7Complex3addES_>
     86e:	29 87       	std	Y+9, r18	; 0x09
     870:	3a 87       	std	Y+10, r19	; 0x0a
     872:	4b 87       	std	Y+11, r20	; 0x0b
     874:	5c 87       	std	Y+12, r21	; 0x0c
     876:	6d 87       	std	Y+13, r22	; 0x0d
     878:	7e 87       	std	Y+14, r23	; 0x0e
     87a:	8f 87       	std	Y+15, r24	; 0x0f
     87c:	98 8b       	std	Y+16, r25	; 0x10
     87e:	f7 01       	movw	r30, r14
     880:	70 96       	adiw	r30, 0x10	; 16
     882:	d7 01       	movw	r26, r14
     884:	50 96       	adiw	r26, 0x10	; 16
     886:	0c 91       	ld	r16, X
     888:	11 81       	ldd	r17, Z+1	; 0x01
     88a:	22 81       	ldd	r18, Z+2	; 0x02
     88c:	33 81       	ldd	r19, Z+3	; 0x03
     88e:	44 81       	ldd	r20, Z+4	; 0x04
     890:	55 81       	ldd	r21, Z+5	; 0x05
     892:	66 81       	ldd	r22, Z+6	; 0x06
     894:	77 81       	ldd	r23, Z+7	; 0x07
     896:	c2 01       	movw	r24, r4
     898:	0e 94 19 01 	call	0x232	; 0x232 <_ZN7Complex3mulES_>
     89c:	02 2f       	mov	r16, r18
     89e:	13 2f       	mov	r17, r19
     8a0:	24 2f       	mov	r18, r20
     8a2:	35 2f       	mov	r19, r21
     8a4:	46 2f       	mov	r20, r22
     8a6:	57 2f       	mov	r21, r23
     8a8:	68 2f       	mov	r22, r24
     8aa:	79 2f       	mov	r23, r25
     8ac:	ce 01       	movw	r24, r28
     8ae:	09 96       	adiw	r24, 0x09	; 9
     8b0:	0e 94 bc 00 	call	0x178	; 0x178 <_ZN7Complex3addES_>
     8b4:	29 87       	std	Y+9, r18	; 0x09
     8b6:	3a 87       	std	Y+10, r19	; 0x0a
     8b8:	4b 87       	std	Y+11, r20	; 0x0b
     8ba:	5c 87       	std	Y+12, r21	; 0x0c
     8bc:	6d 87       	std	Y+13, r22	; 0x0d
     8be:	7e 87       	std	Y+14, r23	; 0x0e
     8c0:	8f 87       	std	Y+15, r24	; 0x0f
     8c2:	98 8b       	std	Y+16, r25	; 0x10
		result[i].re=tmp.re;
     8c4:	89 85       	ldd	r24, Y+9	; 0x09
     8c6:	9a 85       	ldd	r25, Y+10	; 0x0a
     8c8:	ab 85       	ldd	r26, Y+11	; 0x0b
     8ca:	bc 85       	ldd	r27, Y+12	; 0x0c
     8cc:	f6 01       	movw	r30, r12
     8ce:	80 83       	st	Z, r24
     8d0:	91 83       	std	Z+1, r25	; 0x01
     8d2:	a2 83       	std	Z+2, r26	; 0x02
     8d4:	b3 83       	std	Z+3, r27	; 0x03
		result[i].im=tmp.im;
     8d6:	8d 85       	ldd	r24, Y+13	; 0x0d
     8d8:	9e 85       	ldd	r25, Y+14	; 0x0e
     8da:	af 85       	ldd	r26, Y+15	; 0x0f
     8dc:	b8 89       	ldd	r27, Y+16	; 0x10
     8de:	84 83       	std	Z+4, r24	; 0x04
     8e0:	95 83       	std	Z+5, r25	; 0x05
     8e2:	a6 83       	std	Z+6, r26	; 0x06
     8e4:	b7 83       	std	Z+7, r27	; 0x07
}

Complex * Gates::multiply2x2(Complex *q,Complex matrix[2][2]){
	int qb_size=2;
	Complex * result=(Complex*)malloc(sizeof(Complex)*qb_size);
	for(int i=0;i<qb_size;i++){
     8e6:	ff ef       	ldi	r31, 0xFF	; 255
     8e8:	af 1a       	sub	r10, r31
     8ea:	bf 0a       	sbc	r11, r31
     8ec:	88 e0       	ldi	r24, 0x08	; 8
     8ee:	c8 0e       	add	r12, r24
     8f0:	d1 1c       	adc	r13, r1
     8f2:	a2 e0       	ldi	r26, 0x02	; 2
     8f4:	aa 16       	cp	r10, r26
     8f6:	b1 04       	cpc	r11, r1
     8f8:	09 f0       	breq	.+2      	; 0x8fc <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_+0x146>
     8fa:	87 cf       	rjmp	.-242    	; 0x80a <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_+0x54>
		for(int j=0;j<qb_size;j++) tmp=tmp.add(q[j].mul(matrix[j][i]));
		result[i].re=tmp.re;
		result[i].im=tmp.im;
	}
	return result;
}
     8fc:	83 2d       	mov	r24, r3
     8fe:	92 2d       	mov	r25, r2
     900:	60 96       	adiw	r28, 0x10	; 16
     902:	0f b6       	in	r0, 0x3f	; 63
     904:	f8 94       	cli
     906:	de bf       	out	0x3e, r29	; 62
     908:	0f be       	out	0x3f, r0	; 63
     90a:	cd bf       	out	0x3d, r28	; 61
     90c:	df 91       	pop	r29
     90e:	cf 91       	pop	r28
     910:	1f 91       	pop	r17
     912:	0f 91       	pop	r16
     914:	ff 90       	pop	r15
     916:	ef 90       	pop	r14
     918:	df 90       	pop	r13
     91a:	cf 90       	pop	r12
     91c:	bf 90       	pop	r11
     91e:	af 90       	pop	r10
     920:	9f 90       	pop	r9
     922:	8f 90       	pop	r8
     924:	7f 90       	pop	r7
     926:	6f 90       	pop	r6
     928:	5f 90       	pop	r5
     92a:	4f 90       	pop	r4
     92c:	3f 90       	pop	r3
     92e:	2f 90       	pop	r2
     930:	08 95       	ret

00000932 <_ZN5Gates1XEii>:
		result[i].im=tmp.im;
	}
	return result;
}

int * Gates::X(int theta,int phi){
     932:	af 92       	push	r10
     934:	bf 92       	push	r11
     936:	cf 92       	push	r12
     938:	df 92       	push	r13
     93a:	ef 92       	push	r14
     93c:	ff 92       	push	r15
     93e:	0f 93       	push	r16
     940:	1f 93       	push	r17
     942:	cf 93       	push	r28
     944:	df 93       	push	r29
     946:	cd b7       	in	r28, 0x3d	; 61
     948:	de b7       	in	r29, 0x3e	; 62
     94a:	a0 97       	sbiw	r28, 0x20	; 32
     94c:	0f b6       	in	r0, 0x3f	; 63
     94e:	f8 94       	cli
     950:	de bf       	out	0x3e, r29	; 62
     952:	0f be       	out	0x3f, r0	; 63
     954:	cd bf       	out	0x3d, r28	; 61
     956:	7c 01       	movw	r14, r24
     958:	6b 01       	movw	r12, r22
     95a:	5a 01       	movw	r10, r20
	Complex x_matrix[2][2]{{Complex(0,0),Complex(1,0)},
						   {Complex(1,0),Complex(0,0)}};
     95c:	00 e0       	ldi	r16, 0x00	; 0
     95e:	10 e0       	ldi	r17, 0x00	; 0
     960:	98 01       	movw	r18, r16
     962:	b9 01       	movw	r22, r18
     964:	a8 01       	movw	r20, r16
     966:	ce 01       	movw	r24, r28
     968:	01 96       	adiw	r24, 0x01	; 1
     96a:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     96e:	00 e0       	ldi	r16, 0x00	; 0
     970:	10 e0       	ldi	r17, 0x00	; 0
     972:	98 01       	movw	r18, r16
     974:	40 e0       	ldi	r20, 0x00	; 0
     976:	50 e0       	ldi	r21, 0x00	; 0
     978:	60 e8       	ldi	r22, 0x80	; 128
     97a:	7f e3       	ldi	r23, 0x3F	; 63
     97c:	ce 01       	movw	r24, r28
     97e:	09 96       	adiw	r24, 0x09	; 9
     980:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     984:	00 e0       	ldi	r16, 0x00	; 0
     986:	10 e0       	ldi	r17, 0x00	; 0
     988:	98 01       	movw	r18, r16
     98a:	40 e0       	ldi	r20, 0x00	; 0
     98c:	50 e0       	ldi	r21, 0x00	; 0
     98e:	60 e8       	ldi	r22, 0x80	; 128
     990:	7f e3       	ldi	r23, 0x3F	; 63
     992:	ce 01       	movw	r24, r28
     994:	41 96       	adiw	r24, 0x11	; 17
     996:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     99a:	00 e0       	ldi	r16, 0x00	; 0
     99c:	10 e0       	ldi	r17, 0x00	; 0
     99e:	98 01       	movw	r18, r16
     9a0:	b9 01       	movw	r22, r18
     9a2:	a8 01       	movw	r20, r16
     9a4:	ce 01       	movw	r24, r28
     9a6:	49 96       	adiw	r24, 0x19	; 25
     9a8:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
	return vec2ampl(multiply2x2(ampl2vec(theta,phi),x_matrix));
     9ac:	a5 01       	movw	r20, r10
     9ae:	b6 01       	movw	r22, r12
     9b0:	c7 01       	movw	r24, r14
     9b2:	0e 94 80 02 	call	0x500	; 0x500 <_ZN5Gates8ampl2vecEii>
     9b6:	ae 01       	movw	r20, r28
     9b8:	4f 5f       	subi	r20, 0xFF	; 255
     9ba:	5f 4f       	sbci	r21, 0xFF	; 255
     9bc:	bc 01       	movw	r22, r24
     9be:	c7 01       	movw	r24, r14
     9c0:	0e 94 db 03 	call	0x7b6	; 0x7b6 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
     9c4:	bc 01       	movw	r22, r24
     9c6:	c7 01       	movw	r24, r14
     9c8:	0e 94 44 03 	call	0x688	; 0x688 <_ZN5Gates8vec2amplEP7Complex>
}
     9cc:	a0 96       	adiw	r28, 0x20	; 32
     9ce:	0f b6       	in	r0, 0x3f	; 63
     9d0:	f8 94       	cli
     9d2:	de bf       	out	0x3e, r29	; 62
     9d4:	0f be       	out	0x3f, r0	; 63
     9d6:	cd bf       	out	0x3d, r28	; 61
     9d8:	df 91       	pop	r29
     9da:	cf 91       	pop	r28
     9dc:	1f 91       	pop	r17
     9de:	0f 91       	pop	r16
     9e0:	ff 90       	pop	r15
     9e2:	ef 90       	pop	r14
     9e4:	df 90       	pop	r13
     9e6:	cf 90       	pop	r12
     9e8:	bf 90       	pop	r11
     9ea:	af 90       	pop	r10
     9ec:	08 95       	ret

000009ee <_ZN5Gates1YEii>:
int * Gates::Y(int theta,int phi){
     9ee:	af 92       	push	r10
     9f0:	bf 92       	push	r11
     9f2:	cf 92       	push	r12
     9f4:	df 92       	push	r13
     9f6:	ef 92       	push	r14
     9f8:	ff 92       	push	r15
     9fa:	0f 93       	push	r16
     9fc:	1f 93       	push	r17
     9fe:	cf 93       	push	r28
     a00:	df 93       	push	r29
     a02:	cd b7       	in	r28, 0x3d	; 61
     a04:	de b7       	in	r29, 0x3e	; 62
     a06:	a0 97       	sbiw	r28, 0x20	; 32
     a08:	0f b6       	in	r0, 0x3f	; 63
     a0a:	f8 94       	cli
     a0c:	de bf       	out	0x3e, r29	; 62
     a0e:	0f be       	out	0x3f, r0	; 63
     a10:	cd bf       	out	0x3d, r28	; 61
     a12:	7c 01       	movw	r14, r24
     a14:	6b 01       	movw	r12, r22
     a16:	5a 01       	movw	r10, r20
	Complex y_matrix[2][2]{{Complex(0,0),Complex(0,-1)},
						   {Complex(0,1),Complex(0,0)}};
     a18:	00 e0       	ldi	r16, 0x00	; 0
     a1a:	10 e0       	ldi	r17, 0x00	; 0
     a1c:	98 01       	movw	r18, r16
     a1e:	b9 01       	movw	r22, r18
     a20:	a8 01       	movw	r20, r16
     a22:	ce 01       	movw	r24, r28
     a24:	01 96       	adiw	r24, 0x01	; 1
     a26:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     a2a:	00 e0       	ldi	r16, 0x00	; 0
     a2c:	10 e0       	ldi	r17, 0x00	; 0
     a2e:	20 e8       	ldi	r18, 0x80	; 128
     a30:	3f eb       	ldi	r19, 0xBF	; 191
     a32:	40 e0       	ldi	r20, 0x00	; 0
     a34:	50 e0       	ldi	r21, 0x00	; 0
     a36:	ba 01       	movw	r22, r20
     a38:	ce 01       	movw	r24, r28
     a3a:	09 96       	adiw	r24, 0x09	; 9
     a3c:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     a40:	00 e0       	ldi	r16, 0x00	; 0
     a42:	10 e0       	ldi	r17, 0x00	; 0
     a44:	20 e8       	ldi	r18, 0x80	; 128
     a46:	3f e3       	ldi	r19, 0x3F	; 63
     a48:	40 e0       	ldi	r20, 0x00	; 0
     a4a:	50 e0       	ldi	r21, 0x00	; 0
     a4c:	ba 01       	movw	r22, r20
     a4e:	ce 01       	movw	r24, r28
     a50:	41 96       	adiw	r24, 0x11	; 17
     a52:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     a56:	00 e0       	ldi	r16, 0x00	; 0
     a58:	10 e0       	ldi	r17, 0x00	; 0
     a5a:	98 01       	movw	r18, r16
     a5c:	b9 01       	movw	r22, r18
     a5e:	a8 01       	movw	r20, r16
     a60:	ce 01       	movw	r24, r28
     a62:	49 96       	adiw	r24, 0x19	; 25
     a64:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
	return vec2ampl(multiply2x2(ampl2vec(theta,phi),y_matrix));
     a68:	a5 01       	movw	r20, r10
     a6a:	b6 01       	movw	r22, r12
     a6c:	c7 01       	movw	r24, r14
     a6e:	0e 94 80 02 	call	0x500	; 0x500 <_ZN5Gates8ampl2vecEii>
     a72:	ae 01       	movw	r20, r28
     a74:	4f 5f       	subi	r20, 0xFF	; 255
     a76:	5f 4f       	sbci	r21, 0xFF	; 255
     a78:	bc 01       	movw	r22, r24
     a7a:	c7 01       	movw	r24, r14
     a7c:	0e 94 db 03 	call	0x7b6	; 0x7b6 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
     a80:	bc 01       	movw	r22, r24
     a82:	c7 01       	movw	r24, r14
     a84:	0e 94 44 03 	call	0x688	; 0x688 <_ZN5Gates8vec2amplEP7Complex>
}
     a88:	a0 96       	adiw	r28, 0x20	; 32
     a8a:	0f b6       	in	r0, 0x3f	; 63
     a8c:	f8 94       	cli
     a8e:	de bf       	out	0x3e, r29	; 62
     a90:	0f be       	out	0x3f, r0	; 63
     a92:	cd bf       	out	0x3d, r28	; 61
     a94:	df 91       	pop	r29
     a96:	cf 91       	pop	r28
     a98:	1f 91       	pop	r17
     a9a:	0f 91       	pop	r16
     a9c:	ff 90       	pop	r15
     a9e:	ef 90       	pop	r14
     aa0:	df 90       	pop	r13
     aa2:	cf 90       	pop	r12
     aa4:	bf 90       	pop	r11
     aa6:	af 90       	pop	r10
     aa8:	08 95       	ret

00000aaa <_ZN5Gates1ZEii>:
int * Gates::Z(int theta,int phi){
     aaa:	af 92       	push	r10
     aac:	bf 92       	push	r11
     aae:	cf 92       	push	r12
     ab0:	df 92       	push	r13
     ab2:	ef 92       	push	r14
     ab4:	ff 92       	push	r15
     ab6:	0f 93       	push	r16
     ab8:	1f 93       	push	r17
     aba:	cf 93       	push	r28
     abc:	df 93       	push	r29
     abe:	cd b7       	in	r28, 0x3d	; 61
     ac0:	de b7       	in	r29, 0x3e	; 62
     ac2:	a0 97       	sbiw	r28, 0x20	; 32
     ac4:	0f b6       	in	r0, 0x3f	; 63
     ac6:	f8 94       	cli
     ac8:	de bf       	out	0x3e, r29	; 62
     aca:	0f be       	out	0x3f, r0	; 63
     acc:	cd bf       	out	0x3d, r28	; 61
     ace:	7c 01       	movw	r14, r24
     ad0:	6b 01       	movw	r12, r22
     ad2:	5a 01       	movw	r10, r20
	Complex z_matrix[2][2]{{Complex(1,0),Complex(0,0)},
						   {Complex(0,0),Complex(-1,0)}};
     ad4:	00 e0       	ldi	r16, 0x00	; 0
     ad6:	10 e0       	ldi	r17, 0x00	; 0
     ad8:	98 01       	movw	r18, r16
     ada:	40 e0       	ldi	r20, 0x00	; 0
     adc:	50 e0       	ldi	r21, 0x00	; 0
     ade:	60 e8       	ldi	r22, 0x80	; 128
     ae0:	7f e3       	ldi	r23, 0x3F	; 63
     ae2:	ce 01       	movw	r24, r28
     ae4:	01 96       	adiw	r24, 0x01	; 1
     ae6:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     aea:	00 e0       	ldi	r16, 0x00	; 0
     aec:	10 e0       	ldi	r17, 0x00	; 0
     aee:	98 01       	movw	r18, r16
     af0:	b9 01       	movw	r22, r18
     af2:	a8 01       	movw	r20, r16
     af4:	ce 01       	movw	r24, r28
     af6:	09 96       	adiw	r24, 0x09	; 9
     af8:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     afc:	00 e0       	ldi	r16, 0x00	; 0
     afe:	10 e0       	ldi	r17, 0x00	; 0
     b00:	98 01       	movw	r18, r16
     b02:	b9 01       	movw	r22, r18
     b04:	a8 01       	movw	r20, r16
     b06:	ce 01       	movw	r24, r28
     b08:	41 96       	adiw	r24, 0x11	; 17
     b0a:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     b0e:	00 e0       	ldi	r16, 0x00	; 0
     b10:	10 e0       	ldi	r17, 0x00	; 0
     b12:	98 01       	movw	r18, r16
     b14:	40 e0       	ldi	r20, 0x00	; 0
     b16:	50 e0       	ldi	r21, 0x00	; 0
     b18:	60 e8       	ldi	r22, 0x80	; 128
     b1a:	7f eb       	ldi	r23, 0xBF	; 191
     b1c:	ce 01       	movw	r24, r28
     b1e:	49 96       	adiw	r24, 0x19	; 25
     b20:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
	return vec2ampl(multiply2x2(ampl2vec(theta,phi),z_matrix));
     b24:	a5 01       	movw	r20, r10
     b26:	b6 01       	movw	r22, r12
     b28:	c7 01       	movw	r24, r14
     b2a:	0e 94 80 02 	call	0x500	; 0x500 <_ZN5Gates8ampl2vecEii>
     b2e:	ae 01       	movw	r20, r28
     b30:	4f 5f       	subi	r20, 0xFF	; 255
     b32:	5f 4f       	sbci	r21, 0xFF	; 255
     b34:	bc 01       	movw	r22, r24
     b36:	c7 01       	movw	r24, r14
     b38:	0e 94 db 03 	call	0x7b6	; 0x7b6 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
     b3c:	bc 01       	movw	r22, r24
     b3e:	c7 01       	movw	r24, r14
     b40:	0e 94 44 03 	call	0x688	; 0x688 <_ZN5Gates8vec2amplEP7Complex>
}
     b44:	a0 96       	adiw	r28, 0x20	; 32
     b46:	0f b6       	in	r0, 0x3f	; 63
     b48:	f8 94       	cli
     b4a:	de bf       	out	0x3e, r29	; 62
     b4c:	0f be       	out	0x3f, r0	; 63
     b4e:	cd bf       	out	0x3d, r28	; 61
     b50:	df 91       	pop	r29
     b52:	cf 91       	pop	r28
     b54:	1f 91       	pop	r17
     b56:	0f 91       	pop	r16
     b58:	ff 90       	pop	r15
     b5a:	ef 90       	pop	r14
     b5c:	df 90       	pop	r13
     b5e:	cf 90       	pop	r12
     b60:	bf 90       	pop	r11
     b62:	af 90       	pop	r10
     b64:	08 95       	ret

00000b66 <_ZN5Gates1HEii>:
int * Gates::H(int theta,int phi){
     b66:	af 92       	push	r10
     b68:	bf 92       	push	r11
     b6a:	cf 92       	push	r12
     b6c:	df 92       	push	r13
     b6e:	ef 92       	push	r14
     b70:	ff 92       	push	r15
     b72:	0f 93       	push	r16
     b74:	1f 93       	push	r17
     b76:	cf 93       	push	r28
     b78:	df 93       	push	r29
     b7a:	cd b7       	in	r28, 0x3d	; 61
     b7c:	de b7       	in	r29, 0x3e	; 62
     b7e:	a0 97       	sbiw	r28, 0x20	; 32
     b80:	0f b6       	in	r0, 0x3f	; 63
     b82:	f8 94       	cli
     b84:	de bf       	out	0x3e, r29	; 62
     b86:	0f be       	out	0x3f, r0	; 63
     b88:	cd bf       	out	0x3d, r28	; 61
     b8a:	7c 01       	movw	r14, r24
     b8c:	6b 01       	movw	r12, r22
     b8e:	5a 01       	movw	r10, r20
	Complex h_matrix[2][2]{{Complex(1/sqrt(2),0),Complex(1/sqrt(2),0)},
						   {Complex(1/sqrt(2),0),Complex(-1/sqrt(2),0)}};
     b90:	00 e0       	ldi	r16, 0x00	; 0
     b92:	10 e0       	ldi	r17, 0x00	; 0
     b94:	98 01       	movw	r18, r16
     b96:	43 ef       	ldi	r20, 0xF3	; 243
     b98:	54 e0       	ldi	r21, 0x04	; 4
     b9a:	65 e3       	ldi	r22, 0x35	; 53
     b9c:	7f e3       	ldi	r23, 0x3F	; 63
     b9e:	ce 01       	movw	r24, r28
     ba0:	01 96       	adiw	r24, 0x01	; 1
     ba2:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     ba6:	00 e0       	ldi	r16, 0x00	; 0
     ba8:	10 e0       	ldi	r17, 0x00	; 0
     baa:	98 01       	movw	r18, r16
     bac:	43 ef       	ldi	r20, 0xF3	; 243
     bae:	54 e0       	ldi	r21, 0x04	; 4
     bb0:	65 e3       	ldi	r22, 0x35	; 53
     bb2:	7f e3       	ldi	r23, 0x3F	; 63
     bb4:	ce 01       	movw	r24, r28
     bb6:	09 96       	adiw	r24, 0x09	; 9
     bb8:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     bbc:	00 e0       	ldi	r16, 0x00	; 0
     bbe:	10 e0       	ldi	r17, 0x00	; 0
     bc0:	98 01       	movw	r18, r16
     bc2:	43 ef       	ldi	r20, 0xF3	; 243
     bc4:	54 e0       	ldi	r21, 0x04	; 4
     bc6:	65 e3       	ldi	r22, 0x35	; 53
     bc8:	7f e3       	ldi	r23, 0x3F	; 63
     bca:	ce 01       	movw	r24, r28
     bcc:	41 96       	adiw	r24, 0x11	; 17
     bce:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     bd2:	00 e0       	ldi	r16, 0x00	; 0
     bd4:	10 e0       	ldi	r17, 0x00	; 0
     bd6:	98 01       	movw	r18, r16
     bd8:	43 ef       	ldi	r20, 0xF3	; 243
     bda:	54 e0       	ldi	r21, 0x04	; 4
     bdc:	65 e3       	ldi	r22, 0x35	; 53
     bde:	7f eb       	ldi	r23, 0xBF	; 191
     be0:	ce 01       	movw	r24, r28
     be2:	49 96       	adiw	r24, 0x19	; 25
     be4:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
	return vec2ampl(multiply2x2(ampl2vec(theta,phi),h_matrix));
     be8:	a5 01       	movw	r20, r10
     bea:	b6 01       	movw	r22, r12
     bec:	c7 01       	movw	r24, r14
     bee:	0e 94 80 02 	call	0x500	; 0x500 <_ZN5Gates8ampl2vecEii>
     bf2:	ae 01       	movw	r20, r28
     bf4:	4f 5f       	subi	r20, 0xFF	; 255
     bf6:	5f 4f       	sbci	r21, 0xFF	; 255
     bf8:	bc 01       	movw	r22, r24
     bfa:	c7 01       	movw	r24, r14
     bfc:	0e 94 db 03 	call	0x7b6	; 0x7b6 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
     c00:	bc 01       	movw	r22, r24
     c02:	c7 01       	movw	r24, r14
     c04:	0e 94 44 03 	call	0x688	; 0x688 <_ZN5Gates8vec2amplEP7Complex>
}
     c08:	a0 96       	adiw	r28, 0x20	; 32
     c0a:	0f b6       	in	r0, 0x3f	; 63
     c0c:	f8 94       	cli
     c0e:	de bf       	out	0x3e, r29	; 62
     c10:	0f be       	out	0x3f, r0	; 63
     c12:	cd bf       	out	0x3d, r28	; 61
     c14:	df 91       	pop	r29
     c16:	cf 91       	pop	r28
     c18:	1f 91       	pop	r17
     c1a:	0f 91       	pop	r16
     c1c:	ff 90       	pop	r15
     c1e:	ef 90       	pop	r14
     c20:	df 90       	pop	r13
     c22:	cf 90       	pop	r12
     c24:	bf 90       	pop	r11
     c26:	af 90       	pop	r10
     c28:	08 95       	ret

00000c2a <_ZN5Gates1SEii>:
int * Gates::S(int theta,int phi){
     c2a:	af 92       	push	r10
     c2c:	bf 92       	push	r11
     c2e:	cf 92       	push	r12
     c30:	df 92       	push	r13
     c32:	ef 92       	push	r14
     c34:	ff 92       	push	r15
     c36:	0f 93       	push	r16
     c38:	1f 93       	push	r17
     c3a:	cf 93       	push	r28
     c3c:	df 93       	push	r29
     c3e:	cd b7       	in	r28, 0x3d	; 61
     c40:	de b7       	in	r29, 0x3e	; 62
     c42:	a0 97       	sbiw	r28, 0x20	; 32
     c44:	0f b6       	in	r0, 0x3f	; 63
     c46:	f8 94       	cli
     c48:	de bf       	out	0x3e, r29	; 62
     c4a:	0f be       	out	0x3f, r0	; 63
     c4c:	cd bf       	out	0x3d, r28	; 61
     c4e:	7c 01       	movw	r14, r24
     c50:	6b 01       	movw	r12, r22
     c52:	5a 01       	movw	r10, r20
	Complex s_matrix[2][2]{{Complex(1,0),Complex(0,0)},
						   {Complex(0,0),Complex(0,1)}};
     c54:	00 e0       	ldi	r16, 0x00	; 0
     c56:	10 e0       	ldi	r17, 0x00	; 0
     c58:	98 01       	movw	r18, r16
     c5a:	40 e0       	ldi	r20, 0x00	; 0
     c5c:	50 e0       	ldi	r21, 0x00	; 0
     c5e:	60 e8       	ldi	r22, 0x80	; 128
     c60:	7f e3       	ldi	r23, 0x3F	; 63
     c62:	ce 01       	movw	r24, r28
     c64:	01 96       	adiw	r24, 0x01	; 1
     c66:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     c6a:	00 e0       	ldi	r16, 0x00	; 0
     c6c:	10 e0       	ldi	r17, 0x00	; 0
     c6e:	98 01       	movw	r18, r16
     c70:	b9 01       	movw	r22, r18
     c72:	a8 01       	movw	r20, r16
     c74:	ce 01       	movw	r24, r28
     c76:	09 96       	adiw	r24, 0x09	; 9
     c78:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     c7c:	00 e0       	ldi	r16, 0x00	; 0
     c7e:	10 e0       	ldi	r17, 0x00	; 0
     c80:	98 01       	movw	r18, r16
     c82:	b9 01       	movw	r22, r18
     c84:	a8 01       	movw	r20, r16
     c86:	ce 01       	movw	r24, r28
     c88:	41 96       	adiw	r24, 0x11	; 17
     c8a:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     c8e:	00 e0       	ldi	r16, 0x00	; 0
     c90:	10 e0       	ldi	r17, 0x00	; 0
     c92:	20 e8       	ldi	r18, 0x80	; 128
     c94:	3f e3       	ldi	r19, 0x3F	; 63
     c96:	40 e0       	ldi	r20, 0x00	; 0
     c98:	50 e0       	ldi	r21, 0x00	; 0
     c9a:	ba 01       	movw	r22, r20
     c9c:	ce 01       	movw	r24, r28
     c9e:	49 96       	adiw	r24, 0x19	; 25
     ca0:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
	return vec2ampl(multiply2x2(ampl2vec(theta,phi),s_matrix));
     ca4:	a5 01       	movw	r20, r10
     ca6:	b6 01       	movw	r22, r12
     ca8:	c7 01       	movw	r24, r14
     caa:	0e 94 80 02 	call	0x500	; 0x500 <_ZN5Gates8ampl2vecEii>
     cae:	ae 01       	movw	r20, r28
     cb0:	4f 5f       	subi	r20, 0xFF	; 255
     cb2:	5f 4f       	sbci	r21, 0xFF	; 255
     cb4:	bc 01       	movw	r22, r24
     cb6:	c7 01       	movw	r24, r14
     cb8:	0e 94 db 03 	call	0x7b6	; 0x7b6 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
     cbc:	bc 01       	movw	r22, r24
     cbe:	c7 01       	movw	r24, r14
     cc0:	0e 94 44 03 	call	0x688	; 0x688 <_ZN5Gates8vec2amplEP7Complex>
}
     cc4:	a0 96       	adiw	r28, 0x20	; 32
     cc6:	0f b6       	in	r0, 0x3f	; 63
     cc8:	f8 94       	cli
     cca:	de bf       	out	0x3e, r29	; 62
     ccc:	0f be       	out	0x3f, r0	; 63
     cce:	cd bf       	out	0x3d, r28	; 61
     cd0:	df 91       	pop	r29
     cd2:	cf 91       	pop	r28
     cd4:	1f 91       	pop	r17
     cd6:	0f 91       	pop	r16
     cd8:	ff 90       	pop	r15
     cda:	ef 90       	pop	r14
     cdc:	df 90       	pop	r13
     cde:	cf 90       	pop	r12
     ce0:	bf 90       	pop	r11
     ce2:	af 90       	pop	r10
     ce4:	08 95       	ret

00000ce6 <_ZN5Gates1TEii>:
int * Gates::T(int theta,int phi){
     ce6:	af 92       	push	r10
     ce8:	bf 92       	push	r11
     cea:	cf 92       	push	r12
     cec:	df 92       	push	r13
     cee:	ef 92       	push	r14
     cf0:	ff 92       	push	r15
     cf2:	0f 93       	push	r16
     cf4:	1f 93       	push	r17
     cf6:	cf 93       	push	r28
     cf8:	df 93       	push	r29
     cfa:	cd b7       	in	r28, 0x3d	; 61
     cfc:	de b7       	in	r29, 0x3e	; 62
     cfe:	a0 97       	sbiw	r28, 0x20	; 32
     d00:	0f b6       	in	r0, 0x3f	; 63
     d02:	f8 94       	cli
     d04:	de bf       	out	0x3e, r29	; 62
     d06:	0f be       	out	0x3f, r0	; 63
     d08:	cd bf       	out	0x3d, r28	; 61
     d0a:	7c 01       	movw	r14, r24
     d0c:	6b 01       	movw	r12, r22
     d0e:	5a 01       	movw	r10, r20
	Complex t_matrix[2][2]{{Complex(1,0),Complex(0,0)},
						   {Complex(0,0),Complex(1/sqrt(2),1/sqrt(2))}};
     d10:	00 e0       	ldi	r16, 0x00	; 0
     d12:	10 e0       	ldi	r17, 0x00	; 0
     d14:	98 01       	movw	r18, r16
     d16:	40 e0       	ldi	r20, 0x00	; 0
     d18:	50 e0       	ldi	r21, 0x00	; 0
     d1a:	60 e8       	ldi	r22, 0x80	; 128
     d1c:	7f e3       	ldi	r23, 0x3F	; 63
     d1e:	ce 01       	movw	r24, r28
     d20:	01 96       	adiw	r24, 0x01	; 1
     d22:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     d26:	00 e0       	ldi	r16, 0x00	; 0
     d28:	10 e0       	ldi	r17, 0x00	; 0
     d2a:	98 01       	movw	r18, r16
     d2c:	b9 01       	movw	r22, r18
     d2e:	a8 01       	movw	r20, r16
     d30:	ce 01       	movw	r24, r28
     d32:	09 96       	adiw	r24, 0x09	; 9
     d34:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     d38:	00 e0       	ldi	r16, 0x00	; 0
     d3a:	10 e0       	ldi	r17, 0x00	; 0
     d3c:	98 01       	movw	r18, r16
     d3e:	b9 01       	movw	r22, r18
     d40:	a8 01       	movw	r20, r16
     d42:	ce 01       	movw	r24, r28
     d44:	41 96       	adiw	r24, 0x11	; 17
     d46:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
     d4a:	03 ef       	ldi	r16, 0xF3	; 243
     d4c:	14 e0       	ldi	r17, 0x04	; 4
     d4e:	25 e3       	ldi	r18, 0x35	; 53
     d50:	3f e3       	ldi	r19, 0x3F	; 63
     d52:	b9 01       	movw	r22, r18
     d54:	a8 01       	movw	r20, r16
     d56:	ce 01       	movw	r24, r28
     d58:	49 96       	adiw	r24, 0x19	; 25
     d5a:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN7ComplexC1Eff>
	return vec2ampl(multiply2x2(ampl2vec(theta,phi),t_matrix));
     d5e:	a5 01       	movw	r20, r10
     d60:	b6 01       	movw	r22, r12
     d62:	c7 01       	movw	r24, r14
     d64:	0e 94 80 02 	call	0x500	; 0x500 <_ZN5Gates8ampl2vecEii>
     d68:	ae 01       	movw	r20, r28
     d6a:	4f 5f       	subi	r20, 0xFF	; 255
     d6c:	5f 4f       	sbci	r21, 0xFF	; 255
     d6e:	bc 01       	movw	r22, r24
     d70:	c7 01       	movw	r24, r14
     d72:	0e 94 db 03 	call	0x7b6	; 0x7b6 <_ZN5Gates11multiply2x2EP7ComplexPA2_S0_>
     d76:	bc 01       	movw	r22, r24
     d78:	c7 01       	movw	r24, r14
     d7a:	0e 94 44 03 	call	0x688	; 0x688 <_ZN5Gates8vec2amplEP7Complex>
}
     d7e:	a0 96       	adiw	r28, 0x20	; 32
     d80:	0f b6       	in	r0, 0x3f	; 63
     d82:	f8 94       	cli
     d84:	de bf       	out	0x3e, r29	; 62
     d86:	0f be       	out	0x3f, r0	; 63
     d88:	cd bf       	out	0x3d, r28	; 61
     d8a:	df 91       	pop	r29
     d8c:	cf 91       	pop	r28
     d8e:	1f 91       	pop	r17
     d90:	0f 91       	pop	r16
     d92:	ff 90       	pop	r15
     d94:	ef 90       	pop	r14
     d96:	df 90       	pop	r13
     d98:	cf 90       	pop	r12
     d9a:	bf 90       	pop	r11
     d9c:	af 90       	pop	r10
     d9e:	08 95       	ret

00000da0 <_GLOBAL__sub_I__ZN5GatesC2Ev>:
#include "uart.h"
#include "qepu.h"
#include <stdlib.h>
Gates::Gates(){setup_seed();}

Serial s;
     da0:	81 ec       	ldi	r24, 0xC1	; 193
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	0e 94 41 0b 	call	0x1682	; 0x1682 <_ZN6SerialC1Ev>
     da8:	08 95       	ret

00000daa <main>:
#include "qepu.h"
int main(void){
     daa:	cf 93       	push	r28
     dac:	df 93       	push	r29
     dae:	00 d0       	rcall	.+0      	; 0xdb0 <main+0x6>
     db0:	00 d0       	rcall	.+0      	; 0xdb2 <main+0x8>
     db2:	00 d0       	rcall	.+0      	; 0xdb4 <main+0xa>
     db4:	cd b7       	in	r28, 0x3d	; 61
     db6:	de b7       	in	r29, 0x3e	; 62
	QEPU qepu; 
     db8:	ce 01       	movw	r24, r28
     dba:	01 96       	adiw	r24, 0x01	; 1
     dbc:	0e 94 e5 06 	call	0xdca	; 0xdca <_ZN4QEPUC1Ev>
	qepu.run();
     dc0:	ce 01       	movw	r24, r28
     dc2:	01 96       	adiw	r24, 0x01	; 1
     dc4:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <_ZN4QEPU3runEv>
     dc8:	ff cf       	rjmp	.-2      	; 0xdc8 <main+0x1e>

00000dca <_ZN4QEPUC1Ev>:
#include "qepu.h"
QEPU::QEPU(){DDRA=0xFF;program_counter=0;}
     dca:	cf 93       	push	r28
     dcc:	df 93       	push	r29
     dce:	ec 01       	movw	r28, r24
     dd0:	0e 94 c2 01 	call	0x384	; 0x384 <_ZN6EEPromC1Ev>
     dd4:	ce 01       	movw	r24, r28
     dd6:	01 96       	adiw	r24, 0x01	; 1
     dd8:	0e 94 41 0b 	call	0x1682	; 0x1682 <_ZN6SerialC1Ev>
     ddc:	ce 01       	movw	r24, r28
     dde:	05 96       	adiw	r24, 0x05	; 5
     de0:	0e 94 7d 02 	call	0x4fa	; 0x4fa <_ZN5GatesC1Ev>
     de4:	8f ef       	ldi	r24, 0xFF	; 255
     de6:	8a bb       	out	0x1a, r24	; 26
     de8:	1c 82       	std	Y+4, r1	; 0x04
     dea:	1b 82       	std	Y+3, r1	; 0x03
     dec:	df 91       	pop	r29
     dee:	cf 91       	pop	r28
     df0:	08 95       	ret

00000df2 <_ZN4QEPU10setctrlpinEii>:
void QEPU::setdatapin(int pin,int state){
	PORTB&=~(1<<pin); // CLEAR PIN
	PORTB|=(state<<pin); // SET PIN
}
void QEPU::setctrlpin(int pin,int state){
	PORTA&=~(1<<pin); // CLEAR PIN
     df2:	7b b3       	in	r23, 0x1b	; 27
     df4:	21 e0       	ldi	r18, 0x01	; 1
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	c9 01       	movw	r24, r18
     dfa:	06 2e       	mov	r0, r22
     dfc:	02 c0       	rjmp	.+4      	; 0xe02 <_ZN4QEPU10setctrlpinEii+0x10>
     dfe:	88 0f       	add	r24, r24
     e00:	99 1f       	adc	r25, r25
     e02:	0a 94       	dec	r0
     e04:	e2 f7       	brpl	.-8      	; 0xdfe <_ZN4QEPU10setctrlpinEii+0xc>
     e06:	80 95       	com	r24
     e08:	87 23       	and	r24, r23
     e0a:	8b bb       	out	0x1b, r24	; 27
	PORTA|=(state<<pin); // SET PIN
     e0c:	8b b3       	in	r24, 0x1b	; 27
     e0e:	02 c0       	rjmp	.+4      	; 0xe14 <_ZN4QEPU10setctrlpinEii+0x22>
     e10:	44 0f       	add	r20, r20
     e12:	55 1f       	adc	r21, r21
     e14:	6a 95       	dec	r22
     e16:	e2 f7       	brpl	.-8      	; 0xe10 <_ZN4QEPU10setctrlpinEii+0x1e>
     e18:	48 2b       	or	r20, r24
     e1a:	4b bb       	out	0x1b, r20	; 27
     e1c:	08 95       	ret

00000e1e <_ZN4QEPU5writeEiii>:
#include "qepu.h"
QEPU::QEPU(){DDRA=0xFF;program_counter=0;}
void QEPU::write(int index,int dim,int deg){
     e1e:	cf 93       	push	r28
     e20:	df 93       	push	r29
     e22:	ec 01       	movw	r28, r24
	DDRB=0xFF;
     e24:	8f ef       	ldi	r24, 0xFF	; 255
     e26:	87 bb       	out	0x17, r24	; 23
	setctrl(0); // CLOSE ALL CONTROLS
	DDRB=0xFF;
	return deg_read;
}
void QEPU::setdata(int bin){
	PORTB=bin;
     e28:	28 bb       	out	0x18, r18	; 24
}
void QEPU::setctrl(int bin){
	PORTA=bin;
     e2a:	6b bb       	out	0x1b, r22	; 27
void QEPU::write(int index,int dim,int deg){
	DDRB=0xFF;
	
	setdata(deg);
	setctrl(index);
	setctrlpin(4,dim);
     e2c:	64 e0       	ldi	r22, 0x04	; 4
     e2e:	70 e0       	ldi	r23, 0x00	; 0
     e30:	ce 01       	movw	r24, r28
     e32:	0e 94 f9 06 	call	0xdf2	; 0xdf2 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(6,1); // CLOCK UP LOAD
     e36:	41 e0       	ldi	r20, 0x01	; 1
     e38:	50 e0       	ldi	r21, 0x00	; 0
     e3a:	66 e0       	ldi	r22, 0x06	; 6
     e3c:	70 e0       	ldi	r23, 0x00	; 0
     e3e:	ce 01       	movw	r24, r28
     e40:	0e 94 f9 06 	call	0xdf2	; 0xdf2 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(6,0); // CLOCK DOWN LOAD
     e44:	40 e0       	ldi	r20, 0x00	; 0
     e46:	50 e0       	ldi	r21, 0x00	; 0
     e48:	66 e0       	ldi	r22, 0x06	; 6
     e4a:	70 e0       	ldi	r23, 0x00	; 0
     e4c:	ce 01       	movw	r24, r28
     e4e:	0e 94 f9 06 	call	0xdf2	; 0xdf2 <_ZN4QEPU10setctrlpinEii>
	setctrl(0); // CLOSE ALL CONTROLS
	DDRB=0xFF;
	return deg_read;
}
void QEPU::setdata(int bin){
	PORTB=bin;
     e52:	18 ba       	out	0x18, r1	; 24
	setctrl(index);
	setctrlpin(4,dim);
	setctrlpin(6,1); // CLOCK UP LOAD
	setctrlpin(6,0); // CLOCK DOWN LOAD
	setdata(0);
}
     e54:	df 91       	pop	r29
     e56:	cf 91       	pop	r28
     e58:	08 95       	ret

00000e5a <_ZN4QEPU4readEii>:
int QEPU::read(int index,int dim){
     e5a:	0f 93       	push	r16
     e5c:	1f 93       	push	r17
     e5e:	cf 93       	push	r28
     e60:	df 93       	push	r29
     e62:	ec 01       	movw	r28, r24
     e64:	8a 01       	movw	r16, r20
	DDRB=0x00;
     e66:	17 ba       	out	0x17, r1	; 23
}
void QEPU::setdata(int bin){
	PORTB=bin;
}
void QEPU::setctrl(int bin){
	PORTA=bin;
     e68:	6b bb       	out	0x1b, r22	; 27
}
int QEPU::read(int index,int dim){
	DDRB=0x00;
	setctrl(index);
	//OPEN ALL AND GATES
	setctrlpin(5,1); // CLOCK UP READ
     e6a:	41 e0       	ldi	r20, 0x01	; 1
     e6c:	50 e0       	ldi	r21, 0x00	; 0
     e6e:	65 e0       	ldi	r22, 0x05	; 5
     e70:	70 e0       	ldi	r23, 0x00	; 0
     e72:	0e 94 f9 06 	call	0xdf2	; 0xdf2 <_ZN4QEPU10setctrlpinEii>
	setctrlpin(4,dim);
     e76:	a8 01       	movw	r20, r16
     e78:	64 e0       	ldi	r22, 0x04	; 4
     e7a:	70 e0       	ldi	r23, 0x00	; 0
     e7c:	ce 01       	movw	r24, r28
     e7e:	0e 94 f9 06 	call	0xdf2	; 0xdf2 <_ZN4QEPU10setctrlpinEii>
	int deg_read=PINB; // READ INPUT
     e82:	86 b3       	in	r24, 0x16	; 22
}
void QEPU::setdata(int bin){
	PORTB=bin;
}
void QEPU::setctrl(int bin){
	PORTA=bin;
     e84:	1b ba       	out	0x1b, r1	; 27
	setctrlpin(5,1); // CLOCK UP READ
	setctrlpin(4,dim);
	int deg_read=PINB; // READ INPUT
	//CLOSE ALL AND GATES
	setctrl(0); // CLOSE ALL CONTROLS
	DDRB=0xFF;
     e86:	9f ef       	ldi	r25, 0xFF	; 255
     e88:	97 bb       	out	0x17, r25	; 23
	return deg_read;
}
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	df 91       	pop	r29
     e8e:	cf 91       	pop	r28
     e90:	1f 91       	pop	r17
     e92:	0f 91       	pop	r16
     e94:	08 95       	ret

00000e96 <_ZN4QEPU7dumpmemEv>:
}
void QEPU::setctrlpin(int pin,int state){
	PORTA&=~(1<<pin); // CLEAR PIN
	PORTA|=(state<<pin); // SET PIN
}
void QEPU::dumpmem(){
     e96:	6f 92       	push	r6
     e98:	7f 92       	push	r7
     e9a:	8f 92       	push	r8
     e9c:	9f 92       	push	r9
     e9e:	af 92       	push	r10
     ea0:	bf 92       	push	r11
     ea2:	cf 92       	push	r12
     ea4:	df 92       	push	r13
     ea6:	ef 92       	push	r14
     ea8:	ff 92       	push	r15
     eaa:	0f 93       	push	r16
     eac:	1f 93       	push	r17
     eae:	cf 93       	push	r28
     eb0:	df 93       	push	r29
     eb2:	6c 01       	movw	r12, r24
	serial.writestrln("");
     eb4:	8c 01       	movw	r16, r24
     eb6:	0f 5f       	subi	r16, 0xFF	; 255
     eb8:	1f 4f       	sbci	r17, 0xFF	; 255
     eba:	6f ea       	ldi	r22, 0xAF	; 175
     ebc:	70 e0       	ldi	r23, 0x00	; 0
     ebe:	c8 01       	movw	r24, r16
     ec0:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <_ZN6Serial10writestrlnEPc>
	serial.writestrln("** QUANTUM MEMORY DUMP **");
     ec4:	66 e8       	ldi	r22, 0x86	; 134
     ec6:	70 e0       	ldi	r23, 0x00	; 0
     ec8:	c8 01       	movw	r24, r16
     eca:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <_ZN6Serial10writestrlnEPc>
	for(int i=0;i<QUBIT_COUNT;i++){
     ece:	c0 e0       	ldi	r28, 0x00	; 0
     ed0:	d0 e0       	ldi	r29, 0x00	; 0
		char * thedim=(char*)malloc(sizeof(char)*3); sprintf(thedim,"%d",read(i,THE));
     ed2:	0f 2e       	mov	r0, r31
     ed4:	f0 ea       	ldi	r31, 0xA0	; 160
     ed6:	ef 2e       	mov	r14, r31
     ed8:	f0 e0       	ldi	r31, 0x00	; 0
     eda:	ff 2e       	mov	r15, r31
     edc:	f0 2d       	mov	r31, r0
     ede:	83 e0       	ldi	r24, 0x03	; 3
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <malloc>
     ee6:	88 2e       	mov	r8, r24
     ee8:	99 2e       	mov	r9, r25
     eea:	40 e0       	ldi	r20, 0x00	; 0
     eec:	50 e0       	ldi	r21, 0x00	; 0
     eee:	be 01       	movw	r22, r28
     ef0:	c6 01       	movw	r24, r12
     ef2:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
     ef6:	9f 93       	push	r25
     ef8:	8f 93       	push	r24
     efa:	ff 92       	push	r15
     efc:	ef 92       	push	r14
     efe:	9f 92       	push	r9
     f00:	8f 92       	push	r8
     f02:	0e 94 4e 11 	call	0x229c	; 0x229c <sprintf>
		char * phidim=(char*)malloc(sizeof(char)*3); sprintf(phidim,"%d",read(i,PHI));
     f06:	83 e0       	ldi	r24, 0x03	; 3
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <malloc>
     f0e:	a8 2e       	mov	r10, r24
     f10:	b9 2e       	mov	r11, r25
     f12:	41 e0       	ldi	r20, 0x01	; 1
     f14:	50 e0       	ldi	r21, 0x00	; 0
     f16:	be 01       	movw	r22, r28
     f18:	c6 01       	movw	r24, r12
     f1a:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
     f1e:	9f 93       	push	r25
     f20:	8f 93       	push	r24
     f22:	ff 92       	push	r15
     f24:	ef 92       	push	r14
     f26:	bf 92       	push	r11
     f28:	af 92       	push	r10
     f2a:	0e 94 4e 11 	call	0x229c	; 0x229c <sprintf>
		char * qindex=(char*)malloc(sizeof(char));	 sprintf(qindex,"%d",i);
     f2e:	81 e0       	ldi	r24, 0x01	; 1
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <malloc>
     f36:	68 2e       	mov	r6, r24
     f38:	79 2e       	mov	r7, r25
     f3a:	df 93       	push	r29
     f3c:	cf 93       	push	r28
     f3e:	ff 92       	push	r15
     f40:	ef 92       	push	r14
     f42:	7f 92       	push	r7
     f44:	6f 92       	push	r6
     f46:	0e 94 4e 11 	call	0x229c	; 0x229c <sprintf>
		serial.writestr("Q"); serial.writestr(qindex); serial.writestr(": Theta - ");
     f4a:	63 ea       	ldi	r22, 0xA3	; 163
     f4c:	70 e0       	ldi	r23, 0x00	; 0
     f4e:	c8 01       	movw	r24, r16
     f50:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN6Serial8writestrEPc>
     f54:	66 2d       	mov	r22, r6
     f56:	77 2d       	mov	r23, r7
     f58:	c8 01       	movw	r24, r16
     f5a:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN6Serial8writestrEPc>
     f5e:	65 ea       	ldi	r22, 0xA5	; 165
     f60:	70 e0       	ldi	r23, 0x00	; 0
     f62:	c8 01       	movw	r24, r16
     f64:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN6Serial8writestrEPc>
		serial.writestr(thedim);
     f68:	68 2d       	mov	r22, r8
     f6a:	79 2d       	mov	r23, r9
     f6c:	c8 01       	movw	r24, r16
     f6e:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN6Serial8writestrEPc>
		serial.writestr(" , Phi - ");
     f72:	60 eb       	ldi	r22, 0xB0	; 176
     f74:	70 e0       	ldi	r23, 0x00	; 0
     f76:	c8 01       	movw	r24, r16
     f78:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN6Serial8writestrEPc>
		serial.writestrln(phidim);
     f7c:	6a 2d       	mov	r22, r10
     f7e:	7b 2d       	mov	r23, r11
     f80:	c8 01       	movw	r24, r16
     f82:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <_ZN6Serial10writestrlnEPc>
	PORTA|=(state<<pin); // SET PIN
}
void QEPU::dumpmem(){
	serial.writestrln("");
	serial.writestrln("** QUANTUM MEMORY DUMP **");
	for(int i=0;i<QUBIT_COUNT;i++){
     f86:	21 96       	adiw	r28, 0x01	; 1
     f88:	8d b7       	in	r24, 0x3d	; 61
     f8a:	9e b7       	in	r25, 0x3e	; 62
     f8c:	42 96       	adiw	r24, 0x12	; 18
     f8e:	0f b6       	in	r0, 0x3f	; 63
     f90:	f8 94       	cli
     f92:	9e bf       	out	0x3e, r25	; 62
     f94:	0f be       	out	0x3f, r0	; 63
     f96:	8d bf       	out	0x3d, r24	; 61
     f98:	c4 30       	cpi	r28, 0x04	; 4
     f9a:	d1 05       	cpc	r29, r1
     f9c:	09 f0       	breq	.+2      	; 0xfa0 <_ZN4QEPU7dumpmemEv+0x10a>
     f9e:	9f cf       	rjmp	.-194    	; 0xede <_ZN4QEPU7dumpmemEv+0x48>
		serial.writestr("Q"); serial.writestr(qindex); serial.writestr(": Theta - ");
		serial.writestr(thedim);
		serial.writestr(" , Phi - ");
		serial.writestrln(phidim);
	}
}
     fa0:	df 91       	pop	r29
     fa2:	cf 91       	pop	r28
     fa4:	1f 91       	pop	r17
     fa6:	0f 91       	pop	r16
     fa8:	ff 90       	pop	r15
     faa:	ef 90       	pop	r14
     fac:	df 90       	pop	r13
     fae:	cf 90       	pop	r12
     fb0:	bf 90       	pop	r11
     fb2:	af 90       	pop	r10
     fb4:	9f 90       	pop	r9
     fb6:	8f 90       	pop	r8
     fb8:	7f 90       	pop	r7
     fba:	6f 90       	pop	r6
     fbc:	08 95       	ret

00000fbe <_ZN4QEPU5Utils10str2intarrEPc>:
char* QEPU::Utils::char2str(char c){
	char*str=(char*)malloc(sizeof(char));
	sprintf(str,"%d",c);
	return str;
}
int*  QEPU::Utils::str2intarr(char* c){
     fbe:	cf 92       	push	r12
     fc0:	df 92       	push	r13
     fc2:	ef 92       	push	r14
     fc4:	ff 92       	push	r15
     fc6:	0f 93       	push	r16
     fc8:	1f 93       	push	r17
     fca:	cf 93       	push	r28
     fcc:	df 93       	push	r29
     fce:	d6 2f       	mov	r29, r22
     fd0:	c7 2f       	mov	r28, r23
     fd2:	e6 2f       	mov	r30, r22
     fd4:	f7 2f       	mov	r31, r23
	int c_length=0;
     fd6:	80 e0       	ldi	r24, 0x00	; 0
     fd8:	90 e0       	ldi	r25, 0x00	; 0
	for(int i=0;true;i++) if(c[i]==0xFF && c[i-1]==0xFF && c[i-2]==0xFF && c[i-3]==0xFF && c[i-4]==0xFF) break; else c_length++; c_length-=4;
     fda:	21 91       	ld	r18, Z+
     fdc:	2f 3f       	cpi	r18, 0xFF	; 255
     fde:	89 f4       	brne	.+34     	; 0x1002 <_ZN4QEPU5Utils10str2intarrEPc+0x44>
     fe0:	df 01       	movw	r26, r30
     fe2:	12 97       	sbiw	r26, 0x02	; 2
     fe4:	4c 91       	ld	r20, X
     fe6:	4f 3f       	cpi	r20, 0xFF	; 255
     fe8:	61 f4       	brne	.+24     	; 0x1002 <_ZN4QEPU5Utils10str2intarrEPc+0x44>
     fea:	11 97       	sbiw	r26, 0x01	; 1
     fec:	4c 91       	ld	r20, X
     fee:	4f 3f       	cpi	r20, 0xFF	; 255
     ff0:	41 f4       	brne	.+16     	; 0x1002 <_ZN4QEPU5Utils10str2intarrEPc+0x44>
     ff2:	11 97       	sbiw	r26, 0x01	; 1
     ff4:	4c 91       	ld	r20, X
     ff6:	4f 3f       	cpi	r20, 0xFF	; 255
     ff8:	21 f4       	brne	.+8      	; 0x1002 <_ZN4QEPU5Utils10str2intarrEPc+0x44>
     ffa:	11 97       	sbiw	r26, 0x01	; 1
     ffc:	2c 91       	ld	r18, X
     ffe:	2f 3f       	cpi	r18, 0xFF	; 255
    1000:	11 f0       	breq	.+4      	; 0x1006 <_ZN4QEPU5Utils10str2intarrEPc+0x48>
    1002:	01 96       	adiw	r24, 0x01	; 1
    1004:	ea cf       	rjmp	.-44     	; 0xfda <_ZN4QEPU5Utils10str2intarrEPc+0x1c>
    1006:	8c 01       	movw	r16, r24
    1008:	04 50       	subi	r16, 0x04	; 4
    100a:	11 09       	sbc	r17, r1
	
	int *intarr=(int*)malloc(sizeof(int)*(c_length+5));
    100c:	6c 01       	movw	r12, r24
    100e:	2f ef       	ldi	r18, 0xFF	; 255
    1010:	c2 1a       	sub	r12, r18
    1012:	d2 0a       	sbc	r13, r18
    1014:	76 01       	movw	r14, r12
    1016:	ee 0c       	add	r14, r14
    1018:	ff 1c       	adc	r15, r15
    101a:	c7 01       	movw	r24, r14
    101c:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <malloc>
	for(int i=0;i<c_length;i++) intarr[i]=(int)c[i];
    1020:	10 16       	cp	r1, r16
    1022:	11 06       	cpc	r1, r17
    1024:	74 f4       	brge	.+28     	; 0x1042 <_ZN4QEPU5Utils10str2intarrEPc+0x84>
    1026:	dc 01       	movw	r26, r24
    1028:	ed 2f       	mov	r30, r29
    102a:	fc 2f       	mov	r31, r28
    102c:	20 e0       	ldi	r18, 0x00	; 0
    102e:	30 e0       	ldi	r19, 0x00	; 0
    1030:	41 91       	ld	r20, Z+
    1032:	50 e0       	ldi	r21, 0x00	; 0
    1034:	4d 93       	st	X+, r20
    1036:	5d 93       	st	X+, r21
    1038:	2f 5f       	subi	r18, 0xFF	; 255
    103a:	3f 4f       	sbci	r19, 0xFF	; 255
    103c:	20 17       	cp	r18, r16
    103e:	31 07       	cpc	r19, r17
    1040:	bc f3       	brlt	.-18     	; 0x1030 <_ZN4QEPU5Utils10str2intarrEPc+0x72>
	for(int i=c_length;i<c_length+5;i++) intarr[i]=0xFF;
    1042:	0c 15       	cp	r16, r12
    1044:	1d 05       	cpc	r17, r13
    1046:	7c f4       	brge	.+30     	; 0x1066 <_ZN4QEPU5Utils10str2intarrEPc+0xa8>
    1048:	f7 01       	movw	r30, r14
    104a:	3a 97       	sbiw	r30, 0x0a	; 10
    104c:	e8 0f       	add	r30, r24
    104e:	f9 1f       	adc	r31, r25
    1050:	25 e0       	ldi	r18, 0x05	; 5
    1052:	30 e0       	ldi	r19, 0x00	; 0
    1054:	4f ef       	ldi	r20, 0xFF	; 255
    1056:	50 e0       	ldi	r21, 0x00	; 0
    1058:	41 93       	st	Z+, r20
    105a:	51 93       	st	Z+, r21
    105c:	21 50       	subi	r18, 0x01	; 1
    105e:	31 09       	sbc	r19, r1
    1060:	21 15       	cp	r18, r1
    1062:	31 05       	cpc	r19, r1
    1064:	c9 f7       	brne	.-14     	; 0x1058 <_ZN4QEPU5Utils10str2intarrEPc+0x9a>
	return intarr;
}
    1066:	df 91       	pop	r29
    1068:	cf 91       	pop	r28
    106a:	1f 91       	pop	r17
    106c:	0f 91       	pop	r16
    106e:	ff 90       	pop	r15
    1070:	ef 90       	pop	r14
    1072:	df 90       	pop	r13
    1074:	cf 90       	pop	r12
    1076:	08 95       	ret

00001078 <_ZN4QEPU5Utils7int2strEi>:
		dec/=10;
		++counter;
	}
	return counter;
}
char* QEPU::Utils::int2str(int dec){
    1078:	0f 93       	push	r16
    107a:	1f 93       	push	r17
    107c:	cf 93       	push	r28
    107e:	df 93       	push	r29
    1080:	cd b7       	in	r28, 0x3d	; 61
    1082:	de b7       	in	r29, 0x3e	; 62
    1084:	c4 56       	subi	r28, 0x64	; 100
    1086:	d1 09       	sbc	r29, r1
    1088:	0f b6       	in	r0, 0x3f	; 63
    108a:	f8 94       	cli
    108c:	de bf       	out	0x3e, r29	; 62
    108e:	0f be       	out	0x3f, r0	; 63
    1090:	cd bf       	out	0x3d, r28	; 61
	//char str[countdigits(dec)+1];
	char str[100];
	sprintf(str,"%d",dec);
    1092:	7f 93       	push	r23
    1094:	6f 93       	push	r22
    1096:	80 ea       	ldi	r24, 0xA0	; 160
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	9f 93       	push	r25
    109c:	8f 93       	push	r24
    109e:	8e 01       	movw	r16, r28
    10a0:	0f 5f       	subi	r16, 0xFF	; 255
    10a2:	1f 4f       	sbci	r17, 0xFF	; 255
    10a4:	1f 93       	push	r17
    10a6:	0f 93       	push	r16
    10a8:	0e 94 4e 11 	call	0x229c	; 0x229c <sprintf>
	return str;
    10ac:	0f 90       	pop	r0
    10ae:	0f 90       	pop	r0
    10b0:	0f 90       	pop	r0
    10b2:	0f 90       	pop	r0
    10b4:	0f 90       	pop	r0
    10b6:	0f 90       	pop	r0
}
    10b8:	c8 01       	movw	r24, r16
    10ba:	cc 59       	subi	r28, 0x9C	; 156
    10bc:	df 4f       	sbci	r29, 0xFF	; 255
    10be:	0f b6       	in	r0, 0x3f	; 63
    10c0:	f8 94       	cli
    10c2:	de bf       	out	0x3e, r29	; 62
    10c4:	0f be       	out	0x3f, r0	; 63
    10c6:	cd bf       	out	0x3d, r28	; 61
    10c8:	df 91       	pop	r29
    10ca:	cf 91       	pop	r28
    10cc:	1f 91       	pop	r17
    10ce:	0f 91       	pop	r16
    10d0:	08 95       	ret

000010d2 <_ZN4QEPU5Utils5delayEi>:
	sprintf(str2,"%d",n2);
	strcat(str1,str2);
	return atoi(str1);
}
int QEPU::Utils::delay(int ms){
	while(ms--) _delay_ms(1);
    10d2:	61 15       	cp	r22, r1
    10d4:	71 05       	cpc	r23, r1
    10d6:	59 f0       	breq	.+22     	; 0x10ee <_ZN4QEPU5Utils5delayEi+0x1c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    10d8:	8f e9       	ldi	r24, 0x9F	; 159
    10da:	9f e0       	ldi	r25, 0x0F	; 15
    10dc:	01 97       	sbiw	r24, 0x01	; 1
    10de:	f1 f7       	brne	.-4      	; 0x10dc <_ZN4QEPU5Utils5delayEi+0xa>
    10e0:	00 c0       	rjmp	.+0      	; 0x10e2 <_ZN4QEPU5Utils5delayEi+0x10>
    10e2:	00 00       	nop
    10e4:	61 50       	subi	r22, 0x01	; 1
    10e6:	71 09       	sbc	r23, r1
    10e8:	61 15       	cp	r22, r1
    10ea:	71 05       	cpc	r23, r1
    10ec:	a9 f7       	brne	.-22     	; 0x10d8 <_ZN4QEPU5Utils5delayEi+0x6>
}
    10ee:	08 95       	ret

000010f0 <_ZN4QEPU7executeEill>:
	}
	dumpmem();
	#pragma endregion
}

void QEPU::execute(int func,int32_t op1,int32_t op2){
    10f0:	4f 92       	push	r4
    10f2:	5f 92       	push	r5
    10f4:	6f 92       	push	r6
    10f6:	7f 92       	push	r7
    10f8:	8f 92       	push	r8
    10fa:	9f 92       	push	r9
    10fc:	af 92       	push	r10
    10fe:	bf 92       	push	r11
    1100:	cf 92       	push	r12
    1102:	df 92       	push	r13
    1104:	ef 92       	push	r14
    1106:	ff 92       	push	r15
    1108:	0f 93       	push	r16
    110a:	1f 93       	push	r17
    110c:	cf 93       	push	r28
    110e:	df 93       	push	r29
    1110:	ec 01       	movw	r28, r24
    1112:	6b 01       	movw	r12, r22
    1114:	49 01       	movw	r8, r18
    1116:	5a 01       	movw	r10, r20
    1118:	27 01       	movw	r4, r14
    111a:	38 01       	movw	r6, r16
	int * newthephi=(int*)malloc(sizeof(int)*2);
    111c:	84 e0       	ldi	r24, 0x04	; 4
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <malloc>
    1124:	8c 01       	movw	r16, r24
	
	//TODO: MAKE A SWITCH ON THE FUNCTION
	switch(func){
    1126:	f6 01       	movw	r30, r12
    1128:	31 97       	sbiw	r30, 0x01	; 1
    112a:	e5 31       	cpi	r30, 0x15	; 21
    112c:	f1 05       	cpc	r31, r1
    112e:	08 f0       	brcs	.+2      	; 0x1132 <_ZN4QEPU7executeEill+0x42>
    1130:	24 c1       	rjmp	.+584    	; 0x137a <_ZN4QEPU7executeEill+0x28a>
    1132:	e6 5d       	subi	r30, 0xD6	; 214
    1134:	ff 4f       	sbci	r31, 0xFF	; 255
    1136:	0c 94 87 0e 	jmp	0x1d0e	; 0x1d0e <__tablejump2__>
		//DATA MOVEMENT AND PROGRAM CONTROL/FLUX/IO FUNCTIONS:
		case 0x01: /*MOV*/
			write(op1,THE,read(op2,THE));
    113a:	40 e0       	ldi	r20, 0x00	; 0
    113c:	50 e0       	ldi	r21, 0x00	; 0
    113e:	b2 01       	movw	r22, r4
    1140:	ce 01       	movw	r24, r28
    1142:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
    1146:	9c 01       	movw	r18, r24
    1148:	40 e0       	ldi	r20, 0x00	; 0
    114a:	50 e0       	ldi	r21, 0x00	; 0
    114c:	b4 01       	movw	r22, r8
    114e:	ce 01       	movw	r24, r28
    1150:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
			write(op1,PHI,read(op2,PHI));
    1154:	41 e0       	ldi	r20, 0x01	; 1
    1156:	50 e0       	ldi	r21, 0x00	; 0
    1158:	b2 01       	movw	r22, r4
    115a:	ce 01       	movw	r24, r28
    115c:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
    1160:	9c 01       	movw	r18, r24
    1162:	41 e0       	ldi	r20, 0x01	; 1
    1164:	50 e0       	ldi	r21, 0x00	; 0
    1166:	b4 01       	movw	r22, r8
    1168:	ce 01       	movw	r24, r28
    116a:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
		break;
    116e:	05 c1       	rjmp	.+522    	; 0x137a <_ZN4QEPU7executeEill+0x28a>
		case 0x02: /*JMP(jump)*/ 
			program_counter=op1-1; 
    1170:	81 e0       	ldi	r24, 0x01	; 1
    1172:	88 1a       	sub	r8, r24
    1174:	91 08       	sbc	r9, r1
    1176:	9c 82       	std	Y+4, r9	; 0x04
    1178:	8b 82       	std	Y+3, r8	; 0x03
		break;
    117a:	ff c0       	rjmp	.+510    	; 0x137a <_ZN4QEPU7executeEill+0x28a>
		case 0x06: /*POP(pop)*/ break;
		case 0x07: /*PSH(push)*/ break;
		case 0x08: /*RET(return)*/ break;
		case 0x09: /*END(end)*/ break;
		case 0x0A: /*DLY(delay)*/ 
			utils.delay(op1);	break;
    117c:	b4 01       	movw	r22, r8
    117e:	ce 01       	movw	r24, r28
    1180:	02 96       	adiw	r24, 0x02	; 2
    1182:	0e 94 69 08 	call	0x10d2	; 0x10d2 <_ZN4QEPU5Utils5delayEi>
    1186:	f9 c0       	rjmp	.+498    	; 0x137a <_ZN4QEPU7executeEill+0x28a>
		case 0x0B: /*NOP(nop)*/ break;
		case 0x0C: /*LOD(load)*/ break;
		case 0x0D: /*STR(store)*/ break;
		case 0x0E: /*CMT(constantmovtheta)*/ 
			write(op1,THE,op2);
    1188:	92 01       	movw	r18, r4
    118a:	40 e0       	ldi	r20, 0x00	; 0
    118c:	50 e0       	ldi	r21, 0x00	; 0
    118e:	b4 01       	movw	r22, r8
    1190:	ce 01       	movw	r24, r28
    1192:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
		break;
    1196:	f1 c0       	rjmp	.+482    	; 0x137a <_ZN4QEPU7executeEill+0x28a>
		case 0x0F: /*CMP(constantmovphi)*/
			write(op1,PHI,op2);
    1198:	92 01       	movw	r18, r4
    119a:	41 e0       	ldi	r20, 0x01	; 1
    119c:	50 e0       	ldi	r21, 0x00	; 0
    119e:	b4 01       	movw	r22, r8
    11a0:	ce 01       	movw	r24, r28
    11a2:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
		break;
    11a6:	e9 c0       	rjmp	.+466    	; 0x137a <_ZN4QEPU7executeEill+0x28a>
		//QUANTUM FUNCTIONS:
		//1 QUBIT GATES -
		case 0x10: // X GATE
			newthephi=gates.X(read(op1,THE),read(op1,PHI));
    11a8:	41 e0       	ldi	r20, 0x01	; 1
    11aa:	50 e0       	ldi	r21, 0x00	; 0
    11ac:	b4 01       	movw	r22, r8
    11ae:	ce 01       	movw	r24, r28
    11b0:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
    11b4:	8c 01       	movw	r16, r24
    11b6:	40 e0       	ldi	r20, 0x00	; 0
    11b8:	50 e0       	ldi	r21, 0x00	; 0
    11ba:	b4 01       	movw	r22, r8
    11bc:	ce 01       	movw	r24, r28
    11be:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
    11c2:	a8 01       	movw	r20, r16
    11c4:	bc 01       	movw	r22, r24
    11c6:	ce 01       	movw	r24, r28
    11c8:	05 96       	adiw	r24, 0x05	; 5
    11ca:	0e 94 99 04 	call	0x932	; 0x932 <_ZN5Gates1XEii>
    11ce:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    11d0:	fc 01       	movw	r30, r24
    11d2:	20 81       	ld	r18, Z
    11d4:	31 81       	ldd	r19, Z+1	; 0x01
    11d6:	40 e0       	ldi	r20, 0x00	; 0
    11d8:	50 e0       	ldi	r21, 0x00	; 0
    11da:	b4 01       	movw	r22, r8
    11dc:	ce 01       	movw	r24, r28
    11de:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
    11e2:	f8 01       	movw	r30, r16
    11e4:	22 81       	ldd	r18, Z+2	; 0x02
    11e6:	33 81       	ldd	r19, Z+3	; 0x03
    11e8:	41 e0       	ldi	r20, 0x01	; 1
    11ea:	50 e0       	ldi	r21, 0x00	; 0
    11ec:	b4 01       	movw	r22, r8
    11ee:	ce 01       	movw	r24, r28
    11f0:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
		break;
    11f4:	c2 c0       	rjmp	.+388    	; 0x137a <_ZN4QEPU7executeEill+0x28a>
		case 0x11: // Y GATE
			newthephi=gates.Y(read(op1,THE),read(op1,PHI));
    11f6:	41 e0       	ldi	r20, 0x01	; 1
    11f8:	50 e0       	ldi	r21, 0x00	; 0
    11fa:	b4 01       	movw	r22, r8
    11fc:	ce 01       	movw	r24, r28
    11fe:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
    1202:	8c 01       	movw	r16, r24
    1204:	40 e0       	ldi	r20, 0x00	; 0
    1206:	50 e0       	ldi	r21, 0x00	; 0
    1208:	b4 01       	movw	r22, r8
    120a:	ce 01       	movw	r24, r28
    120c:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
    1210:	a8 01       	movw	r20, r16
    1212:	bc 01       	movw	r22, r24
    1214:	ce 01       	movw	r24, r28
    1216:	05 96       	adiw	r24, 0x05	; 5
    1218:	0e 94 f7 04 	call	0x9ee	; 0x9ee <_ZN5Gates1YEii>
    121c:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    121e:	fc 01       	movw	r30, r24
    1220:	20 81       	ld	r18, Z
    1222:	31 81       	ldd	r19, Z+1	; 0x01
    1224:	40 e0       	ldi	r20, 0x00	; 0
    1226:	50 e0       	ldi	r21, 0x00	; 0
    1228:	b4 01       	movw	r22, r8
    122a:	ce 01       	movw	r24, r28
    122c:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
    1230:	f8 01       	movw	r30, r16
    1232:	22 81       	ldd	r18, Z+2	; 0x02
    1234:	33 81       	ldd	r19, Z+3	; 0x03
    1236:	41 e0       	ldi	r20, 0x01	; 1
    1238:	50 e0       	ldi	r21, 0x00	; 0
    123a:	b4 01       	movw	r22, r8
    123c:	ce 01       	movw	r24, r28
    123e:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
		break;
    1242:	9b c0       	rjmp	.+310    	; 0x137a <_ZN4QEPU7executeEill+0x28a>
		case 0x12: // Z GATE
			newthephi=gates.Z(read(op1,THE),read(op1,PHI));
    1244:	41 e0       	ldi	r20, 0x01	; 1
    1246:	50 e0       	ldi	r21, 0x00	; 0
    1248:	b4 01       	movw	r22, r8
    124a:	ce 01       	movw	r24, r28
    124c:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
    1250:	8c 01       	movw	r16, r24
    1252:	40 e0       	ldi	r20, 0x00	; 0
    1254:	50 e0       	ldi	r21, 0x00	; 0
    1256:	b4 01       	movw	r22, r8
    1258:	ce 01       	movw	r24, r28
    125a:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
    125e:	a8 01       	movw	r20, r16
    1260:	bc 01       	movw	r22, r24
    1262:	ce 01       	movw	r24, r28
    1264:	05 96       	adiw	r24, 0x05	; 5
    1266:	0e 94 55 05 	call	0xaaa	; 0xaaa <_ZN5Gates1ZEii>
    126a:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    126c:	fc 01       	movw	r30, r24
    126e:	20 81       	ld	r18, Z
    1270:	31 81       	ldd	r19, Z+1	; 0x01
    1272:	40 e0       	ldi	r20, 0x00	; 0
    1274:	50 e0       	ldi	r21, 0x00	; 0
    1276:	b4 01       	movw	r22, r8
    1278:	ce 01       	movw	r24, r28
    127a:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
    127e:	f8 01       	movw	r30, r16
    1280:	22 81       	ldd	r18, Z+2	; 0x02
    1282:	33 81       	ldd	r19, Z+3	; 0x03
    1284:	41 e0       	ldi	r20, 0x01	; 1
    1286:	50 e0       	ldi	r21, 0x00	; 0
    1288:	b4 01       	movw	r22, r8
    128a:	ce 01       	movw	r24, r28
    128c:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
		break;
    1290:	74 c0       	rjmp	.+232    	; 0x137a <_ZN4QEPU7executeEill+0x28a>
		case 0x13: // H GATE
			newthephi=gates.H(read(op1,THE),read(op1,PHI));
    1292:	41 e0       	ldi	r20, 0x01	; 1
    1294:	50 e0       	ldi	r21, 0x00	; 0
    1296:	b4 01       	movw	r22, r8
    1298:	ce 01       	movw	r24, r28
    129a:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
    129e:	8c 01       	movw	r16, r24
    12a0:	40 e0       	ldi	r20, 0x00	; 0
    12a2:	50 e0       	ldi	r21, 0x00	; 0
    12a4:	b4 01       	movw	r22, r8
    12a6:	ce 01       	movw	r24, r28
    12a8:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
    12ac:	a8 01       	movw	r20, r16
    12ae:	bc 01       	movw	r22, r24
    12b0:	ce 01       	movw	r24, r28
    12b2:	05 96       	adiw	r24, 0x05	; 5
    12b4:	0e 94 b3 05 	call	0xb66	; 0xb66 <_ZN5Gates1HEii>
    12b8:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    12ba:	fc 01       	movw	r30, r24
    12bc:	20 81       	ld	r18, Z
    12be:	31 81       	ldd	r19, Z+1	; 0x01
    12c0:	40 e0       	ldi	r20, 0x00	; 0
    12c2:	50 e0       	ldi	r21, 0x00	; 0
    12c4:	b4 01       	movw	r22, r8
    12c6:	ce 01       	movw	r24, r28
    12c8:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
    12cc:	f8 01       	movw	r30, r16
    12ce:	22 81       	ldd	r18, Z+2	; 0x02
    12d0:	33 81       	ldd	r19, Z+3	; 0x03
    12d2:	41 e0       	ldi	r20, 0x01	; 1
    12d4:	50 e0       	ldi	r21, 0x00	; 0
    12d6:	b4 01       	movw	r22, r8
    12d8:	ce 01       	movw	r24, r28
    12da:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
		break;
    12de:	4d c0       	rjmp	.+154    	; 0x137a <_ZN4QEPU7executeEill+0x28a>
		case 0x14: // S GATE
			newthephi=gates.S(read(op1,THE),read(op1,PHI));
    12e0:	41 e0       	ldi	r20, 0x01	; 1
    12e2:	50 e0       	ldi	r21, 0x00	; 0
    12e4:	b4 01       	movw	r22, r8
    12e6:	ce 01       	movw	r24, r28
    12e8:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
    12ec:	8c 01       	movw	r16, r24
    12ee:	40 e0       	ldi	r20, 0x00	; 0
    12f0:	50 e0       	ldi	r21, 0x00	; 0
    12f2:	b4 01       	movw	r22, r8
    12f4:	ce 01       	movw	r24, r28
    12f6:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
    12fa:	a8 01       	movw	r20, r16
    12fc:	bc 01       	movw	r22, r24
    12fe:	ce 01       	movw	r24, r28
    1300:	05 96       	adiw	r24, 0x05	; 5
    1302:	0e 94 15 06 	call	0xc2a	; 0xc2a <_ZN5Gates1SEii>
    1306:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    1308:	fc 01       	movw	r30, r24
    130a:	20 81       	ld	r18, Z
    130c:	31 81       	ldd	r19, Z+1	; 0x01
    130e:	40 e0       	ldi	r20, 0x00	; 0
    1310:	50 e0       	ldi	r21, 0x00	; 0
    1312:	b4 01       	movw	r22, r8
    1314:	ce 01       	movw	r24, r28
    1316:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
    131a:	f8 01       	movw	r30, r16
    131c:	22 81       	ldd	r18, Z+2	; 0x02
    131e:	33 81       	ldd	r19, Z+3	; 0x03
    1320:	41 e0       	ldi	r20, 0x01	; 1
    1322:	50 e0       	ldi	r21, 0x00	; 0
    1324:	b4 01       	movw	r22, r8
    1326:	ce 01       	movw	r24, r28
    1328:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
		break;
    132c:	26 c0       	rjmp	.+76     	; 0x137a <_ZN4QEPU7executeEill+0x28a>
		case 0x15: // T GATE
			newthephi=gates.T(read(op1,THE),read(op1,PHI));
    132e:	41 e0       	ldi	r20, 0x01	; 1
    1330:	50 e0       	ldi	r21, 0x00	; 0
    1332:	b4 01       	movw	r22, r8
    1334:	ce 01       	movw	r24, r28
    1336:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
    133a:	8c 01       	movw	r16, r24
    133c:	40 e0       	ldi	r20, 0x00	; 0
    133e:	50 e0       	ldi	r21, 0x00	; 0
    1340:	b4 01       	movw	r22, r8
    1342:	ce 01       	movw	r24, r28
    1344:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN4QEPU4readEii>
    1348:	a8 01       	movw	r20, r16
    134a:	bc 01       	movw	r22, r24
    134c:	ce 01       	movw	r24, r28
    134e:	05 96       	adiw	r24, 0x05	; 5
    1350:	0e 94 73 06 	call	0xce6	; 0xce6 <_ZN5Gates1TEii>
    1354:	8c 01       	movw	r16, r24
			write(op1,THE,newthephi[0]);write(op1,PHI,newthephi[1]);
    1356:	fc 01       	movw	r30, r24
    1358:	20 81       	ld	r18, Z
    135a:	31 81       	ldd	r19, Z+1	; 0x01
    135c:	40 e0       	ldi	r20, 0x00	; 0
    135e:	50 e0       	ldi	r21, 0x00	; 0
    1360:	b4 01       	movw	r22, r8
    1362:	ce 01       	movw	r24, r28
    1364:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
    1368:	f8 01       	movw	r30, r16
    136a:	22 81       	ldd	r18, Z+2	; 0x02
    136c:	33 81       	ldd	r19, Z+3	; 0x03
    136e:	41 e0       	ldi	r20, 0x01	; 1
    1370:	50 e0       	ldi	r21, 0x00	; 0
    1372:	b4 01       	movw	r22, r8
    1374:	ce 01       	movw	r24, r28
    1376:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN4QEPU5writeEiii>
	/*serial.writestr("Function: "); serial.writestr(utils.int2str(func));
	serial.writestr(" , OP1: ");   serial.writestr(utils.int2str(op1));
	serial.writestr(" , OP2: ");   serial.writestr(utils.int2str(op2));
	serial.writestr(" PC: ");	   serial.writestrln(utils.int2str(program_counter));
	serial.writestrln("");*/
	free(newthephi);	
    137a:	c8 01       	movw	r24, r16
    137c:	0e 94 25 0f 	call	0x1e4a	; 0x1e4a <free>
    1380:	df 91       	pop	r29
    1382:	cf 91       	pop	r28
    1384:	1f 91       	pop	r17
    1386:	0f 91       	pop	r16
    1388:	ff 90       	pop	r15
    138a:	ef 90       	pop	r14
    138c:	df 90       	pop	r13
    138e:	cf 90       	pop	r12
    1390:	bf 90       	pop	r11
    1392:	af 90       	pop	r10
    1394:	9f 90       	pop	r9
    1396:	8f 90       	pop	r8
    1398:	7f 90       	pop	r7
    139a:	6f 90       	pop	r6
    139c:	5f 90       	pop	r5
    139e:	4f 90       	pop	r4
    13a0:	08 95       	ret

000013a2 <_ZN4QEPU3runEv>:
}
int QEPU::Utils::delay(int ms){
	while(ms--) _delay_ms(1);
}

void QEPU::run(){
    13a2:	2f 92       	push	r2
    13a4:	3f 92       	push	r3
    13a6:	4f 92       	push	r4
    13a8:	5f 92       	push	r5
    13aa:	6f 92       	push	r6
    13ac:	7f 92       	push	r7
    13ae:	8f 92       	push	r8
    13b0:	9f 92       	push	r9
    13b2:	af 92       	push	r10
    13b4:	bf 92       	push	r11
    13b6:	cf 92       	push	r12
    13b8:	df 92       	push	r13
    13ba:	ef 92       	push	r14
    13bc:	ff 92       	push	r15
    13be:	0f 93       	push	r16
    13c0:	1f 93       	push	r17
    13c2:	cf 93       	push	r28
    13c4:	df 93       	push	r29
    13c6:	cd b7       	in	r28, 0x3d	; 61
    13c8:	de b7       	in	r29, 0x3e	; 62
    13ca:	c0 57       	subi	r28, 0x70	; 112
    13cc:	d1 09       	sbc	r29, r1
    13ce:	0f b6       	in	r0, 0x3f	; 63
    13d0:	f8 94       	cli
    13d2:	de bf       	out	0x3e, r29	; 62
    13d4:	0f be       	out	0x3f, r0	; 63
    13d6:	cd bf       	out	0x3d, r28	; 61
    13d8:	3c 01       	movw	r6, r24
	/*EEPROM FETCH*/
	#pragma region EEPROM_FETCH
	int * eeprom_mem=utils.str2intarr(eeprom.readall()); //TODO: READ ALL EEPROM
    13da:	0e 94 21 02 	call	0x442	; 0x442 <_ZN6EEProm7readallEv>
    13de:	bc 01       	movw	r22, r24
    13e0:	c3 01       	movw	r24, r6
    13e2:	02 96       	adiw	r24, 0x02	; 2
    13e4:	0e 94 df 07 	call	0xfbe	; 0xfbe <_ZN4QEPU5Utils10str2intarrEPc>
    13e8:	fc 01       	movw	r30, r24
    13ea:	38 97       	sbiw	r30, 0x08	; 8
	int eeprom_mem_length=0;
    13ec:	20 e0       	ldi	r18, 0x00	; 0
    13ee:	30 e0       	ldi	r19, 0x00	; 0
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
    13f0:	40 85       	ldd	r20, Z+8	; 0x08
    13f2:	51 85       	ldd	r21, Z+9	; 0x09
    13f4:	4f 3f       	cpi	r20, 0xFF	; 255
    13f6:	51 05       	cpc	r21, r1
    13f8:	a1 f4       	brne	.+40     	; 0x1422 <_ZN4QEPU3runEv+0x80>
    13fa:	46 81       	ldd	r20, Z+6	; 0x06
    13fc:	57 81       	ldd	r21, Z+7	; 0x07
    13fe:	4f 3f       	cpi	r20, 0xFF	; 255
    1400:	51 05       	cpc	r21, r1
    1402:	79 f4       	brne	.+30     	; 0x1422 <_ZN4QEPU3runEv+0x80>
    1404:	44 81       	ldd	r20, Z+4	; 0x04
    1406:	55 81       	ldd	r21, Z+5	; 0x05
    1408:	4f 3f       	cpi	r20, 0xFF	; 255
    140a:	51 05       	cpc	r21, r1
    140c:	51 f4       	brne	.+20     	; 0x1422 <_ZN4QEPU3runEv+0x80>
    140e:	42 81       	ldd	r20, Z+2	; 0x02
    1410:	53 81       	ldd	r21, Z+3	; 0x03
    1412:	4f 3f       	cpi	r20, 0xFF	; 255
    1414:	51 05       	cpc	r21, r1
    1416:	29 f4       	brne	.+10     	; 0x1422 <_ZN4QEPU3runEv+0x80>
    1418:	40 81       	ld	r20, Z
    141a:	51 81       	ldd	r21, Z+1	; 0x01
    141c:	4f 3f       	cpi	r20, 0xFF	; 255
    141e:	51 05       	cpc	r21, r1
    1420:	21 f0       	breq	.+8      	; 0x142a <_ZN4QEPU3runEv+0x88>
    1422:	2f 5f       	subi	r18, 0xFF	; 255
    1424:	3f 4f       	sbci	r19, 0xFF	; 255
    1426:	32 96       	adiw	r30, 0x02	; 2
    1428:	e3 cf       	rjmp	.-58     	; 0x13f0 <_ZN4QEPU3runEv+0x4e>
    142a:	a9 01       	movw	r20, r18
    142c:	44 50       	subi	r20, 0x04	; 4
    142e:	51 09       	sbc	r21, r1
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
	for(int i=0;i<eeprom_mem_length;i++){
    1430:	14 16       	cp	r1, r20
    1432:	15 06       	cpc	r1, r21
    1434:	0c f0       	brlt	.+2      	; 0x1438 <_ZN4QEPU3runEv+0x96>
    1436:	07 c1       	rjmp	.+526    	; 0x1646 <_ZN4QEPU3runEv+0x2a4>
    1438:	fc 01       	movw	r30, r24
    143a:	25 50       	subi	r18, 0x05	; 5
    143c:	31 09       	sbc	r19, r1
    143e:	40 e0       	ldi	r20, 0x00	; 0
    1440:	50 e0       	ldi	r21, 0x00	; 0
	int * eeprom_mem=utils.str2intarr(eeprom.readall()); //TODO: READ ALL EEPROM
	int eeprom_mem_length=0;
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
    1442:	80 e0       	ldi	r24, 0x00	; 0
    1444:	90 e0       	ldi	r25, 0x00	; 0
    1446:	41 2c       	mov	r4, r1
    1448:	51 2c       	mov	r5, r1
	for(int i=0;i<eeprom_mem_length;i++){
		if(eeprom_splittedx>=INSTR_WIDTH) {line++;eeprom_splittedx=0;} 
    144a:	c1 2c       	mov	r12, r1
    144c:	d1 2c       	mov	r13, r1
    144e:	0c c0       	rjmp	.+24     	; 0x1468 <_ZN4QEPU3runEv+0xc6>
    1450:	69 30       	cpi	r22, 0x09	; 9
    1452:	71 05       	cpc	r23, r1
    1454:	34 f0       	brlt	.+12     	; 0x1462 <_ZN4QEPU3runEv+0xc0>
    1456:	8f ef       	ldi	r24, 0xFF	; 255
    1458:	48 1a       	sub	r4, r24
    145a:	58 0a       	sbc	r5, r24
    145c:	8c 2d       	mov	r24, r12
    145e:	9d 2d       	mov	r25, r13
    1460:	01 c0       	rjmp	.+2      	; 0x1464 <_ZN4QEPU3runEv+0xc2>
		eeprom_splitted[line][eeprom_splittedx++]=eeprom_mem[i];
    1462:	cb 01       	movw	r24, r22
    1464:	4f 5f       	subi	r20, 0xFF	; 255
    1466:	5f 4f       	sbci	r21, 0xFF	; 255
    1468:	bc 01       	movw	r22, r24
    146a:	6f 5f       	subi	r22, 0xFF	; 255
    146c:	7f 4f       	sbci	r23, 0xFF	; 255
    146e:	01 91       	ld	r16, Z+
    1470:	11 91       	ld	r17, Z+
    1472:	d2 01       	movw	r26, r4
    1474:	aa 0f       	add	r26, r26
    1476:	bb 1f       	adc	r27, r27
    1478:	aa 0f       	add	r26, r26
    147a:	bb 1f       	adc	r27, r27
    147c:	aa 0f       	add	r26, r26
    147e:	bb 1f       	adc	r27, r27
    1480:	a4 0d       	add	r26, r4
    1482:	b5 1d       	adc	r27, r5
    1484:	8a 0f       	add	r24, r26
    1486:	9b 1f       	adc	r25, r27
    1488:	dc 01       	movw	r26, r24
    148a:	aa 0f       	add	r26, r26
    148c:	bb 1f       	adc	r27, r27
    148e:	81 e0       	ldi	r24, 0x01	; 1
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	8c 0f       	add	r24, r28
    1494:	9d 1f       	adc	r25, r29
    1496:	a8 0f       	add	r26, r24
    1498:	b9 1f       	adc	r27, r25
    149a:	0d 93       	st	X+, r16
    149c:	1c 93       	st	X, r17
	int eeprom_mem_length=0;
	for(int i=0;true;i++) if(eeprom_mem[i]==0xFF && eeprom_mem[i-1]==0xFF && eeprom_mem[i-2]==0xFF && eeprom_mem[i-3]==0xFF && eeprom_mem[i-4]==0xFF) break; else eeprom_mem_length++; eeprom_mem_length-=4;
	//TODO: PUT ALL LINES FROM EEPROM INTO AN ARRAY OF INSTRUCTIONS
	int eeprom_splitted[INSTR_HEIGHT][INSTR_WIDTH];
	int line=0,eeprom_splittedx=0;
	for(int i=0;i<eeprom_mem_length;i++){
    149e:	42 17       	cp	r20, r18
    14a0:	53 07       	cpc	r21, r19
    14a2:	b1 f6       	brne	.-84     	; 0x1450 <_ZN4QEPU3runEv+0xae>
	}
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
    14a4:	f3 01       	movw	r30, r6
    14a6:	14 82       	std	Z+4, r1	; 0x04
    14a8:	13 82       	std	Z+3, r1	; 0x03
    14aa:	14 14       	cp	r1, r4
    14ac:	15 04       	cpc	r1, r5
    14ae:	0c f0       	brlt	.+2      	; 0x14b2 <_ZN4QEPU3runEv+0x110>
    14b0:	c6 c0       	rjmp	.+396    	; 0x163e <_ZN4QEPU3runEv+0x29c>
    14b2:	80 e0       	ldi	r24, 0x00	; 0
    14b4:	90 e0       	ldi	r25, 0x00	; 0
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]="";		
    14b6:	5e 01       	movw	r10, r28
    14b8:	f2 e6       	ldi	r31, 0x62	; 98
    14ba:	af 0e       	add	r10, r31
    14bc:	b1 1c       	adc	r11, r1
    14be:	6e 01       	movw	r12, r28
    14c0:	2b e5       	ldi	r18, 0x5B	; 91
    14c2:	c2 0e       	add	r12, r18
    14c4:	d1 1c       	adc	r13, r1
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
			sprintf(op1s,"%s%x",op1s,eeprom_splitted[program_counter][k+FIXED_OP1_OFFSET]); // HEX CONCAT TO STRING (OP1 FETCH)
    14c6:	0f 2e       	mov	r0, r31
    14c8:	fa eb       	ldi	r31, 0xBA	; 186
    14ca:	8f 2e       	mov	r8, r31
    14cc:	f0 e0       	ldi	r31, 0x00	; 0
    14ce:	9f 2e       	mov	r9, r31
    14d0:	f0 2d       	mov	r31, r0
    14d2:	ae 96       	adiw	r28, 0x2e	; 46
    14d4:	af ae       	std	Y+63, r10	; 0x3f
    14d6:	ae 97       	sbiw	r28, 0x2e	; 46
    14d8:	af 96       	adiw	r28, 0x2f	; 47
    14da:	bf ae       	std	Y+63, r11	; 0x3f
    14dc:	af 97       	sbiw	r28, 0x2f	; 47
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
    14de:	e0 96       	adiw	r28, 0x30	; 48
    14e0:	cf ae       	std	Y+63, r12	; 0x3f
    14e2:	e0 97       	sbiw	r28, 0x30	; 48
    14e4:	e1 96       	adiw	r28, 0x31	; 49
    14e6:	df ae       	std	Y+63, r13	; 0x3f
    14e8:	e1 97       	sbiw	r28, 0x31	; 49
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]="";		
    14ea:	f5 01       	movw	r30, r10
    14ec:	10 82       	st	Z, r1
    14ee:	11 82       	std	Z+1, r1	; 0x01
    14f0:	12 82       	std	Z+2, r1	; 0x02
    14f2:	13 82       	std	Z+3, r1	; 0x03
    14f4:	14 82       	std	Z+4, r1	; 0x04
    14f6:	15 82       	std	Z+5, r1	; 0x05
    14f8:	16 82       	std	Z+6, r1	; 0x06
    14fa:	f6 01       	movw	r30, r12
    14fc:	10 82       	st	Z, r1
    14fe:	11 82       	std	Z+1, r1	; 0x01
    1500:	12 82       	std	Z+2, r1	; 0x02
    1502:	13 82       	std	Z+3, r1	; 0x03
    1504:	14 82       	std	Z+4, r1	; 0x04
    1506:	15 82       	std	Z+5, r1	; 0x05
    1508:	16 82       	std	Z+6, r1	; 0x06
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
    150a:	88 0f       	add	r24, r24
    150c:	99 1f       	adc	r25, r25
    150e:	fc 01       	movw	r30, r24
    1510:	ee 0f       	add	r30, r30
    1512:	ff 1f       	adc	r31, r31
    1514:	ee 0f       	add	r30, r30
    1516:	ff 1f       	adc	r31, r31
    1518:	ee 0f       	add	r30, r30
    151a:	ff 1f       	adc	r31, r31
    151c:	8e 0f       	add	r24, r30
    151e:	9f 1f       	adc	r25, r31
    1520:	e1 e0       	ldi	r30, 0x01	; 1
    1522:	f0 e0       	ldi	r31, 0x00	; 0
    1524:	ec 0f       	add	r30, r28
    1526:	fd 1f       	adc	r31, r29
    1528:	e8 0f       	add	r30, r24
    152a:	f9 1f       	adc	r31, r25
    152c:	20 80       	ld	r2, Z
    152e:	31 80       	ldd	r3, Z+1	; 0x01
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
    1530:	00 e0       	ldi	r16, 0x00	; 0
    1532:	10 e0       	ldi	r17, 0x00	; 0
			sprintf(op1s,"%s%x",op1s,eeprom_splitted[program_counter][k+FIXED_OP1_OFFSET]); // HEX CONCAT TO STRING (OP1 FETCH)
    1534:	0f 5f       	subi	r16, 0xFF	; 255
    1536:	1f 4f       	sbci	r17, 0xFF	; 255
    1538:	f3 01       	movw	r30, r6
    153a:	83 81       	ldd	r24, Z+3	; 0x03
    153c:	94 81       	ldd	r25, Z+4	; 0x04
    153e:	fc 01       	movw	r30, r24
    1540:	ee 0f       	add	r30, r30
    1542:	ff 1f       	adc	r31, r31
    1544:	ee 0f       	add	r30, r30
    1546:	ff 1f       	adc	r31, r31
    1548:	ee 0f       	add	r30, r30
    154a:	ff 1f       	adc	r31, r31
    154c:	8e 0f       	add	r24, r30
    154e:	9f 1f       	adc	r25, r31
    1550:	80 0f       	add	r24, r16
    1552:	91 1f       	adc	r25, r17
    1554:	fc 01       	movw	r30, r24
    1556:	ee 0f       	add	r30, r30
    1558:	ff 1f       	adc	r31, r31
    155a:	81 e0       	ldi	r24, 0x01	; 1
    155c:	90 e0       	ldi	r25, 0x00	; 0
    155e:	8c 0f       	add	r24, r28
    1560:	9d 1f       	adc	r25, r29
    1562:	e8 0f       	add	r30, r24
    1564:	f9 1f       	adc	r31, r25
    1566:	81 81       	ldd	r24, Z+1	; 0x01
    1568:	8f 93       	push	r24
    156a:	80 81       	ld	r24, Z
    156c:	8f 93       	push	r24
    156e:	bf 92       	push	r11
    1570:	af 92       	push	r10
    1572:	9f 92       	push	r9
    1574:	8f 92       	push	r8
    1576:	bf 92       	push	r11
    1578:	af 92       	push	r10
    157a:	0e 94 4e 11 	call	0x229c	; 0x229c <sprintf>
			sprintf(op2s,"%s%x",op2s,eeprom_splitted[program_counter][k+FIXED_OP2_OFFSET]); // HEX CONCAT TO STRING (OP2 FETCH)
    157e:	f3 01       	movw	r30, r6
    1580:	83 81       	ldd	r24, Z+3	; 0x03
    1582:	94 81       	ldd	r25, Z+4	; 0x04
    1584:	fc 01       	movw	r30, r24
    1586:	ee 0f       	add	r30, r30
    1588:	ff 1f       	adc	r31, r31
    158a:	ee 0f       	add	r30, r30
    158c:	ff 1f       	adc	r31, r31
    158e:	ee 0f       	add	r30, r30
    1590:	ff 1f       	adc	r31, r31
    1592:	e8 0f       	add	r30, r24
    1594:	f9 1f       	adc	r31, r25
    1596:	e0 0f       	add	r30, r16
    1598:	f1 1f       	adc	r31, r17
    159a:	34 96       	adiw	r30, 0x04	; 4
    159c:	ee 0f       	add	r30, r30
    159e:	ff 1f       	adc	r31, r31
    15a0:	81 e0       	ldi	r24, 0x01	; 1
    15a2:	90 e0       	ldi	r25, 0x00	; 0
    15a4:	8c 0f       	add	r24, r28
    15a6:	9d 1f       	adc	r25, r29
    15a8:	e8 0f       	add	r30, r24
    15aa:	f9 1f       	adc	r31, r25
    15ac:	81 81       	ldd	r24, Z+1	; 0x01
    15ae:	8f 93       	push	r24
    15b0:	80 81       	ld	r24, Z
    15b2:	8f 93       	push	r24
    15b4:	df 92       	push	r13
    15b6:	cf 92       	push	r12
    15b8:	9f 92       	push	r9
    15ba:	8f 92       	push	r8
    15bc:	df 92       	push	r13
    15be:	cf 92       	push	r12
    15c0:	0e 94 4e 11 	call	0x229c	; 0x229c <sprintf>
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
		int func=0;	char op1s[OP1_WIDTH]=""; char op2s[OP2_WIDTH]="";		
		//FIXED WIDTH INSTRUCTION:
		func=eeprom_splitted[program_counter][FIXED_FUNC_OFFSET]; // FUNCTION FETCH
		for(int k=0;k<QUBIT_BYTE_SIZE;k++){
    15c4:	0f b6       	in	r0, 0x3f	; 63
    15c6:	f8 94       	cli
    15c8:	de bf       	out	0x3e, r29	; 62
    15ca:	0f be       	out	0x3f, r0	; 63
    15cc:	cd bf       	out	0x3d, r28	; 61
    15ce:	04 30       	cpi	r16, 0x04	; 4
    15d0:	11 05       	cpc	r17, r1
    15d2:	09 f0       	breq	.+2      	; 0x15d6 <_ZN4QEPU3runEv+0x234>
    15d4:	af cf       	rjmp	.-162    	; 0x1534 <_ZN4QEPU3runEv+0x192>
						break;
					case 3:
						for(int k=j+1;true;k++) if(eeprom_splitted[i][k]==0x2C) break; else op2[k-(j+1)]=eeprom_splitted[i][k];
						break;
				}*/
		execute(func,strtol(op1s,NULL,16),strtol(op2s,NULL,16)); //*INSTRUCTION DECODE AND EXECUTE*/
    15d6:	40 e1       	ldi	r20, 0x10	; 16
    15d8:	50 e0       	ldi	r21, 0x00	; 0
    15da:	60 e0       	ldi	r22, 0x00	; 0
    15dc:	70 e0       	ldi	r23, 0x00	; 0
    15de:	e0 96       	adiw	r28, 0x30	; 48
    15e0:	8f ad       	ldd	r24, Y+63	; 0x3f
    15e2:	e0 97       	sbiw	r28, 0x30	; 48
    15e4:	e1 96       	adiw	r28, 0x31	; 49
    15e6:	9f ad       	ldd	r25, Y+63	; 0x3f
    15e8:	e1 97       	sbiw	r28, 0x31	; 49
    15ea:	0e 94 12 10 	call	0x2024	; 0x2024 <strtol>
    15ee:	ad 96       	adiw	r28, 0x2d	; 45
    15f0:	6c af       	std	Y+60, r22	; 0x3c
    15f2:	7d af       	std	Y+61, r23	; 0x3d
    15f4:	8e af       	std	Y+62, r24	; 0x3e
    15f6:	9f af       	std	Y+63, r25	; 0x3f
    15f8:	ad 97       	sbiw	r28, 0x2d	; 45
    15fa:	40 e1       	ldi	r20, 0x10	; 16
    15fc:	50 e0       	ldi	r21, 0x00	; 0
    15fe:	60 e0       	ldi	r22, 0x00	; 0
    1600:	70 e0       	ldi	r23, 0x00	; 0
    1602:	ae 96       	adiw	r28, 0x2e	; 46
    1604:	8f ad       	ldd	r24, Y+63	; 0x3f
    1606:	ae 97       	sbiw	r28, 0x2e	; 46
    1608:	af 96       	adiw	r28, 0x2f	; 47
    160a:	9f ad       	ldd	r25, Y+63	; 0x3f
    160c:	af 97       	sbiw	r28, 0x2f	; 47
    160e:	0e 94 12 10 	call	0x2024	; 0x2024 <strtol>
    1612:	9b 01       	movw	r18, r22
    1614:	ac 01       	movw	r20, r24
    1616:	ad 96       	adiw	r28, 0x2d	; 45
    1618:	ec ac       	ldd	r14, Y+60	; 0x3c
    161a:	fd ac       	ldd	r15, Y+61	; 0x3d
    161c:	0e ad       	ldd	r16, Y+62	; 0x3e
    161e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1620:	ad 97       	sbiw	r28, 0x2d	; 45
    1622:	b1 01       	movw	r22, r2
    1624:	c3 01       	movw	r24, r6
    1626:	0e 94 78 08 	call	0x10f0	; 0x10f0 <_ZN4QEPU7executeEill>
	}
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
    162a:	f3 01       	movw	r30, r6
    162c:	83 81       	ldd	r24, Z+3	; 0x03
    162e:	94 81       	ldd	r25, Z+4	; 0x04
    1630:	01 96       	adiw	r24, 0x01	; 1
    1632:	94 83       	std	Z+4, r25	; 0x04
    1634:	83 83       	std	Z+3, r24	; 0x03
    1636:	84 15       	cp	r24, r4
    1638:	95 05       	cpc	r25, r5
    163a:	0c f4       	brge	.+2      	; 0x163e <_ZN4QEPU3runEv+0x29c>
    163c:	56 cf       	rjmp	.-340    	; 0x14ea <_ZN4QEPU3runEv+0x148>
						for(int k=j+1;true;k++) if(eeprom_splitted[i][k]==0x2C) break; else op2[k-(j+1)]=eeprom_splitted[i][k];
						break;
				}*/
		execute(func,strtol(op1s,NULL,16),strtol(op2s,NULL,16)); //*INSTRUCTION DECODE AND EXECUTE*/
	}
	dumpmem();
    163e:	c3 01       	movw	r24, r6
    1640:	0e 94 4b 07 	call	0xe96	; 0xe96 <_ZN4QEPU7dumpmemEv>
    1644:	04 c0       	rjmp	.+8      	; 0x164e <_ZN4QEPU3runEv+0x2ac>
	}
	#pragma endregion
	/*INSTRUCTION FETCH*/
	#pragma region INSTRUCTION_FETCH
	//TODO: EXECUTE INSTRUCTIONS INSIDE THE ARRAY OF INSTRUCTIONS:
	for(program_counter=0;program_counter<line;program_counter++){
    1646:	f3 01       	movw	r30, r6
    1648:	14 82       	std	Z+4, r1	; 0x04
    164a:	13 82       	std	Z+3, r1	; 0x03
    164c:	f8 cf       	rjmp	.-16     	; 0x163e <_ZN4QEPU3runEv+0x29c>
				}*/
		execute(func,strtol(op1s,NULL,16),strtol(op2s,NULL,16)); //*INSTRUCTION DECODE AND EXECUTE*/
	}
	dumpmem();
	#pragma endregion
}
    164e:	c0 59       	subi	r28, 0x90	; 144
    1650:	df 4f       	sbci	r29, 0xFF	; 255
    1652:	0f b6       	in	r0, 0x3f	; 63
    1654:	f8 94       	cli
    1656:	de bf       	out	0x3e, r29	; 62
    1658:	0f be       	out	0x3f, r0	; 63
    165a:	cd bf       	out	0x3d, r28	; 61
    165c:	df 91       	pop	r29
    165e:	cf 91       	pop	r28
    1660:	1f 91       	pop	r17
    1662:	0f 91       	pop	r16
    1664:	ff 90       	pop	r15
    1666:	ef 90       	pop	r14
    1668:	df 90       	pop	r13
    166a:	cf 90       	pop	r12
    166c:	bf 90       	pop	r11
    166e:	af 90       	pop	r10
    1670:	9f 90       	pop	r9
    1672:	8f 90       	pop	r8
    1674:	7f 90       	pop	r7
    1676:	6f 90       	pop	r6
    1678:	5f 90       	pop	r5
    167a:	4f 90       	pop	r4
    167c:	3f 90       	pop	r3
    167e:	2f 90       	pop	r2
    1680:	08 95       	ret

00001682 <_ZN6SerialC1Ev>:
#include "uart.h"
Serial::Serial(){
	//Set Baud rate
	 //UBRRL = ubrr_value;
	 //UBRRH = (ubrr_value>>8);
	 UBRRL = 0x33;
    1682:	83 e3       	ldi	r24, 0x33	; 51
    1684:	89 b9       	out	0x09, r24	; 9
	 UBRRH = 0x00;
    1686:	10 bc       	out	0x20, r1	; 32
	 /*Set Frame Format
	 >> Asynchronous mode
	 >> No Parity
	 >> 1 StopBit
	 >> char size 8 */
	 UCSRC=(1<<URSEL)|(3<<UCSZ0);
    1688:	86 e8       	ldi	r24, 0x86	; 134
    168a:	80 bd       	out	0x20, r24	; 32
	 
	 //Enable The receiver and transmitter
	 UCSRB=(1<<RXEN)|(1<<TXEN);
    168c:	88 e1       	ldi	r24, 0x18	; 24
    168e:	8a b9       	out	0x0a, r24	; 10
    1690:	08 95       	ret

00001692 <_ZN6Serial5writeEc>:
	 //and it is available in the buffer
	 return UDR;
}
void Serial::write(char data){
	 //Wait until the transmitter is ready
	 while(!(UCSRA & (1<<UDRE)));
    1692:	5d 9b       	sbis	0x0b, 5	; 11
    1694:	fe cf       	rjmp	.-4      	; 0x1692 <_ZN6Serial5writeEc>
	 //Now write the data to USART buffer
	 UDR=data;
    1696:	6c b9       	out	0x0c, r22	; 12
    1698:	08 95       	ret

0000169a <_ZN6Serial8writestrEPc>:
}
void Serial::writestr(char * data){
    169a:	0f 93       	push	r16
    169c:	1f 93       	push	r17
    169e:	cf 93       	push	r28
    16a0:	df 93       	push	r29
    16a2:	8c 01       	movw	r16, r24
    16a4:	eb 01       	movw	r28, r22
	for(int i=0;true;i++) if(data[i]=='\0') break; else write(data[i]);
    16a6:	68 81       	ld	r22, Y
    16a8:	66 23       	and	r22, r22
    16aa:	39 f0       	breq	.+14     	; 0x16ba <_ZN6Serial8writestrEPc+0x20>
    16ac:	21 96       	adiw	r28, 0x01	; 1
    16ae:	c8 01       	movw	r24, r16
    16b0:	0e 94 49 0b 	call	0x1692	; 0x1692 <_ZN6Serial5writeEc>
    16b4:	69 91       	ld	r22, Y+
    16b6:	61 11       	cpse	r22, r1
    16b8:	fa cf       	rjmp	.-12     	; 0x16ae <_ZN6Serial8writestrEPc+0x14>
}
    16ba:	df 91       	pop	r29
    16bc:	cf 91       	pop	r28
    16be:	1f 91       	pop	r17
    16c0:	0f 91       	pop	r16
    16c2:	08 95       	ret

000016c4 <_ZN6Serial10writestrlnEPc>:
void Serial::writeln(char data){
	write(data);
	write(13); //NEW LINE
}
void Serial::writestrln(char * data){
    16c4:	cf 93       	push	r28
    16c6:	df 93       	push	r29
    16c8:	ec 01       	movw	r28, r24
	writestr(data);
    16ca:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN6Serial8writestrEPc>
	write(13); //NEW LINE
    16ce:	6d e0       	ldi	r22, 0x0D	; 13
    16d0:	ce 01       	movw	r24, r28
    16d2:	0e 94 49 0b 	call	0x1692	; 0x1692 <_ZN6Serial5writeEc>
    16d6:	df 91       	pop	r29
    16d8:	cf 91       	pop	r28
    16da:	08 95       	ret

000016dc <acos>:
    16dc:	9f 93       	push	r25
    16de:	9f 77       	andi	r25, 0x7F	; 127
    16e0:	71 d1       	rcall	.+738    	; 0x19c4 <__fp_arccos>
    16e2:	0f 90       	pop	r0
    16e4:	00 20       	and	r0, r0
    16e6:	3a f4       	brpl	.+14     	; 0x16f6 <acos+0x1a>
    16e8:	90 58       	subi	r25, 0x80	; 128
    16ea:	a2 ea       	ldi	r26, 0xA2	; 162
    16ec:	2a ed       	ldi	r18, 0xDA	; 218
    16ee:	3f e0       	ldi	r19, 0x0F	; 15
    16f0:	49 e4       	ldi	r20, 0x49	; 73
    16f2:	50 e4       	ldi	r21, 0x40	; 64
    16f4:	13 d0       	rcall	.+38     	; 0x171c <__addsf3x>
    16f6:	e5 c1       	rjmp	.+970    	; 0x1ac2 <__fp_round>

000016f8 <__subsf3>:
    16f8:	50 58       	subi	r21, 0x80	; 128

000016fa <__addsf3>:
    16fa:	bb 27       	eor	r27, r27
    16fc:	aa 27       	eor	r26, r26
    16fe:	0e d0       	rcall	.+28     	; 0x171c <__addsf3x>
    1700:	e0 c1       	rjmp	.+960    	; 0x1ac2 <__fp_round>
    1702:	a9 d1       	rcall	.+850    	; 0x1a56 <__fp_pscA>
    1704:	30 f0       	brcs	.+12     	; 0x1712 <__addsf3+0x18>
    1706:	ae d1       	rcall	.+860    	; 0x1a64 <__fp_pscB>
    1708:	20 f0       	brcs	.+8      	; 0x1712 <__addsf3+0x18>
    170a:	31 f4       	brne	.+12     	; 0x1718 <__addsf3+0x1e>
    170c:	9f 3f       	cpi	r25, 0xFF	; 255
    170e:	11 f4       	brne	.+4      	; 0x1714 <__addsf3+0x1a>
    1710:	1e f4       	brtc	.+6      	; 0x1718 <__addsf3+0x1e>
    1712:	79 c1       	rjmp	.+754    	; 0x1a06 <__fp_nan>
    1714:	0e f4       	brtc	.+2      	; 0x1718 <__addsf3+0x1e>
    1716:	e0 95       	com	r30
    1718:	e7 fb       	bst	r30, 7
    171a:	6f c1       	rjmp	.+734    	; 0x19fa <__fp_inf>

0000171c <__addsf3x>:
    171c:	e9 2f       	mov	r30, r25
    171e:	f3 d1       	rcall	.+998    	; 0x1b06 <__fp_split3>
    1720:	80 f3       	brcs	.-32     	; 0x1702 <__addsf3+0x8>
    1722:	ba 17       	cp	r27, r26
    1724:	62 07       	cpc	r22, r18
    1726:	73 07       	cpc	r23, r19
    1728:	84 07       	cpc	r24, r20
    172a:	95 07       	cpc	r25, r21
    172c:	18 f0       	brcs	.+6      	; 0x1734 <__addsf3x+0x18>
    172e:	71 f4       	brne	.+28     	; 0x174c <__addsf3x+0x30>
    1730:	9e f5       	brtc	.+102    	; 0x1798 <__addsf3x+0x7c>
    1732:	0b c2       	rjmp	.+1046   	; 0x1b4a <__fp_zero>
    1734:	0e f4       	brtc	.+2      	; 0x1738 <__addsf3x+0x1c>
    1736:	e0 95       	com	r30
    1738:	0b 2e       	mov	r0, r27
    173a:	ba 2f       	mov	r27, r26
    173c:	a0 2d       	mov	r26, r0
    173e:	0b 01       	movw	r0, r22
    1740:	b9 01       	movw	r22, r18
    1742:	90 01       	movw	r18, r0
    1744:	0c 01       	movw	r0, r24
    1746:	ca 01       	movw	r24, r20
    1748:	a0 01       	movw	r20, r0
    174a:	11 24       	eor	r1, r1
    174c:	ff 27       	eor	r31, r31
    174e:	59 1b       	sub	r21, r25
    1750:	99 f0       	breq	.+38     	; 0x1778 <__addsf3x+0x5c>
    1752:	59 3f       	cpi	r21, 0xF9	; 249
    1754:	50 f4       	brcc	.+20     	; 0x176a <__addsf3x+0x4e>
    1756:	50 3e       	cpi	r21, 0xE0	; 224
    1758:	68 f1       	brcs	.+90     	; 0x17b4 <__addsf3x+0x98>
    175a:	1a 16       	cp	r1, r26
    175c:	f0 40       	sbci	r31, 0x00	; 0
    175e:	a2 2f       	mov	r26, r18
    1760:	23 2f       	mov	r18, r19
    1762:	34 2f       	mov	r19, r20
    1764:	44 27       	eor	r20, r20
    1766:	58 5f       	subi	r21, 0xF8	; 248
    1768:	f3 cf       	rjmp	.-26     	; 0x1750 <__addsf3x+0x34>
    176a:	46 95       	lsr	r20
    176c:	37 95       	ror	r19
    176e:	27 95       	ror	r18
    1770:	a7 95       	ror	r26
    1772:	f0 40       	sbci	r31, 0x00	; 0
    1774:	53 95       	inc	r21
    1776:	c9 f7       	brne	.-14     	; 0x176a <__addsf3x+0x4e>
    1778:	7e f4       	brtc	.+30     	; 0x1798 <__addsf3x+0x7c>
    177a:	1f 16       	cp	r1, r31
    177c:	ba 0b       	sbc	r27, r26
    177e:	62 0b       	sbc	r22, r18
    1780:	73 0b       	sbc	r23, r19
    1782:	84 0b       	sbc	r24, r20
    1784:	ba f0       	brmi	.+46     	; 0x17b4 <__addsf3x+0x98>
    1786:	91 50       	subi	r25, 0x01	; 1
    1788:	a1 f0       	breq	.+40     	; 0x17b2 <__addsf3x+0x96>
    178a:	ff 0f       	add	r31, r31
    178c:	bb 1f       	adc	r27, r27
    178e:	66 1f       	adc	r22, r22
    1790:	77 1f       	adc	r23, r23
    1792:	88 1f       	adc	r24, r24
    1794:	c2 f7       	brpl	.-16     	; 0x1786 <__addsf3x+0x6a>
    1796:	0e c0       	rjmp	.+28     	; 0x17b4 <__addsf3x+0x98>
    1798:	ba 0f       	add	r27, r26
    179a:	62 1f       	adc	r22, r18
    179c:	73 1f       	adc	r23, r19
    179e:	84 1f       	adc	r24, r20
    17a0:	48 f4       	brcc	.+18     	; 0x17b4 <__addsf3x+0x98>
    17a2:	87 95       	ror	r24
    17a4:	77 95       	ror	r23
    17a6:	67 95       	ror	r22
    17a8:	b7 95       	ror	r27
    17aa:	f7 95       	ror	r31
    17ac:	9e 3f       	cpi	r25, 0xFE	; 254
    17ae:	08 f0       	brcs	.+2      	; 0x17b2 <__addsf3x+0x96>
    17b0:	b3 cf       	rjmp	.-154    	; 0x1718 <__addsf3+0x1e>
    17b2:	93 95       	inc	r25
    17b4:	88 0f       	add	r24, r24
    17b6:	08 f0       	brcs	.+2      	; 0x17ba <__addsf3x+0x9e>
    17b8:	99 27       	eor	r25, r25
    17ba:	ee 0f       	add	r30, r30
    17bc:	97 95       	ror	r25
    17be:	87 95       	ror	r24
    17c0:	08 95       	ret

000017c2 <atan>:
    17c2:	df 93       	push	r29
    17c4:	dd 27       	eor	r29, r29
    17c6:	b9 2f       	mov	r27, r25
    17c8:	bf 77       	andi	r27, 0x7F	; 127
    17ca:	40 e8       	ldi	r20, 0x80	; 128
    17cc:	5f e3       	ldi	r21, 0x3F	; 63
    17ce:	16 16       	cp	r1, r22
    17d0:	17 06       	cpc	r1, r23
    17d2:	48 07       	cpc	r20, r24
    17d4:	5b 07       	cpc	r21, r27
    17d6:	10 f4       	brcc	.+4      	; 0x17dc <atan+0x1a>
    17d8:	d9 2f       	mov	r29, r25
    17da:	be d1       	rcall	.+892    	; 0x1b58 <inverse>
    17dc:	9f 93       	push	r25
    17de:	8f 93       	push	r24
    17e0:	7f 93       	push	r23
    17e2:	6f 93       	push	r22
    17e4:	6b d2       	rcall	.+1238   	; 0x1cbc <square>
    17e6:	ee e7       	ldi	r30, 0x7E	; 126
    17e8:	f0 e0       	ldi	r31, 0x00	; 0
    17ea:	10 d1       	rcall	.+544    	; 0x1a0c <__fp_powser>
    17ec:	6a d1       	rcall	.+724    	; 0x1ac2 <__fp_round>
    17ee:	2f 91       	pop	r18
    17f0:	3f 91       	pop	r19
    17f2:	4f 91       	pop	r20
    17f4:	5f 91       	pop	r21
    17f6:	c3 d1       	rcall	.+902    	; 0x1b7e <__mulsf3x>
    17f8:	dd 23       	and	r29, r29
    17fa:	49 f0       	breq	.+18     	; 0x180e <atan+0x4c>
    17fc:	90 58       	subi	r25, 0x80	; 128
    17fe:	a2 ea       	ldi	r26, 0xA2	; 162
    1800:	2a ed       	ldi	r18, 0xDA	; 218
    1802:	3f e0       	ldi	r19, 0x0F	; 15
    1804:	49 ec       	ldi	r20, 0xC9	; 201
    1806:	5f e3       	ldi	r21, 0x3F	; 63
    1808:	d0 78       	andi	r29, 0x80	; 128
    180a:	5d 27       	eor	r21, r29
    180c:	87 df       	rcall	.-242    	; 0x171c <__addsf3x>
    180e:	df 91       	pop	r29
    1810:	58 c1       	rjmp	.+688    	; 0x1ac2 <__fp_round>

00001812 <cos>:
    1812:	30 d1       	rcall	.+608    	; 0x1a74 <__fp_rempio2>
    1814:	e3 95       	inc	r30
    1816:	66 c1       	rjmp	.+716    	; 0x1ae4 <__fp_sinus>

00001818 <__divsf3>:
    1818:	0c d0       	rcall	.+24     	; 0x1832 <__divsf3x>
    181a:	53 c1       	rjmp	.+678    	; 0x1ac2 <__fp_round>
    181c:	23 d1       	rcall	.+582    	; 0x1a64 <__fp_pscB>
    181e:	40 f0       	brcs	.+16     	; 0x1830 <__divsf3+0x18>
    1820:	1a d1       	rcall	.+564    	; 0x1a56 <__fp_pscA>
    1822:	30 f0       	brcs	.+12     	; 0x1830 <__divsf3+0x18>
    1824:	21 f4       	brne	.+8      	; 0x182e <__divsf3+0x16>
    1826:	5f 3f       	cpi	r21, 0xFF	; 255
    1828:	19 f0       	breq	.+6      	; 0x1830 <__divsf3+0x18>
    182a:	e7 c0       	rjmp	.+462    	; 0x19fa <__fp_inf>
    182c:	51 11       	cpse	r21, r1
    182e:	8e c1       	rjmp	.+796    	; 0x1b4c <__fp_szero>
    1830:	ea c0       	rjmp	.+468    	; 0x1a06 <__fp_nan>

00001832 <__divsf3x>:
    1832:	69 d1       	rcall	.+722    	; 0x1b06 <__fp_split3>
    1834:	98 f3       	brcs	.-26     	; 0x181c <__divsf3+0x4>

00001836 <__divsf3_pse>:
    1836:	99 23       	and	r25, r25
    1838:	c9 f3       	breq	.-14     	; 0x182c <__divsf3+0x14>
    183a:	55 23       	and	r21, r21
    183c:	b1 f3       	breq	.-20     	; 0x182a <__divsf3+0x12>
    183e:	95 1b       	sub	r25, r21
    1840:	55 0b       	sbc	r21, r21
    1842:	bb 27       	eor	r27, r27
    1844:	aa 27       	eor	r26, r26
    1846:	62 17       	cp	r22, r18
    1848:	73 07       	cpc	r23, r19
    184a:	84 07       	cpc	r24, r20
    184c:	38 f0       	brcs	.+14     	; 0x185c <__divsf3_pse+0x26>
    184e:	9f 5f       	subi	r25, 0xFF	; 255
    1850:	5f 4f       	sbci	r21, 0xFF	; 255
    1852:	22 0f       	add	r18, r18
    1854:	33 1f       	adc	r19, r19
    1856:	44 1f       	adc	r20, r20
    1858:	aa 1f       	adc	r26, r26
    185a:	a9 f3       	breq	.-22     	; 0x1846 <__divsf3_pse+0x10>
    185c:	33 d0       	rcall	.+102    	; 0x18c4 <__divsf3_pse+0x8e>
    185e:	0e 2e       	mov	r0, r30
    1860:	3a f0       	brmi	.+14     	; 0x1870 <__divsf3_pse+0x3a>
    1862:	e0 e8       	ldi	r30, 0x80	; 128
    1864:	30 d0       	rcall	.+96     	; 0x18c6 <__divsf3_pse+0x90>
    1866:	91 50       	subi	r25, 0x01	; 1
    1868:	50 40       	sbci	r21, 0x00	; 0
    186a:	e6 95       	lsr	r30
    186c:	00 1c       	adc	r0, r0
    186e:	ca f7       	brpl	.-14     	; 0x1862 <__divsf3_pse+0x2c>
    1870:	29 d0       	rcall	.+82     	; 0x18c4 <__divsf3_pse+0x8e>
    1872:	fe 2f       	mov	r31, r30
    1874:	27 d0       	rcall	.+78     	; 0x18c4 <__divsf3_pse+0x8e>
    1876:	66 0f       	add	r22, r22
    1878:	77 1f       	adc	r23, r23
    187a:	88 1f       	adc	r24, r24
    187c:	bb 1f       	adc	r27, r27
    187e:	26 17       	cp	r18, r22
    1880:	37 07       	cpc	r19, r23
    1882:	48 07       	cpc	r20, r24
    1884:	ab 07       	cpc	r26, r27
    1886:	b0 e8       	ldi	r27, 0x80	; 128
    1888:	09 f0       	breq	.+2      	; 0x188c <__divsf3_pse+0x56>
    188a:	bb 0b       	sbc	r27, r27
    188c:	80 2d       	mov	r24, r0
    188e:	bf 01       	movw	r22, r30
    1890:	ff 27       	eor	r31, r31
    1892:	93 58       	subi	r25, 0x83	; 131
    1894:	5f 4f       	sbci	r21, 0xFF	; 255
    1896:	2a f0       	brmi	.+10     	; 0x18a2 <__divsf3_pse+0x6c>
    1898:	9e 3f       	cpi	r25, 0xFE	; 254
    189a:	51 05       	cpc	r21, r1
    189c:	68 f0       	brcs	.+26     	; 0x18b8 <__divsf3_pse+0x82>
    189e:	ad c0       	rjmp	.+346    	; 0x19fa <__fp_inf>
    18a0:	55 c1       	rjmp	.+682    	; 0x1b4c <__fp_szero>
    18a2:	5f 3f       	cpi	r21, 0xFF	; 255
    18a4:	ec f3       	brlt	.-6      	; 0x18a0 <__divsf3_pse+0x6a>
    18a6:	98 3e       	cpi	r25, 0xE8	; 232
    18a8:	dc f3       	brlt	.-10     	; 0x18a0 <__divsf3_pse+0x6a>
    18aa:	86 95       	lsr	r24
    18ac:	77 95       	ror	r23
    18ae:	67 95       	ror	r22
    18b0:	b7 95       	ror	r27
    18b2:	f7 95       	ror	r31
    18b4:	9f 5f       	subi	r25, 0xFF	; 255
    18b6:	c9 f7       	brne	.-14     	; 0x18aa <__divsf3_pse+0x74>
    18b8:	88 0f       	add	r24, r24
    18ba:	91 1d       	adc	r25, r1
    18bc:	96 95       	lsr	r25
    18be:	87 95       	ror	r24
    18c0:	97 f9       	bld	r25, 7
    18c2:	08 95       	ret
    18c4:	e1 e0       	ldi	r30, 0x01	; 1
    18c6:	66 0f       	add	r22, r22
    18c8:	77 1f       	adc	r23, r23
    18ca:	88 1f       	adc	r24, r24
    18cc:	bb 1f       	adc	r27, r27
    18ce:	62 17       	cp	r22, r18
    18d0:	73 07       	cpc	r23, r19
    18d2:	84 07       	cpc	r24, r20
    18d4:	ba 07       	cpc	r27, r26
    18d6:	20 f0       	brcs	.+8      	; 0x18e0 <__divsf3_pse+0xaa>
    18d8:	62 1b       	sub	r22, r18
    18da:	73 0b       	sbc	r23, r19
    18dc:	84 0b       	sbc	r24, r20
    18de:	ba 0b       	sbc	r27, r26
    18e0:	ee 1f       	adc	r30, r30
    18e2:	88 f7       	brcc	.-30     	; 0x18c6 <__divsf3_pse+0x90>
    18e4:	e0 95       	com	r30
    18e6:	08 95       	ret

000018e8 <__fixsfsi>:
    18e8:	04 d0       	rcall	.+8      	; 0x18f2 <__fixunssfsi>
    18ea:	68 94       	set
    18ec:	b1 11       	cpse	r27, r1
    18ee:	2e c1       	rjmp	.+604    	; 0x1b4c <__fp_szero>
    18f0:	08 95       	ret

000018f2 <__fixunssfsi>:
    18f2:	11 d1       	rcall	.+546    	; 0x1b16 <__fp_splitA>
    18f4:	88 f0       	brcs	.+34     	; 0x1918 <__fixunssfsi+0x26>
    18f6:	9f 57       	subi	r25, 0x7F	; 127
    18f8:	90 f0       	brcs	.+36     	; 0x191e <__fixunssfsi+0x2c>
    18fa:	b9 2f       	mov	r27, r25
    18fc:	99 27       	eor	r25, r25
    18fe:	b7 51       	subi	r27, 0x17	; 23
    1900:	a0 f0       	brcs	.+40     	; 0x192a <__fixunssfsi+0x38>
    1902:	d1 f0       	breq	.+52     	; 0x1938 <__fixunssfsi+0x46>
    1904:	66 0f       	add	r22, r22
    1906:	77 1f       	adc	r23, r23
    1908:	88 1f       	adc	r24, r24
    190a:	99 1f       	adc	r25, r25
    190c:	1a f0       	brmi	.+6      	; 0x1914 <__fixunssfsi+0x22>
    190e:	ba 95       	dec	r27
    1910:	c9 f7       	brne	.-14     	; 0x1904 <__fixunssfsi+0x12>
    1912:	12 c0       	rjmp	.+36     	; 0x1938 <__fixunssfsi+0x46>
    1914:	b1 30       	cpi	r27, 0x01	; 1
    1916:	81 f0       	breq	.+32     	; 0x1938 <__fixunssfsi+0x46>
    1918:	18 d1       	rcall	.+560    	; 0x1b4a <__fp_zero>
    191a:	b1 e0       	ldi	r27, 0x01	; 1
    191c:	08 95       	ret
    191e:	15 c1       	rjmp	.+554    	; 0x1b4a <__fp_zero>
    1920:	67 2f       	mov	r22, r23
    1922:	78 2f       	mov	r23, r24
    1924:	88 27       	eor	r24, r24
    1926:	b8 5f       	subi	r27, 0xF8	; 248
    1928:	39 f0       	breq	.+14     	; 0x1938 <__fixunssfsi+0x46>
    192a:	b9 3f       	cpi	r27, 0xF9	; 249
    192c:	cc f3       	brlt	.-14     	; 0x1920 <__fixunssfsi+0x2e>
    192e:	86 95       	lsr	r24
    1930:	77 95       	ror	r23
    1932:	67 95       	ror	r22
    1934:	b3 95       	inc	r27
    1936:	d9 f7       	brne	.-10     	; 0x192e <__fixunssfsi+0x3c>
    1938:	3e f4       	brtc	.+14     	; 0x1948 <__fixunssfsi+0x56>
    193a:	90 95       	com	r25
    193c:	80 95       	com	r24
    193e:	70 95       	com	r23
    1940:	61 95       	neg	r22
    1942:	7f 4f       	sbci	r23, 0xFF	; 255
    1944:	8f 4f       	sbci	r24, 0xFF	; 255
    1946:	9f 4f       	sbci	r25, 0xFF	; 255
    1948:	08 95       	ret

0000194a <__floatunsisf>:
    194a:	e8 94       	clt
    194c:	09 c0       	rjmp	.+18     	; 0x1960 <__floatsisf+0x12>

0000194e <__floatsisf>:
    194e:	97 fb       	bst	r25, 7
    1950:	3e f4       	brtc	.+14     	; 0x1960 <__floatsisf+0x12>
    1952:	90 95       	com	r25
    1954:	80 95       	com	r24
    1956:	70 95       	com	r23
    1958:	61 95       	neg	r22
    195a:	7f 4f       	sbci	r23, 0xFF	; 255
    195c:	8f 4f       	sbci	r24, 0xFF	; 255
    195e:	9f 4f       	sbci	r25, 0xFF	; 255
    1960:	99 23       	and	r25, r25
    1962:	a9 f0       	breq	.+42     	; 0x198e <__floatsisf+0x40>
    1964:	f9 2f       	mov	r31, r25
    1966:	96 e9       	ldi	r25, 0x96	; 150
    1968:	bb 27       	eor	r27, r27
    196a:	93 95       	inc	r25
    196c:	f6 95       	lsr	r31
    196e:	87 95       	ror	r24
    1970:	77 95       	ror	r23
    1972:	67 95       	ror	r22
    1974:	b7 95       	ror	r27
    1976:	f1 11       	cpse	r31, r1
    1978:	f8 cf       	rjmp	.-16     	; 0x196a <__floatsisf+0x1c>
    197a:	fa f4       	brpl	.+62     	; 0x19ba <__floatsisf+0x6c>
    197c:	bb 0f       	add	r27, r27
    197e:	11 f4       	brne	.+4      	; 0x1984 <__floatsisf+0x36>
    1980:	60 ff       	sbrs	r22, 0
    1982:	1b c0       	rjmp	.+54     	; 0x19ba <__floatsisf+0x6c>
    1984:	6f 5f       	subi	r22, 0xFF	; 255
    1986:	7f 4f       	sbci	r23, 0xFF	; 255
    1988:	8f 4f       	sbci	r24, 0xFF	; 255
    198a:	9f 4f       	sbci	r25, 0xFF	; 255
    198c:	16 c0       	rjmp	.+44     	; 0x19ba <__floatsisf+0x6c>
    198e:	88 23       	and	r24, r24
    1990:	11 f0       	breq	.+4      	; 0x1996 <__floatsisf+0x48>
    1992:	96 e9       	ldi	r25, 0x96	; 150
    1994:	11 c0       	rjmp	.+34     	; 0x19b8 <__floatsisf+0x6a>
    1996:	77 23       	and	r23, r23
    1998:	21 f0       	breq	.+8      	; 0x19a2 <__floatsisf+0x54>
    199a:	9e e8       	ldi	r25, 0x8E	; 142
    199c:	87 2f       	mov	r24, r23
    199e:	76 2f       	mov	r23, r22
    19a0:	05 c0       	rjmp	.+10     	; 0x19ac <__floatsisf+0x5e>
    19a2:	66 23       	and	r22, r22
    19a4:	71 f0       	breq	.+28     	; 0x19c2 <__floatsisf+0x74>
    19a6:	96 e8       	ldi	r25, 0x86	; 134
    19a8:	86 2f       	mov	r24, r22
    19aa:	70 e0       	ldi	r23, 0x00	; 0
    19ac:	60 e0       	ldi	r22, 0x00	; 0
    19ae:	2a f0       	brmi	.+10     	; 0x19ba <__floatsisf+0x6c>
    19b0:	9a 95       	dec	r25
    19b2:	66 0f       	add	r22, r22
    19b4:	77 1f       	adc	r23, r23
    19b6:	88 1f       	adc	r24, r24
    19b8:	da f7       	brpl	.-10     	; 0x19b0 <__floatsisf+0x62>
    19ba:	88 0f       	add	r24, r24
    19bc:	96 95       	lsr	r25
    19be:	87 95       	ror	r24
    19c0:	97 f9       	bld	r25, 7
    19c2:	08 95       	ret

000019c4 <__fp_arccos>:
    19c4:	df 93       	push	r29
    19c6:	cf 93       	push	r28
    19c8:	1f 93       	push	r17
    19ca:	0f 93       	push	r16
    19cc:	8b 01       	movw	r16, r22
    19ce:	ec 01       	movw	r28, r24
    19d0:	eb ea       	ldi	r30, 0xAB	; 171
    19d2:	f0 e0       	ldi	r31, 0x00	; 0
    19d4:	1b d0       	rcall	.+54     	; 0x1a0c <__fp_powser>
    19d6:	75 d0       	rcall	.+234    	; 0x1ac2 <__fp_round>
    19d8:	98 01       	movw	r18, r16
    19da:	ae 01       	movw	r20, r28
    19dc:	8b 01       	movw	r16, r22
    19de:	ec 01       	movw	r28, r24
    19e0:	60 e0       	ldi	r22, 0x00	; 0
    19e2:	70 e0       	ldi	r23, 0x00	; 0
    19e4:	80 e8       	ldi	r24, 0x80	; 128
    19e6:	9f e3       	ldi	r25, 0x3F	; 63
    19e8:	87 de       	rcall	.-754    	; 0x16f8 <__subsf3>
    19ea:	2a d1       	rcall	.+596    	; 0x1c40 <sqrt>
    19ec:	98 01       	movw	r18, r16
    19ee:	ae 01       	movw	r20, r28
    19f0:	0f 91       	pop	r16
    19f2:	1f 91       	pop	r17
    19f4:	cf 91       	pop	r28
    19f6:	df 91       	pop	r29
    19f8:	c2 c0       	rjmp	.+388    	; 0x1b7e <__mulsf3x>

000019fa <__fp_inf>:
    19fa:	97 f9       	bld	r25, 7
    19fc:	9f 67       	ori	r25, 0x7F	; 127
    19fe:	80 e8       	ldi	r24, 0x80	; 128
    1a00:	70 e0       	ldi	r23, 0x00	; 0
    1a02:	60 e0       	ldi	r22, 0x00	; 0
    1a04:	08 95       	ret

00001a06 <__fp_nan>:
    1a06:	9f ef       	ldi	r25, 0xFF	; 255
    1a08:	80 ec       	ldi	r24, 0xC0	; 192
    1a0a:	08 95       	ret

00001a0c <__fp_powser>:
    1a0c:	df 93       	push	r29
    1a0e:	cf 93       	push	r28
    1a10:	1f 93       	push	r17
    1a12:	0f 93       	push	r16
    1a14:	ff 92       	push	r15
    1a16:	ef 92       	push	r14
    1a18:	df 92       	push	r13
    1a1a:	7b 01       	movw	r14, r22
    1a1c:	8c 01       	movw	r16, r24
    1a1e:	68 94       	set
    1a20:	05 c0       	rjmp	.+10     	; 0x1a2c <__fp_powser+0x20>
    1a22:	da 2e       	mov	r13, r26
    1a24:	ef 01       	movw	r28, r30
    1a26:	ab d0       	rcall	.+342    	; 0x1b7e <__mulsf3x>
    1a28:	fe 01       	movw	r30, r28
    1a2a:	e8 94       	clt
    1a2c:	a5 91       	lpm	r26, Z+
    1a2e:	25 91       	lpm	r18, Z+
    1a30:	35 91       	lpm	r19, Z+
    1a32:	45 91       	lpm	r20, Z+
    1a34:	55 91       	lpm	r21, Z+
    1a36:	ae f3       	brts	.-22     	; 0x1a22 <__fp_powser+0x16>
    1a38:	ef 01       	movw	r28, r30
    1a3a:	70 de       	rcall	.-800    	; 0x171c <__addsf3x>
    1a3c:	fe 01       	movw	r30, r28
    1a3e:	97 01       	movw	r18, r14
    1a40:	a8 01       	movw	r20, r16
    1a42:	da 94       	dec	r13
    1a44:	79 f7       	brne	.-34     	; 0x1a24 <__fp_powser+0x18>
    1a46:	df 90       	pop	r13
    1a48:	ef 90       	pop	r14
    1a4a:	ff 90       	pop	r15
    1a4c:	0f 91       	pop	r16
    1a4e:	1f 91       	pop	r17
    1a50:	cf 91       	pop	r28
    1a52:	df 91       	pop	r29
    1a54:	08 95       	ret

00001a56 <__fp_pscA>:
    1a56:	00 24       	eor	r0, r0
    1a58:	0a 94       	dec	r0
    1a5a:	16 16       	cp	r1, r22
    1a5c:	17 06       	cpc	r1, r23
    1a5e:	18 06       	cpc	r1, r24
    1a60:	09 06       	cpc	r0, r25
    1a62:	08 95       	ret

00001a64 <__fp_pscB>:
    1a64:	00 24       	eor	r0, r0
    1a66:	0a 94       	dec	r0
    1a68:	12 16       	cp	r1, r18
    1a6a:	13 06       	cpc	r1, r19
    1a6c:	14 06       	cpc	r1, r20
    1a6e:	05 06       	cpc	r0, r21
    1a70:	08 95       	ret
    1a72:	c9 cf       	rjmp	.-110    	; 0x1a06 <__fp_nan>

00001a74 <__fp_rempio2>:
    1a74:	50 d0       	rcall	.+160    	; 0x1b16 <__fp_splitA>
    1a76:	e8 f3       	brcs	.-6      	; 0x1a72 <__fp_pscB+0xe>
    1a78:	e8 94       	clt
    1a7a:	e0 e0       	ldi	r30, 0x00	; 0
    1a7c:	bb 27       	eor	r27, r27
    1a7e:	9f 57       	subi	r25, 0x7F	; 127
    1a80:	f0 f0       	brcs	.+60     	; 0x1abe <__fp_rempio2+0x4a>
    1a82:	2a ed       	ldi	r18, 0xDA	; 218
    1a84:	3f e0       	ldi	r19, 0x0F	; 15
    1a86:	49 ec       	ldi	r20, 0xC9	; 201
    1a88:	06 c0       	rjmp	.+12     	; 0x1a96 <__fp_rempio2+0x22>
    1a8a:	ee 0f       	add	r30, r30
    1a8c:	bb 0f       	add	r27, r27
    1a8e:	66 1f       	adc	r22, r22
    1a90:	77 1f       	adc	r23, r23
    1a92:	88 1f       	adc	r24, r24
    1a94:	28 f0       	brcs	.+10     	; 0x1aa0 <__fp_rempio2+0x2c>
    1a96:	b2 3a       	cpi	r27, 0xA2	; 162
    1a98:	62 07       	cpc	r22, r18
    1a9a:	73 07       	cpc	r23, r19
    1a9c:	84 07       	cpc	r24, r20
    1a9e:	28 f0       	brcs	.+10     	; 0x1aaa <__fp_rempio2+0x36>
    1aa0:	b2 5a       	subi	r27, 0xA2	; 162
    1aa2:	62 0b       	sbc	r22, r18
    1aa4:	73 0b       	sbc	r23, r19
    1aa6:	84 0b       	sbc	r24, r20
    1aa8:	e3 95       	inc	r30
    1aaa:	9a 95       	dec	r25
    1aac:	72 f7       	brpl	.-36     	; 0x1a8a <__fp_rempio2+0x16>
    1aae:	80 38       	cpi	r24, 0x80	; 128
    1ab0:	30 f4       	brcc	.+12     	; 0x1abe <__fp_rempio2+0x4a>
    1ab2:	9a 95       	dec	r25
    1ab4:	bb 0f       	add	r27, r27
    1ab6:	66 1f       	adc	r22, r22
    1ab8:	77 1f       	adc	r23, r23
    1aba:	88 1f       	adc	r24, r24
    1abc:	d2 f7       	brpl	.-12     	; 0x1ab2 <__fp_rempio2+0x3e>
    1abe:	90 48       	sbci	r25, 0x80	; 128
    1ac0:	02 c1       	rjmp	.+516    	; 0x1cc6 <__fp_mpack_finite>

00001ac2 <__fp_round>:
    1ac2:	09 2e       	mov	r0, r25
    1ac4:	03 94       	inc	r0
    1ac6:	00 0c       	add	r0, r0
    1ac8:	11 f4       	brne	.+4      	; 0x1ace <__fp_round+0xc>
    1aca:	88 23       	and	r24, r24
    1acc:	52 f0       	brmi	.+20     	; 0x1ae2 <__fp_round+0x20>
    1ace:	bb 0f       	add	r27, r27
    1ad0:	40 f4       	brcc	.+16     	; 0x1ae2 <__fp_round+0x20>
    1ad2:	bf 2b       	or	r27, r31
    1ad4:	11 f4       	brne	.+4      	; 0x1ada <__fp_round+0x18>
    1ad6:	60 ff       	sbrs	r22, 0
    1ad8:	04 c0       	rjmp	.+8      	; 0x1ae2 <__fp_round+0x20>
    1ada:	6f 5f       	subi	r22, 0xFF	; 255
    1adc:	7f 4f       	sbci	r23, 0xFF	; 255
    1ade:	8f 4f       	sbci	r24, 0xFF	; 255
    1ae0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ae2:	08 95       	ret

00001ae4 <__fp_sinus>:
    1ae4:	ef 93       	push	r30
    1ae6:	e0 ff       	sbrs	r30, 0
    1ae8:	06 c0       	rjmp	.+12     	; 0x1af6 <__fp_sinus+0x12>
    1aea:	a2 ea       	ldi	r26, 0xA2	; 162
    1aec:	2a ed       	ldi	r18, 0xDA	; 218
    1aee:	3f e0       	ldi	r19, 0x0F	; 15
    1af0:	49 ec       	ldi	r20, 0xC9	; 201
    1af2:	5f eb       	ldi	r21, 0xBF	; 191
    1af4:	13 de       	rcall	.-986    	; 0x171c <__addsf3x>
    1af6:	e5 df       	rcall	.-54     	; 0x1ac2 <__fp_round>
    1af8:	0f 90       	pop	r0
    1afa:	03 94       	inc	r0
    1afc:	01 fc       	sbrc	r0, 1
    1afe:	90 58       	subi	r25, 0x80	; 128
    1b00:	e3 ed       	ldi	r30, 0xD3	; 211
    1b02:	f0 e0       	ldi	r31, 0x00	; 0
    1b04:	f3 c0       	rjmp	.+486    	; 0x1cec <__fp_powsodd>

00001b06 <__fp_split3>:
    1b06:	57 fd       	sbrc	r21, 7
    1b08:	90 58       	subi	r25, 0x80	; 128
    1b0a:	44 0f       	add	r20, r20
    1b0c:	55 1f       	adc	r21, r21
    1b0e:	59 f0       	breq	.+22     	; 0x1b26 <__fp_splitA+0x10>
    1b10:	5f 3f       	cpi	r21, 0xFF	; 255
    1b12:	71 f0       	breq	.+28     	; 0x1b30 <__fp_splitA+0x1a>
    1b14:	47 95       	ror	r20

00001b16 <__fp_splitA>:
    1b16:	88 0f       	add	r24, r24
    1b18:	97 fb       	bst	r25, 7
    1b1a:	99 1f       	adc	r25, r25
    1b1c:	61 f0       	breq	.+24     	; 0x1b36 <__fp_splitA+0x20>
    1b1e:	9f 3f       	cpi	r25, 0xFF	; 255
    1b20:	79 f0       	breq	.+30     	; 0x1b40 <__fp_splitA+0x2a>
    1b22:	87 95       	ror	r24
    1b24:	08 95       	ret
    1b26:	12 16       	cp	r1, r18
    1b28:	13 06       	cpc	r1, r19
    1b2a:	14 06       	cpc	r1, r20
    1b2c:	55 1f       	adc	r21, r21
    1b2e:	f2 cf       	rjmp	.-28     	; 0x1b14 <__fp_split3+0xe>
    1b30:	46 95       	lsr	r20
    1b32:	f1 df       	rcall	.-30     	; 0x1b16 <__fp_splitA>
    1b34:	08 c0       	rjmp	.+16     	; 0x1b46 <__fp_splitA+0x30>
    1b36:	16 16       	cp	r1, r22
    1b38:	17 06       	cpc	r1, r23
    1b3a:	18 06       	cpc	r1, r24
    1b3c:	99 1f       	adc	r25, r25
    1b3e:	f1 cf       	rjmp	.-30     	; 0x1b22 <__fp_splitA+0xc>
    1b40:	86 95       	lsr	r24
    1b42:	71 05       	cpc	r23, r1
    1b44:	61 05       	cpc	r22, r1
    1b46:	08 94       	sec
    1b48:	08 95       	ret

00001b4a <__fp_zero>:
    1b4a:	e8 94       	clt

00001b4c <__fp_szero>:
    1b4c:	bb 27       	eor	r27, r27
    1b4e:	66 27       	eor	r22, r22
    1b50:	77 27       	eor	r23, r23
    1b52:	cb 01       	movw	r24, r22
    1b54:	97 f9       	bld	r25, 7
    1b56:	08 95       	ret

00001b58 <inverse>:
    1b58:	9b 01       	movw	r18, r22
    1b5a:	ac 01       	movw	r20, r24
    1b5c:	60 e0       	ldi	r22, 0x00	; 0
    1b5e:	70 e0       	ldi	r23, 0x00	; 0
    1b60:	80 e8       	ldi	r24, 0x80	; 128
    1b62:	9f e3       	ldi	r25, 0x3F	; 63
    1b64:	59 ce       	rjmp	.-846    	; 0x1818 <__divsf3>

00001b66 <__mulsf3>:
    1b66:	0b d0       	rcall	.+22     	; 0x1b7e <__mulsf3x>
    1b68:	ac cf       	rjmp	.-168    	; 0x1ac2 <__fp_round>
    1b6a:	75 df       	rcall	.-278    	; 0x1a56 <__fp_pscA>
    1b6c:	28 f0       	brcs	.+10     	; 0x1b78 <__mulsf3+0x12>
    1b6e:	7a df       	rcall	.-268    	; 0x1a64 <__fp_pscB>
    1b70:	18 f0       	brcs	.+6      	; 0x1b78 <__mulsf3+0x12>
    1b72:	95 23       	and	r25, r21
    1b74:	09 f0       	breq	.+2      	; 0x1b78 <__mulsf3+0x12>
    1b76:	41 cf       	rjmp	.-382    	; 0x19fa <__fp_inf>
    1b78:	46 cf       	rjmp	.-372    	; 0x1a06 <__fp_nan>
    1b7a:	11 24       	eor	r1, r1
    1b7c:	e7 cf       	rjmp	.-50     	; 0x1b4c <__fp_szero>

00001b7e <__mulsf3x>:
    1b7e:	c3 df       	rcall	.-122    	; 0x1b06 <__fp_split3>
    1b80:	a0 f3       	brcs	.-24     	; 0x1b6a <__mulsf3+0x4>

00001b82 <__mulsf3_pse>:
    1b82:	95 9f       	mul	r25, r21
    1b84:	d1 f3       	breq	.-12     	; 0x1b7a <__mulsf3+0x14>
    1b86:	95 0f       	add	r25, r21
    1b88:	50 e0       	ldi	r21, 0x00	; 0
    1b8a:	55 1f       	adc	r21, r21
    1b8c:	62 9f       	mul	r22, r18
    1b8e:	f0 01       	movw	r30, r0
    1b90:	72 9f       	mul	r23, r18
    1b92:	bb 27       	eor	r27, r27
    1b94:	f0 0d       	add	r31, r0
    1b96:	b1 1d       	adc	r27, r1
    1b98:	63 9f       	mul	r22, r19
    1b9a:	aa 27       	eor	r26, r26
    1b9c:	f0 0d       	add	r31, r0
    1b9e:	b1 1d       	adc	r27, r1
    1ba0:	aa 1f       	adc	r26, r26
    1ba2:	64 9f       	mul	r22, r20
    1ba4:	66 27       	eor	r22, r22
    1ba6:	b0 0d       	add	r27, r0
    1ba8:	a1 1d       	adc	r26, r1
    1baa:	66 1f       	adc	r22, r22
    1bac:	82 9f       	mul	r24, r18
    1bae:	22 27       	eor	r18, r18
    1bb0:	b0 0d       	add	r27, r0
    1bb2:	a1 1d       	adc	r26, r1
    1bb4:	62 1f       	adc	r22, r18
    1bb6:	73 9f       	mul	r23, r19
    1bb8:	b0 0d       	add	r27, r0
    1bba:	a1 1d       	adc	r26, r1
    1bbc:	62 1f       	adc	r22, r18
    1bbe:	83 9f       	mul	r24, r19
    1bc0:	a0 0d       	add	r26, r0
    1bc2:	61 1d       	adc	r22, r1
    1bc4:	22 1f       	adc	r18, r18
    1bc6:	74 9f       	mul	r23, r20
    1bc8:	33 27       	eor	r19, r19
    1bca:	a0 0d       	add	r26, r0
    1bcc:	61 1d       	adc	r22, r1
    1bce:	23 1f       	adc	r18, r19
    1bd0:	84 9f       	mul	r24, r20
    1bd2:	60 0d       	add	r22, r0
    1bd4:	21 1d       	adc	r18, r1
    1bd6:	82 2f       	mov	r24, r18
    1bd8:	76 2f       	mov	r23, r22
    1bda:	6a 2f       	mov	r22, r26
    1bdc:	11 24       	eor	r1, r1
    1bde:	9f 57       	subi	r25, 0x7F	; 127
    1be0:	50 40       	sbci	r21, 0x00	; 0
    1be2:	8a f0       	brmi	.+34     	; 0x1c06 <__mulsf3_pse+0x84>
    1be4:	e1 f0       	breq	.+56     	; 0x1c1e <__mulsf3_pse+0x9c>
    1be6:	88 23       	and	r24, r24
    1be8:	4a f0       	brmi	.+18     	; 0x1bfc <__mulsf3_pse+0x7a>
    1bea:	ee 0f       	add	r30, r30
    1bec:	ff 1f       	adc	r31, r31
    1bee:	bb 1f       	adc	r27, r27
    1bf0:	66 1f       	adc	r22, r22
    1bf2:	77 1f       	adc	r23, r23
    1bf4:	88 1f       	adc	r24, r24
    1bf6:	91 50       	subi	r25, 0x01	; 1
    1bf8:	50 40       	sbci	r21, 0x00	; 0
    1bfa:	a9 f7       	brne	.-22     	; 0x1be6 <__mulsf3_pse+0x64>
    1bfc:	9e 3f       	cpi	r25, 0xFE	; 254
    1bfe:	51 05       	cpc	r21, r1
    1c00:	70 f0       	brcs	.+28     	; 0x1c1e <__mulsf3_pse+0x9c>
    1c02:	fb ce       	rjmp	.-522    	; 0x19fa <__fp_inf>
    1c04:	a3 cf       	rjmp	.-186    	; 0x1b4c <__fp_szero>
    1c06:	5f 3f       	cpi	r21, 0xFF	; 255
    1c08:	ec f3       	brlt	.-6      	; 0x1c04 <__mulsf3_pse+0x82>
    1c0a:	98 3e       	cpi	r25, 0xE8	; 232
    1c0c:	dc f3       	brlt	.-10     	; 0x1c04 <__mulsf3_pse+0x82>
    1c0e:	86 95       	lsr	r24
    1c10:	77 95       	ror	r23
    1c12:	67 95       	ror	r22
    1c14:	b7 95       	ror	r27
    1c16:	f7 95       	ror	r31
    1c18:	e7 95       	ror	r30
    1c1a:	9f 5f       	subi	r25, 0xFF	; 255
    1c1c:	c1 f7       	brne	.-16     	; 0x1c0e <__mulsf3_pse+0x8c>
    1c1e:	fe 2b       	or	r31, r30
    1c20:	88 0f       	add	r24, r24
    1c22:	91 1d       	adc	r25, r1
    1c24:	96 95       	lsr	r25
    1c26:	87 95       	ror	r24
    1c28:	97 f9       	bld	r25, 7
    1c2a:	08 95       	ret

00001c2c <sin>:
    1c2c:	9f 93       	push	r25
    1c2e:	22 df       	rcall	.-444    	; 0x1a74 <__fp_rempio2>
    1c30:	0f 90       	pop	r0
    1c32:	07 fc       	sbrc	r0, 7
    1c34:	ee 5f       	subi	r30, 0xFE	; 254
    1c36:	56 cf       	rjmp	.-340    	; 0x1ae4 <__fp_sinus>
    1c38:	11 f4       	brne	.+4      	; 0x1c3e <sin+0x12>
    1c3a:	0e f4       	brtc	.+2      	; 0x1c3e <sin+0x12>
    1c3c:	e4 ce       	rjmp	.-568    	; 0x1a06 <__fp_nan>
    1c3e:	41 c0       	rjmp	.+130    	; 0x1cc2 <__fp_mpack>

00001c40 <sqrt>:
    1c40:	6a df       	rcall	.-300    	; 0x1b16 <__fp_splitA>
    1c42:	d0 f3       	brcs	.-12     	; 0x1c38 <sin+0xc>
    1c44:	99 23       	and	r25, r25
    1c46:	d9 f3       	breq	.-10     	; 0x1c3e <sin+0x12>
    1c48:	ce f3       	brts	.-14     	; 0x1c3c <sin+0x10>
    1c4a:	9f 57       	subi	r25, 0x7F	; 127
    1c4c:	55 0b       	sbc	r21, r21
    1c4e:	87 ff       	sbrs	r24, 7
    1c50:	46 d0       	rcall	.+140    	; 0x1cde <__fp_norm2>
    1c52:	00 24       	eor	r0, r0
    1c54:	a0 e6       	ldi	r26, 0x60	; 96
    1c56:	40 ea       	ldi	r20, 0xA0	; 160
    1c58:	90 01       	movw	r18, r0
    1c5a:	80 58       	subi	r24, 0x80	; 128
    1c5c:	56 95       	lsr	r21
    1c5e:	97 95       	ror	r25
    1c60:	28 f4       	brcc	.+10     	; 0x1c6c <sqrt+0x2c>
    1c62:	80 5c       	subi	r24, 0xC0	; 192
    1c64:	66 0f       	add	r22, r22
    1c66:	77 1f       	adc	r23, r23
    1c68:	88 1f       	adc	r24, r24
    1c6a:	20 f0       	brcs	.+8      	; 0x1c74 <sqrt+0x34>
    1c6c:	26 17       	cp	r18, r22
    1c6e:	37 07       	cpc	r19, r23
    1c70:	48 07       	cpc	r20, r24
    1c72:	30 f4       	brcc	.+12     	; 0x1c80 <sqrt+0x40>
    1c74:	62 1b       	sub	r22, r18
    1c76:	73 0b       	sbc	r23, r19
    1c78:	84 0b       	sbc	r24, r20
    1c7a:	20 29       	or	r18, r0
    1c7c:	31 29       	or	r19, r1
    1c7e:	4a 2b       	or	r20, r26
    1c80:	a6 95       	lsr	r26
    1c82:	17 94       	ror	r1
    1c84:	07 94       	ror	r0
    1c86:	20 25       	eor	r18, r0
    1c88:	31 25       	eor	r19, r1
    1c8a:	4a 27       	eor	r20, r26
    1c8c:	58 f7       	brcc	.-42     	; 0x1c64 <sqrt+0x24>
    1c8e:	66 0f       	add	r22, r22
    1c90:	77 1f       	adc	r23, r23
    1c92:	88 1f       	adc	r24, r24
    1c94:	20 f0       	brcs	.+8      	; 0x1c9e <sqrt+0x5e>
    1c96:	26 17       	cp	r18, r22
    1c98:	37 07       	cpc	r19, r23
    1c9a:	48 07       	cpc	r20, r24
    1c9c:	30 f4       	brcc	.+12     	; 0x1caa <sqrt+0x6a>
    1c9e:	62 0b       	sbc	r22, r18
    1ca0:	73 0b       	sbc	r23, r19
    1ca2:	84 0b       	sbc	r24, r20
    1ca4:	20 0d       	add	r18, r0
    1ca6:	31 1d       	adc	r19, r1
    1ca8:	41 1d       	adc	r20, r1
    1caa:	a0 95       	com	r26
    1cac:	81 f7       	brne	.-32     	; 0x1c8e <sqrt+0x4e>
    1cae:	b9 01       	movw	r22, r18
    1cb0:	84 2f       	mov	r24, r20
    1cb2:	91 58       	subi	r25, 0x81	; 129
    1cb4:	88 0f       	add	r24, r24
    1cb6:	96 95       	lsr	r25
    1cb8:	87 95       	ror	r24
    1cba:	08 95       	ret

00001cbc <square>:
    1cbc:	9b 01       	movw	r18, r22
    1cbe:	ac 01       	movw	r20, r24
    1cc0:	52 cf       	rjmp	.-348    	; 0x1b66 <__mulsf3>

00001cc2 <__fp_mpack>:
    1cc2:	9f 3f       	cpi	r25, 0xFF	; 255
    1cc4:	31 f0       	breq	.+12     	; 0x1cd2 <__fp_mpack_finite+0xc>

00001cc6 <__fp_mpack_finite>:
    1cc6:	91 50       	subi	r25, 0x01	; 1
    1cc8:	20 f4       	brcc	.+8      	; 0x1cd2 <__fp_mpack_finite+0xc>
    1cca:	87 95       	ror	r24
    1ccc:	77 95       	ror	r23
    1cce:	67 95       	ror	r22
    1cd0:	b7 95       	ror	r27
    1cd2:	88 0f       	add	r24, r24
    1cd4:	91 1d       	adc	r25, r1
    1cd6:	96 95       	lsr	r25
    1cd8:	87 95       	ror	r24
    1cda:	97 f9       	bld	r25, 7
    1cdc:	08 95       	ret

00001cde <__fp_norm2>:
    1cde:	91 50       	subi	r25, 0x01	; 1
    1ce0:	50 40       	sbci	r21, 0x00	; 0
    1ce2:	66 0f       	add	r22, r22
    1ce4:	77 1f       	adc	r23, r23
    1ce6:	88 1f       	adc	r24, r24
    1ce8:	d2 f7       	brpl	.-12     	; 0x1cde <__fp_norm2>
    1cea:	08 95       	ret

00001cec <__fp_powsodd>:
    1cec:	9f 93       	push	r25
    1cee:	8f 93       	push	r24
    1cf0:	7f 93       	push	r23
    1cf2:	6f 93       	push	r22
    1cf4:	ff 93       	push	r31
    1cf6:	ef 93       	push	r30
    1cf8:	9b 01       	movw	r18, r22
    1cfa:	ac 01       	movw	r20, r24
    1cfc:	34 df       	rcall	.-408    	; 0x1b66 <__mulsf3>
    1cfe:	ef 91       	pop	r30
    1d00:	ff 91       	pop	r31
    1d02:	84 de       	rcall	.-760    	; 0x1a0c <__fp_powser>
    1d04:	2f 91       	pop	r18
    1d06:	3f 91       	pop	r19
    1d08:	4f 91       	pop	r20
    1d0a:	5f 91       	pop	r21
    1d0c:	2c cf       	rjmp	.-424    	; 0x1b66 <__mulsf3>

00001d0e <__tablejump2__>:
    1d0e:	ee 0f       	add	r30, r30
    1d10:	ff 1f       	adc	r31, r31

00001d12 <__tablejump__>:
    1d12:	05 90       	lpm	r0, Z+
    1d14:	f4 91       	lpm	r31, Z
    1d16:	e0 2d       	mov	r30, r0
    1d18:	09 94       	ijmp

00001d1a <malloc>:
    1d1a:	cf 93       	push	r28
    1d1c:	df 93       	push	r29
    1d1e:	82 30       	cpi	r24, 0x02	; 2
    1d20:	91 05       	cpc	r25, r1
    1d22:	10 f4       	brcc	.+4      	; 0x1d28 <malloc+0xe>
    1d24:	82 e0       	ldi	r24, 0x02	; 2
    1d26:	90 e0       	ldi	r25, 0x00	; 0
    1d28:	e0 91 c4 00 	lds	r30, 0x00C4
    1d2c:	f0 91 c5 00 	lds	r31, 0x00C5
    1d30:	20 e0       	ldi	r18, 0x00	; 0
    1d32:	30 e0       	ldi	r19, 0x00	; 0
    1d34:	a0 e0       	ldi	r26, 0x00	; 0
    1d36:	b0 e0       	ldi	r27, 0x00	; 0
    1d38:	30 97       	sbiw	r30, 0x00	; 0
    1d3a:	39 f1       	breq	.+78     	; 0x1d8a <malloc+0x70>
    1d3c:	40 81       	ld	r20, Z
    1d3e:	51 81       	ldd	r21, Z+1	; 0x01
    1d40:	48 17       	cp	r20, r24
    1d42:	59 07       	cpc	r21, r25
    1d44:	b8 f0       	brcs	.+46     	; 0x1d74 <malloc+0x5a>
    1d46:	48 17       	cp	r20, r24
    1d48:	59 07       	cpc	r21, r25
    1d4a:	71 f4       	brne	.+28     	; 0x1d68 <malloc+0x4e>
    1d4c:	82 81       	ldd	r24, Z+2	; 0x02
    1d4e:	93 81       	ldd	r25, Z+3	; 0x03
    1d50:	10 97       	sbiw	r26, 0x00	; 0
    1d52:	29 f0       	breq	.+10     	; 0x1d5e <malloc+0x44>
    1d54:	13 96       	adiw	r26, 0x03	; 3
    1d56:	9c 93       	st	X, r25
    1d58:	8e 93       	st	-X, r24
    1d5a:	12 97       	sbiw	r26, 0x02	; 2
    1d5c:	2c c0       	rjmp	.+88     	; 0x1db6 <malloc+0x9c>
    1d5e:	90 93 c5 00 	sts	0x00C5, r25
    1d62:	80 93 c4 00 	sts	0x00C4, r24
    1d66:	27 c0       	rjmp	.+78     	; 0x1db6 <malloc+0x9c>
    1d68:	21 15       	cp	r18, r1
    1d6a:	31 05       	cpc	r19, r1
    1d6c:	31 f0       	breq	.+12     	; 0x1d7a <malloc+0x60>
    1d6e:	42 17       	cp	r20, r18
    1d70:	53 07       	cpc	r21, r19
    1d72:	18 f0       	brcs	.+6      	; 0x1d7a <malloc+0x60>
    1d74:	a9 01       	movw	r20, r18
    1d76:	db 01       	movw	r26, r22
    1d78:	01 c0       	rjmp	.+2      	; 0x1d7c <malloc+0x62>
    1d7a:	ef 01       	movw	r28, r30
    1d7c:	9a 01       	movw	r18, r20
    1d7e:	bd 01       	movw	r22, r26
    1d80:	df 01       	movw	r26, r30
    1d82:	02 80       	ldd	r0, Z+2	; 0x02
    1d84:	f3 81       	ldd	r31, Z+3	; 0x03
    1d86:	e0 2d       	mov	r30, r0
    1d88:	d7 cf       	rjmp	.-82     	; 0x1d38 <malloc+0x1e>
    1d8a:	21 15       	cp	r18, r1
    1d8c:	31 05       	cpc	r19, r1
    1d8e:	f9 f0       	breq	.+62     	; 0x1dce <malloc+0xb4>
    1d90:	28 1b       	sub	r18, r24
    1d92:	39 0b       	sbc	r19, r25
    1d94:	24 30       	cpi	r18, 0x04	; 4
    1d96:	31 05       	cpc	r19, r1
    1d98:	80 f4       	brcc	.+32     	; 0x1dba <malloc+0xa0>
    1d9a:	8a 81       	ldd	r24, Y+2	; 0x02
    1d9c:	9b 81       	ldd	r25, Y+3	; 0x03
    1d9e:	61 15       	cp	r22, r1
    1da0:	71 05       	cpc	r23, r1
    1da2:	21 f0       	breq	.+8      	; 0x1dac <malloc+0x92>
    1da4:	fb 01       	movw	r30, r22
    1da6:	93 83       	std	Z+3, r25	; 0x03
    1da8:	82 83       	std	Z+2, r24	; 0x02
    1daa:	04 c0       	rjmp	.+8      	; 0x1db4 <malloc+0x9a>
    1dac:	90 93 c5 00 	sts	0x00C5, r25
    1db0:	80 93 c4 00 	sts	0x00C4, r24
    1db4:	fe 01       	movw	r30, r28
    1db6:	32 96       	adiw	r30, 0x02	; 2
    1db8:	44 c0       	rjmp	.+136    	; 0x1e42 <malloc+0x128>
    1dba:	fe 01       	movw	r30, r28
    1dbc:	e2 0f       	add	r30, r18
    1dbe:	f3 1f       	adc	r31, r19
    1dc0:	81 93       	st	Z+, r24
    1dc2:	91 93       	st	Z+, r25
    1dc4:	22 50       	subi	r18, 0x02	; 2
    1dc6:	31 09       	sbc	r19, r1
    1dc8:	39 83       	std	Y+1, r19	; 0x01
    1dca:	28 83       	st	Y, r18
    1dcc:	3a c0       	rjmp	.+116    	; 0x1e42 <malloc+0x128>
    1dce:	20 91 c2 00 	lds	r18, 0x00C2
    1dd2:	30 91 c3 00 	lds	r19, 0x00C3
    1dd6:	23 2b       	or	r18, r19
    1dd8:	41 f4       	brne	.+16     	; 0x1dea <malloc+0xd0>
    1dda:	20 91 62 00 	lds	r18, 0x0062
    1dde:	30 91 63 00 	lds	r19, 0x0063
    1de2:	30 93 c3 00 	sts	0x00C3, r19
    1de6:	20 93 c2 00 	sts	0x00C2, r18
    1dea:	20 91 60 00 	lds	r18, 0x0060
    1dee:	30 91 61 00 	lds	r19, 0x0061
    1df2:	21 15       	cp	r18, r1
    1df4:	31 05       	cpc	r19, r1
    1df6:	41 f4       	brne	.+16     	; 0x1e08 <malloc+0xee>
    1df8:	2d b7       	in	r18, 0x3d	; 61
    1dfa:	3e b7       	in	r19, 0x3e	; 62
    1dfc:	40 91 64 00 	lds	r20, 0x0064
    1e00:	50 91 65 00 	lds	r21, 0x0065
    1e04:	24 1b       	sub	r18, r20
    1e06:	35 0b       	sbc	r19, r21
    1e08:	e0 91 c2 00 	lds	r30, 0x00C2
    1e0c:	f0 91 c3 00 	lds	r31, 0x00C3
    1e10:	e2 17       	cp	r30, r18
    1e12:	f3 07       	cpc	r31, r19
    1e14:	a0 f4       	brcc	.+40     	; 0x1e3e <malloc+0x124>
    1e16:	2e 1b       	sub	r18, r30
    1e18:	3f 0b       	sbc	r19, r31
    1e1a:	28 17       	cp	r18, r24
    1e1c:	39 07       	cpc	r19, r25
    1e1e:	78 f0       	brcs	.+30     	; 0x1e3e <malloc+0x124>
    1e20:	ac 01       	movw	r20, r24
    1e22:	4e 5f       	subi	r20, 0xFE	; 254
    1e24:	5f 4f       	sbci	r21, 0xFF	; 255
    1e26:	24 17       	cp	r18, r20
    1e28:	35 07       	cpc	r19, r21
    1e2a:	48 f0       	brcs	.+18     	; 0x1e3e <malloc+0x124>
    1e2c:	4e 0f       	add	r20, r30
    1e2e:	5f 1f       	adc	r21, r31
    1e30:	50 93 c3 00 	sts	0x00C3, r21
    1e34:	40 93 c2 00 	sts	0x00C2, r20
    1e38:	81 93       	st	Z+, r24
    1e3a:	91 93       	st	Z+, r25
    1e3c:	02 c0       	rjmp	.+4      	; 0x1e42 <malloc+0x128>
    1e3e:	e0 e0       	ldi	r30, 0x00	; 0
    1e40:	f0 e0       	ldi	r31, 0x00	; 0
    1e42:	cf 01       	movw	r24, r30
    1e44:	df 91       	pop	r29
    1e46:	cf 91       	pop	r28
    1e48:	08 95       	ret

00001e4a <free>:
    1e4a:	cf 93       	push	r28
    1e4c:	df 93       	push	r29
    1e4e:	00 97       	sbiw	r24, 0x00	; 0
    1e50:	09 f4       	brne	.+2      	; 0x1e54 <free+0xa>
    1e52:	87 c0       	rjmp	.+270    	; 0x1f62 <free+0x118>
    1e54:	fc 01       	movw	r30, r24
    1e56:	32 97       	sbiw	r30, 0x02	; 2
    1e58:	13 82       	std	Z+3, r1	; 0x03
    1e5a:	12 82       	std	Z+2, r1	; 0x02
    1e5c:	c0 91 c4 00 	lds	r28, 0x00C4
    1e60:	d0 91 c5 00 	lds	r29, 0x00C5
    1e64:	20 97       	sbiw	r28, 0x00	; 0
    1e66:	81 f4       	brne	.+32     	; 0x1e88 <free+0x3e>
    1e68:	20 81       	ld	r18, Z
    1e6a:	31 81       	ldd	r19, Z+1	; 0x01
    1e6c:	28 0f       	add	r18, r24
    1e6e:	39 1f       	adc	r19, r25
    1e70:	80 91 c2 00 	lds	r24, 0x00C2
    1e74:	90 91 c3 00 	lds	r25, 0x00C3
    1e78:	82 17       	cp	r24, r18
    1e7a:	93 07       	cpc	r25, r19
    1e7c:	79 f5       	brne	.+94     	; 0x1edc <free+0x92>
    1e7e:	f0 93 c3 00 	sts	0x00C3, r31
    1e82:	e0 93 c2 00 	sts	0x00C2, r30
    1e86:	6d c0       	rjmp	.+218    	; 0x1f62 <free+0x118>
    1e88:	de 01       	movw	r26, r28
    1e8a:	20 e0       	ldi	r18, 0x00	; 0
    1e8c:	30 e0       	ldi	r19, 0x00	; 0
    1e8e:	ae 17       	cp	r26, r30
    1e90:	bf 07       	cpc	r27, r31
    1e92:	50 f4       	brcc	.+20     	; 0x1ea8 <free+0x5e>
    1e94:	12 96       	adiw	r26, 0x02	; 2
    1e96:	4d 91       	ld	r20, X+
    1e98:	5c 91       	ld	r21, X
    1e9a:	13 97       	sbiw	r26, 0x03	; 3
    1e9c:	9d 01       	movw	r18, r26
    1e9e:	41 15       	cp	r20, r1
    1ea0:	51 05       	cpc	r21, r1
    1ea2:	09 f1       	breq	.+66     	; 0x1ee6 <free+0x9c>
    1ea4:	da 01       	movw	r26, r20
    1ea6:	f3 cf       	rjmp	.-26     	; 0x1e8e <free+0x44>
    1ea8:	b3 83       	std	Z+3, r27	; 0x03
    1eaa:	a2 83       	std	Z+2, r26	; 0x02
    1eac:	40 81       	ld	r20, Z
    1eae:	51 81       	ldd	r21, Z+1	; 0x01
    1eb0:	84 0f       	add	r24, r20
    1eb2:	95 1f       	adc	r25, r21
    1eb4:	8a 17       	cp	r24, r26
    1eb6:	9b 07       	cpc	r25, r27
    1eb8:	71 f4       	brne	.+28     	; 0x1ed6 <free+0x8c>
    1eba:	8d 91       	ld	r24, X+
    1ebc:	9c 91       	ld	r25, X
    1ebe:	11 97       	sbiw	r26, 0x01	; 1
    1ec0:	84 0f       	add	r24, r20
    1ec2:	95 1f       	adc	r25, r21
    1ec4:	02 96       	adiw	r24, 0x02	; 2
    1ec6:	91 83       	std	Z+1, r25	; 0x01
    1ec8:	80 83       	st	Z, r24
    1eca:	12 96       	adiw	r26, 0x02	; 2
    1ecc:	8d 91       	ld	r24, X+
    1ece:	9c 91       	ld	r25, X
    1ed0:	13 97       	sbiw	r26, 0x03	; 3
    1ed2:	93 83       	std	Z+3, r25	; 0x03
    1ed4:	82 83       	std	Z+2, r24	; 0x02
    1ed6:	21 15       	cp	r18, r1
    1ed8:	31 05       	cpc	r19, r1
    1eda:	29 f4       	brne	.+10     	; 0x1ee6 <free+0x9c>
    1edc:	f0 93 c5 00 	sts	0x00C5, r31
    1ee0:	e0 93 c4 00 	sts	0x00C4, r30
    1ee4:	3e c0       	rjmp	.+124    	; 0x1f62 <free+0x118>
    1ee6:	d9 01       	movw	r26, r18
    1ee8:	13 96       	adiw	r26, 0x03	; 3
    1eea:	fc 93       	st	X, r31
    1eec:	ee 93       	st	-X, r30
    1eee:	12 97       	sbiw	r26, 0x02	; 2
    1ef0:	4d 91       	ld	r20, X+
    1ef2:	5d 91       	ld	r21, X+
    1ef4:	a4 0f       	add	r26, r20
    1ef6:	b5 1f       	adc	r27, r21
    1ef8:	ea 17       	cp	r30, r26
    1efa:	fb 07       	cpc	r31, r27
    1efc:	79 f4       	brne	.+30     	; 0x1f1c <free+0xd2>
    1efe:	80 81       	ld	r24, Z
    1f00:	91 81       	ldd	r25, Z+1	; 0x01
    1f02:	84 0f       	add	r24, r20
    1f04:	95 1f       	adc	r25, r21
    1f06:	02 96       	adiw	r24, 0x02	; 2
    1f08:	d9 01       	movw	r26, r18
    1f0a:	11 96       	adiw	r26, 0x01	; 1
    1f0c:	9c 93       	st	X, r25
    1f0e:	8e 93       	st	-X, r24
    1f10:	82 81       	ldd	r24, Z+2	; 0x02
    1f12:	93 81       	ldd	r25, Z+3	; 0x03
    1f14:	13 96       	adiw	r26, 0x03	; 3
    1f16:	9c 93       	st	X, r25
    1f18:	8e 93       	st	-X, r24
    1f1a:	12 97       	sbiw	r26, 0x02	; 2
    1f1c:	e0 e0       	ldi	r30, 0x00	; 0
    1f1e:	f0 e0       	ldi	r31, 0x00	; 0
    1f20:	8a 81       	ldd	r24, Y+2	; 0x02
    1f22:	9b 81       	ldd	r25, Y+3	; 0x03
    1f24:	00 97       	sbiw	r24, 0x00	; 0
    1f26:	19 f0       	breq	.+6      	; 0x1f2e <free+0xe4>
    1f28:	fe 01       	movw	r30, r28
    1f2a:	ec 01       	movw	r28, r24
    1f2c:	f9 cf       	rjmp	.-14     	; 0x1f20 <free+0xd6>
    1f2e:	ce 01       	movw	r24, r28
    1f30:	02 96       	adiw	r24, 0x02	; 2
    1f32:	28 81       	ld	r18, Y
    1f34:	39 81       	ldd	r19, Y+1	; 0x01
    1f36:	82 0f       	add	r24, r18
    1f38:	93 1f       	adc	r25, r19
    1f3a:	20 91 c2 00 	lds	r18, 0x00C2
    1f3e:	30 91 c3 00 	lds	r19, 0x00C3
    1f42:	28 17       	cp	r18, r24
    1f44:	39 07       	cpc	r19, r25
    1f46:	69 f4       	brne	.+26     	; 0x1f62 <free+0x118>
    1f48:	30 97       	sbiw	r30, 0x00	; 0
    1f4a:	29 f4       	brne	.+10     	; 0x1f56 <free+0x10c>
    1f4c:	10 92 c5 00 	sts	0x00C5, r1
    1f50:	10 92 c4 00 	sts	0x00C4, r1
    1f54:	02 c0       	rjmp	.+4      	; 0x1f5a <free+0x110>
    1f56:	13 82       	std	Z+3, r1	; 0x03
    1f58:	12 82       	std	Z+2, r1	; 0x02
    1f5a:	d0 93 c3 00 	sts	0x00C3, r29
    1f5e:	c0 93 c2 00 	sts	0x00C2, r28
    1f62:	df 91       	pop	r29
    1f64:	cf 91       	pop	r28
    1f66:	08 95       	ret

00001f68 <do_rand>:
    1f68:	8f 92       	push	r8
    1f6a:	9f 92       	push	r9
    1f6c:	af 92       	push	r10
    1f6e:	bf 92       	push	r11
    1f70:	cf 92       	push	r12
    1f72:	df 92       	push	r13
    1f74:	ef 92       	push	r14
    1f76:	ff 92       	push	r15
    1f78:	cf 93       	push	r28
    1f7a:	df 93       	push	r29
    1f7c:	ec 01       	movw	r28, r24
    1f7e:	68 81       	ld	r22, Y
    1f80:	79 81       	ldd	r23, Y+1	; 0x01
    1f82:	8a 81       	ldd	r24, Y+2	; 0x02
    1f84:	9b 81       	ldd	r25, Y+3	; 0x03
    1f86:	61 15       	cp	r22, r1
    1f88:	71 05       	cpc	r23, r1
    1f8a:	81 05       	cpc	r24, r1
    1f8c:	91 05       	cpc	r25, r1
    1f8e:	21 f4       	brne	.+8      	; 0x1f98 <do_rand+0x30>
    1f90:	64 e2       	ldi	r22, 0x24	; 36
    1f92:	79 ed       	ldi	r23, 0xD9	; 217
    1f94:	8b e5       	ldi	r24, 0x5B	; 91
    1f96:	97 e0       	ldi	r25, 0x07	; 7
    1f98:	2d e1       	ldi	r18, 0x1D	; 29
    1f9a:	33 ef       	ldi	r19, 0xF3	; 243
    1f9c:	41 e0       	ldi	r20, 0x01	; 1
    1f9e:	50 e0       	ldi	r21, 0x00	; 0
    1fa0:	0e 94 1d 14 	call	0x283a	; 0x283a <__divmodsi4>
    1fa4:	49 01       	movw	r8, r18
    1fa6:	5a 01       	movw	r10, r20
    1fa8:	9b 01       	movw	r18, r22
    1faa:	ac 01       	movw	r20, r24
    1fac:	a7 ea       	ldi	r26, 0xA7	; 167
    1fae:	b1 e4       	ldi	r27, 0x41	; 65
    1fb0:	0e 94 3c 14 	call	0x2878	; 0x2878 <__muluhisi3>
    1fb4:	6b 01       	movw	r12, r22
    1fb6:	7c 01       	movw	r14, r24
    1fb8:	ac ee       	ldi	r26, 0xEC	; 236
    1fba:	b4 ef       	ldi	r27, 0xF4	; 244
    1fbc:	a5 01       	movw	r20, r10
    1fbe:	94 01       	movw	r18, r8
    1fc0:	0e 94 4a 14 	call	0x2894	; 0x2894 <__mulohisi3>
    1fc4:	c6 0e       	add	r12, r22
    1fc6:	d7 1e       	adc	r13, r23
    1fc8:	e8 1e       	adc	r14, r24
    1fca:	f9 1e       	adc	r15, r25
    1fcc:	f7 fe       	sbrs	r15, 7
    1fce:	06 c0       	rjmp	.+12     	; 0x1fdc <do_rand+0x74>
    1fd0:	81 e0       	ldi	r24, 0x01	; 1
    1fd2:	c8 1a       	sub	r12, r24
    1fd4:	d1 08       	sbc	r13, r1
    1fd6:	e1 08       	sbc	r14, r1
    1fd8:	80 e8       	ldi	r24, 0x80	; 128
    1fda:	f8 0a       	sbc	r15, r24
    1fdc:	c8 82       	st	Y, r12
    1fde:	d9 82       	std	Y+1, r13	; 0x01
    1fe0:	ea 82       	std	Y+2, r14	; 0x02
    1fe2:	fb 82       	std	Y+3, r15	; 0x03
    1fe4:	c6 01       	movw	r24, r12
    1fe6:	9f 77       	andi	r25, 0x7F	; 127
    1fe8:	df 91       	pop	r29
    1fea:	cf 91       	pop	r28
    1fec:	ff 90       	pop	r15
    1fee:	ef 90       	pop	r14
    1ff0:	df 90       	pop	r13
    1ff2:	cf 90       	pop	r12
    1ff4:	bf 90       	pop	r11
    1ff6:	af 90       	pop	r10
    1ff8:	9f 90       	pop	r9
    1ffa:	8f 90       	pop	r8
    1ffc:	08 95       	ret

00001ffe <rand_r>:
    1ffe:	0e 94 b4 0f 	call	0x1f68	; 0x1f68 <do_rand>
    2002:	08 95       	ret

00002004 <rand>:
    2004:	86 e6       	ldi	r24, 0x66	; 102
    2006:	90 e0       	ldi	r25, 0x00	; 0
    2008:	0e 94 b4 0f 	call	0x1f68	; 0x1f68 <do_rand>
    200c:	08 95       	ret

0000200e <srand>:
    200e:	a0 e0       	ldi	r26, 0x00	; 0
    2010:	b0 e0       	ldi	r27, 0x00	; 0
    2012:	80 93 66 00 	sts	0x0066, r24
    2016:	90 93 67 00 	sts	0x0067, r25
    201a:	a0 93 68 00 	sts	0x0068, r26
    201e:	b0 93 69 00 	sts	0x0069, r27
    2022:	08 95       	ret

00002024 <strtol>:
    2024:	2f 92       	push	r2
    2026:	3f 92       	push	r3
    2028:	5f 92       	push	r5
    202a:	6f 92       	push	r6
    202c:	7f 92       	push	r7
    202e:	8f 92       	push	r8
    2030:	9f 92       	push	r9
    2032:	af 92       	push	r10
    2034:	bf 92       	push	r11
    2036:	cf 92       	push	r12
    2038:	df 92       	push	r13
    203a:	ef 92       	push	r14
    203c:	ff 92       	push	r15
    203e:	0f 93       	push	r16
    2040:	1f 93       	push	r17
    2042:	cf 93       	push	r28
    2044:	df 93       	push	r29
    2046:	8b 01       	movw	r16, r22
    2048:	ea 01       	movw	r28, r20
    204a:	61 15       	cp	r22, r1
    204c:	71 05       	cpc	r23, r1
    204e:	21 f0       	breq	.+8      	; 0x2058 <strtol+0x34>
    2050:	db 01       	movw	r26, r22
    2052:	8c 93       	st	X, r24
    2054:	11 96       	adiw	r26, 0x01	; 1
    2056:	9c 93       	st	X, r25
    2058:	20 97       	sbiw	r28, 0x00	; 0
    205a:	39 f0       	breq	.+14     	; 0x206a <strtol+0x46>
    205c:	9e 01       	movw	r18, r28
    205e:	22 50       	subi	r18, 0x02	; 2
    2060:	31 09       	sbc	r19, r1
    2062:	23 32       	cpi	r18, 0x23	; 35
    2064:	31 05       	cpc	r19, r1
    2066:	08 f0       	brcs	.+2      	; 0x206a <strtol+0x46>
    2068:	fb c0       	rjmp	.+502    	; 0x2260 <strtol+0x23c>
    206a:	7c 01       	movw	r14, r24
    206c:	67 01       	movw	r12, r14
    206e:	bf ef       	ldi	r27, 0xFF	; 255
    2070:	cb 1a       	sub	r12, r27
    2072:	db 0a       	sbc	r13, r27
    2074:	56 01       	movw	r10, r12
    2076:	f7 01       	movw	r30, r14
    2078:	60 80       	ld	r6, Z
    207a:	86 2d       	mov	r24, r6
    207c:	90 e0       	ldi	r25, 0x00	; 0
    207e:	0e 94 46 11 	call	0x228c	; 0x228c <isspace>
    2082:	89 2b       	or	r24, r25
    2084:	11 f0       	breq	.+4      	; 0x208a <strtol+0x66>
    2086:	76 01       	movw	r14, r12
    2088:	f1 cf       	rjmp	.-30     	; 0x206c <strtol+0x48>
    208a:	fd e2       	ldi	r31, 0x2D	; 45
    208c:	6f 12       	cpse	r6, r31
    208e:	0a c0       	rjmp	.+20     	; 0x20a4 <strtol+0x80>
    2090:	57 01       	movw	r10, r14
    2092:	82 e0       	ldi	r24, 0x02	; 2
    2094:	a8 0e       	add	r10, r24
    2096:	b1 1c       	adc	r11, r1
    2098:	d7 01       	movw	r26, r14
    209a:	11 96       	adiw	r26, 0x01	; 1
    209c:	6c 90       	ld	r6, X
    209e:	77 24       	eor	r7, r7
    20a0:	73 94       	inc	r7
    20a2:	0b c0       	rjmp	.+22     	; 0x20ba <strtol+0x96>
    20a4:	bb e2       	ldi	r27, 0x2B	; 43
    20a6:	6b 12       	cpse	r6, r27
    20a8:	07 c0       	rjmp	.+14     	; 0x20b8 <strtol+0x94>
    20aa:	57 01       	movw	r10, r14
    20ac:	e2 e0       	ldi	r30, 0x02	; 2
    20ae:	ae 0e       	add	r10, r30
    20b0:	b1 1c       	adc	r11, r1
    20b2:	d7 01       	movw	r26, r14
    20b4:	11 96       	adiw	r26, 0x01	; 1
    20b6:	6c 90       	ld	r6, X
    20b8:	71 2c       	mov	r7, r1
    20ba:	ce 01       	movw	r24, r28
    20bc:	8f 7e       	andi	r24, 0xEF	; 239
    20be:	89 2b       	or	r24, r25
    20c0:	89 f4       	brne	.+34     	; 0x20e4 <strtol+0xc0>
    20c2:	b0 e3       	ldi	r27, 0x30	; 48
    20c4:	6b 12       	cpse	r6, r27
    20c6:	22 c0       	rjmp	.+68     	; 0x210c <strtol+0xe8>
    20c8:	f5 01       	movw	r30, r10
    20ca:	80 81       	ld	r24, Z
    20cc:	8f 7d       	andi	r24, 0xDF	; 223
    20ce:	88 35       	cpi	r24, 0x58	; 88
    20d0:	41 f5       	brne	.+80     	; 0x2122 <strtol+0xfe>
    20d2:	61 80       	ldd	r6, Z+1	; 0x01
    20d4:	f2 e0       	ldi	r31, 0x02	; 2
    20d6:	af 0e       	add	r10, r31
    20d8:	b1 1c       	adc	r11, r1
    20da:	87 2d       	mov	r24, r7
    20dc:	82 60       	ori	r24, 0x02	; 2
    20de:	78 2e       	mov	r7, r24
    20e0:	c0 e1       	ldi	r28, 0x10	; 16
    20e2:	d0 e0       	ldi	r29, 0x00	; 0
    20e4:	c8 30       	cpi	r28, 0x08	; 8
    20e6:	d1 05       	cpc	r29, r1
    20e8:	f1 f0       	breq	.+60     	; 0x2126 <strtol+0x102>
    20ea:	4c f4       	brge	.+18     	; 0x20fe <strtol+0xda>
    20ec:	c2 30       	cpi	r28, 0x02	; 2
    20ee:	d1 05       	cpc	r29, r1
    20f0:	11 f5       	brne	.+68     	; 0x2136 <strtol+0x112>
    20f2:	c1 2c       	mov	r12, r1
    20f4:	d1 2c       	mov	r13, r1
    20f6:	e1 2c       	mov	r14, r1
    20f8:	b0 e4       	ldi	r27, 0x40	; 64
    20fa:	fb 2e       	mov	r15, r27
    20fc:	2f c0       	rjmp	.+94     	; 0x215c <strtol+0x138>
    20fe:	ca 30       	cpi	r28, 0x0A	; 10
    2100:	d1 05       	cpc	r29, r1
    2102:	31 f0       	breq	.+12     	; 0x2110 <strtol+0xec>
    2104:	c0 31       	cpi	r28, 0x10	; 16
    2106:	d1 05       	cpc	r29, r1
    2108:	21 f1       	breq	.+72     	; 0x2152 <strtol+0x12e>
    210a:	15 c0       	rjmp	.+42     	; 0x2136 <strtol+0x112>
    210c:	20 97       	sbiw	r28, 0x00	; 0
    210e:	51 f7       	brne	.-44     	; 0x20e4 <strtol+0xc0>
    2110:	ca e0       	ldi	r28, 0x0A	; 10
    2112:	d0 e0       	ldi	r29, 0x00	; 0
    2114:	ac ec       	ldi	r26, 0xCC	; 204
    2116:	ca 2e       	mov	r12, r26
    2118:	dc 2c       	mov	r13, r12
    211a:	ec 2c       	mov	r14, r12
    211c:	ac e0       	ldi	r26, 0x0C	; 12
    211e:	fa 2e       	mov	r15, r26
    2120:	1d c0       	rjmp	.+58     	; 0x215c <strtol+0x138>
    2122:	20 97       	sbiw	r28, 0x00	; 0
    2124:	f9 f6       	brne	.-66     	; 0x20e4 <strtol+0xc0>
    2126:	c8 e0       	ldi	r28, 0x08	; 8
    2128:	d0 e0       	ldi	r29, 0x00	; 0
    212a:	c1 2c       	mov	r12, r1
    212c:	d1 2c       	mov	r13, r1
    212e:	e1 2c       	mov	r14, r1
    2130:	f0 e1       	ldi	r31, 0x10	; 16
    2132:	ff 2e       	mov	r15, r31
    2134:	13 c0       	rjmp	.+38     	; 0x215c <strtol+0x138>
    2136:	60 e0       	ldi	r22, 0x00	; 0
    2138:	70 e0       	ldi	r23, 0x00	; 0
    213a:	80 e0       	ldi	r24, 0x00	; 0
    213c:	90 e8       	ldi	r25, 0x80	; 128
    213e:	9e 01       	movw	r18, r28
    2140:	44 27       	eor	r20, r20
    2142:	37 fd       	sbrc	r19, 7
    2144:	40 95       	com	r20
    2146:	54 2f       	mov	r21, r20
    2148:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <__udivmodsi4>
    214c:	69 01       	movw	r12, r18
    214e:	7a 01       	movw	r14, r20
    2150:	05 c0       	rjmp	.+10     	; 0x215c <strtol+0x138>
    2152:	c1 2c       	mov	r12, r1
    2154:	d1 2c       	mov	r13, r1
    2156:	e1 2c       	mov	r14, r1
    2158:	e8 e0       	ldi	r30, 0x08	; 8
    215a:	fe 2e       	mov	r15, r30
    215c:	f5 01       	movw	r30, r10
    215e:	60 e0       	ldi	r22, 0x00	; 0
    2160:	20 e0       	ldi	r18, 0x00	; 0
    2162:	30 e0       	ldi	r19, 0x00	; 0
    2164:	a9 01       	movw	r20, r18
    2166:	4e 01       	movw	r8, r28
    2168:	aa 24       	eor	r10, r10
    216a:	97 fc       	sbrc	r9, 7
    216c:	a0 94       	com	r10
    216e:	ba 2c       	mov	r11, r10
    2170:	1f 01       	movw	r2, r30
    2172:	70 ed       	ldi	r23, 0xD0	; 208
    2174:	57 2e       	mov	r5, r23
    2176:	56 0c       	add	r5, r6
    2178:	a9 e0       	ldi	r26, 0x09	; 9
    217a:	a5 15       	cp	r26, r5
    217c:	70 f4       	brcc	.+28     	; 0x219a <strtol+0x176>
    217e:	8f eb       	ldi	r24, 0xBF	; 191
    2180:	86 0d       	add	r24, r6
    2182:	8a 31       	cpi	r24, 0x1A	; 26
    2184:	18 f4       	brcc	.+6      	; 0x218c <strtol+0x168>
    2186:	99 ec       	ldi	r25, 0xC9	; 201
    2188:	59 2e       	mov	r5, r25
    218a:	06 c0       	rjmp	.+12     	; 0x2198 <strtol+0x174>
    218c:	8f e9       	ldi	r24, 0x9F	; 159
    218e:	86 0d       	add	r24, r6
    2190:	8a 31       	cpi	r24, 0x1A	; 26
    2192:	30 f5       	brcc	.+76     	; 0x21e0 <strtol+0x1bc>
    2194:	89 ea       	ldi	r24, 0xA9	; 169
    2196:	58 2e       	mov	r5, r24
    2198:	56 0c       	add	r5, r6
    219a:	85 2d       	mov	r24, r5
    219c:	90 e0       	ldi	r25, 0x00	; 0
    219e:	8c 17       	cp	r24, r28
    21a0:	9d 07       	cpc	r25, r29
    21a2:	f4 f4       	brge	.+60     	; 0x21e0 <strtol+0x1bc>
    21a4:	67 fd       	sbrc	r22, 7
    21a6:	18 c0       	rjmp	.+48     	; 0x21d8 <strtol+0x1b4>
    21a8:	c2 16       	cp	r12, r18
    21aa:	d3 06       	cpc	r13, r19
    21ac:	e4 06       	cpc	r14, r20
    21ae:	f5 06       	cpc	r15, r21
    21b0:	80 f0       	brcs	.+32     	; 0x21d2 <strtol+0x1ae>
    21b2:	c5 01       	movw	r24, r10
    21b4:	b4 01       	movw	r22, r8
    21b6:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__mulsi3>
    21ba:	9b 01       	movw	r18, r22
    21bc:	ac 01       	movw	r20, r24
    21be:	25 0d       	add	r18, r5
    21c0:	31 1d       	adc	r19, r1
    21c2:	41 1d       	adc	r20, r1
    21c4:	51 1d       	adc	r21, r1
    21c6:	21 30       	cpi	r18, 0x01	; 1
    21c8:	31 05       	cpc	r19, r1
    21ca:	41 05       	cpc	r20, r1
    21cc:	b0 e8       	ldi	r27, 0x80	; 128
    21ce:	5b 07       	cpc	r21, r27
    21d0:	10 f0       	brcs	.+4      	; 0x21d6 <strtol+0x1b2>
    21d2:	6f ef       	ldi	r22, 0xFF	; 255
    21d4:	01 c0       	rjmp	.+2      	; 0x21d8 <strtol+0x1b4>
    21d6:	61 e0       	ldi	r22, 0x01	; 1
    21d8:	31 96       	adiw	r30, 0x01	; 1
    21da:	d1 01       	movw	r26, r2
    21dc:	6c 90       	ld	r6, X
    21de:	c8 cf       	rjmp	.-112    	; 0x2170 <strtol+0x14c>
    21e0:	87 2d       	mov	r24, r7
    21e2:	81 70       	andi	r24, 0x01	; 1
    21e4:	01 15       	cp	r16, r1
    21e6:	11 05       	cpc	r17, r1
    21e8:	71 f0       	breq	.+28     	; 0x2206 <strtol+0x1e2>
    21ea:	66 23       	and	r22, r22
    21ec:	29 f0       	breq	.+10     	; 0x21f8 <strtol+0x1d4>
    21ee:	31 97       	sbiw	r30, 0x01	; 1
    21f0:	d8 01       	movw	r26, r16
    21f2:	ed 93       	st	X+, r30
    21f4:	fc 93       	st	X, r31
    21f6:	07 c0       	rjmp	.+14     	; 0x2206 <strtol+0x1e2>
    21f8:	71 fe       	sbrs	r7, 1
    21fa:	19 c0       	rjmp	.+50     	; 0x222e <strtol+0x20a>
    21fc:	32 97       	sbiw	r30, 0x02	; 2
    21fe:	d8 01       	movw	r26, r16
    2200:	ed 93       	st	X+, r30
    2202:	fc 93       	st	X, r31
    2204:	14 c0       	rjmp	.+40     	; 0x222e <strtol+0x20a>
    2206:	67 ff       	sbrs	r22, 7
    2208:	12 c0       	rjmp	.+36     	; 0x222e <strtol+0x20a>
    220a:	88 23       	and	r24, r24
    220c:	29 f0       	breq	.+10     	; 0x2218 <strtol+0x1f4>
    220e:	20 e0       	ldi	r18, 0x00	; 0
    2210:	30 e0       	ldi	r19, 0x00	; 0
    2212:	40 e0       	ldi	r20, 0x00	; 0
    2214:	50 e8       	ldi	r21, 0x80	; 128
    2216:	04 c0       	rjmp	.+8      	; 0x2220 <strtol+0x1fc>
    2218:	2f ef       	ldi	r18, 0xFF	; 255
    221a:	3f ef       	ldi	r19, 0xFF	; 255
    221c:	4f ef       	ldi	r20, 0xFF	; 255
    221e:	5f e7       	ldi	r21, 0x7F	; 127
    2220:	82 e2       	ldi	r24, 0x22	; 34
    2222:	90 e0       	ldi	r25, 0x00	; 0
    2224:	90 93 c7 00 	sts	0x00C7, r25
    2228:	80 93 c6 00 	sts	0x00C6, r24
    222c:	16 c0       	rjmp	.+44     	; 0x225a <strtol+0x236>
    222e:	88 23       	and	r24, r24
    2230:	41 f0       	breq	.+16     	; 0x2242 <strtol+0x21e>
    2232:	50 95       	com	r21
    2234:	40 95       	com	r20
    2236:	30 95       	com	r19
    2238:	21 95       	neg	r18
    223a:	3f 4f       	sbci	r19, 0xFF	; 255
    223c:	4f 4f       	sbci	r20, 0xFF	; 255
    223e:	5f 4f       	sbci	r21, 0xFF	; 255
    2240:	0c c0       	rjmp	.+24     	; 0x225a <strtol+0x236>
    2242:	57 ff       	sbrs	r21, 7
    2244:	0a c0       	rjmp	.+20     	; 0x225a <strtol+0x236>
    2246:	82 e2       	ldi	r24, 0x22	; 34
    2248:	90 e0       	ldi	r25, 0x00	; 0
    224a:	90 93 c7 00 	sts	0x00C7, r25
    224e:	80 93 c6 00 	sts	0x00C6, r24
    2252:	2f ef       	ldi	r18, 0xFF	; 255
    2254:	3f ef       	ldi	r19, 0xFF	; 255
    2256:	4f ef       	ldi	r20, 0xFF	; 255
    2258:	5f e7       	ldi	r21, 0x7F	; 127
    225a:	b9 01       	movw	r22, r18
    225c:	ca 01       	movw	r24, r20
    225e:	04 c0       	rjmp	.+8      	; 0x2268 <strtol+0x244>
    2260:	60 e0       	ldi	r22, 0x00	; 0
    2262:	70 e0       	ldi	r23, 0x00	; 0
    2264:	80 e0       	ldi	r24, 0x00	; 0
    2266:	90 e0       	ldi	r25, 0x00	; 0
    2268:	df 91       	pop	r29
    226a:	cf 91       	pop	r28
    226c:	1f 91       	pop	r17
    226e:	0f 91       	pop	r16
    2270:	ff 90       	pop	r15
    2272:	ef 90       	pop	r14
    2274:	df 90       	pop	r13
    2276:	cf 90       	pop	r12
    2278:	bf 90       	pop	r11
    227a:	af 90       	pop	r10
    227c:	9f 90       	pop	r9
    227e:	8f 90       	pop	r8
    2280:	7f 90       	pop	r7
    2282:	6f 90       	pop	r6
    2284:	5f 90       	pop	r5
    2286:	3f 90       	pop	r3
    2288:	2f 90       	pop	r2
    228a:	08 95       	ret

0000228c <isspace>:
    228c:	91 11       	cpse	r25, r1
    228e:	fa c1       	rjmp	.+1012   	; 0x2684 <__ctype_isfalse>
    2290:	80 32       	cpi	r24, 0x20	; 32
    2292:	19 f0       	breq	.+6      	; 0x229a <isspace+0xe>
    2294:	89 50       	subi	r24, 0x09	; 9
    2296:	85 50       	subi	r24, 0x05	; 5
    2298:	d0 f7       	brcc	.-12     	; 0x228e <isspace+0x2>
    229a:	08 95       	ret

0000229c <sprintf>:
    229c:	ae e0       	ldi	r26, 0x0E	; 14
    229e:	b0 e0       	ldi	r27, 0x00	; 0
    22a0:	e4 e5       	ldi	r30, 0x54	; 84
    22a2:	f1 e1       	ldi	r31, 0x11	; 17
    22a4:	0c 94 5d 14 	jmp	0x28ba	; 0x28ba <__prologue_saves__+0x1c>
    22a8:	0d 89       	ldd	r16, Y+21	; 0x15
    22aa:	1e 89       	ldd	r17, Y+22	; 0x16
    22ac:	86 e0       	ldi	r24, 0x06	; 6
    22ae:	8c 83       	std	Y+4, r24	; 0x04
    22b0:	1a 83       	std	Y+2, r17	; 0x02
    22b2:	09 83       	std	Y+1, r16	; 0x01
    22b4:	8f ef       	ldi	r24, 0xFF	; 255
    22b6:	9f e7       	ldi	r25, 0x7F	; 127
    22b8:	9e 83       	std	Y+6, r25	; 0x06
    22ba:	8d 83       	std	Y+5, r24	; 0x05
    22bc:	ae 01       	movw	r20, r28
    22be:	47 5e       	subi	r20, 0xE7	; 231
    22c0:	5f 4f       	sbci	r21, 0xFF	; 255
    22c2:	6f 89       	ldd	r22, Y+23	; 0x17
    22c4:	78 8d       	ldd	r23, Y+24	; 0x18
    22c6:	ce 01       	movw	r24, r28
    22c8:	01 96       	adiw	r24, 0x01	; 1
    22ca:	0e 94 70 11 	call	0x22e0	; 0x22e0 <vfprintf>
    22ce:	ef 81       	ldd	r30, Y+7	; 0x07
    22d0:	f8 85       	ldd	r31, Y+8	; 0x08
    22d2:	e0 0f       	add	r30, r16
    22d4:	f1 1f       	adc	r31, r17
    22d6:	10 82       	st	Z, r1
    22d8:	2e 96       	adiw	r28, 0x0e	; 14
    22da:	e4 e0       	ldi	r30, 0x04	; 4
    22dc:	0c 94 79 14 	jmp	0x28f2	; 0x28f2 <__epilogue_restores__+0x1c>

000022e0 <vfprintf>:
    22e0:	ac e0       	ldi	r26, 0x0C	; 12
    22e2:	b0 e0       	ldi	r27, 0x00	; 0
    22e4:	e6 e7       	ldi	r30, 0x76	; 118
    22e6:	f1 e1       	ldi	r31, 0x11	; 17
    22e8:	0c 94 4f 14 	jmp	0x289e	; 0x289e <__prologue_saves__>
    22ec:	7c 01       	movw	r14, r24
    22ee:	6b 01       	movw	r12, r22
    22f0:	8a 01       	movw	r16, r20
    22f2:	fc 01       	movw	r30, r24
    22f4:	17 82       	std	Z+7, r1	; 0x07
    22f6:	16 82       	std	Z+6, r1	; 0x06
    22f8:	83 81       	ldd	r24, Z+3	; 0x03
    22fa:	81 ff       	sbrs	r24, 1
    22fc:	bd c1       	rjmp	.+890    	; 0x2678 <vfprintf+0x398>
    22fe:	ce 01       	movw	r24, r28
    2300:	01 96       	adiw	r24, 0x01	; 1
    2302:	4c 01       	movw	r8, r24
    2304:	f7 01       	movw	r30, r14
    2306:	93 81       	ldd	r25, Z+3	; 0x03
    2308:	f6 01       	movw	r30, r12
    230a:	93 fd       	sbrc	r25, 3
    230c:	85 91       	lpm	r24, Z+
    230e:	93 ff       	sbrs	r25, 3
    2310:	81 91       	ld	r24, Z+
    2312:	6f 01       	movw	r12, r30
    2314:	88 23       	and	r24, r24
    2316:	09 f4       	brne	.+2      	; 0x231a <vfprintf+0x3a>
    2318:	ab c1       	rjmp	.+854    	; 0x2670 <vfprintf+0x390>
    231a:	85 32       	cpi	r24, 0x25	; 37
    231c:	39 f4       	brne	.+14     	; 0x232c <vfprintf+0x4c>
    231e:	93 fd       	sbrc	r25, 3
    2320:	85 91       	lpm	r24, Z+
    2322:	93 ff       	sbrs	r25, 3
    2324:	81 91       	ld	r24, Z+
    2326:	6f 01       	movw	r12, r30
    2328:	85 32       	cpi	r24, 0x25	; 37
    232a:	29 f4       	brne	.+10     	; 0x2336 <vfprintf+0x56>
    232c:	b7 01       	movw	r22, r14
    232e:	90 e0       	ldi	r25, 0x00	; 0
    2330:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <fputc>
    2334:	e7 cf       	rjmp	.-50     	; 0x2304 <vfprintf+0x24>
    2336:	51 2c       	mov	r5, r1
    2338:	31 2c       	mov	r3, r1
    233a:	20 e0       	ldi	r18, 0x00	; 0
    233c:	20 32       	cpi	r18, 0x20	; 32
    233e:	a0 f4       	brcc	.+40     	; 0x2368 <vfprintf+0x88>
    2340:	8b 32       	cpi	r24, 0x2B	; 43
    2342:	69 f0       	breq	.+26     	; 0x235e <vfprintf+0x7e>
    2344:	30 f4       	brcc	.+12     	; 0x2352 <vfprintf+0x72>
    2346:	80 32       	cpi	r24, 0x20	; 32
    2348:	59 f0       	breq	.+22     	; 0x2360 <vfprintf+0x80>
    234a:	83 32       	cpi	r24, 0x23	; 35
    234c:	69 f4       	brne	.+26     	; 0x2368 <vfprintf+0x88>
    234e:	20 61       	ori	r18, 0x10	; 16
    2350:	2c c0       	rjmp	.+88     	; 0x23aa <vfprintf+0xca>
    2352:	8d 32       	cpi	r24, 0x2D	; 45
    2354:	39 f0       	breq	.+14     	; 0x2364 <vfprintf+0x84>
    2356:	80 33       	cpi	r24, 0x30	; 48
    2358:	39 f4       	brne	.+14     	; 0x2368 <vfprintf+0x88>
    235a:	21 60       	ori	r18, 0x01	; 1
    235c:	26 c0       	rjmp	.+76     	; 0x23aa <vfprintf+0xca>
    235e:	22 60       	ori	r18, 0x02	; 2
    2360:	24 60       	ori	r18, 0x04	; 4
    2362:	23 c0       	rjmp	.+70     	; 0x23aa <vfprintf+0xca>
    2364:	28 60       	ori	r18, 0x08	; 8
    2366:	21 c0       	rjmp	.+66     	; 0x23aa <vfprintf+0xca>
    2368:	27 fd       	sbrc	r18, 7
    236a:	27 c0       	rjmp	.+78     	; 0x23ba <vfprintf+0xda>
    236c:	30 ed       	ldi	r19, 0xD0	; 208
    236e:	38 0f       	add	r19, r24
    2370:	3a 30       	cpi	r19, 0x0A	; 10
    2372:	78 f4       	brcc	.+30     	; 0x2392 <vfprintf+0xb2>
    2374:	26 ff       	sbrs	r18, 6
    2376:	06 c0       	rjmp	.+12     	; 0x2384 <vfprintf+0xa4>
    2378:	fa e0       	ldi	r31, 0x0A	; 10
    237a:	5f 9e       	mul	r5, r31
    237c:	30 0d       	add	r19, r0
    237e:	11 24       	eor	r1, r1
    2380:	53 2e       	mov	r5, r19
    2382:	13 c0       	rjmp	.+38     	; 0x23aa <vfprintf+0xca>
    2384:	8a e0       	ldi	r24, 0x0A	; 10
    2386:	38 9e       	mul	r3, r24
    2388:	30 0d       	add	r19, r0
    238a:	11 24       	eor	r1, r1
    238c:	33 2e       	mov	r3, r19
    238e:	20 62       	ori	r18, 0x20	; 32
    2390:	0c c0       	rjmp	.+24     	; 0x23aa <vfprintf+0xca>
    2392:	8e 32       	cpi	r24, 0x2E	; 46
    2394:	21 f4       	brne	.+8      	; 0x239e <vfprintf+0xbe>
    2396:	26 fd       	sbrc	r18, 6
    2398:	6b c1       	rjmp	.+726    	; 0x2670 <vfprintf+0x390>
    239a:	20 64       	ori	r18, 0x40	; 64
    239c:	06 c0       	rjmp	.+12     	; 0x23aa <vfprintf+0xca>
    239e:	8c 36       	cpi	r24, 0x6C	; 108
    23a0:	11 f4       	brne	.+4      	; 0x23a6 <vfprintf+0xc6>
    23a2:	20 68       	ori	r18, 0x80	; 128
    23a4:	02 c0       	rjmp	.+4      	; 0x23aa <vfprintf+0xca>
    23a6:	88 36       	cpi	r24, 0x68	; 104
    23a8:	41 f4       	brne	.+16     	; 0x23ba <vfprintf+0xda>
    23aa:	f6 01       	movw	r30, r12
    23ac:	93 fd       	sbrc	r25, 3
    23ae:	85 91       	lpm	r24, Z+
    23b0:	93 ff       	sbrs	r25, 3
    23b2:	81 91       	ld	r24, Z+
    23b4:	6f 01       	movw	r12, r30
    23b6:	81 11       	cpse	r24, r1
    23b8:	c1 cf       	rjmp	.-126    	; 0x233c <vfprintf+0x5c>
    23ba:	98 2f       	mov	r25, r24
    23bc:	9f 7d       	andi	r25, 0xDF	; 223
    23be:	95 54       	subi	r25, 0x45	; 69
    23c0:	93 30       	cpi	r25, 0x03	; 3
    23c2:	28 f4       	brcc	.+10     	; 0x23ce <vfprintf+0xee>
    23c4:	0c 5f       	subi	r16, 0xFC	; 252
    23c6:	1f 4f       	sbci	r17, 0xFF	; 255
    23c8:	ff e3       	ldi	r31, 0x3F	; 63
    23ca:	f9 83       	std	Y+1, r31	; 0x01
    23cc:	0d c0       	rjmp	.+26     	; 0x23e8 <vfprintf+0x108>
    23ce:	83 36       	cpi	r24, 0x63	; 99
    23d0:	31 f0       	breq	.+12     	; 0x23de <vfprintf+0xfe>
    23d2:	83 37       	cpi	r24, 0x73	; 115
    23d4:	71 f0       	breq	.+28     	; 0x23f2 <vfprintf+0x112>
    23d6:	83 35       	cpi	r24, 0x53	; 83
    23d8:	09 f0       	breq	.+2      	; 0x23dc <vfprintf+0xfc>
    23da:	5b c0       	rjmp	.+182    	; 0x2492 <vfprintf+0x1b2>
    23dc:	22 c0       	rjmp	.+68     	; 0x2422 <vfprintf+0x142>
    23de:	f8 01       	movw	r30, r16
    23e0:	80 81       	ld	r24, Z
    23e2:	89 83       	std	Y+1, r24	; 0x01
    23e4:	0e 5f       	subi	r16, 0xFE	; 254
    23e6:	1f 4f       	sbci	r17, 0xFF	; 255
    23e8:	44 24       	eor	r4, r4
    23ea:	43 94       	inc	r4
    23ec:	51 2c       	mov	r5, r1
    23ee:	54 01       	movw	r10, r8
    23f0:	15 c0       	rjmp	.+42     	; 0x241c <vfprintf+0x13c>
    23f2:	38 01       	movw	r6, r16
    23f4:	f2 e0       	ldi	r31, 0x02	; 2
    23f6:	6f 0e       	add	r6, r31
    23f8:	71 1c       	adc	r7, r1
    23fa:	f8 01       	movw	r30, r16
    23fc:	a0 80       	ld	r10, Z
    23fe:	b1 80       	ldd	r11, Z+1	; 0x01
    2400:	26 ff       	sbrs	r18, 6
    2402:	03 c0       	rjmp	.+6      	; 0x240a <vfprintf+0x12a>
    2404:	65 2d       	mov	r22, r5
    2406:	70 e0       	ldi	r23, 0x00	; 0
    2408:	02 c0       	rjmp	.+4      	; 0x240e <vfprintf+0x12e>
    240a:	6f ef       	ldi	r22, 0xFF	; 255
    240c:	7f ef       	ldi	r23, 0xFF	; 255
    240e:	c5 01       	movw	r24, r10
    2410:	2c 87       	std	Y+12, r18	; 0x0c
    2412:	0e 94 50 13 	call	0x26a0	; 0x26a0 <strnlen>
    2416:	2c 01       	movw	r4, r24
    2418:	83 01       	movw	r16, r6
    241a:	2c 85       	ldd	r18, Y+12	; 0x0c
    241c:	2f 77       	andi	r18, 0x7F	; 127
    241e:	22 2e       	mov	r2, r18
    2420:	17 c0       	rjmp	.+46     	; 0x2450 <vfprintf+0x170>
    2422:	38 01       	movw	r6, r16
    2424:	f2 e0       	ldi	r31, 0x02	; 2
    2426:	6f 0e       	add	r6, r31
    2428:	71 1c       	adc	r7, r1
    242a:	f8 01       	movw	r30, r16
    242c:	a0 80       	ld	r10, Z
    242e:	b1 80       	ldd	r11, Z+1	; 0x01
    2430:	26 ff       	sbrs	r18, 6
    2432:	03 c0       	rjmp	.+6      	; 0x243a <vfprintf+0x15a>
    2434:	65 2d       	mov	r22, r5
    2436:	70 e0       	ldi	r23, 0x00	; 0
    2438:	02 c0       	rjmp	.+4      	; 0x243e <vfprintf+0x15e>
    243a:	6f ef       	ldi	r22, 0xFF	; 255
    243c:	7f ef       	ldi	r23, 0xFF	; 255
    243e:	c5 01       	movw	r24, r10
    2440:	2c 87       	std	Y+12, r18	; 0x0c
    2442:	0e 94 45 13 	call	0x268a	; 0x268a <strnlen_P>
    2446:	2c 01       	movw	r4, r24
    2448:	2c 85       	ldd	r18, Y+12	; 0x0c
    244a:	20 68       	ori	r18, 0x80	; 128
    244c:	22 2e       	mov	r2, r18
    244e:	83 01       	movw	r16, r6
    2450:	23 fc       	sbrc	r2, 3
    2452:	1b c0       	rjmp	.+54     	; 0x248a <vfprintf+0x1aa>
    2454:	83 2d       	mov	r24, r3
    2456:	90 e0       	ldi	r25, 0x00	; 0
    2458:	48 16       	cp	r4, r24
    245a:	59 06       	cpc	r5, r25
    245c:	b0 f4       	brcc	.+44     	; 0x248a <vfprintf+0x1aa>
    245e:	b7 01       	movw	r22, r14
    2460:	80 e2       	ldi	r24, 0x20	; 32
    2462:	90 e0       	ldi	r25, 0x00	; 0
    2464:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <fputc>
    2468:	3a 94       	dec	r3
    246a:	f4 cf       	rjmp	.-24     	; 0x2454 <vfprintf+0x174>
    246c:	f5 01       	movw	r30, r10
    246e:	27 fc       	sbrc	r2, 7
    2470:	85 91       	lpm	r24, Z+
    2472:	27 fe       	sbrs	r2, 7
    2474:	81 91       	ld	r24, Z+
    2476:	5f 01       	movw	r10, r30
    2478:	b7 01       	movw	r22, r14
    247a:	90 e0       	ldi	r25, 0x00	; 0
    247c:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <fputc>
    2480:	31 10       	cpse	r3, r1
    2482:	3a 94       	dec	r3
    2484:	f1 e0       	ldi	r31, 0x01	; 1
    2486:	4f 1a       	sub	r4, r31
    2488:	51 08       	sbc	r5, r1
    248a:	41 14       	cp	r4, r1
    248c:	51 04       	cpc	r5, r1
    248e:	71 f7       	brne	.-36     	; 0x246c <vfprintf+0x18c>
    2490:	e5 c0       	rjmp	.+458    	; 0x265c <vfprintf+0x37c>
    2492:	84 36       	cpi	r24, 0x64	; 100
    2494:	11 f0       	breq	.+4      	; 0x249a <vfprintf+0x1ba>
    2496:	89 36       	cpi	r24, 0x69	; 105
    2498:	39 f5       	brne	.+78     	; 0x24e8 <vfprintf+0x208>
    249a:	f8 01       	movw	r30, r16
    249c:	27 ff       	sbrs	r18, 7
    249e:	07 c0       	rjmp	.+14     	; 0x24ae <vfprintf+0x1ce>
    24a0:	60 81       	ld	r22, Z
    24a2:	71 81       	ldd	r23, Z+1	; 0x01
    24a4:	82 81       	ldd	r24, Z+2	; 0x02
    24a6:	93 81       	ldd	r25, Z+3	; 0x03
    24a8:	0c 5f       	subi	r16, 0xFC	; 252
    24aa:	1f 4f       	sbci	r17, 0xFF	; 255
    24ac:	08 c0       	rjmp	.+16     	; 0x24be <vfprintf+0x1de>
    24ae:	60 81       	ld	r22, Z
    24b0:	71 81       	ldd	r23, Z+1	; 0x01
    24b2:	88 27       	eor	r24, r24
    24b4:	77 fd       	sbrc	r23, 7
    24b6:	80 95       	com	r24
    24b8:	98 2f       	mov	r25, r24
    24ba:	0e 5f       	subi	r16, 0xFE	; 254
    24bc:	1f 4f       	sbci	r17, 0xFF	; 255
    24be:	2f 76       	andi	r18, 0x6F	; 111
    24c0:	b2 2e       	mov	r11, r18
    24c2:	97 ff       	sbrs	r25, 7
    24c4:	09 c0       	rjmp	.+18     	; 0x24d8 <vfprintf+0x1f8>
    24c6:	90 95       	com	r25
    24c8:	80 95       	com	r24
    24ca:	70 95       	com	r23
    24cc:	61 95       	neg	r22
    24ce:	7f 4f       	sbci	r23, 0xFF	; 255
    24d0:	8f 4f       	sbci	r24, 0xFF	; 255
    24d2:	9f 4f       	sbci	r25, 0xFF	; 255
    24d4:	20 68       	ori	r18, 0x80	; 128
    24d6:	b2 2e       	mov	r11, r18
    24d8:	2a e0       	ldi	r18, 0x0A	; 10
    24da:	30 e0       	ldi	r19, 0x00	; 0
    24dc:	a4 01       	movw	r20, r8
    24de:	0e 94 8d 13 	call	0x271a	; 0x271a <__ultoa_invert>
    24e2:	a8 2e       	mov	r10, r24
    24e4:	a8 18       	sub	r10, r8
    24e6:	44 c0       	rjmp	.+136    	; 0x2570 <vfprintf+0x290>
    24e8:	85 37       	cpi	r24, 0x75	; 117
    24ea:	29 f4       	brne	.+10     	; 0x24f6 <vfprintf+0x216>
    24ec:	2f 7e       	andi	r18, 0xEF	; 239
    24ee:	b2 2e       	mov	r11, r18
    24f0:	2a e0       	ldi	r18, 0x0A	; 10
    24f2:	30 e0       	ldi	r19, 0x00	; 0
    24f4:	25 c0       	rjmp	.+74     	; 0x2540 <vfprintf+0x260>
    24f6:	f2 2f       	mov	r31, r18
    24f8:	f9 7f       	andi	r31, 0xF9	; 249
    24fa:	bf 2e       	mov	r11, r31
    24fc:	8f 36       	cpi	r24, 0x6F	; 111
    24fe:	c1 f0       	breq	.+48     	; 0x2530 <vfprintf+0x250>
    2500:	18 f4       	brcc	.+6      	; 0x2508 <vfprintf+0x228>
    2502:	88 35       	cpi	r24, 0x58	; 88
    2504:	79 f0       	breq	.+30     	; 0x2524 <vfprintf+0x244>
    2506:	b4 c0       	rjmp	.+360    	; 0x2670 <vfprintf+0x390>
    2508:	80 37       	cpi	r24, 0x70	; 112
    250a:	19 f0       	breq	.+6      	; 0x2512 <vfprintf+0x232>
    250c:	88 37       	cpi	r24, 0x78	; 120
    250e:	21 f0       	breq	.+8      	; 0x2518 <vfprintf+0x238>
    2510:	af c0       	rjmp	.+350    	; 0x2670 <vfprintf+0x390>
    2512:	2f 2f       	mov	r18, r31
    2514:	20 61       	ori	r18, 0x10	; 16
    2516:	b2 2e       	mov	r11, r18
    2518:	b4 fe       	sbrs	r11, 4
    251a:	0d c0       	rjmp	.+26     	; 0x2536 <vfprintf+0x256>
    251c:	8b 2d       	mov	r24, r11
    251e:	84 60       	ori	r24, 0x04	; 4
    2520:	b8 2e       	mov	r11, r24
    2522:	09 c0       	rjmp	.+18     	; 0x2536 <vfprintf+0x256>
    2524:	24 ff       	sbrs	r18, 4
    2526:	0a c0       	rjmp	.+20     	; 0x253c <vfprintf+0x25c>
    2528:	9f 2f       	mov	r25, r31
    252a:	96 60       	ori	r25, 0x06	; 6
    252c:	b9 2e       	mov	r11, r25
    252e:	06 c0       	rjmp	.+12     	; 0x253c <vfprintf+0x25c>
    2530:	28 e0       	ldi	r18, 0x08	; 8
    2532:	30 e0       	ldi	r19, 0x00	; 0
    2534:	05 c0       	rjmp	.+10     	; 0x2540 <vfprintf+0x260>
    2536:	20 e1       	ldi	r18, 0x10	; 16
    2538:	30 e0       	ldi	r19, 0x00	; 0
    253a:	02 c0       	rjmp	.+4      	; 0x2540 <vfprintf+0x260>
    253c:	20 e1       	ldi	r18, 0x10	; 16
    253e:	32 e0       	ldi	r19, 0x02	; 2
    2540:	f8 01       	movw	r30, r16
    2542:	b7 fe       	sbrs	r11, 7
    2544:	07 c0       	rjmp	.+14     	; 0x2554 <vfprintf+0x274>
    2546:	60 81       	ld	r22, Z
    2548:	71 81       	ldd	r23, Z+1	; 0x01
    254a:	82 81       	ldd	r24, Z+2	; 0x02
    254c:	93 81       	ldd	r25, Z+3	; 0x03
    254e:	0c 5f       	subi	r16, 0xFC	; 252
    2550:	1f 4f       	sbci	r17, 0xFF	; 255
    2552:	06 c0       	rjmp	.+12     	; 0x2560 <vfprintf+0x280>
    2554:	60 81       	ld	r22, Z
    2556:	71 81       	ldd	r23, Z+1	; 0x01
    2558:	80 e0       	ldi	r24, 0x00	; 0
    255a:	90 e0       	ldi	r25, 0x00	; 0
    255c:	0e 5f       	subi	r16, 0xFE	; 254
    255e:	1f 4f       	sbci	r17, 0xFF	; 255
    2560:	a4 01       	movw	r20, r8
    2562:	0e 94 8d 13 	call	0x271a	; 0x271a <__ultoa_invert>
    2566:	a8 2e       	mov	r10, r24
    2568:	a8 18       	sub	r10, r8
    256a:	fb 2d       	mov	r31, r11
    256c:	ff 77       	andi	r31, 0x7F	; 127
    256e:	bf 2e       	mov	r11, r31
    2570:	b6 fe       	sbrs	r11, 6
    2572:	0b c0       	rjmp	.+22     	; 0x258a <vfprintf+0x2aa>
    2574:	2b 2d       	mov	r18, r11
    2576:	2e 7f       	andi	r18, 0xFE	; 254
    2578:	a5 14       	cp	r10, r5
    257a:	50 f4       	brcc	.+20     	; 0x2590 <vfprintf+0x2b0>
    257c:	b4 fe       	sbrs	r11, 4
    257e:	0a c0       	rjmp	.+20     	; 0x2594 <vfprintf+0x2b4>
    2580:	b2 fc       	sbrc	r11, 2
    2582:	08 c0       	rjmp	.+16     	; 0x2594 <vfprintf+0x2b4>
    2584:	2b 2d       	mov	r18, r11
    2586:	2e 7e       	andi	r18, 0xEE	; 238
    2588:	05 c0       	rjmp	.+10     	; 0x2594 <vfprintf+0x2b4>
    258a:	7a 2c       	mov	r7, r10
    258c:	2b 2d       	mov	r18, r11
    258e:	03 c0       	rjmp	.+6      	; 0x2596 <vfprintf+0x2b6>
    2590:	7a 2c       	mov	r7, r10
    2592:	01 c0       	rjmp	.+2      	; 0x2596 <vfprintf+0x2b6>
    2594:	75 2c       	mov	r7, r5
    2596:	24 ff       	sbrs	r18, 4
    2598:	0d c0       	rjmp	.+26     	; 0x25b4 <vfprintf+0x2d4>
    259a:	fe 01       	movw	r30, r28
    259c:	ea 0d       	add	r30, r10
    259e:	f1 1d       	adc	r31, r1
    25a0:	80 81       	ld	r24, Z
    25a2:	80 33       	cpi	r24, 0x30	; 48
    25a4:	11 f4       	brne	.+4      	; 0x25aa <vfprintf+0x2ca>
    25a6:	29 7e       	andi	r18, 0xE9	; 233
    25a8:	09 c0       	rjmp	.+18     	; 0x25bc <vfprintf+0x2dc>
    25aa:	22 ff       	sbrs	r18, 2
    25ac:	06 c0       	rjmp	.+12     	; 0x25ba <vfprintf+0x2da>
    25ae:	73 94       	inc	r7
    25b0:	73 94       	inc	r7
    25b2:	04 c0       	rjmp	.+8      	; 0x25bc <vfprintf+0x2dc>
    25b4:	82 2f       	mov	r24, r18
    25b6:	86 78       	andi	r24, 0x86	; 134
    25b8:	09 f0       	breq	.+2      	; 0x25bc <vfprintf+0x2dc>
    25ba:	73 94       	inc	r7
    25bc:	23 fd       	sbrc	r18, 3
    25be:	13 c0       	rjmp	.+38     	; 0x25e6 <vfprintf+0x306>
    25c0:	20 ff       	sbrs	r18, 0
    25c2:	06 c0       	rjmp	.+12     	; 0x25d0 <vfprintf+0x2f0>
    25c4:	5a 2c       	mov	r5, r10
    25c6:	73 14       	cp	r7, r3
    25c8:	18 f4       	brcc	.+6      	; 0x25d0 <vfprintf+0x2f0>
    25ca:	53 0c       	add	r5, r3
    25cc:	57 18       	sub	r5, r7
    25ce:	73 2c       	mov	r7, r3
    25d0:	73 14       	cp	r7, r3
    25d2:	68 f4       	brcc	.+26     	; 0x25ee <vfprintf+0x30e>
    25d4:	b7 01       	movw	r22, r14
    25d6:	80 e2       	ldi	r24, 0x20	; 32
    25d8:	90 e0       	ldi	r25, 0x00	; 0
    25da:	2c 87       	std	Y+12, r18	; 0x0c
    25dc:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <fputc>
    25e0:	73 94       	inc	r7
    25e2:	2c 85       	ldd	r18, Y+12	; 0x0c
    25e4:	f5 cf       	rjmp	.-22     	; 0x25d0 <vfprintf+0x2f0>
    25e6:	73 14       	cp	r7, r3
    25e8:	10 f4       	brcc	.+4      	; 0x25ee <vfprintf+0x30e>
    25ea:	37 18       	sub	r3, r7
    25ec:	01 c0       	rjmp	.+2      	; 0x25f0 <vfprintf+0x310>
    25ee:	31 2c       	mov	r3, r1
    25f0:	24 ff       	sbrs	r18, 4
    25f2:	12 c0       	rjmp	.+36     	; 0x2618 <vfprintf+0x338>
    25f4:	b7 01       	movw	r22, r14
    25f6:	80 e3       	ldi	r24, 0x30	; 48
    25f8:	90 e0       	ldi	r25, 0x00	; 0
    25fa:	2c 87       	std	Y+12, r18	; 0x0c
    25fc:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <fputc>
    2600:	2c 85       	ldd	r18, Y+12	; 0x0c
    2602:	22 ff       	sbrs	r18, 2
    2604:	17 c0       	rjmp	.+46     	; 0x2634 <vfprintf+0x354>
    2606:	21 ff       	sbrs	r18, 1
    2608:	03 c0       	rjmp	.+6      	; 0x2610 <vfprintf+0x330>
    260a:	88 e5       	ldi	r24, 0x58	; 88
    260c:	90 e0       	ldi	r25, 0x00	; 0
    260e:	02 c0       	rjmp	.+4      	; 0x2614 <vfprintf+0x334>
    2610:	88 e7       	ldi	r24, 0x78	; 120
    2612:	90 e0       	ldi	r25, 0x00	; 0
    2614:	b7 01       	movw	r22, r14
    2616:	0c c0       	rjmp	.+24     	; 0x2630 <vfprintf+0x350>
    2618:	82 2f       	mov	r24, r18
    261a:	86 78       	andi	r24, 0x86	; 134
    261c:	59 f0       	breq	.+22     	; 0x2634 <vfprintf+0x354>
    261e:	21 fd       	sbrc	r18, 1
    2620:	02 c0       	rjmp	.+4      	; 0x2626 <vfprintf+0x346>
    2622:	80 e2       	ldi	r24, 0x20	; 32
    2624:	01 c0       	rjmp	.+2      	; 0x2628 <vfprintf+0x348>
    2626:	8b e2       	ldi	r24, 0x2B	; 43
    2628:	27 fd       	sbrc	r18, 7
    262a:	8d e2       	ldi	r24, 0x2D	; 45
    262c:	b7 01       	movw	r22, r14
    262e:	90 e0       	ldi	r25, 0x00	; 0
    2630:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <fputc>
    2634:	a5 14       	cp	r10, r5
    2636:	38 f4       	brcc	.+14     	; 0x2646 <vfprintf+0x366>
    2638:	b7 01       	movw	r22, r14
    263a:	80 e3       	ldi	r24, 0x30	; 48
    263c:	90 e0       	ldi	r25, 0x00	; 0
    263e:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <fputc>
    2642:	5a 94       	dec	r5
    2644:	f7 cf       	rjmp	.-18     	; 0x2634 <vfprintf+0x354>
    2646:	aa 94       	dec	r10
    2648:	f4 01       	movw	r30, r8
    264a:	ea 0d       	add	r30, r10
    264c:	f1 1d       	adc	r31, r1
    264e:	80 81       	ld	r24, Z
    2650:	b7 01       	movw	r22, r14
    2652:	90 e0       	ldi	r25, 0x00	; 0
    2654:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <fputc>
    2658:	a1 10       	cpse	r10, r1
    265a:	f5 cf       	rjmp	.-22     	; 0x2646 <vfprintf+0x366>
    265c:	33 20       	and	r3, r3
    265e:	09 f4       	brne	.+2      	; 0x2662 <vfprintf+0x382>
    2660:	51 ce       	rjmp	.-862    	; 0x2304 <vfprintf+0x24>
    2662:	b7 01       	movw	r22, r14
    2664:	80 e2       	ldi	r24, 0x20	; 32
    2666:	90 e0       	ldi	r25, 0x00	; 0
    2668:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <fputc>
    266c:	3a 94       	dec	r3
    266e:	f6 cf       	rjmp	.-20     	; 0x265c <vfprintf+0x37c>
    2670:	f7 01       	movw	r30, r14
    2672:	86 81       	ldd	r24, Z+6	; 0x06
    2674:	97 81       	ldd	r25, Z+7	; 0x07
    2676:	02 c0       	rjmp	.+4      	; 0x267c <vfprintf+0x39c>
    2678:	8f ef       	ldi	r24, 0xFF	; 255
    267a:	9f ef       	ldi	r25, 0xFF	; 255
    267c:	2c 96       	adiw	r28, 0x0c	; 12
    267e:	e2 e1       	ldi	r30, 0x12	; 18
    2680:	0c 94 6b 14 	jmp	0x28d6	; 0x28d6 <__epilogue_restores__>

00002684 <__ctype_isfalse>:
    2684:	99 27       	eor	r25, r25
    2686:	88 27       	eor	r24, r24

00002688 <__ctype_istrue>:
    2688:	08 95       	ret

0000268a <strnlen_P>:
    268a:	fc 01       	movw	r30, r24
    268c:	05 90       	lpm	r0, Z+
    268e:	61 50       	subi	r22, 0x01	; 1
    2690:	70 40       	sbci	r23, 0x00	; 0
    2692:	01 10       	cpse	r0, r1
    2694:	d8 f7       	brcc	.-10     	; 0x268c <strnlen_P+0x2>
    2696:	80 95       	com	r24
    2698:	90 95       	com	r25
    269a:	8e 0f       	add	r24, r30
    269c:	9f 1f       	adc	r25, r31
    269e:	08 95       	ret

000026a0 <strnlen>:
    26a0:	fc 01       	movw	r30, r24
    26a2:	61 50       	subi	r22, 0x01	; 1
    26a4:	70 40       	sbci	r23, 0x00	; 0
    26a6:	01 90       	ld	r0, Z+
    26a8:	01 10       	cpse	r0, r1
    26aa:	d8 f7       	brcc	.-10     	; 0x26a2 <strnlen+0x2>
    26ac:	80 95       	com	r24
    26ae:	90 95       	com	r25
    26b0:	8e 0f       	add	r24, r30
    26b2:	9f 1f       	adc	r25, r31
    26b4:	08 95       	ret

000026b6 <fputc>:
    26b6:	0f 93       	push	r16
    26b8:	1f 93       	push	r17
    26ba:	cf 93       	push	r28
    26bc:	df 93       	push	r29
    26be:	18 2f       	mov	r17, r24
    26c0:	09 2f       	mov	r16, r25
    26c2:	eb 01       	movw	r28, r22
    26c4:	8b 81       	ldd	r24, Y+3	; 0x03
    26c6:	81 fd       	sbrc	r24, 1
    26c8:	03 c0       	rjmp	.+6      	; 0x26d0 <fputc+0x1a>
    26ca:	8f ef       	ldi	r24, 0xFF	; 255
    26cc:	9f ef       	ldi	r25, 0xFF	; 255
    26ce:	20 c0       	rjmp	.+64     	; 0x2710 <fputc+0x5a>
    26d0:	82 ff       	sbrs	r24, 2
    26d2:	10 c0       	rjmp	.+32     	; 0x26f4 <fputc+0x3e>
    26d4:	4e 81       	ldd	r20, Y+6	; 0x06
    26d6:	5f 81       	ldd	r21, Y+7	; 0x07
    26d8:	2c 81       	ldd	r18, Y+4	; 0x04
    26da:	3d 81       	ldd	r19, Y+5	; 0x05
    26dc:	42 17       	cp	r20, r18
    26de:	53 07       	cpc	r21, r19
    26e0:	7c f4       	brge	.+30     	; 0x2700 <fputc+0x4a>
    26e2:	e8 81       	ld	r30, Y
    26e4:	f9 81       	ldd	r31, Y+1	; 0x01
    26e6:	9f 01       	movw	r18, r30
    26e8:	2f 5f       	subi	r18, 0xFF	; 255
    26ea:	3f 4f       	sbci	r19, 0xFF	; 255
    26ec:	39 83       	std	Y+1, r19	; 0x01
    26ee:	28 83       	st	Y, r18
    26f0:	10 83       	st	Z, r17
    26f2:	06 c0       	rjmp	.+12     	; 0x2700 <fputc+0x4a>
    26f4:	e8 85       	ldd	r30, Y+8	; 0x08
    26f6:	f9 85       	ldd	r31, Y+9	; 0x09
    26f8:	81 2f       	mov	r24, r17
    26fa:	09 95       	icall
    26fc:	89 2b       	or	r24, r25
    26fe:	29 f7       	brne	.-54     	; 0x26ca <fputc+0x14>
    2700:	2e 81       	ldd	r18, Y+6	; 0x06
    2702:	3f 81       	ldd	r19, Y+7	; 0x07
    2704:	2f 5f       	subi	r18, 0xFF	; 255
    2706:	3f 4f       	sbci	r19, 0xFF	; 255
    2708:	3f 83       	std	Y+7, r19	; 0x07
    270a:	2e 83       	std	Y+6, r18	; 0x06
    270c:	81 2f       	mov	r24, r17
    270e:	90 2f       	mov	r25, r16
    2710:	df 91       	pop	r29
    2712:	cf 91       	pop	r28
    2714:	1f 91       	pop	r17
    2716:	0f 91       	pop	r16
    2718:	08 95       	ret

0000271a <__ultoa_invert>:
    271a:	fa 01       	movw	r30, r20
    271c:	aa 27       	eor	r26, r26
    271e:	28 30       	cpi	r18, 0x08	; 8
    2720:	51 f1       	breq	.+84     	; 0x2776 <__ultoa_invert+0x5c>
    2722:	20 31       	cpi	r18, 0x10	; 16
    2724:	81 f1       	breq	.+96     	; 0x2786 <__ultoa_invert+0x6c>
    2726:	e8 94       	clt
    2728:	6f 93       	push	r22
    272a:	6e 7f       	andi	r22, 0xFE	; 254
    272c:	6e 5f       	subi	r22, 0xFE	; 254
    272e:	7f 4f       	sbci	r23, 0xFF	; 255
    2730:	8f 4f       	sbci	r24, 0xFF	; 255
    2732:	9f 4f       	sbci	r25, 0xFF	; 255
    2734:	af 4f       	sbci	r26, 0xFF	; 255
    2736:	b1 e0       	ldi	r27, 0x01	; 1
    2738:	3e d0       	rcall	.+124    	; 0x27b6 <__ultoa_invert+0x9c>
    273a:	b4 e0       	ldi	r27, 0x04	; 4
    273c:	3c d0       	rcall	.+120    	; 0x27b6 <__ultoa_invert+0x9c>
    273e:	67 0f       	add	r22, r23
    2740:	78 1f       	adc	r23, r24
    2742:	89 1f       	adc	r24, r25
    2744:	9a 1f       	adc	r25, r26
    2746:	a1 1d       	adc	r26, r1
    2748:	68 0f       	add	r22, r24
    274a:	79 1f       	adc	r23, r25
    274c:	8a 1f       	adc	r24, r26
    274e:	91 1d       	adc	r25, r1
    2750:	a1 1d       	adc	r26, r1
    2752:	6a 0f       	add	r22, r26
    2754:	71 1d       	adc	r23, r1
    2756:	81 1d       	adc	r24, r1
    2758:	91 1d       	adc	r25, r1
    275a:	a1 1d       	adc	r26, r1
    275c:	20 d0       	rcall	.+64     	; 0x279e <__ultoa_invert+0x84>
    275e:	09 f4       	brne	.+2      	; 0x2762 <__ultoa_invert+0x48>
    2760:	68 94       	set
    2762:	3f 91       	pop	r19
    2764:	2a e0       	ldi	r18, 0x0A	; 10
    2766:	26 9f       	mul	r18, r22
    2768:	11 24       	eor	r1, r1
    276a:	30 19       	sub	r19, r0
    276c:	30 5d       	subi	r19, 0xD0	; 208
    276e:	31 93       	st	Z+, r19
    2770:	de f6       	brtc	.-74     	; 0x2728 <__ultoa_invert+0xe>
    2772:	cf 01       	movw	r24, r30
    2774:	08 95       	ret
    2776:	46 2f       	mov	r20, r22
    2778:	47 70       	andi	r20, 0x07	; 7
    277a:	40 5d       	subi	r20, 0xD0	; 208
    277c:	41 93       	st	Z+, r20
    277e:	b3 e0       	ldi	r27, 0x03	; 3
    2780:	0f d0       	rcall	.+30     	; 0x27a0 <__ultoa_invert+0x86>
    2782:	c9 f7       	brne	.-14     	; 0x2776 <__ultoa_invert+0x5c>
    2784:	f6 cf       	rjmp	.-20     	; 0x2772 <__ultoa_invert+0x58>
    2786:	46 2f       	mov	r20, r22
    2788:	4f 70       	andi	r20, 0x0F	; 15
    278a:	40 5d       	subi	r20, 0xD0	; 208
    278c:	4a 33       	cpi	r20, 0x3A	; 58
    278e:	18 f0       	brcs	.+6      	; 0x2796 <__ultoa_invert+0x7c>
    2790:	49 5d       	subi	r20, 0xD9	; 217
    2792:	31 fd       	sbrc	r19, 1
    2794:	40 52       	subi	r20, 0x20	; 32
    2796:	41 93       	st	Z+, r20
    2798:	02 d0       	rcall	.+4      	; 0x279e <__ultoa_invert+0x84>
    279a:	a9 f7       	brne	.-22     	; 0x2786 <__ultoa_invert+0x6c>
    279c:	ea cf       	rjmp	.-44     	; 0x2772 <__ultoa_invert+0x58>
    279e:	b4 e0       	ldi	r27, 0x04	; 4
    27a0:	a6 95       	lsr	r26
    27a2:	97 95       	ror	r25
    27a4:	87 95       	ror	r24
    27a6:	77 95       	ror	r23
    27a8:	67 95       	ror	r22
    27aa:	ba 95       	dec	r27
    27ac:	c9 f7       	brne	.-14     	; 0x27a0 <__ultoa_invert+0x86>
    27ae:	00 97       	sbiw	r24, 0x00	; 0
    27b0:	61 05       	cpc	r22, r1
    27b2:	71 05       	cpc	r23, r1
    27b4:	08 95       	ret
    27b6:	9b 01       	movw	r18, r22
    27b8:	ac 01       	movw	r20, r24
    27ba:	0a 2e       	mov	r0, r26
    27bc:	06 94       	lsr	r0
    27be:	57 95       	ror	r21
    27c0:	47 95       	ror	r20
    27c2:	37 95       	ror	r19
    27c4:	27 95       	ror	r18
    27c6:	ba 95       	dec	r27
    27c8:	c9 f7       	brne	.-14     	; 0x27bc <__ultoa_invert+0xa2>
    27ca:	62 0f       	add	r22, r18
    27cc:	73 1f       	adc	r23, r19
    27ce:	84 1f       	adc	r24, r20
    27d0:	95 1f       	adc	r25, r21
    27d2:	a0 1d       	adc	r26, r0
    27d4:	08 95       	ret

000027d6 <__mulsi3>:
    27d6:	db 01       	movw	r26, r22
    27d8:	8f 93       	push	r24
    27da:	9f 93       	push	r25
    27dc:	0e 94 3c 14 	call	0x2878	; 0x2878 <__muluhisi3>
    27e0:	bf 91       	pop	r27
    27e2:	af 91       	pop	r26
    27e4:	a2 9f       	mul	r26, r18
    27e6:	80 0d       	add	r24, r0
    27e8:	91 1d       	adc	r25, r1
    27ea:	a3 9f       	mul	r26, r19
    27ec:	90 0d       	add	r25, r0
    27ee:	b2 9f       	mul	r27, r18
    27f0:	90 0d       	add	r25, r0
    27f2:	11 24       	eor	r1, r1
    27f4:	08 95       	ret

000027f6 <__udivmodsi4>:
    27f6:	a1 e2       	ldi	r26, 0x21	; 33
    27f8:	1a 2e       	mov	r1, r26
    27fa:	aa 1b       	sub	r26, r26
    27fc:	bb 1b       	sub	r27, r27
    27fe:	fd 01       	movw	r30, r26
    2800:	0d c0       	rjmp	.+26     	; 0x281c <__udivmodsi4_ep>

00002802 <__udivmodsi4_loop>:
    2802:	aa 1f       	adc	r26, r26
    2804:	bb 1f       	adc	r27, r27
    2806:	ee 1f       	adc	r30, r30
    2808:	ff 1f       	adc	r31, r31
    280a:	a2 17       	cp	r26, r18
    280c:	b3 07       	cpc	r27, r19
    280e:	e4 07       	cpc	r30, r20
    2810:	f5 07       	cpc	r31, r21
    2812:	20 f0       	brcs	.+8      	; 0x281c <__udivmodsi4_ep>
    2814:	a2 1b       	sub	r26, r18
    2816:	b3 0b       	sbc	r27, r19
    2818:	e4 0b       	sbc	r30, r20
    281a:	f5 0b       	sbc	r31, r21

0000281c <__udivmodsi4_ep>:
    281c:	66 1f       	adc	r22, r22
    281e:	77 1f       	adc	r23, r23
    2820:	88 1f       	adc	r24, r24
    2822:	99 1f       	adc	r25, r25
    2824:	1a 94       	dec	r1
    2826:	69 f7       	brne	.-38     	; 0x2802 <__udivmodsi4_loop>
    2828:	60 95       	com	r22
    282a:	70 95       	com	r23
    282c:	80 95       	com	r24
    282e:	90 95       	com	r25
    2830:	9b 01       	movw	r18, r22
    2832:	ac 01       	movw	r20, r24
    2834:	bd 01       	movw	r22, r26
    2836:	cf 01       	movw	r24, r30
    2838:	08 95       	ret

0000283a <__divmodsi4>:
    283a:	05 2e       	mov	r0, r21
    283c:	97 fb       	bst	r25, 7
    283e:	1e f4       	brtc	.+6      	; 0x2846 <__divmodsi4+0xc>
    2840:	00 94       	com	r0
    2842:	0e 94 34 14 	call	0x2868	; 0x2868 <__negsi2>
    2846:	57 fd       	sbrc	r21, 7
    2848:	07 d0       	rcall	.+14     	; 0x2858 <__divmodsi4_neg2>
    284a:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <__udivmodsi4>
    284e:	07 fc       	sbrc	r0, 7
    2850:	03 d0       	rcall	.+6      	; 0x2858 <__divmodsi4_neg2>
    2852:	4e f4       	brtc	.+18     	; 0x2866 <__divmodsi4_exit>
    2854:	0c 94 34 14 	jmp	0x2868	; 0x2868 <__negsi2>

00002858 <__divmodsi4_neg2>:
    2858:	50 95       	com	r21
    285a:	40 95       	com	r20
    285c:	30 95       	com	r19
    285e:	21 95       	neg	r18
    2860:	3f 4f       	sbci	r19, 0xFF	; 255
    2862:	4f 4f       	sbci	r20, 0xFF	; 255
    2864:	5f 4f       	sbci	r21, 0xFF	; 255

00002866 <__divmodsi4_exit>:
    2866:	08 95       	ret

00002868 <__negsi2>:
    2868:	90 95       	com	r25
    286a:	80 95       	com	r24
    286c:	70 95       	com	r23
    286e:	61 95       	neg	r22
    2870:	7f 4f       	sbci	r23, 0xFF	; 255
    2872:	8f 4f       	sbci	r24, 0xFF	; 255
    2874:	9f 4f       	sbci	r25, 0xFF	; 255
    2876:	08 95       	ret

00002878 <__muluhisi3>:
    2878:	0e 94 86 14 	call	0x290c	; 0x290c <__umulhisi3>
    287c:	a5 9f       	mul	r26, r21
    287e:	90 0d       	add	r25, r0
    2880:	b4 9f       	mul	r27, r20
    2882:	90 0d       	add	r25, r0
    2884:	a4 9f       	mul	r26, r20
    2886:	80 0d       	add	r24, r0
    2888:	91 1d       	adc	r25, r1
    288a:	11 24       	eor	r1, r1
    288c:	08 95       	ret

0000288e <__mulshisi3>:
    288e:	b7 ff       	sbrs	r27, 7
    2890:	0c 94 3c 14 	jmp	0x2878	; 0x2878 <__muluhisi3>

00002894 <__mulohisi3>:
    2894:	0e 94 3c 14 	call	0x2878	; 0x2878 <__muluhisi3>
    2898:	82 1b       	sub	r24, r18
    289a:	93 0b       	sbc	r25, r19
    289c:	08 95       	ret

0000289e <__prologue_saves__>:
    289e:	2f 92       	push	r2
    28a0:	3f 92       	push	r3
    28a2:	4f 92       	push	r4
    28a4:	5f 92       	push	r5
    28a6:	6f 92       	push	r6
    28a8:	7f 92       	push	r7
    28aa:	8f 92       	push	r8
    28ac:	9f 92       	push	r9
    28ae:	af 92       	push	r10
    28b0:	bf 92       	push	r11
    28b2:	cf 92       	push	r12
    28b4:	df 92       	push	r13
    28b6:	ef 92       	push	r14
    28b8:	ff 92       	push	r15
    28ba:	0f 93       	push	r16
    28bc:	1f 93       	push	r17
    28be:	cf 93       	push	r28
    28c0:	df 93       	push	r29
    28c2:	cd b7       	in	r28, 0x3d	; 61
    28c4:	de b7       	in	r29, 0x3e	; 62
    28c6:	ca 1b       	sub	r28, r26
    28c8:	db 0b       	sbc	r29, r27
    28ca:	0f b6       	in	r0, 0x3f	; 63
    28cc:	f8 94       	cli
    28ce:	de bf       	out	0x3e, r29	; 62
    28d0:	0f be       	out	0x3f, r0	; 63
    28d2:	cd bf       	out	0x3d, r28	; 61
    28d4:	09 94       	ijmp

000028d6 <__epilogue_restores__>:
    28d6:	2a 88       	ldd	r2, Y+18	; 0x12
    28d8:	39 88       	ldd	r3, Y+17	; 0x11
    28da:	48 88       	ldd	r4, Y+16	; 0x10
    28dc:	5f 84       	ldd	r5, Y+15	; 0x0f
    28de:	6e 84       	ldd	r6, Y+14	; 0x0e
    28e0:	7d 84       	ldd	r7, Y+13	; 0x0d
    28e2:	8c 84       	ldd	r8, Y+12	; 0x0c
    28e4:	9b 84       	ldd	r9, Y+11	; 0x0b
    28e6:	aa 84       	ldd	r10, Y+10	; 0x0a
    28e8:	b9 84       	ldd	r11, Y+9	; 0x09
    28ea:	c8 84       	ldd	r12, Y+8	; 0x08
    28ec:	df 80       	ldd	r13, Y+7	; 0x07
    28ee:	ee 80       	ldd	r14, Y+6	; 0x06
    28f0:	fd 80       	ldd	r15, Y+5	; 0x05
    28f2:	0c 81       	ldd	r16, Y+4	; 0x04
    28f4:	1b 81       	ldd	r17, Y+3	; 0x03
    28f6:	aa 81       	ldd	r26, Y+2	; 0x02
    28f8:	b9 81       	ldd	r27, Y+1	; 0x01
    28fa:	ce 0f       	add	r28, r30
    28fc:	d1 1d       	adc	r29, r1
    28fe:	0f b6       	in	r0, 0x3f	; 63
    2900:	f8 94       	cli
    2902:	de bf       	out	0x3e, r29	; 62
    2904:	0f be       	out	0x3f, r0	; 63
    2906:	cd bf       	out	0x3d, r28	; 61
    2908:	ed 01       	movw	r28, r26
    290a:	08 95       	ret

0000290c <__umulhisi3>:
    290c:	a2 9f       	mul	r26, r18
    290e:	b0 01       	movw	r22, r0
    2910:	b3 9f       	mul	r27, r19
    2912:	c0 01       	movw	r24, r0
    2914:	a3 9f       	mul	r26, r19
    2916:	70 0d       	add	r23, r0
    2918:	81 1d       	adc	r24, r1
    291a:	11 24       	eor	r1, r1
    291c:	91 1d       	adc	r25, r1
    291e:	b2 9f       	mul	r27, r18
    2920:	70 0d       	add	r23, r0
    2922:	81 1d       	adc	r24, r1
    2924:	11 24       	eor	r1, r1
    2926:	91 1d       	adc	r25, r1
    2928:	08 95       	ret

0000292a <_exit>:
    292a:	f8 94       	cli

0000292c <__stop_program>:
    292c:	ff cf       	rjmp	.-2      	; 0x292c <__stop_program>
